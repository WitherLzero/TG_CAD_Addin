// Created by Microsoft (R) C/C++ Compiler Version 14.32.31332.0 (1f6ada9e).
//
// D:\visualstudio\project\TGCAD\TGCAD\x64\Debug\tgdraft.tli
//
// Wrapper implementations for type library tgdraft.tlb
// compiler-generated file - DO NOT EDIT!


//
// dispinterface BlockView wrapper method implementations
//

#pragma implementation_key(1)
inline TGFramework::ApplicationPtr TGDraft::BlockView::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2)
inline IDispatchPtr TGDraft::BlockView::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3)
inline long TGDraft::BlockView::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4)
inline void TGDraft::BlockView::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5)
inline _bstr_t TGDraft::BlockView::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6)
inline IDispatchPtr TGDraft::BlockView::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7)
inline HRESULT TGDraft::BlockView::Delete ( ) {
    return _com_dispatch_method(this, 0x6c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(8)
inline TGFrameworkSupport::Lines2dPtr TGDraft::BlockView::GetLines2d ( ) {
    struct TGFrameworkSupport::Lines2d * _result = 0;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::Lines2dPtr(_result, false);
}

#pragma implementation_key(9)
inline TGFrameworkSupport::Circles2dPtr TGDraft::BlockView::GetCircles2d ( ) {
    struct TGFrameworkSupport::Circles2d * _result = 0;
    _com_dispatch_method(this, 0x6e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::Circles2dPtr(_result, false);
}

#pragma implementation_key(10)
inline TGFrameworkSupport::Arcs2dPtr TGDraft::BlockView::GetArcs2d ( ) {
    struct TGFrameworkSupport::Arcs2d * _result = 0;
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::Arcs2dPtr(_result, false);
}

#pragma implementation_key(11)
inline TGFrameworkSupport::Ellipses2dPtr TGDraft::BlockView::GetEllipses2d ( ) {
    struct TGFrameworkSupport::Ellipses2d * _result = 0;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::Ellipses2dPtr(_result, false);
}

#pragma implementation_key(12)
inline TGFrameworkSupport::BSplineCurves2dPtr TGDraft::BlockView::GetBsplineCurves2d ( ) {
    struct TGFrameworkSupport::BSplineCurves2d * _result = 0;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::BSplineCurves2dPtr(_result, false);
}

#pragma implementation_key(13)
inline TGFrameworkSupport::Points2dPtr TGDraft::BlockView::GetPoints2d ( ) {
    struct TGFrameworkSupport::Points2d * _result = 0;
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::Points2dPtr(_result, false);
}

#pragma implementation_key(14)
inline TGFrameworkSupport::EllipticalArcs2dPtr TGDraft::BlockView::GetEllipticalArcs2d ( ) {
    struct TGFrameworkSupport::EllipticalArcs2d * _result = 0;
    _com_dispatch_method(this, 0x73, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::EllipticalArcs2dPtr(_result, false);
}

#pragma implementation_key(15)
inline TGFrameworkSupport::Curves2dPtr TGDraft::BlockView::GetCurves2d ( ) {
    struct TGFrameworkSupport::Curves2d * _result = 0;
    _com_dispatch_method(this, 0x74, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::Curves2dPtr(_result, false);
}

#pragma implementation_key(16)
inline TGFrameworkSupport::LineStrings2dPtr TGDraft::BlockView::GetLineStrings2d ( ) {
    struct TGFrameworkSupport::LineStrings2d * _result = 0;
    _com_dispatch_method(this, 0x75, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::LineStrings2dPtr(_result, false);
}

#pragma implementation_key(17)
inline TGFrameworkSupport::ComplexStrings2dPtr TGDraft::BlockView::GetComplexStrings2d ( ) {
    struct TGFrameworkSupport::ComplexStrings2d * _result = 0;
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::ComplexStrings2dPtr(_result, false);
}

#pragma implementation_key(18)
inline TGFrameworkSupport::Boundaries2dPtr TGDraft::BlockView::GetBoundaries2d ( ) {
    struct TGFrameworkSupport::Boundaries2d * _result = 0;
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::Boundaries2dPtr(_result, false);
}

#pragma implementation_key(19)
inline TGFrameworkSupport::DimensionsPtr TGDraft::BlockView::GetDimensions ( ) {
    struct TGFrameworkSupport::Dimensions * _result = 0;
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::DimensionsPtr(_result, false);
}

#pragma implementation_key(20)
inline TGFrameworkSupport::LeadersPtr TGDraft::BlockView::GetLeaders ( ) {
    struct TGFrameworkSupport::Leaders * _result = 0;
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::LeadersPtr(_result, false);
}

#pragma implementation_key(21)
inline TGFrameworkSupport::BalloonsPtr TGDraft::BlockView::GetBalloons ( ) {
    struct TGFrameworkSupport::Balloons * _result = 0;
    _com_dispatch_method(this, 0x7a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::BalloonsPtr(_result, false);
}

#pragma implementation_key(22)
inline TGFrameworkSupport::TextBoxesPtr TGDraft::BlockView::GetTextBoxes ( ) {
    struct TGFrameworkSupport::TextBoxes * _result = 0;
    _com_dispatch_method(this, 0x7b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::TextBoxesPtr(_result, false);
}

#pragma implementation_key(23)
inline TGFrameworkSupport::Relations2dPtr TGDraft::BlockView::GetRelations2d ( ) {
    struct TGFrameworkSupport::Relations2d * _result = 0;
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::Relations2dPtr(_result, false);
}

#pragma implementation_key(24)
inline TGFrameworkSupport::SmartFrames2dPtr TGDraft::BlockView::GetSmartFrames2d ( ) {
    struct TGFrameworkSupport::SmartFrames2d * _result = 0;
    _com_dispatch_method(this, 0x7d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::SmartFrames2dPtr(_result, false);
}

#pragma implementation_key(25)
inline TGFrameworkSupport::DatumFramesPtr TGDraft::BlockView::GetDatumFrames ( ) {
    struct TGFrameworkSupport::DatumFrames * _result = 0;
    _com_dispatch_method(this, 0x80, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::DatumFramesPtr(_result, false);
}

#pragma implementation_key(26)
inline TGFrameworkSupport::FeatureControlFramesPtr TGDraft::BlockView::GetFeatureControlFrames ( ) {
    struct TGFrameworkSupport::FeatureControlFrames * _result = 0;
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::FeatureControlFramesPtr(_result, false);
}

#pragma implementation_key(27)
inline TGFrameworkSupport::SurfaceFinishSymbolsPtr TGDraft::BlockView::GetSurfaceFinishSymbols ( ) {
    struct TGFrameworkSupport::SurfaceFinishSymbols * _result = 0;
    _com_dispatch_method(this, 0x82, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::SurfaceFinishSymbolsPtr(_result, false);
}

#pragma implementation_key(28)
inline TGFrameworkSupport::WeldSymbolsPtr TGDraft::BlockView::GetWeldSymbols ( ) {
    struct TGFrameworkSupport::WeldSymbols * _result = 0;
    _com_dispatch_method(this, 0x83, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::WeldSymbolsPtr(_result, false);
}

#pragma implementation_key(29)
inline TGFrameworkSupport::CenterMarksPtr TGDraft::BlockView::GetCenterMarks ( ) {
    struct TGFrameworkSupport::CenterMarks * _result = 0;
    _com_dispatch_method(this, 0x84, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::CenterMarksPtr(_result, false);
}

#pragma implementation_key(30)
inline TGFrameworkSupport::CenterLinesPtr TGDraft::BlockView::GetCenterLines ( ) {
    struct TGFrameworkSupport::CenterLines * _result = 0;
    _com_dispatch_method(this, 0x85, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::CenterLinesPtr(_result, false);
}

#pragma implementation_key(31)
inline TGFrameworkSupport::DatumTargetsPtr TGDraft::BlockView::GetDatumTargets ( ) {
    struct TGFrameworkSupport::DatumTargets * _result = 0;
    _com_dispatch_method(this, 0x86, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::DatumTargetsPtr(_result, false);
}

#pragma implementation_key(32)
inline TGFrameworkSupport::PinSymbolsPtr TGDraft::BlockView::GetPinSymbols ( ) {
    struct TGFrameworkSupport::PinSymbols * _result = 0;
    _com_dispatch_method(this, 0xf6, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::PinSymbolsPtr(_result, false);
}

#pragma implementation_key(33)
inline TGFrameworkSupport::DatumPointsPtr TGDraft::BlockView::GetDatumPoints ( ) {
    struct TGFrameworkSupport::DatumPoints * _result = 0;
    _com_dispatch_method(this, 0x87, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::DatumPointsPtr(_result, false);
}

#pragma implementation_key(34)
inline TGFrameworkSupport::CornerAnnotationsPtr TGDraft::BlockView::GetCornerAnnotations ( ) {
    struct TGFrameworkSupport::CornerAnnotations * _result = 0;
    _com_dispatch_method(this, 0x88, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::CornerAnnotationsPtr(_result, false);
}

#pragma implementation_key(35)
inline IDispatchPtr TGDraft::BlockView::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(36)
inline VARIANT_BOOL TGDraft::BlockView::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(37)
inline TGFrameworkSupport::BoltHoleCirclesPtr TGDraft::BlockView::GetBoltHoleCircles ( ) {
    struct TGFrameworkSupport::BoltHoleCircles * _result = 0;
    _com_dispatch_method(this, 0x8a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::BoltHoleCirclesPtr(_result, false);
}

#pragma implementation_key(38)
inline TGFrameworkSupport::ConnectorsPtr TGDraft::BlockView::GetConnectors ( ) {
    struct TGFrameworkSupport::Connectors * _result = 0;
    _com_dispatch_method(this, 0x8b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::ConnectorsPtr(_result, false);
}

#pragma implementation_key(39)
inline HRESULT TGDraft::BlockView::SetOrigin ( double x, double y ) {
    return _com_dispatch_method(this, 0x8d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(40)
inline HRESULT TGDraft::BlockView::GetOrigin ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x8e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(41)
inline HRESULT TGDraft::BlockView::ReplaceGraphics ( const _variant_t & DeleteSelectedGraphics ) {
    return _com_dispatch_method(this, 0x8f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &DeleteSelectedGraphics);
}

#pragma implementation_key(42)
inline HRESULT TGDraft::BlockView::UpdatePreview ( ) {
    return _com_dispatch_method(this, 0x90, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(43)
inline TGDraft::DrawingViewsPtr TGDraft::BlockView::GetDrawingViews ( ) {
    struct DrawingViews * _result = 0;
    _com_dispatch_method(this, 0x7e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DrawingViewsPtr(_result, false);
}

#pragma implementation_key(44)
inline TGDraft::BlockOccurrencesPtr TGDraft::BlockView::GetBlockOccurrences ( ) {
    struct BlockOccurrences * _result = 0;
    _com_dispatch_method(this, 0x8c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return BlockOccurrencesPtr(_result, false);
}

#pragma implementation_key(45)
inline TGDraft::BlockLabelsPtr TGDraft::BlockView::GetBlockLabels ( ) {
    struct BlockLabels * _result = 0;
    _com_dispatch_method(this, 0x91, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return BlockLabelsPtr(_result, false);
}

#pragma implementation_key(46)
inline TGFrameworkSupport::Images2dPtr TGDraft::BlockView::GetImages2d ( ) {
    struct TGFrameworkSupport::Images2d * _result = 0;
    _com_dispatch_method(this, 0x92, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::Images2dPtr(_result, false);
}

//
// dispinterface DrawingViews wrapper method implementations
//

#pragma implementation_key(47)
inline TGFramework::ApplicationPtr TGDraft::DrawingViews::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(48)
inline long TGDraft::DrawingViews::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(49)
inline IDispatchPtr TGDraft::DrawingViews::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(50)
inline TGDraft::DrawingViewPtr TGDraft::DrawingViews::Item ( const _variant_t & Index ) {
    struct DrawingView * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(51)
inline TGDraft::DrawingViewPtr TGDraft::DrawingViews::Add ( struct ModelLink * From, enum ViewOrientationConstants Orientation, double Scale, double x, double y ) {
    struct DrawingView * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0003\x0005\x0005\x0005", From, Orientation, Scale, x, y);
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(52)
inline TGDraft::DrawingViewPtr TGDraft::DrawingViews::AddWithConfiguration ( struct ModelLink * From, enum ViewOrientationConstants Orientation, double Scale, double x, double y, _bstr_t ConfigFileName, _bstr_t ConfigurationName ) {
    struct DrawingView * _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0003\x0005\x0005\x0005\x0008\x0008", From, Orientation, Scale, x, y, (BSTR)ConfigFileName, (BSTR)ConfigurationName);
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(53)
inline TGDraft::DrawingViewPtr TGDraft::DrawingViews::AddByFold ( struct DrawingView * From, enum FoldTypeConstants foldDir, double x, double y ) {
    struct DrawingView * _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0003\x0005\x0005", From, foldDir, x, y);
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(54)
inline TGDraft::DrawingViewPtr TGDraft::DrawingViews::AddByAuxiliaryFold ( struct DrawingView * From, double x1, double y1, double x2, double y2, double x3, double y3 ) {
    struct DrawingView * _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x0005\x0005\x0005", From, x1, y1, x2, y2, x3, y3);
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(55)
inline TGDraft::DrawingViewPtr TGDraft::DrawingViews::AddByDetailEnvelope ( struct DrawingView * From, double x1, double y1, double Radius, double Scale, double x2, double y2 ) {
    struct DrawingView * _result = 0;
    _com_dispatch_method(this, 0x6a, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x0005\x0005\x0005", From, x1, y1, Radius, Scale, x2, y2);
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(56)
inline TGDraft::DrawingViewPtr TGDraft::DrawingViews::AddDraftView ( double Scale, double x1, double y1 ) {
    struct DrawingView * _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005", Scale, x1, y1);
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(57)
inline TGDraft::DrawingViewPtr TGDraft::DrawingViews::AddByDraftView ( struct DrawingView * From, double Scale, double x1, double y1 ) {
    struct DrawingView * _result = 0;
    _com_dispatch_method(this, 0x6c, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005", From, Scale, x1, y1);
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(58)
inline HRESULT TGDraft::DrawingViews::Align ( ) {
    return _com_dispatch_method(this, 0x6d, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(59)
inline HRESULT TGDraft::DrawingViews::Unalign ( ) {
    return _com_dispatch_method(this, 0x6e, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(60)
inline TGDraft::DrawingViewPtr TGDraft::DrawingViews::AddAssemblyView ( struct ModelLink * From, enum ViewOrientationConstants Orientation, double Scale, double x, double y, enum AssemblyDrawingViewTypeConstants ViewType, _bstr_t ConfigurationName, VARIANT_BOOL Snapshot, long SnapShotQuality ) {
    struct DrawingView * _result = 0;
    _com_dispatch_method(this, 0x6f, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0003\x0005\x0005\x0005\x0003\x0008\x000b\x0003", From, Orientation, Scale, x, y, ViewType, (BSTR)ConfigurationName, Snapshot, SnapShotQuality);
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(61)
inline TGDraft::DrawingViewPtr TGDraft::DrawingViews::AddPartView ( struct ModelLink * From, enum ViewOrientationConstants Orientation, double Scale, double x, double y, enum PartDrawingViewTypeConstants ViewType ) {
    struct DrawingView * _result = 0;
    _com_dispatch_method(this, 0x70, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0003\x0005\x0005\x0005\x0003", From, Orientation, Scale, x, y, ViewType);
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(62)
inline TGDraft::DrawingViewPtr TGDraft::DrawingViews::AddSheetMetalView ( struct ModelLink * From, enum ViewOrientationConstants Orientation, double Scale, double x, double y, enum SheetMetalDrawingViewTypeConstants ViewType ) {
    struct DrawingView * _result = 0;
    _com_dispatch_method(this, 0x71, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0003\x0005\x0005\x0005\x0003", From, Orientation, Scale, x, y, ViewType);
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(63)
inline TGDraft::DrawingViewPtr TGDraft::DrawingViews::AddWeldmentView ( struct ModelLink * From, enum ViewOrientationConstants Orientation, double Scale, double x, double y, enum WeldmentDrawingViewTypeConstants ViewType ) {
    struct DrawingView * _result = 0;
    _com_dispatch_method(this, 0x72, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0003\x0005\x0005\x0005\x0003", From, Orientation, Scale, x, y, ViewType);
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(64)
inline TGDraft::DrawingViewPtr TGDraft::DrawingViews::AddDetailView ( struct DrawingView * From, double x1, double y1, double Radius, double Scale, double x2, double y2, VARIANT_BOOL Independent ) {
    struct DrawingView * _result = 0;
    _com_dispatch_method(this, 0x73, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x0005\x0005\x0005\x000b", From, x1, y1, Radius, Scale, x2, y2, Independent);
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(65)
inline TGDraft::DrawingViewPtr TGDraft::DrawingViews::Add2dModelView ( double Scale, double x1, double y1 ) {
    struct DrawingView * _result = 0;
    _com_dispatch_method(this, 0x74, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005", Scale, x1, y1);
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(66)
inline TGDraft::DrawingViewPtr TGDraft::DrawingViews::AddPMIModelView ( struct ModelLink * From, _bstr_t ModelViewName, double Scale, double x, double y, VARIANT_BOOL IncludePMIDimensions, VARIANT_BOOL UseDraftQuality, long DraftQuality ) {
    struct DrawingView * _result = 0;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0008\x0005\x0005\x0005\x000b\x000b\x0003", From, (BSTR)ModelViewName, Scale, x, y, IncludePMIDimensions, UseDraftQuality, DraftQuality);
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(67)
inline TGDraft::DrawingViewPtr TGDraft::DrawingViews::AddEmptyView ( struct ModelLink * From, enum DrawingViewDefaultsConstants CreationDefaults ) {
    struct DrawingView * _result = 0;
    _com_dispatch_method(this, 0x76, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0003", From, CreationDefaults);
    return DrawingViewPtr(_result, false);
}

//
// dispinterface DrawingView wrapper method implementations
//

#pragma implementation_key(68)
inline double TGDraft::DrawingView::GetScaleFactor ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(69)
inline void TGDraft::DrawingView::PutScaleFactor ( double _arg1 ) {
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(70)
inline HRESULT TGDraft::DrawingView::GetOrigin ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x60010002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(71)
inline HRESULT TGDraft::DrawingView::SetOrigin ( double x, double y ) {
    return _com_dispatch_method(this, 0x60010003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(72)
inline enum TGDraft::DrawingViewTypeConstants TGDraft::DrawingView::GetDrawingViewType ( ) {
    enum DrawingViewTypeConstants _result;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(73)
inline double TGDraft::DrawingView::GetCropLeft ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(74)
inline void TGDraft::DrawingView::PutCropLeft ( double _arg1 ) {
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(75)
inline double TGDraft::DrawingView::GetCropRight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(76)
inline void TGDraft::DrawingView::PutCropRight ( double _arg1 ) {
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(77)
inline double TGDraft::DrawingView::GetCropTop ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(78)
inline void TGDraft::DrawingView::PutCropTop ( double _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(79)
inline double TGDraft::DrawingView::GetCropBottom ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(80)
inline void TGDraft::DrawingView::PutCropBottom ( double _arg1 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(81)
inline VARIANT_BOOL TGDraft::DrawingView::GetCrop ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(82)
inline void TGDraft::DrawingView::PutCrop ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(83)
inline _bstr_t TGDraft::DrawingView::GetCaption ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(84)
inline void TGDraft::DrawingView::PutCaption ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(85)
inline _bstr_t TGDraft::DrawingView::GetSuffix ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(86)
inline _bstr_t TGDraft::DrawingView::GetDescription ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(87)
inline void TGDraft::DrawingView::PutDescription ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(88)
inline VARIANT_BOOL TGDraft::DrawingView::GetDisplayCaption ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(89)
inline void TGDraft::DrawingView::PutDisplayCaption ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(90)
inline VARIANT_BOOL TGDraft::DrawingView::GetDisplaySuffix ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(91)
inline void TGDraft::DrawingView::PutDisplaySuffix ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(92)
inline VARIANT_BOOL TGDraft::DrawingView::GetDisplayScale ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(93)
inline void TGDraft::DrawingView::PutDisplayScale ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(94)
inline VARIANT_BOOL TGDraft::DrawingView::GetDisplayAnnotation ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(95)
inline void TGDraft::DrawingView::PutDisplayAnnotation ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(96)
inline IDispatchPtr TGDraft::DrawingView::GetAnnotation ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(97)
inline IDispatchPtr TGDraft::DrawingView::GetSheet ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(98)
inline void TGDraft::DrawingView::PutSheet ( IDispatch * _arg1 ) {
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(99)
inline VARIANT_BOOL TGDraft::DrawingView::GetDisplayWindow ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(100)
inline void TGDraft::DrawingView::PutDisplayWindow ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(101)
inline IDispatchPtr TGDraft::DrawingView::GetModelLink ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(102)
inline VARIANT_BOOL TGDraft::DrawingView::GetIsUpToDate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(103)
inline HRESULT TGDraft::DrawingView::SheetToView ( double xSheet, double ySheet, double * xView, double * yView ) {
    return _com_dispatch_method(this, 0x60010022, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x4005\x4005", xSheet, ySheet, xView, yView);
}

#pragma implementation_key(104)
inline HRESULT TGDraft::DrawingView::ViewToSheet ( double xView, double yView, double * xSheet, double * ySheet ) {
    return _com_dispatch_method(this, 0x60010023, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x4005\x4005", xView, yView, xSheet, ySheet);
}

#pragma implementation_key(105)
inline IDispatchPtr TGDraft::DrawingView::Drop ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(106)
inline HRESULT TGDraft::DrawingView::Update ( ) {
    return _com_dispatch_method(this, 0x66, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(107)
inline _bstr_t TGDraft::DrawingView::GetTextFont ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4001, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(108)
inline void TGDraft::DrawingView::PutTextFont ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x4001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(109)
inline enum TGFrameworkSupport::DimTextFontStyleConstants TGDraft::DrawingView::GetTextFontStyle ( ) {
    enum TGFrameworkSupport::DimTextFontStyleConstants _result;
    _com_dispatch_method(this, 0x4002, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(110)
inline void TGDraft::DrawingView::PutTextFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants _arg1 ) {
    _com_dispatch_method(this, 0x4002, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(111)
inline double TGDraft::DrawingView::GetTextHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4003, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(112)
inline void TGDraft::DrawingView::PutTextHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x4003, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(113)
inline double TGDraft::DrawingView::GetTextRatio ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4004, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(114)
inline void TGDraft::DrawingView::PutTextRatio ( double _arg1 ) {
    _com_dispatch_method(this, 0x4004, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(115)
inline long TGDraft::DrawingView::GetTextColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4005, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(116)
inline void TGDraft::DrawingView::PutTextColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x4005, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(117)
inline _bstr_t TGDraft::DrawingView::GetStyleName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4006, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(118)
inline void TGDraft::DrawingView::PutStyleName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x4006, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(119)
inline TGFramework::ApplicationPtr TGDraft::DrawingView::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x6065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(120)
inline long TGDraft::DrawingView::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6066, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(121)
inline _bstr_t TGDraft::DrawingView::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6067, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(122)
inline IDispatchPtr TGDraft::DrawingView::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x6068, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(123)
inline long TGDraft::DrawingView::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6069, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(124)
inline VARIANT_BOOL TGDraft::DrawingView::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x606a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(125)
inline void TGDraft::DrawingView::PutVisible ( VARIANT_BOOL * _arg1 ) {
    _com_dispatch_method(this, 0x606a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x400b", _arg1);
}

#pragma implementation_key(126)
inline long TGDraft::DrawingView::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x606b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(127)
inline _bstr_t TGDraft::DrawingView::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x606c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(128)
inline IDispatchPtr TGDraft::DrawingView::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x606d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(129)
inline HRESULT TGDraft::DrawingView::Copy ( ) {
    return _com_dispatch_method(this, 0x6001600a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(130)
inline HRESULT TGDraft::DrawingView::Cut ( ) {
    return _com_dispatch_method(this, 0x6001600b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(131)
inline HRESULT TGDraft::DrawingView::Delete ( ) {
    return _com_dispatch_method(this, 0x6001600c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(132)
inline HRESULT TGDraft::DrawingView::BringToFront ( ) {
    return _com_dispatch_method(this, 0x6001600d, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(133)
inline HRESULT TGDraft::DrawingView::BringForward ( ) {
    return _com_dispatch_method(this, 0x6001600e, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(134)
inline HRESULT TGDraft::DrawingView::SendToBack ( ) {
    return _com_dispatch_method(this, 0x6001600f, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(135)
inline HRESULT TGDraft::DrawingView::SendBackward ( ) {
    return _com_dispatch_method(this, 0x60016010, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(136)
inline HRESULT TGDraft::DrawingView::Select ( ) {
    return _com_dispatch_method(this, 0x60016011, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(137)
inline HRESULT TGDraft::DrawingView::Range ( double * min_x, double * min_y, double * max_x, double * max_y ) {
    return _com_dispatch_method(this, 0x60016012, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", min_x, min_y, max_x, max_y);
}

#pragma implementation_key(138)
inline TGDraft::CoordinateSystems2dPtr TGDraft::DrawingView::GetCoordinateSystems2d ( ) {
    struct CoordinateSystems2d * _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return CoordinateSystems2dPtr(_result, false);
}

#pragma implementation_key(139)
inline HRESULT TGDraft::DrawingView::GetActiveCoordinateSystem ( VARIANT * CoordinateSystem2d, VARIANT * AlignmentAxis ) {
    return _com_dispatch_method(this, 0x68, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x480c\x480c", CoordinateSystem2d, AlignmentAxis);
}

#pragma implementation_key(140)
inline HRESULT TGDraft::DrawingView::SetActiveCoordinateSystem ( const _variant_t & CoordinateSystem2d, const _variant_t & AlignmentAxis ) {
    return _com_dispatch_method(this, 0x69, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c", &CoordinateSystem2d, &AlignmentAxis);
}

#pragma implementation_key(141)
inline TGDraft::ModelMembersPtr TGDraft::DrawingView::GetModelMembers ( ) {
    struct ModelMembers * _result = 0;
    _com_dispatch_method(this, 0x606e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ModelMembersPtr(_result, false);
}

#pragma implementation_key(142)
inline TGDraft::GraphicMembersPtr TGDraft::DrawingView::GetGraphicMembers ( ) {
    struct GraphicMembers * _result = 0;
    _com_dispatch_method(this, 0x606f, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return GraphicMembersPtr(_result, false);
}

#pragma implementation_key(143)
inline VARIANT_BOOL TGDraft::DrawingView::GetShowEdgesHiddenByOtherParts ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6070, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(144)
inline void TGDraft::DrawingView::PutShowEdgesHiddenByOtherParts ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6070, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(145)
inline VARIANT_BOOL TGDraft::DrawingView::GetProcessPartIntersections ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6071, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(146)
inline void TGDraft::DrawingView::PutProcessPartIntersections ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6071, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(147)
inline TGDraft::DVLines2dPtr TGDraft::DrawingView::GetDVLines2d ( ) {
    struct DVLines2d * _result = 0;
    _com_dispatch_method(this, 0x6072, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DVLines2dPtr(_result, false);
}

#pragma implementation_key(148)
inline TGDraft::DVArcs2dPtr TGDraft::DrawingView::GetDVArcs2d ( ) {
    struct DVArcs2d * _result = 0;
    _com_dispatch_method(this, 0x6073, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DVArcs2dPtr(_result, false);
}

#pragma implementation_key(149)
inline TGDraft::DVBSplineCurves2dPtr TGDraft::DrawingView::GetDVBSplineCurves2d ( ) {
    struct DVBSplineCurves2d * _result = 0;
    _com_dispatch_method(this, 0x6074, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DVBSplineCurves2dPtr(_result, false);
}

#pragma implementation_key(150)
inline TGDraft::DVCircles2dPtr TGDraft::DrawingView::GetDVCircles2d ( ) {
    struct DVCircles2d * _result = 0;
    _com_dispatch_method(this, 0x6075, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DVCircles2dPtr(_result, false);
}

#pragma implementation_key(151)
inline TGDraft::DVEllipses2dPtr TGDraft::DrawingView::GetDVEllipses2d ( ) {
    struct DVEllipses2d * _result = 0;
    _com_dispatch_method(this, 0x6076, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DVEllipses2dPtr(_result, false);
}

#pragma implementation_key(152)
inline TGDraft::DVLineStrings2dPtr TGDraft::DrawingView::GetDVLineStrings2d ( ) {
    struct DVLineStrings2d * _result = 0;
    _com_dispatch_method(this, 0x6077, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DVLineStrings2dPtr(_result, false);
}

#pragma implementation_key(153)
inline TGDraft::DVEllipticalArcs2dPtr TGDraft::DrawingView::GetDVEllipticalArcs2d ( ) {
    struct DVEllipticalArcs2d * _result = 0;
    _com_dispatch_method(this, 0x6078, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DVEllipticalArcs2dPtr(_result, false);
}

#pragma implementation_key(154)
inline TGDraft::DVPoints2dPtr TGDraft::DrawingView::GetDVPoints2d ( ) {
    struct DVPoints2d * _result = 0;
    _com_dispatch_method(this, 0x6092, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DVPoints2dPtr(_result, false);
}

#pragma implementation_key(155)
inline _bstr_t TGDraft::DrawingView::GetConfiguration ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6079, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(156)
inline void TGDraft::DrawingView::PutConfiguration ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x6079, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(157)
inline HRESULT TGDraft::DrawingView::CheckConfiguration ( VARIANT_BOOL * UpToDate ) {
    return _com_dispatch_method(this, 0x607a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b", UpToDate);
}

#pragma implementation_key(158)
inline long TGDraft::DrawingView::GetViewType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x607b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(159)
inline VARIANT_BOOL TGDraft::DrawingView::GetMatchConfiguration ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x607c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(160)
inline void TGDraft::DrawingView::PutMatchConfiguration ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x607c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(161)
inline VARIANT_BOOL TGDraft::DrawingView::GetScaleDimensionsAndAnnotations ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x607d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(162)
inline void TGDraft::DrawingView::PutScaleDimensionsAndAnnotations ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x607d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(163)
inline HRESULT TGDraft::DrawingView::GetReferenceToGraphicMember ( IDispatch * GraphicMember, struct TGFramework::Reference * * Reference ) {
    return _com_dispatch_method(this, 0x607e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x4009", GraphicMember, Reference);
}

#pragma implementation_key(164)
inline TGFramework::ReferencePtr TGDraft::DrawingView::GetGetReferenceToGraphicMember2 ( IDispatch * GraphicMember ) {
    struct TGFramework::Reference * _result = 0;
    _com_dispatch_method(this, 0x60aa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0009", GraphicMember);
    return TGFramework::ReferencePtr(_result, false);
}

#pragma implementation_key(165)
inline HRESULT TGDraft::DrawingView::GetRotationAngle ( double * dRotAngle ) {
    return _com_dispatch_method(this, 0x607f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005", dRotAngle);
}

#pragma implementation_key(166)
inline HRESULT TGDraft::DrawingView::SetRotationAngle ( double dRotAngle ) {
    return _com_dispatch_method(this, 0x6080, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", dRotAngle);
}

#pragma implementation_key(167)
inline HRESULT TGDraft::DrawingView::GetListOfHiddenLayers ( long * NumLayers, SAFEARRAY * * HiddenLayers ) {
    return _com_dispatch_method(this, 0x6081, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6008", NumLayers, HiddenLayers);
}

#pragma implementation_key(168)
inline HRESULT TGDraft::DrawingView::HideLayer ( _bstr_t LayerName ) {
    return _com_dispatch_method(this, 0x6082, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)LayerName);
}

#pragma implementation_key(169)
inline HRESULT TGDraft::DrawingView::ShowLayer ( _bstr_t LayerName ) {
    return _com_dispatch_method(this, 0x6083, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)LayerName);
}

#pragma implementation_key(170)
inline VARIANT_BOOL TGDraft::DrawingView::IsLayerHidden ( _bstr_t LayerName ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6084, DISPATCH_METHOD, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)LayerName);
    return _result;
}

#pragma implementation_key(171)
inline HRESULT TGDraft::DrawingView::RetrieveDimensions ( VARIANT_BOOL IsRetrieve, _bstr_t DimensionStyleName, VARIANT_BOOL TypeLinear, VARIANT_BOOL TypeRadial, VARIANT_BOOL TypeAngular, VARIANT_BOOL TypeAnnotation, VARIANT_BOOL TypeCenterMark, VARIANT_BOOL GetDuplicatedRadial, VARIANT_BOOL GetDimensionToHiddenLines, VARIANT_BOOL ProjectCenterMark, VARIANT_BOOL ConnectCenters, VARIANT_BOOL GetCenterMarkToCircle, VARIANT_BOOL GetCenterMarkToArc ) {
    return _com_dispatch_method(this, 0x6085, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b\x0008\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b", IsRetrieve, (BSTR)DimensionStyleName, TypeLinear, TypeRadial, TypeAngular, TypeAnnotation, TypeCenterMark, GetDuplicatedRadial, GetDimensionToHiddenLines, ProjectCenterMark, ConnectCenters, GetCenterMarkToCircle, GetCenterMarkToArc);
}

#pragma implementation_key(172)
inline HRESULT TGDraft::DrawingView::RetrieveCenterLinesCenterMarks ( VARIANT_BOOL IsRetrieve, _bstr_t DimensionStyleName, VARIANT_BOOL TypeCenterLine, VARIANT_BOOL TypeCenterMark, VARIANT_BOOL ProjectCenterMark, VARIANT_BOOL ConnectCenters, VARIANT_BOOL GetCenterLineToFullCylinder, VARIANT_BOOL GetCenterLineToPartialCylinder, VARIANT_BOOL GetCenterMarkToCircle, VARIANT_BOOL GetCenterMarkToArc, VARIANT_BOOL GetCenterMarkToEllipse, VARIANT_BOOL GetCenterMarkToPartialEllipse, VARIANT_BOOL EnableCenterMarkRangeCheck, VARIANT_BOOL EnableCenterLineRangeCheck, double dCenterLineMinRadius, double dCenterLineMaxRadius, double dCenterMarkMinRadius, double dCenterMarkMaxRadius ) {
    return _com_dispatch_method(this, 0x6096, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b\x0008\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x0005\x0005\x0005\x0005", IsRetrieve, (BSTR)DimensionStyleName, TypeCenterLine, TypeCenterMark, ProjectCenterMark, ConnectCenters, GetCenterLineToFullCylinder, GetCenterLineToPartialCylinder, GetCenterMarkToCircle, GetCenterMarkToArc, GetCenterMarkToEllipse, GetCenterMarkToPartialEllipse, EnableCenterMarkRangeCheck, EnableCenterLineRangeCheck, dCenterLineMinRadius, dCenterLineMaxRadius, dCenterMarkMinRadius, dCenterMarkMaxRadius);
}

#pragma implementation_key(173)
inline VARIANT_BOOL TGDraft::DrawingView::GetShading ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6086, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(174)
inline void TGDraft::DrawingView::PutShading ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6086, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(175)
inline enum TGDraft::DrawingViewShadingQualityConstants TGDraft::DrawingView::GetShadingQuality ( ) {
    enum DrawingViewShadingQualityConstants _result;
    _com_dispatch_method(this, 0x6087, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(176)
inline void TGDraft::DrawingView::PutShadingQuality ( enum DrawingViewShadingQualityConstants _arg1 ) {
    _com_dispatch_method(this, 0x6087, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(177)
inline VARIANT_BOOL TGDraft::DrawingView::GetShadingAllowAssemblyOverrides ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6088, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(178)
inline void TGDraft::DrawingView::PutShadingAllowAssemblyOverrides ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6088, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(179)
inline VARIANT_BOOL TGDraft::DrawingView::GetShadingAllowPartFaceColors ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6089, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(180)
inline void TGDraft::DrawingView::PutShadingAllowPartFaceColors ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6089, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(181)
inline VARIANT_BOOL TGDraft::DrawingView::GetShadingShowVisibleEdges ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x608a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(182)
inline void TGDraft::DrawingView::PutShadingShowVisibleEdges ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x608a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(183)
inline VARIANT_BOOL TGDraft::DrawingView::GetShadingGrayscale ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x608b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(184)
inline void TGDraft::DrawingView::PutShadingGrayscale ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x608b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(185)
inline VARIANT_BOOL TGDraft::DrawingView::GetShadingFlat ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x608c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(186)
inline void TGDraft::DrawingView::PutShadingFlat ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x608c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(187)
inline VARIANT_BOOL TGDraft::DrawingView::GetShadingTextures ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x608d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(188)
inline void TGDraft::DrawingView::PutShadingTextures ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x608d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(189)
inline VARIANT_BOOL TGDraft::DrawingView::GetShadingReflections ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x608e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(190)
inline void TGDraft::DrawingView::PutShadingReflections ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x608e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(191)
inline VARIANT_BOOL TGDraft::DrawingView::GetIsSnapShot ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6091, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(192)
inline enum TGDraft::DrawingViewSnapShotQualityConstants TGDraft::DrawingView::GetSnapShotQuality ( ) {
    enum DrawingViewSnapShotQualityConstants _result;
    _com_dispatch_method(this, 0x608f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(193)
inline void TGDraft::DrawingView::PutSnapShotQuality ( enum DrawingViewSnapShotQualityConstants _arg1 ) {
    _com_dispatch_method(this, 0x608f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(194)
inline enum TGDraft::DrawingViewVHL_ToleranceOverrideQualityConstants TGDraft::DrawingView::GetVHL_ToleranceOverrideQuality ( ) {
    enum DrawingViewVHL_ToleranceOverrideQualityConstants _result;
    _com_dispatch_method(this, 0x6090, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(195)
inline void TGDraft::DrawingView::PutVHL_ToleranceOverrideQuality ( enum DrawingViewVHL_ToleranceOverrideQualityConstants _arg1 ) {
    _com_dispatch_method(this, 0x6090, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(196)
inline VARIANT_BOOL TGDraft::DrawingView::GetIsBroken ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60a6, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(197)
inline HRESULT TGDraft::DrawingView::ModelToView ( double xModel, double yModel, double zModel, double * xView, double * yView ) {
    return _com_dispatch_method(this, 0x6093, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x4005\x4005", xModel, yModel, zModel, xView, yView);
}

#pragma implementation_key(198)
inline HRESULT TGDraft::DrawingView::ViewOrientation ( double * ViewVector_X, double * ViewVector_Y, double * ViewVector_Z, double * LocalXVector_X, double * LocalXVector_Y, double * LocalXVector_Z, enum ViewOrientationConstants * Orientation ) {
    return _com_dispatch_method(this, 0x6094, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005\x4003", ViewVector_X, ViewVector_Y, ViewVector_Z, LocalXVector_X, LocalXVector_Y, LocalXVector_Z, Orientation);
}

#pragma implementation_key(199)
inline VARIANT_BOOL TGDraft::DrawingView::GetSnapshot ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6095, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(200)
inline void TGDraft::DrawingView::PutSnapshot ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6095, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(201)
inline double TGDraft::DrawingView::GetTangencyTolerance ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6097, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(202)
inline void TGDraft::DrawingView::PutTangencyTolerance ( double _arg1 ) {
    _com_dispatch_method(this, 0x6097, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(203)
inline double TGDraft::DrawingView::GetThreadAxisTolerance ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6098, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(204)
inline void TGDraft::DrawingView::PutThreadAxisTolerance ( double _arg1 ) {
    _com_dispatch_method(this, 0x6098, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(205)
inline enum TGDraft::DrawingViewBsplineSimplificationConstants TGDraft::DrawingView::GetBsplineSimplification ( ) {
    enum DrawingViewBsplineSimplificationConstants _result;
    _com_dispatch_method(this, 0x6099, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(206)
inline void TGDraft::DrawingView::PutBsplineSimplification ( enum DrawingViewBsplineSimplificationConstants _arg1 ) {
    _com_dispatch_method(this, 0x6099, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(207)
inline enum TGDraft::DrawingViewIntersectionProcessingConstants TGDraft::DrawingView::GetIntersectionProcessing ( ) {
    enum DrawingViewIntersectionProcessingConstants _result;
    _com_dispatch_method(this, 0x609a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(208)
inline void TGDraft::DrawingView::PutIntersectionProcessing ( enum DrawingViewIntersectionProcessingConstants _arg1 ) {
    _com_dispatch_method(this, 0x609a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(209)
inline VARIANT_BOOL TGDraft::DrawingView::GetDefaults_ShowSectionHatch ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x609b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(210)
inline void TGDraft::DrawingView::PutDefaults_ShowSectionHatch ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x609b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(211)
inline VARIANT_BOOL TGDraft::DrawingView::GetDefaults_DeriveSectionHatchStyleNameFromPart ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x609c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(212)
inline void TGDraft::DrawingView::PutDefaults_DeriveSectionHatchStyleNameFromPart ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x609c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(213)
inline _bstr_t TGDraft::DrawingView::GetDefaults_SectionHatchStyleName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x609d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(214)
inline void TGDraft::DrawingView::PutDefaults_SectionHatchStyleName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x609d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(215)
inline _bstr_t TGDraft::DrawingView::GetDefaults_VisibleEdgeStyleName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x609e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(216)
inline void TGDraft::DrawingView::PutDefaults_VisibleEdgeStyleName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x609e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(217)
inline VARIANT_BOOL TGDraft::DrawingView::GetDefaults_ShowHiddenEdges ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x609f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(218)
inline void TGDraft::DrawingView::PutDefaults_ShowHiddenEdges ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x609f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(219)
inline _bstr_t TGDraft::DrawingView::GetDefaults_HiddenEdgeStyleName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x60a0, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(220)
inline void TGDraft::DrawingView::PutDefaults_HiddenEdgeStyleName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x60a0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(221)
inline VARIANT_BOOL TGDraft::DrawingView::GetDefaults_ShowEdgesHiddenByOtherParts ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60a1, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(222)
inline void TGDraft::DrawingView::PutDefaults_ShowEdgesHiddenByOtherParts ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x60a1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(223)
inline VARIANT_BOOL TGDraft::DrawingView::GetDefaults_ShowTangentEdges ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60a2, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(224)
inline void TGDraft::DrawingView::PutDefaults_ShowTangentEdges ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x60a2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(225)
inline _bstr_t TGDraft::DrawingView::GetDefaults_TangentEdgeStyleName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x60a3, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(226)
inline void TGDraft::DrawingView::PutDefaults_TangentEdgeStyleName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x60a3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(227)
inline VARIANT_BOOL TGDraft::DrawingView::GetDefaults_ShowTubeCenterlines ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60a4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(228)
inline void TGDraft::DrawingView::PutDefaults_ShowTubeCenterlines ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x60a4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(229)
inline _bstr_t TGDraft::DrawingView::GetDefaults_TubeCenterlineStyleName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x60a5, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(230)
inline void TGDraft::DrawingView::PutDefaults_TubeCenterlineStyleName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x60a5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(231)
inline VARIANT_BOOL TGDraft::DrawingView::GetDefaults_ShowEdgesHiddenTangentEdgesSelfHidden ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60b2, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(232)
inline void TGDraft::DrawingView::PutDefaults_ShowEdgesHiddenTangentEdgesSelfHidden ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x60b2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(233)
inline VARIANT_BOOL TGDraft::DrawingView::GetDefaults_ShowEdgesHiddenTangentEdgesHiddenByOtherParts ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60b3, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(234)
inline void TGDraft::DrawingView::PutDefaults_ShowEdgesHiddenTangentEdgesHiddenByOtherParts ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x60b3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(235)
inline VARIANT_BOOL TGDraft::DrawingView::GetCroppedVHL ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60a7, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(236)
inline void TGDraft::DrawingView::PutCroppedVHL ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x60a7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(237)
inline HRESULT TGDraft::DrawingView::ConvertToIndependentDetailView ( ) {
    return _com_dispatch_method(this, 0x60ab, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(238)
inline _bstr_t TGDraft::DrawingView::GetPMIModelView ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x60ac, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(239)
inline void TGDraft::DrawingView::PutPMIModelView ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x60ac, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(240)
inline VARIANT_BOOL TGDraft::DrawingView::GetIncludePMIDimensions ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60ad, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(241)
inline void TGDraft::DrawingView::PutIncludePMIDimensions ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x60ad, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(242)
inline void TGDraft::DrawingView::PutCroppedBoundaryStyle ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x60ae, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(243)
inline _bstr_t TGDraft::DrawingView::GetCroppedBoundaryStyle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x60ae, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(244)
inline void TGDraft::DrawingView::PutDisplayCroppedBoundary ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x60af, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(245)
inline VARIANT_BOOL TGDraft::DrawingView::GetDisplayCroppedBoundary ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60af, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(246)
inline void TGDraft::DrawingView::PutDisplayBorder ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x60b0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(247)
inline VARIANT_BOOL TGDraft::DrawingView::GetDisplayBorder ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60b0, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(248)
inline VARIANT_BOOL TGDraft::DrawingView::GetIncludePMIAnnotations ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60b1, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(249)
inline void TGDraft::DrawingView::PutIncludePMIAnnotations ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x60b1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(250)
inline VARIANT_BOOL TGDraft::DrawingView::GetEdgesUseModelColor ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60b4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(251)
inline void TGDraft::DrawingView::PutEdgesUseModelColor ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x60b4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(252)
inline VARIANT_BOOL TGDraft::DrawingView::GetEdgesUsePartBaseColor ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60b5, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(253)
inline void TGDraft::DrawingView::PutEdgesUsePartBaseColor ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x60b5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(254)
inline VARIANT_BOOL TGDraft::DrawingView::GetEdgesUseAssemblyOverrideColor ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60b6, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(255)
inline void TGDraft::DrawingView::PutEdgesUseAssemblyOverrideColor ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x60b6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(256)
inline VARIANT_BOOL TGDraft::DrawingView::GetSectionHatchUseModelColor ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60b7, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(257)
inline void TGDraft::DrawingView::PutSectionHatchUseModelColor ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x60b7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(258)
inline VARIANT_BOOL TGDraft::DrawingView::GetIsPerspective ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60b8, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(259)
inline HRESULT TGDraft::DrawingView::SetPerspectiveOn ( double FocalLength ) {
    return _com_dispatch_method(this, 0x60b9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", FocalLength);
}

#pragma implementation_key(260)
inline HRESULT TGDraft::DrawingView::SetPerspectiveOff ( ) {
    return _com_dispatch_method(this, 0x60ba, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(261)
inline HRESULT TGDraft::DrawingView::SetPerspectiveFromNamedView ( _bstr_t ViewName ) {
    return _com_dispatch_method(this, 0x60bb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)ViewName);
}

#pragma implementation_key(262)
inline VARIANT_BOOL TGDraft::DrawingView::GetIsBrokenOutSectionTarget ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60bc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(263)
inline VARIANT_BOOL TGDraft::DrawingView::GetIsCut ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60bd, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(264)
inline IDispatchPtr TGDraft::DrawingView::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(265)
inline VARIANT_BOOL TGDraft::DrawingView::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(266)
inline void TGDraft::DrawingView::PutLockView ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x60be, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(267)
inline VARIANT_BOOL TGDraft::DrawingView::GetLockView ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60be, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(268)
inline void TGDraft::DrawingView::PutHatchRibsInSectionViews ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x60bf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(269)
inline VARIANT_BOOL TGDraft::DrawingView::GetHatchRibsInSectionViews ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60bf, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(270)
inline VARIANT_BOOL TGDraft::DrawingView::GetDisplayBreakLinesInBrokenState ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60c0, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(271)
inline void TGDraft::DrawingView::PutDisplayBreakLinesInBrokenState ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x60c0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(272)
inline _bstr_t TGDraft::DrawingView::GetCaptionDefinitionTextPrimary ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x60c1, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(273)
inline void TGDraft::DrawingView::PutCaptionDefinitionTextPrimary ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x60c1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(274)
inline _bstr_t TGDraft::DrawingView::GetCaptionDisplayedTextPrimary ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x60c2, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(275)
inline VARIANT_BOOL TGDraft::DrawingView::GetDisplayCaptionPrimary ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60c3, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(276)
inline void TGDraft::DrawingView::PutDisplayCaptionPrimary ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x60c3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(277)
inline _bstr_t TGDraft::DrawingView::GetCaptionDefinitionTextSecondary ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x60c4, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(278)
inline void TGDraft::DrawingView::PutCaptionDefinitionTextSecondary ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x60c4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(279)
inline _bstr_t TGDraft::DrawingView::GetCaptionDisplayedTextSecondary ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x60c5, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(280)
inline VARIANT_BOOL TGDraft::DrawingView::GetDisplayCaptionSecondary ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60c6, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(281)
inline void TGDraft::DrawingView::PutDisplayCaptionSecondary ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x60c6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(282)
inline _bstr_t TGDraft::DrawingView::GetSuffixDefinitionText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x60c7, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(283)
inline void TGDraft::DrawingView::PutSuffixDefinitionText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x60c7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(284)
inline _bstr_t TGDraft::DrawingView::GetScaleDefinitionText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x60c8, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(285)
inline void TGDraft::DrawingView::PutScaleDefinitionText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x60c8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(286)
inline HRESULT TGDraft::DrawingView::SetViewOrientation ( double ViewVector_X, double ViewVector_Y, double ViewVector_Z, double LocalXVector_X, double LocalXVector_Y, double LocalXVector_Z ) {
    return _com_dispatch_method(this, 0x60cc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005", ViewVector_X, ViewVector_Y, ViewVector_Z, LocalXVector_X, LocalXVector_Y, LocalXVector_Z);
}

#pragma implementation_key(287)
inline HRESULT TGDraft::DrawingView::SetViewOrientationStandard ( enum ViewOrientationConstants Orientation ) {
    return _com_dispatch_method(this, 0x60cd, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Orientation);
}

#pragma implementation_key(288)
inline HRESULT TGDraft::DrawingView::SetViewOrientationFromNamedView ( _bstr_t NamedView, VARIANT_BOOL UsePerspective ) {
    return _com_dispatch_method(this, 0x60cf, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x000b", (BSTR)NamedView, UsePerspective);
}

#pragma implementation_key(289)
inline HRESULT TGDraft::DrawingView::ForceUpdate ( ) {
    return _com_dispatch_method(this, 0x60ce, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(290)
inline TGDraft::DrawingViewPtr TGDraft::DrawingView::GetSourceDrawingView ( ) {
    struct DrawingView * _result = 0;
    _com_dispatch_method(this, 0x60c9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(291)
inline HRESULT TGDraft::DrawingView::GetCaptionPosition ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x60ca, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(292)
inline HRESULT TGDraft::DrawingView::SetCaptionPosition ( double x, double y ) {
    return _com_dispatch_method(this, 0x60cb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(293)
inline _bstr_t TGDraft::DrawingView::GetZone ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x60d0, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(294)
inline void TGDraft::DrawingView::PutZone ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x60d0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(295)
inline void TGDraft::DrawingView::PutIsSnapShot ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6091, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(296)
inline enum TGDraft::DrawingViewSimplifiedAssemblyOptionConstants TGDraft::DrawingView::GetSimplifiedAssemblyOption ( ) {
    enum DrawingViewSimplifiedAssemblyOptionConstants _result;
    _com_dispatch_method(this, 0x60e6, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(297)
inline void TGDraft::DrawingView::PutSimplifiedAssemblyOption ( enum DrawingViewSimplifiedAssemblyOptionConstants _arg1 ) {
    _com_dispatch_method(this, 0x60e6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(298)
inline enum TGDraft::DrawingViewSimplifiedPartOptionConstants TGDraft::DrawingView::GetSimplifiedPartOption ( ) {
    enum DrawingViewSimplifiedPartOptionConstants _result;
    _com_dispatch_method(this, 0x60e7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(299)
inline void TGDraft::DrawingView::PutSimplifiedPartOption ( enum DrawingViewSimplifiedPartOptionConstants _arg1 ) {
    _com_dispatch_method(this, 0x60e7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(300)
inline _bstr_t TGDraft::DrawingView::GetAnnotationSheetNumberDefinitionText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x60d1, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(301)
inline void TGDraft::DrawingView::PutAnnotationSheetNumberDefinitionText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x60d1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(302)
inline VARIANT_BOOL TGDraft::DrawingView::GetDisplayAnnotationSheetNumber ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60d2, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(303)
inline void TGDraft::DrawingView::PutDisplayAnnotationSheetNumber ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x60d2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(304)
inline _bstr_t TGDraft::DrawingView::GetRotationAngleDefinitionText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x60d3, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(305)
inline void TGDraft::DrawingView::PutRotationAngleDefinitionText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x60d3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(306)
inline VARIANT_BOOL TGDraft::DrawingView::GetDisplayRotationAngle ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60d4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(307)
inline void TGDraft::DrawingView::PutDisplayRotationAngle ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x60d4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(308)
inline _bstr_t TGDraft::DrawingView::GetPrimaryCaptionFont ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x60da, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(309)
inline void TGDraft::DrawingView::PutPrimaryCaptionFont ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x60da, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(310)
inline enum TGFrameworkSupport::DimTextFontStyleConstants TGDraft::DrawingView::GetPrimaryCaptionFontStyle ( ) {
    enum TGFrameworkSupport::DimTextFontStyleConstants _result;
    _com_dispatch_method(this, 0x60db, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(311)
inline void TGDraft::DrawingView::PutPrimaryCaptionFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants _arg1 ) {
    _com_dispatch_method(this, 0x60db, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(312)
inline long TGDraft::DrawingView::GetPrimaryCaptionColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x60d8, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(313)
inline void TGDraft::DrawingView::PutPrimaryCaptionColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x60d8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(314)
inline double TGDraft::DrawingView::GetPrimaryCaptionTextSize ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x60de, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(315)
inline void TGDraft::DrawingView::PutPrimaryCaptionTextSize ( double _arg1 ) {
    _com_dispatch_method(this, 0x60de, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(316)
inline enum TGFrameworkSupport::DrawingViewCaptionTextAlignment TGDraft::DrawingView::GetPrimaryCaptionTextAlignment ( ) {
    enum TGFrameworkSupport::DrawingViewCaptionTextAlignment _result;
    _com_dispatch_method(this, 0x60dc, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(317)
inline void TGDraft::DrawingView::PutPrimaryCaptionTextAlignment ( enum TGFrameworkSupport::DrawingViewCaptionTextAlignment _arg1 ) {
    _com_dispatch_method(this, 0x60dc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(318)
inline _bstr_t TGDraft::DrawingView::GetSecondaryCaptionFont ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x60e0, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(319)
inline void TGDraft::DrawingView::PutSecondaryCaptionFont ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x60e0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(320)
inline enum TGFrameworkSupport::DimTextFontStyleConstants TGDraft::DrawingView::GetSecondaryCaptionFontStyle ( ) {
    enum TGFrameworkSupport::DimTextFontStyleConstants _result;
    _com_dispatch_method(this, 0x60e1, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(321)
inline void TGDraft::DrawingView::PutSecondaryCaptionFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants _arg1 ) {
    _com_dispatch_method(this, 0x60e1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(322)
inline long TGDraft::DrawingView::GetSecondaryCaptionColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x60df, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(323)
inline void TGDraft::DrawingView::PutSecondaryCaptionColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x60df, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(324)
inline double TGDraft::DrawingView::GetSecondaryCaptionTextSize ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x60e4, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(325)
inline void TGDraft::DrawingView::PutSecondaryCaptionTextSize ( double _arg1 ) {
    _com_dispatch_method(this, 0x60e4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(326)
inline enum TGFrameworkSupport::DrawingViewCaptionTextAlignment TGDraft::DrawingView::GetSecondaryCaptionTextAlignment ( ) {
    enum TGFrameworkSupport::DrawingViewCaptionTextAlignment _result;
    _com_dispatch_method(this, 0x60e2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(327)
inline void TGDraft::DrawingView::PutSecondaryCaptionTextAlignment ( enum TGFrameworkSupport::DrawingViewCaptionTextAlignment _arg1 ) {
    _com_dispatch_method(this, 0x60e2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(328)
inline VARIANT_BOOL TGDraft::DrawingView::GetShowPrimarySecondayCaptionSeparator ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60e5, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(329)
inline void TGDraft::DrawingView::PutShowPrimarySecondayCaptionSeparator ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x60e5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(330)
inline enum TGFrameworkSupport::DimViewCaptionLocationConstants TGDraft::DrawingView::GetCaptionLocation ( ) {
    enum TGFrameworkSupport::DimViewCaptionLocationConstants _result;
    _com_dispatch_method(this, 0x60d7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(331)
inline void TGDraft::DrawingView::PutCaptionLocation ( enum TGFrameworkSupport::DimViewCaptionLocationConstants _arg1 ) {
    _com_dispatch_method(this, 0x60d7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(332)
inline TGDraft::ModelMembersPtr TGDraft::DrawingView::ExecuteQuery ( _bstr_t QueryName ) {
    struct ModelMembers * _result = 0;
    _com_dispatch_method(this, 0x60e8, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008", (BSTR)QueryName);
    return ModelMembersPtr(_result, false);
}

#pragma implementation_key(333)
inline VARIANT_BOOL TGDraft::DrawingView::GetReferenceComponentsByConfigurations ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60e9, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(334)
inline void TGDraft::DrawingView::PutReferenceComponentsByConfigurations ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x60e9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(335)
inline VARIANT_BOOL TGDraft::DrawingView::GetDefaults_SolidFillSectionWeldBeads ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60ea, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(336)
inline void TGDraft::DrawingView::PutDefaults_SolidFillSectionWeldBeads ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x60ea, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(337)
inline VARIANT_BOOL TGDraft::DrawingView::GetDefaults_EnableAlternatingHatchSpacing ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60eb, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(338)
inline void TGDraft::DrawingView::PutDefaults_EnableAlternatingHatchSpacing ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x60eb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(339)
inline VARIANT_BOOL TGDraft::DrawingView::GetDefaults_EnableAlternatingHatchAngle ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60ec, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(340)
inline void TGDraft::DrawingView::PutDefaults_EnableAlternatingHatchAngle ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x60ec, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(341)
inline _bstr_t TGDraft::DrawingView::GetPrimaryMember ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x60ed, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(342)
inline void TGDraft::DrawingView::PutPrimaryMember ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x60ed, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(343)
inline HRESULT TGDraft::DrawingView::GetAlternateMembers ( long * NumMembers, SAFEARRAY * * Members ) {
    return _com_dispatch_method(this, 0x60ee, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6008", NumMembers, Members);
}

#pragma implementation_key(344)
inline HRESULT TGDraft::DrawingView::GetAlternatePositionMemberCandidates ( long * NumMembers, SAFEARRAY * * Members ) {
    return _com_dispatch_method(this, 0x60ef, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6008", NumMembers, Members);
}

#pragma implementation_key(345)
inline HRESULT TGDraft::DrawingView::AddAlternateMember ( _bstr_t Member ) {
    return _com_dispatch_method(this, 0x60f0, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Member);
}

#pragma implementation_key(346)
inline HRESULT TGDraft::DrawingView::RemoveAlternateMember ( _bstr_t Member ) {
    return _com_dispatch_method(this, 0x60f1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Member);
}

#pragma implementation_key(347)
inline void TGDraft::DrawingView::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x60f8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(348)
inline _bstr_t TGDraft::DrawingView::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x60f8, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(349)
inline VARIANT_BOOL TGDraft::DrawingView::GetSectionOnly ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60f7, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(350)
inline void TGDraft::DrawingView::PutSectionOnly ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x60f7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(351)
inline TGDraft::CuttingPlanesPtr TGDraft::DrawingView::GetCuttingPlanes ( ) {
    struct CuttingPlanes * _result = 0;
    _com_dispatch_method(this, 0x60f2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return CuttingPlanesPtr(_result, false);
}

#pragma implementation_key(352)
inline TGDraft::BrokenOutSectionProfilesPtr TGDraft::DrawingView::GetBrokenOutSectionProfiles ( ) {
    struct BrokenOutSectionProfiles * _result = 0;
    _com_dispatch_method(this, 0x60f3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return BrokenOutSectionProfilesPtr(_result, false);
}

#pragma implementation_key(353)
inline TGDraft::DetailEnvelopesPtr TGDraft::DrawingView::GetDetailEnvelopes ( ) {
    struct DetailEnvelopes * _result = 0;
    _com_dispatch_method(this, 0x60f4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DetailEnvelopesPtr(_result, false);
}

#pragma implementation_key(354)
inline TGDraft::DraftProfilePtr TGDraft::DrawingView::GetCroppingBoundaryProfile ( ) {
    struct DraftProfile * _result = 0;
    _com_dispatch_method(this, 0x60f6, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DraftProfilePtr(_result, false);
}

#pragma implementation_key(355)
inline TGDraft::HighlightDrawingViewMembersPtr TGDraft::DrawingView::GetHighlightDrawingViewMembers ( ) {
    struct HighlightDrawingViewMembers * _result = 0;
    _com_dispatch_method(this, 0x60f9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return HighlightDrawingViewMembersPtr(_result, false);
}

#pragma implementation_key(356)
inline HRESULT TGDraft::DrawingView::AddConnectedDimensionsToSelectSet ( ) {
    return _com_dispatch_method(this, 0x60fa, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(357)
inline HRESULT TGDraft::DrawingView::AddConnectedAnnotationsToSelectSet ( ) {
    return _com_dispatch_method(this, 0x60fb, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(358)
inline _bstr_t TGDraft::DrawingView::GetLastUpdateSEVersion ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x60fc, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(359)
inline _variant_t TGDraft::DrawingView::GetLastUpdateDate ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x60fd, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(360)
inline _bstr_t TGDraft::DrawingView::GetLastUpdateUsername ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x60fe, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(361)
inline double TGDraft::DrawingView::GetLastUpdateTimeToUpdate ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x60ff, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(362)
inline _bstr_t TGDraft::DrawingView::GetDefaults_CoordinateSystemEdgeStyleName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6100, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(363)
inline void TGDraft::DrawingView::PutDefaults_CoordinateSystemEdgeStyleName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x6100, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(364)
inline HRESULT TGDraft::DrawingView::ClearEdgeOverrides ( ) {
    return _com_dispatch_method(this, 0x6101, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(365)
inline void TGDraft::DrawingView::PutIsReferencePartTransparent ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6102, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(366)
inline VARIANT_BOOL TGDraft::DrawingView::GetIsReferencePartTransparent ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6102, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(367)
inline void TGDraft::DrawingView::PutRetrieveDimOnUpdate ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6107, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(368)
inline VARIANT_BOOL TGDraft::DrawingView::GetRetrieveDimOnUpdate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6107, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(369)
inline TGDraft::BreakLinePairsPtr TGDraft::DrawingView::GetBreakLinePairs ( ) {
    struct BreakLinePairs * _result = 0;
    _com_dispatch_method(this, 0x6103, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return BreakLinePairsPtr(_result, false);
}

#pragma implementation_key(370)
inline HRESULT TGDraft::DrawingView::SetBrokenState ( ) {
    return _com_dispatch_method(this, 0x6104, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(371)
inline HRESULT TGDraft::DrawingView::SetUnBrokenState ( ) {
    return _com_dispatch_method(this, 0x6105, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(372)
inline void TGDraft::DrawingView::PutDepthPlaneOffset ( double _arg1 ) {
    _com_dispatch_method(this, 0x6106, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(373)
inline double TGDraft::DrawingView::GetDepthPlaneOffset ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6106, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(374)
inline HRESULT TGDraft::DrawingView::RemoveDepthPlane ( ) {
    return _com_dispatch_method(this, 0x6108, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(375)
inline void TGDraft::DrawingView::PutSectionFullModel ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6109, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(376)
inline VARIANT_BOOL TGDraft::DrawingView::GetSectionFullModel ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6109, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(377)
inline void TGDraft::DrawingView::PutRevolvedSection ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x610a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(378)
inline VARIANT_BOOL TGDraft::DrawingView::GetRevolvedSection ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x610a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(379)
inline HRESULT TGDraft::DrawingView::AddBreakAxisForBreakLines ( IUnknown * pElement1, enum KeypointIndexConstants KeyPointIndex1, IUnknown * pElement2, enum KeypointIndexConstants KeyPointIndex2 ) {
    return _com_dispatch_method(this, 0x610b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000d\x0003\x000d\x0003", pElement1, KeyPointIndex1, pElement2, KeyPointIndex2);
}

#pragma implementation_key(380)
inline HRESULT TGDraft::DrawingView::SetCenterForDetailView ( double x, double y ) {
    return _com_dispatch_method(this, 0x610d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(381)
inline HRESULT TGDraft::DrawingView::GetCenterForDetailView ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x610c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(382)
inline HRESULT TGDraft::DrawingView::RetrieveSlotCenterLinesCenterMarks ( VARIANT_BOOL IsRetrieve, _bstr_t DimensionStyleName, VARIANT_BOOL TypeCenterLine, VARIANT_BOOL TypeCenterMark, VARIANT_BOOL ProjectCenterMark, VARIANT_BOOL GetSlotCenterLines, VARIANT_BOOL GetStrikePointCenterMarks, VARIANT_BOOL GetEndPointCenterMarks, VARIANT_BOOL GetCenterofArcProjectionLines, VARIANT_BOOL EnableCenterMarkRangeCheck, VARIANT_BOOL EnableCenterLineRangeCheck, double dCenterLineMinRadius, double dCenterLineMaxRadius, double dCenterMarkMinRadius, double dCenterMarkMaxRadius ) {
    return _com_dispatch_method(this, 0x610e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b\x0008\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x0005\x0005\x0005\x0005", IsRetrieve, (BSTR)DimensionStyleName, TypeCenterLine, TypeCenterMark, ProjectCenterMark, GetSlotCenterLines, GetStrikePointCenterMarks, GetEndPointCenterMarks, GetCenterofArcProjectionLines, EnableCenterMarkRangeCheck, EnableCenterLineRangeCheck, dCenterLineMinRadius, dCenterLineMaxRadius, dCenterMarkMinRadius, dCenterMarkMaxRadius);
}

#pragma implementation_key(383)
inline void TGDraft::DrawingView::PutShowNewComponentsAddedtoAssembly ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x610f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(384)
inline VARIANT_BOOL TGDraft::DrawingView::GetShowNewComponentsAddedtoAssembly ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x610f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(385)
inline HRESULT TGDraft::DrawingView::GetEdgeOrFaceID ( IDispatch * pGraphicDVObj, long * pEntityId, VARIANT_BOOL * pIsEdge ) {
    return _com_dispatch_method(this, 0x6110, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x4003\x400b", pGraphicDVObj, pEntityId, pIsEdge);
}

#pragma implementation_key(386)
inline HRESULT TGDraft::DrawingView::SetBendCenterlineStyleAndDisplay ( enum StyleConstants bendUpCenterlineStyle, enum StyleConstants bendDownCenterlineStyle ) {
    return _com_dispatch_method(this, 0x6111, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", bendUpCenterlineStyle, bendDownCenterlineStyle);
}

//
// dispinterface CoordinateSystems2d wrapper method implementations
//

#pragma implementation_key(387)
inline TGFramework::ApplicationPtr TGDraft::CoordinateSystems2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(388)
inline long TGDraft::CoordinateSystems2d::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(389)
inline IDispatchPtr TGDraft::CoordinateSystems2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(390)
inline TGDraft::CoordinateSystem2dPtr TGDraft::CoordinateSystems2d::Item ( const _variant_t & Index ) {
    struct CoordinateSystem2d * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return CoordinateSystem2dPtr(_result, false);
}

//
// dispinterface CoordinateSystem2d wrapper method implementations
//

#pragma implementation_key(391)
inline TGFramework::ApplicationPtr TGDraft::CoordinateSystem2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(392)
inline IDispatchPtr TGDraft::CoordinateSystem2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(393)
inline _bstr_t TGDraft::CoordinateSystem2d::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(394)
inline long TGDraft::CoordinateSystem2d::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(395)
inline VARIANT_BOOL TGDraft::CoordinateSystem2d::GetIsDefault ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(396)
inline HRESULT TGDraft::CoordinateSystem2d::GetOrigin ( double * XOrigin, double * YOrigin ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", XOrigin, YOrigin);
}

#pragma implementation_key(397)
inline HRESULT TGDraft::CoordinateSystem2d::GetAxisProperties ( enum CoordinateSystem2dAxisConstants AxisDesignation, BSTR * Name, double * AxisX, double * AxisY ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4008\x4005\x4005", AxisDesignation, Name, AxisX, AxisY);
}

#pragma implementation_key(398)
inline IDispatchPtr TGDraft::CoordinateSystem2d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(399)
inline VARIANT_BOOL TGDraft::CoordinateSystem2d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _ICoordinateSystems2dAuto wrapper method implementations
//

#pragma implementation_key(400)
inline TGFramework::ApplicationPtr TGDraft::_ICoordinateSystems2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(401)
inline long TGDraft::_ICoordinateSystems2dAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(402)
inline IDispatchPtr TGDraft::_ICoordinateSystems2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(403)
inline TGDraft::CoordinateSystem2dPtr TGDraft::_ICoordinateSystems2dAuto::Item ( const _variant_t & Index ) {
    struct CoordinateSystem2d * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CoordinateSystem2dPtr(_result, false);
}

#pragma implementation_key(404)
inline IUnknownPtr TGDraft::_ICoordinateSystems2dAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

//
// interface _ICoordinateSystem2dAuto wrapper method implementations
//

#pragma implementation_key(405)
inline TGFramework::ApplicationPtr TGDraft::_ICoordinateSystem2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(406)
inline IDispatchPtr TGDraft::_ICoordinateSystem2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(407)
inline _bstr_t TGDraft::_ICoordinateSystem2dAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(408)
inline long TGDraft::_ICoordinateSystem2dAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(409)
inline VARIANT_BOOL TGDraft::_ICoordinateSystem2dAuto::GetIsDefault ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsDefault(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(410)
inline HRESULT TGDraft::_ICoordinateSystem2dAuto::GetOrigin ( double * XOrigin, double * YOrigin ) {
    HRESULT _hr = raw_GetOrigin(XOrigin, YOrigin);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(411)
inline HRESULT TGDraft::_ICoordinateSystem2dAuto::GetAxisProperties ( enum CoordinateSystem2dAxisConstants AxisDesignation, BSTR * Name, double * AxisX, double * AxisY ) {
    HRESULT _hr = raw_GetAxisProperties(AxisDesignation, Name, AxisX, AxisY);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(412)
inline IDispatchPtr TGDraft::_ICoordinateSystem2dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(413)
inline VARIANT_BOOL TGDraft::_ICoordinateSystem2dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface ModelMembers wrapper method implementations
//

#pragma implementation_key(414)
inline TGFramework::ApplicationPtr TGDraft::ModelMembers::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(415)
inline long TGDraft::ModelMembers::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(416)
inline IDispatchPtr TGDraft::ModelMembers::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(417)
inline TGDraft::ModelMemberPtr TGDraft::ModelMembers::Item ( const _variant_t & Index ) {
    struct ModelMember * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return ModelMemberPtr(_result, false);
}

//
// dispinterface ModelMember wrapper method implementations
//

#pragma implementation_key(418)
inline TGFramework::ApplicationPtr TGDraft::ModelMember::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(419)
inline IDispatchPtr TGDraft::ModelMember::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(420)
inline TGDraft::ModelMemberPtr TGDraft::ModelMember::GetImmediateParent ( ) {
    struct ModelMember * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ModelMemberPtr(_result, false);
}

#pragma implementation_key(421)
inline _bstr_t TGDraft::ModelMember::GetFileName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(422)
inline enum TGDraft::ModelMemberDisplayTypeConstants TGDraft::ModelMember::GetDisplayType ( ) {
    enum ModelMemberDisplayTypeConstants _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(423)
inline void TGDraft::ModelMember::PutDisplayType ( enum ModelMemberDisplayTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(424)
inline enum TGDraft::ModelMemberTypeConstants TGDraft::ModelMember::GetType ( ) {
    enum ModelMemberTypeConstants _result;
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(425)
inline enum TGDraft::ModelMemberComponentTypeConstants TGDraft::ModelMember::GetComponentType ( ) {
    enum ModelMemberComponentTypeConstants _result;
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(426)
inline VARIANT_BOOL TGDraft::ModelMember::GetShowHiddenEdges ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(427)
inline void TGDraft::ModelMember::PutShowHiddenEdges ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(428)
inline VARIANT_BOOL TGDraft::ModelMember::GetShowTangentEdges ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(429)
inline void TGDraft::ModelMember::PutShowTangentEdges ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(430)
inline VARIANT_BOOL TGDraft::ModelMember::GetShowSectionHatch ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(431)
inline void TGDraft::ModelMember::PutShowSectionHatch ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(432)
inline _bstr_t TGDraft::ModelMember::GetVisibleEdgeStyleName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(433)
inline void TGDraft::ModelMember::PutVisibleEdgeStyleName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(434)
inline _bstr_t TGDraft::ModelMember::GetHiddenEdgeStyleName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(435)
inline void TGDraft::ModelMember::PutHiddenEdgeStyleName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(436)
inline _bstr_t TGDraft::ModelMember::GetTangentEdgeStyleName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(437)
inline void TGDraft::ModelMember::PutTangentEdgeStyleName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(438)
inline TGDraft::ModelMembersPtr TGDraft::ModelMember::GetModelMembers ( ) {
    struct ModelMembers * _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ModelMembersPtr(_result, false);
}

#pragma implementation_key(439)
inline TGDraft::GraphicMembersPtr TGDraft::ModelMember::GetGraphicMembers ( ) {
    struct GraphicMembers * _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return GraphicMembersPtr(_result, false);
}

#pragma implementation_key(440)
inline TGDraft::DVLines2dPtr TGDraft::ModelMember::GetDVLines2d ( ) {
    struct DVLines2d * _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DVLines2dPtr(_result, false);
}

#pragma implementation_key(441)
inline TGDraft::DVArcs2dPtr TGDraft::ModelMember::GetDVArcs2d ( ) {
    struct DVArcs2d * _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DVArcs2dPtr(_result, false);
}

#pragma implementation_key(442)
inline TGDraft::DVBSplineCurves2dPtr TGDraft::ModelMember::GetDVBSplineCurves2d ( ) {
    struct DVBSplineCurves2d * _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DVBSplineCurves2dPtr(_result, false);
}

#pragma implementation_key(443)
inline TGDraft::DVCircles2dPtr TGDraft::ModelMember::GetDVCircles2d ( ) {
    struct DVCircles2d * _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DVCircles2dPtr(_result, false);
}

#pragma implementation_key(444)
inline TGDraft::DVEllipses2dPtr TGDraft::ModelMember::GetDVEllipses2d ( ) {
    struct DVEllipses2d * _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DVEllipses2dPtr(_result, false);
}

#pragma implementation_key(445)
inline TGDraft::DVLineStrings2dPtr TGDraft::ModelMember::GetDVLineStrings2d ( ) {
    struct DVLineStrings2d * _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DVLineStrings2dPtr(_result, false);
}

#pragma implementation_key(446)
inline TGDraft::DVEllipticalArcs2dPtr TGDraft::ModelMember::GetDVEllipticalArcs2d ( ) {
    struct DVEllipticalArcs2d * _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DVEllipticalArcs2dPtr(_result, false);
}

#pragma implementation_key(447)
inline TGDraft::DVPoints2dPtr TGDraft::ModelMember::GetDVPoints2d ( ) {
    struct DVPoints2d * _result = 0;
    _com_dispatch_method(this, 0x1d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DVPoints2dPtr(_result, false);
}

#pragma implementation_key(448)
inline VARIANT_BOOL TGDraft::ModelMember::GetIsSimplified ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(449)
inline VARIANT_BOOL TGDraft::ModelMember::GetIsFlat ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(450)
inline _bstr_t TGDraft::ModelMember::GetRoadMap ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(451)
inline VARIANT_BOOL TGDraft::ModelMember::GetDisplayAsReference ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(452)
inline void TGDraft::ModelMember::PutDisplayAsReference ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(453)
inline HRESULT TGDraft::ModelMember::GetRange2d ( double * XMin, double * YMin, double * XMax, double * YMax ) {
    return _com_dispatch_method(this, 0x1b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMin, YMin, XMax, YMax);
}

#pragma implementation_key(454)
inline HRESULT TGDraft::ModelMember::GetRange3d ( double * XMin, double * YMin, double * ZMin, double * XMax, double * YMax, double * ZMax ) {
    return _com_dispatch_method(this, 0x1c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005", XMin, YMin, ZMin, XMax, YMax, ZMax);
}

#pragma implementation_key(455)
inline _bstr_t TGDraft::ModelMember::GetComponentName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(456)
inline VARIANT_BOOL TGDraft::ModelMember::GetShowEdgesHiddenByOtherParts ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(457)
inline void TGDraft::ModelMember::PutShowEdgesHiddenByOtherParts ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(458)
inline VARIANT_BOOL TGDraft::ModelMember::GetShowEdgesHiddenTangentEdgesSelfHidden ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x20, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(459)
inline void TGDraft::ModelMember::PutShowEdgesHiddenTangentEdgesSelfHidden ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x20, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(460)
inline VARIANT_BOOL TGDraft::ModelMember::GetShowEdgesHiddenTangentEdgesHiddenByOtherParts ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x21, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(461)
inline void TGDraft::ModelMember::PutShowEdgesHiddenTangentEdgesHiddenByOtherParts ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x21, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(462)
inline TGDraft::ModelNodePtr TGDraft::ModelMember::GetModelNode ( ) {
    struct ModelNode * _result = 0;
    _com_dispatch_method(this, 0x26, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ModelNodePtr(_result, false);
}

#pragma implementation_key(463)
inline VARIANT_BOOL TGDraft::ModelMember::GetShowFill ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x22, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(464)
inline void TGDraft::ModelMember::PutShowFill ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x22, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(465)
inline _bstr_t TGDraft::ModelMember::GetFillStyleName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x23, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(466)
inline void TGDraft::ModelMember::PutFillStyleName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x23, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(467)
inline VARIANT_BOOL TGDraft::ModelMember::GetDeriveFillStyleFromPart ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x24, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(468)
inline void TGDraft::ModelMember::PutDeriveFillStyleFromPart ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x24, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(469)
inline TGDraft::SectionBoundaries2dPtr TGDraft::ModelMember::GetDVBoundaries2d ( ) {
    struct SectionBoundaries2d * _result = 0;
    _com_dispatch_method(this, 0x25, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SectionBoundaries2dPtr(_result, false);
}

#pragma implementation_key(470)
inline double TGDraft::ModelMember::GetHatchSpacing ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x27, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(471)
inline void TGDraft::ModelMember::PutHatchSpacing ( double _arg1 ) {
    _com_dispatch_method(this, 0x27, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(472)
inline double TGDraft::ModelMember::GetHatchAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x28, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(473)
inline void TGDraft::ModelMember::PutHatchAngle ( double _arg1 ) {
    _com_dispatch_method(this, 0x28, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(474)
inline VARIANT_BOOL TGDraft::ModelMember::GetIsPrimaryAlternatePosition ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x29, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(475)
inline VARIANT_BOOL TGDraft::ModelMember::GetIsAlternatePosition ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(476)
inline _bstr_t TGDraft::ModelMember::GetAlternatePositionMemberName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x2b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(477)
inline VARIANT_BOOL TGDraft::ModelMember::GetCutHardware ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(478)
inline void TGDraft::ModelMember::PutCutHardware ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x2c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(479)
inline VARIANT_BOOL TGDraft::ModelMember::GetDisplaySection ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(480)
inline void TGDraft::ModelMember::PutDisplaySection ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x2d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(481)
inline VARIANT_BOOL TGDraft::ModelMember::GetDisplayPart ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(482)
inline void TGDraft::ModelMember::PutDisplayPart ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x2e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(483)
inline VARIANT_BOOL TGDraft::ModelMember::GetDeriveDisplayAsReferenceFromAsm ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(484)
inline void TGDraft::ModelMember::PutDeriveDisplayAsReferenceFromAsm ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x2f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

//
// interface _IModelMembersAuto wrapper method implementations
//

#pragma implementation_key(485)
inline TGFramework::ApplicationPtr TGDraft::_IModelMembersAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(486)
inline long TGDraft::_IModelMembersAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(487)
inline IDispatchPtr TGDraft::_IModelMembersAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(488)
inline TGDraft::ModelMemberPtr TGDraft::_IModelMembersAuto::Item ( const _variant_t & Index ) {
    struct ModelMember * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ModelMemberPtr(_result, false);
}

#pragma implementation_key(489)
inline IUnknownPtr TGDraft::_IModelMembersAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

//
// dispinterface GraphicMembers wrapper method implementations
//

#pragma implementation_key(490)
inline TGFramework::ApplicationPtr TGDraft::GraphicMembers::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(491)
inline long TGDraft::GraphicMembers::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(492)
inline IDispatchPtr TGDraft::GraphicMembers::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(493)
inline IDispatchPtr TGDraft::GraphicMembers::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return IDispatchPtr(_result, false);
}

//
// interface _IGraphicMembersAuto wrapper method implementations
//

#pragma implementation_key(494)
inline TGFramework::ApplicationPtr TGDraft::_IGraphicMembersAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(495)
inline long TGDraft::_IGraphicMembersAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(496)
inline IDispatchPtr TGDraft::_IGraphicMembersAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(497)
inline IDispatchPtr TGDraft::_IGraphicMembersAuto::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(498)
inline IUnknownPtr TGDraft::_IGraphicMembersAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

//
// dispinterface DVLines2d wrapper method implementations
//

#pragma implementation_key(499)
inline TGDraft::DVLine2dPtr TGDraft::DVLines2d::Item ( const _variant_t & Index ) {
    struct DVLine2d * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return DVLine2dPtr(_result, false);
}

#pragma implementation_key(500)
inline TGFramework::ApplicationPtr TGDraft::DVLines2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(501)
inline long TGDraft::DVLines2d::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(502)
inline IDispatchPtr TGDraft::DVLines2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// dispinterface DVLine2d wrapper method implementations
//

#pragma implementation_key(503)
inline TGFrameworkSupport::Relationships2dPtr TGDraft::DVLine2d::GetRelationships ( ) {
    struct TGFrameworkSupport::Relationships2d * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::Relationships2dPtr(_result, false);
}

#pragma implementation_key(504)
inline TGFramework::ApplicationPtr TGDraft::DVLine2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x865, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(505)
inline _bstr_t TGDraft::DVLine2d::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x867, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(506)
inline TGDraft::DrawingViewPtr TGDraft::DVLine2d::GetDrawingView ( ) {
    struct DrawingView * _result = 0;
    _com_dispatch_method(this, 0x32, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(507)
inline TGDraft::ModelMemberPtr TGDraft::DVLine2d::GetModelMember ( ) {
    struct ModelMember * _result = 0;
    _com_dispatch_method(this, 0x33, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ModelMemberPtr(_result, false);
}

#pragma implementation_key(508)
inline enum TGDraft::GraphicMemberEdgeTypeConstants TGDraft::DVLine2d::GetEdgeType ( ) {
    enum GraphicMemberEdgeTypeConstants _result;
    _com_dispatch_method(this, 0x34, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(509)
inline TGFramework::ReferencePtr TGDraft::DVLine2d::GetReference ( ) {
    struct TGFramework::Reference * _result = 0;
    _com_dispatch_method(this, 0x35, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ReferencePtr(_result, false);
}

#pragma implementation_key(510)
inline HRESULT TGDraft::DVLine2d::GetReferenceKey ( BSTR * FullName, SAFEARRAY * * ReferenceKey, long * KeySize ) {
    return _com_dispatch_method(this, 0x36, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008\x6011\x4003", FullName, ReferenceKey, KeySize);
}

#pragma implementation_key(511)
inline TGDraft::DVShowHideEdgeOverrideType TGDraft::DVLine2d::GetShowHideEdgeOverride ( const _variant_t & segmentIndex ) {
    DVShowHideEdgeOverrideType _result;
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x080c", &segmentIndex);
    return _result;
}

#pragma implementation_key(512)
inline void TGDraft::DVLine2d::PutShowHideEdgeOverride ( const _variant_t & segmentIndex, DVShowHideEdgeOverrideType _arg2 ) {
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000c\x0003", &segmentIndex, _arg2);
}

#pragma implementation_key(513)
inline enum TGFramework::ObjectType TGDraft::DVLine2d::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x869, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(514)
inline _bstr_t TGDraft::DVLine2d::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x86c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(515)
inline IDispatchPtr TGDraft::DVLine2d::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x86d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(516)
inline HRESULT TGDraft::DVLine2d::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60010811, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(517)
inline double TGDraft::DVLine2d::GetLength ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1800, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(518)
inline double TGDraft::DVLine2d::GetAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1801, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(519)
inline HRESULT TGDraft::DVLine2d::GetStartPoint ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x60011805, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(520)
inline HRESULT TGDraft::DVLine2d::GetEndPoint ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x60011807, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(521)
inline long TGDraft::DVLine2d::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2801, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(522)
inline HRESULT TGDraft::DVLine2d::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x2802, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(523)
inline long TGDraft::DVLine2d::GetSegmentedStyleCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3801, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(524)
inline HRESULT TGDraft::DVLine2d::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * style ) {
    return _com_dispatch_method(this, 0x3865, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4005\x4009", Index, x1, y1, x2, y2, style);
}

#pragma implementation_key(525)
inline double TGDraft::DVLine2d::GetBendAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x86e, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(526)
inline double TGDraft::DVLine2d::GetBendRadius ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x86f, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(527)
inline TGDraft::ModelWeldsPtr TGDraft::DVLine2d::GetModelWelds ( ) {
    struct ModelWelds * _result = 0;
    _com_dispatch_method(this, 0x8d7, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ModelWeldsPtr(_result, false);
}

#pragma implementation_key(528)
inline int TGDraft::DVLine2d::GetBendQuantity ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x873, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(529)
inline IDispatchPtr TGDraft::DVLine2d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(530)
inline VARIANT_BOOL TGDraft::DVLine2d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _IDVLines2dAuto wrapper method implementations
//

#pragma implementation_key(531)
inline TGDraft::DVLine2dPtr TGDraft::_IDVLines2dAuto::Item ( const _variant_t & Index ) {
    struct DVLine2d * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DVLine2dPtr(_result, false);
}

#pragma implementation_key(532)
inline IUnknownPtr TGDraft::_IDVLines2dAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(533)
inline TGFramework::ApplicationPtr TGDraft::_IDVLines2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(534)
inline long TGDraft::_IDVLines2dAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(535)
inline IDispatchPtr TGDraft::_IDVLines2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// dispinterface ModelWelds wrapper method implementations
//

#pragma implementation_key(536)
inline TGFramework::ApplicationPtr TGDraft::ModelWelds::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(537)
inline IDispatchPtr TGDraft::ModelWelds::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(538)
inline long TGDraft::ModelWelds::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(539)
inline TGDraft::ModelWeldPtr TGDraft::ModelWelds::Item ( const _variant_t & Index ) {
    struct ModelWeld * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return ModelWeldPtr(_result, false);
}

//
// interface _IDVLine2dAuto wrapper method implementations
//

#pragma implementation_key(540)
inline TGFrameworkSupport::Relationships2dPtr TGDraft::_IDVLine2dAuto::GetRelationships ( ) {
    struct TGFrameworkSupport::Relationships2d * _result = 0;
    HRESULT _hr = get_Relationships(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::Relationships2dPtr(_result, false);
}

#pragma implementation_key(541)
inline TGFramework::ApplicationPtr TGDraft::_IDVLine2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(542)
inline _bstr_t TGDraft::_IDVLine2dAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(543)
inline TGDraft::DrawingViewPtr TGDraft::_IDVLine2dAuto::GetDrawingView ( ) {
    struct DrawingView * _result = 0;
    HRESULT _hr = get_DrawingView(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(544)
inline TGDraft::ModelMemberPtr TGDraft::_IDVLine2dAuto::GetModelMember ( ) {
    struct ModelMember * _result = 0;
    HRESULT _hr = get_ModelMember(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ModelMemberPtr(_result, false);
}

#pragma implementation_key(545)
inline enum TGDraft::GraphicMemberEdgeTypeConstants TGDraft::_IDVLine2dAuto::GetEdgeType ( ) {
    enum GraphicMemberEdgeTypeConstants _result;
    HRESULT _hr = get_EdgeType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(546)
inline TGFramework::ReferencePtr TGDraft::_IDVLine2dAuto::GetReference ( ) {
    struct TGFramework::Reference * _result = 0;
    HRESULT _hr = get_Reference(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ReferencePtr(_result, false);
}

#pragma implementation_key(547)
inline HRESULT TGDraft::_IDVLine2dAuto::GetReferenceKey ( BSTR * FullName, SAFEARRAY * * ReferenceKey, long * KeySize ) {
    HRESULT _hr = raw_GetReferenceKey(FullName, ReferenceKey, KeySize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(548)
inline TGDraft::DVShowHideEdgeOverrideType TGDraft::_IDVLine2dAuto::GetShowHideEdgeOverride ( const _variant_t & segmentIndex ) {
    DVShowHideEdgeOverrideType _result;
    HRESULT _hr = get_ShowHideEdgeOverride(segmentIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(549)
inline void TGDraft::_IDVLine2dAuto::PutShowHideEdgeOverride ( const _variant_t & segmentIndex, DVShowHideEdgeOverrideType overrideType ) {
    HRESULT _hr = put_ShowHideEdgeOverride(segmentIndex, overrideType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(550)
inline enum TGFramework::ObjectType TGDraft::_IDVLine2dAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(551)
inline _bstr_t TGDraft::_IDVLine2dAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(552)
inline IDispatchPtr TGDraft::_IDVLine2dAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(553)
inline HRESULT TGDraft::_IDVLine2dAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(554)
inline double TGDraft::_IDVLine2dAuto::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(555)
inline double TGDraft::_IDVLine2dAuto::GetAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_Angle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(556)
inline HRESULT TGDraft::_IDVLine2dAuto::GetStartPoint ( double * x, double * y ) {
    HRESULT _hr = raw_GetStartPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(557)
inline HRESULT TGDraft::_IDVLine2dAuto::GetEndPoint ( double * x, double * y ) {
    HRESULT _hr = raw_GetEndPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(558)
inline long TGDraft::_IDVLine2dAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(559)
inline HRESULT TGDraft::_IDVLine2dAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(560)
inline long TGDraft::_IDVLine2dAuto::GetSegmentedStyleCount ( ) {
    long _result = 0;
    HRESULT _hr = get_SegmentedStyleCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(561)
inline HRESULT TGDraft::_IDVLine2dAuto::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * style ) {
    HRESULT _hr = raw_GetSegmentedStyle(Index, x1, y1, x2, y2, style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(562)
inline double TGDraft::_IDVLine2dAuto::GetBendAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_BendAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(563)
inline double TGDraft::_IDVLine2dAuto::GetBendRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_BendRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(564)
inline TGDraft::ModelWeldsPtr TGDraft::_IDVLine2dAuto::GetModelWelds ( ) {
    struct ModelWelds * _result = 0;
    HRESULT _hr = get_ModelWelds(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ModelWeldsPtr(_result, false);
}

#pragma implementation_key(565)
inline int TGDraft::_IDVLine2dAuto::GetBendQuantity ( ) {
    int _result = 0;
    HRESULT _hr = get_BendQuantity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(566)
inline IDispatchPtr TGDraft::_IDVLine2dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(567)
inline VARIANT_BOOL TGDraft::_IDVLine2dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface ModelWeld wrapper method implementations
//

#pragma implementation_key(568)
inline TGFramework::ApplicationPtr TGDraft::ModelWeld::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(569)
inline _bstr_t TGDraft::ModelWeld::GetBottomNote1 ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(570)
inline _bstr_t TGDraft::ModelWeld::GetBottomNote2 ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(571)
inline _bstr_t TGDraft::ModelWeld::GetBottomNote3 ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(572)
inline _bstr_t TGDraft::ModelWeld::GetBottomNoteZ ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(573)
inline enum TGFrameworkSupport::DimWeldTreatmentTypeConstants TGDraft::ModelWeld::GetBottomTreatmentType ( ) {
    enum TGFrameworkSupport::DimWeldTreatmentTypeConstants _result;
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(574)
inline enum TGFrameworkSupport::DimWeldTypeConstants TGDraft::ModelWeld::GetBottomType ( ) {
    enum TGFrameworkSupport::DimWeldTypeConstants _result;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(575)
inline enum TGFrameworkSupport::DimWeldTypeConstants TGDraft::ModelWeld::GetCenterType ( ) {
    enum TGFrameworkSupport::DimWeldTypeConstants _result;
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(576)
inline double TGDraft::ModelWeld::GetCrossSectionArea ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(577)
inline enum TGFrameworkSupport::DimWeldDashLineTypeConstants TGDraft::ModelWeld::GetDashLine ( ) {
    enum TGFrameworkSupport::DimWeldDashLineTypeConstants _result;
    _com_dispatch_method(this, 0x6e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(578)
inline double TGDraft::ModelWeld::GetLength ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(579)
inline VARIANT_BOOL TGDraft::ModelWeld::GetOffsetTopBottom ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(580)
inline IDispatchPtr TGDraft::ModelWeld::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(581)
inline VARIANT_BOOL TGDraft::ModelWeld::GetSymmetrical ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(582)
inline enum TGFrameworkSupport::DimWeldTailTypeConstants TGDraft::ModelWeld::GetTail ( ) {
    enum TGFrameworkSupport::DimWeldTailTypeConstants _result;
    _com_dispatch_method(this, 0x73, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(583)
inline _bstr_t TGDraft::ModelWeld::GetTailNote ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x74, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(584)
inline _bstr_t TGDraft::ModelWeld::GetTailNote2 ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x75, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(585)
inline _bstr_t TGDraft::ModelWeld::GetTopNote1 ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(586)
inline _bstr_t TGDraft::ModelWeld::GetTopNote2 ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(587)
inline _bstr_t TGDraft::ModelWeld::GetTopNote3 ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(588)
inline _bstr_t TGDraft::ModelWeld::GetTopNoteZ ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(589)
inline enum TGFrameworkSupport::DimWeldTreatmentTypeConstants TGDraft::ModelWeld::GetTopTreatmentType ( ) {
    enum TGFrameworkSupport::DimWeldTreatmentTypeConstants _result;
    _com_dispatch_method(this, 0x7a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(590)
inline enum TGFrameworkSupport::DimWeldTypeConstants TGDraft::ModelWeld::GetTopType ( ) {
    enum TGFrameworkSupport::DimWeldTypeConstants _result;
    _com_dispatch_method(this, 0x7b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(591)
inline VARIANT_BOOL TGDraft::ModelWeld::GetWeldAllAround ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(592)
inline VARIANT_BOOL TGDraft::ModelWeld::GetWeldInField ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(593)
inline VARIANT_BOOL TGDraft::ModelWeld::GetZSymbol ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(594)
inline enum TGDraft::DimWeldLabelImportConstants TGDraft::ModelWeld::GetWeldLabelImport ( ) {
    enum DimWeldLabelImportConstants _result;
    _com_dispatch_method(this, 0x7f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(595)
inline enum TGDraft::DimWeldBeadWeldmentTypeConstants TGDraft::ModelWeld::GetWeldBeadWeldmentType ( ) {
    enum DimWeldBeadWeldmentTypeConstants _result;
    _com_dispatch_method(this, 0x88, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(596)
inline enum TGDraft::DimWeldBeadWeldmentShapeConstants TGDraft::ModelWeld::GetWeldBeadWeldmentShape ( ) {
    enum DimWeldBeadWeldmentShapeConstants _result;
    _com_dispatch_method(this, 0x89, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(597)
inline enum TGDraft::DimWeldBeadWeldTypeConstants TGDraft::ModelWeld::GetWeldBeadWeldType ( ) {
    enum DimWeldBeadWeldTypeConstants _result;
    _com_dispatch_method(this, 0x8a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(598)
inline enum TGDraft::DimWeldBeadWeldStandardConstants TGDraft::ModelWeld::GetWeldBeadWeldStandard ( ) {
    enum DimWeldBeadWeldStandardConstants _result;
    _com_dispatch_method(this, 0x8b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(599)
inline enum TGDraft::DimWeldBeadWeldImportConstants TGDraft::ModelWeld::GetWeldBeadWeldImport ( ) {
    enum DimWeldBeadWeldImportConstants _result;
    _com_dispatch_method(this, 0x8c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(600)
inline enum TGFrameworkSupport::DimWeldTypeConstants TGDraft::ModelWeld::GetTopTypeCompound ( ) {
    enum TGFrameworkSupport::DimWeldTypeConstants _result;
    _com_dispatch_method(this, 0x8d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(601)
inline enum TGFrameworkSupport::DimWeldTypeConstants TGDraft::ModelWeld::GetBottomTypeCompound ( ) {
    enum TGFrameworkSupport::DimWeldTypeConstants _result;
    _com_dispatch_method(this, 0x8e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(602)
inline _bstr_t TGDraft::ModelWeld::GetTopNoteCSize ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x80, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(603)
inline _bstr_t TGDraft::ModelWeld::GetBottomNoteCSize ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(604)
inline _bstr_t TGDraft::ModelWeld::GetTopNoteAngle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x82, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(605)
inline _bstr_t TGDraft::ModelWeld::GetBottomNoteAngle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x83, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(606)
inline _bstr_t TGDraft::ModelWeld::GetTopNoteDepth ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x84, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(607)
inline _bstr_t TGDraft::ModelWeld::GetBottomNoteDepth ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x85, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(608)
inline int TGDraft::ModelWeld::GetTopPosOffset ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x86, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(609)
inline int TGDraft::ModelWeld::GetBottomPosOffset ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x87, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(610)
inline enum TGFrameworkSupport::WeldSymbolFlagDirectionConstants TGDraft::ModelWeld::GetWeldInFieldFlagDirection ( ) {
    enum TGFrameworkSupport::WeldSymbolFlagDirectionConstants _result;
    _com_dispatch_method(this, 0x8f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

//
// interface _IModelWeldsAuto wrapper method implementations
//

#pragma implementation_key(611)
inline TGFramework::ApplicationPtr TGDraft::_IModelWeldsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(612)
inline IDispatchPtr TGDraft::_IModelWeldsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(613)
inline long TGDraft::_IModelWeldsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(614)
inline TGDraft::ModelWeldPtr TGDraft::_IModelWeldsAuto::Item ( const _variant_t & Index ) {
    struct ModelWeld * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ModelWeldPtr(_result, false);
}

#pragma implementation_key(615)
inline IUnknownPtr TGDraft::_IModelWeldsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

//
// interface _IModelWeldAuto wrapper method implementations
//

#pragma implementation_key(616)
inline TGFramework::ApplicationPtr TGDraft::_IModelWeldAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(617)
inline _bstr_t TGDraft::_IModelWeldAuto::GetBottomNote1 ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BottomNote1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(618)
inline _bstr_t TGDraft::_IModelWeldAuto::GetBottomNote2 ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BottomNote2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(619)
inline _bstr_t TGDraft::_IModelWeldAuto::GetBottomNote3 ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BottomNote3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(620)
inline _bstr_t TGDraft::_IModelWeldAuto::GetBottomNoteZ ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BottomNoteZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(621)
inline enum TGFrameworkSupport::DimWeldTreatmentTypeConstants TGDraft::_IModelWeldAuto::GetBottomTreatmentType ( ) {
    enum TGFrameworkSupport::DimWeldTreatmentTypeConstants _result;
    HRESULT _hr = get_BottomTreatmentType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(622)
inline enum TGFrameworkSupport::DimWeldTypeConstants TGDraft::_IModelWeldAuto::GetBottomType ( ) {
    enum TGFrameworkSupport::DimWeldTypeConstants _result;
    HRESULT _hr = get_BottomType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(623)
inline enum TGFrameworkSupport::DimWeldTypeConstants TGDraft::_IModelWeldAuto::GetCenterType ( ) {
    enum TGFrameworkSupport::DimWeldTypeConstants _result;
    HRESULT _hr = get_CenterType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(624)
inline double TGDraft::_IModelWeldAuto::GetCrossSectionArea ( ) {
    double _result = 0;
    HRESULT _hr = get_CrossSectionArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(625)
inline enum TGFrameworkSupport::DimWeldDashLineTypeConstants TGDraft::_IModelWeldAuto::GetDashLine ( ) {
    enum TGFrameworkSupport::DimWeldDashLineTypeConstants _result;
    HRESULT _hr = get_DashLine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(626)
inline double TGDraft::_IModelWeldAuto::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(627)
inline VARIANT_BOOL TGDraft::_IModelWeldAuto::GetOffsetTopBottom ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_OffsetTopBottom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(628)
inline IDispatchPtr TGDraft::_IModelWeldAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(629)
inline VARIANT_BOOL TGDraft::_IModelWeldAuto::GetSymmetrical ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Symmetrical(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(630)
inline enum TGFrameworkSupport::DimWeldTailTypeConstants TGDraft::_IModelWeldAuto::GetTail ( ) {
    enum TGFrameworkSupport::DimWeldTailTypeConstants _result;
    HRESULT _hr = get_Tail(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(631)
inline _bstr_t TGDraft::_IModelWeldAuto::GetTailNote ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TailNote(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(632)
inline _bstr_t TGDraft::_IModelWeldAuto::GetTailNote2 ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TailNote2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(633)
inline _bstr_t TGDraft::_IModelWeldAuto::GetTopNote1 ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TopNote1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(634)
inline _bstr_t TGDraft::_IModelWeldAuto::GetTopNote2 ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TopNote2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(635)
inline _bstr_t TGDraft::_IModelWeldAuto::GetTopNote3 ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TopNote3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(636)
inline _bstr_t TGDraft::_IModelWeldAuto::GetTopNoteZ ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TopNoteZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(637)
inline enum TGFrameworkSupport::DimWeldTreatmentTypeConstants TGDraft::_IModelWeldAuto::GetTopTreatmentType ( ) {
    enum TGFrameworkSupport::DimWeldTreatmentTypeConstants _result;
    HRESULT _hr = get_TopTreatmentType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(638)
inline enum TGFrameworkSupport::DimWeldTypeConstants TGDraft::_IModelWeldAuto::GetTopType ( ) {
    enum TGFrameworkSupport::DimWeldTypeConstants _result;
    HRESULT _hr = get_TopType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(639)
inline VARIANT_BOOL TGDraft::_IModelWeldAuto::GetWeldAllAround ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WeldAllAround(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(640)
inline VARIANT_BOOL TGDraft::_IModelWeldAuto::GetWeldInField ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WeldInField(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(641)
inline VARIANT_BOOL TGDraft::_IModelWeldAuto::GetZSymbol ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ZSymbol(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(642)
inline enum TGDraft::DimWeldLabelImportConstants TGDraft::_IModelWeldAuto::GetWeldLabelImport ( ) {
    enum DimWeldLabelImportConstants _result;
    HRESULT _hr = get_WeldLabelImport(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(643)
inline enum TGDraft::DimWeldBeadWeldmentTypeConstants TGDraft::_IModelWeldAuto::GetWeldBeadWeldmentType ( ) {
    enum DimWeldBeadWeldmentTypeConstants _result;
    HRESULT _hr = get_WeldBeadWeldmentType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(644)
inline enum TGDraft::DimWeldBeadWeldmentShapeConstants TGDraft::_IModelWeldAuto::GetWeldBeadWeldmentShape ( ) {
    enum DimWeldBeadWeldmentShapeConstants _result;
    HRESULT _hr = get_WeldBeadWeldmentShape(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(645)
inline enum TGDraft::DimWeldBeadWeldTypeConstants TGDraft::_IModelWeldAuto::GetWeldBeadWeldType ( ) {
    enum DimWeldBeadWeldTypeConstants _result;
    HRESULT _hr = get_WeldBeadWeldType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(646)
inline enum TGDraft::DimWeldBeadWeldStandardConstants TGDraft::_IModelWeldAuto::GetWeldBeadWeldStandard ( ) {
    enum DimWeldBeadWeldStandardConstants _result;
    HRESULT _hr = get_WeldBeadWeldStandard(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(647)
inline enum TGDraft::DimWeldBeadWeldImportConstants TGDraft::_IModelWeldAuto::GetWeldBeadWeldImport ( ) {
    enum DimWeldBeadWeldImportConstants _result;
    HRESULT _hr = get_WeldBeadWeldImport(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(648)
inline enum TGFrameworkSupport::DimWeldTypeConstants TGDraft::_IModelWeldAuto::GetTopTypeCompound ( ) {
    enum TGFrameworkSupport::DimWeldTypeConstants _result;
    HRESULT _hr = get_TopTypeCompound(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(649)
inline enum TGFrameworkSupport::DimWeldTypeConstants TGDraft::_IModelWeldAuto::GetBottomTypeCompound ( ) {
    enum TGFrameworkSupport::DimWeldTypeConstants _result;
    HRESULT _hr = get_BottomTypeCompound(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(650)
inline _bstr_t TGDraft::_IModelWeldAuto::GetTopNoteCSize ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TopNoteCSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(651)
inline _bstr_t TGDraft::_IModelWeldAuto::GetBottomNoteCSize ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BottomNoteCSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(652)
inline _bstr_t TGDraft::_IModelWeldAuto::GetTopNoteAngle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TopNoteAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(653)
inline _bstr_t TGDraft::_IModelWeldAuto::GetBottomNoteAngle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BottomNoteAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(654)
inline _bstr_t TGDraft::_IModelWeldAuto::GetTopNoteDepth ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TopNoteDepth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(655)
inline _bstr_t TGDraft::_IModelWeldAuto::GetBottomNoteDepth ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BottomNoteDepth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(656)
inline int TGDraft::_IModelWeldAuto::GetTopPosOffset ( ) {
    int _result = 0;
    HRESULT _hr = get_TopPosOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(657)
inline int TGDraft::_IModelWeldAuto::GetBottomPosOffset ( ) {
    int _result = 0;
    HRESULT _hr = get_BottomPosOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(658)
inline enum TGFrameworkSupport::WeldSymbolFlagDirectionConstants TGDraft::_IModelWeldAuto::GetWeldInFieldFlagDirection ( ) {
    enum TGFrameworkSupport::WeldSymbolFlagDirectionConstants _result;
    HRESULT _hr = get_WeldInFieldFlagDirection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface DVArcs2d wrapper method implementations
//

#pragma implementation_key(659)
inline TGDraft::DVArc2dPtr TGDraft::DVArcs2d::Item ( const _variant_t & Index ) {
    struct DVArc2d * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return DVArc2dPtr(_result, false);
}

#pragma implementation_key(660)
inline TGFramework::ApplicationPtr TGDraft::DVArcs2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(661)
inline long TGDraft::DVArcs2d::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(662)
inline IDispatchPtr TGDraft::DVArcs2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// dispinterface DVArc2d wrapper method implementations
//

#pragma implementation_key(663)
inline TGFrameworkSupport::Relationships2dPtr TGDraft::DVArc2d::GetRelationships ( ) {
    struct TGFrameworkSupport::Relationships2d * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::Relationships2dPtr(_result, false);
}

#pragma implementation_key(664)
inline TGFramework::ApplicationPtr TGDraft::DVArc2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x865, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(665)
inline _bstr_t TGDraft::DVArc2d::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x867, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(666)
inline TGDraft::DrawingViewPtr TGDraft::DVArc2d::GetDrawingView ( ) {
    struct DrawingView * _result = 0;
    _com_dispatch_method(this, 0x32, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(667)
inline TGDraft::ModelMemberPtr TGDraft::DVArc2d::GetModelMember ( ) {
    struct ModelMember * _result = 0;
    _com_dispatch_method(this, 0x33, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ModelMemberPtr(_result, false);
}

#pragma implementation_key(668)
inline enum TGDraft::GraphicMemberEdgeTypeConstants TGDraft::DVArc2d::GetEdgeType ( ) {
    enum GraphicMemberEdgeTypeConstants _result;
    _com_dispatch_method(this, 0x34, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(669)
inline TGFramework::ReferencePtr TGDraft::DVArc2d::GetReference ( ) {
    struct TGFramework::Reference * _result = 0;
    _com_dispatch_method(this, 0x35, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ReferencePtr(_result, false);
}

#pragma implementation_key(670)
inline HRESULT TGDraft::DVArc2d::GetReferenceKey ( BSTR * FullName, SAFEARRAY * * ReferenceKey, long * KeySize ) {
    return _com_dispatch_method(this, 0x36, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008\x6011\x4003", FullName, ReferenceKey, KeySize);
}

#pragma implementation_key(671)
inline TGDraft::DVShowHideEdgeOverrideType TGDraft::DVArc2d::GetShowHideEdgeOverride ( const _variant_t & segmentIndex ) {
    DVShowHideEdgeOverrideType _result;
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x080c", &segmentIndex);
    return _result;
}

#pragma implementation_key(672)
inline void TGDraft::DVArc2d::PutShowHideEdgeOverride ( const _variant_t & segmentIndex, DVShowHideEdgeOverrideType _arg2 ) {
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000c\x0003", &segmentIndex, _arg2);
}

#pragma implementation_key(673)
inline enum TGFramework::ObjectType TGDraft::DVArc2d::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x869, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(674)
inline _bstr_t TGDraft::DVArc2d::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x86c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(675)
inline IDispatchPtr TGDraft::DVArc2d::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x86d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(676)
inline HRESULT TGDraft::DVArc2d::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60010811, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(677)
inline double TGDraft::DVArc2d::GetRadius ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1800, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(678)
inline double TGDraft::DVArc2d::GetStartAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1801, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(679)
inline double TGDraft::DVArc2d::GetSweepAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1802, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(680)
inline enum TGFrameworkSupport::Geom2dOrientationConstants TGDraft::DVArc2d::GetOrientation ( ) {
    enum TGFrameworkSupport::Geom2dOrientationConstants _result;
    _com_dispatch_method(this, 0x1803, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(681)
inline HRESULT TGDraft::DVArc2d::GetStartPoint ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x60011809, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(682)
inline HRESULT TGDraft::DVArc2d::GetEndPoint ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x6001180b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(683)
inline HRESULT TGDraft::DVArc2d::GetCenterPoint ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x6001180d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(684)
inline HRESULT TGDraft::DVArc2d::GetMajorAxis ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x6001180f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(685)
inline long TGDraft::DVArc2d::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2801, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(686)
inline HRESULT TGDraft::DVArc2d::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x2802, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(687)
inline long TGDraft::DVArc2d::GetSegmentedStyleCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3801, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(688)
inline HRESULT TGDraft::DVArc2d::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * style ) {
    return _com_dispatch_method(this, 0x3865, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4005\x4009", Index, x1, y1, x2, y2, style);
}

#pragma implementation_key(689)
inline TGDraft::ModelWeldsPtr TGDraft::DVArc2d::GetModelWelds ( ) {
    struct ModelWelds * _result = 0;
    _com_dispatch_method(this, 0x8d9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ModelWeldsPtr(_result, false);
}

#pragma implementation_key(690)
inline double TGDraft::DVArc2d::GetBendAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x86e, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(691)
inline double TGDraft::DVArc2d::GetBendRadius ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x86f, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(692)
inline IDispatchPtr TGDraft::DVArc2d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(693)
inline VARIANT_BOOL TGDraft::DVArc2d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _IDVArcs2dAuto wrapper method implementations
//

#pragma implementation_key(694)
inline TGDraft::DVArc2dPtr TGDraft::_IDVArcs2dAuto::Item ( const _variant_t & Index ) {
    struct DVArc2d * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DVArc2dPtr(_result, false);
}

#pragma implementation_key(695)
inline IUnknownPtr TGDraft::_IDVArcs2dAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(696)
inline TGFramework::ApplicationPtr TGDraft::_IDVArcs2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(697)
inline long TGDraft::_IDVArcs2dAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(698)
inline IDispatchPtr TGDraft::_IDVArcs2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// interface _IDVArc2dAuto wrapper method implementations
//

#pragma implementation_key(699)
inline TGFrameworkSupport::Relationships2dPtr TGDraft::_IDVArc2dAuto::GetRelationships ( ) {
    struct TGFrameworkSupport::Relationships2d * _result = 0;
    HRESULT _hr = get_Relationships(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::Relationships2dPtr(_result, false);
}

#pragma implementation_key(700)
inline TGFramework::ApplicationPtr TGDraft::_IDVArc2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(701)
inline _bstr_t TGDraft::_IDVArc2dAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(702)
inline TGDraft::DrawingViewPtr TGDraft::_IDVArc2dAuto::GetDrawingView ( ) {
    struct DrawingView * _result = 0;
    HRESULT _hr = get_DrawingView(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(703)
inline TGDraft::ModelMemberPtr TGDraft::_IDVArc2dAuto::GetModelMember ( ) {
    struct ModelMember * _result = 0;
    HRESULT _hr = get_ModelMember(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ModelMemberPtr(_result, false);
}

#pragma implementation_key(704)
inline enum TGDraft::GraphicMemberEdgeTypeConstants TGDraft::_IDVArc2dAuto::GetEdgeType ( ) {
    enum GraphicMemberEdgeTypeConstants _result;
    HRESULT _hr = get_EdgeType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(705)
inline TGFramework::ReferencePtr TGDraft::_IDVArc2dAuto::GetReference ( ) {
    struct TGFramework::Reference * _result = 0;
    HRESULT _hr = get_Reference(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ReferencePtr(_result, false);
}

#pragma implementation_key(706)
inline HRESULT TGDraft::_IDVArc2dAuto::GetReferenceKey ( BSTR * FullName, SAFEARRAY * * ReferenceKey, long * KeySize ) {
    HRESULT _hr = raw_GetReferenceKey(FullName, ReferenceKey, KeySize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(707)
inline TGDraft::DVShowHideEdgeOverrideType TGDraft::_IDVArc2dAuto::GetShowHideEdgeOverride ( const _variant_t & segmentIndex ) {
    DVShowHideEdgeOverrideType _result;
    HRESULT _hr = get_ShowHideEdgeOverride(segmentIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(708)
inline void TGDraft::_IDVArc2dAuto::PutShowHideEdgeOverride ( const _variant_t & segmentIndex, DVShowHideEdgeOverrideType overrideType ) {
    HRESULT _hr = put_ShowHideEdgeOverride(segmentIndex, overrideType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(709)
inline enum TGFramework::ObjectType TGDraft::_IDVArc2dAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(710)
inline _bstr_t TGDraft::_IDVArc2dAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(711)
inline IDispatchPtr TGDraft::_IDVArc2dAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(712)
inline HRESULT TGDraft::_IDVArc2dAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(713)
inline double TGDraft::_IDVArc2dAuto::GetRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(714)
inline double TGDraft::_IDVArc2dAuto::GetStartAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_StartAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(715)
inline double TGDraft::_IDVArc2dAuto::GetSweepAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_SweepAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(716)
inline enum TGFrameworkSupport::Geom2dOrientationConstants TGDraft::_IDVArc2dAuto::GetOrientation ( ) {
    enum TGFrameworkSupport::Geom2dOrientationConstants _result;
    HRESULT _hr = get_Orientation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(717)
inline HRESULT TGDraft::_IDVArc2dAuto::GetStartPoint ( double * x, double * y ) {
    HRESULT _hr = raw_GetStartPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(718)
inline HRESULT TGDraft::_IDVArc2dAuto::GetEndPoint ( double * x, double * y ) {
    HRESULT _hr = raw_GetEndPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(719)
inline HRESULT TGDraft::_IDVArc2dAuto::GetCenterPoint ( double * x, double * y ) {
    HRESULT _hr = raw_GetCenterPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(720)
inline HRESULT TGDraft::_IDVArc2dAuto::GetMajorAxis ( double * x, double * y ) {
    HRESULT _hr = raw_GetMajorAxis(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(721)
inline long TGDraft::_IDVArc2dAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(722)
inline HRESULT TGDraft::_IDVArc2dAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(723)
inline long TGDraft::_IDVArc2dAuto::GetSegmentedStyleCount ( ) {
    long _result = 0;
    HRESULT _hr = get_SegmentedStyleCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(724)
inline HRESULT TGDraft::_IDVArc2dAuto::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * style ) {
    HRESULT _hr = raw_GetSegmentedStyle(Index, x1, y1, x2, y2, style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(725)
inline TGDraft::ModelWeldsPtr TGDraft::_IDVArc2dAuto::GetModelWelds ( ) {
    struct ModelWelds * _result = 0;
    HRESULT _hr = get_ModelWelds(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ModelWeldsPtr(_result, false);
}

#pragma implementation_key(726)
inline double TGDraft::_IDVArc2dAuto::GetBendAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_BendAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(727)
inline double TGDraft::_IDVArc2dAuto::GetBendRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_BendRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(728)
inline IDispatchPtr TGDraft::_IDVArc2dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(729)
inline VARIANT_BOOL TGDraft::_IDVArc2dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface DVBSplineCurves2d wrapper method implementations
//

#pragma implementation_key(730)
inline TGDraft::DVBSplineCurve2dPtr TGDraft::DVBSplineCurves2d::Item ( const _variant_t & Index ) {
    struct DVBSplineCurve2d * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return DVBSplineCurve2dPtr(_result, false);
}

#pragma implementation_key(731)
inline TGFramework::ApplicationPtr TGDraft::DVBSplineCurves2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(732)
inline long TGDraft::DVBSplineCurves2d::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(733)
inline IDispatchPtr TGDraft::DVBSplineCurves2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// dispinterface DVBSplineCurve2d wrapper method implementations
//

#pragma implementation_key(734)
inline TGFrameworkSupport::Relationships2dPtr TGDraft::DVBSplineCurve2d::GetRelationships ( ) {
    struct TGFrameworkSupport::Relationships2d * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::Relationships2dPtr(_result, false);
}

#pragma implementation_key(735)
inline TGFramework::ApplicationPtr TGDraft::DVBSplineCurve2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x865, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(736)
inline _bstr_t TGDraft::DVBSplineCurve2d::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x867, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(737)
inline TGDraft::DrawingViewPtr TGDraft::DVBSplineCurve2d::GetDrawingView ( ) {
    struct DrawingView * _result = 0;
    _com_dispatch_method(this, 0x32, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(738)
inline TGDraft::ModelMemberPtr TGDraft::DVBSplineCurve2d::GetModelMember ( ) {
    struct ModelMember * _result = 0;
    _com_dispatch_method(this, 0x33, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ModelMemberPtr(_result, false);
}

#pragma implementation_key(739)
inline enum TGDraft::GraphicMemberEdgeTypeConstants TGDraft::DVBSplineCurve2d::GetEdgeType ( ) {
    enum GraphicMemberEdgeTypeConstants _result;
    _com_dispatch_method(this, 0x34, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(740)
inline TGFramework::ReferencePtr TGDraft::DVBSplineCurve2d::GetReference ( ) {
    struct TGFramework::Reference * _result = 0;
    _com_dispatch_method(this, 0x35, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ReferencePtr(_result, false);
}

#pragma implementation_key(741)
inline HRESULT TGDraft::DVBSplineCurve2d::GetReferenceKey ( BSTR * FullName, SAFEARRAY * * ReferenceKey, long * KeySize ) {
    return _com_dispatch_method(this, 0x36, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008\x6011\x4003", FullName, ReferenceKey, KeySize);
}

#pragma implementation_key(742)
inline TGDraft::DVShowHideEdgeOverrideType TGDraft::DVBSplineCurve2d::GetShowHideEdgeOverride ( const _variant_t & segmentIndex ) {
    DVShowHideEdgeOverrideType _result;
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x080c", &segmentIndex);
    return _result;
}

#pragma implementation_key(743)
inline void TGDraft::DVBSplineCurve2d::PutShowHideEdgeOverride ( const _variant_t & segmentIndex, DVShowHideEdgeOverrideType _arg2 ) {
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000c\x0003", &segmentIndex, _arg2);
}

#pragma implementation_key(744)
inline enum TGFramework::ObjectType TGDraft::DVBSplineCurve2d::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x869, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(745)
inline _bstr_t TGDraft::DVBSplineCurve2d::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x86c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(746)
inline IDispatchPtr TGDraft::DVBSplineCurve2d::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x86d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(747)
inline HRESULT TGDraft::DVBSplineCurve2d::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60010811, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(748)
inline long TGDraft::DVBSplineCurve2d::GetOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1801, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(749)
inline double TGDraft::DVBSplineCurve2d::GetLength ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1802, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(750)
inline enum TGFrameworkSupport::Geom2dFormConstants TGDraft::DVBSplineCurve2d::GetForm ( ) {
    enum TGFrameworkSupport::Geom2dFormConstants _result;
    _com_dispatch_method(this, 0x1804, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(751)
inline enum TGFrameworkSupport::Geom2dScopeConstants TGDraft::DVBSplineCurve2d::GetScope ( ) {
    enum TGFrameworkSupport::Geom2dScopeConstants _result;
    _com_dispatch_method(this, 0x1805, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(752)
inline long TGDraft::DVBSplineCurve2d::GetPoleCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1806, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(753)
inline long TGDraft::DVBSplineCurve2d::GetNodeCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1807, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(754)
inline double TGDraft::DVBSplineCurve2d::GetArea ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1808, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(755)
inline HRESULT TGDraft::DVBSplineCurve2d::GetPole ( long Index, double * x, double * y ) {
    return _com_dispatch_method(this, 0x60011807, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005", Index, x, y);
}

#pragma implementation_key(756)
inline HRESULT TGDraft::DVBSplineCurve2d::GetNode ( long Index, double * x, double * y ) {
    return _com_dispatch_method(this, 0x60011809, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005", Index, x, y);
}

#pragma implementation_key(757)
inline long TGDraft::DVBSplineCurve2d::GetNearestNode ( double x, double y ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6001180d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005", x, y);
    return _result;
}

#pragma implementation_key(758)
inline HRESULT TGDraft::DVBSplineCurve2d::GetCentroid ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x6001180e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(759)
inline long TGDraft::DVBSplineCurve2d::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2801, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(760)
inline HRESULT TGDraft::DVBSplineCurve2d::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x2802, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(761)
inline long TGDraft::DVBSplineCurve2d::GetSegmentedStyleCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3801, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(762)
inline HRESULT TGDraft::DVBSplineCurve2d::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * style ) {
    return _com_dispatch_method(this, 0x3865, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4005\x4009", Index, x1, y1, x2, y2, style);
}

#pragma implementation_key(763)
inline TGDraft::ModelWeldsPtr TGDraft::DVBSplineCurve2d::GetModelWelds ( ) {
    struct ModelWelds * _result = 0;
    _com_dispatch_method(this, 0x8da, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ModelWeldsPtr(_result, false);
}

#pragma implementation_key(764)
inline double TGDraft::DVBSplineCurve2d::GetBendAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x86e, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(765)
inline double TGDraft::DVBSplineCurve2d::GetBendRadius ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x86f, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(766)
inline IDispatchPtr TGDraft::DVBSplineCurve2d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(767)
inline VARIANT_BOOL TGDraft::DVBSplineCurve2d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _IDVBSplineCurves2dAuto wrapper method implementations
//

#pragma implementation_key(768)
inline TGDraft::DVBSplineCurve2dPtr TGDraft::_IDVBSplineCurves2dAuto::Item ( const _variant_t & Index ) {
    struct DVBSplineCurve2d * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DVBSplineCurve2dPtr(_result, false);
}

#pragma implementation_key(769)
inline IUnknownPtr TGDraft::_IDVBSplineCurves2dAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(770)
inline TGFramework::ApplicationPtr TGDraft::_IDVBSplineCurves2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(771)
inline long TGDraft::_IDVBSplineCurves2dAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(772)
inline IDispatchPtr TGDraft::_IDVBSplineCurves2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// interface _IDVBSplineCurve2dAuto wrapper method implementations
//

#pragma implementation_key(773)
inline TGFrameworkSupport::Relationships2dPtr TGDraft::_IDVBSplineCurve2dAuto::GetRelationships ( ) {
    struct TGFrameworkSupport::Relationships2d * _result = 0;
    HRESULT _hr = get_Relationships(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::Relationships2dPtr(_result, false);
}

#pragma implementation_key(774)
inline TGFramework::ApplicationPtr TGDraft::_IDVBSplineCurve2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(775)
inline _bstr_t TGDraft::_IDVBSplineCurve2dAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(776)
inline TGDraft::DrawingViewPtr TGDraft::_IDVBSplineCurve2dAuto::GetDrawingView ( ) {
    struct DrawingView * _result = 0;
    HRESULT _hr = get_DrawingView(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(777)
inline TGDraft::ModelMemberPtr TGDraft::_IDVBSplineCurve2dAuto::GetModelMember ( ) {
    struct ModelMember * _result = 0;
    HRESULT _hr = get_ModelMember(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ModelMemberPtr(_result, false);
}

#pragma implementation_key(778)
inline enum TGDraft::GraphicMemberEdgeTypeConstants TGDraft::_IDVBSplineCurve2dAuto::GetEdgeType ( ) {
    enum GraphicMemberEdgeTypeConstants _result;
    HRESULT _hr = get_EdgeType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(779)
inline TGFramework::ReferencePtr TGDraft::_IDVBSplineCurve2dAuto::GetReference ( ) {
    struct TGFramework::Reference * _result = 0;
    HRESULT _hr = get_Reference(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ReferencePtr(_result, false);
}

#pragma implementation_key(780)
inline HRESULT TGDraft::_IDVBSplineCurve2dAuto::GetReferenceKey ( BSTR * FullName, SAFEARRAY * * ReferenceKey, long * KeySize ) {
    HRESULT _hr = raw_GetReferenceKey(FullName, ReferenceKey, KeySize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(781)
inline TGDraft::DVShowHideEdgeOverrideType TGDraft::_IDVBSplineCurve2dAuto::GetShowHideEdgeOverride ( const _variant_t & segmentIndex ) {
    DVShowHideEdgeOverrideType _result;
    HRESULT _hr = get_ShowHideEdgeOverride(segmentIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(782)
inline void TGDraft::_IDVBSplineCurve2dAuto::PutShowHideEdgeOverride ( const _variant_t & segmentIndex, DVShowHideEdgeOverrideType overrideType ) {
    HRESULT _hr = put_ShowHideEdgeOverride(segmentIndex, overrideType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(783)
inline enum TGFramework::ObjectType TGDraft::_IDVBSplineCurve2dAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(784)
inline _bstr_t TGDraft::_IDVBSplineCurve2dAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(785)
inline IDispatchPtr TGDraft::_IDVBSplineCurve2dAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(786)
inline HRESULT TGDraft::_IDVBSplineCurve2dAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(787)
inline long TGDraft::_IDVBSplineCurve2dAuto::GetOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_Order(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(788)
inline double TGDraft::_IDVBSplineCurve2dAuto::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(789)
inline enum TGFrameworkSupport::Geom2dFormConstants TGDraft::_IDVBSplineCurve2dAuto::GetForm ( ) {
    enum TGFrameworkSupport::Geom2dFormConstants _result;
    HRESULT _hr = get_Form(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(790)
inline enum TGFrameworkSupport::Geom2dScopeConstants TGDraft::_IDVBSplineCurve2dAuto::GetScope ( ) {
    enum TGFrameworkSupport::Geom2dScopeConstants _result;
    HRESULT _hr = get_Scope(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(791)
inline long TGDraft::_IDVBSplineCurve2dAuto::GetPoleCount ( ) {
    long _result = 0;
    HRESULT _hr = get_PoleCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(792)
inline long TGDraft::_IDVBSplineCurve2dAuto::GetNodeCount ( ) {
    long _result = 0;
    HRESULT _hr = get_NodeCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(793)
inline double TGDraft::_IDVBSplineCurve2dAuto::GetArea ( ) {
    double _result = 0;
    HRESULT _hr = get_Area(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(794)
inline HRESULT TGDraft::_IDVBSplineCurve2dAuto::GetPole ( long Index, double * x, double * y ) {
    HRESULT _hr = raw_GetPole(Index, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(795)
inline HRESULT TGDraft::_IDVBSplineCurve2dAuto::GetNode ( long Index, double * x, double * y ) {
    HRESULT _hr = raw_GetNode(Index, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(796)
inline long TGDraft::_IDVBSplineCurve2dAuto::GetNearestNode ( double x, double y ) {
    long _result = 0;
    HRESULT _hr = raw_GetNearestNode(x, y, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(797)
inline HRESULT TGDraft::_IDVBSplineCurve2dAuto::GetCentroid ( double * x, double * y ) {
    HRESULT _hr = raw_GetCentroid(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(798)
inline long TGDraft::_IDVBSplineCurve2dAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(799)
inline HRESULT TGDraft::_IDVBSplineCurve2dAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(800)
inline long TGDraft::_IDVBSplineCurve2dAuto::GetSegmentedStyleCount ( ) {
    long _result = 0;
    HRESULT _hr = get_SegmentedStyleCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(801)
inline HRESULT TGDraft::_IDVBSplineCurve2dAuto::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * style ) {
    HRESULT _hr = raw_GetSegmentedStyle(Index, x1, y1, x2, y2, style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(802)
inline TGDraft::ModelWeldsPtr TGDraft::_IDVBSplineCurve2dAuto::GetModelWelds ( ) {
    struct ModelWelds * _result = 0;
    HRESULT _hr = get_ModelWelds(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ModelWeldsPtr(_result, false);
}

#pragma implementation_key(803)
inline double TGDraft::_IDVBSplineCurve2dAuto::GetBendAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_BendAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(804)
inline double TGDraft::_IDVBSplineCurve2dAuto::GetBendRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_BendRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(805)
inline IDispatchPtr TGDraft::_IDVBSplineCurve2dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(806)
inline VARIANT_BOOL TGDraft::_IDVBSplineCurve2dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface DVCircles2d wrapper method implementations
//

#pragma implementation_key(807)
inline TGDraft::DVCircle2dPtr TGDraft::DVCircles2d::Item ( const _variant_t & Index ) {
    struct DVCircle2d * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return DVCircle2dPtr(_result, false);
}

#pragma implementation_key(808)
inline TGFramework::ApplicationPtr TGDraft::DVCircles2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(809)
inline long TGDraft::DVCircles2d::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(810)
inline IDispatchPtr TGDraft::DVCircles2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// dispinterface DVCircle2d wrapper method implementations
//

#pragma implementation_key(811)
inline TGFrameworkSupport::Relationships2dPtr TGDraft::DVCircle2d::GetRelationships ( ) {
    struct TGFrameworkSupport::Relationships2d * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::Relationships2dPtr(_result, false);
}

#pragma implementation_key(812)
inline TGFramework::ApplicationPtr TGDraft::DVCircle2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(813)
inline _bstr_t TGDraft::DVCircle2d::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1067, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(814)
inline TGDraft::DrawingViewPtr TGDraft::DVCircle2d::GetDrawingView ( ) {
    struct DrawingView * _result = 0;
    _com_dispatch_method(this, 0x32, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(815)
inline TGDraft::ModelMemberPtr TGDraft::DVCircle2d::GetModelMember ( ) {
    struct ModelMember * _result = 0;
    _com_dispatch_method(this, 0x33, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ModelMemberPtr(_result, false);
}

#pragma implementation_key(816)
inline enum TGDraft::GraphicMemberEdgeTypeConstants TGDraft::DVCircle2d::GetEdgeType ( ) {
    enum GraphicMemberEdgeTypeConstants _result;
    _com_dispatch_method(this, 0x34, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(817)
inline TGFramework::ReferencePtr TGDraft::DVCircle2d::GetReference ( ) {
    struct TGFramework::Reference * _result = 0;
    _com_dispatch_method(this, 0x35, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ReferencePtr(_result, false);
}

#pragma implementation_key(818)
inline HRESULT TGDraft::DVCircle2d::GetReferenceKey ( BSTR * FullName, SAFEARRAY * * ReferenceKey, long * KeySize ) {
    return _com_dispatch_method(this, 0x36, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008\x6011\x4003", FullName, ReferenceKey, KeySize);
}

#pragma implementation_key(819)
inline TGDraft::DVShowHideEdgeOverrideType TGDraft::DVCircle2d::GetShowHideEdgeOverride ( const _variant_t & segmentIndex ) {
    DVShowHideEdgeOverrideType _result;
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x080c", &segmentIndex);
    return _result;
}

#pragma implementation_key(820)
inline void TGDraft::DVCircle2d::PutShowHideEdgeOverride ( const _variant_t & segmentIndex, DVShowHideEdgeOverrideType _arg2 ) {
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000c\x0003", &segmentIndex, _arg2);
}

#pragma implementation_key(821)
inline enum TGFramework::ObjectType TGDraft::DVCircle2d::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x1069, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(822)
inline _bstr_t TGDraft::DVCircle2d::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x106c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(823)
inline IDispatchPtr TGDraft::DVCircle2d::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x106d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(824)
inline HRESULT TGDraft::DVCircle2d::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60011011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(825)
inline double TGDraft::DVCircle2d::GetRadius ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3000, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(826)
inline double TGDraft::DVCircle2d::GetDiameter ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3001, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(827)
inline double TGDraft::DVCircle2d::GetCircumference ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3002, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(828)
inline double TGDraft::DVCircle2d::GetArea ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3003, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(829)
inline HRESULT TGDraft::DVCircle2d::GetCenterPoint ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x60013006, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(830)
inline HRESULT TGDraft::DVCircle2d::GetMajorAxis ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x60013008, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(831)
inline long TGDraft::DVCircle2d::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(832)
inline HRESULT TGDraft::DVCircle2d::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x5002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(833)
inline long TGDraft::DVCircle2d::GetSegmentedStyleCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(834)
inline HRESULT TGDraft::DVCircle2d::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * style ) {
    return _com_dispatch_method(this, 0x6065, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4005\x4009", Index, x1, y1, x2, y2, style);
}

#pragma implementation_key(835)
inline TGDraft::ModelWeldsPtr TGDraft::DVCircle2d::GetModelWelds ( ) {
    struct ModelWelds * _result = 0;
    _com_dispatch_method(this, 0x8db, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ModelWeldsPtr(_result, false);
}

#pragma implementation_key(836)
inline double TGDraft::DVCircle2d::GetBendAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x86e, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(837)
inline double TGDraft::DVCircle2d::GetBendRadius ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x86f, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(838)
inline IDispatchPtr TGDraft::DVCircle2d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(839)
inline VARIANT_BOOL TGDraft::DVCircle2d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _IDVCircles2dAuto wrapper method implementations
//

#pragma implementation_key(840)
inline TGDraft::DVCircle2dPtr TGDraft::_IDVCircles2dAuto::Item ( const _variant_t & Index ) {
    struct DVCircle2d * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DVCircle2dPtr(_result, false);
}

#pragma implementation_key(841)
inline IUnknownPtr TGDraft::_IDVCircles2dAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(842)
inline TGFramework::ApplicationPtr TGDraft::_IDVCircles2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(843)
inline long TGDraft::_IDVCircles2dAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(844)
inline IDispatchPtr TGDraft::_IDVCircles2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// interface _IDVCircle2dAuto wrapper method implementations
//

#pragma implementation_key(845)
inline TGFrameworkSupport::Relationships2dPtr TGDraft::_IDVCircle2dAuto::GetRelationships ( ) {
    struct TGFrameworkSupport::Relationships2d * _result = 0;
    HRESULT _hr = get_Relationships(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::Relationships2dPtr(_result, false);
}

#pragma implementation_key(846)
inline TGFramework::ApplicationPtr TGDraft::_IDVCircle2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(847)
inline _bstr_t TGDraft::_IDVCircle2dAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(848)
inline TGDraft::DrawingViewPtr TGDraft::_IDVCircle2dAuto::GetDrawingView ( ) {
    struct DrawingView * _result = 0;
    HRESULT _hr = get_DrawingView(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(849)
inline TGDraft::ModelMemberPtr TGDraft::_IDVCircle2dAuto::GetModelMember ( ) {
    struct ModelMember * _result = 0;
    HRESULT _hr = get_ModelMember(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ModelMemberPtr(_result, false);
}

#pragma implementation_key(850)
inline enum TGDraft::GraphicMemberEdgeTypeConstants TGDraft::_IDVCircle2dAuto::GetEdgeType ( ) {
    enum GraphicMemberEdgeTypeConstants _result;
    HRESULT _hr = get_EdgeType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(851)
inline TGFramework::ReferencePtr TGDraft::_IDVCircle2dAuto::GetReference ( ) {
    struct TGFramework::Reference * _result = 0;
    HRESULT _hr = get_Reference(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ReferencePtr(_result, false);
}

#pragma implementation_key(852)
inline HRESULT TGDraft::_IDVCircle2dAuto::GetReferenceKey ( BSTR * FullName, SAFEARRAY * * ReferenceKey, long * KeySize ) {
    HRESULT _hr = raw_GetReferenceKey(FullName, ReferenceKey, KeySize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(853)
inline TGDraft::DVShowHideEdgeOverrideType TGDraft::_IDVCircle2dAuto::GetShowHideEdgeOverride ( const _variant_t & segmentIndex ) {
    DVShowHideEdgeOverrideType _result;
    HRESULT _hr = get_ShowHideEdgeOverride(segmentIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(854)
inline void TGDraft::_IDVCircle2dAuto::PutShowHideEdgeOverride ( const _variant_t & segmentIndex, DVShowHideEdgeOverrideType overrideType ) {
    HRESULT _hr = put_ShowHideEdgeOverride(segmentIndex, overrideType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(855)
inline enum TGFramework::ObjectType TGDraft::_IDVCircle2dAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(856)
inline _bstr_t TGDraft::_IDVCircle2dAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(857)
inline IDispatchPtr TGDraft::_IDVCircle2dAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(858)
inline HRESULT TGDraft::_IDVCircle2dAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(859)
inline double TGDraft::_IDVCircle2dAuto::GetRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(860)
inline double TGDraft::_IDVCircle2dAuto::GetDiameter ( ) {
    double _result = 0;
    HRESULT _hr = get_Diameter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(861)
inline double TGDraft::_IDVCircle2dAuto::GetCircumference ( ) {
    double _result = 0;
    HRESULT _hr = get_Circumference(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(862)
inline double TGDraft::_IDVCircle2dAuto::GetArea ( ) {
    double _result = 0;
    HRESULT _hr = get_Area(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(863)
inline HRESULT TGDraft::_IDVCircle2dAuto::GetCenterPoint ( double * x, double * y ) {
    HRESULT _hr = raw_GetCenterPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(864)
inline HRESULT TGDraft::_IDVCircle2dAuto::GetMajorAxis ( double * x, double * y ) {
    HRESULT _hr = raw_GetMajorAxis(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(865)
inline long TGDraft::_IDVCircle2dAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(866)
inline HRESULT TGDraft::_IDVCircle2dAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(867)
inline long TGDraft::_IDVCircle2dAuto::GetSegmentedStyleCount ( ) {
    long _result = 0;
    HRESULT _hr = get_SegmentedStyleCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(868)
inline HRESULT TGDraft::_IDVCircle2dAuto::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * style ) {
    HRESULT _hr = raw_GetSegmentedStyle(Index, x1, y1, x2, y2, style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(869)
inline TGDraft::ModelWeldsPtr TGDraft::_IDVCircle2dAuto::GetModelWelds ( ) {
    struct ModelWelds * _result = 0;
    HRESULT _hr = get_ModelWelds(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ModelWeldsPtr(_result, false);
}

#pragma implementation_key(870)
inline double TGDraft::_IDVCircle2dAuto::GetBendAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_BendAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(871)
inline double TGDraft::_IDVCircle2dAuto::GetBendRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_BendRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(872)
inline IDispatchPtr TGDraft::_IDVCircle2dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(873)
inline VARIANT_BOOL TGDraft::_IDVCircle2dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface DVEllipses2d wrapper method implementations
//

#pragma implementation_key(874)
inline TGDraft::DVEllipse2dPtr TGDraft::DVEllipses2d::Item ( const _variant_t & Index ) {
    struct DVEllipse2d * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return DVEllipse2dPtr(_result, false);
}

#pragma implementation_key(875)
inline TGFramework::ApplicationPtr TGDraft::DVEllipses2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(876)
inline long TGDraft::DVEllipses2d::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(877)
inline IDispatchPtr TGDraft::DVEllipses2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// dispinterface DVEllipse2d wrapper method implementations
//

#pragma implementation_key(878)
inline TGFrameworkSupport::Relationships2dPtr TGDraft::DVEllipse2d::GetRelationships ( ) {
    struct TGFrameworkSupport::Relationships2d * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::Relationships2dPtr(_result, false);
}

#pragma implementation_key(879)
inline TGFramework::ApplicationPtr TGDraft::DVEllipse2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(880)
inline _bstr_t TGDraft::DVEllipse2d::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1067, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(881)
inline TGDraft::DrawingViewPtr TGDraft::DVEllipse2d::GetDrawingView ( ) {
    struct DrawingView * _result = 0;
    _com_dispatch_method(this, 0x32, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(882)
inline TGDraft::ModelMemberPtr TGDraft::DVEllipse2d::GetModelMember ( ) {
    struct ModelMember * _result = 0;
    _com_dispatch_method(this, 0x33, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ModelMemberPtr(_result, false);
}

#pragma implementation_key(883)
inline enum TGDraft::GraphicMemberEdgeTypeConstants TGDraft::DVEllipse2d::GetEdgeType ( ) {
    enum GraphicMemberEdgeTypeConstants _result;
    _com_dispatch_method(this, 0x34, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(884)
inline TGFramework::ReferencePtr TGDraft::DVEllipse2d::GetReference ( ) {
    struct TGFramework::Reference * _result = 0;
    _com_dispatch_method(this, 0x35, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ReferencePtr(_result, false);
}

#pragma implementation_key(885)
inline HRESULT TGDraft::DVEllipse2d::GetReferenceKey ( BSTR * FullName, SAFEARRAY * * ReferenceKey, long * KeySize ) {
    return _com_dispatch_method(this, 0x36, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008\x6011\x4003", FullName, ReferenceKey, KeySize);
}

#pragma implementation_key(886)
inline TGDraft::DVShowHideEdgeOverrideType TGDraft::DVEllipse2d::GetShowHideEdgeOverride ( const _variant_t & segmentIndex ) {
    DVShowHideEdgeOverrideType _result;
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x080c", &segmentIndex);
    return _result;
}

#pragma implementation_key(887)
inline void TGDraft::DVEllipse2d::PutShowHideEdgeOverride ( const _variant_t & segmentIndex, DVShowHideEdgeOverrideType _arg2 ) {
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000c\x0003", &segmentIndex, _arg2);
}

#pragma implementation_key(888)
inline enum TGFramework::ObjectType TGDraft::DVEllipse2d::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x1069, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(889)
inline _bstr_t TGDraft::DVEllipse2d::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x106c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(890)
inline IDispatchPtr TGDraft::DVEllipse2d::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x106d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(891)
inline HRESULT TGDraft::DVEllipse2d::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60011011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(892)
inline double TGDraft::DVEllipse2d::GetMajorRadius ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3000, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(893)
inline double TGDraft::DVEllipse2d::GetMinorRadius ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3001, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(894)
inline enum TGFrameworkSupport::Geom2dOrientationConstants TGDraft::DVEllipse2d::GetOrientation ( ) {
    enum TGFrameworkSupport::Geom2dOrientationConstants _result;
    _com_dispatch_method(this, 0x3002, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(895)
inline double TGDraft::DVEllipse2d::GetRotationAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3003, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(896)
inline double TGDraft::DVEllipse2d::GetMinorMajorRatio ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3004, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(897)
inline double TGDraft::DVEllipse2d::GetCircumference ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3005, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(898)
inline double TGDraft::DVEllipse2d::GetArea ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3006, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(899)
inline HRESULT TGDraft::DVEllipse2d::GetCenterPoint ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x6001300c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(900)
inline HRESULT TGDraft::DVEllipse2d::GetMajorAxis ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x6001300e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(901)
inline HRESULT TGDraft::DVEllipse2d::GetMinorAxis ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x60013010, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(902)
inline long TGDraft::DVEllipse2d::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(903)
inline HRESULT TGDraft::DVEllipse2d::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x5002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(904)
inline long TGDraft::DVEllipse2d::GetSegmentedStyleCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(905)
inline HRESULT TGDraft::DVEllipse2d::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * style ) {
    return _com_dispatch_method(this, 0x6065, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4005\x4009", Index, x1, y1, x2, y2, style);
}

#pragma implementation_key(906)
inline TGDraft::ModelWeldsPtr TGDraft::DVEllipse2d::GetModelWelds ( ) {
    struct ModelWelds * _result = 0;
    _com_dispatch_method(this, 0x8dc, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ModelWeldsPtr(_result, false);
}

#pragma implementation_key(907)
inline double TGDraft::DVEllipse2d::GetBendAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x86e, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(908)
inline double TGDraft::DVEllipse2d::GetBendRadius ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x86f, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(909)
inline IDispatchPtr TGDraft::DVEllipse2d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(910)
inline VARIANT_BOOL TGDraft::DVEllipse2d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _IDVEllipses2dAuto wrapper method implementations
//

#pragma implementation_key(911)
inline TGDraft::DVEllipse2dPtr TGDraft::_IDVEllipses2dAuto::Item ( const _variant_t & Index ) {
    struct DVEllipse2d * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DVEllipse2dPtr(_result, false);
}

#pragma implementation_key(912)
inline IUnknownPtr TGDraft::_IDVEllipses2dAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(913)
inline TGFramework::ApplicationPtr TGDraft::_IDVEllipses2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(914)
inline long TGDraft::_IDVEllipses2dAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(915)
inline IDispatchPtr TGDraft::_IDVEllipses2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// interface _IDVEllipse2dAuto wrapper method implementations
//

#pragma implementation_key(916)
inline TGFrameworkSupport::Relationships2dPtr TGDraft::_IDVEllipse2dAuto::GetRelationships ( ) {
    struct TGFrameworkSupport::Relationships2d * _result = 0;
    HRESULT _hr = get_Relationships(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::Relationships2dPtr(_result, false);
}

#pragma implementation_key(917)
inline TGFramework::ApplicationPtr TGDraft::_IDVEllipse2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(918)
inline _bstr_t TGDraft::_IDVEllipse2dAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(919)
inline TGDraft::DrawingViewPtr TGDraft::_IDVEllipse2dAuto::GetDrawingView ( ) {
    struct DrawingView * _result = 0;
    HRESULT _hr = get_DrawingView(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(920)
inline TGDraft::ModelMemberPtr TGDraft::_IDVEllipse2dAuto::GetModelMember ( ) {
    struct ModelMember * _result = 0;
    HRESULT _hr = get_ModelMember(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ModelMemberPtr(_result, false);
}

#pragma implementation_key(921)
inline enum TGDraft::GraphicMemberEdgeTypeConstants TGDraft::_IDVEllipse2dAuto::GetEdgeType ( ) {
    enum GraphicMemberEdgeTypeConstants _result;
    HRESULT _hr = get_EdgeType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(922)
inline TGFramework::ReferencePtr TGDraft::_IDVEllipse2dAuto::GetReference ( ) {
    struct TGFramework::Reference * _result = 0;
    HRESULT _hr = get_Reference(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ReferencePtr(_result, false);
}

#pragma implementation_key(923)
inline HRESULT TGDraft::_IDVEllipse2dAuto::GetReferenceKey ( BSTR * FullName, SAFEARRAY * * ReferenceKey, long * KeySize ) {
    HRESULT _hr = raw_GetReferenceKey(FullName, ReferenceKey, KeySize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(924)
inline TGDraft::DVShowHideEdgeOverrideType TGDraft::_IDVEllipse2dAuto::GetShowHideEdgeOverride ( const _variant_t & segmentIndex ) {
    DVShowHideEdgeOverrideType _result;
    HRESULT _hr = get_ShowHideEdgeOverride(segmentIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(925)
inline void TGDraft::_IDVEllipse2dAuto::PutShowHideEdgeOverride ( const _variant_t & segmentIndex, DVShowHideEdgeOverrideType overrideType ) {
    HRESULT _hr = put_ShowHideEdgeOverride(segmentIndex, overrideType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(926)
inline enum TGFramework::ObjectType TGDraft::_IDVEllipse2dAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(927)
inline _bstr_t TGDraft::_IDVEllipse2dAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(928)
inline IDispatchPtr TGDraft::_IDVEllipse2dAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(929)
inline HRESULT TGDraft::_IDVEllipse2dAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(930)
inline double TGDraft::_IDVEllipse2dAuto::GetMajorRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_MajorRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(931)
inline double TGDraft::_IDVEllipse2dAuto::GetMinorRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_MinorRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(932)
inline enum TGFrameworkSupport::Geom2dOrientationConstants TGDraft::_IDVEllipse2dAuto::GetOrientation ( ) {
    enum TGFrameworkSupport::Geom2dOrientationConstants _result;
    HRESULT _hr = get_Orientation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(933)
inline double TGDraft::_IDVEllipse2dAuto::GetRotationAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_RotationAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(934)
inline double TGDraft::_IDVEllipse2dAuto::GetMinorMajorRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_MinorMajorRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(935)
inline double TGDraft::_IDVEllipse2dAuto::GetCircumference ( ) {
    double _result = 0;
    HRESULT _hr = get_Circumference(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(936)
inline double TGDraft::_IDVEllipse2dAuto::GetArea ( ) {
    double _result = 0;
    HRESULT _hr = get_Area(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(937)
inline HRESULT TGDraft::_IDVEllipse2dAuto::GetCenterPoint ( double * x, double * y ) {
    HRESULT _hr = raw_GetCenterPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(938)
inline HRESULT TGDraft::_IDVEllipse2dAuto::GetMajorAxis ( double * x, double * y ) {
    HRESULT _hr = raw_GetMajorAxis(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(939)
inline HRESULT TGDraft::_IDVEllipse2dAuto::GetMinorAxis ( double * x, double * y ) {
    HRESULT _hr = raw_GetMinorAxis(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(940)
inline long TGDraft::_IDVEllipse2dAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(941)
inline HRESULT TGDraft::_IDVEllipse2dAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(942)
inline long TGDraft::_IDVEllipse2dAuto::GetSegmentedStyleCount ( ) {
    long _result = 0;
    HRESULT _hr = get_SegmentedStyleCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(943)
inline HRESULT TGDraft::_IDVEllipse2dAuto::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * style ) {
    HRESULT _hr = raw_GetSegmentedStyle(Index, x1, y1, x2, y2, style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(944)
inline TGDraft::ModelWeldsPtr TGDraft::_IDVEllipse2dAuto::GetModelWelds ( ) {
    struct ModelWelds * _result = 0;
    HRESULT _hr = get_ModelWelds(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ModelWeldsPtr(_result, false);
}

#pragma implementation_key(945)
inline double TGDraft::_IDVEllipse2dAuto::GetBendAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_BendAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(946)
inline double TGDraft::_IDVEllipse2dAuto::GetBendRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_BendRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(947)
inline IDispatchPtr TGDraft::_IDVEllipse2dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(948)
inline VARIANT_BOOL TGDraft::_IDVEllipse2dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface DVLineStrings2d wrapper method implementations
//

#pragma implementation_key(949)
inline TGDraft::DVLineString2dPtr TGDraft::DVLineStrings2d::Item ( const _variant_t & Index ) {
    struct DVLineString2d * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return DVLineString2dPtr(_result, false);
}

#pragma implementation_key(950)
inline TGFramework::ApplicationPtr TGDraft::DVLineStrings2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(951)
inline long TGDraft::DVLineStrings2d::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(952)
inline IDispatchPtr TGDraft::DVLineStrings2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// dispinterface DVLineString2d wrapper method implementations
//

#pragma implementation_key(953)
inline TGFramework::ApplicationPtr TGDraft::DVLineString2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(954)
inline _bstr_t TGDraft::DVLineString2d::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1067, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(955)
inline TGDraft::DrawingViewPtr TGDraft::DVLineString2d::GetDrawingView ( ) {
    struct DrawingView * _result = 0;
    _com_dispatch_method(this, 0x32, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(956)
inline TGDraft::ModelMemberPtr TGDraft::DVLineString2d::GetModelMember ( ) {
    struct ModelMember * _result = 0;
    _com_dispatch_method(this, 0x33, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ModelMemberPtr(_result, false);
}

#pragma implementation_key(957)
inline enum TGDraft::GraphicMemberEdgeTypeConstants TGDraft::DVLineString2d::GetEdgeType ( ) {
    enum GraphicMemberEdgeTypeConstants _result;
    _com_dispatch_method(this, 0x34, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(958)
inline TGFramework::ReferencePtr TGDraft::DVLineString2d::GetReference ( ) {
    struct TGFramework::Reference * _result = 0;
    _com_dispatch_method(this, 0x35, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ReferencePtr(_result, false);
}

#pragma implementation_key(959)
inline HRESULT TGDraft::DVLineString2d::GetReferenceKey ( BSTR * FullName, SAFEARRAY * * ReferenceKey, long * KeySize ) {
    return _com_dispatch_method(this, 0x36, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008\x6011\x4003", FullName, ReferenceKey, KeySize);
}

#pragma implementation_key(960)
inline enum TGFramework::ObjectType TGDraft::DVLineString2d::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x1069, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(961)
inline _bstr_t TGDraft::DVLineString2d::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x106c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(962)
inline IDispatchPtr TGDraft::DVLineString2d::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x106d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(963)
inline HRESULT TGDraft::DVLineString2d::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60011011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(964)
inline double TGDraft::DVLineString2d::GetLength ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3000, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(965)
inline long TGDraft::DVLineString2d::GetVertexCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3002, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(966)
inline VARIANT_BOOL TGDraft::DVLineString2d::GetClosed ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3003, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(967)
inline double TGDraft::DVLineString2d::GetArea ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3004, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(968)
inline HRESULT TGDraft::DVLineString2d::GetVertices ( long * VertexCount, SAFEARRAY * * Vertices ) {
    return _com_dispatch_method(this, 0x60013004, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6005", VertexCount, Vertices);
}

#pragma implementation_key(969)
inline HRESULT TGDraft::DVLineString2d::GetVertex ( long Index, double * x, double * y ) {
    return _com_dispatch_method(this, 0x60013006, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005", Index, x, y);
}

#pragma implementation_key(970)
inline HRESULT TGDraft::DVLineString2d::GetCentroid ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x6001300b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(971)
inline long TGDraft::DVLineString2d::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(972)
inline HRESULT TGDraft::DVLineString2d::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x4002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(973)
inline long TGDraft::DVLineString2d::GetSegmentedStyleCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(974)
inline HRESULT TGDraft::DVLineString2d::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * style ) {
    return _com_dispatch_method(this, 0x6065, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4005\x4009", Index, x1, y1, x2, y2, style);
}

#pragma implementation_key(975)
inline TGDraft::ModelWeldsPtr TGDraft::DVLineString2d::GetModelWelds ( ) {
    struct ModelWelds * _result = 0;
    _com_dispatch_method(this, 0x8d8, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ModelWeldsPtr(_result, false);
}

#pragma implementation_key(976)
inline IDispatchPtr TGDraft::DVLineString2d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(977)
inline VARIANT_BOOL TGDraft::DVLineString2d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _IDVLineStrings2dAuto wrapper method implementations
//

#pragma implementation_key(978)
inline TGDraft::DVLineString2dPtr TGDraft::_IDVLineStrings2dAuto::Item ( const _variant_t & Index ) {
    struct DVLineString2d * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DVLineString2dPtr(_result, false);
}

#pragma implementation_key(979)
inline IUnknownPtr TGDraft::_IDVLineStrings2dAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(980)
inline TGFramework::ApplicationPtr TGDraft::_IDVLineStrings2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(981)
inline long TGDraft::_IDVLineStrings2dAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(982)
inline IDispatchPtr TGDraft::_IDVLineStrings2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// interface _IDVLineString2dAuto wrapper method implementations
//

#pragma implementation_key(983)
inline TGFramework::ApplicationPtr TGDraft::_IDVLineString2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(984)
inline _bstr_t TGDraft::_IDVLineString2dAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(985)
inline TGDraft::DrawingViewPtr TGDraft::_IDVLineString2dAuto::GetDrawingView ( ) {
    struct DrawingView * _result = 0;
    HRESULT _hr = get_DrawingView(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(986)
inline TGDraft::ModelMemberPtr TGDraft::_IDVLineString2dAuto::GetModelMember ( ) {
    struct ModelMember * _result = 0;
    HRESULT _hr = get_ModelMember(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ModelMemberPtr(_result, false);
}

#pragma implementation_key(987)
inline enum TGDraft::GraphicMemberEdgeTypeConstants TGDraft::_IDVLineString2dAuto::GetEdgeType ( ) {
    enum GraphicMemberEdgeTypeConstants _result;
    HRESULT _hr = get_EdgeType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(988)
inline TGFramework::ReferencePtr TGDraft::_IDVLineString2dAuto::GetReference ( ) {
    struct TGFramework::Reference * _result = 0;
    HRESULT _hr = get_Reference(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ReferencePtr(_result, false);
}

#pragma implementation_key(989)
inline HRESULT TGDraft::_IDVLineString2dAuto::GetReferenceKey ( BSTR * FullName, SAFEARRAY * * ReferenceKey, long * KeySize ) {
    HRESULT _hr = raw_GetReferenceKey(FullName, ReferenceKey, KeySize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(990)
inline enum TGFramework::ObjectType TGDraft::_IDVLineString2dAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(991)
inline _bstr_t TGDraft::_IDVLineString2dAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(992)
inline IDispatchPtr TGDraft::_IDVLineString2dAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(993)
inline HRESULT TGDraft::_IDVLineString2dAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(994)
inline double TGDraft::_IDVLineString2dAuto::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(995)
inline long TGDraft::_IDVLineString2dAuto::GetVertexCount ( ) {
    long _result = 0;
    HRESULT _hr = get_VertexCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(996)
inline VARIANT_BOOL TGDraft::_IDVLineString2dAuto::GetClosed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Closed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(997)
inline double TGDraft::_IDVLineString2dAuto::GetArea ( ) {
    double _result = 0;
    HRESULT _hr = get_Area(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(998)
inline HRESULT TGDraft::_IDVLineString2dAuto::GetVertices ( long * VertexCount, SAFEARRAY * * Vertices ) {
    HRESULT _hr = raw_GetVertices(VertexCount, Vertices);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(999)
inline HRESULT TGDraft::_IDVLineString2dAuto::GetVertex ( long Index, double * x, double * y ) {
    HRESULT _hr = raw_GetVertex(Index, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1000)
inline HRESULT TGDraft::_IDVLineString2dAuto::GetCentroid ( double * x, double * y ) {
    HRESULT _hr = raw_GetCentroid(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1001)
inline long TGDraft::_IDVLineString2dAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1002)
inline HRESULT TGDraft::_IDVLineString2dAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1003)
inline long TGDraft::_IDVLineString2dAuto::GetSegmentedStyleCount ( ) {
    long _result = 0;
    HRESULT _hr = get_SegmentedStyleCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1004)
inline HRESULT TGDraft::_IDVLineString2dAuto::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * style ) {
    HRESULT _hr = raw_GetSegmentedStyle(Index, x1, y1, x2, y2, style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1005)
inline TGDraft::ModelWeldsPtr TGDraft::_IDVLineString2dAuto::GetModelWelds ( ) {
    struct ModelWelds * _result = 0;
    HRESULT _hr = get_ModelWelds(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ModelWeldsPtr(_result, false);
}

#pragma implementation_key(1006)
inline IDispatchPtr TGDraft::_IDVLineString2dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1007)
inline VARIANT_BOOL TGDraft::_IDVLineString2dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface DVEllipticalArcs2d wrapper method implementations
//

#pragma implementation_key(1008)
inline TGDraft::DVEllipticalArc2dPtr TGDraft::DVEllipticalArcs2d::Item ( const _variant_t & Index ) {
    struct DVEllipticalArc2d * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return DVEllipticalArc2dPtr(_result, false);
}

#pragma implementation_key(1009)
inline TGFramework::ApplicationPtr TGDraft::DVEllipticalArcs2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(1010)
inline long TGDraft::DVEllipticalArcs2d::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1011)
inline IDispatchPtr TGDraft::DVEllipticalArcs2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// dispinterface DVEllipticalArc2d wrapper method implementations
//

#pragma implementation_key(1012)
inline TGFrameworkSupport::Relationships2dPtr TGDraft::DVEllipticalArc2d::GetRelationships ( ) {
    struct TGFrameworkSupport::Relationships2d * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::Relationships2dPtr(_result, false);
}

#pragma implementation_key(1013)
inline TGFramework::ApplicationPtr TGDraft::DVEllipticalArc2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x865, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(1014)
inline _bstr_t TGDraft::DVEllipticalArc2d::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x867, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1015)
inline TGDraft::DrawingViewPtr TGDraft::DVEllipticalArc2d::GetDrawingView ( ) {
    struct DrawingView * _result = 0;
    _com_dispatch_method(this, 0x32, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(1016)
inline TGDraft::ModelMemberPtr TGDraft::DVEllipticalArc2d::GetModelMember ( ) {
    struct ModelMember * _result = 0;
    _com_dispatch_method(this, 0x33, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ModelMemberPtr(_result, false);
}

#pragma implementation_key(1017)
inline enum TGDraft::GraphicMemberEdgeTypeConstants TGDraft::DVEllipticalArc2d::GetEdgeType ( ) {
    enum GraphicMemberEdgeTypeConstants _result;
    _com_dispatch_method(this, 0x34, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1018)
inline TGFramework::ReferencePtr TGDraft::DVEllipticalArc2d::GetReference ( ) {
    struct TGFramework::Reference * _result = 0;
    _com_dispatch_method(this, 0x35, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ReferencePtr(_result, false);
}

#pragma implementation_key(1019)
inline HRESULT TGDraft::DVEllipticalArc2d::GetReferenceKey ( BSTR * FullName, SAFEARRAY * * ReferenceKey, long * KeySize ) {
    return _com_dispatch_method(this, 0x36, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008\x6011\x4003", FullName, ReferenceKey, KeySize);
}

#pragma implementation_key(1020)
inline TGDraft::DVShowHideEdgeOverrideType TGDraft::DVEllipticalArc2d::GetShowHideEdgeOverride ( const _variant_t & segmentIndex ) {
    DVShowHideEdgeOverrideType _result;
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x080c", &segmentIndex);
    return _result;
}

#pragma implementation_key(1021)
inline void TGDraft::DVEllipticalArc2d::PutShowHideEdgeOverride ( const _variant_t & segmentIndex, DVShowHideEdgeOverrideType _arg2 ) {
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000c\x0003", &segmentIndex, _arg2);
}

#pragma implementation_key(1022)
inline enum TGFramework::ObjectType TGDraft::DVEllipticalArc2d::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x869, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1023)
inline _bstr_t TGDraft::DVEllipticalArc2d::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x86c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1024)
inline IDispatchPtr TGDraft::DVEllipticalArc2d::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x86d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1025)
inline HRESULT TGDraft::DVEllipticalArc2d::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60010811, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(1026)
inline double TGDraft::DVEllipticalArc2d::GetMajorRadius ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1800, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1027)
inline double TGDraft::DVEllipticalArc2d::GetMinorRadius ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1801, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1028)
inline enum TGFrameworkSupport::Geom2dOrientationConstants TGDraft::DVEllipticalArc2d::GetOrientation ( ) {
    enum TGFrameworkSupport::Geom2dOrientationConstants _result;
    _com_dispatch_method(this, 0x1802, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1029)
inline double TGDraft::DVEllipticalArc2d::GetStartAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1803, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1030)
inline double TGDraft::DVEllipticalArc2d::GetSweepAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1804, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1031)
inline double TGDraft::DVEllipticalArc2d::GetRotationAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1805, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1032)
inline HRESULT TGDraft::DVEllipticalArc2d::GetStartPoint ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x6001180c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(1033)
inline HRESULT TGDraft::DVEllipticalArc2d::GetEndPoint ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x6001180e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(1034)
inline HRESULT TGDraft::DVEllipticalArc2d::GetCenterPoint ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x60011810, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(1035)
inline HRESULT TGDraft::DVEllipticalArc2d::GetMajorAxis ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x60011812, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(1036)
inline HRESULT TGDraft::DVEllipticalArc2d::GetMinorAxis ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x60011814, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(1037)
inline long TGDraft::DVEllipticalArc2d::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2801, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1038)
inline HRESULT TGDraft::DVEllipticalArc2d::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x2802, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(1039)
inline long TGDraft::DVEllipticalArc2d::GetSegmentedStyleCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3801, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1040)
inline HRESULT TGDraft::DVEllipticalArc2d::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * style ) {
    return _com_dispatch_method(this, 0x3865, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4005\x4009", Index, x1, y1, x2, y2, style);
}

#pragma implementation_key(1041)
inline TGDraft::ModelWeldsPtr TGDraft::DVEllipticalArc2d::GetModelWelds ( ) {
    struct ModelWelds * _result = 0;
    _com_dispatch_method(this, 0x8dd, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ModelWeldsPtr(_result, false);
}

#pragma implementation_key(1042)
inline double TGDraft::DVEllipticalArc2d::GetBendAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x86e, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1043)
inline double TGDraft::DVEllipticalArc2d::GetBendRadius ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x86f, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1044)
inline IDispatchPtr TGDraft::DVEllipticalArc2d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1045)
inline VARIANT_BOOL TGDraft::DVEllipticalArc2d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _IDVEllipArcs2dAuto wrapper method implementations
//

#pragma implementation_key(1046)
inline TGDraft::DVEllipticalArc2dPtr TGDraft::_IDVEllipArcs2dAuto::Item ( const _variant_t & Index ) {
    struct DVEllipticalArc2d * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DVEllipticalArc2dPtr(_result, false);
}

#pragma implementation_key(1047)
inline IUnknownPtr TGDraft::_IDVEllipArcs2dAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1048)
inline TGFramework::ApplicationPtr TGDraft::_IDVEllipArcs2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(1049)
inline long TGDraft::_IDVEllipArcs2dAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1050)
inline IDispatchPtr TGDraft::_IDVEllipArcs2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// interface _IDVEllipArc2dAuto wrapper method implementations
//

#pragma implementation_key(1051)
inline TGFrameworkSupport::Relationships2dPtr TGDraft::_IDVEllipArc2dAuto::GetRelationships ( ) {
    struct TGFrameworkSupport::Relationships2d * _result = 0;
    HRESULT _hr = get_Relationships(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::Relationships2dPtr(_result, false);
}

#pragma implementation_key(1052)
inline TGFramework::ApplicationPtr TGDraft::_IDVEllipArc2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(1053)
inline _bstr_t TGDraft::_IDVEllipArc2dAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1054)
inline TGDraft::DrawingViewPtr TGDraft::_IDVEllipArc2dAuto::GetDrawingView ( ) {
    struct DrawingView * _result = 0;
    HRESULT _hr = get_DrawingView(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(1055)
inline TGDraft::ModelMemberPtr TGDraft::_IDVEllipArc2dAuto::GetModelMember ( ) {
    struct ModelMember * _result = 0;
    HRESULT _hr = get_ModelMember(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ModelMemberPtr(_result, false);
}

#pragma implementation_key(1056)
inline enum TGDraft::GraphicMemberEdgeTypeConstants TGDraft::_IDVEllipArc2dAuto::GetEdgeType ( ) {
    enum GraphicMemberEdgeTypeConstants _result;
    HRESULT _hr = get_EdgeType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1057)
inline TGFramework::ReferencePtr TGDraft::_IDVEllipArc2dAuto::GetReference ( ) {
    struct TGFramework::Reference * _result = 0;
    HRESULT _hr = get_Reference(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ReferencePtr(_result, false);
}

#pragma implementation_key(1058)
inline HRESULT TGDraft::_IDVEllipArc2dAuto::GetReferenceKey ( BSTR * FullName, SAFEARRAY * * ReferenceKey, long * KeySize ) {
    HRESULT _hr = raw_GetReferenceKey(FullName, ReferenceKey, KeySize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1059)
inline TGDraft::DVShowHideEdgeOverrideType TGDraft::_IDVEllipArc2dAuto::GetShowHideEdgeOverride ( const _variant_t & segmentIndex ) {
    DVShowHideEdgeOverrideType _result;
    HRESULT _hr = get_ShowHideEdgeOverride(segmentIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1060)
inline void TGDraft::_IDVEllipArc2dAuto::PutShowHideEdgeOverride ( const _variant_t & segmentIndex, DVShowHideEdgeOverrideType overrideType ) {
    HRESULT _hr = put_ShowHideEdgeOverride(segmentIndex, overrideType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1061)
inline enum TGFramework::ObjectType TGDraft::_IDVEllipArc2dAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1062)
inline _bstr_t TGDraft::_IDVEllipArc2dAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1063)
inline IDispatchPtr TGDraft::_IDVEllipArc2dAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1064)
inline HRESULT TGDraft::_IDVEllipArc2dAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1065)
inline double TGDraft::_IDVEllipArc2dAuto::GetMajorRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_MajorRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1066)
inline double TGDraft::_IDVEllipArc2dAuto::GetMinorRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_MinorRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1067)
inline enum TGFrameworkSupport::Geom2dOrientationConstants TGDraft::_IDVEllipArc2dAuto::GetOrientation ( ) {
    enum TGFrameworkSupport::Geom2dOrientationConstants _result;
    HRESULT _hr = get_Orientation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1068)
inline double TGDraft::_IDVEllipArc2dAuto::GetStartAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_StartAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1069)
inline double TGDraft::_IDVEllipArc2dAuto::GetSweepAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_SweepAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1070)
inline double TGDraft::_IDVEllipArc2dAuto::GetRotationAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_RotationAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1071)
inline HRESULT TGDraft::_IDVEllipArc2dAuto::GetStartPoint ( double * x, double * y ) {
    HRESULT _hr = raw_GetStartPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1072)
inline HRESULT TGDraft::_IDVEllipArc2dAuto::GetEndPoint ( double * x, double * y ) {
    HRESULT _hr = raw_GetEndPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1073)
inline HRESULT TGDraft::_IDVEllipArc2dAuto::GetCenterPoint ( double * x, double * y ) {
    HRESULT _hr = raw_GetCenterPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1074)
inline HRESULT TGDraft::_IDVEllipArc2dAuto::GetMajorAxis ( double * x, double * y ) {
    HRESULT _hr = raw_GetMajorAxis(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1075)
inline HRESULT TGDraft::_IDVEllipArc2dAuto::GetMinorAxis ( double * x, double * y ) {
    HRESULT _hr = raw_GetMinorAxis(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1076)
inline long TGDraft::_IDVEllipArc2dAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1077)
inline HRESULT TGDraft::_IDVEllipArc2dAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1078)
inline long TGDraft::_IDVEllipArc2dAuto::GetSegmentedStyleCount ( ) {
    long _result = 0;
    HRESULT _hr = get_SegmentedStyleCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1079)
inline HRESULT TGDraft::_IDVEllipArc2dAuto::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * style ) {
    HRESULT _hr = raw_GetSegmentedStyle(Index, x1, y1, x2, y2, style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1080)
inline TGDraft::ModelWeldsPtr TGDraft::_IDVEllipArc2dAuto::GetModelWelds ( ) {
    struct ModelWelds * _result = 0;
    HRESULT _hr = get_ModelWelds(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ModelWeldsPtr(_result, false);
}

#pragma implementation_key(1081)
inline double TGDraft::_IDVEllipArc2dAuto::GetBendAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_BendAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1082)
inline double TGDraft::_IDVEllipArc2dAuto::GetBendRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_BendRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1083)
inline IDispatchPtr TGDraft::_IDVEllipArc2dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1084)
inline VARIANT_BOOL TGDraft::_IDVEllipArc2dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface DVPoints2d wrapper method implementations
//

#pragma implementation_key(1085)
inline TGDraft::DVPoint2dPtr TGDraft::DVPoints2d::Item ( const _variant_t & Index ) {
    struct DVPoint2d * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return DVPoint2dPtr(_result, false);
}

#pragma implementation_key(1086)
inline TGFramework::ApplicationPtr TGDraft::DVPoints2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(1087)
inline long TGDraft::DVPoints2d::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1088)
inline IDispatchPtr TGDraft::DVPoints2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// dispinterface DVPoint2d wrapper method implementations
//

#pragma implementation_key(1089)
inline TGFrameworkSupport::Relationships2dPtr TGDraft::DVPoint2d::GetRelationships ( ) {
    struct TGFrameworkSupport::Relationships2d * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::Relationships2dPtr(_result, false);
}

#pragma implementation_key(1090)
inline TGFramework::ApplicationPtr TGDraft::DVPoint2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(1091)
inline _bstr_t TGDraft::DVPoint2d::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1067, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1092)
inline TGDraft::DrawingViewPtr TGDraft::DVPoint2d::GetDrawingView ( ) {
    struct DrawingView * _result = 0;
    _com_dispatch_method(this, 0x32, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(1093)
inline TGDraft::ModelMemberPtr TGDraft::DVPoint2d::GetModelMember ( ) {
    struct ModelMember * _result = 0;
    _com_dispatch_method(this, 0x33, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ModelMemberPtr(_result, false);
}

#pragma implementation_key(1094)
inline enum TGDraft::GraphicMemberEdgeTypeConstants TGDraft::DVPoint2d::GetEdgeType ( ) {
    enum GraphicMemberEdgeTypeConstants _result;
    _com_dispatch_method(this, 0x34, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1095)
inline TGFramework::ReferencePtr TGDraft::DVPoint2d::GetReference ( ) {
    struct TGFramework::Reference * _result = 0;
    _com_dispatch_method(this, 0x35, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ReferencePtr(_result, false);
}

#pragma implementation_key(1096)
inline HRESULT TGDraft::DVPoint2d::GetReferenceKey ( BSTR * FullName, SAFEARRAY * * ReferenceKey, long * KeySize ) {
    return _com_dispatch_method(this, 0x36, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008\x6011\x4003", FullName, ReferenceKey, KeySize);
}

#pragma implementation_key(1097)
inline enum TGFramework::ObjectType TGDraft::DVPoint2d::GetType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x1069, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1098)
inline _bstr_t TGDraft::DVPoint2d::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x106c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1099)
inline IDispatchPtr TGDraft::DVPoint2d::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x106d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1100)
inline HRESULT TGDraft::DVPoint2d::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60011011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(1101)
inline double TGDraft::DVPoint2d::Getx ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3000, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1102)
inline double TGDraft::DVPoint2d::Gety ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3001, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1103)
inline HRESULT TGDraft::DVPoint2d::GetPoint ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x60013004, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(1104)
inline long TGDraft::DVPoint2d::GetSegmentedStyleCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1105)
inline HRESULT TGDraft::DVPoint2d::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * style ) {
    return _com_dispatch_method(this, 0x5065, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4005\x4009", Index, x1, y1, x2, y2, style);
}

#pragma implementation_key(1106)
inline long TGDraft::DVPoint2d::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1107)
inline HRESULT TGDraft::DVPoint2d::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x4002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(1108)
inline IDispatchPtr TGDraft::DVPoint2d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1109)
inline VARIANT_BOOL TGDraft::DVPoint2d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _IDVPoints2dAuto wrapper method implementations
//

#pragma implementation_key(1110)
inline TGDraft::DVPoint2dPtr TGDraft::_IDVPoints2dAuto::Item ( const _variant_t & Index ) {
    struct DVPoint2d * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DVPoint2dPtr(_result, false);
}

#pragma implementation_key(1111)
inline IUnknownPtr TGDraft::_IDVPoints2dAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1112)
inline TGFramework::ApplicationPtr TGDraft::_IDVPoints2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(1113)
inline long TGDraft::_IDVPoints2dAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1114)
inline IDispatchPtr TGDraft::_IDVPoints2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// interface _IDVPoint2dAuto wrapper method implementations
//

#pragma implementation_key(1115)
inline TGFrameworkSupport::Relationships2dPtr TGDraft::_IDVPoint2dAuto::GetRelationships ( ) {
    struct TGFrameworkSupport::Relationships2d * _result = 0;
    HRESULT _hr = get_Relationships(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::Relationships2dPtr(_result, false);
}

#pragma implementation_key(1116)
inline TGFramework::ApplicationPtr TGDraft::_IDVPoint2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(1117)
inline _bstr_t TGDraft::_IDVPoint2dAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1118)
inline TGDraft::DrawingViewPtr TGDraft::_IDVPoint2dAuto::GetDrawingView ( ) {
    struct DrawingView * _result = 0;
    HRESULT _hr = get_DrawingView(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(1119)
inline TGDraft::ModelMemberPtr TGDraft::_IDVPoint2dAuto::GetModelMember ( ) {
    struct ModelMember * _result = 0;
    HRESULT _hr = get_ModelMember(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ModelMemberPtr(_result, false);
}

#pragma implementation_key(1120)
inline enum TGDraft::GraphicMemberEdgeTypeConstants TGDraft::_IDVPoint2dAuto::GetEdgeType ( ) {
    enum GraphicMemberEdgeTypeConstants _result;
    HRESULT _hr = get_EdgeType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1121)
inline TGFramework::ReferencePtr TGDraft::_IDVPoint2dAuto::GetReference ( ) {
    struct TGFramework::Reference * _result = 0;
    HRESULT _hr = get_Reference(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ReferencePtr(_result, false);
}

#pragma implementation_key(1122)
inline HRESULT TGDraft::_IDVPoint2dAuto::GetReferenceKey ( BSTR * FullName, SAFEARRAY * * ReferenceKey, long * KeySize ) {
    HRESULT _hr = raw_GetReferenceKey(FullName, ReferenceKey, KeySize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1123)
inline enum TGFramework::ObjectType TGDraft::_IDVPoint2dAuto::GetType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1124)
inline _bstr_t TGDraft::_IDVPoint2dAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1125)
inline IDispatchPtr TGDraft::_IDVPoint2dAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1126)
inline HRESULT TGDraft::_IDVPoint2dAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1127)
inline double TGDraft::_IDVPoint2dAuto::Getx ( ) {
    double _result = 0;
    HRESULT _hr = get_x(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1128)
inline double TGDraft::_IDVPoint2dAuto::Gety ( ) {
    double _result = 0;
    HRESULT _hr = get_y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1129)
inline HRESULT TGDraft::_IDVPoint2dAuto::GetPoint ( double * x, double * y ) {
    HRESULT _hr = raw_GetPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1130)
inline long TGDraft::_IDVPoint2dAuto::GetSegmentedStyleCount ( ) {
    long _result = 0;
    HRESULT _hr = get_SegmentedStyleCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1131)
inline HRESULT TGDraft::_IDVPoint2dAuto::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * style ) {
    HRESULT _hr = raw_GetSegmentedStyle(Index, x1, y1, x2, y2, style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1132)
inline long TGDraft::_IDVPoint2dAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1133)
inline HRESULT TGDraft::_IDVPoint2dAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1134)
inline IDispatchPtr TGDraft::_IDVPoint2dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1135)
inline VARIANT_BOOL TGDraft::_IDVPoint2dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface ModelNode wrapper method implementations
//

#pragma implementation_key(1136)
inline TGFramework::ApplicationPtr TGDraft::ModelNode::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(1137)
inline IDispatchPtr TGDraft::ModelNode::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1138)
inline _bstr_t TGDraft::ModelNode::GetFileName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1139)
inline enum TGDraft::ModelNodeTypeConstants TGDraft::ModelNode::GetModelType ( ) {
    enum ModelNodeTypeConstants _result;
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1140)
inline VARIANT_BOOL TGDraft::ModelNode::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1141)
inline void TGDraft::ModelNode::PutItemNumber ( long _arg1 ) {
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1142)
inline long TGDraft::ModelNode::GetItemNumber ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1143)
inline void TGDraft::ModelNode::PutIncludeInPartsList ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1144)
inline VARIANT_BOOL TGDraft::ModelNode::GetIncludeInPartsList ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1145)
inline VARIANT_BOOL TGDraft::ModelNode::GetIsBallooned ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1146)
inline TGDraft::ModelNodesPtr TGDraft::ModelNode::GetModelNodes ( ) {
    struct ModelNodes * _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ModelNodesPtr(_result, false);
}

#pragma implementation_key(1147)
inline _bstr_t TGDraft::ModelNode::GetComponentName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1148)
inline double TGDraft::ModelNode::GetCutLength ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1149)
inline HRESULT TGDraft::ModelNode::GetAssemblyReferenceKey ( SAFEARRAY * * ReferenceKey, VARIANT * KeySize ) {
    return _com_dispatch_method(this, 0x71, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6011\x480c", ReferenceKey, KeySize);
}

#pragma implementation_key(1150)
inline VARIANT_BOOL TGDraft::ModelNode::GetIsAssemblyContainedPart ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface ModelNodes wrapper method implementations
//

#pragma implementation_key(1151)
inline TGFramework::ApplicationPtr TGDraft::ModelNodes::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(1152)
inline IDispatchPtr TGDraft::ModelNodes::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1153)
inline long TGDraft::ModelNodes::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1154)
inline TGDraft::ModelNodePtr TGDraft::ModelNodes::Item ( const _variant_t & Index ) {
    struct ModelNode * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return ModelNodePtr(_result, false);
}

//
// interface _IModelNodeAuto wrapper method implementations
//

#pragma implementation_key(1155)
inline TGFramework::ApplicationPtr TGDraft::_IModelNodeAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(1156)
inline IDispatchPtr TGDraft::_IModelNodeAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1157)
inline _bstr_t TGDraft::_IModelNodeAuto::GetFileName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FileName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1158)
inline enum TGDraft::ModelNodeTypeConstants TGDraft::_IModelNodeAuto::GetModelType ( ) {
    enum ModelNodeTypeConstants _result;
    HRESULT _hr = get_ModelType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1159)
inline VARIANT_BOOL TGDraft::_IModelNodeAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1160)
inline void TGDraft::_IModelNodeAuto::PutItemNumber ( long ItemNumber ) {
    HRESULT _hr = put_ItemNumber(ItemNumber);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1161)
inline long TGDraft::_IModelNodeAuto::GetItemNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_ItemNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1162)
inline void TGDraft::_IModelNodeAuto::PutIncludeInPartsList ( VARIANT_BOOL IncludeInPartsList ) {
    HRESULT _hr = put_IncludeInPartsList(IncludeInPartsList);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1163)
inline VARIANT_BOOL TGDraft::_IModelNodeAuto::GetIncludeInPartsList ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IncludeInPartsList(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1164)
inline VARIANT_BOOL TGDraft::_IModelNodeAuto::GetIsBallooned ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsBallooned(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1165)
inline TGDraft::ModelNodesPtr TGDraft::_IModelNodeAuto::GetModelNodes ( ) {
    struct ModelNodes * _result = 0;
    HRESULT _hr = get_ModelNodes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ModelNodesPtr(_result, false);
}

#pragma implementation_key(1166)
inline _bstr_t TGDraft::_IModelNodeAuto::GetComponentName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ComponentName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1167)
inline double TGDraft::_IModelNodeAuto::GetCutLength ( ) {
    double _result = 0;
    HRESULT _hr = get_CutLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1168)
inline HRESULT TGDraft::_IModelNodeAuto::GetAssemblyReferenceKey ( SAFEARRAY * * ReferenceKey, VARIANT * KeySize ) {
    HRESULT _hr = raw_GetAssemblyReferenceKey(ReferenceKey, KeySize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1169)
inline VARIANT_BOOL TGDraft::_IModelNodeAuto::GetIsAssemblyContainedPart ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAssemblyContainedPart(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface _IModelNodesAuto wrapper method implementations
//

#pragma implementation_key(1170)
inline TGFramework::ApplicationPtr TGDraft::_IModelNodesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(1171)
inline IDispatchPtr TGDraft::_IModelNodesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1172)
inline long TGDraft::_IModelNodesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1173)
inline TGDraft::ModelNodePtr TGDraft::_IModelNodesAuto::Item ( const _variant_t & Index ) {
    struct ModelNode * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ModelNodePtr(_result, false);
}

#pragma implementation_key(1174)
inline IUnknownPtr TGDraft::_IModelNodesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

//
// dispinterface SectionBoundaries2d wrapper method implementations
//

#pragma implementation_key(1175)
inline TGFrameworkSupport::Boundary2dPtr TGDraft::SectionBoundaries2d::Item ( const _variant_t & Index ) {
    struct TGFrameworkSupport::Boundary2d * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return TGFrameworkSupport::Boundary2dPtr(_result, false);
}

#pragma implementation_key(1176)
inline TGFramework::ApplicationPtr TGDraft::SectionBoundaries2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(1177)
inline long TGDraft::SectionBoundaries2d::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1178)
inline IDispatchPtr TGDraft::SectionBoundaries2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// interface _IModelMemberAuto wrapper method implementations
//

#pragma implementation_key(1179)
inline TGFramework::ApplicationPtr TGDraft::_IModelMemberAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(1180)
inline IDispatchPtr TGDraft::_IModelMemberAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1181)
inline TGDraft::ModelMemberPtr TGDraft::_IModelMemberAuto::GetImmediateParent ( ) {
    struct ModelMember * _result = 0;
    HRESULT _hr = get_ImmediateParent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ModelMemberPtr(_result, false);
}

#pragma implementation_key(1182)
inline _bstr_t TGDraft::_IModelMemberAuto::GetFileName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FileName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1183)
inline enum TGDraft::ModelMemberDisplayTypeConstants TGDraft::_IModelMemberAuto::GetDisplayType ( ) {
    enum ModelMemberDisplayTypeConstants _result;
    HRESULT _hr = get_DisplayType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1184)
inline void TGDraft::_IModelMemberAuto::PutDisplayType ( enum ModelMemberDisplayTypeConstants DisplayType ) {
    HRESULT _hr = put_DisplayType(DisplayType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1185)
inline enum TGDraft::ModelMemberTypeConstants TGDraft::_IModelMemberAuto::GetType ( ) {
    enum ModelMemberTypeConstants _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1186)
inline enum TGDraft::ModelMemberComponentTypeConstants TGDraft::_IModelMemberAuto::GetComponentType ( ) {
    enum ModelMemberComponentTypeConstants _result;
    HRESULT _hr = get_ComponentType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1187)
inline VARIANT_BOOL TGDraft::_IModelMemberAuto::GetShowHiddenEdges ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowHiddenEdges(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1188)
inline void TGDraft::_IModelMemberAuto::PutShowHiddenEdges ( VARIANT_BOOL value ) {
    HRESULT _hr = put_ShowHiddenEdges(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1189)
inline VARIANT_BOOL TGDraft::_IModelMemberAuto::GetShowTangentEdges ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowTangentEdges(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1190)
inline void TGDraft::_IModelMemberAuto::PutShowTangentEdges ( VARIANT_BOOL value ) {
    HRESULT _hr = put_ShowTangentEdges(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1191)
inline VARIANT_BOOL TGDraft::_IModelMemberAuto::GetShowSectionHatch ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowSectionHatch(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1192)
inline void TGDraft::_IModelMemberAuto::PutShowSectionHatch ( VARIANT_BOOL value ) {
    HRESULT _hr = put_ShowSectionHatch(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1193)
inline _bstr_t TGDraft::_IModelMemberAuto::GetVisibleEdgeStyleName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_VisibleEdgeStyleName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1194)
inline void TGDraft::_IModelMemberAuto::PutVisibleEdgeStyleName ( _bstr_t StyleName ) {
    HRESULT _hr = put_VisibleEdgeStyleName(StyleName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1195)
inline _bstr_t TGDraft::_IModelMemberAuto::GetHiddenEdgeStyleName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HiddenEdgeStyleName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1196)
inline void TGDraft::_IModelMemberAuto::PutHiddenEdgeStyleName ( _bstr_t StyleName ) {
    HRESULT _hr = put_HiddenEdgeStyleName(StyleName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1197)
inline _bstr_t TGDraft::_IModelMemberAuto::GetTangentEdgeStyleName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TangentEdgeStyleName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1198)
inline void TGDraft::_IModelMemberAuto::PutTangentEdgeStyleName ( _bstr_t StyleName ) {
    HRESULT _hr = put_TangentEdgeStyleName(StyleName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1199)
inline TGDraft::ModelMembersPtr TGDraft::_IModelMemberAuto::GetModelMembers ( ) {
    struct ModelMembers * _result = 0;
    HRESULT _hr = get_ModelMembers(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ModelMembersPtr(_result, false);
}

#pragma implementation_key(1200)
inline TGDraft::GraphicMembersPtr TGDraft::_IModelMemberAuto::GetGraphicMembers ( ) {
    struct GraphicMembers * _result = 0;
    HRESULT _hr = get_GraphicMembers(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return GraphicMembersPtr(_result, false);
}

#pragma implementation_key(1201)
inline TGDraft::DVLines2dPtr TGDraft::_IModelMemberAuto::GetDVLines2d ( ) {
    struct DVLines2d * _result = 0;
    HRESULT _hr = get_DVLines2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DVLines2dPtr(_result, false);
}

#pragma implementation_key(1202)
inline TGDraft::DVArcs2dPtr TGDraft::_IModelMemberAuto::GetDVArcs2d ( ) {
    struct DVArcs2d * _result = 0;
    HRESULT _hr = get_DVArcs2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DVArcs2dPtr(_result, false);
}

#pragma implementation_key(1203)
inline TGDraft::DVBSplineCurves2dPtr TGDraft::_IModelMemberAuto::GetDVBSplineCurves2d ( ) {
    struct DVBSplineCurves2d * _result = 0;
    HRESULT _hr = get_DVBSplineCurves2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DVBSplineCurves2dPtr(_result, false);
}

#pragma implementation_key(1204)
inline TGDraft::DVCircles2dPtr TGDraft::_IModelMemberAuto::GetDVCircles2d ( ) {
    struct DVCircles2d * _result = 0;
    HRESULT _hr = get_DVCircles2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DVCircles2dPtr(_result, false);
}

#pragma implementation_key(1205)
inline TGDraft::DVEllipses2dPtr TGDraft::_IModelMemberAuto::GetDVEllipses2d ( ) {
    struct DVEllipses2d * _result = 0;
    HRESULT _hr = get_DVEllipses2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DVEllipses2dPtr(_result, false);
}

#pragma implementation_key(1206)
inline TGDraft::DVLineStrings2dPtr TGDraft::_IModelMemberAuto::GetDVLineStrings2d ( ) {
    struct DVLineStrings2d * _result = 0;
    HRESULT _hr = get_DVLineStrings2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DVLineStrings2dPtr(_result, false);
}

#pragma implementation_key(1207)
inline TGDraft::DVEllipticalArcs2dPtr TGDraft::_IModelMemberAuto::GetDVEllipticalArcs2d ( ) {
    struct DVEllipticalArcs2d * _result = 0;
    HRESULT _hr = get_DVEllipticalArcs2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DVEllipticalArcs2dPtr(_result, false);
}

#pragma implementation_key(1208)
inline TGDraft::DVPoints2dPtr TGDraft::_IModelMemberAuto::GetDVPoints2d ( ) {
    struct DVPoints2d * _result = 0;
    HRESULT _hr = get_DVPoints2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DVPoints2dPtr(_result, false);
}

#pragma implementation_key(1209)
inline VARIANT_BOOL TGDraft::_IModelMemberAuto::GetIsSimplified ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSimplified(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1210)
inline VARIANT_BOOL TGDraft::_IModelMemberAuto::GetIsFlat ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsFlat(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1211)
inline _bstr_t TGDraft::_IModelMemberAuto::GetRoadMap ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RoadMap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1212)
inline VARIANT_BOOL TGDraft::_IModelMemberAuto::GetDisplayAsReference ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayAsReference(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1213)
inline void TGDraft::_IModelMemberAuto::PutDisplayAsReference ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DisplayAsReference(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1214)
inline HRESULT TGDraft::_IModelMemberAuto::GetRange2d ( double * XMin, double * YMin, double * XMax, double * YMax ) {
    HRESULT _hr = raw_GetRange2d(XMin, YMin, XMax, YMax);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1215)
inline HRESULT TGDraft::_IModelMemberAuto::GetRange3d ( double * XMin, double * YMin, double * ZMin, double * XMax, double * YMax, double * ZMax ) {
    HRESULT _hr = raw_GetRange3d(XMin, YMin, ZMin, XMax, YMax, ZMax);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1216)
inline _bstr_t TGDraft::_IModelMemberAuto::GetComponentName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ComponentName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1217)
inline VARIANT_BOOL TGDraft::_IModelMemberAuto::GetShowEdgesHiddenByOtherParts ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowEdgesHiddenByOtherParts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1218)
inline void TGDraft::_IModelMemberAuto::PutShowEdgesHiddenByOtherParts ( VARIANT_BOOL value ) {
    HRESULT _hr = put_ShowEdgesHiddenByOtherParts(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1219)
inline VARIANT_BOOL TGDraft::_IModelMemberAuto::GetShowEdgesHiddenTangentEdgesSelfHidden ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowEdgesHiddenTangentEdgesSelfHidden(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1220)
inline void TGDraft::_IModelMemberAuto::PutShowEdgesHiddenTangentEdgesSelfHidden ( VARIANT_BOOL value ) {
    HRESULT _hr = put_ShowEdgesHiddenTangentEdgesSelfHidden(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1221)
inline VARIANT_BOOL TGDraft::_IModelMemberAuto::GetShowEdgesHiddenTangentEdgesHiddenByOtherParts ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowEdgesHiddenTangentEdgesHiddenByOtherParts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1222)
inline void TGDraft::_IModelMemberAuto::PutShowEdgesHiddenTangentEdgesHiddenByOtherParts ( VARIANT_BOOL value ) {
    HRESULT _hr = put_ShowEdgesHiddenTangentEdgesHiddenByOtherParts(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1223)
inline TGDraft::ModelNodePtr TGDraft::_IModelMemberAuto::GetModelNode ( ) {
    struct ModelNode * _result = 0;
    HRESULT _hr = get_ModelNode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ModelNodePtr(_result, false);
}

#pragma implementation_key(1224)
inline VARIANT_BOOL TGDraft::_IModelMemberAuto::GetShowFill ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowFill(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1225)
inline void TGDraft::_IModelMemberAuto::PutShowFill ( VARIANT_BOOL value ) {
    HRESULT _hr = put_ShowFill(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1226)
inline _bstr_t TGDraft::_IModelMemberAuto::GetFillStyleName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FillStyleName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1227)
inline void TGDraft::_IModelMemberAuto::PutFillStyleName ( _bstr_t StyleName ) {
    HRESULT _hr = put_FillStyleName(StyleName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1228)
inline VARIANT_BOOL TGDraft::_IModelMemberAuto::GetDeriveFillStyleFromPart ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DeriveFillStyleFromPart(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1229)
inline void TGDraft::_IModelMemberAuto::PutDeriveFillStyleFromPart ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DeriveFillStyleFromPart(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1230)
inline TGDraft::SectionBoundaries2dPtr TGDraft::_IModelMemberAuto::GetDVBoundaries2d ( ) {
    struct SectionBoundaries2d * _result = 0;
    HRESULT _hr = get_DVBoundaries2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SectionBoundaries2dPtr(_result, false);
}

#pragma implementation_key(1231)
inline double TGDraft::_IModelMemberAuto::GetHatchSpacing ( ) {
    double _result = 0;
    HRESULT _hr = get_HatchSpacing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1232)
inline void TGDraft::_IModelMemberAuto::PutHatchSpacing ( double dSpacing ) {
    HRESULT _hr = put_HatchSpacing(dSpacing);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1233)
inline double TGDraft::_IModelMemberAuto::GetHatchAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_HatchAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1234)
inline void TGDraft::_IModelMemberAuto::PutHatchAngle ( double dAngle ) {
    HRESULT _hr = put_HatchAngle(dAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1235)
inline VARIANT_BOOL TGDraft::_IModelMemberAuto::GetIsPrimaryAlternatePosition ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsPrimaryAlternatePosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1236)
inline VARIANT_BOOL TGDraft::_IModelMemberAuto::GetIsAlternatePosition ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAlternatePosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1237)
inline _bstr_t TGDraft::_IModelMemberAuto::GetAlternatePositionMemberName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AlternatePositionMemberName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1238)
inline VARIANT_BOOL TGDraft::_IModelMemberAuto::GetCutHardware ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CutHardware(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1239)
inline void TGDraft::_IModelMemberAuto::PutCutHardware ( VARIANT_BOOL value ) {
    HRESULT _hr = put_CutHardware(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1240)
inline VARIANT_BOOL TGDraft::_IModelMemberAuto::GetDisplaySection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplaySection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1241)
inline void TGDraft::_IModelMemberAuto::PutDisplaySection ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DisplaySection(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1242)
inline VARIANT_BOOL TGDraft::_IModelMemberAuto::GetDisplayPart ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayPart(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1243)
inline void TGDraft::_IModelMemberAuto::PutDisplayPart ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DisplayPart(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1244)
inline VARIANT_BOOL TGDraft::_IModelMemberAuto::GetDeriveDisplayAsReferenceFromAsm ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DeriveDisplayAsReferenceFromAsm(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1245)
inline void TGDraft::_IModelMemberAuto::PutDeriveDisplayAsReferenceFromAsm ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DeriveDisplayAsReferenceFromAsm(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface _ISectionBoundaries2dAuto wrapper method implementations
//

#pragma implementation_key(1246)
inline TGFrameworkSupport::Boundary2dPtr TGDraft::_ISectionBoundaries2dAuto::Item ( const _variant_t & Index ) {
    struct TGFrameworkSupport::Boundary2d * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::Boundary2dPtr(_result, false);
}

#pragma implementation_key(1247)
inline IUnknownPtr TGDraft::_ISectionBoundaries2dAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1248)
inline TGFramework::ApplicationPtr TGDraft::_ISectionBoundaries2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(1249)
inline long TGDraft::_ISectionBoundaries2dAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1250)
inline IDispatchPtr TGDraft::_ISectionBoundaries2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// dispinterface CuttingPlanes wrapper method implementations
//

#pragma implementation_key(1251)
inline TGDraft::CuttingPlanePtr TGDraft::CuttingPlanes::Item ( const _variant_t & Index ) {
    struct CuttingPlane * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return CuttingPlanePtr(_result, false);
}

#pragma implementation_key(1252)
inline IDispatchPtr TGDraft::CuttingPlanes::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1253)
inline long TGDraft::CuttingPlanes::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1254)
inline IDispatchPtr TGDraft::CuttingPlanes::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1255)
inline TGDraft::CuttingPlanePtr TGDraft::CuttingPlanes::Add ( ) {
    struct CuttingPlane * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return CuttingPlanePtr(_result, false);
}

//
// dispinterface CuttingPlane wrapper method implementations
//

#pragma implementation_key(1256)
inline TGFramework::ApplicationPtr TGDraft::CuttingPlane::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(1257)
inline VARIANT_BOOL TGDraft::CuttingPlane::GetDisplayCaption ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1258)
inline void TGDraft::CuttingPlane::PutDisplayCaption ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1259)
inline _bstr_t TGDraft::CuttingPlane::GetCaption ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1260)
inline void TGDraft::CuttingPlane::PutCaption ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1261)
inline enum TGFrameworkSupport::DimViewCuttingPlaneDisplayTypeConstants TGDraft::CuttingPlane::GetDisplayType ( ) {
    enum TGFrameworkSupport::DimViewCuttingPlaneDisplayTypeConstants _result;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1262)
inline void TGDraft::CuttingPlane::PutDisplayType ( enum TGFrameworkSupport::DimViewCuttingPlaneDisplayTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1263)
inline _bstr_t TGDraft::CuttingPlane::GetTextFont ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1264)
inline void TGDraft::CuttingPlane::PutTextFont ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1265)
inline enum TGFrameworkSupport::DimTextFontStyleConstants TGDraft::CuttingPlane::GetTextFontStyle ( ) {
    enum TGFrameworkSupport::DimTextFontStyleConstants _result;
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1266)
inline void TGDraft::CuttingPlane::PutTextFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants _arg1 ) {
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1267)
inline double TGDraft::CuttingPlane::GetTextHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1268)
inline void TGDraft::CuttingPlane::PutTextHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1269)
inline double TGDraft::CuttingPlane::GetTextRatio ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1270)
inline void TGDraft::CuttingPlane::PutTextRatio ( double _arg1 ) {
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1271)
inline long TGDraft::CuttingPlane::GetTextColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1272)
inline void TGDraft::CuttingPlane::PutTextColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1273)
inline _bstr_t TGDraft::CuttingPlane::GetStyleName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1274)
inline void TGDraft::CuttingPlane::PutStyleName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x6e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1275)
inline enum TGFrameworkSupport::DimTermTypeConstants TGDraft::CuttingPlane::GetTerminatorType ( ) {
    enum TGFrameworkSupport::DimTermTypeConstants _result;
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1276)
inline void TGDraft::CuttingPlane::PutTerminatorType ( enum TGFrameworkSupport::DimTermTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1277)
inline double TGDraft::CuttingPlane::GetTerminatorRatio ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1278)
inline void TGDraft::CuttingPlane::PutTerminatorRatio ( double _arg1 ) {
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1279)
inline double TGDraft::CuttingPlane::GetLineWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1280)
inline void TGDraft::CuttingPlane::PutLineWidth ( double _arg1 ) {
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1281)
inline _bstr_t TGDraft::CuttingPlane::GetLineType ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1282)
inline void TGDraft::CuttingPlane::PutLineType ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1283)
inline _bstr_t TGDraft::CuttingPlane::GetCaptionDefinitionText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x73, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1284)
inline void TGDraft::CuttingPlane::PutCaptionDefinitionText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x73, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1285)
inline _bstr_t TGDraft::CuttingPlane::GetCaptionDisplayedText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x74, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1286)
inline TGDraft::DrawingViewPtr TGDraft::CuttingPlane::GetSourceDrawingView ( ) {
    struct DrawingView * _result = 0;
    _com_dispatch_method(this, 0x75, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(1287)
inline HRESULT TGDraft::CuttingPlane::GetFoldLineWithViewDirection ( double * LineStartX, double * LineStartY, double * LineEndX, double * LineEndY, double * ViewDirectionX, double * ViewDirectionY ) {
    return _com_dispatch_method(this, 0x76, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005", LineStartX, LineStartY, LineEndX, LineEndY, ViewDirectionX, ViewDirectionY);
}

#pragma implementation_key(1288)
inline _bstr_t TGDraft::CuttingPlane::GetViewSheetNumberDefinitionText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1289)
inline void TGDraft::CuttingPlane::PutViewSheetNumberDefinitionText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1290)
inline VARIANT_BOOL TGDraft::CuttingPlane::GetDisplayViewSheetNumber ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1291)
inline void TGDraft::CuttingPlane::PutDisplayViewSheetNumber ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1292)
inline enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants TGDraft::CuttingPlane::GetViewSheetNumberLocation ( ) {
    enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants _result;
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1293)
inline void TGDraft::CuttingPlane::PutViewSheetNumberLocation ( enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants _arg1 ) {
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1294)
inline enum TGFrameworkSupport::CuttingPlaneLineDisplayStyleConstants TGDraft::CuttingPlane::GetLineDisplayStyle ( ) {
    enum TGFrameworkSupport::CuttingPlaneLineDisplayStyleConstants _result;
    _com_dispatch_method(this, 0x7a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1295)
inline void TGDraft::CuttingPlane::PutLineDisplayStyle ( enum TGFrameworkSupport::CuttingPlaneLineDisplayStyleConstants _arg1 ) {
    _com_dispatch_method(this, 0x7a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1296)
inline double TGDraft::CuttingPlane::GetThickLineLengthRatio ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x7b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1297)
inline void TGDraft::CuttingPlane::PutThickLineLengthRatio ( double _arg1 ) {
    _com_dispatch_method(this, 0x7b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1298)
inline double TGDraft::CuttingPlane::GetThickLineArrowOffset ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1299)
inline void TGDraft::CuttingPlane::PutThickLineArrowOffset ( double _arg1 ) {
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1300)
inline HRESULT TGDraft::CuttingPlane::GetCaptionPosition ( VARIANT_BOOL CaptionAtStartOfLine, double * x, double * y ) {
    return _com_dispatch_method(this, 0x7d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b\x4005\x4005", CaptionAtStartOfLine, x, y);
}

#pragma implementation_key(1301)
inline HRESULT TGDraft::CuttingPlane::SetCaptionPosition ( VARIANT_BOOL CaptionAtStartOfLine, double x, double y ) {
    return _com_dispatch_method(this, 0x7e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b\x0005\x0005", CaptionAtStartOfLine, x, y);
}

#pragma implementation_key(1302)
inline void TGDraft::CuttingPlane::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x84, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1303)
inline _bstr_t TGDraft::CuttingPlane::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x84, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1304)
inline void TGDraft::CuttingPlane::PutViewSide ( enum TGFramework::SectionViewProfileSide _arg1 ) {
    _com_dispatch_method(this, 0x80, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1305)
inline enum TGFramework::SectionViewProfileSide TGDraft::CuttingPlane::GetViewSide ( ) {
    enum TGFramework::SectionViewProfileSide _result;
    _com_dispatch_method(this, 0x80, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1306)
inline void TGDraft::CuttingPlane::PutFoldSegment ( long _arg1 ) {
    _com_dispatch_method(this, 0x83, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1307)
inline long TGDraft::CuttingPlane::GetFoldSegment ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x83, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1308)
inline TGDraft::DrawingViewPtr TGDraft::CuttingPlane::GetSectionView ( ) {
    struct DrawingView * _result = 0;
    _com_dispatch_method(this, 0x82, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(1309)
inline TGDraft::DrawingViewPtr TGDraft::CuttingPlane::CreateView ( enum DraftSectionViewType SectionType ) {
    struct DrawingView * _result = 0;
    _com_dispatch_method(this, 0x81, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003", SectionType);
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(1310)
inline TGDraft::DraftProfilePtr TGDraft::CuttingPlane::GetProfile ( ) {
    struct DraftProfile * _result = 0;
    _com_dispatch_method(this, 0x7f, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DraftProfilePtr(_result, false);
}

#pragma implementation_key(1311)
inline void TGDraft::CuttingPlane::PutAuto ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x85, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1312)
inline VARIANT_BOOL TGDraft::CuttingPlane::GetAuto ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x85, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// interface _ICuttingPlanesAuto wrapper method implementations
//

#pragma implementation_key(1313)
inline TGDraft::CuttingPlanePtr TGDraft::_ICuttingPlanesAuto::Item ( const _variant_t & Index ) {
    struct CuttingPlane * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CuttingPlanePtr(_result, false);
}

#pragma implementation_key(1314)
inline IUnknownPtr TGDraft::_ICuttingPlanesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1315)
inline IDispatchPtr TGDraft::_ICuttingPlanesAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1316)
inline long TGDraft::_ICuttingPlanesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1317)
inline IDispatchPtr TGDraft::_ICuttingPlanesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1318)
inline TGDraft::CuttingPlanePtr TGDraft::_ICuttingPlanesAuto::Add ( ) {
    struct CuttingPlane * _result = 0;
    HRESULT _hr = raw_Add(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CuttingPlanePtr(_result, false);
}

//
// dispinterface DraftProfile wrapper method implementations
//

#pragma implementation_key(1319)
inline TGFramework::ApplicationPtr TGDraft::DraftProfile::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(1320)
inline IDispatchPtr TGDraft::DraftProfile::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1321)
inline enum TGDraft::ProfileValidationStatus TGDraft::DraftProfile::Validate ( ) {
    enum ProfileValidationStatus _result;
    _com_dispatch_method(this, 0x71, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1322)
inline HRESULT TGDraft::DraftProfile::BeginEdit ( ) {
    return _com_dispatch_method(this, 0x72, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1323)
inline HRESULT TGDraft::DraftProfile::EndEdit ( ) {
    return _com_dispatch_method(this, 0x73, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1324)
inline TGFrameworkSupport::Lines2dPtr TGDraft::DraftProfile::GetLines2d ( ) {
    struct TGFrameworkSupport::Lines2d * _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::Lines2dPtr(_result, false);
}

#pragma implementation_key(1325)
inline TGFrameworkSupport::Circles2dPtr TGDraft::DraftProfile::GetCircles2d ( ) {
    struct TGFrameworkSupport::Circles2d * _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::Circles2dPtr(_result, false);
}

#pragma implementation_key(1326)
inline TGFrameworkSupport::Arcs2dPtr TGDraft::DraftProfile::GetArcs2d ( ) {
    struct TGFrameworkSupport::Arcs2d * _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::Arcs2dPtr(_result, false);
}

#pragma implementation_key(1327)
inline TGFrameworkSupport::Ellipses2dPtr TGDraft::DraftProfile::GetEllipses2d ( ) {
    struct TGFrameworkSupport::Ellipses2d * _result = 0;
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::Ellipses2dPtr(_result, false);
}

#pragma implementation_key(1328)
inline TGFrameworkSupport::BSplineCurves2dPtr TGDraft::DraftProfile::GetBsplineCurves2d ( ) {
    struct TGFrameworkSupport::BSplineCurves2d * _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::BSplineCurves2dPtr(_result, false);
}

#pragma implementation_key(1329)
inline TGFrameworkSupport::EllipticalArcs2dPtr TGDraft::DraftProfile::GetEllipticalArcs2d ( ) {
    struct TGFrameworkSupport::EllipticalArcs2d * _result = 0;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::EllipticalArcs2dPtr(_result, false);
}

#pragma implementation_key(1330)
inline TGFrameworkSupport::DimensionsPtr TGDraft::DraftProfile::GetDimensions ( ) {
    struct TGFrameworkSupport::Dimensions * _result = 0;
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::DimensionsPtr(_result, false);
}

#pragma implementation_key(1331)
inline TGFrameworkSupport::Relations2dPtr TGDraft::DraftProfile::GetRelations2d ( ) {
    struct TGFrameworkSupport::Relations2d * _result = 0;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::Relations2dPtr(_result, false);
}

//
// interface _ICuttingPlaneAuto wrapper method implementations
//

#pragma implementation_key(1332)
inline TGFramework::ApplicationPtr TGDraft::_ICuttingPlaneAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(1333)
inline VARIANT_BOOL TGDraft::_ICuttingPlaneAuto::GetDisplayCaption ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayCaption(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1334)
inline void TGDraft::_ICuttingPlaneAuto::PutDisplayCaption ( VARIANT_BOOL pDisplayCaption ) {
    HRESULT _hr = put_DisplayCaption(pDisplayCaption);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1335)
inline _bstr_t TGDraft::_ICuttingPlaneAuto::GetCaption ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Caption(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1336)
inline void TGDraft::_ICuttingPlaneAuto::PutCaption ( _bstr_t pCaption ) {
    HRESULT _hr = put_Caption(pCaption);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1337)
inline enum TGFrameworkSupport::DimViewCuttingPlaneDisplayTypeConstants TGDraft::_ICuttingPlaneAuto::GetDisplayType ( ) {
    enum TGFrameworkSupport::DimViewCuttingPlaneDisplayTypeConstants _result;
    HRESULT _hr = get_DisplayType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1338)
inline void TGDraft::_ICuttingPlaneAuto::PutDisplayType ( enum TGFrameworkSupport::DimViewCuttingPlaneDisplayTypeConstants DisplayType ) {
    HRESULT _hr = put_DisplayType(DisplayType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1339)
inline _bstr_t TGDraft::_ICuttingPlaneAuto::GetTextFont ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextFont(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1340)
inline void TGDraft::_ICuttingPlaneAuto::PutTextFont ( _bstr_t TextFont ) {
    HRESULT _hr = put_TextFont(TextFont);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1341)
inline enum TGFrameworkSupport::DimTextFontStyleConstants TGDraft::_ICuttingPlaneAuto::GetTextFontStyle ( ) {
    enum TGFrameworkSupport::DimTextFontStyleConstants _result;
    HRESULT _hr = get_TextFontStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1342)
inline void TGDraft::_ICuttingPlaneAuto::PutTextFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants TextFontStyle ) {
    HRESULT _hr = put_TextFontStyle(TextFontStyle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1343)
inline double TGDraft::_ICuttingPlaneAuto::GetTextHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_TextHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1344)
inline void TGDraft::_ICuttingPlaneAuto::PutTextHeight ( double TextHeight ) {
    HRESULT _hr = put_TextHeight(TextHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1345)
inline double TGDraft::_ICuttingPlaneAuto::GetTextRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_TextRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1346)
inline void TGDraft::_ICuttingPlaneAuto::PutTextRatio ( double TextRatio ) {
    HRESULT _hr = put_TextRatio(TextRatio);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1347)
inline long TGDraft::_ICuttingPlaneAuto::GetTextColor ( ) {
    long _result = 0;
    HRESULT _hr = get_TextColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1348)
inline void TGDraft::_ICuttingPlaneAuto::PutTextColor ( long TextColor ) {
    HRESULT _hr = put_TextColor(TextColor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1349)
inline _bstr_t TGDraft::_ICuttingPlaneAuto::GetStyleName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StyleName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1350)
inline void TGDraft::_ICuttingPlaneAuto::PutStyleName ( _bstr_t StyleName ) {
    HRESULT _hr = put_StyleName(StyleName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1351)
inline enum TGFrameworkSupport::DimTermTypeConstants TGDraft::_ICuttingPlaneAuto::GetTerminatorType ( ) {
    enum TGFrameworkSupport::DimTermTypeConstants _result;
    HRESULT _hr = get_TerminatorType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1352)
inline void TGDraft::_ICuttingPlaneAuto::PutTerminatorType ( enum TGFrameworkSupport::DimTermTypeConstants TerminatorType ) {
    HRESULT _hr = put_TerminatorType(TerminatorType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1353)
inline double TGDraft::_ICuttingPlaneAuto::GetTerminatorRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_TerminatorRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1354)
inline void TGDraft::_ICuttingPlaneAuto::PutTerminatorRatio ( double TerminatorRatio ) {
    HRESULT _hr = put_TerminatorRatio(TerminatorRatio);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1355)
inline double TGDraft::_ICuttingPlaneAuto::GetLineWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_LineWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1356)
inline void TGDraft::_ICuttingPlaneAuto::PutLineWidth ( double LineWidth ) {
    HRESULT _hr = put_LineWidth(LineWidth);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1357)
inline _bstr_t TGDraft::_ICuttingPlaneAuto::GetLineType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LineType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1358)
inline void TGDraft::_ICuttingPlaneAuto::PutLineType ( _bstr_t LineType ) {
    HRESULT _hr = put_LineType(LineType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1359)
inline _bstr_t TGDraft::_ICuttingPlaneAuto::GetCaptionDefinitionText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CaptionDefinitionText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1360)
inline void TGDraft::_ICuttingPlaneAuto::PutCaptionDefinitionText ( _bstr_t CaptionDefinitionText ) {
    HRESULT _hr = put_CaptionDefinitionText(CaptionDefinitionText);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1361)
inline _bstr_t TGDraft::_ICuttingPlaneAuto::GetCaptionDisplayedText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CaptionDisplayedText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1362)
inline TGDraft::DrawingViewPtr TGDraft::_ICuttingPlaneAuto::GetSourceDrawingView ( ) {
    struct DrawingView * _result = 0;
    HRESULT _hr = get_SourceDrawingView(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(1363)
inline HRESULT TGDraft::_ICuttingPlaneAuto::GetFoldLineWithViewDirection ( double * LineStartX, double * LineStartY, double * LineEndX, double * LineEndY, double * ViewDirectionX, double * ViewDirectionY ) {
    HRESULT _hr = raw_GetFoldLineWithViewDirection(LineStartX, LineStartY, LineEndX, LineEndY, ViewDirectionX, ViewDirectionY);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1364)
inline _bstr_t TGDraft::_ICuttingPlaneAuto::GetViewSheetNumberDefinitionText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ViewSheetNumberDefinitionText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1365)
inline void TGDraft::_ICuttingPlaneAuto::PutViewSheetNumberDefinitionText ( _bstr_t ViewSheetNumberDefinitionText ) {
    HRESULT _hr = put_ViewSheetNumberDefinitionText(ViewSheetNumberDefinitionText);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1366)
inline VARIANT_BOOL TGDraft::_ICuttingPlaneAuto::GetDisplayViewSheetNumber ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayViewSheetNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1367)
inline void TGDraft::_ICuttingPlaneAuto::PutDisplayViewSheetNumber ( VARIANT_BOOL DisplayViewSheetNumber ) {
    HRESULT _hr = put_DisplayViewSheetNumber(DisplayViewSheetNumber);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1368)
inline enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants TGDraft::_ICuttingPlaneAuto::GetViewSheetNumberLocation ( ) {
    enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants _result;
    HRESULT _hr = get_ViewSheetNumberLocation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1369)
inline void TGDraft::_ICuttingPlaneAuto::PutViewSheetNumberLocation ( enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants ViewSheetNumberLocation ) {
    HRESULT _hr = put_ViewSheetNumberLocation(ViewSheetNumberLocation);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1370)
inline enum TGFrameworkSupport::CuttingPlaneLineDisplayStyleConstants TGDraft::_ICuttingPlaneAuto::GetLineDisplayStyle ( ) {
    enum TGFrameworkSupport::CuttingPlaneLineDisplayStyleConstants _result;
    HRESULT _hr = get_LineDisplayStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1371)
inline void TGDraft::_ICuttingPlaneAuto::PutLineDisplayStyle ( enum TGFrameworkSupport::CuttingPlaneLineDisplayStyleConstants LineDisplayStyle ) {
    HRESULT _hr = put_LineDisplayStyle(LineDisplayStyle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1372)
inline double TGDraft::_ICuttingPlaneAuto::GetThickLineLengthRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_ThickLineLengthRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1373)
inline void TGDraft::_ICuttingPlaneAuto::PutThickLineLengthRatio ( double ThickLineLengthRatio ) {
    HRESULT _hr = put_ThickLineLengthRatio(ThickLineLengthRatio);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1374)
inline double TGDraft::_ICuttingPlaneAuto::GetThickLineArrowOffset ( ) {
    double _result = 0;
    HRESULT _hr = get_ThickLineArrowOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1375)
inline void TGDraft::_ICuttingPlaneAuto::PutThickLineArrowOffset ( double ThickLineArrowOffset ) {
    HRESULT _hr = put_ThickLineArrowOffset(ThickLineArrowOffset);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1376)
inline HRESULT TGDraft::_ICuttingPlaneAuto::GetCaptionPosition ( VARIANT_BOOL CaptionAtStartOfLine, double * x, double * y ) {
    HRESULT _hr = raw_GetCaptionPosition(CaptionAtStartOfLine, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1377)
inline HRESULT TGDraft::_ICuttingPlaneAuto::SetCaptionPosition ( VARIANT_BOOL CaptionAtStartOfLine, double x, double y ) {
    HRESULT _hr = raw_SetCaptionPosition(CaptionAtStartOfLine, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1378)
inline void TGDraft::_ICuttingPlaneAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1379)
inline _bstr_t TGDraft::_ICuttingPlaneAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1380)
inline void TGDraft::_ICuttingPlaneAuto::PutViewSide ( enum TGFramework::SectionViewProfileSide Side ) {
    HRESULT _hr = put_ViewSide(Side);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1381)
inline enum TGFramework::SectionViewProfileSide TGDraft::_ICuttingPlaneAuto::GetViewSide ( ) {
    enum TGFramework::SectionViewProfileSide _result;
    HRESULT _hr = get_ViewSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1382)
inline void TGDraft::_ICuttingPlaneAuto::PutFoldSegment ( long Segment ) {
    HRESULT _hr = put_FoldSegment(Segment);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1383)
inline long TGDraft::_ICuttingPlaneAuto::GetFoldSegment ( ) {
    long _result = 0;
    HRESULT _hr = get_FoldSegment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1384)
inline TGDraft::DrawingViewPtr TGDraft::_ICuttingPlaneAuto::GetSectionView ( ) {
    struct DrawingView * _result = 0;
    HRESULT _hr = get_SectionView(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(1385)
inline TGDraft::DrawingViewPtr TGDraft::_ICuttingPlaneAuto::CreateView ( enum DraftSectionViewType SectionType ) {
    struct DrawingView * _result = 0;
    HRESULT _hr = raw_CreateView(SectionType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(1386)
inline TGDraft::DraftProfilePtr TGDraft::_ICuttingPlaneAuto::GetProfile ( ) {
    struct DraftProfile * _result = 0;
    HRESULT _hr = get_Profile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DraftProfilePtr(_result, false);
}

#pragma implementation_key(1387)
inline void TGDraft::_ICuttingPlaneAuto::PutAuto ( VARIANT_BOOL value ) {
    HRESULT _hr = put_Auto(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1388)
inline VARIANT_BOOL TGDraft::_ICuttingPlaneAuto::GetAuto ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Auto(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface _IDraftProfileAuto wrapper method implementations
//

#pragma implementation_key(1389)
inline TGFramework::ApplicationPtr TGDraft::_IDraftProfileAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(1390)
inline IDispatchPtr TGDraft::_IDraftProfileAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1391)
inline enum TGDraft::ProfileValidationStatus TGDraft::_IDraftProfileAuto::Validate ( ) {
    enum ProfileValidationStatus _result;
    HRESULT _hr = raw_Validate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1392)
inline HRESULT TGDraft::_IDraftProfileAuto::BeginEdit ( ) {
    HRESULT _hr = raw_BeginEdit();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1393)
inline HRESULT TGDraft::_IDraftProfileAuto::EndEdit ( ) {
    HRESULT _hr = raw_EndEdit();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1394)
inline TGFrameworkSupport::Lines2dPtr TGDraft::_IDraftProfileAuto::GetLines2d ( ) {
    struct TGFrameworkSupport::Lines2d * _result = 0;
    HRESULT _hr = get_Lines2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::Lines2dPtr(_result, false);
}

#pragma implementation_key(1395)
inline TGFrameworkSupport::Circles2dPtr TGDraft::_IDraftProfileAuto::GetCircles2d ( ) {
    struct TGFrameworkSupport::Circles2d * _result = 0;
    HRESULT _hr = get_Circles2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::Circles2dPtr(_result, false);
}

#pragma implementation_key(1396)
inline TGFrameworkSupport::Arcs2dPtr TGDraft::_IDraftProfileAuto::GetArcs2d ( ) {
    struct TGFrameworkSupport::Arcs2d * _result = 0;
    HRESULT _hr = get_Arcs2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::Arcs2dPtr(_result, false);
}

#pragma implementation_key(1397)
inline TGFrameworkSupport::Ellipses2dPtr TGDraft::_IDraftProfileAuto::GetEllipses2d ( ) {
    struct TGFrameworkSupport::Ellipses2d * _result = 0;
    HRESULT _hr = get_Ellipses2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::Ellipses2dPtr(_result, false);
}

#pragma implementation_key(1398)
inline TGFrameworkSupport::BSplineCurves2dPtr TGDraft::_IDraftProfileAuto::GetBsplineCurves2d ( ) {
    struct TGFrameworkSupport::BSplineCurves2d * _result = 0;
    HRESULT _hr = get_BsplineCurves2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::BSplineCurves2dPtr(_result, false);
}

#pragma implementation_key(1399)
inline TGFrameworkSupport::EllipticalArcs2dPtr TGDraft::_IDraftProfileAuto::GetEllipticalArcs2d ( ) {
    struct TGFrameworkSupport::EllipticalArcs2d * _result = 0;
    HRESULT _hr = get_EllipticalArcs2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::EllipticalArcs2dPtr(_result, false);
}

#pragma implementation_key(1400)
inline TGFrameworkSupport::DimensionsPtr TGDraft::_IDraftProfileAuto::GetDimensions ( ) {
    struct TGFrameworkSupport::Dimensions * _result = 0;
    HRESULT _hr = get_Dimensions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::DimensionsPtr(_result, false);
}

#pragma implementation_key(1401)
inline TGFrameworkSupport::Relations2dPtr TGDraft::_IDraftProfileAuto::GetRelations2d ( ) {
    struct TGFrameworkSupport::Relations2d * _result = 0;
    HRESULT _hr = get_Relations2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::Relations2dPtr(_result, false);
}

//
// dispinterface BrokenOutSectionProfiles wrapper method implementations
//

#pragma implementation_key(1402)
inline TGDraft::BrokenOutSectionProfilePtr TGDraft::BrokenOutSectionProfiles::Item ( const _variant_t & Index ) {
    struct BrokenOutSectionProfile * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return BrokenOutSectionProfilePtr(_result, false);
}

#pragma implementation_key(1403)
inline IDispatchPtr TGDraft::BrokenOutSectionProfiles::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1404)
inline long TGDraft::BrokenOutSectionProfiles::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1405)
inline IDispatchPtr TGDraft::BrokenOutSectionProfiles::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1406)
inline TGDraft::BrokenOutSectionProfilePtr TGDraft::BrokenOutSectionProfiles::Add ( struct DrawingView * TargetView ) {
    struct BrokenOutSectionProfile * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", TargetView);
    return BrokenOutSectionProfilePtr(_result, false);
}

//
// dispinterface BrokenOutSectionProfile wrapper method implementations
//

#pragma implementation_key(1407)
inline TGFramework::ApplicationPtr TGDraft::BrokenOutSectionProfile::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(1408)
inline IDispatchPtr TGDraft::BrokenOutSectionProfile::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1409)
inline void TGDraft::BrokenOutSectionProfile::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1410)
inline _bstr_t TGDraft::BrokenOutSectionProfile::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1411)
inline TGDraft::DraftProfilePtr TGDraft::BrokenOutSectionProfile::GetProfile ( ) {
    struct DraftProfile * _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DraftProfilePtr(_result, false);
}

#pragma implementation_key(1412)
inline TGDraft::DrawingViewPtr TGDraft::BrokenOutSectionProfile::GetTargetView ( ) {
    struct DrawingView * _result = 0;
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(1413)
inline void TGDraft::BrokenOutSectionProfile::PutTargetView ( struct DrawingView * _arg1 ) {
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1414)
inline double TGDraft::BrokenOutSectionProfile::GetDepth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1415)
inline void TGDraft::BrokenOutSectionProfile::PutDepth ( double _arg1 ) {
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1416)
inline double TGDraft::BrokenOutSectionProfile::GetDepthPlaneOffset ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1417)
inline void TGDraft::BrokenOutSectionProfile::PutDepthPlaneOffset ( double _arg1 ) {
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

//
// interface _IBrokenOutSectionProfilesAuto wrapper method implementations
//

#pragma implementation_key(1418)
inline TGDraft::BrokenOutSectionProfilePtr TGDraft::_IBrokenOutSectionProfilesAuto::Item ( const _variant_t & Index ) {
    struct BrokenOutSectionProfile * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BrokenOutSectionProfilePtr(_result, false);
}

#pragma implementation_key(1419)
inline IUnknownPtr TGDraft::_IBrokenOutSectionProfilesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1420)
inline IDispatchPtr TGDraft::_IBrokenOutSectionProfilesAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1421)
inline long TGDraft::_IBrokenOutSectionProfilesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1422)
inline IDispatchPtr TGDraft::_IBrokenOutSectionProfilesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1423)
inline TGDraft::BrokenOutSectionProfilePtr TGDraft::_IBrokenOutSectionProfilesAuto::Add ( struct DrawingView * TargetView ) {
    struct BrokenOutSectionProfile * _result = 0;
    HRESULT _hr = raw_Add(TargetView, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BrokenOutSectionProfilePtr(_result, false);
}

//
// interface _IBrokenOutSectionProfileAuto wrapper method implementations
//

#pragma implementation_key(1424)
inline TGFramework::ApplicationPtr TGDraft::_IBrokenOutSectionProfileAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(1425)
inline IDispatchPtr TGDraft::_IBrokenOutSectionProfileAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1426)
inline void TGDraft::_IBrokenOutSectionProfileAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1427)
inline _bstr_t TGDraft::_IBrokenOutSectionProfileAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1428)
inline TGDraft::DraftProfilePtr TGDraft::_IBrokenOutSectionProfileAuto::GetProfile ( ) {
    struct DraftProfile * _result = 0;
    HRESULT _hr = get_Profile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DraftProfilePtr(_result, false);
}

#pragma implementation_key(1429)
inline TGDraft::DrawingViewPtr TGDraft::_IBrokenOutSectionProfileAuto::GetTargetView ( ) {
    struct DrawingView * _result = 0;
    HRESULT _hr = get_TargetView(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(1430)
inline void TGDraft::_IBrokenOutSectionProfileAuto::PutTargetView ( struct DrawingView * TargetView ) {
    HRESULT _hr = put_TargetView(TargetView);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1431)
inline double TGDraft::_IBrokenOutSectionProfileAuto::GetDepth ( ) {
    double _result = 0;
    HRESULT _hr = get_Depth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1432)
inline void TGDraft::_IBrokenOutSectionProfileAuto::PutDepth ( double RelativeDepth ) {
    HRESULT _hr = put_Depth(RelativeDepth);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1433)
inline double TGDraft::_IBrokenOutSectionProfileAuto::GetDepthPlaneOffset ( ) {
    double _result = 0;
    HRESULT _hr = get_DepthPlaneOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1434)
inline void TGDraft::_IBrokenOutSectionProfileAuto::PutDepthPlaneOffset ( double offset ) {
    HRESULT _hr = put_DepthPlaneOffset(offset);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// dispinterface DetailEnvelopes wrapper method implementations
//

#pragma implementation_key(1435)
inline TGDraft::DetailEnvelopePtr TGDraft::DetailEnvelopes::Item ( const _variant_t & Index ) {
    struct DetailEnvelope * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return DetailEnvelopePtr(_result, false);
}

#pragma implementation_key(1436)
inline IDispatchPtr TGDraft::DetailEnvelopes::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1437)
inline long TGDraft::DetailEnvelopes::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1438)
inline IDispatchPtr TGDraft::DetailEnvelopes::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// dispinterface DetailEnvelope wrapper method implementations
//

#pragma implementation_key(1439)
inline VARIANT_BOOL TGDraft::DetailEnvelope::GetDisplayCaption ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1440)
inline void TGDraft::DetailEnvelope::PutDisplayCaption ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1441)
inline TGDraft::DrawingViewPtr TGDraft::DetailEnvelope::GetSourceDrawingView ( ) {
    struct DrawingView * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(1442)
inline _bstr_t TGDraft::DetailEnvelope::GetCaption ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1443)
inline void TGDraft::DetailEnvelope::PutCaption ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1444)
inline double TGDraft::DetailEnvelope::GetDiameter ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1445)
inline void TGDraft::DetailEnvelope::PutDiameter ( double _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1446)
inline HRESULT TGDraft::DetailEnvelope::GetCenterPoint ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(1447)
inline HRESULT TGDraft::DetailEnvelope::SetCenterPoint ( double x, double y ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(1448)
inline double TGDraft::DetailEnvelope::GetLineWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1449)
inline void TGDraft::DetailEnvelope::PutLineWidth ( double _arg1 ) {
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1450)
inline _bstr_t TGDraft::DetailEnvelope::GetLineType ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1451)
inline void TGDraft::DetailEnvelope::PutLineType ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1452)
inline _bstr_t TGDraft::DetailEnvelope::GetTextFont ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4001, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1453)
inline void TGDraft::DetailEnvelope::PutTextFont ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x4001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1454)
inline enum TGFrameworkSupport::DimTextFontStyleConstants TGDraft::DetailEnvelope::GetTextFontStyle ( ) {
    enum TGFrameworkSupport::DimTextFontStyleConstants _result;
    _com_dispatch_method(this, 0x4002, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1455)
inline void TGDraft::DetailEnvelope::PutTextFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants _arg1 ) {
    _com_dispatch_method(this, 0x4002, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1456)
inline double TGDraft::DetailEnvelope::GetTextHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4003, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1457)
inline void TGDraft::DetailEnvelope::PutTextHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x4003, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1458)
inline double TGDraft::DetailEnvelope::GetTextRatio ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4004, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1459)
inline void TGDraft::DetailEnvelope::PutTextRatio ( double _arg1 ) {
    _com_dispatch_method(this, 0x4004, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1460)
inline long TGDraft::DetailEnvelope::GetTextColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4005, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1461)
inline void TGDraft::DetailEnvelope::PutTextColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x4005, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1462)
inline _bstr_t TGDraft::DetailEnvelope::GetStyleName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4006, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1463)
inline void TGDraft::DetailEnvelope::PutStyleName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x4006, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1464)
inline TGFramework::ApplicationPtr TGDraft::DetailEnvelope::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x6065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(1465)
inline long TGDraft::DetailEnvelope::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6066, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1466)
inline _bstr_t TGDraft::DetailEnvelope::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6067, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1467)
inline IDispatchPtr TGDraft::DetailEnvelope::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x6068, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1468)
inline long TGDraft::DetailEnvelope::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6069, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1469)
inline VARIANT_BOOL TGDraft::DetailEnvelope::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x606a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1470)
inline void TGDraft::DetailEnvelope::PutVisible ( VARIANT_BOOL * _arg1 ) {
    _com_dispatch_method(this, 0x606a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x400b", _arg1);
}

#pragma implementation_key(1471)
inline long TGDraft::DetailEnvelope::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x606b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1472)
inline _bstr_t TGDraft::DetailEnvelope::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x606c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1473)
inline IDispatchPtr TGDraft::DetailEnvelope::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x606d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1474)
inline HRESULT TGDraft::DetailEnvelope::Copy ( ) {
    return _com_dispatch_method(this, 0x6001600a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1475)
inline HRESULT TGDraft::DetailEnvelope::Cut ( ) {
    return _com_dispatch_method(this, 0x6001600b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1476)
inline HRESULT TGDraft::DetailEnvelope::Delete ( ) {
    return _com_dispatch_method(this, 0x6001600c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1477)
inline HRESULT TGDraft::DetailEnvelope::BringToFront ( ) {
    return _com_dispatch_method(this, 0x6001600d, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1478)
inline HRESULT TGDraft::DetailEnvelope::BringForward ( ) {
    return _com_dispatch_method(this, 0x6001600e, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1479)
inline HRESULT TGDraft::DetailEnvelope::SendToBack ( ) {
    return _com_dispatch_method(this, 0x6001600f, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1480)
inline HRESULT TGDraft::DetailEnvelope::SendBackward ( ) {
    return _com_dispatch_method(this, 0x60016010, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1481)
inline HRESULT TGDraft::DetailEnvelope::Select ( ) {
    return _com_dispatch_method(this, 0x60016011, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1482)
inline HRESULT TGDraft::DetailEnvelope::Range ( double * min_x, double * min_y, double * max_x, double * max_y ) {
    return _com_dispatch_method(this, 0x60016012, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", min_x, min_y, max_x, max_y);
}

#pragma implementation_key(1483)
inline enum TGDraft::DetailEnvelopeStandardConstants TGDraft::DetailEnvelope::GetDisplayStandard ( ) {
    enum DetailEnvelopeStandardConstants _result;
    _com_dispatch_method(this, 0x606e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1484)
inline void TGDraft::DetailEnvelope::PutDisplayStandard ( enum DetailEnvelopeStandardConstants _arg1 ) {
    _com_dispatch_method(this, 0x606e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1485)
inline VARIANT_BOOL TGDraft::DetailEnvelope::GetDisplayAsCircle ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x606f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1486)
inline void TGDraft::DetailEnvelope::PutDisplayAsCircle ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x606f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1487)
inline _bstr_t TGDraft::DetailEnvelope::GetCaptionDefinitionText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6070, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1488)
inline void TGDraft::DetailEnvelope::PutCaptionDefinitionText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x6070, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1489)
inline _bstr_t TGDraft::DetailEnvelope::GetCaptionDisplayedText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6071, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1490)
inline _bstr_t TGDraft::DetailEnvelope::GetViewSheetNumberDefinitionText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6072, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1491)
inline void TGDraft::DetailEnvelope::PutViewSheetNumberDefinitionText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x6072, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1492)
inline VARIANT_BOOL TGDraft::DetailEnvelope::GetDisplayViewSheetNumber ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6073, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1493)
inline void TGDraft::DetailEnvelope::PutDisplayViewSheetNumber ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6073, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1494)
inline HRESULT TGDraft::DetailEnvelope::GetCaptionPosition ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x6074, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(1495)
inline HRESULT TGDraft::DetailEnvelope::SetCaptionPosition ( double x, double y ) {
    return _com_dispatch_method(this, 0x6075, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(1496)
inline void TGDraft::DetailEnvelope::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x6076, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1497)
inline _bstr_t TGDraft::DetailEnvelope::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6076, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1498)
inline TGDraft::DrawingViewPtr TGDraft::DetailEnvelope::GetDetailView ( ) {
    struct DrawingView * _result = 0;
    _com_dispatch_method(this, 0x6077, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(1499)
inline TGDraft::DraftProfilePtr TGDraft::DetailEnvelope::GetProfile ( ) {
    struct DraftProfile * _result = 0;
    _com_dispatch_method(this, 0x6078, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DraftProfilePtr(_result, false);
}

#pragma implementation_key(1500)
inline void TGDraft::DetailEnvelope::PutAuto ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6079, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1501)
inline VARIANT_BOOL TGDraft::DetailEnvelope::GetAuto ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6079, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1502)
inline IDispatchPtr TGDraft::DetailEnvelope::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1503)
inline VARIANT_BOOL TGDraft::DetailEnvelope::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _IDetailEnvelopesAuto wrapper method implementations
//

#pragma implementation_key(1504)
inline TGDraft::DetailEnvelopePtr TGDraft::_IDetailEnvelopesAuto::Item ( const _variant_t & Index ) {
    struct DetailEnvelope * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DetailEnvelopePtr(_result, false);
}

#pragma implementation_key(1505)
inline IUnknownPtr TGDraft::_IDetailEnvelopesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1506)
inline IDispatchPtr TGDraft::_IDetailEnvelopesAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1507)
inline long TGDraft::_IDetailEnvelopesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1508)
inline IDispatchPtr TGDraft::_IDetailEnvelopesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// interface _IDetailEnvelopeAuto wrapper method implementations
//

#pragma implementation_key(1509)
inline VARIANT_BOOL TGDraft::_IDetailEnvelopeAuto::GetDisplayCaption ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayCaption(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1510)
inline void TGDraft::_IDetailEnvelopeAuto::PutDisplayCaption ( VARIANT_BOOL pDisplayCaption ) {
    HRESULT _hr = put_DisplayCaption(pDisplayCaption);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1511)
inline TGDraft::DrawingViewPtr TGDraft::_IDetailEnvelopeAuto::GetSourceDrawingView ( ) {
    struct DrawingView * _result = 0;
    HRESULT _hr = get_SourceDrawingView(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(1512)
inline _bstr_t TGDraft::_IDetailEnvelopeAuto::GetCaption ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Caption(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1513)
inline void TGDraft::_IDetailEnvelopeAuto::PutCaption ( _bstr_t Caption ) {
    HRESULT _hr = put_Caption(Caption);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1514)
inline double TGDraft::_IDetailEnvelopeAuto::GetDiameter ( ) {
    double _result = 0;
    HRESULT _hr = get_Diameter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1515)
inline void TGDraft::_IDetailEnvelopeAuto::PutDiameter ( double Diameter ) {
    HRESULT _hr = put_Diameter(Diameter);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1516)
inline HRESULT TGDraft::_IDetailEnvelopeAuto::GetCenterPoint ( double * x, double * y ) {
    HRESULT _hr = raw_GetCenterPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1517)
inline HRESULT TGDraft::_IDetailEnvelopeAuto::SetCenterPoint ( double x, double y ) {
    HRESULT _hr = raw_SetCenterPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1518)
inline double TGDraft::_IDetailEnvelopeAuto::GetLineWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_LineWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1519)
inline void TGDraft::_IDetailEnvelopeAuto::PutLineWidth ( double LineWidth ) {
    HRESULT _hr = put_LineWidth(LineWidth);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1520)
inline _bstr_t TGDraft::_IDetailEnvelopeAuto::GetLineType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LineType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1521)
inline void TGDraft::_IDetailEnvelopeAuto::PutLineType ( _bstr_t LineType ) {
    HRESULT _hr = put_LineType(LineType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1522)
inline _bstr_t TGDraft::_IDetailEnvelopeAuto::GetTextFont ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextFont(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1523)
inline void TGDraft::_IDetailEnvelopeAuto::PutTextFont ( _bstr_t TextFont ) {
    HRESULT _hr = put_TextFont(TextFont);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1524)
inline enum TGFrameworkSupport::DimTextFontStyleConstants TGDraft::_IDetailEnvelopeAuto::GetTextFontStyle ( ) {
    enum TGFrameworkSupport::DimTextFontStyleConstants _result;
    HRESULT _hr = get_TextFontStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1525)
inline void TGDraft::_IDetailEnvelopeAuto::PutTextFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants TextFontStyle ) {
    HRESULT _hr = put_TextFontStyle(TextFontStyle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1526)
inline double TGDraft::_IDetailEnvelopeAuto::GetTextHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_TextHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1527)
inline void TGDraft::_IDetailEnvelopeAuto::PutTextHeight ( double TextHeight ) {
    HRESULT _hr = put_TextHeight(TextHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1528)
inline double TGDraft::_IDetailEnvelopeAuto::GetTextRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_TextRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1529)
inline void TGDraft::_IDetailEnvelopeAuto::PutTextRatio ( double TextRatio ) {
    HRESULT _hr = put_TextRatio(TextRatio);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1530)
inline long TGDraft::_IDetailEnvelopeAuto::GetTextColor ( ) {
    long _result = 0;
    HRESULT _hr = get_TextColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1531)
inline void TGDraft::_IDetailEnvelopeAuto::PutTextColor ( long TextColor ) {
    HRESULT _hr = put_TextColor(TextColor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1532)
inline _bstr_t TGDraft::_IDetailEnvelopeAuto::GetStyleName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StyleName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1533)
inline void TGDraft::_IDetailEnvelopeAuto::PutStyleName ( _bstr_t StyleName ) {
    HRESULT _hr = put_StyleName(StyleName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1534)
inline TGFramework::ApplicationPtr TGDraft::_IDetailEnvelopeAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(1535)
inline long TGDraft::_IDetailEnvelopeAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1536)
inline _bstr_t TGDraft::_IDetailEnvelopeAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1537)
inline IDispatchPtr TGDraft::_IDetailEnvelopeAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1538)
inline long TGDraft::_IDetailEnvelopeAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1539)
inline VARIANT_BOOL TGDraft::_IDetailEnvelopeAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1540)
inline void TGDraft::_IDetailEnvelopeAuto::PutVisible ( VARIANT_BOOL * Toggle ) {
    HRESULT _hr = put_Visible(Toggle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1541)
inline long TGDraft::_IDetailEnvelopeAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1542)
inline _bstr_t TGDraft::_IDetailEnvelopeAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1543)
inline IDispatchPtr TGDraft::_IDetailEnvelopeAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1544)
inline HRESULT TGDraft::_IDetailEnvelopeAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1545)
inline HRESULT TGDraft::_IDetailEnvelopeAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1546)
inline HRESULT TGDraft::_IDetailEnvelopeAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1547)
inline HRESULT TGDraft::_IDetailEnvelopeAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1548)
inline HRESULT TGDraft::_IDetailEnvelopeAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1549)
inline HRESULT TGDraft::_IDetailEnvelopeAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1550)
inline HRESULT TGDraft::_IDetailEnvelopeAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1551)
inline HRESULT TGDraft::_IDetailEnvelopeAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1552)
inline HRESULT TGDraft::_IDetailEnvelopeAuto::Range ( double * min_x, double * min_y, double * max_x, double * max_y ) {
    HRESULT _hr = raw_Range(min_x, min_y, max_x, max_y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1553)
inline enum TGDraft::DetailEnvelopeStandardConstants TGDraft::_IDetailEnvelopeAuto::GetDisplayStandard ( ) {
    enum DetailEnvelopeStandardConstants _result;
    HRESULT _hr = get_DisplayStandard(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1554)
inline void TGDraft::_IDetailEnvelopeAuto::PutDisplayStandard ( enum DetailEnvelopeStandardConstants value ) {
    HRESULT _hr = put_DisplayStandard(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1555)
inline VARIANT_BOOL TGDraft::_IDetailEnvelopeAuto::GetDisplayAsCircle ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayAsCircle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1556)
inline void TGDraft::_IDetailEnvelopeAuto::PutDisplayAsCircle ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DisplayAsCircle(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1557)
inline _bstr_t TGDraft::_IDetailEnvelopeAuto::GetCaptionDefinitionText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CaptionDefinitionText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1558)
inline void TGDraft::_IDetailEnvelopeAuto::PutCaptionDefinitionText ( _bstr_t CaptionDefinitionText ) {
    HRESULT _hr = put_CaptionDefinitionText(CaptionDefinitionText);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1559)
inline _bstr_t TGDraft::_IDetailEnvelopeAuto::GetCaptionDisplayedText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CaptionDisplayedText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1560)
inline _bstr_t TGDraft::_IDetailEnvelopeAuto::GetViewSheetNumberDefinitionText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ViewSheetNumberDefinitionText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1561)
inline void TGDraft::_IDetailEnvelopeAuto::PutViewSheetNumberDefinitionText ( _bstr_t ViewSheetNumberDefinitionText ) {
    HRESULT _hr = put_ViewSheetNumberDefinitionText(ViewSheetNumberDefinitionText);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1562)
inline VARIANT_BOOL TGDraft::_IDetailEnvelopeAuto::GetDisplayViewSheetNumber ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayViewSheetNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1563)
inline void TGDraft::_IDetailEnvelopeAuto::PutDisplayViewSheetNumber ( VARIANT_BOOL DisplayViewSheetNumber ) {
    HRESULT _hr = put_DisplayViewSheetNumber(DisplayViewSheetNumber);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1564)
inline HRESULT TGDraft::_IDetailEnvelopeAuto::GetCaptionPosition ( double * x, double * y ) {
    HRESULT _hr = raw_GetCaptionPosition(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1565)
inline HRESULT TGDraft::_IDetailEnvelopeAuto::SetCaptionPosition ( double x, double y ) {
    HRESULT _hr = raw_SetCaptionPosition(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1566)
inline void TGDraft::_IDetailEnvelopeAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1567)
inline _bstr_t TGDraft::_IDetailEnvelopeAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1568)
inline TGDraft::DrawingViewPtr TGDraft::_IDetailEnvelopeAuto::GetDetailView ( ) {
    struct DrawingView * _result = 0;
    HRESULT _hr = get_DetailView(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(1569)
inline TGDraft::DraftProfilePtr TGDraft::_IDetailEnvelopeAuto::GetProfile ( ) {
    struct DraftProfile * _result = 0;
    HRESULT _hr = get_Profile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DraftProfilePtr(_result, false);
}

#pragma implementation_key(1570)
inline void TGDraft::_IDetailEnvelopeAuto::PutAuto ( VARIANT_BOOL value ) {
    HRESULT _hr = put_Auto(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1571)
inline VARIANT_BOOL TGDraft::_IDetailEnvelopeAuto::GetAuto ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Auto(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1572)
inline IDispatchPtr TGDraft::_IDetailEnvelopeAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1573)
inline VARIANT_BOOL TGDraft::_IDetailEnvelopeAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface HighlightDrawingViewMembers wrapper method implementations
//

#pragma implementation_key(1574)
inline HRESULT TGDraft::HighlightDrawingViewMembers::AddModelMember ( struct ModelMember * ModelMember ) {
    return _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", ModelMember);
}

#pragma implementation_key(1575)
inline HRESULT TGDraft::HighlightDrawingViewMembers::RemoveModelMember ( struct ModelMember * ModelMember ) {
    return _com_dispatch_method(this, 0x66, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", ModelMember);
}

//
// interface _IHighlightDrawingViewMembersAuto wrapper method implementations
//

#pragma implementation_key(1576)
inline HRESULT TGDraft::_IHighlightDrawingViewMembersAuto::AddModelMember ( struct ModelMember * ModelMember ) {
    HRESULT _hr = raw_AddModelMember(ModelMember);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1577)
inline HRESULT TGDraft::_IHighlightDrawingViewMembersAuto::RemoveModelMember ( struct ModelMember * ModelMember ) {
    HRESULT _hr = raw_RemoveModelMember(ModelMember);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface BreakLinePairs wrapper method implementations
//

#pragma implementation_key(1578)
inline TGDraft::BreakLinePairPtr TGDraft::BreakLinePairs::Item ( const _variant_t & Index ) {
    struct BreakLinePair * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return BreakLinePairPtr(_result, false);
}

#pragma implementation_key(1579)
inline IDispatchPtr TGDraft::BreakLinePairs::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1580)
inline long TGDraft::BreakLinePairs::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1581)
inline IDispatchPtr TGDraft::BreakLinePairs::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1582)
inline TGDraft::BreakLinePairPtr TGDraft::BreakLinePairs::Add ( enum BreakLinePairDirConstants BreakLinePairDir, double xy1, double xy2, VARIANT_BOOL AddRecursivelyToInheritedViews ) {
    struct BreakLinePair * _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005\x0005\x000b", BreakLinePairDir, xy1, xy2, AddRecursivelyToInheritedViews);
    return BreakLinePairPtr(_result, false);
}

#pragma implementation_key(1583)
inline TGDraft::BreakLinePairPtr TGDraft::BreakLinePairs::AddWithBreakAxis ( enum BreakLinePairDirConstants BreakLinePairDir, enum BreakLinePairOrientConstants BreakLinePairOrient, double xy1, double xy2 ) {
    struct BreakLinePair * _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0003\x0005\x0005", BreakLinePairDir, BreakLinePairOrient, xy1, xy2);
    return BreakLinePairPtr(_result, false);
}

//
// dispinterface BreakLinePair wrapper method implementations
//

#pragma implementation_key(1584)
inline TGFramework::ApplicationPtr TGDraft::BreakLinePair::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(1585)
inline enum TGDraft::BreakLinePairDirConstants TGDraft::BreakLinePair::GetDirection ( ) {
    enum BreakLinePairDirConstants _result;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1586)
inline double TGDraft::BreakLinePair::Getxy1 ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1587)
inline double TGDraft::BreakLinePair::Getxy2 ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1588)
inline double TGDraft::BreakLinePair::GetGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1589)
inline void TGDraft::BreakLinePair::PutGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1590)
inline enum TGDraft::BreakLinePairTypeConstants TGDraft::BreakLinePair::GetType ( ) {
    enum BreakLinePairTypeConstants _result;
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1591)
inline void TGDraft::BreakLinePair::PutType ( enum BreakLinePairTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1592)
inline double TGDraft::BreakLinePair::GetHeightRatio ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1593)
inline void TGDraft::BreakLinePair::PutHeightRatio ( double _arg1 ) {
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1594)
inline double TGDraft::BreakLinePair::GetPitch ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1595)
inline void TGDraft::BreakLinePair::PutPitch ( double _arg1 ) {
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1596)
inline int TGDraft::BreakLinePair::GetSymbols ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1597)
inline void TGDraft::BreakLinePair::PutSymbols ( int _arg1 ) {
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1598)
inline _bstr_t TGDraft::BreakLinePair::Getstyle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1599)
inline void TGDraft::BreakLinePair::Putstyle ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x6e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1600)
inline HRESULT TGDraft::BreakLinePair::Delete ( ) {
    return _com_dispatch_method(this, 0x6f, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1601)
inline HRESULT TGDraft::BreakLinePair::GetBreakLines ( struct TGFrameworkSupport::Line2d * * Line1, struct TGFrameworkSupport::Line2d * * Line2 ) {
    return _com_dispatch_method(this, 0x70, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4009", Line1, Line2);
}

#pragma implementation_key(1602)
inline enum TGDraft::BreakLinePairOrientConstants TGDraft::BreakLinePair::GetOrientation ( ) {
    enum BreakLinePairOrientConstants _result;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

//
// interface _IBreakLinePairsAuto wrapper method implementations
//

#pragma implementation_key(1603)
inline TGDraft::BreakLinePairPtr TGDraft::_IBreakLinePairsAuto::Item ( const _variant_t & Index ) {
    struct BreakLinePair * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BreakLinePairPtr(_result, false);
}

#pragma implementation_key(1604)
inline IUnknownPtr TGDraft::_IBreakLinePairsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1605)
inline IDispatchPtr TGDraft::_IBreakLinePairsAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1606)
inline long TGDraft::_IBreakLinePairsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1607)
inline IDispatchPtr TGDraft::_IBreakLinePairsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1608)
inline TGDraft::BreakLinePairPtr TGDraft::_IBreakLinePairsAuto::Add ( enum BreakLinePairDirConstants BreakLinePairDir, double xy1, double xy2, VARIANT_BOOL AddRecursivelyToInheritedViews ) {
    struct BreakLinePair * _result = 0;
    HRESULT _hr = raw_Add(BreakLinePairDir, xy1, xy2, AddRecursivelyToInheritedViews, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BreakLinePairPtr(_result, false);
}

#pragma implementation_key(1609)
inline TGDraft::BreakLinePairPtr TGDraft::_IBreakLinePairsAuto::AddWithBreakAxis ( enum BreakLinePairDirConstants BreakLinePairDir, enum BreakLinePairOrientConstants BreakLinePairOrient, double xy1, double xy2 ) {
    struct BreakLinePair * _result = 0;
    HRESULT _hr = raw_AddWithBreakAxis(BreakLinePairDir, BreakLinePairOrient, xy1, xy2, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BreakLinePairPtr(_result, false);
}

//
// interface _IBreakLinePairAuto wrapper method implementations
//

#pragma implementation_key(1610)
inline TGFramework::ApplicationPtr TGDraft::_IBreakLinePairAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(1611)
inline enum TGDraft::BreakLinePairDirConstants TGDraft::_IBreakLinePairAuto::GetDirection ( ) {
    enum BreakLinePairDirConstants _result;
    HRESULT _hr = get_Direction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1612)
inline double TGDraft::_IBreakLinePairAuto::Getxy1 ( ) {
    double _result = 0;
    HRESULT _hr = get_xy1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1613)
inline double TGDraft::_IBreakLinePairAuto::Getxy2 ( ) {
    double _result = 0;
    HRESULT _hr = get_xy2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1614)
inline double TGDraft::_IBreakLinePairAuto::GetGap ( ) {
    double _result = 0;
    HRESULT _hr = get_Gap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1615)
inline void TGDraft::_IBreakLinePairAuto::PutGap ( double Gap ) {
    HRESULT _hr = put_Gap(Gap);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1616)
inline enum TGDraft::BreakLinePairTypeConstants TGDraft::_IBreakLinePairAuto::GetType ( ) {
    enum BreakLinePairTypeConstants _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1617)
inline void TGDraft::_IBreakLinePairAuto::PutType ( enum BreakLinePairTypeConstants Type ) {
    HRESULT _hr = put_Type(Type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1618)
inline double TGDraft::_IBreakLinePairAuto::GetHeightRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_HeightRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1619)
inline void TGDraft::_IBreakLinePairAuto::PutHeightRatio ( double HeightRatio ) {
    HRESULT _hr = put_HeightRatio(HeightRatio);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1620)
inline double TGDraft::_IBreakLinePairAuto::GetPitch ( ) {
    double _result = 0;
    HRESULT _hr = get_Pitch(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1621)
inline void TGDraft::_IBreakLinePairAuto::PutPitch ( double Pitch ) {
    HRESULT _hr = put_Pitch(Pitch);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1622)
inline int TGDraft::_IBreakLinePairAuto::GetSymbols ( ) {
    int _result = 0;
    HRESULT _hr = get_Symbols(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1623)
inline void TGDraft::_IBreakLinePairAuto::PutSymbols ( int Symbols ) {
    HRESULT _hr = put_Symbols(Symbols);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1624)
inline _bstr_t TGDraft::_IBreakLinePairAuto::Getstyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1625)
inline void TGDraft::_IBreakLinePairAuto::Putstyle ( _bstr_t style ) {
    HRESULT _hr = put_style(style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1626)
inline HRESULT TGDraft::_IBreakLinePairAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1627)
inline HRESULT TGDraft::_IBreakLinePairAuto::GetBreakLines ( struct TGFrameworkSupport::Line2d * * Line1, struct TGFrameworkSupport::Line2d * * Line2 ) {
    HRESULT _hr = raw_GetBreakLines(Line1, Line2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1628)
inline enum TGDraft::BreakLinePairOrientConstants TGDraft::_IBreakLinePairAuto::GetOrientation ( ) {
    enum BreakLinePairOrientConstants _result;
    HRESULT _hr = get_Orientation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface _IDrawingViewAuto wrapper method implementations
//

#pragma implementation_key(1629)
inline double TGDraft::_IDrawingViewAuto::GetScaleFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_ScaleFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1630)
inline void TGDraft::_IDrawingViewAuto::PutScaleFactor ( double Scale ) {
    HRESULT _hr = put_ScaleFactor(Scale);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1631)
inline HRESULT TGDraft::_IDrawingViewAuto::GetOrigin ( double * x, double * y ) {
    HRESULT _hr = raw_GetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1632)
inline HRESULT TGDraft::_IDrawingViewAuto::SetOrigin ( double x, double y ) {
    HRESULT _hr = raw_SetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1633)
inline enum TGDraft::DrawingViewTypeConstants TGDraft::_IDrawingViewAuto::GetDrawingViewType ( ) {
    enum DrawingViewTypeConstants _result;
    HRESULT _hr = get_DrawingViewType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1634)
inline double TGDraft::_IDrawingViewAuto::GetCropLeft ( ) {
    double _result = 0;
    HRESULT _hr = get_CropLeft(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1635)
inline void TGDraft::_IDrawingViewAuto::PutCropLeft ( double offset ) {
    HRESULT _hr = put_CropLeft(offset);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1636)
inline double TGDraft::_IDrawingViewAuto::GetCropRight ( ) {
    double _result = 0;
    HRESULT _hr = get_CropRight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1637)
inline void TGDraft::_IDrawingViewAuto::PutCropRight ( double offset ) {
    HRESULT _hr = put_CropRight(offset);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1638)
inline double TGDraft::_IDrawingViewAuto::GetCropTop ( ) {
    double _result = 0;
    HRESULT _hr = get_CropTop(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1639)
inline void TGDraft::_IDrawingViewAuto::PutCropTop ( double offset ) {
    HRESULT _hr = put_CropTop(offset);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1640)
inline double TGDraft::_IDrawingViewAuto::GetCropBottom ( ) {
    double _result = 0;
    HRESULT _hr = get_CropBottom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1641)
inline void TGDraft::_IDrawingViewAuto::PutCropBottom ( double offset ) {
    HRESULT _hr = put_CropBottom(offset);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1642)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetCrop ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Crop(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1643)
inline void TGDraft::_IDrawingViewAuto::PutCrop ( VARIANT_BOOL value ) {
    HRESULT _hr = put_Crop(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1644)
inline _bstr_t TGDraft::_IDrawingViewAuto::GetCaption ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Caption(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1645)
inline void TGDraft::_IDrawingViewAuto::PutCaption ( _bstr_t Caption ) {
    HRESULT _hr = put_Caption(Caption);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1646)
inline _bstr_t TGDraft::_IDrawingViewAuto::GetSuffix ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Suffix(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1647)
inline _bstr_t TGDraft::_IDrawingViewAuto::GetDescription ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Description(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1648)
inline void TGDraft::_IDrawingViewAuto::PutDescription ( _bstr_t Description ) {
    HRESULT _hr = put_Description(Description);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1649)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetDisplayCaption ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayCaption(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1650)
inline void TGDraft::_IDrawingViewAuto::PutDisplayCaption ( VARIANT_BOOL DisplayCaption ) {
    HRESULT _hr = put_DisplayCaption(DisplayCaption);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1651)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetDisplaySuffix ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplaySuffix(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1652)
inline void TGDraft::_IDrawingViewAuto::PutDisplaySuffix ( VARIANT_BOOL DisplaySuffix ) {
    HRESULT _hr = put_DisplaySuffix(DisplaySuffix);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1653)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetDisplayScale ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1654)
inline void TGDraft::_IDrawingViewAuto::PutDisplayScale ( VARIANT_BOOL DisplayScale ) {
    HRESULT _hr = put_DisplayScale(DisplayScale);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1655)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetDisplayAnnotation ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayAnnotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1656)
inline void TGDraft::_IDrawingViewAuto::PutDisplayAnnotation ( VARIANT_BOOL DisplayAnnotation ) {
    HRESULT _hr = put_DisplayAnnotation(DisplayAnnotation);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1657)
inline IDispatchPtr TGDraft::_IDrawingViewAuto::GetAnnotation ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Annotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1658)
inline IDispatchPtr TGDraft::_IDrawingViewAuto::GetSheet ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Sheet(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1659)
inline void TGDraft::_IDrawingViewAuto::PutSheet ( IDispatch * Sheet ) {
    HRESULT _hr = put_Sheet(Sheet);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1660)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetDisplayWindow ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayWindow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1661)
inline void TGDraft::_IDrawingViewAuto::PutDisplayWindow ( VARIANT_BOOL DisplayWindow ) {
    HRESULT _hr = put_DisplayWindow(DisplayWindow);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1662)
inline IDispatchPtr TGDraft::_IDrawingViewAuto::GetModelLink ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_ModelLink(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1663)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetIsUpToDate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsUpToDate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1664)
inline HRESULT TGDraft::_IDrawingViewAuto::SheetToView ( double xSheet, double ySheet, double * xView, double * yView ) {
    HRESULT _hr = raw_SheetToView(xSheet, ySheet, xView, yView);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1665)
inline HRESULT TGDraft::_IDrawingViewAuto::ViewToSheet ( double xView, double yView, double * xSheet, double * ySheet ) {
    HRESULT _hr = raw_ViewToSheet(xView, yView, xSheet, ySheet);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1666)
inline IDispatchPtr TGDraft::_IDrawingViewAuto::Drop ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Drop(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1667)
inline HRESULT TGDraft::_IDrawingViewAuto::Update ( ) {
    HRESULT _hr = raw_Update();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1668)
inline _bstr_t TGDraft::_IDrawingViewAuto::GetTextFont ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextFont(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1669)
inline void TGDraft::_IDrawingViewAuto::PutTextFont ( _bstr_t TextFont ) {
    HRESULT _hr = put_TextFont(TextFont);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1670)
inline enum TGFrameworkSupport::DimTextFontStyleConstants TGDraft::_IDrawingViewAuto::GetTextFontStyle ( ) {
    enum TGFrameworkSupport::DimTextFontStyleConstants _result;
    HRESULT _hr = get_TextFontStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1671)
inline void TGDraft::_IDrawingViewAuto::PutTextFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants TextFontStyle ) {
    HRESULT _hr = put_TextFontStyle(TextFontStyle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1672)
inline double TGDraft::_IDrawingViewAuto::GetTextHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_TextHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1673)
inline void TGDraft::_IDrawingViewAuto::PutTextHeight ( double TextHeight ) {
    HRESULT _hr = put_TextHeight(TextHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1674)
inline double TGDraft::_IDrawingViewAuto::GetTextRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_TextRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1675)
inline void TGDraft::_IDrawingViewAuto::PutTextRatio ( double TextRatio ) {
    HRESULT _hr = put_TextRatio(TextRatio);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1676)
inline long TGDraft::_IDrawingViewAuto::GetTextColor ( ) {
    long _result = 0;
    HRESULT _hr = get_TextColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1677)
inline void TGDraft::_IDrawingViewAuto::PutTextColor ( long TextColor ) {
    HRESULT _hr = put_TextColor(TextColor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1678)
inline _bstr_t TGDraft::_IDrawingViewAuto::GetStyleName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StyleName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1679)
inline void TGDraft::_IDrawingViewAuto::PutStyleName ( _bstr_t StyleName ) {
    HRESULT _hr = put_StyleName(StyleName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1680)
inline TGFramework::ApplicationPtr TGDraft::_IDrawingViewAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(1681)
inline long TGDraft::_IDrawingViewAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1682)
inline _bstr_t TGDraft::_IDrawingViewAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1683)
inline IDispatchPtr TGDraft::_IDrawingViewAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1684)
inline long TGDraft::_IDrawingViewAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1685)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1686)
inline void TGDraft::_IDrawingViewAuto::PutVisible ( VARIANT_BOOL * Toggle ) {
    HRESULT _hr = put_Visible(Toggle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1687)
inline long TGDraft::_IDrawingViewAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1688)
inline _bstr_t TGDraft::_IDrawingViewAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1689)
inline IDispatchPtr TGDraft::_IDrawingViewAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1690)
inline HRESULT TGDraft::_IDrawingViewAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1691)
inline HRESULT TGDraft::_IDrawingViewAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1692)
inline HRESULT TGDraft::_IDrawingViewAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1693)
inline HRESULT TGDraft::_IDrawingViewAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1694)
inline HRESULT TGDraft::_IDrawingViewAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1695)
inline HRESULT TGDraft::_IDrawingViewAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1696)
inline HRESULT TGDraft::_IDrawingViewAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1697)
inline HRESULT TGDraft::_IDrawingViewAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1698)
inline HRESULT TGDraft::_IDrawingViewAuto::Range ( double * min_x, double * min_y, double * max_x, double * max_y ) {
    HRESULT _hr = raw_Range(min_x, min_y, max_x, max_y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1699)
inline TGDraft::CoordinateSystems2dPtr TGDraft::_IDrawingViewAuto::GetCoordinateSystems2d ( ) {
    struct CoordinateSystems2d * _result = 0;
    HRESULT _hr = get_CoordinateSystems2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CoordinateSystems2dPtr(_result, false);
}

#pragma implementation_key(1700)
inline HRESULT TGDraft::_IDrawingViewAuto::GetActiveCoordinateSystem ( VARIANT * CoordinateSystem2d, VARIANT * AlignmentAxis ) {
    HRESULT _hr = raw_GetActiveCoordinateSystem(CoordinateSystem2d, AlignmentAxis);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1701)
inline HRESULT TGDraft::_IDrawingViewAuto::SetActiveCoordinateSystem ( const _variant_t & CoordinateSystem2d, const _variant_t & AlignmentAxis ) {
    HRESULT _hr = raw_SetActiveCoordinateSystem(CoordinateSystem2d, AlignmentAxis);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1702)
inline TGDraft::ModelMembersPtr TGDraft::_IDrawingViewAuto::GetModelMembers ( ) {
    struct ModelMembers * _result = 0;
    HRESULT _hr = get_ModelMembers(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ModelMembersPtr(_result, false);
}

#pragma implementation_key(1703)
inline TGDraft::GraphicMembersPtr TGDraft::_IDrawingViewAuto::GetGraphicMembers ( ) {
    struct GraphicMembers * _result = 0;
    HRESULT _hr = get_GraphicMembers(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return GraphicMembersPtr(_result, false);
}

#pragma implementation_key(1704)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetShowEdgesHiddenByOtherParts ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowEdgesHiddenByOtherParts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1705)
inline void TGDraft::_IDrawingViewAuto::PutShowEdgesHiddenByOtherParts ( VARIANT_BOOL value ) {
    HRESULT _hr = put_ShowEdgesHiddenByOtherParts(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1706)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetProcessPartIntersections ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ProcessPartIntersections(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1707)
inline void TGDraft::_IDrawingViewAuto::PutProcessPartIntersections ( VARIANT_BOOL value ) {
    HRESULT _hr = put_ProcessPartIntersections(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1708)
inline TGDraft::DVLines2dPtr TGDraft::_IDrawingViewAuto::GetDVLines2d ( ) {
    struct DVLines2d * _result = 0;
    HRESULT _hr = get_DVLines2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DVLines2dPtr(_result, false);
}

#pragma implementation_key(1709)
inline TGDraft::DVArcs2dPtr TGDraft::_IDrawingViewAuto::GetDVArcs2d ( ) {
    struct DVArcs2d * _result = 0;
    HRESULT _hr = get_DVArcs2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DVArcs2dPtr(_result, false);
}

#pragma implementation_key(1710)
inline TGDraft::DVBSplineCurves2dPtr TGDraft::_IDrawingViewAuto::GetDVBSplineCurves2d ( ) {
    struct DVBSplineCurves2d * _result = 0;
    HRESULT _hr = get_DVBSplineCurves2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DVBSplineCurves2dPtr(_result, false);
}

#pragma implementation_key(1711)
inline TGDraft::DVCircles2dPtr TGDraft::_IDrawingViewAuto::GetDVCircles2d ( ) {
    struct DVCircles2d * _result = 0;
    HRESULT _hr = get_DVCircles2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DVCircles2dPtr(_result, false);
}

#pragma implementation_key(1712)
inline TGDraft::DVEllipses2dPtr TGDraft::_IDrawingViewAuto::GetDVEllipses2d ( ) {
    struct DVEllipses2d * _result = 0;
    HRESULT _hr = get_DVEllipses2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DVEllipses2dPtr(_result, false);
}

#pragma implementation_key(1713)
inline TGDraft::DVLineStrings2dPtr TGDraft::_IDrawingViewAuto::GetDVLineStrings2d ( ) {
    struct DVLineStrings2d * _result = 0;
    HRESULT _hr = get_DVLineStrings2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DVLineStrings2dPtr(_result, false);
}

#pragma implementation_key(1714)
inline TGDraft::DVEllipticalArcs2dPtr TGDraft::_IDrawingViewAuto::GetDVEllipticalArcs2d ( ) {
    struct DVEllipticalArcs2d * _result = 0;
    HRESULT _hr = get_DVEllipticalArcs2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DVEllipticalArcs2dPtr(_result, false);
}

#pragma implementation_key(1715)
inline TGDraft::DVPoints2dPtr TGDraft::_IDrawingViewAuto::GetDVPoints2d ( ) {
    struct DVPoints2d * _result = 0;
    HRESULT _hr = get_DVPoints2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DVPoints2dPtr(_result, false);
}

#pragma implementation_key(1716)
inline _bstr_t TGDraft::_IDrawingViewAuto::GetConfiguration ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Configuration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1717)
inline void TGDraft::_IDrawingViewAuto::PutConfiguration ( _bstr_t Configuration ) {
    HRESULT _hr = put_Configuration(Configuration);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1718)
inline HRESULT TGDraft::_IDrawingViewAuto::CheckConfiguration ( VARIANT_BOOL * UpToDate ) {
    HRESULT _hr = raw_CheckConfiguration(UpToDate);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1719)
inline long TGDraft::_IDrawingViewAuto::GetViewType ( ) {
    long _result = 0;
    HRESULT _hr = get_ViewType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1720)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetMatchConfiguration ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MatchConfiguration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1721)
inline void TGDraft::_IDrawingViewAuto::PutMatchConfiguration ( VARIANT_BOOL value ) {
    HRESULT _hr = put_MatchConfiguration(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1722)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetScaleDimensionsAndAnnotations ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ScaleDimensionsAndAnnotations(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1723)
inline void TGDraft::_IDrawingViewAuto::PutScaleDimensionsAndAnnotations ( VARIANT_BOOL value ) {
    HRESULT _hr = put_ScaleDimensionsAndAnnotations(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1724)
inline HRESULT TGDraft::_IDrawingViewAuto::GetReferenceToGraphicMember ( IDispatch * GraphicMember, struct TGFramework::Reference * * Reference ) {
    HRESULT _hr = raw_GetReferenceToGraphicMember(GraphicMember, Reference);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1725)
inline TGFramework::ReferencePtr TGDraft::_IDrawingViewAuto::GetGetReferenceToGraphicMember2 ( IDispatch * GraphicMember ) {
    struct TGFramework::Reference * _result = 0;
    HRESULT _hr = get_GetReferenceToGraphicMember2(GraphicMember, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ReferencePtr(_result, false);
}

#pragma implementation_key(1726)
inline HRESULT TGDraft::_IDrawingViewAuto::GetRotationAngle ( double * dRotAngle ) {
    HRESULT _hr = raw_GetRotationAngle(dRotAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1727)
inline HRESULT TGDraft::_IDrawingViewAuto::SetRotationAngle ( double dRotAngle ) {
    HRESULT _hr = raw_SetRotationAngle(dRotAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1728)
inline HRESULT TGDraft::_IDrawingViewAuto::GetListOfHiddenLayers ( long * NumLayers, SAFEARRAY * * HiddenLayers ) {
    HRESULT _hr = raw_GetListOfHiddenLayers(NumLayers, HiddenLayers);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1729)
inline HRESULT TGDraft::_IDrawingViewAuto::HideLayer ( _bstr_t LayerName ) {
    HRESULT _hr = raw_HideLayer(LayerName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1730)
inline HRESULT TGDraft::_IDrawingViewAuto::ShowLayer ( _bstr_t LayerName ) {
    HRESULT _hr = raw_ShowLayer(LayerName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1731)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::IsLayerHidden ( _bstr_t LayerName ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsLayerHidden(LayerName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1732)
inline HRESULT TGDraft::_IDrawingViewAuto::RetrieveDimensions ( VARIANT_BOOL IsRetrieve, _bstr_t DimensionStyleName, VARIANT_BOOL TypeLinear, VARIANT_BOOL TypeRadial, VARIANT_BOOL TypeAngular, VARIANT_BOOL TypeAnnotation, VARIANT_BOOL TypeCenterMark, VARIANT_BOOL GetDuplicatedRadial, VARIANT_BOOL GetDimensionToHiddenLines, VARIANT_BOOL ProjectCenterMark, VARIANT_BOOL ConnectCenters, VARIANT_BOOL GetCenterMarkToCircle, VARIANT_BOOL GetCenterMarkToArc ) {
    HRESULT _hr = raw_RetrieveDimensions(IsRetrieve, DimensionStyleName, TypeLinear, TypeRadial, TypeAngular, TypeAnnotation, TypeCenterMark, GetDuplicatedRadial, GetDimensionToHiddenLines, ProjectCenterMark, ConnectCenters, GetCenterMarkToCircle, GetCenterMarkToArc);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1733)
inline HRESULT TGDraft::_IDrawingViewAuto::RetrieveCenterLinesCenterMarks ( VARIANT_BOOL IsRetrieve, _bstr_t DimensionStyleName, VARIANT_BOOL TypeCenterLine, VARIANT_BOOL TypeCenterMark, VARIANT_BOOL ProjectCenterMark, VARIANT_BOOL ConnectCenters, VARIANT_BOOL GetCenterLineToFullCylinder, VARIANT_BOOL GetCenterLineToPartialCylinder, VARIANT_BOOL GetCenterMarkToCircle, VARIANT_BOOL GetCenterMarkToArc, VARIANT_BOOL GetCenterMarkToEllipse, VARIANT_BOOL GetCenterMarkToPartialEllipse, VARIANT_BOOL EnableCenterMarkRangeCheck, VARIANT_BOOL EnableCenterLineRangeCheck, double dCenterLineMinRadius, double dCenterLineMaxRadius, double dCenterMarkMinRadius, double dCenterMarkMaxRadius ) {
    HRESULT _hr = raw_RetrieveCenterLinesCenterMarks(IsRetrieve, DimensionStyleName, TypeCenterLine, TypeCenterMark, ProjectCenterMark, ConnectCenters, GetCenterLineToFullCylinder, GetCenterLineToPartialCylinder, GetCenterMarkToCircle, GetCenterMarkToArc, GetCenterMarkToEllipse, GetCenterMarkToPartialEllipse, EnableCenterMarkRangeCheck, EnableCenterLineRangeCheck, dCenterLineMinRadius, dCenterLineMaxRadius, dCenterMarkMinRadius, dCenterMarkMaxRadius);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1734)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetShading ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Shading(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1735)
inline void TGDraft::_IDrawingViewAuto::PutShading ( VARIANT_BOOL Shading ) {
    HRESULT _hr = put_Shading(Shading);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1736)
inline enum TGDraft::DrawingViewShadingQualityConstants TGDraft::_IDrawingViewAuto::GetShadingQuality ( ) {
    enum DrawingViewShadingQualityConstants _result;
    HRESULT _hr = get_ShadingQuality(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1737)
inline void TGDraft::_IDrawingViewAuto::PutShadingQuality ( enum DrawingViewShadingQualityConstants ShadingQuality ) {
    HRESULT _hr = put_ShadingQuality(ShadingQuality);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1738)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetShadingAllowAssemblyOverrides ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShadingAllowAssemblyOverrides(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1739)
inline void TGDraft::_IDrawingViewAuto::PutShadingAllowAssemblyOverrides ( VARIANT_BOOL ShadingAllowAssemblyOverrides ) {
    HRESULT _hr = put_ShadingAllowAssemblyOverrides(ShadingAllowAssemblyOverrides);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1740)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetShadingAllowPartFaceColors ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShadingAllowPartFaceColors(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1741)
inline void TGDraft::_IDrawingViewAuto::PutShadingAllowPartFaceColors ( VARIANT_BOOL ShadingAllowPartFaceColors ) {
    HRESULT _hr = put_ShadingAllowPartFaceColors(ShadingAllowPartFaceColors);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1742)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetShadingShowVisibleEdges ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShadingShowVisibleEdges(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1743)
inline void TGDraft::_IDrawingViewAuto::PutShadingShowVisibleEdges ( VARIANT_BOOL ShadingShowVisibleEdges ) {
    HRESULT _hr = put_ShadingShowVisibleEdges(ShadingShowVisibleEdges);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1744)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetShadingGrayscale ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShadingGrayscale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1745)
inline void TGDraft::_IDrawingViewAuto::PutShadingGrayscale ( VARIANT_BOOL ShadingGrayscale ) {
    HRESULT _hr = put_ShadingGrayscale(ShadingGrayscale);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1746)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetShadingFlat ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShadingFlat(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1747)
inline void TGDraft::_IDrawingViewAuto::PutShadingFlat ( VARIANT_BOOL ShadingFlat ) {
    HRESULT _hr = put_ShadingFlat(ShadingFlat);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1748)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetShadingTextures ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShadingTextures(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1749)
inline void TGDraft::_IDrawingViewAuto::PutShadingTextures ( VARIANT_BOOL ShadingTextures ) {
    HRESULT _hr = put_ShadingTextures(ShadingTextures);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1750)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetShadingReflections ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShadingReflections(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1751)
inline void TGDraft::_IDrawingViewAuto::PutShadingReflections ( VARIANT_BOOL ShadingReflections ) {
    HRESULT _hr = put_ShadingReflections(ShadingReflections);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1752)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetIsSnapShot ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSnapShot(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1753)
inline enum TGDraft::DrawingViewSnapShotQualityConstants TGDraft::_IDrawingViewAuto::GetSnapShotQuality ( ) {
    enum DrawingViewSnapShotQualityConstants _result;
    HRESULT _hr = get_SnapShotQuality(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1754)
inline void TGDraft::_IDrawingViewAuto::PutSnapShotQuality ( enum DrawingViewSnapShotQualityConstants SnapShotQuality ) {
    HRESULT _hr = put_SnapShotQuality(SnapShotQuality);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1755)
inline enum TGDraft::DrawingViewVHL_ToleranceOverrideQualityConstants TGDraft::_IDrawingViewAuto::GetVHL_ToleranceOverrideQuality ( ) {
    enum DrawingViewVHL_ToleranceOverrideQualityConstants _result;
    HRESULT _hr = get_VHL_ToleranceOverrideQuality(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1756)
inline void TGDraft::_IDrawingViewAuto::PutVHL_ToleranceOverrideQuality ( enum DrawingViewVHL_ToleranceOverrideQualityConstants VHL_ToleranceOverrideQuality ) {
    HRESULT _hr = put_VHL_ToleranceOverrideQuality(VHL_ToleranceOverrideQuality);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1757)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetIsBroken ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsBroken(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1758)
inline HRESULT TGDraft::_IDrawingViewAuto::ModelToView ( double xModel, double yModel, double zModel, double * xView, double * yView ) {
    HRESULT _hr = raw_ModelToView(xModel, yModel, zModel, xView, yView);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1759)
inline HRESULT TGDraft::_IDrawingViewAuto::ViewOrientation ( double * ViewVector_X, double * ViewVector_Y, double * ViewVector_Z, double * LocalXVector_X, double * LocalXVector_Y, double * LocalXVector_Z, enum ViewOrientationConstants * Orientation ) {
    HRESULT _hr = raw_ViewOrientation(ViewVector_X, ViewVector_Y, ViewVector_Z, LocalXVector_X, LocalXVector_Y, LocalXVector_Z, Orientation);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1760)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetSnapshot ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Snapshot(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1761)
inline void TGDraft::_IDrawingViewAuto::PutSnapshot ( VARIANT_BOOL Snapshot ) {
    HRESULT _hr = put_Snapshot(Snapshot);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1762)
inline double TGDraft::_IDrawingViewAuto::GetTangencyTolerance ( ) {
    double _result = 0;
    HRESULT _hr = get_TangencyTolerance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1763)
inline void TGDraft::_IDrawingViewAuto::PutTangencyTolerance ( double dTangencyTolInDegrees ) {
    HRESULT _hr = put_TangencyTolerance(dTangencyTolInDegrees);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1764)
inline double TGDraft::_IDrawingViewAuto::GetThreadAxisTolerance ( ) {
    double _result = 0;
    HRESULT _hr = get_ThreadAxisTolerance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1765)
inline void TGDraft::_IDrawingViewAuto::PutThreadAxisTolerance ( double dThreadAxisTolInDegrees ) {
    HRESULT _hr = put_ThreadAxisTolerance(dThreadAxisTolInDegrees);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1766)
inline enum TGDraft::DrawingViewBsplineSimplificationConstants TGDraft::_IDrawingViewAuto::GetBsplineSimplification ( ) {
    enum DrawingViewBsplineSimplificationConstants _result;
    HRESULT _hr = get_BsplineSimplification(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1767)
inline void TGDraft::_IDrawingViewAuto::PutBsplineSimplification ( enum DrawingViewBsplineSimplificationConstants BsplineSimplification ) {
    HRESULT _hr = put_BsplineSimplification(BsplineSimplification);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1768)
inline enum TGDraft::DrawingViewIntersectionProcessingConstants TGDraft::_IDrawingViewAuto::GetIntersectionProcessing ( ) {
    enum DrawingViewIntersectionProcessingConstants _result;
    HRESULT _hr = get_IntersectionProcessing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1769)
inline void TGDraft::_IDrawingViewAuto::PutIntersectionProcessing ( enum DrawingViewIntersectionProcessingConstants IntersectionProcessing ) {
    HRESULT _hr = put_IntersectionProcessing(IntersectionProcessing);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1770)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetDefaults_ShowSectionHatch ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Defaults_ShowSectionHatch(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1771)
inline void TGDraft::_IDrawingViewAuto::PutDefaults_ShowSectionHatch ( VARIANT_BOOL value ) {
    HRESULT _hr = put_Defaults_ShowSectionHatch(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1772)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetDefaults_DeriveSectionHatchStyleNameFromPart ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Defaults_DeriveSectionHatchStyleNameFromPart(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1773)
inline void TGDraft::_IDrawingViewAuto::PutDefaults_DeriveSectionHatchStyleNameFromPart ( VARIANT_BOOL value ) {
    HRESULT _hr = put_Defaults_DeriveSectionHatchStyleNameFromPart(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1774)
inline _bstr_t TGDraft::_IDrawingViewAuto::GetDefaults_SectionHatchStyleName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Defaults_SectionHatchStyleName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1775)
inline void TGDraft::_IDrawingViewAuto::PutDefaults_SectionHatchStyleName ( _bstr_t StyleName ) {
    HRESULT _hr = put_Defaults_SectionHatchStyleName(StyleName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1776)
inline _bstr_t TGDraft::_IDrawingViewAuto::GetDefaults_VisibleEdgeStyleName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Defaults_VisibleEdgeStyleName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1777)
inline void TGDraft::_IDrawingViewAuto::PutDefaults_VisibleEdgeStyleName ( _bstr_t StyleName ) {
    HRESULT _hr = put_Defaults_VisibleEdgeStyleName(StyleName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1778)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetDefaults_ShowHiddenEdges ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Defaults_ShowHiddenEdges(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1779)
inline void TGDraft::_IDrawingViewAuto::PutDefaults_ShowHiddenEdges ( VARIANT_BOOL value ) {
    HRESULT _hr = put_Defaults_ShowHiddenEdges(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1780)
inline _bstr_t TGDraft::_IDrawingViewAuto::GetDefaults_HiddenEdgeStyleName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Defaults_HiddenEdgeStyleName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1781)
inline void TGDraft::_IDrawingViewAuto::PutDefaults_HiddenEdgeStyleName ( _bstr_t StyleName ) {
    HRESULT _hr = put_Defaults_HiddenEdgeStyleName(StyleName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1782)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetDefaults_ShowEdgesHiddenByOtherParts ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Defaults_ShowEdgesHiddenByOtherParts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1783)
inline void TGDraft::_IDrawingViewAuto::PutDefaults_ShowEdgesHiddenByOtherParts ( VARIANT_BOOL value ) {
    HRESULT _hr = put_Defaults_ShowEdgesHiddenByOtherParts(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1784)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetDefaults_ShowTangentEdges ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Defaults_ShowTangentEdges(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1785)
inline void TGDraft::_IDrawingViewAuto::PutDefaults_ShowTangentEdges ( VARIANT_BOOL value ) {
    HRESULT _hr = put_Defaults_ShowTangentEdges(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1786)
inline _bstr_t TGDraft::_IDrawingViewAuto::GetDefaults_TangentEdgeStyleName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Defaults_TangentEdgeStyleName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1787)
inline void TGDraft::_IDrawingViewAuto::PutDefaults_TangentEdgeStyleName ( _bstr_t StyleName ) {
    HRESULT _hr = put_Defaults_TangentEdgeStyleName(StyleName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1788)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetDefaults_ShowTubeCenterlines ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Defaults_ShowTubeCenterlines(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1789)
inline void TGDraft::_IDrawingViewAuto::PutDefaults_ShowTubeCenterlines ( VARIANT_BOOL value ) {
    HRESULT _hr = put_Defaults_ShowTubeCenterlines(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1790)
inline _bstr_t TGDraft::_IDrawingViewAuto::GetDefaults_TubeCenterlineStyleName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Defaults_TubeCenterlineStyleName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1791)
inline void TGDraft::_IDrawingViewAuto::PutDefaults_TubeCenterlineStyleName ( _bstr_t StyleName ) {
    HRESULT _hr = put_Defaults_TubeCenterlineStyleName(StyleName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1792)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetDefaults_ShowEdgesHiddenTangentEdgesSelfHidden ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Defaults_ShowEdgesHiddenTangentEdgesSelfHidden(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1793)
inline void TGDraft::_IDrawingViewAuto::PutDefaults_ShowEdgesHiddenTangentEdgesSelfHidden ( VARIANT_BOOL value ) {
    HRESULT _hr = put_Defaults_ShowEdgesHiddenTangentEdgesSelfHidden(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1794)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetDefaults_ShowEdgesHiddenTangentEdgesHiddenByOtherParts ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Defaults_ShowEdgesHiddenTangentEdgesHiddenByOtherParts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1795)
inline void TGDraft::_IDrawingViewAuto::PutDefaults_ShowEdgesHiddenTangentEdgesHiddenByOtherParts ( VARIANT_BOOL value ) {
    HRESULT _hr = put_Defaults_ShowEdgesHiddenTangentEdgesHiddenByOtherParts(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1796)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetCroppedVHL ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CroppedVHL(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1797)
inline void TGDraft::_IDrawingViewAuto::PutCroppedVHL ( VARIANT_BOOL value ) {
    HRESULT _hr = put_CroppedVHL(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1798)
inline HRESULT TGDraft::_IDrawingViewAuto::ConvertToIndependentDetailView ( ) {
    HRESULT _hr = raw_ConvertToIndependentDetailView();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1799)
inline _bstr_t TGDraft::_IDrawingViewAuto::GetPMIModelView ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PMIModelView(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1800)
inline void TGDraft::_IDrawingViewAuto::PutPMIModelView ( _bstr_t PMIModelViewName ) {
    HRESULT _hr = put_PMIModelView(PMIModelViewName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1801)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetIncludePMIDimensions ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IncludePMIDimensions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1802)
inline void TGDraft::_IDrawingViewAuto::PutIncludePMIDimensions ( VARIANT_BOOL value ) {
    HRESULT _hr = put_IncludePMIDimensions(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1803)
inline void TGDraft::_IDrawingViewAuto::PutCroppedBoundaryStyle ( _bstr_t StyleName ) {
    HRESULT _hr = put_CroppedBoundaryStyle(StyleName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1804)
inline _bstr_t TGDraft::_IDrawingViewAuto::GetCroppedBoundaryStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CroppedBoundaryStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1805)
inline void TGDraft::_IDrawingViewAuto::PutDisplayCroppedBoundary ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DisplayCroppedBoundary(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1806)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetDisplayCroppedBoundary ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayCroppedBoundary(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1807)
inline void TGDraft::_IDrawingViewAuto::PutDisplayBorder ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DisplayBorder(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1808)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetDisplayBorder ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayBorder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1809)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetIncludePMIAnnotations ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IncludePMIAnnotations(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1810)
inline void TGDraft::_IDrawingViewAuto::PutIncludePMIAnnotations ( VARIANT_BOOL value ) {
    HRESULT _hr = put_IncludePMIAnnotations(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1811)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetEdgesUseModelColor ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_EdgesUseModelColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1812)
inline void TGDraft::_IDrawingViewAuto::PutEdgesUseModelColor ( VARIANT_BOOL useModelColor ) {
    HRESULT _hr = put_EdgesUseModelColor(useModelColor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1813)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetEdgesUsePartBaseColor ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_EdgesUsePartBaseColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1814)
inline void TGDraft::_IDrawingViewAuto::PutEdgesUsePartBaseColor ( VARIANT_BOOL useBaseColor ) {
    HRESULT _hr = put_EdgesUsePartBaseColor(useBaseColor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1815)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetEdgesUseAssemblyOverrideColor ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_EdgesUseAssemblyOverrideColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1816)
inline void TGDraft::_IDrawingViewAuto::PutEdgesUseAssemblyOverrideColor ( VARIANT_BOOL useAssemblyOverrideColor ) {
    HRESULT _hr = put_EdgesUseAssemblyOverrideColor(useAssemblyOverrideColor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1817)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetSectionHatchUseModelColor ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SectionHatchUseModelColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1818)
inline void TGDraft::_IDrawingViewAuto::PutSectionHatchUseModelColor ( VARIANT_BOOL useModelColor ) {
    HRESULT _hr = put_SectionHatchUseModelColor(useModelColor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1819)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetIsPerspective ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsPerspective(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1820)
inline HRESULT TGDraft::_IDrawingViewAuto::SetPerspectiveOn ( double FocalLength ) {
    HRESULT _hr = raw_SetPerspectiveOn(FocalLength);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1821)
inline HRESULT TGDraft::_IDrawingViewAuto::SetPerspectiveOff ( ) {
    HRESULT _hr = raw_SetPerspectiveOff();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1822)
inline HRESULT TGDraft::_IDrawingViewAuto::SetPerspectiveFromNamedView ( _bstr_t ViewName ) {
    HRESULT _hr = raw_SetPerspectiveFromNamedView(ViewName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1823)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetIsBrokenOutSectionTarget ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsBrokenOutSectionTarget(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1824)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetIsCut ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsCut(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1825)
inline IDispatchPtr TGDraft::_IDrawingViewAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1826)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1827)
inline void TGDraft::_IDrawingViewAuto::PutLockView ( VARIANT_BOOL value ) {
    HRESULT _hr = put_LockView(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1828)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetLockView ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_LockView(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1829)
inline void TGDraft::_IDrawingViewAuto::PutHatchRibsInSectionViews ( VARIANT_BOOL value ) {
    HRESULT _hr = put_HatchRibsInSectionViews(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1830)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetHatchRibsInSectionViews ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HatchRibsInSectionViews(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1831)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetDisplayBreakLinesInBrokenState ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayBreakLinesInBrokenState(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1832)
inline void TGDraft::_IDrawingViewAuto::PutDisplayBreakLinesInBrokenState ( VARIANT_BOOL DisplayBreakLinesInBrokenState ) {
    HRESULT _hr = put_DisplayBreakLinesInBrokenState(DisplayBreakLinesInBrokenState);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1833)
inline _bstr_t TGDraft::_IDrawingViewAuto::GetCaptionDefinitionTextPrimary ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CaptionDefinitionTextPrimary(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1834)
inline void TGDraft::_IDrawingViewAuto::PutCaptionDefinitionTextPrimary ( _bstr_t CaptionDefinitionTextPrimary ) {
    HRESULT _hr = put_CaptionDefinitionTextPrimary(CaptionDefinitionTextPrimary);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1835)
inline _bstr_t TGDraft::_IDrawingViewAuto::GetCaptionDisplayedTextPrimary ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CaptionDisplayedTextPrimary(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1836)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetDisplayCaptionPrimary ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayCaptionPrimary(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1837)
inline void TGDraft::_IDrawingViewAuto::PutDisplayCaptionPrimary ( VARIANT_BOOL DisplayCaptionPrimary ) {
    HRESULT _hr = put_DisplayCaptionPrimary(DisplayCaptionPrimary);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1838)
inline _bstr_t TGDraft::_IDrawingViewAuto::GetCaptionDefinitionTextSecondary ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CaptionDefinitionTextSecondary(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1839)
inline void TGDraft::_IDrawingViewAuto::PutCaptionDefinitionTextSecondary ( _bstr_t CaptionDefinitionTextSecondary ) {
    HRESULT _hr = put_CaptionDefinitionTextSecondary(CaptionDefinitionTextSecondary);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1840)
inline _bstr_t TGDraft::_IDrawingViewAuto::GetCaptionDisplayedTextSecondary ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CaptionDisplayedTextSecondary(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1841)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetDisplayCaptionSecondary ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayCaptionSecondary(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1842)
inline void TGDraft::_IDrawingViewAuto::PutDisplayCaptionSecondary ( VARIANT_BOOL DisplayCaptionSecondary ) {
    HRESULT _hr = put_DisplayCaptionSecondary(DisplayCaptionSecondary);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1843)
inline _bstr_t TGDraft::_IDrawingViewAuto::GetSuffixDefinitionText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SuffixDefinitionText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1844)
inline void TGDraft::_IDrawingViewAuto::PutSuffixDefinitionText ( _bstr_t SuffixDefinitionText ) {
    HRESULT _hr = put_SuffixDefinitionText(SuffixDefinitionText);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1845)
inline _bstr_t TGDraft::_IDrawingViewAuto::GetScaleDefinitionText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ScaleDefinitionText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1846)
inline void TGDraft::_IDrawingViewAuto::PutScaleDefinitionText ( _bstr_t ScaleDefinitionText ) {
    HRESULT _hr = put_ScaleDefinitionText(ScaleDefinitionText);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1847)
inline HRESULT TGDraft::_IDrawingViewAuto::SetViewOrientation ( double ViewVector_X, double ViewVector_Y, double ViewVector_Z, double LocalXVector_X, double LocalXVector_Y, double LocalXVector_Z ) {
    HRESULT _hr = raw_SetViewOrientation(ViewVector_X, ViewVector_Y, ViewVector_Z, LocalXVector_X, LocalXVector_Y, LocalXVector_Z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1848)
inline HRESULT TGDraft::_IDrawingViewAuto::SetViewOrientationStandard ( enum ViewOrientationConstants Orientation ) {
    HRESULT _hr = raw_SetViewOrientationStandard(Orientation);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1849)
inline HRESULT TGDraft::_IDrawingViewAuto::SetViewOrientationFromNamedView ( _bstr_t NamedView, VARIANT_BOOL UsePerspective ) {
    HRESULT _hr = raw_SetViewOrientationFromNamedView(NamedView, UsePerspective);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1850)
inline HRESULT TGDraft::_IDrawingViewAuto::ForceUpdate ( ) {
    HRESULT _hr = raw_ForceUpdate();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1851)
inline TGDraft::DrawingViewPtr TGDraft::_IDrawingViewAuto::GetSourceDrawingView ( ) {
    struct DrawingView * _result = 0;
    HRESULT _hr = get_SourceDrawingView(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(1852)
inline HRESULT TGDraft::_IDrawingViewAuto::GetCaptionPosition ( double * x, double * y ) {
    HRESULT _hr = raw_GetCaptionPosition(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1853)
inline HRESULT TGDraft::_IDrawingViewAuto::SetCaptionPosition ( double x, double y ) {
    HRESULT _hr = raw_SetCaptionPosition(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1854)
inline _bstr_t TGDraft::_IDrawingViewAuto::GetZone ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Zone(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1855)
inline void TGDraft::_IDrawingViewAuto::PutZone ( _bstr_t Zone ) {
    HRESULT _hr = put_Zone(Zone);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1856)
inline void TGDraft::_IDrawingViewAuto::PutIsSnapShot ( VARIANT_BOOL bIsSnapShot ) {
    HRESULT _hr = put_IsSnapShot(bIsSnapShot);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1857)
inline enum TGDraft::DrawingViewSimplifiedAssemblyOptionConstants TGDraft::_IDrawingViewAuto::GetSimplifiedAssemblyOption ( ) {
    enum DrawingViewSimplifiedAssemblyOptionConstants _result;
    HRESULT _hr = get_SimplifiedAssemblyOption(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1858)
inline void TGDraft::_IDrawingViewAuto::PutSimplifiedAssemblyOption ( enum DrawingViewSimplifiedAssemblyOptionConstants SimplifiedAssemblyOption ) {
    HRESULT _hr = put_SimplifiedAssemblyOption(SimplifiedAssemblyOption);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1859)
inline enum TGDraft::DrawingViewSimplifiedPartOptionConstants TGDraft::_IDrawingViewAuto::GetSimplifiedPartOption ( ) {
    enum DrawingViewSimplifiedPartOptionConstants _result;
    HRESULT _hr = get_SimplifiedPartOption(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1860)
inline void TGDraft::_IDrawingViewAuto::PutSimplifiedPartOption ( enum DrawingViewSimplifiedPartOptionConstants SimplifiedPartOption ) {
    HRESULT _hr = put_SimplifiedPartOption(SimplifiedPartOption);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1861)
inline _bstr_t TGDraft::_IDrawingViewAuto::GetAnnotationSheetNumberDefinitionText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AnnotationSheetNumberDefinitionText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1862)
inline void TGDraft::_IDrawingViewAuto::PutAnnotationSheetNumberDefinitionText ( _bstr_t AnnotationSheetNumberDefinitionText ) {
    HRESULT _hr = put_AnnotationSheetNumberDefinitionText(AnnotationSheetNumberDefinitionText);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1863)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetDisplayAnnotationSheetNumber ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayAnnotationSheetNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1864)
inline void TGDraft::_IDrawingViewAuto::PutDisplayAnnotationSheetNumber ( VARIANT_BOOL DisplayAnnotationSheetNumber ) {
    HRESULT _hr = put_DisplayAnnotationSheetNumber(DisplayAnnotationSheetNumber);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1865)
inline _bstr_t TGDraft::_IDrawingViewAuto::GetRotationAngleDefinitionText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RotationAngleDefinitionText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1866)
inline void TGDraft::_IDrawingViewAuto::PutRotationAngleDefinitionText ( _bstr_t RotationAngleDefinitionText ) {
    HRESULT _hr = put_RotationAngleDefinitionText(RotationAngleDefinitionText);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1867)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetDisplayRotationAngle ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayRotationAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1868)
inline void TGDraft::_IDrawingViewAuto::PutDisplayRotationAngle ( VARIANT_BOOL DisplayRotationAngle ) {
    HRESULT _hr = put_DisplayRotationAngle(DisplayRotationAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1869)
inline _bstr_t TGDraft::_IDrawingViewAuto::GetPrimaryCaptionFont ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PrimaryCaptionFont(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1870)
inline void TGDraft::_IDrawingViewAuto::PutPrimaryCaptionFont ( _bstr_t PrimaryCaptionFont ) {
    HRESULT _hr = put_PrimaryCaptionFont(PrimaryCaptionFont);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1871)
inline enum TGFrameworkSupport::DimTextFontStyleConstants TGDraft::_IDrawingViewAuto::GetPrimaryCaptionFontStyle ( ) {
    enum TGFrameworkSupport::DimTextFontStyleConstants _result;
    HRESULT _hr = get_PrimaryCaptionFontStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1872)
inline void TGDraft::_IDrawingViewAuto::PutPrimaryCaptionFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants PrimaryCaptionFontStyle ) {
    HRESULT _hr = put_PrimaryCaptionFontStyle(PrimaryCaptionFontStyle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1873)
inline long TGDraft::_IDrawingViewAuto::GetPrimaryCaptionColor ( ) {
    long _result = 0;
    HRESULT _hr = get_PrimaryCaptionColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1874)
inline void TGDraft::_IDrawingViewAuto::PutPrimaryCaptionColor ( long PrimaryCaptionColor ) {
    HRESULT _hr = put_PrimaryCaptionColor(PrimaryCaptionColor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1875)
inline double TGDraft::_IDrawingViewAuto::GetPrimaryCaptionTextSize ( ) {
    double _result = 0;
    HRESULT _hr = get_PrimaryCaptionTextSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1876)
inline void TGDraft::_IDrawingViewAuto::PutPrimaryCaptionTextSize ( double PrimaryCaptionTextSize ) {
    HRESULT _hr = put_PrimaryCaptionTextSize(PrimaryCaptionTextSize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1877)
inline enum TGFrameworkSupport::DrawingViewCaptionTextAlignment TGDraft::_IDrawingViewAuto::GetPrimaryCaptionTextAlignment ( ) {
    enum TGFrameworkSupport::DrawingViewCaptionTextAlignment _result;
    HRESULT _hr = get_PrimaryCaptionTextAlignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1878)
inline void TGDraft::_IDrawingViewAuto::PutPrimaryCaptionTextAlignment ( enum TGFrameworkSupport::DrawingViewCaptionTextAlignment PrimaryCaptionTextAlignment ) {
    HRESULT _hr = put_PrimaryCaptionTextAlignment(PrimaryCaptionTextAlignment);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1879)
inline _bstr_t TGDraft::_IDrawingViewAuto::GetSecondaryCaptionFont ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SecondaryCaptionFont(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1880)
inline void TGDraft::_IDrawingViewAuto::PutSecondaryCaptionFont ( _bstr_t SecondaryCaptionFont ) {
    HRESULT _hr = put_SecondaryCaptionFont(SecondaryCaptionFont);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1881)
inline enum TGFrameworkSupport::DimTextFontStyleConstants TGDraft::_IDrawingViewAuto::GetSecondaryCaptionFontStyle ( ) {
    enum TGFrameworkSupport::DimTextFontStyleConstants _result;
    HRESULT _hr = get_SecondaryCaptionFontStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1882)
inline void TGDraft::_IDrawingViewAuto::PutSecondaryCaptionFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants SecondaryCaptionFontStyle ) {
    HRESULT _hr = put_SecondaryCaptionFontStyle(SecondaryCaptionFontStyle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1883)
inline long TGDraft::_IDrawingViewAuto::GetSecondaryCaptionColor ( ) {
    long _result = 0;
    HRESULT _hr = get_SecondaryCaptionColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1884)
inline void TGDraft::_IDrawingViewAuto::PutSecondaryCaptionColor ( long SecondaryCaptionColor ) {
    HRESULT _hr = put_SecondaryCaptionColor(SecondaryCaptionColor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1885)
inline double TGDraft::_IDrawingViewAuto::GetSecondaryCaptionTextSize ( ) {
    double _result = 0;
    HRESULT _hr = get_SecondaryCaptionTextSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1886)
inline void TGDraft::_IDrawingViewAuto::PutSecondaryCaptionTextSize ( double SecondaryCaptionTextSize ) {
    HRESULT _hr = put_SecondaryCaptionTextSize(SecondaryCaptionTextSize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1887)
inline enum TGFrameworkSupport::DrawingViewCaptionTextAlignment TGDraft::_IDrawingViewAuto::GetSecondaryCaptionTextAlignment ( ) {
    enum TGFrameworkSupport::DrawingViewCaptionTextAlignment _result;
    HRESULT _hr = get_SecondaryCaptionTextAlignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1888)
inline void TGDraft::_IDrawingViewAuto::PutSecondaryCaptionTextAlignment ( enum TGFrameworkSupport::DrawingViewCaptionTextAlignment SecondaryCaptionTextAlignment ) {
    HRESULT _hr = put_SecondaryCaptionTextAlignment(SecondaryCaptionTextAlignment);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1889)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetShowPrimarySecondayCaptionSeparator ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowPrimarySecondayCaptionSeparator(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1890)
inline void TGDraft::_IDrawingViewAuto::PutShowPrimarySecondayCaptionSeparator ( VARIANT_BOOL ShowPrimarySecondayCaptionSeparator ) {
    HRESULT _hr = put_ShowPrimarySecondayCaptionSeparator(ShowPrimarySecondayCaptionSeparator);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1891)
inline enum TGFrameworkSupport::DimViewCaptionLocationConstants TGDraft::_IDrawingViewAuto::GetCaptionLocation ( ) {
    enum TGFrameworkSupport::DimViewCaptionLocationConstants _result;
    HRESULT _hr = get_CaptionLocation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1892)
inline void TGDraft::_IDrawingViewAuto::PutCaptionLocation ( enum TGFrameworkSupport::DimViewCaptionLocationConstants CaptionLocation ) {
    HRESULT _hr = put_CaptionLocation(CaptionLocation);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1893)
inline TGDraft::ModelMembersPtr TGDraft::_IDrawingViewAuto::ExecuteQuery ( _bstr_t QueryName ) {
    struct ModelMembers * _result = 0;
    HRESULT _hr = raw_ExecuteQuery(QueryName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ModelMembersPtr(_result, false);
}

#pragma implementation_key(1894)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetReferenceComponentsByConfigurations ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ReferenceComponentsByConfigurations(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1895)
inline void TGDraft::_IDrawingViewAuto::PutReferenceComponentsByConfigurations ( VARIANT_BOOL value ) {
    HRESULT _hr = put_ReferenceComponentsByConfigurations(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1896)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetDefaults_SolidFillSectionWeldBeads ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Defaults_SolidFillSectionWeldBeads(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1897)
inline void TGDraft::_IDrawingViewAuto::PutDefaults_SolidFillSectionWeldBeads ( VARIANT_BOOL value ) {
    HRESULT _hr = put_Defaults_SolidFillSectionWeldBeads(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1898)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetDefaults_EnableAlternatingHatchSpacing ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Defaults_EnableAlternatingHatchSpacing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1899)
inline void TGDraft::_IDrawingViewAuto::PutDefaults_EnableAlternatingHatchSpacing ( VARIANT_BOOL value ) {
    HRESULT _hr = put_Defaults_EnableAlternatingHatchSpacing(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1900)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetDefaults_EnableAlternatingHatchAngle ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Defaults_EnableAlternatingHatchAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1901)
inline void TGDraft::_IDrawingViewAuto::PutDefaults_EnableAlternatingHatchAngle ( VARIANT_BOOL value ) {
    HRESULT _hr = put_Defaults_EnableAlternatingHatchAngle(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1902)
inline _bstr_t TGDraft::_IDrawingViewAuto::GetPrimaryMember ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PrimaryMember(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1903)
inline void TGDraft::_IDrawingViewAuto::PutPrimaryMember ( _bstr_t PrimaryMember ) {
    HRESULT _hr = put_PrimaryMember(PrimaryMember);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1904)
inline HRESULT TGDraft::_IDrawingViewAuto::GetAlternateMembers ( long * NumMembers, SAFEARRAY * * Members ) {
    HRESULT _hr = raw_GetAlternateMembers(NumMembers, Members);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1905)
inline HRESULT TGDraft::_IDrawingViewAuto::GetAlternatePositionMemberCandidates ( long * NumMembers, SAFEARRAY * * Members ) {
    HRESULT _hr = raw_GetAlternatePositionMemberCandidates(NumMembers, Members);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1906)
inline HRESULT TGDraft::_IDrawingViewAuto::AddAlternateMember ( _bstr_t Member ) {
    HRESULT _hr = raw_AddAlternateMember(Member);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1907)
inline HRESULT TGDraft::_IDrawingViewAuto::RemoveAlternateMember ( _bstr_t Member ) {
    HRESULT _hr = raw_RemoveAlternateMember(Member);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1908)
inline void TGDraft::_IDrawingViewAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1909)
inline _bstr_t TGDraft::_IDrawingViewAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1910)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetSectionOnly ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SectionOnly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1911)
inline void TGDraft::_IDrawingViewAuto::PutSectionOnly ( VARIANT_BOOL SectionOnly ) {
    HRESULT _hr = put_SectionOnly(SectionOnly);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1912)
inline TGDraft::CuttingPlanesPtr TGDraft::_IDrawingViewAuto::GetCuttingPlanes ( ) {
    struct CuttingPlanes * _result = 0;
    HRESULT _hr = get_CuttingPlanes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CuttingPlanesPtr(_result, false);
}

#pragma implementation_key(1913)
inline TGDraft::BrokenOutSectionProfilesPtr TGDraft::_IDrawingViewAuto::GetBrokenOutSectionProfiles ( ) {
    struct BrokenOutSectionProfiles * _result = 0;
    HRESULT _hr = get_BrokenOutSectionProfiles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BrokenOutSectionProfilesPtr(_result, false);
}

#pragma implementation_key(1914)
inline TGDraft::DetailEnvelopesPtr TGDraft::_IDrawingViewAuto::GetDetailEnvelopes ( ) {
    struct DetailEnvelopes * _result = 0;
    HRESULT _hr = get_DetailEnvelopes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DetailEnvelopesPtr(_result, false);
}

#pragma implementation_key(1915)
inline TGDraft::DraftProfilePtr TGDraft::_IDrawingViewAuto::GetCroppingBoundaryProfile ( ) {
    struct DraftProfile * _result = 0;
    HRESULT _hr = get_CroppingBoundaryProfile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DraftProfilePtr(_result, false);
}

#pragma implementation_key(1916)
inline TGDraft::HighlightDrawingViewMembersPtr TGDraft::_IDrawingViewAuto::GetHighlightDrawingViewMembers ( ) {
    struct HighlightDrawingViewMembers * _result = 0;
    HRESULT _hr = get_HighlightDrawingViewMembers(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return HighlightDrawingViewMembersPtr(_result, false);
}

#pragma implementation_key(1917)
inline HRESULT TGDraft::_IDrawingViewAuto::AddConnectedDimensionsToSelectSet ( ) {
    HRESULT _hr = raw_AddConnectedDimensionsToSelectSet();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1918)
inline HRESULT TGDraft::_IDrawingViewAuto::AddConnectedAnnotationsToSelectSet ( ) {
    HRESULT _hr = raw_AddConnectedAnnotationsToSelectSet();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1919)
inline _bstr_t TGDraft::_IDrawingViewAuto::GetLastUpdateSEVersion ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LastUpdateSEVersion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1920)
inline _variant_t TGDraft::_IDrawingViewAuto::GetLastUpdateDate ( ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = get_LastUpdateDate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(1921)
inline _bstr_t TGDraft::_IDrawingViewAuto::GetLastUpdateUsername ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LastUpdateUsername(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1922)
inline double TGDraft::_IDrawingViewAuto::GetLastUpdateTimeToUpdate ( ) {
    double _result = 0;
    HRESULT _hr = get_LastUpdateTimeToUpdate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1923)
inline _bstr_t TGDraft::_IDrawingViewAuto::GetDefaults_CoordinateSystemEdgeStyleName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Defaults_CoordinateSystemEdgeStyleName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1924)
inline void TGDraft::_IDrawingViewAuto::PutDefaults_CoordinateSystemEdgeStyleName ( _bstr_t StyleName ) {
    HRESULT _hr = put_Defaults_CoordinateSystemEdgeStyleName(StyleName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1925)
inline HRESULT TGDraft::_IDrawingViewAuto::ClearEdgeOverrides ( ) {
    HRESULT _hr = raw_ClearEdgeOverrides();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1926)
inline void TGDraft::_IDrawingViewAuto::PutIsReferencePartTransparent ( VARIANT_BOOL bTrans ) {
    HRESULT _hr = put_IsReferencePartTransparent(bTrans);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1927)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetIsReferencePartTransparent ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsReferencePartTransparent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1928)
inline void TGDraft::_IDrawingViewAuto::PutRetrieveDimOnUpdate ( VARIANT_BOOL value ) {
    HRESULT _hr = put_RetrieveDimOnUpdate(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1929)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetRetrieveDimOnUpdate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RetrieveDimOnUpdate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1930)
inline TGDraft::BreakLinePairsPtr TGDraft::_IDrawingViewAuto::GetBreakLinePairs ( ) {
    struct BreakLinePairs * _result = 0;
    HRESULT _hr = get_BreakLinePairs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BreakLinePairsPtr(_result, false);
}

#pragma implementation_key(1931)
inline HRESULT TGDraft::_IDrawingViewAuto::SetBrokenState ( ) {
    HRESULT _hr = raw_SetBrokenState();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1932)
inline HRESULT TGDraft::_IDrawingViewAuto::SetUnBrokenState ( ) {
    HRESULT _hr = raw_SetUnBrokenState();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1933)
inline void TGDraft::_IDrawingViewAuto::PutDepthPlaneOffset ( double depthOffset ) {
    HRESULT _hr = put_DepthPlaneOffset(depthOffset);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1934)
inline double TGDraft::_IDrawingViewAuto::GetDepthPlaneOffset ( ) {
    double _result = 0;
    HRESULT _hr = get_DepthPlaneOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1935)
inline HRESULT TGDraft::_IDrawingViewAuto::RemoveDepthPlane ( ) {
    HRESULT _hr = raw_RemoveDepthPlane();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1936)
inline void TGDraft::_IDrawingViewAuto::PutSectionFullModel ( VARIANT_BOOL value ) {
    HRESULT _hr = put_SectionFullModel(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1937)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetSectionFullModel ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SectionFullModel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1938)
inline void TGDraft::_IDrawingViewAuto::PutRevolvedSection ( VARIANT_BOOL value ) {
    HRESULT _hr = put_RevolvedSection(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1939)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetRevolvedSection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RevolvedSection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1940)
inline HRESULT TGDraft::_IDrawingViewAuto::AddBreakAxisForBreakLines ( IUnknown * pElement1, enum KeypointIndexConstants KeyPointIndex1, IUnknown * pElement2, enum KeypointIndexConstants KeyPointIndex2 ) {
    HRESULT _hr = raw_AddBreakAxisForBreakLines(pElement1, KeyPointIndex1, pElement2, KeyPointIndex2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1941)
inline HRESULT TGDraft::_IDrawingViewAuto::SetCenterForDetailView ( double x, double y ) {
    HRESULT _hr = raw_SetCenterForDetailView(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1942)
inline HRESULT TGDraft::_IDrawingViewAuto::GetCenterForDetailView ( double * x, double * y ) {
    HRESULT _hr = raw_GetCenterForDetailView(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1943)
inline HRESULT TGDraft::_IDrawingViewAuto::RetrieveSlotCenterLinesCenterMarks ( VARIANT_BOOL IsRetrieve, _bstr_t DimensionStyleName, VARIANT_BOOL TypeCenterLine, VARIANT_BOOL TypeCenterMark, VARIANT_BOOL ProjectCenterMark, VARIANT_BOOL GetSlotCenterLines, VARIANT_BOOL GetStrikePointCenterMarks, VARIANT_BOOL GetEndPointCenterMarks, VARIANT_BOOL GetCenterofArcProjectionLines, VARIANT_BOOL EnableCenterMarkRangeCheck, VARIANT_BOOL EnableCenterLineRangeCheck, double dCenterLineMinRadius, double dCenterLineMaxRadius, double dCenterMarkMinRadius, double dCenterMarkMaxRadius ) {
    HRESULT _hr = raw_RetrieveSlotCenterLinesCenterMarks(IsRetrieve, DimensionStyleName, TypeCenterLine, TypeCenterMark, ProjectCenterMark, GetSlotCenterLines, GetStrikePointCenterMarks, GetEndPointCenterMarks, GetCenterofArcProjectionLines, EnableCenterMarkRangeCheck, EnableCenterLineRangeCheck, dCenterLineMinRadius, dCenterLineMaxRadius, dCenterMarkMinRadius, dCenterMarkMaxRadius);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1944)
inline void TGDraft::_IDrawingViewAuto::PutShowNewComponentsAddedtoAssembly ( VARIANT_BOOL value ) {
    HRESULT _hr = put_ShowNewComponentsAddedtoAssembly(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1945)
inline VARIANT_BOOL TGDraft::_IDrawingViewAuto::GetShowNewComponentsAddedtoAssembly ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowNewComponentsAddedtoAssembly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1946)
inline HRESULT TGDraft::_IDrawingViewAuto::GetEdgeOrFaceID ( IDispatch * pGraphicDVObj, long * pEntityId, VARIANT_BOOL * pIsEdge ) {
    HRESULT _hr = raw_GetEdgeOrFaceID(pGraphicDVObj, pEntityId, pIsEdge);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1947)
inline HRESULT TGDraft::_IDrawingViewAuto::SetBendCenterlineStyleAndDisplay ( enum StyleConstants bendUpCenterlineStyle, enum StyleConstants bendDownCenterlineStyle ) {
    HRESULT _hr = raw_SetBendCenterlineStyleAndDisplay(bendUpCenterlineStyle, bendDownCenterlineStyle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface ModelLink wrapper method implementations
//

#pragma implementation_key(1948)
inline _bstr_t TGDraft::ModelLink::GetFileName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1949)
inline enum TGDraft::ModelLinkTypeConstants TGDraft::ModelLink::GetModelType ( ) {
    enum ModelLinkTypeConstants _result;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1950)
inline IDispatchPtr TGDraft::ModelLink::GetModelDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1951)
inline TGFramework::ApplicationPtr TGDraft::ModelLink::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(1952)
inline IDispatchPtr TGDraft::ModelLink::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1953)
inline HRESULT TGDraft::ModelLink::Range2d ( enum ViewOrientationConstants view, double * lowX, double * lowY, double * highX, double * highY, const _variant_t & ConfigFileName, const _variant_t & ConfigurationName ) {
    return _com_dispatch_method(this, 0x69, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4005\x080c\x080c", view, lowX, lowY, highX, highY, &ConfigFileName, &ConfigurationName);
}

#pragma implementation_key(1954)
inline HRESULT TGDraft::ModelLink::Range3d ( double * lowX, double * lowY, double * lowZ, double * highX, double * highY, double * highZ, const _variant_t & ConfigFileName, const _variant_t & ConfigurationName ) {
    return _com_dispatch_method(this, 0x6a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005\x080c\x080c", lowX, lowY, lowZ, highX, highY, highZ, &ConfigFileName, &ConfigurationName);
}

#pragma implementation_key(1955)
inline HRESULT TGDraft::ModelLink::UpdateViews ( ) {
    return _com_dispatch_method(this, 0x6b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1956)
inline HRESULT TGDraft::ModelLink::Delete ( ) {
    return _com_dispatch_method(this, 0x6c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1957)
inline IDispatchPtr TGDraft::ModelLink::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1958)
inline VARIANT_BOOL TGDraft::ModelLink::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(1959)
inline TGDraft::ModelNodesPtr TGDraft::ModelLink::GetModelNodes ( ) {
    struct ModelNodes * _result = 0;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ModelNodesPtr(_result, false);
}

#pragma implementation_key(1960)
inline long TGDraft::ModelLink::GetGeometricVersion ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1961)
inline TGDraft::ModelWeldsPtr TGDraft::ModelLink::GetModelWelds ( ) {
    struct ModelWelds * _result = 0;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ModelWeldsPtr(_result, false);
}

#pragma implementation_key(1962)
inline VARIANT_BOOL TGDraft::ModelLink::GetIsAssemblyFamilyMember ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1963)
inline _bstr_t TGDraft::ModelLink::GetAssemblyFamilyMemberName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x73, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1964)
inline HRESULT TGDraft::ModelLink::GetFilesToUpdate ( long * NumFiles, SAFEARRAY * * FilesToUpdate ) {
    return _com_dispatch_method(this, 0x6f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6008", NumFiles, FilesToUpdate);
}

#pragma implementation_key(1965)
inline HRESULT TGDraft::ModelLink::ChangeSource ( _bstr_t FullPath, const _variant_t & Member ) {
    return _com_dispatch_method(this, 0x74, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x080c", (BSTR)FullPath, &Member);
}

#pragma implementation_key(1966)
inline HRESULT TGDraft::ModelLink::ForceUpdateViews ( ) {
    return _com_dispatch_method(this, 0x77, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1967)
inline VARIANT_BOOL TGDraft::ModelLink::GetModelOutOfDate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x75, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1968)
inline long TGDraft::ModelLink::GetIndexReference ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

//
// interface _IModelLinkAuto wrapper method implementations
//

#pragma implementation_key(1969)
inline _bstr_t TGDraft::_IModelLinkAuto::GetFileName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FileName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1970)
inline enum TGDraft::ModelLinkTypeConstants TGDraft::_IModelLinkAuto::GetModelType ( ) {
    enum ModelLinkTypeConstants _result;
    HRESULT _hr = get_ModelType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1971)
inline IDispatchPtr TGDraft::_IModelLinkAuto::GetModelDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_ModelDocument(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1972)
inline TGFramework::ApplicationPtr TGDraft::_IModelLinkAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(1973)
inline IDispatchPtr TGDraft::_IModelLinkAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1974)
inline HRESULT TGDraft::_IModelLinkAuto::Range2d ( enum ViewOrientationConstants view, double * lowX, double * lowY, double * highX, double * highY, const _variant_t & ConfigFileName, const _variant_t & ConfigurationName ) {
    HRESULT _hr = raw_Range2d(view, lowX, lowY, highX, highY, ConfigFileName, ConfigurationName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1975)
inline HRESULT TGDraft::_IModelLinkAuto::Range3d ( double * lowX, double * lowY, double * lowZ, double * highX, double * highY, double * highZ, const _variant_t & ConfigFileName, const _variant_t & ConfigurationName ) {
    HRESULT _hr = raw_Range3d(lowX, lowY, lowZ, highX, highY, highZ, ConfigFileName, ConfigurationName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1976)
inline HRESULT TGDraft::_IModelLinkAuto::UpdateViews ( ) {
    HRESULT _hr = raw_UpdateViews();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1977)
inline HRESULT TGDraft::_IModelLinkAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1978)
inline IDispatchPtr TGDraft::_IModelLinkAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1979)
inline VARIANT_BOOL TGDraft::_IModelLinkAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1980)
inline TGDraft::ModelNodesPtr TGDraft::_IModelLinkAuto::GetModelNodes ( ) {
    struct ModelNodes * _result = 0;
    HRESULT _hr = get_ModelNodes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ModelNodesPtr(_result, false);
}

#pragma implementation_key(1981)
inline long TGDraft::_IModelLinkAuto::GetGeometricVersion ( ) {
    long _result = 0;
    HRESULT _hr = get_GeometricVersion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1982)
inline TGDraft::ModelWeldsPtr TGDraft::_IModelLinkAuto::GetModelWelds ( ) {
    struct ModelWelds * _result = 0;
    HRESULT _hr = get_ModelWelds(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ModelWeldsPtr(_result, false);
}

#pragma implementation_key(1983)
inline VARIANT_BOOL TGDraft::_IModelLinkAuto::GetIsAssemblyFamilyMember ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAssemblyFamilyMember(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1984)
inline _bstr_t TGDraft::_IModelLinkAuto::GetAssemblyFamilyMemberName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AssemblyFamilyMemberName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1985)
inline HRESULT TGDraft::_IModelLinkAuto::GetFilesToUpdate ( long * NumFiles, SAFEARRAY * * FilesToUpdate ) {
    HRESULT _hr = raw_GetFilesToUpdate(NumFiles, FilesToUpdate);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1986)
inline HRESULT TGDraft::_IModelLinkAuto::ChangeSource ( _bstr_t FullPath, const _variant_t & Member ) {
    HRESULT _hr = raw_ChangeSource(FullPath, Member);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1987)
inline HRESULT TGDraft::_IModelLinkAuto::ForceUpdateViews ( ) {
    HRESULT _hr = raw_ForceUpdateViews();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1988)
inline VARIANT_BOOL TGDraft::_IModelLinkAuto::GetModelOutOfDate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ModelOutOfDate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1989)
inline long TGDraft::_IModelLinkAuto::GetIndexReference ( ) {
    long _result = 0;
    HRESULT _hr = get_IndexReference(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface _IDrawingViewsAuto wrapper method implementations
//

#pragma implementation_key(1990)
inline TGFramework::ApplicationPtr TGDraft::_IDrawingViewsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(1991)
inline long TGDraft::_IDrawingViewsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1992)
inline IDispatchPtr TGDraft::_IDrawingViewsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1993)
inline TGDraft::DrawingViewPtr TGDraft::_IDrawingViewsAuto::Item ( const _variant_t & Index ) {
    struct DrawingView * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(1994)
inline IUnknownPtr TGDraft::_IDrawingViewsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1995)
inline TGDraft::DrawingViewPtr TGDraft::_IDrawingViewsAuto::Add ( struct ModelLink * From, enum ViewOrientationConstants Orientation, double Scale, double x, double y ) {
    struct DrawingView * _result = 0;
    HRESULT _hr = raw_Add(From, Orientation, Scale, x, y, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(1996)
inline TGDraft::DrawingViewPtr TGDraft::_IDrawingViewsAuto::AddWithConfiguration ( struct ModelLink * From, enum ViewOrientationConstants Orientation, double Scale, double x, double y, _bstr_t ConfigFileName, _bstr_t ConfigurationName ) {
    struct DrawingView * _result = 0;
    HRESULT _hr = raw_AddWithConfiguration(From, Orientation, Scale, x, y, ConfigFileName, ConfigurationName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(1997)
inline TGDraft::DrawingViewPtr TGDraft::_IDrawingViewsAuto::AddByFold ( struct DrawingView * From, enum FoldTypeConstants foldDir, double x, double y ) {
    struct DrawingView * _result = 0;
    HRESULT _hr = raw_AddByFold(From, foldDir, x, y, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(1998)
inline TGDraft::DrawingViewPtr TGDraft::_IDrawingViewsAuto::AddByAuxiliaryFold ( struct DrawingView * From, double x1, double y1, double x2, double y2, double x3, double y3 ) {
    struct DrawingView * _result = 0;
    HRESULT _hr = raw_AddByAuxiliaryFold(From, x1, y1, x2, y2, x3, y3, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(1999)
inline TGDraft::DrawingViewPtr TGDraft::_IDrawingViewsAuto::AddByDetailEnvelope ( struct DrawingView * From, double x1, double y1, double Radius, double Scale, double x2, double y2 ) {
    struct DrawingView * _result = 0;
    HRESULT _hr = raw_AddByDetailEnvelope(From, x1, y1, Radius, Scale, x2, y2, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(2000)
inline TGDraft::DrawingViewPtr TGDraft::_IDrawingViewsAuto::AddDraftView ( double Scale, double x1, double y1 ) {
    struct DrawingView * _result = 0;
    HRESULT _hr = raw_AddDraftView(Scale, x1, y1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(2001)
inline TGDraft::DrawingViewPtr TGDraft::_IDrawingViewsAuto::AddByDraftView ( struct DrawingView * From, double Scale, double x1, double y1 ) {
    struct DrawingView * _result = 0;
    HRESULT _hr = raw_AddByDraftView(From, Scale, x1, y1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(2002)
inline HRESULT TGDraft::_IDrawingViewsAuto::Align ( ) {
    HRESULT _hr = raw_Align();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2003)
inline HRESULT TGDraft::_IDrawingViewsAuto::Unalign ( ) {
    HRESULT _hr = raw_Unalign();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2004)
inline TGDraft::DrawingViewPtr TGDraft::_IDrawingViewsAuto::AddAssemblyView ( struct ModelLink * From, enum ViewOrientationConstants Orientation, double Scale, double x, double y, enum AssemblyDrawingViewTypeConstants ViewType, _bstr_t ConfigurationName, VARIANT_BOOL Snapshot, long SnapShotQuality ) {
    struct DrawingView * _result = 0;
    HRESULT _hr = raw_AddAssemblyView(From, Orientation, Scale, x, y, ViewType, ConfigurationName, Snapshot, SnapShotQuality, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(2005)
inline TGDraft::DrawingViewPtr TGDraft::_IDrawingViewsAuto::AddPartView ( struct ModelLink * From, enum ViewOrientationConstants Orientation, double Scale, double x, double y, enum PartDrawingViewTypeConstants ViewType ) {
    struct DrawingView * _result = 0;
    HRESULT _hr = raw_AddPartView(From, Orientation, Scale, x, y, ViewType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(2006)
inline TGDraft::DrawingViewPtr TGDraft::_IDrawingViewsAuto::AddSheetMetalView ( struct ModelLink * From, enum ViewOrientationConstants Orientation, double Scale, double x, double y, enum SheetMetalDrawingViewTypeConstants ViewType ) {
    struct DrawingView * _result = 0;
    HRESULT _hr = raw_AddSheetMetalView(From, Orientation, Scale, x, y, ViewType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(2007)
inline TGDraft::DrawingViewPtr TGDraft::_IDrawingViewsAuto::AddWeldmentView ( struct ModelLink * From, enum ViewOrientationConstants Orientation, double Scale, double x, double y, enum WeldmentDrawingViewTypeConstants ViewType ) {
    struct DrawingView * _result = 0;
    HRESULT _hr = raw_AddWeldmentView(From, Orientation, Scale, x, y, ViewType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(2008)
inline TGDraft::DrawingViewPtr TGDraft::_IDrawingViewsAuto::AddDetailView ( struct DrawingView * From, double x1, double y1, double Radius, double Scale, double x2, double y2, VARIANT_BOOL Independent ) {
    struct DrawingView * _result = 0;
    HRESULT _hr = raw_AddDetailView(From, x1, y1, Radius, Scale, x2, y2, Independent, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(2009)
inline TGDraft::DrawingViewPtr TGDraft::_IDrawingViewsAuto::Add2dModelView ( double Scale, double x1, double y1 ) {
    struct DrawingView * _result = 0;
    HRESULT _hr = raw_Add2dModelView(Scale, x1, y1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(2010)
inline TGDraft::DrawingViewPtr TGDraft::_IDrawingViewsAuto::AddPMIModelView ( struct ModelLink * From, _bstr_t ModelViewName, double Scale, double x, double y, VARIANT_BOOL IncludePMIDimensions, VARIANT_BOOL UseDraftQuality, long DraftQuality ) {
    struct DrawingView * _result = 0;
    HRESULT _hr = raw_AddPMIModelView(From, ModelViewName, Scale, x, y, IncludePMIDimensions, UseDraftQuality, DraftQuality, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(2011)
inline TGDraft::DrawingViewPtr TGDraft::_IDrawingViewsAuto::AddEmptyView ( struct ModelLink * From, enum DrawingViewDefaultsConstants CreationDefaults ) {
    struct DrawingView * _result = 0;
    HRESULT _hr = raw_AddEmptyView(From, CreationDefaults, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewPtr(_result, false);
}

//
// dispinterface BlockOccurrences wrapper method implementations
//

#pragma implementation_key(2012)
inline TGFramework::ApplicationPtr TGDraft::BlockOccurrences::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2013)
inline IDispatchPtr TGDraft::BlockOccurrences::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2014)
inline long TGDraft::BlockOccurrences::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2015)
inline TGDraft::BlockOccurrencePtr TGDraft::BlockOccurrences::Item ( const _variant_t & Index ) {
    struct BlockOccurrence * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return BlockOccurrencePtr(_result, false);
}

#pragma implementation_key(2016)
inline TGDraft::BlockOccurrencePtr TGDraft::BlockOccurrences::Add ( _bstr_t BlockName, double XOrigin, double YOrigin, const _variant_t & BlockViewName, const _variant_t & Scale, const _variant_t & Rotation ) {
    struct BlockOccurrence * _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0005\x0005\x080c\x080c\x080c", (BSTR)BlockName, XOrigin, YOrigin, &BlockViewName, &Scale, &Rotation);
    return BlockOccurrencePtr(_result, false);
}

//
// dispinterface BlockOccurrence wrapper method implementations
//

#pragma implementation_key(2017)
inline HRESULT TGDraft::BlockOccurrence::Unblock ( ) {
    return _com_dispatch_method(this, 0x67, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2018)
inline TGFramework::ReferencePtr TGDraft::BlockOccurrence::GetMemberReference ( IDispatch * Member ) {
    struct TGFramework::Reference * _result = 0;
    _com_dispatch_method(this, 0x7f, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0009", Member);
    return TGFramework::ReferencePtr(_result, false);
}

#pragma implementation_key(2019)
inline void TGDraft::BlockOccurrence::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2020)
inline _bstr_t TGDraft::BlockOccurrence::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2021)
inline TGFramework::ApplicationPtr TGDraft::BlockOccurrence::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2022)
inline long TGDraft::BlockOccurrence::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2023)
inline _bstr_t TGDraft::BlockOccurrence::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2024)
inline IDispatchPtr TGDraft::BlockOccurrence::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2025)
inline long TGDraft::BlockOccurrence::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2026)
inline long TGDraft::BlockOccurrence::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2027)
inline _bstr_t TGDraft::BlockOccurrence::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2028)
inline IDispatchPtr TGDraft::BlockOccurrence::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2029)
inline HRESULT TGDraft::BlockOccurrence::Copy ( ) {
    return _com_dispatch_method(this, 0x71, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2030)
inline HRESULT TGDraft::BlockOccurrence::Cut ( ) {
    return _com_dispatch_method(this, 0x72, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2031)
inline HRESULT TGDraft::BlockOccurrence::Delete ( ) {
    return _com_dispatch_method(this, 0x73, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2032)
inline HRESULT TGDraft::BlockOccurrence::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    return _com_dispatch_method(this, 0x74, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", XFrom, YFrom, XTo, YTo);
}

#pragma implementation_key(2033)
inline HRESULT TGDraft::BlockOccurrence::Scale ( double Factor ) {
    return _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Factor);
}

#pragma implementation_key(2034)
inline HRESULT TGDraft::BlockOccurrence::Rotate ( double Angle, double x, double y ) {
    return _com_dispatch_method(this, 0x76, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", Angle, x, y);
}

#pragma implementation_key(2035)
inline HRESULT TGDraft::BlockOccurrence::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x77, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(2036)
inline IDispatchPtr TGDraft::BlockOccurrence::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x78, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &XDistance, &YDistance);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2037)
inline IDispatchPtr TGDraft::BlockOccurrence::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x79, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x080c", x1, y1, x2, y2, &BooleanCopyFlag);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2038)
inline HRESULT TGDraft::BlockOccurrence::BringToFront ( ) {
    return _com_dispatch_method(this, 0x7a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2039)
inline HRESULT TGDraft::BlockOccurrence::BringForward ( ) {
    return _com_dispatch_method(this, 0x7b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2040)
inline HRESULT TGDraft::BlockOccurrence::SendToBack ( ) {
    return _com_dispatch_method(this, 0x7c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2041)
inline HRESULT TGDraft::BlockOccurrence::SendBackward ( ) {
    return _com_dispatch_method(this, 0x7d, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2042)
inline HRESULT TGDraft::BlockOccurrence::Select ( ) {
    return _com_dispatch_method(this, 0x7e, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2043)
inline TGFramework::ReferencePtr TGDraft::BlockOccurrence::GetOriginReference ( ) {
    struct TGFramework::Reference * _result = 0;
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ReferencePtr(_result, false);
}

#pragma implementation_key(2044)
inline HRESULT TGDraft::BlockOccurrence::SetOrigin ( double x, double y ) {
    return _com_dispatch_method(this, 0x82, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(2045)
inline HRESULT TGDraft::BlockOccurrence::GetOrigin ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x83, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(2046)
inline double TGDraft::BlockOccurrence::GetScaleFactor ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x84, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2047)
inline double TGDraft::BlockOccurrence::GetRotationAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x85, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2048)
inline void TGDraft::BlockOccurrence::PutLineColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x88, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2049)
inline long TGDraft::BlockOccurrence::GetLineColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x88, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2050)
inline TGDraft::BlockPtr TGDraft::BlockOccurrence::GetBlock ( ) {
    struct Block * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return BlockPtr(_result, false);
}

#pragma implementation_key(2051)
inline void TGDraft::BlockOccurrence::PutBlock ( struct Block * _arg1 ) {
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(2052)
inline TGDraft::BlockViewPtr TGDraft::BlockOccurrence::GetBlockView ( ) {
    struct BlockView * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return BlockViewPtr(_result, false);
}

#pragma implementation_key(2053)
inline void TGDraft::BlockOccurrence::PutBlockView ( struct BlockView * _arg1 ) {
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(2054)
inline TGDraft::BlockLabelOccurrencesPtr TGDraft::BlockOccurrence::GetBlockLabelOccurrences ( ) {
    struct BlockLabelOccurrences * _result = 0;
    _com_dispatch_method(this, 0x80, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return BlockLabelOccurrencesPtr(_result, false);
}

#pragma implementation_key(2055)
inline HRESULT TGDraft::BlockOccurrence::OccurrenceToBlockView ( double xOccurrence, double yOccurrence, double * xBlockView, double * yBlockView ) {
    return _com_dispatch_method(this, 0x86, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x4005\x4005", xOccurrence, yOccurrence, xBlockView, yBlockView);
}

#pragma implementation_key(2056)
inline HRESULT TGDraft::BlockOccurrence::BlockViewToOccurrence ( double xBlockView, double yBlockView, double * xOccurrence, double * yOccurrence ) {
    return _com_dispatch_method(this, 0x87, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x4005\x4005", xBlockView, yBlockView, xOccurrence, yOccurrence);
}

//
// interface _IBlockOccurrencesAuto wrapper method implementations
//

#pragma implementation_key(2057)
inline TGFramework::ApplicationPtr TGDraft::_IBlockOccurrencesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2058)
inline IDispatchPtr TGDraft::_IBlockOccurrencesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2059)
inline long TGDraft::_IBlockOccurrencesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2060)
inline IUnknownPtr TGDraft::_IBlockOccurrencesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2061)
inline TGDraft::BlockOccurrencePtr TGDraft::_IBlockOccurrencesAuto::Item ( const _variant_t & Index ) {
    struct BlockOccurrence * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BlockOccurrencePtr(_result, false);
}

#pragma implementation_key(2062)
inline TGDraft::BlockOccurrencePtr TGDraft::_IBlockOccurrencesAuto::Add ( _bstr_t BlockName, double XOrigin, double YOrigin, const _variant_t & BlockViewName, const _variant_t & Scale, const _variant_t & Rotation ) {
    struct BlockOccurrence * _result = 0;
    HRESULT _hr = raw_Add(BlockName, XOrigin, YOrigin, BlockViewName, Scale, Rotation, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BlockOccurrencePtr(_result, false);
}

//
// dispinterface Block wrapper method implementations
//

#pragma implementation_key(2063)
inline TGFramework::ApplicationPtr TGDraft::Block::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2064)
inline IDispatchPtr TGDraft::Block::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2065)
inline long TGDraft::Block::GetOccurrenceCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2066)
inline void TGDraft::Block::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2067)
inline _bstr_t TGDraft::Block::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2068)
inline void TGDraft::Block::PutScaleDimAndAnnot ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2069)
inline VARIANT_BOOL TGDraft::Block::GetScaleDimAndAnnot ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2070)
inline HRESULT TGDraft::Block::Delete ( ) {
    return _com_dispatch_method(this, 0x70, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2071)
inline IDispatchPtr TGDraft::Block::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2072)
inline VARIANT_BOOL TGDraft::Block::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(2073)
inline TGDraft::BlockViewsPtr TGDraft::Block::GetViews ( ) {
    struct BlockViews * _result = 0;
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return BlockViewsPtr(_result, false);
}

#pragma implementation_key(2074)
inline TGDraft::BlockViewPtr TGDraft::Block::GetDefaultView ( ) {
    struct BlockView * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return BlockViewPtr(_result, false);
}

#pragma implementation_key(2075)
inline void TGDraft::Block::PutDefaultView ( struct BlockView * _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// dispinterface BlockViews wrapper method implementations
//

#pragma implementation_key(2076)
inline TGFramework::ApplicationPtr TGDraft::BlockViews::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2077)
inline IDispatchPtr TGDraft::BlockViews::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2078)
inline long TGDraft::BlockViews::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2079)
inline TGDraft::BlockPtr TGDraft::BlockViews::GetBlock ( ) {
    struct Block * _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return BlockPtr(_result, false);
}

#pragma implementation_key(2080)
inline TGDraft::BlockViewPtr TGDraft::BlockViews::Item ( const _variant_t & Index ) {
    struct BlockView * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return BlockViewPtr(_result, false);
}

#pragma implementation_key(2081)
inline TGDraft::BlockViewPtr TGDraft::BlockViews::Add ( _bstr_t Name, double XOrigin, double YOrigin, const _variant_t & DeleteSelectedGraphics ) {
    struct BlockView * _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0005\x0005\x080c", (BSTR)Name, XOrigin, YOrigin, &DeleteSelectedGraphics);
    return BlockViewPtr(_result, false);
}

//
// interface _IBlockAuto wrapper method implementations
//

#pragma implementation_key(2082)
inline TGFramework::ApplicationPtr TGDraft::_IBlockAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2083)
inline IDispatchPtr TGDraft::_IBlockAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2084)
inline long TGDraft::_IBlockAuto::GetOccurrenceCount ( ) {
    long _result = 0;
    HRESULT _hr = get_OccurrenceCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2085)
inline void TGDraft::_IBlockAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2086)
inline _bstr_t TGDraft::_IBlockAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2087)
inline void TGDraft::_IBlockAuto::PutScaleDimAndAnnot ( VARIANT_BOOL ScaleDimAndAnnot ) {
    HRESULT _hr = put_ScaleDimAndAnnot(ScaleDimAndAnnot);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2088)
inline VARIANT_BOOL TGDraft::_IBlockAuto::GetScaleDimAndAnnot ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ScaleDimAndAnnot(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2089)
inline HRESULT TGDraft::_IBlockAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2090)
inline IDispatchPtr TGDraft::_IBlockAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2091)
inline VARIANT_BOOL TGDraft::_IBlockAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2092)
inline TGDraft::BlockViewsPtr TGDraft::_IBlockAuto::GetViews ( ) {
    struct BlockViews * _result = 0;
    HRESULT _hr = get_Views(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BlockViewsPtr(_result, false);
}

#pragma implementation_key(2093)
inline TGDraft::BlockViewPtr TGDraft::_IBlockAuto::GetDefaultView ( ) {
    struct BlockView * _result = 0;
    HRESULT _hr = get_DefaultView(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BlockViewPtr(_result, false);
}

#pragma implementation_key(2094)
inline void TGDraft::_IBlockAuto::PutDefaultView ( struct BlockView * BlockView ) {
    HRESULT _hr = put_DefaultView(BlockView);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface _IBlockViewsAuto wrapper method implementations
//

#pragma implementation_key(2095)
inline TGFramework::ApplicationPtr TGDraft::_IBlockViewsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2096)
inline IDispatchPtr TGDraft::_IBlockViewsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2097)
inline long TGDraft::_IBlockViewsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2098)
inline IUnknownPtr TGDraft::_IBlockViewsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2099)
inline TGDraft::BlockPtr TGDraft::_IBlockViewsAuto::GetBlock ( ) {
    struct Block * _result = 0;
    HRESULT _hr = get_Block(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BlockPtr(_result, false);
}

#pragma implementation_key(2100)
inline TGDraft::BlockViewPtr TGDraft::_IBlockViewsAuto::Item ( const _variant_t & Index ) {
    struct BlockView * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BlockViewPtr(_result, false);
}

#pragma implementation_key(2101)
inline TGDraft::BlockViewPtr TGDraft::_IBlockViewsAuto::Add ( _bstr_t Name, double XOrigin, double YOrigin, const _variant_t & DeleteSelectedGraphics ) {
    struct BlockView * _result = 0;
    HRESULT _hr = raw_Add(Name, XOrigin, YOrigin, DeleteSelectedGraphics, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BlockViewPtr(_result, false);
}

//
// dispinterface BlockLabelOccurrences wrapper method implementations
//

#pragma implementation_key(2102)
inline TGFramework::ApplicationPtr TGDraft::BlockLabelOccurrences::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2103)
inline IDispatchPtr TGDraft::BlockLabelOccurrences::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2104)
inline long TGDraft::BlockLabelOccurrences::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2105)
inline TGDraft::BlockLabelOccurrencePtr TGDraft::BlockLabelOccurrences::Item ( const _variant_t & Index ) {
    struct BlockLabelOccurrence * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return BlockLabelOccurrencePtr(_result, false);
}

//
// interface _IBlockOccurrenceAuto wrapper method implementations
//

#pragma implementation_key(2106)
inline HRESULT TGDraft::_IBlockOccurrenceAuto::Unblock ( ) {
    HRESULT _hr = raw_Unblock();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2107)
inline TGFramework::ReferencePtr TGDraft::_IBlockOccurrenceAuto::GetMemberReference ( IDispatch * Member ) {
    struct TGFramework::Reference * _result = 0;
    HRESULT _hr = get_MemberReference(Member, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ReferencePtr(_result, false);
}

#pragma implementation_key(2108)
inline void TGDraft::_IBlockOccurrenceAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2109)
inline _bstr_t TGDraft::_IBlockOccurrenceAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2110)
inline TGFramework::ApplicationPtr TGDraft::_IBlockOccurrenceAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2111)
inline long TGDraft::_IBlockOccurrenceAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2112)
inline _bstr_t TGDraft::_IBlockOccurrenceAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2113)
inline IDispatchPtr TGDraft::_IBlockOccurrenceAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2114)
inline long TGDraft::_IBlockOccurrenceAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2115)
inline long TGDraft::_IBlockOccurrenceAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2116)
inline _bstr_t TGDraft::_IBlockOccurrenceAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2117)
inline IDispatchPtr TGDraft::_IBlockOccurrenceAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2118)
inline HRESULT TGDraft::_IBlockOccurrenceAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2119)
inline HRESULT TGDraft::_IBlockOccurrenceAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2120)
inline HRESULT TGDraft::_IBlockOccurrenceAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2121)
inline HRESULT TGDraft::_IBlockOccurrenceAuto::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    HRESULT _hr = raw_Move(XFrom, YFrom, XTo, YTo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2122)
inline HRESULT TGDraft::_IBlockOccurrenceAuto::Scale ( double Factor ) {
    HRESULT _hr = raw_Scale(Factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2123)
inline HRESULT TGDraft::_IBlockOccurrenceAuto::Rotate ( double Angle, double x, double y ) {
    HRESULT _hr = raw_Rotate(Angle, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2124)
inline HRESULT TGDraft::_IBlockOccurrenceAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2125)
inline IDispatchPtr TGDraft::_IBlockOccurrenceAuto::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Duplicate(XDistance, YDistance, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2126)
inline IDispatchPtr TGDraft::_IBlockOccurrenceAuto::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Mirror(x1, y1, x2, y2, BooleanCopyFlag, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2127)
inline HRESULT TGDraft::_IBlockOccurrenceAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2128)
inline HRESULT TGDraft::_IBlockOccurrenceAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2129)
inline HRESULT TGDraft::_IBlockOccurrenceAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2130)
inline HRESULT TGDraft::_IBlockOccurrenceAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2131)
inline HRESULT TGDraft::_IBlockOccurrenceAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2132)
inline TGFramework::ReferencePtr TGDraft::_IBlockOccurrenceAuto::GetOriginReference ( ) {
    struct TGFramework::Reference * _result = 0;
    HRESULT _hr = get_OriginReference(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ReferencePtr(_result, false);
}

#pragma implementation_key(2133)
inline HRESULT TGDraft::_IBlockOccurrenceAuto::SetOrigin ( double x, double y ) {
    HRESULT _hr = raw_SetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2134)
inline HRESULT TGDraft::_IBlockOccurrenceAuto::GetOrigin ( double * x, double * y ) {
    HRESULT _hr = raw_GetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2135)
inline double TGDraft::_IBlockOccurrenceAuto::GetScaleFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_ScaleFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2136)
inline double TGDraft::_IBlockOccurrenceAuto::GetRotationAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_RotationAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2137)
inline void TGDraft::_IBlockOccurrenceAuto::PutLineColor ( long value ) {
    HRESULT _hr = put_LineColor(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2138)
inline long TGDraft::_IBlockOccurrenceAuto::GetLineColor ( ) {
    long _result = 0;
    HRESULT _hr = get_LineColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2139)
inline TGDraft::BlockPtr TGDraft::_IBlockOccurrenceAuto::GetBlock ( ) {
    struct Block * _result = 0;
    HRESULT _hr = get_Block(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BlockPtr(_result, false);
}

#pragma implementation_key(2140)
inline void TGDraft::_IBlockOccurrenceAuto::PutBlock ( struct Block * Block ) {
    HRESULT _hr = put_Block(Block);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2141)
inline TGDraft::BlockViewPtr TGDraft::_IBlockOccurrenceAuto::GetBlockView ( ) {
    struct BlockView * _result = 0;
    HRESULT _hr = get_BlockView(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BlockViewPtr(_result, false);
}

#pragma implementation_key(2142)
inline void TGDraft::_IBlockOccurrenceAuto::PutBlockView ( struct BlockView * BlockView ) {
    HRESULT _hr = put_BlockView(BlockView);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2143)
inline TGDraft::BlockLabelOccurrencesPtr TGDraft::_IBlockOccurrenceAuto::GetBlockLabelOccurrences ( ) {
    struct BlockLabelOccurrences * _result = 0;
    HRESULT _hr = get_BlockLabelOccurrences(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BlockLabelOccurrencesPtr(_result, false);
}

#pragma implementation_key(2144)
inline HRESULT TGDraft::_IBlockOccurrenceAuto::OccurrenceToBlockView ( double xOccurrence, double yOccurrence, double * xBlockView, double * yBlockView ) {
    HRESULT _hr = raw_OccurrenceToBlockView(xOccurrence, yOccurrence, xBlockView, yBlockView);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2145)
inline HRESULT TGDraft::_IBlockOccurrenceAuto::BlockViewToOccurrence ( double xBlockView, double yBlockView, double * xOccurrence, double * yOccurrence ) {
    HRESULT _hr = raw_BlockViewToOccurrence(xBlockView, yBlockView, xOccurrence, yOccurrence);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface BlockLabelOccurrence wrapper method implementations
//

#pragma implementation_key(2146)
inline TGFramework::ApplicationPtr TGDraft::BlockLabelOccurrence::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2147)
inline IDispatchPtr TGDraft::BlockLabelOccurrence::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x73, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2148)
inline _bstr_t TGDraft::BlockLabelOccurrence::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2149)
inline void TGDraft::BlockLabelOccurrence::Putvalue ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2150)
inline _bstr_t TGDraft::BlockLabelOccurrence::Getvalue ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2151)
inline _bstr_t TGDraft::BlockLabelOccurrence::GetDescription ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2152)
inline void TGDraft::BlockLabelOccurrence::PutAngle ( double _arg1 ) {
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2153)
inline double TGDraft::BlockLabelOccurrence::GetAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2154)
inline HRESULT TGDraft::BlockLabelOccurrence::SetOrigin ( double x, double y ) {
    return _com_dispatch_method(this, 0x69, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(2155)
inline HRESULT TGDraft::BlockLabelOccurrence::GetOrigin ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x6a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(2156)
inline VARIANT_BOOL TGDraft::BlockLabelOccurrence::GetPrompt ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2157)
inline void TGDraft::BlockLabelOccurrence::PutOriginLocation ( enum BlockLabelOriginLocationConstants _arg1 ) {
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2158)
inline enum TGDraft::BlockLabelOriginLocationConstants TGDraft::BlockLabelOccurrence::GetOriginLocation ( ) {
    enum BlockLabelOriginLocationConstants _result;
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2159)
inline VARIANT_BOOL TGDraft::BlockLabelOccurrence::GetVisibleInOccurrence ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2160)
inline VARIANT_BOOL TGDraft::BlockLabelOccurrence::GetGlobal ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2161)
inline VARIANT_BOOL TGDraft::BlockLabelOccurrence::GetPositionLocked ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2162)
inline TGFrameworkSupport::DimStylePtr TGDraft::BlockLabelOccurrence::Getstyle ( ) {
    struct TGFrameworkSupport::DimStyle * _result = 0;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::DimStylePtr(_result, false);
}

#pragma implementation_key(2163)
inline void TGDraft::BlockLabelOccurrence::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2164)
inline _bstr_t TGDraft::BlockLabelOccurrence::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2165)
inline _bstr_t TGDraft::BlockLabelOccurrence::GetDisplayedText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x75, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2166)
inline TGDraft::BlockLabelPtr TGDraft::BlockLabelOccurrence::GetBlockLabel ( ) {
    struct BlockLabel * _result = 0;
    _com_dispatch_method(this, 0x74, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return BlockLabelPtr(_result, false);
}

//
// interface _IBlockLabelOccurrencesAuto wrapper method implementations
//

#pragma implementation_key(2167)
inline TGFramework::ApplicationPtr TGDraft::_IBlockLabelOccurrencesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2168)
inline IDispatchPtr TGDraft::_IBlockLabelOccurrencesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2169)
inline long TGDraft::_IBlockLabelOccurrencesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2170)
inline IUnknownPtr TGDraft::_IBlockLabelOccurrencesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2171)
inline TGDraft::BlockLabelOccurrencePtr TGDraft::_IBlockLabelOccurrencesAuto::Item ( const _variant_t & Index ) {
    struct BlockLabelOccurrence * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BlockLabelOccurrencePtr(_result, false);
}

//
// dispinterface BlockLabel wrapper method implementations
//

#pragma implementation_key(2172)
inline void TGDraft::BlockLabel::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2173)
inline _bstr_t TGDraft::BlockLabel::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2174)
inline void TGDraft::BlockLabel::Putvalue ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2175)
inline _bstr_t TGDraft::BlockLabel::Getvalue ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2176)
inline void TGDraft::BlockLabel::PutDescription ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2177)
inline _bstr_t TGDraft::BlockLabel::GetDescription ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2178)
inline void TGDraft::BlockLabel::PutAngle ( double _arg1 ) {
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2179)
inline double TGDraft::BlockLabel::GetAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2180)
inline HRESULT TGDraft::BlockLabel::SetOrigin ( double x, double y ) {
    return _com_dispatch_method(this, 0x69, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(2181)
inline HRESULT TGDraft::BlockLabel::GetOrigin ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x6a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(2182)
inline void TGDraft::BlockLabel::PutPrompt ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2183)
inline VARIANT_BOOL TGDraft::BlockLabel::GetPrompt ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2184)
inline void TGDraft::BlockLabel::PutOriginLocation ( enum BlockLabelOriginLocationConstants _arg1 ) {
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2185)
inline enum TGDraft::BlockLabelOriginLocationConstants TGDraft::BlockLabel::GetOriginLocation ( ) {
    enum BlockLabelOriginLocationConstants _result;
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2186)
inline void TGDraft::BlockLabel::PutVisibleInOccurrence ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2187)
inline VARIANT_BOOL TGDraft::BlockLabel::GetVisibleInOccurrence ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2188)
inline void TGDraft::BlockLabel::PutGlobal ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2189)
inline VARIANT_BOOL TGDraft::BlockLabel::GetGlobal ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2190)
inline void TGDraft::BlockLabel::PutPositionLocked ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2191)
inline VARIANT_BOOL TGDraft::BlockLabel::GetPositionLocked ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2192)
inline TGFrameworkSupport::DimStylePtr TGDraft::BlockLabel::Getstyle ( ) {
    struct TGFrameworkSupport::DimStyle * _result = 0;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::DimStylePtr(_result, false);
}

#pragma implementation_key(2193)
inline void TGDraft::BlockLabel::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2194)
inline _bstr_t TGDraft::BlockLabel::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2195)
inline TGFramework::ApplicationPtr TGDraft::BlockLabel::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2196)
inline long TGDraft::BlockLabel::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x73, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2197)
inline IDispatchPtr TGDraft::BlockLabel::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x75, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2198)
inline long TGDraft::BlockLabel::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2199)
inline long TGDraft::BlockLabel::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2200)
inline _bstr_t TGDraft::BlockLabel::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2201)
inline IDispatchPtr TGDraft::BlockLabel::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2202)
inline HRESULT TGDraft::BlockLabel::Copy ( ) {
    return _com_dispatch_method(this, 0x7a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2203)
inline HRESULT TGDraft::BlockLabel::Cut ( ) {
    return _com_dispatch_method(this, 0x7b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2204)
inline HRESULT TGDraft::BlockLabel::Delete ( ) {
    return _com_dispatch_method(this, 0x7c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2205)
inline HRESULT TGDraft::BlockLabel::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    return _com_dispatch_method(this, 0x7d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", XFrom, YFrom, XTo, YTo);
}

#pragma implementation_key(2206)
inline HRESULT TGDraft::BlockLabel::Scale ( double Factor ) {
    return _com_dispatch_method(this, 0x7e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Factor);
}

#pragma implementation_key(2207)
inline HRESULT TGDraft::BlockLabel::Rotate ( double Angle, double x, double y ) {
    return _com_dispatch_method(this, 0x7f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", Angle, x, y);
}

#pragma implementation_key(2208)
inline HRESULT TGDraft::BlockLabel::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x80, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(2209)
inline IDispatchPtr TGDraft::BlockLabel::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x81, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &XDistance, &YDistance);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2210)
inline IDispatchPtr TGDraft::BlockLabel::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x82, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x080c", x1, y1, x2, y2, &BooleanCopyFlag);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2211)
inline HRESULT TGDraft::BlockLabel::BringToFront ( ) {
    return _com_dispatch_method(this, 0x83, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2212)
inline HRESULT TGDraft::BlockLabel::BringForward ( ) {
    return _com_dispatch_method(this, 0x84, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2213)
inline HRESULT TGDraft::BlockLabel::SendToBack ( ) {
    return _com_dispatch_method(this, 0x85, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2214)
inline HRESULT TGDraft::BlockLabel::SendBackward ( ) {
    return _com_dispatch_method(this, 0x86, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2215)
inline HRESULT TGDraft::BlockLabel::Select ( ) {
    return _com_dispatch_method(this, 0x87, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// interface _IBlockLabelOccurrenceAuto wrapper method implementations
//

#pragma implementation_key(2216)
inline TGFramework::ApplicationPtr TGDraft::_IBlockLabelOccurrenceAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2217)
inline IDispatchPtr TGDraft::_IBlockLabelOccurrenceAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2218)
inline _bstr_t TGDraft::_IBlockLabelOccurrenceAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2219)
inline void TGDraft::_IBlockLabelOccurrenceAuto::Putvalue ( _bstr_t value ) {
    HRESULT _hr = put_value(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2220)
inline _bstr_t TGDraft::_IBlockLabelOccurrenceAuto::Getvalue ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_value(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2221)
inline _bstr_t TGDraft::_IBlockLabelOccurrenceAuto::GetDescription ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Description(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2222)
inline void TGDraft::_IBlockLabelOccurrenceAuto::PutAngle ( double Angle ) {
    HRESULT _hr = put_Angle(Angle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2223)
inline double TGDraft::_IBlockLabelOccurrenceAuto::GetAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_Angle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2224)
inline HRESULT TGDraft::_IBlockLabelOccurrenceAuto::SetOrigin ( double x, double y ) {
    HRESULT _hr = raw_SetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2225)
inline HRESULT TGDraft::_IBlockLabelOccurrenceAuto::GetOrigin ( double * x, double * y ) {
    HRESULT _hr = raw_GetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2226)
inline VARIANT_BOOL TGDraft::_IBlockLabelOccurrenceAuto::GetPrompt ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Prompt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2227)
inline void TGDraft::_IBlockLabelOccurrenceAuto::PutOriginLocation ( enum BlockLabelOriginLocationConstants OriginLocation ) {
    HRESULT _hr = put_OriginLocation(OriginLocation);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2228)
inline enum TGDraft::BlockLabelOriginLocationConstants TGDraft::_IBlockLabelOccurrenceAuto::GetOriginLocation ( ) {
    enum BlockLabelOriginLocationConstants _result;
    HRESULT _hr = get_OriginLocation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2229)
inline VARIANT_BOOL TGDraft::_IBlockLabelOccurrenceAuto::GetVisibleInOccurrence ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_VisibleInOccurrence(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2230)
inline VARIANT_BOOL TGDraft::_IBlockLabelOccurrenceAuto::GetGlobal ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Global(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2231)
inline VARIANT_BOOL TGDraft::_IBlockLabelOccurrenceAuto::GetPositionLocked ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_PositionLocked(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2232)
inline TGFrameworkSupport::DimStylePtr TGDraft::_IBlockLabelOccurrenceAuto::Getstyle ( ) {
    struct TGFrameworkSupport::DimStyle * _result = 0;
    HRESULT _hr = get_style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::DimStylePtr(_result, false);
}

#pragma implementation_key(2233)
inline void TGDraft::_IBlockLabelOccurrenceAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2234)
inline _bstr_t TGDraft::_IBlockLabelOccurrenceAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2235)
inline _bstr_t TGDraft::_IBlockLabelOccurrenceAuto::GetDisplayedText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DisplayedText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2236)
inline TGDraft::BlockLabelPtr TGDraft::_IBlockLabelOccurrenceAuto::GetBlockLabel ( ) {
    struct BlockLabel * _result = 0;
    HRESULT _hr = get_BlockLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BlockLabelPtr(_result, false);
}

//
// interface _IBlockLabelAuto wrapper method implementations
//

#pragma implementation_key(2237)
inline void TGDraft::_IBlockLabelAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2238)
inline _bstr_t TGDraft::_IBlockLabelAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2239)
inline void TGDraft::_IBlockLabelAuto::Putvalue ( _bstr_t value ) {
    HRESULT _hr = put_value(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2240)
inline _bstr_t TGDraft::_IBlockLabelAuto::Getvalue ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_value(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2241)
inline void TGDraft::_IBlockLabelAuto::PutDescription ( _bstr_t Description ) {
    HRESULT _hr = put_Description(Description);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2242)
inline _bstr_t TGDraft::_IBlockLabelAuto::GetDescription ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Description(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2243)
inline void TGDraft::_IBlockLabelAuto::PutAngle ( double Angle ) {
    HRESULT _hr = put_Angle(Angle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2244)
inline double TGDraft::_IBlockLabelAuto::GetAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_Angle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2245)
inline HRESULT TGDraft::_IBlockLabelAuto::SetOrigin ( double x, double y ) {
    HRESULT _hr = raw_SetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2246)
inline HRESULT TGDraft::_IBlockLabelAuto::GetOrigin ( double * x, double * y ) {
    HRESULT _hr = raw_GetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2247)
inline void TGDraft::_IBlockLabelAuto::PutPrompt ( VARIANT_BOOL Prompt ) {
    HRESULT _hr = put_Prompt(Prompt);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2248)
inline VARIANT_BOOL TGDraft::_IBlockLabelAuto::GetPrompt ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Prompt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2249)
inline void TGDraft::_IBlockLabelAuto::PutOriginLocation ( enum BlockLabelOriginLocationConstants OriginLocation ) {
    HRESULT _hr = put_OriginLocation(OriginLocation);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2250)
inline enum TGDraft::BlockLabelOriginLocationConstants TGDraft::_IBlockLabelAuto::GetOriginLocation ( ) {
    enum BlockLabelOriginLocationConstants _result;
    HRESULT _hr = get_OriginLocation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2251)
inline void TGDraft::_IBlockLabelAuto::PutVisibleInOccurrence ( VARIANT_BOOL VisibleInOccurrence ) {
    HRESULT _hr = put_VisibleInOccurrence(VisibleInOccurrence);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2252)
inline VARIANT_BOOL TGDraft::_IBlockLabelAuto::GetVisibleInOccurrence ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_VisibleInOccurrence(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2253)
inline void TGDraft::_IBlockLabelAuto::PutGlobal ( VARIANT_BOOL Global ) {
    HRESULT _hr = put_Global(Global);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2254)
inline VARIANT_BOOL TGDraft::_IBlockLabelAuto::GetGlobal ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Global(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2255)
inline void TGDraft::_IBlockLabelAuto::PutPositionLocked ( VARIANT_BOOL PositionLocked ) {
    HRESULT _hr = put_PositionLocked(PositionLocked);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2256)
inline VARIANT_BOOL TGDraft::_IBlockLabelAuto::GetPositionLocked ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_PositionLocked(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2257)
inline TGFrameworkSupport::DimStylePtr TGDraft::_IBlockLabelAuto::Getstyle ( ) {
    struct TGFrameworkSupport::DimStyle * _result = 0;
    HRESULT _hr = get_style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::DimStylePtr(_result, false);
}

#pragma implementation_key(2258)
inline void TGDraft::_IBlockLabelAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2259)
inline _bstr_t TGDraft::_IBlockLabelAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2260)
inline TGFramework::ApplicationPtr TGDraft::_IBlockLabelAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2261)
inline long TGDraft::_IBlockLabelAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2262)
inline IDispatchPtr TGDraft::_IBlockLabelAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2263)
inline long TGDraft::_IBlockLabelAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2264)
inline long TGDraft::_IBlockLabelAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2265)
inline _bstr_t TGDraft::_IBlockLabelAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2266)
inline IDispatchPtr TGDraft::_IBlockLabelAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2267)
inline HRESULT TGDraft::_IBlockLabelAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2268)
inline HRESULT TGDraft::_IBlockLabelAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2269)
inline HRESULT TGDraft::_IBlockLabelAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2270)
inline HRESULT TGDraft::_IBlockLabelAuto::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    HRESULT _hr = raw_Move(XFrom, YFrom, XTo, YTo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2271)
inline HRESULT TGDraft::_IBlockLabelAuto::Scale ( double Factor ) {
    HRESULT _hr = raw_Scale(Factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2272)
inline HRESULT TGDraft::_IBlockLabelAuto::Rotate ( double Angle, double x, double y ) {
    HRESULT _hr = raw_Rotate(Angle, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2273)
inline HRESULT TGDraft::_IBlockLabelAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2274)
inline IDispatchPtr TGDraft::_IBlockLabelAuto::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Duplicate(XDistance, YDistance, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2275)
inline IDispatchPtr TGDraft::_IBlockLabelAuto::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Mirror(x1, y1, x2, y2, BooleanCopyFlag, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2276)
inline HRESULT TGDraft::_IBlockLabelAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2277)
inline HRESULT TGDraft::_IBlockLabelAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2278)
inline HRESULT TGDraft::_IBlockLabelAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2279)
inline HRESULT TGDraft::_IBlockLabelAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2280)
inline HRESULT TGDraft::_IBlockLabelAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface BlockLabels wrapper method implementations
//

#pragma implementation_key(2281)
inline TGFramework::ApplicationPtr TGDraft::BlockLabels::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2282)
inline IDispatchPtr TGDraft::BlockLabels::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2283)
inline long TGDraft::BlockLabels::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2284)
inline TGDraft::BlockLabelPtr TGDraft::BlockLabels::Item ( const _variant_t & Index ) {
    struct BlockLabel * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return BlockLabelPtr(_result, false);
}

#pragma implementation_key(2285)
inline TGDraft::BlockLabelPtr TGDraft::BlockLabels::Add ( _bstr_t Name, _bstr_t value, _bstr_t Description, double XOrigin, double YOrigin, enum BlockLabelOriginLocationConstants OriginLoc, VARIANT_BOOL VisibleInOccurrence, VARIANT_BOOL Global, VARIANT_BOOL Prompt, VARIANT_BOOL PositionLocked, double dAngle ) {
    struct BlockLabel * _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0008\x0008\x0005\x0005\x0003\x000b\x000b\x000b\x000b\x0005", (BSTR)Name, (BSTR)value, (BSTR)Description, XOrigin, YOrigin, OriginLoc, VisibleInOccurrence, Global, Prompt, PositionLocked, dAngle);
    return BlockLabelPtr(_result, false);
}

//
// interface _IBlockViewAuto wrapper method implementations
//

#pragma implementation_key(2286)
inline TGFramework::ApplicationPtr TGDraft::_IBlockViewAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2287)
inline IDispatchPtr TGDraft::_IBlockViewAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2288)
inline long TGDraft::_IBlockViewAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2289)
inline void TGDraft::_IBlockViewAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2290)
inline _bstr_t TGDraft::_IBlockViewAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2291)
inline IDispatchPtr TGDraft::_IBlockViewAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2292)
inline HRESULT TGDraft::_IBlockViewAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2293)
inline TGFrameworkSupport::Lines2dPtr TGDraft::_IBlockViewAuto::GetLines2d ( ) {
    struct TGFrameworkSupport::Lines2d * _result = 0;
    HRESULT _hr = get_Lines2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::Lines2dPtr(_result, false);
}

#pragma implementation_key(2294)
inline TGFrameworkSupport::Circles2dPtr TGDraft::_IBlockViewAuto::GetCircles2d ( ) {
    struct TGFrameworkSupport::Circles2d * _result = 0;
    HRESULT _hr = get_Circles2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::Circles2dPtr(_result, false);
}

#pragma implementation_key(2295)
inline TGFrameworkSupport::Arcs2dPtr TGDraft::_IBlockViewAuto::GetArcs2d ( ) {
    struct TGFrameworkSupport::Arcs2d * _result = 0;
    HRESULT _hr = get_Arcs2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::Arcs2dPtr(_result, false);
}

#pragma implementation_key(2296)
inline TGFrameworkSupport::Ellipses2dPtr TGDraft::_IBlockViewAuto::GetEllipses2d ( ) {
    struct TGFrameworkSupport::Ellipses2d * _result = 0;
    HRESULT _hr = get_Ellipses2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::Ellipses2dPtr(_result, false);
}

#pragma implementation_key(2297)
inline TGFrameworkSupport::BSplineCurves2dPtr TGDraft::_IBlockViewAuto::GetBsplineCurves2d ( ) {
    struct TGFrameworkSupport::BSplineCurves2d * _result = 0;
    HRESULT _hr = get_BsplineCurves2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::BSplineCurves2dPtr(_result, false);
}

#pragma implementation_key(2298)
inline TGFrameworkSupport::Points2dPtr TGDraft::_IBlockViewAuto::GetPoints2d ( ) {
    struct TGFrameworkSupport::Points2d * _result = 0;
    HRESULT _hr = get_Points2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::Points2dPtr(_result, false);
}

#pragma implementation_key(2299)
inline TGFrameworkSupport::EllipticalArcs2dPtr TGDraft::_IBlockViewAuto::GetEllipticalArcs2d ( ) {
    struct TGFrameworkSupport::EllipticalArcs2d * _result = 0;
    HRESULT _hr = get_EllipticalArcs2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::EllipticalArcs2dPtr(_result, false);
}

#pragma implementation_key(2300)
inline TGFrameworkSupport::Curves2dPtr TGDraft::_IBlockViewAuto::GetCurves2d ( ) {
    struct TGFrameworkSupport::Curves2d * _result = 0;
    HRESULT _hr = get_Curves2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::Curves2dPtr(_result, false);
}

#pragma implementation_key(2301)
inline TGFrameworkSupport::LineStrings2dPtr TGDraft::_IBlockViewAuto::GetLineStrings2d ( ) {
    struct TGFrameworkSupport::LineStrings2d * _result = 0;
    HRESULT _hr = get_LineStrings2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::LineStrings2dPtr(_result, false);
}

#pragma implementation_key(2302)
inline TGFrameworkSupport::ComplexStrings2dPtr TGDraft::_IBlockViewAuto::GetComplexStrings2d ( ) {
    struct TGFrameworkSupport::ComplexStrings2d * _result = 0;
    HRESULT _hr = get_ComplexStrings2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::ComplexStrings2dPtr(_result, false);
}

#pragma implementation_key(2303)
inline TGFrameworkSupport::Boundaries2dPtr TGDraft::_IBlockViewAuto::GetBoundaries2d ( ) {
    struct TGFrameworkSupport::Boundaries2d * _result = 0;
    HRESULT _hr = get_Boundaries2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::Boundaries2dPtr(_result, false);
}

#pragma implementation_key(2304)
inline TGFrameworkSupport::DimensionsPtr TGDraft::_IBlockViewAuto::GetDimensions ( ) {
    struct TGFrameworkSupport::Dimensions * _result = 0;
    HRESULT _hr = get_Dimensions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::DimensionsPtr(_result, false);
}

#pragma implementation_key(2305)
inline TGFrameworkSupport::LeadersPtr TGDraft::_IBlockViewAuto::GetLeaders ( ) {
    struct TGFrameworkSupport::Leaders * _result = 0;
    HRESULT _hr = get_Leaders(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::LeadersPtr(_result, false);
}

#pragma implementation_key(2306)
inline TGFrameworkSupport::BalloonsPtr TGDraft::_IBlockViewAuto::GetBalloons ( ) {
    struct TGFrameworkSupport::Balloons * _result = 0;
    HRESULT _hr = get_Balloons(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::BalloonsPtr(_result, false);
}

#pragma implementation_key(2307)
inline TGFrameworkSupport::TextBoxesPtr TGDraft::_IBlockViewAuto::GetTextBoxes ( ) {
    struct TGFrameworkSupport::TextBoxes * _result = 0;
    HRESULT _hr = get_TextBoxes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::TextBoxesPtr(_result, false);
}

#pragma implementation_key(2308)
inline TGFrameworkSupport::Relations2dPtr TGDraft::_IBlockViewAuto::GetRelations2d ( ) {
    struct TGFrameworkSupport::Relations2d * _result = 0;
    HRESULT _hr = get_Relations2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::Relations2dPtr(_result, false);
}

#pragma implementation_key(2309)
inline TGFrameworkSupport::SmartFrames2dPtr TGDraft::_IBlockViewAuto::GetSmartFrames2d ( ) {
    struct TGFrameworkSupport::SmartFrames2d * _result = 0;
    HRESULT _hr = get_SmartFrames2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::SmartFrames2dPtr(_result, false);
}

#pragma implementation_key(2310)
inline TGFrameworkSupport::DatumFramesPtr TGDraft::_IBlockViewAuto::GetDatumFrames ( ) {
    struct TGFrameworkSupport::DatumFrames * _result = 0;
    HRESULT _hr = get_DatumFrames(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::DatumFramesPtr(_result, false);
}

#pragma implementation_key(2311)
inline TGFrameworkSupport::FeatureControlFramesPtr TGDraft::_IBlockViewAuto::GetFeatureControlFrames ( ) {
    struct TGFrameworkSupport::FeatureControlFrames * _result = 0;
    HRESULT _hr = get_FeatureControlFrames(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::FeatureControlFramesPtr(_result, false);
}

#pragma implementation_key(2312)
inline TGFrameworkSupport::SurfaceFinishSymbolsPtr TGDraft::_IBlockViewAuto::GetSurfaceFinishSymbols ( ) {
    struct TGFrameworkSupport::SurfaceFinishSymbols * _result = 0;
    HRESULT _hr = get_SurfaceFinishSymbols(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::SurfaceFinishSymbolsPtr(_result, false);
}

#pragma implementation_key(2313)
inline TGFrameworkSupport::WeldSymbolsPtr TGDraft::_IBlockViewAuto::GetWeldSymbols ( ) {
    struct TGFrameworkSupport::WeldSymbols * _result = 0;
    HRESULT _hr = get_WeldSymbols(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::WeldSymbolsPtr(_result, false);
}

#pragma implementation_key(2314)
inline TGFrameworkSupport::CenterMarksPtr TGDraft::_IBlockViewAuto::GetCenterMarks ( ) {
    struct TGFrameworkSupport::CenterMarks * _result = 0;
    HRESULT _hr = get_CenterMarks(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::CenterMarksPtr(_result, false);
}

#pragma implementation_key(2315)
inline TGFrameworkSupport::CenterLinesPtr TGDraft::_IBlockViewAuto::GetCenterLines ( ) {
    struct TGFrameworkSupport::CenterLines * _result = 0;
    HRESULT _hr = get_CenterLines(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::CenterLinesPtr(_result, false);
}

#pragma implementation_key(2316)
inline TGFrameworkSupport::DatumTargetsPtr TGDraft::_IBlockViewAuto::GetDatumTargets ( ) {
    struct TGFrameworkSupport::DatumTargets * _result = 0;
    HRESULT _hr = get_DatumTargets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::DatumTargetsPtr(_result, false);
}

#pragma implementation_key(2317)
inline TGFrameworkSupport::PinSymbolsPtr TGDraft::_IBlockViewAuto::GetPinSymbols ( ) {
    struct TGFrameworkSupport::PinSymbols * _result = 0;
    HRESULT _hr = get_PinSymbols(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::PinSymbolsPtr(_result, false);
}

#pragma implementation_key(2318)
inline TGFrameworkSupport::DatumPointsPtr TGDraft::_IBlockViewAuto::GetDatumPoints ( ) {
    struct TGFrameworkSupport::DatumPoints * _result = 0;
    HRESULT _hr = get_DatumPoints(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::DatumPointsPtr(_result, false);
}

#pragma implementation_key(2319)
inline TGFrameworkSupport::CornerAnnotationsPtr TGDraft::_IBlockViewAuto::GetCornerAnnotations ( ) {
    struct TGFrameworkSupport::CornerAnnotations * _result = 0;
    HRESULT _hr = get_CornerAnnotations(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::CornerAnnotationsPtr(_result, false);
}

#pragma implementation_key(2320)
inline IDispatchPtr TGDraft::_IBlockViewAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2321)
inline VARIANT_BOOL TGDraft::_IBlockViewAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2322)
inline TGFrameworkSupport::BoltHoleCirclesPtr TGDraft::_IBlockViewAuto::GetBoltHoleCircles ( ) {
    struct TGFrameworkSupport::BoltHoleCircles * _result = 0;
    HRESULT _hr = get_BoltHoleCircles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::BoltHoleCirclesPtr(_result, false);
}

#pragma implementation_key(2323)
inline TGFrameworkSupport::ConnectorsPtr TGDraft::_IBlockViewAuto::GetConnectors ( ) {
    struct TGFrameworkSupport::Connectors * _result = 0;
    HRESULT _hr = get_Connectors(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::ConnectorsPtr(_result, false);
}

#pragma implementation_key(2324)
inline HRESULT TGDraft::_IBlockViewAuto::SetOrigin ( double x, double y ) {
    HRESULT _hr = raw_SetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2325)
inline HRESULT TGDraft::_IBlockViewAuto::GetOrigin ( double * x, double * y ) {
    HRESULT _hr = raw_GetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2326)
inline HRESULT TGDraft::_IBlockViewAuto::ReplaceGraphics ( const _variant_t & DeleteSelectedGraphics ) {
    HRESULT _hr = raw_ReplaceGraphics(DeleteSelectedGraphics);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2327)
inline HRESULT TGDraft::_IBlockViewAuto::UpdatePreview ( ) {
    HRESULT _hr = raw_UpdatePreview();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2328)
inline TGDraft::DrawingViewsPtr TGDraft::_IBlockViewAuto::GetDrawingViews ( ) {
    struct DrawingViews * _result = 0;
    HRESULT _hr = get_DrawingViews(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewsPtr(_result, false);
}

#pragma implementation_key(2329)
inline TGDraft::BlockOccurrencesPtr TGDraft::_IBlockViewAuto::GetBlockOccurrences ( ) {
    struct BlockOccurrences * _result = 0;
    HRESULT _hr = get_BlockOccurrences(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BlockOccurrencesPtr(_result, false);
}

#pragma implementation_key(2330)
inline TGDraft::BlockLabelsPtr TGDraft::_IBlockViewAuto::GetBlockLabels ( ) {
    struct BlockLabels * _result = 0;
    HRESULT _hr = get_BlockLabels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BlockLabelsPtr(_result, false);
}

#pragma implementation_key(2331)
inline TGFrameworkSupport::Images2dPtr TGDraft::_IBlockViewAuto::GetImages2d ( ) {
    struct TGFrameworkSupport::Images2d * _result = 0;
    HRESULT _hr = get_Images2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::Images2dPtr(_result, false);
}

//
// interface _IBlockLabelsAuto wrapper method implementations
//

#pragma implementation_key(2332)
inline TGFramework::ApplicationPtr TGDraft::_IBlockLabelsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2333)
inline IDispatchPtr TGDraft::_IBlockLabelsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2334)
inline long TGDraft::_IBlockLabelsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2335)
inline IUnknownPtr TGDraft::_IBlockLabelsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2336)
inline TGDraft::BlockLabelPtr TGDraft::_IBlockLabelsAuto::Item ( const _variant_t & Index ) {
    struct BlockLabel * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BlockLabelPtr(_result, false);
}

#pragma implementation_key(2337)
inline TGDraft::BlockLabelPtr TGDraft::_IBlockLabelsAuto::Add ( _bstr_t Name, _bstr_t value, _bstr_t Description, double XOrigin, double YOrigin, enum BlockLabelOriginLocationConstants OriginLoc, VARIANT_BOOL VisibleInOccurrence, VARIANT_BOOL Global, VARIANT_BOOL Prompt, VARIANT_BOOL PositionLocked, double dAngle ) {
    struct BlockLabel * _result = 0;
    HRESULT _hr = raw_Add(Name, value, Description, XOrigin, YOrigin, OriginLoc, VisibleInOccurrence, Global, Prompt, PositionLocked, dAngle, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BlockLabelPtr(_result, false);
}

//
// dispinterface Blocks wrapper method implementations
//

#pragma implementation_key(2338)
inline TGFramework::ApplicationPtr TGDraft::Blocks::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2339)
inline IDispatchPtr TGDraft::Blocks::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2340)
inline long TGDraft::Blocks::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2341)
inline TGDraft::BlockPtr TGDraft::Blocks::Item ( const _variant_t & Index ) {
    struct Block * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return BlockPtr(_result, false);
}

#pragma implementation_key(2342)
inline TGDraft::BlockPtr TGDraft::Blocks::Add ( _bstr_t Name, double XOrigin, double YOrigin, const _variant_t & ScaleDimsAndAnnot, const _variant_t & DeleteSelectedGraphics ) {
    struct Block * _result = 0;
    _com_dispatch_method(this, 0x6e, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0005\x0005\x080c\x080c", (BSTR)Name, XOrigin, YOrigin, &ScaleDimsAndAnnot, &DeleteSelectedGraphics);
    return BlockPtr(_result, false);
}

#pragma implementation_key(2343)
inline TGDraft::BlockPtr TGDraft::Blocks::CopyBlock ( struct Block * BlockToCopy ) {
    struct Block * _result = 0;
    _com_dispatch_method(this, 0x6f, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", BlockToCopy);
    return BlockPtr(_result, false);
}

#pragma implementation_key(2344)
inline TGDraft::BlockPtr TGDraft::Blocks::AddBlockByFile ( _bstr_t FileName ) {
    struct Block * _result = 0;
    _com_dispatch_method(this, 0x71, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008", (BSTR)FileName);
    return BlockPtr(_result, false);
}

#pragma implementation_key(2345)
inline TGDraft::BlockPtr TGDraft::Blocks::ReplaceBlock ( struct Block * BlockToCopy ) {
    struct Block * _result = 0;
    _com_dispatch_method(this, 0x72, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", BlockToCopy);
    return BlockPtr(_result, false);
}

//
// interface _IBlocksAuto wrapper method implementations
//

#pragma implementation_key(2346)
inline TGFramework::ApplicationPtr TGDraft::_IBlocksAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2347)
inline IDispatchPtr TGDraft::_IBlocksAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2348)
inline long TGDraft::_IBlocksAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2349)
inline IUnknownPtr TGDraft::_IBlocksAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2350)
inline TGDraft::BlockPtr TGDraft::_IBlocksAuto::Item ( const _variant_t & Index ) {
    struct Block * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BlockPtr(_result, false);
}

#pragma implementation_key(2351)
inline TGDraft::BlockPtr TGDraft::_IBlocksAuto::Add ( _bstr_t Name, double XOrigin, double YOrigin, const _variant_t & ScaleDimsAndAnnot, const _variant_t & DeleteSelectedGraphics ) {
    struct Block * _result = 0;
    HRESULT _hr = raw_Add(Name, XOrigin, YOrigin, ScaleDimsAndAnnot, DeleteSelectedGraphics, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BlockPtr(_result, false);
}

#pragma implementation_key(2352)
inline TGDraft::BlockPtr TGDraft::_IBlocksAuto::CopyBlock ( struct Block * BlockToCopy ) {
    struct Block * _result = 0;
    HRESULT _hr = raw_CopyBlock(BlockToCopy, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BlockPtr(_result, false);
}

#pragma implementation_key(2353)
inline TGDraft::BlockPtr TGDraft::_IBlocksAuto::AddBlockByFile ( _bstr_t FileName ) {
    struct Block * _result = 0;
    HRESULT _hr = raw_AddBlockByFile(FileName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BlockPtr(_result, false);
}

#pragma implementation_key(2354)
inline TGDraft::BlockPtr TGDraft::_IBlocksAuto::ReplaceBlock ( struct Block * BlockToCopy ) {
    struct Block * _result = 0;
    HRESULT _hr = raw_ReplaceBlock(BlockToCopy, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BlockPtr(_result, false);
}

//
// dispinterface DraftFilePreferences wrapper method implementations
//

#pragma implementation_key(2355)
inline TGFramework::ApplicationPtr TGDraft::DraftFilePreferences::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2356)
inline IDispatchPtr TGDraft::DraftFilePreferences::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2357)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVShowHiddenEdgesInOrthographicViews ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2358)
inline void TGDraft::DraftFilePreferences::PutDVShowHiddenEdgesInOrthographicViews ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2359)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVShowHiddenEdgesInPictorialViews ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2360)
inline void TGDraft::DraftFilePreferences::PutDVShowHiddenEdgesInPictorialViews ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2361)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVShowTangentEdgesInOrthographicViews ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2362)
inline void TGDraft::DraftFilePreferences::PutDVShowTangentEdgesInOrthographicViews ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2363)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVShowTangentEdgesInPictorialViews ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2364)
inline void TGDraft::DraftFilePreferences::PutDVShowTangentEdgesInPictorialViews ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2365)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVShowHiddenOtherEdgesInOrthographicViews ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2366)
inline void TGDraft::DraftFilePreferences::PutDVShowHiddenOtherEdgesInOrthographicViews ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2367)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVShowHiddenOtherEdgesInPictorialViews ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2368)
inline void TGDraft::DraftFilePreferences::PutDVShowHiddenOtherEdgesInPictorialViews ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2369)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVShowHiddenEdgesInSectionViews ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2370)
inline void TGDraft::DraftFilePreferences::PutDVShowHiddenEdgesInSectionViews ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2371)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVShowHiddenTangentEdges ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2372)
inline void TGDraft::DraftFilePreferences::PutDVShowHiddenTangentEdges ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2373)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVShowHiddenOtherTangentEdges ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2374)
inline void TGDraft::DraftFilePreferences::PutDVShowHiddenOtherTangentEdges ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2375)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVShowThreadsInSectionOnlyViews ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2376)
inline void TGDraft::DraftFilePreferences::PutDVShowThreadsInSectionOnlyViews ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2377)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVHatchRibsInSectionViews ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2378)
inline void TGDraft::DraftFilePreferences::PutDVHatchRibsInSectionViews ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2379)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVShowCenterlines ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2380)
inline void TGDraft::DraftFilePreferences::PutDVShowCenterlines ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2381)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVShowFlowlines ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x73, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2382)
inline void TGDraft::DraftFilePreferences::PutDVShowFlowlines ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x73, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2383)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVShowDetailViewBorders ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x74, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2384)
inline void TGDraft::DraftFilePreferences::PutDVShowDetailViewBorders ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x74, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2385)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVRetrieveDimensionsOnViewCreation ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x75, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2386)
inline void TGDraft::DraftFilePreferences::PutDVRetrieveDimensionsOnViewCreation ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x75, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2387)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVShowTubeCenterlines ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2388)
inline void TGDraft::DraftFilePreferences::PutDVShowTubeCenterlines ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2389)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVShowFillStyleInSectionViews ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2390)
inline void TGDraft::DraftFilePreferences::PutDVShowFillStyleInSectionViews ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2391)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVDeriveFillStyleFromPart ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2392)
inline void TGDraft::DraftFilePreferences::PutDVDeriveFillStyleFromPart ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2393)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVCroppedEdgeProcessing ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2394)
inline void TGDraft::DraftFilePreferences::PutDVCroppedEdgeProcessing ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2395)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVConfigChangesMakeViewsOutOfDate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2396)
inline void TGDraft::DraftFilePreferences::PutDVConfigChangesMakeViewsOutOfDate ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x7a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2397)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVDeriveReferenceFromAssembly ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2398)
inline void TGDraft::DraftFilePreferences::PutDVDeriveReferenceFromAssembly ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x7b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2399)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVShowEdgesOfCuttingPlaneVertices ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2400)
inline void TGDraft::DraftFilePreferences::PutDVShowEdgesOfCuttingPlaneVertices ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2401)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVIncludePMIDimensions ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2402)
inline void TGDraft::DraftFilePreferences::PutDVIncludePMIDimensions ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x7d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2403)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVIncludePMIAnnotations ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2404)
inline void TGDraft::DraftFilePreferences::PutDVIncludePMIAnnotations ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x7e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2405)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVShowBoundaryEdges ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2406)
inline void TGDraft::DraftFilePreferences::PutDVShowBoundaryEdges ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x7f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2407)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVDetailEnvelopeDisplayAsCircle ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x80, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2408)
inline void TGDraft::DraftFilePreferences::PutDVDetailEnvelopeDisplayAsCircle ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x80, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2409)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVShowDeformationFeatureProfiles ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2410)
inline void TGDraft::DraftFilePreferences::PutDVShowDeformationFeatureProfiles ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2411)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVShowDeformationFeatureOrigins ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x82, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2412)
inline void TGDraft::DraftFilePreferences::PutDVShowDeformationFeatureOrigins ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x82, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2413)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVDeriveBendDirectionFromView ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x83, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2414)
inline void TGDraft::DraftFilePreferences::PutDVDeriveBendDirectionFromView ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x83, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2415)
inline enum TGDraft::DrawingViewProjectionAngleConstants TGDraft::DraftFilePreferences::GetDVProjectionAngle ( ) {
    enum DrawingViewProjectionAngleConstants _result;
    _com_dispatch_method(this, 0x84, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2416)
inline void TGDraft::DraftFilePreferences::PutDVProjectionAngle ( enum DrawingViewProjectionAngleConstants _arg1 ) {
    _com_dispatch_method(this, 0x84, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2417)
inline enum TGDraft::DVThreadDisplayModeConstants TGDraft::DraftFilePreferences::GetDVThreadDisplayMode ( ) {
    enum DVThreadDisplayModeConstants _result;
    _com_dispatch_method(this, 0x85, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2418)
inline void TGDraft::DraftFilePreferences::PutDVThreadDisplayMode ( enum DVThreadDisplayModeConstants _arg1 ) {
    _com_dispatch_method(this, 0x85, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2419)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetViewerDataIncludeWorkingSheets ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x86, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2420)
inline void TGDraft::DraftFilePreferences::PutViewerDataIncludeWorkingSheets ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x86, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2421)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetViewerDataInclude2DModelSheet ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x87, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2422)
inline void TGDraft::DraftFilePreferences::PutViewerDataInclude2DModelSheet ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x87, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2423)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetViewerDataIncludeBackgroundSheets ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x88, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2424)
inline void TGDraft::DraftFilePreferences::PutViewerDataIncludeBackgroundSheets ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x88, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2425)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVReferenceComponentsByConfigurations ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x89, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2426)
inline void TGDraft::DraftFilePreferences::PutDVReferenceComponentsByConfigurations ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x89, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2427)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVShowFillStyleInSectionWeldBeads ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2428)
inline void TGDraft::DraftFilePreferences::PutDVShowFillStyleInSectionWeldBeads ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2429)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVSolidFillSectionWeldBeads ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2430)
inline void TGDraft::DraftFilePreferences::PutDVSolidFillSectionWeldBeads ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2431)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVEnableAlternatingHatchSpacing ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2432)
inline void TGDraft::DraftFilePreferences::PutDVEnableAlternatingHatchSpacing ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2433)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVEnableAlternatingHatchAngle ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2434)
inline void TGDraft::DraftFilePreferences::PutDVEnableAlternatingHatchAngle ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2435)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVShowHiddenEdgesInConnectorViews ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2436)
inline void TGDraft::DraftFilePreferences::PutDVShowHiddenEdgesInConnectorViews ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2437)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetDVEnableMultiCoreDrawingViewProcessing ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x9c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2438)
inline void TGDraft::DraftFilePreferences::PutDVEnableMultiCoreDrawingViewProcessing ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x9c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2439)
inline int TGDraft::DraftFilePreferences::GetDVNailboardSetDisplayWhiteWiresAs ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x8f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2440)
inline void TGDraft::DraftFilePreferences::PutDVNailboardSetDisplayWhiteWiresAs ( int _arg1 ) {
    _com_dispatch_method(this, 0x8f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2441)
inline _bstr_t TGDraft::DraftFilePreferences::GetDVStyleNameFromTable ( enum DrawingViewStyleMappingElementType Element ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x90, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x0003", Element);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2442)
inline void TGDraft::DraftFilePreferences::PutDVStyleNameFromTable ( enum DrawingViewStyleMappingElementType Element, _bstr_t _arg2 ) {
    _com_dispatch_method(this, 0x90, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0008", Element, (BSTR)_arg2);
}

#pragma implementation_key(2443)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetNumberSheetGroupsSeparately ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x91, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2444)
inline void TGDraft::DraftFilePreferences::PutNumberSheetGroupsSeparately ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x91, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2445)
inline enum TGDraft::GridDisplayOptionsConstants TGDraft::DraftFilePreferences::GetGRIDDisplayGridMode ( ) {
    enum GridDisplayOptionsConstants _result;
    _com_dispatch_method(this, 0x92, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2446)
inline void TGDraft::DraftFilePreferences::PutGRIDDisplayGridMode ( enum GridDisplayOptionsConstants _arg1 ) {
    _com_dispatch_method(this, 0x92, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2447)
inline enum TGDraft::GridSnapOptionsConstants TGDraft::DraftFilePreferences::GetGRIDSnapToGridMode ( ) {
    enum GridSnapOptionsConstants _result;
    _com_dispatch_method(this, 0x93, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2448)
inline void TGDraft::DraftFilePreferences::PutGRIDSnapToGridMode ( enum GridSnapOptionsConstants _arg1 ) {
    _com_dispatch_method(this, 0x93, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2449)
inline double TGDraft::DraftFilePreferences::GetGRIDAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x94, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2450)
inline void TGDraft::DraftFilePreferences::PutGRIDAngle ( double _arg1 ) {
    _com_dispatch_method(this, 0x94, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2451)
inline double TGDraft::DraftFilePreferences::GetGRIDMajorLine ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x95, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2452)
inline void TGDraft::DraftFilePreferences::PutGRIDMajorLine ( double _arg1 ) {
    _com_dispatch_method(this, 0x95, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2453)
inline int TGDraft::DraftFilePreferences::GetGRIDMinorSpaces ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x96, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2454)
inline void TGDraft::DraftFilePreferences::PutGRIDMinorSpaces ( int _arg1 ) {
    _com_dispatch_method(this, 0x96, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2455)
inline _bstr_t TGDraft::DraftFilePreferences::GetDVEdgeStyleName ( enum DrawingViewEdgeStyleMappingEdgeType Element ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x97, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x0003", Element);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2456)
inline void TGDraft::DraftFilePreferences::PutDVEdgeStyleName ( enum DrawingViewEdgeStyleMappingEdgeType Element, _bstr_t _arg2 ) {
    _com_dispatch_method(this, 0x97, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0008", Element, (BSTR)_arg2);
}

#pragma implementation_key(2457)
inline _bstr_t TGDraft::DraftFilePreferences::GetCenterOfMassBlockName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x98, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2458)
inline void TGDraft::DraftFilePreferences::PutCenterOfMassBlockName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x98, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2459)
inline _bstr_t TGDraft::DraftFilePreferences::GetCoordinateSystemBlockName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x99, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2460)
inline void TGDraft::DraftFilePreferences::PutCoordinateSystemBlockName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x99, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2461)
inline _bstr_t TGDraft::DraftFilePreferences::GetBendUpString ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x9a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2462)
inline void TGDraft::DraftFilePreferences::PutBendUpString ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2463)
inline _bstr_t TGDraft::DraftFilePreferences::GetBendDownString ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x9b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2464)
inline void TGDraft::DraftFilePreferences::PutBendDownString ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2465)
inline VARIANT_BOOL TGDraft::DraftFilePreferences::GetMaintainAssociativityForRetrievedDimensions ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x9d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2466)
inline void TGDraft::DraftFilePreferences::PutMaintainAssociativityForRetrievedDimensions ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x9d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

//
// interface _IDraftFilePreferencesAuto wrapper method implementations
//

#pragma implementation_key(2467)
inline TGFramework::ApplicationPtr TGDraft::_IDraftFilePreferencesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2468)
inline IDispatchPtr TGDraft::_IDraftFilePreferencesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2469)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVShowHiddenEdgesInOrthographicViews ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVShowHiddenEdgesInOrthographicViews(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2470)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVShowHiddenEdgesInOrthographicViews ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVShowHiddenEdgesInOrthographicViews(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2471)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVShowHiddenEdgesInPictorialViews ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVShowHiddenEdgesInPictorialViews(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2472)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVShowHiddenEdgesInPictorialViews ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVShowHiddenEdgesInPictorialViews(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2473)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVShowTangentEdgesInOrthographicViews ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVShowTangentEdgesInOrthographicViews(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2474)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVShowTangentEdgesInOrthographicViews ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVShowTangentEdgesInOrthographicViews(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2475)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVShowTangentEdgesInPictorialViews ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVShowTangentEdgesInPictorialViews(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2476)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVShowTangentEdgesInPictorialViews ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVShowTangentEdgesInPictorialViews(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2477)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVShowHiddenOtherEdgesInOrthographicViews ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVShowHiddenOtherEdgesInOrthographicViews(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2478)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVShowHiddenOtherEdgesInOrthographicViews ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVShowHiddenOtherEdgesInOrthographicViews(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2479)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVShowHiddenOtherEdgesInPictorialViews ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVShowHiddenOtherEdgesInPictorialViews(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2480)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVShowHiddenOtherEdgesInPictorialViews ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVShowHiddenOtherEdgesInPictorialViews(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2481)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVShowHiddenEdgesInSectionViews ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVShowHiddenEdgesInSectionViews(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2482)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVShowHiddenEdgesInSectionViews ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVShowHiddenEdgesInSectionViews(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2483)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVShowHiddenTangentEdges ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVShowHiddenTangentEdges(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2484)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVShowHiddenTangentEdges ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVShowHiddenTangentEdges(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2485)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVShowHiddenOtherTangentEdges ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVShowHiddenOtherTangentEdges(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2486)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVShowHiddenOtherTangentEdges ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVShowHiddenOtherTangentEdges(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2487)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVShowThreadsInSectionOnlyViews ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVShowThreadsInSectionOnlyViews(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2488)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVShowThreadsInSectionOnlyViews ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVShowThreadsInSectionOnlyViews(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2489)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVHatchRibsInSectionViews ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVHatchRibsInSectionViews(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2490)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVHatchRibsInSectionViews ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVHatchRibsInSectionViews(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2491)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVShowCenterlines ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVShowCenterlines(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2492)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVShowCenterlines ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVShowCenterlines(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2493)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVShowFlowlines ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVShowFlowlines(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2494)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVShowFlowlines ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVShowFlowlines(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2495)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVShowDetailViewBorders ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVShowDetailViewBorders(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2496)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVShowDetailViewBorders ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVShowDetailViewBorders(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2497)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVRetrieveDimensionsOnViewCreation ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVRetrieveDimensionsOnViewCreation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2498)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVRetrieveDimensionsOnViewCreation ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVRetrieveDimensionsOnViewCreation(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2499)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVShowTubeCenterlines ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVShowTubeCenterlines(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2500)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVShowTubeCenterlines ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVShowTubeCenterlines(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2501)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVShowFillStyleInSectionViews ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVShowFillStyleInSectionViews(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2502)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVShowFillStyleInSectionViews ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVShowFillStyleInSectionViews(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2503)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVDeriveFillStyleFromPart ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVDeriveFillStyleFromPart(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2504)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVDeriveFillStyleFromPart ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVDeriveFillStyleFromPart(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2505)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVCroppedEdgeProcessing ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVCroppedEdgeProcessing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2506)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVCroppedEdgeProcessing ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVCroppedEdgeProcessing(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2507)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVConfigChangesMakeViewsOutOfDate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVConfigChangesMakeViewsOutOfDate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2508)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVConfigChangesMakeViewsOutOfDate ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVConfigChangesMakeViewsOutOfDate(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2509)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVDeriveReferenceFromAssembly ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVDeriveReferenceFromAssembly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2510)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVDeriveReferenceFromAssembly ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVDeriveReferenceFromAssembly(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2511)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVShowEdgesOfCuttingPlaneVertices ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVShowEdgesOfCuttingPlaneVertices(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2512)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVShowEdgesOfCuttingPlaneVertices ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVShowEdgesOfCuttingPlaneVertices(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2513)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVIncludePMIDimensions ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVIncludePMIDimensions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2514)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVIncludePMIDimensions ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVIncludePMIDimensions(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2515)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVIncludePMIAnnotations ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVIncludePMIAnnotations(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2516)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVIncludePMIAnnotations ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVIncludePMIAnnotations(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2517)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVShowBoundaryEdges ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVShowBoundaryEdges(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2518)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVShowBoundaryEdges ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVShowBoundaryEdges(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2519)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVDetailEnvelopeDisplayAsCircle ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVDetailEnvelopeDisplayAsCircle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2520)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVDetailEnvelopeDisplayAsCircle ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVDetailEnvelopeDisplayAsCircle(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2521)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVShowDeformationFeatureProfiles ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVShowDeformationFeatureProfiles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2522)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVShowDeformationFeatureProfiles ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVShowDeformationFeatureProfiles(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2523)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVShowDeformationFeatureOrigins ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVShowDeformationFeatureOrigins(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2524)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVShowDeformationFeatureOrigins ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVShowDeformationFeatureOrigins(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2525)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVDeriveBendDirectionFromView ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVDeriveBendDirectionFromView(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2526)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVDeriveBendDirectionFromView ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVDeriveBendDirectionFromView(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2527)
inline enum TGDraft::DrawingViewProjectionAngleConstants TGDraft::_IDraftFilePreferencesAuto::GetDVProjectionAngle ( ) {
    enum DrawingViewProjectionAngleConstants _result;
    HRESULT _hr = get_DVProjectionAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2528)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVProjectionAngle ( enum DrawingViewProjectionAngleConstants value ) {
    HRESULT _hr = put_DVProjectionAngle(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2529)
inline enum TGDraft::DVThreadDisplayModeConstants TGDraft::_IDraftFilePreferencesAuto::GetDVThreadDisplayMode ( ) {
    enum DVThreadDisplayModeConstants _result;
    HRESULT _hr = get_DVThreadDisplayMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2530)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVThreadDisplayMode ( enum DVThreadDisplayModeConstants value ) {
    HRESULT _hr = put_DVThreadDisplayMode(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2531)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetViewerDataIncludeWorkingSheets ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ViewerDataIncludeWorkingSheets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2532)
inline void TGDraft::_IDraftFilePreferencesAuto::PutViewerDataIncludeWorkingSheets ( VARIANT_BOOL value ) {
    HRESULT _hr = put_ViewerDataIncludeWorkingSheets(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2533)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetViewerDataInclude2DModelSheet ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ViewerDataInclude2DModelSheet(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2534)
inline void TGDraft::_IDraftFilePreferencesAuto::PutViewerDataInclude2DModelSheet ( VARIANT_BOOL value ) {
    HRESULT _hr = put_ViewerDataInclude2DModelSheet(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2535)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetViewerDataIncludeBackgroundSheets ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ViewerDataIncludeBackgroundSheets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2536)
inline void TGDraft::_IDraftFilePreferencesAuto::PutViewerDataIncludeBackgroundSheets ( VARIANT_BOOL value ) {
    HRESULT _hr = put_ViewerDataIncludeBackgroundSheets(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2537)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVReferenceComponentsByConfigurations ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVReferenceComponentsByConfigurations(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2538)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVReferenceComponentsByConfigurations ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVReferenceComponentsByConfigurations(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2539)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVShowFillStyleInSectionWeldBeads ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVShowFillStyleInSectionWeldBeads(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2540)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVShowFillStyleInSectionWeldBeads ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVShowFillStyleInSectionWeldBeads(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2541)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVSolidFillSectionWeldBeads ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVSolidFillSectionWeldBeads(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2542)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVSolidFillSectionWeldBeads ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVSolidFillSectionWeldBeads(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2543)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVEnableAlternatingHatchSpacing ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVEnableAlternatingHatchSpacing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2544)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVEnableAlternatingHatchSpacing ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVEnableAlternatingHatchSpacing(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2545)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVEnableAlternatingHatchAngle ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVEnableAlternatingHatchAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2546)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVEnableAlternatingHatchAngle ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVEnableAlternatingHatchAngle(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2547)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVShowHiddenEdgesInConnectorViews ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVShowHiddenEdgesInConnectorViews(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2548)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVShowHiddenEdgesInConnectorViews ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVShowHiddenEdgesInConnectorViews(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2549)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetDVEnableMultiCoreDrawingViewProcessing ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DVEnableMultiCoreDrawingViewProcessing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2550)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVEnableMultiCoreDrawingViewProcessing ( VARIANT_BOOL value ) {
    HRESULT _hr = put_DVEnableMultiCoreDrawingViewProcessing(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2551)
inline int TGDraft::_IDraftFilePreferencesAuto::GetDVNailboardSetDisplayWhiteWiresAs ( ) {
    int _result = 0;
    HRESULT _hr = get_DVNailboardSetDisplayWhiteWiresAs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2552)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVNailboardSetDisplayWhiteWiresAs ( int value ) {
    HRESULT _hr = put_DVNailboardSetDisplayWhiteWiresAs(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2553)
inline _bstr_t TGDraft::_IDraftFilePreferencesAuto::GetDVStyleNameFromTable ( enum DrawingViewStyleMappingElementType Element ) {
    BSTR _result = 0;
    HRESULT _hr = get_DVStyleNameFromTable(Element, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2554)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVStyleNameFromTable ( enum DrawingViewStyleMappingElementType Element, _bstr_t StyleName ) {
    HRESULT _hr = put_DVStyleNameFromTable(Element, StyleName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2555)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetNumberSheetGroupsSeparately ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_NumberSheetGroupsSeparately(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2556)
inline void TGDraft::_IDraftFilePreferencesAuto::PutNumberSheetGroupsSeparately ( VARIANT_BOOL value ) {
    HRESULT _hr = put_NumberSheetGroupsSeparately(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2557)
inline enum TGDraft::GridDisplayOptionsConstants TGDraft::_IDraftFilePreferencesAuto::GetGRIDDisplayGridMode ( ) {
    enum GridDisplayOptionsConstants _result;
    HRESULT _hr = get_GRIDDisplayGridMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2558)
inline void TGDraft::_IDraftFilePreferencesAuto::PutGRIDDisplayGridMode ( enum GridDisplayOptionsConstants value ) {
    HRESULT _hr = put_GRIDDisplayGridMode(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2559)
inline enum TGDraft::GridSnapOptionsConstants TGDraft::_IDraftFilePreferencesAuto::GetGRIDSnapToGridMode ( ) {
    enum GridSnapOptionsConstants _result;
    HRESULT _hr = get_GRIDSnapToGridMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2560)
inline void TGDraft::_IDraftFilePreferencesAuto::PutGRIDSnapToGridMode ( enum GridSnapOptionsConstants value ) {
    HRESULT _hr = put_GRIDSnapToGridMode(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2561)
inline double TGDraft::_IDraftFilePreferencesAuto::GetGRIDAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_GRIDAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2562)
inline void TGDraft::_IDraftFilePreferencesAuto::PutGRIDAngle ( double value ) {
    HRESULT _hr = put_GRIDAngle(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2563)
inline double TGDraft::_IDraftFilePreferencesAuto::GetGRIDMajorLine ( ) {
    double _result = 0;
    HRESULT _hr = get_GRIDMajorLine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2564)
inline void TGDraft::_IDraftFilePreferencesAuto::PutGRIDMajorLine ( double value ) {
    HRESULT _hr = put_GRIDMajorLine(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2565)
inline int TGDraft::_IDraftFilePreferencesAuto::GetGRIDMinorSpaces ( ) {
    int _result = 0;
    HRESULT _hr = get_GRIDMinorSpaces(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2566)
inline void TGDraft::_IDraftFilePreferencesAuto::PutGRIDMinorSpaces ( int value ) {
    HRESULT _hr = put_GRIDMinorSpaces(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2567)
inline _bstr_t TGDraft::_IDraftFilePreferencesAuto::GetDVEdgeStyleName ( enum DrawingViewEdgeStyleMappingEdgeType Element ) {
    BSTR _result = 0;
    HRESULT _hr = get_DVEdgeStyleName(Element, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2568)
inline void TGDraft::_IDraftFilePreferencesAuto::PutDVEdgeStyleName ( enum DrawingViewEdgeStyleMappingEdgeType Element, _bstr_t StyleName ) {
    HRESULT _hr = put_DVEdgeStyleName(Element, StyleName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2569)
inline _bstr_t TGDraft::_IDraftFilePreferencesAuto::GetCenterOfMassBlockName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CenterOfMassBlockName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2570)
inline void TGDraft::_IDraftFilePreferencesAuto::PutCenterOfMassBlockName ( _bstr_t value ) {
    HRESULT _hr = put_CenterOfMassBlockName(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2571)
inline _bstr_t TGDraft::_IDraftFilePreferencesAuto::GetCoordinateSystemBlockName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CoordinateSystemBlockName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2572)
inline void TGDraft::_IDraftFilePreferencesAuto::PutCoordinateSystemBlockName ( _bstr_t value ) {
    HRESULT _hr = put_CoordinateSystemBlockName(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2573)
inline _bstr_t TGDraft::_IDraftFilePreferencesAuto::GetBendUpString ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BendUpString(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2574)
inline void TGDraft::_IDraftFilePreferencesAuto::PutBendUpString ( _bstr_t value ) {
    HRESULT _hr = put_BendUpString(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2575)
inline _bstr_t TGDraft::_IDraftFilePreferencesAuto::GetBendDownString ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BendDownString(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2576)
inline void TGDraft::_IDraftFilePreferencesAuto::PutBendDownString ( _bstr_t value ) {
    HRESULT _hr = put_BendDownString(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2577)
inline VARIANT_BOOL TGDraft::_IDraftFilePreferencesAuto::GetMaintainAssociativityForRetrievedDimensions ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MaintainAssociativityForRetrievedDimensions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2578)
inline void TGDraft::_IDraftFilePreferencesAuto::PutMaintainAssociativityForRetrievedDimensions ( VARIANT_BOOL value ) {
    HRESULT _hr = put_MaintainAssociativityForRetrievedDimensions(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// dispinterface SheetGroups wrapper method implementations
//

#pragma implementation_key(2579)
inline TGFramework::ApplicationPtr TGDraft::SheetGroups::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2580)
inline IDispatchPtr TGDraft::SheetGroups::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2581)
inline long TGDraft::SheetGroups::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2582)
inline TGDraft::SheetGroupPtr TGDraft::SheetGroups::Item ( const _variant_t & Index ) {
    struct SheetGroup * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return SheetGroupPtr(_result, false);
}

//
// dispinterface SheetGroup wrapper method implementations
//

#pragma implementation_key(2583)
inline TGFramework::ApplicationPtr TGDraft::SheetGroup::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2584)
inline IDispatchPtr TGDraft::SheetGroup::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2585)
inline _bstr_t TGDraft::SheetGroup::GetKey ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2586)
inline IDispatchPtr TGDraft::SheetGroup::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2587)
inline HRESULT TGDraft::SheetGroup::Delete ( ) {
    return _com_dispatch_method(this, 0x69, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2588)
inline TGDraft::SheetGroupSheetsPtr TGDraft::SheetGroup::GetSheets ( ) {
    struct SheetGroupSheets * _result = 0;
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SheetGroupSheetsPtr(_result, false);
}

//
// interface _ISheetGroupsAuto wrapper method implementations
//

#pragma implementation_key(2589)
inline TGFramework::ApplicationPtr TGDraft::_ISheetGroupsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2590)
inline IDispatchPtr TGDraft::_ISheetGroupsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2591)
inline long TGDraft::_ISheetGroupsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2592)
inline TGDraft::SheetGroupPtr TGDraft::_ISheetGroupsAuto::Item ( const _variant_t & Index ) {
    struct SheetGroup * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SheetGroupPtr(_result, false);
}

#pragma implementation_key(2593)
inline IUnknownPtr TGDraft::_ISheetGroupsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

//
// dispinterface SheetGroupSheets wrapper method implementations
//

#pragma implementation_key(2594)
inline TGFramework::ApplicationPtr TGDraft::SheetGroupSheets::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2595)
inline IDispatchPtr TGDraft::SheetGroupSheets::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2596)
inline long TGDraft::SheetGroupSheets::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2597)
inline TGDraft::SheetPtr TGDraft::SheetGroupSheets::Item ( const _variant_t & Index ) {
    struct Sheet * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return SheetPtr(_result, false);
}

//
// interface _ISheetGroupAuto wrapper method implementations
//

#pragma implementation_key(2598)
inline TGFramework::ApplicationPtr TGDraft::_ISheetGroupAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2599)
inline IDispatchPtr TGDraft::_ISheetGroupAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2600)
inline _bstr_t TGDraft::_ISheetGroupAuto::GetKey ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2601)
inline IDispatchPtr TGDraft::_ISheetGroupAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2602)
inline HRESULT TGDraft::_ISheetGroupAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2603)
inline TGDraft::SheetGroupSheetsPtr TGDraft::_ISheetGroupAuto::GetSheets ( ) {
    struct SheetGroupSheets * _result = 0;
    HRESULT _hr = get_Sheets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SheetGroupSheetsPtr(_result, false);
}

//
// dispinterface Sheet wrapper method implementations
//

#pragma implementation_key(2604)
inline TGFramework::ApplicationPtr TGDraft::Sheet::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2605)
inline IDispatchPtr TGDraft::Sheet::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2606)
inline TGFrameworkSupport::DrawingObjectsPtr TGDraft::Sheet::GetDrawingObjects ( ) {
    struct TGFrameworkSupport::DrawingObjects * _result = 0;
    _com_dispatch_method(this, 0x6e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::DrawingObjectsPtr(_result, false);
}

#pragma implementation_key(2607)
inline long TGDraft::Sheet::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2608)
inline _bstr_t TGDraft::Sheet::GetKey ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2609)
inline void TGDraft::Sheet::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2610)
inline _bstr_t TGDraft::Sheet::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2611)
inline IDispatchPtr TGDraft::Sheet::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2612)
inline TGDraft::SectionPtr TGDraft::Sheet::GetSection ( ) {
    struct Section * _result = 0;
    _com_dispatch_method(this, 0x7d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SectionPtr(_result, false);
}

#pragma implementation_key(2613)
inline enum TGDraft::SheetSectionTypeConstants TGDraft::Sheet::GetSectionType ( ) {
    enum SheetSectionTypeConstants _result;
    _com_dispatch_method(this, 0x82, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2614)
inline TGDraft::SheetSetupPtr TGDraft::Sheet::GetSheetSetup ( ) {
    struct SheetSetup * _result = 0;
    _com_dispatch_method(this, 0x7b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SheetSetupPtr(_result, false);
}

#pragma implementation_key(2615)
inline long TGDraft::Sheet::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2616)
inline void TGDraft::Sheet::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2617)
inline VARIANT_BOOL TGDraft::Sheet::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2618)
inline TGDraft::SheetPtr TGDraft::Sheet::GetBackground ( ) {
    struct Sheet * _result = 0;
    _com_dispatch_method(this, 0x80, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SheetPtr(_result, false);
}

#pragma implementation_key(2619)
inline void TGDraft::Sheet::PutBackground ( struct Sheet * _arg1 ) {
    _com_dispatch_method(this, 0x80, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(2620)
inline void TGDraft::Sheet::PutBackgroundVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2621)
inline VARIANT_BOOL TGDraft::Sheet::GetBackgroundVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2622)
inline HRESULT TGDraft::Sheet::Activate ( ) {
    return _com_dispatch_method(this, 0x73, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2623)
inline HRESULT TGDraft::Sheet::Delete ( ) {
    return _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2624)
inline TGFrameworkSupport::Lines2dPtr TGDraft::Sheet::GetLines2d ( ) {
    struct TGFrameworkSupport::Lines2d * _result = 0;
    _com_dispatch_method(this, 0x1001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::Lines2dPtr(_result, false);
}

#pragma implementation_key(2625)
inline TGFrameworkSupport::Circles2dPtr TGDraft::Sheet::GetCircles2d ( ) {
    struct TGFrameworkSupport::Circles2d * _result = 0;
    _com_dispatch_method(this, 0x1002, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::Circles2dPtr(_result, false);
}

#pragma implementation_key(2626)
inline TGFrameworkSupport::Arcs2dPtr TGDraft::Sheet::GetArcs2d ( ) {
    struct TGFrameworkSupport::Arcs2d * _result = 0;
    _com_dispatch_method(this, 0x1003, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::Arcs2dPtr(_result, false);
}

#pragma implementation_key(2627)
inline TGFrameworkSupport::Ellipses2dPtr TGDraft::Sheet::GetEllipses2d ( ) {
    struct TGFrameworkSupport::Ellipses2d * _result = 0;
    _com_dispatch_method(this, 0x1004, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::Ellipses2dPtr(_result, false);
}

#pragma implementation_key(2628)
inline TGFrameworkSupport::BSplineCurves2dPtr TGDraft::Sheet::GetBsplineCurves2d ( ) {
    struct TGFrameworkSupport::BSplineCurves2d * _result = 0;
    _com_dispatch_method(this, 0x1005, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::BSplineCurves2dPtr(_result, false);
}

#pragma implementation_key(2629)
inline TGFrameworkSupport::Points2dPtr TGDraft::Sheet::GetPoints2d ( ) {
    struct TGFrameworkSupport::Points2d * _result = 0;
    _com_dispatch_method(this, 0x1006, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::Points2dPtr(_result, false);
}

#pragma implementation_key(2630)
inline TGFrameworkSupport::EllipticalArcs2dPtr TGDraft::Sheet::GetEllipticalArcs2d ( ) {
    struct TGFrameworkSupport::EllipticalArcs2d * _result = 0;
    _com_dispatch_method(this, 0x100a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::EllipticalArcs2dPtr(_result, false);
}

#pragma implementation_key(2631)
inline TGFrameworkSupport::Curves2dPtr TGDraft::Sheet::GetCurves2d ( ) {
    struct TGFrameworkSupport::Curves2d * _result = 0;
    _com_dispatch_method(this, 0x100b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::Curves2dPtr(_result, false);
}

#pragma implementation_key(2632)
inline TGFrameworkSupport::LineStrings2dPtr TGDraft::Sheet::GetLineStrings2d ( ) {
    struct TGFrameworkSupport::LineStrings2d * _result = 0;
    _com_dispatch_method(this, 0x100c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::LineStrings2dPtr(_result, false);
}

#pragma implementation_key(2633)
inline TGFrameworkSupport::ComplexStrings2dPtr TGDraft::Sheet::GetComplexStrings2d ( ) {
    struct TGFrameworkSupport::ComplexStrings2d * _result = 0;
    _com_dispatch_method(this, 0x100d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::ComplexStrings2dPtr(_result, false);
}

#pragma implementation_key(2634)
inline TGFrameworkSupport::Boundaries2dPtr TGDraft::Sheet::GetBoundaries2d ( ) {
    struct TGFrameworkSupport::Boundaries2d * _result = 0;
    _com_dispatch_method(this, 0x100e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::Boundaries2dPtr(_result, false);
}

#pragma implementation_key(2635)
inline TGFrameworkSupport::Images2dPtr TGDraft::Sheet::GetImages2d ( ) {
    struct TGFrameworkSupport::Images2d * _result = 0;
    _com_dispatch_method(this, 0x100f, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::Images2dPtr(_result, false);
}

#pragma implementation_key(2636)
inline IDispatchPtr TGDraft::Sheet::GetDimensions ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1801, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2637)
inline IDispatchPtr TGDraft::Sheet::GetLeaders ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1802, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2638)
inline IDispatchPtr TGDraft::Sheet::GetBalloons ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1803, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2639)
inline IDispatchPtr TGDraft::Sheet::GetTextBoxes ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2640)
inline TGFrameworkSupport::TextProfilesPtr TGDraft::Sheet::GetTextProfiles ( ) {
    struct TGFrameworkSupport::TextProfiles * _result = 0;
    _com_dispatch_method(this, 0xf2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::TextProfilesPtr(_result, false);
}

#pragma implementation_key(2641)
inline TGFrameworkSupport::Relations2dPtr TGDraft::Sheet::GetRelations2d ( ) {
    struct TGFrameworkSupport::Relations2d * _result = 0;
    _com_dispatch_method(this, 0x2801, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::Relations2dPtr(_result, false);
}

#pragma implementation_key(2642)
inline IDispatchPtr TGDraft::Sheet::GetSymbols ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x3001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2643)
inline IDispatchPtr TGDraft::Sheet::GetSmartFrames2d ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x3801, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2644)
inline TGFramework::LayersPtr TGDraft::Sheet::GetLayers ( ) {
    struct TGFramework::Layers * _result = 0;
    _com_dispatch_method(this, 0x4000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::LayersPtr(_result, false);
}

#pragma implementation_key(2645)
inline IDispatchPtr TGDraft::Sheet::GetVFS ( IDispatch * Path ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4800, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0009", Path);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2646)
inline HRESULT TGDraft::Sheet::CreateVFS ( IDispatch * Path, IDispatch * * VFS ) {
    return _com_dispatch_method(this, 0x4801, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x4009", Path, VFS);
}

#pragma implementation_key(2647)
inline HRESULT TGDraft::Sheet::DeleteVFS ( IDispatch * VFS ) {
    return _com_dispatch_method(this, 0x4802, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", VFS);
}

#pragma implementation_key(2648)
inline TGDraft::DrawingViewsPtr TGDraft::Sheet::GetDrawingViews ( ) {
    struct DrawingViews * _result = 0;
    _com_dispatch_method(this, 0x5001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DrawingViewsPtr(_result, false);
}

#pragma implementation_key(2649)
inline IDispatchPtr TGDraft::Sheet::GetCuttingPlanes ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x5003, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2650)
inline IDispatchPtr TGDraft::Sheet::GetDatumFrames ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x5801, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2651)
inline IDispatchPtr TGDraft::Sheet::GetFeatureControlFrames ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x5802, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2652)
inline IDispatchPtr TGDraft::Sheet::GetSurfaceFinishSymbols ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x5803, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2653)
inline IDispatchPtr TGDraft::Sheet::GetWeldSymbols ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x5804, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2654)
inline IDispatchPtr TGDraft::Sheet::GetCenterMarks ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x5805, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2655)
inline IDispatchPtr TGDraft::Sheet::GetCenterLines ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x5806, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2656)
inline IDispatchPtr TGDraft::Sheet::GetDatumTargets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x5807, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2657)
inline IDispatchPtr TGDraft::Sheet::GetPinSymbols ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x57a3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2658)
inline IDispatchPtr TGDraft::Sheet::GetDatumPoints ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x5808, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2659)
inline IDispatchPtr TGDraft::Sheet::GetCornerAnnotations ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x5809, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2660)
inline IDispatchPtr TGDraft::Sheet::GetGroups ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x801, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2661)
inline IDispatchPtr TGDraft::Sheet::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2662)
inline VARIANT_BOOL TGDraft::Sheet::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(2663)
inline HRESULT TGDraft::Sheet::CopyEMFToClipboard ( ) {
    return _com_dispatch_method(this, 0xde, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2664)
inline HRESULT TGDraft::Sheet::GetAreaProperties ( SAFEARRAY * * AreaPointXArray, SAFEARRAY * * AreaPointYArray, long NumPoints, const _variant_t & LineStyle, const _variant_t & TextStyle, const _variant_t & DisplayResults, const _variant_t & CopyToClipboard, VARIANT * Area, VARIANT * Center, VARIANT * GlobalMomentsOfInertia, VARIANT * PrincipalAngle, VARIANT * PrincipalXOrientation, VARIANT * PrincipalYOrientation, VARIANT * PrincipalMomentsOfInertia ) {
    return _com_dispatch_method(this, 0xdf, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6005\x6005\x0003\x080c\x080c\x080c\x080c\x480c\x480c\x480c\x480c\x480c\x480c\x480c", AreaPointXArray, AreaPointYArray, NumPoints, &LineStyle, &TextStyle, &DisplayResults, &CopyToClipboard, Area, Center, GlobalMomentsOfInertia, PrincipalAngle, PrincipalXOrientation, PrincipalYOrientation, PrincipalMomentsOfInertia);
}

#pragma implementation_key(2665)
inline HRESULT TGDraft::Sheet::ConvertToCurve ( long NumberOfElements, SAFEARRAY * * ElementArray, VARIANT * NumConvertedElements, VARIANT * ConvertedElements ) {
    return _com_dispatch_method(this, 0xe0, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009\x480c\x480c", NumberOfElements, ElementArray, NumConvertedElements, ConvertedElements);
}

#pragma implementation_key(2666)
inline IDispatchPtr TGDraft::Sheet::GetBoltHoleCircles ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x580a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2667)
inline IDispatchPtr TGDraft::Sheet::GetConnectors ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x580b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2668)
inline void TGDraft::Sheet::PutDefaultTextScale ( double _arg1 ) {
    _com_dispatch_method(this, 0x580c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2669)
inline double TGDraft::Sheet::GetDefaultTextScale ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x580c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2670)
inline TGDraft::BlockOccurrencesPtr TGDraft::Sheet::GetBlockOccurrences ( ) {
    struct BlockOccurrences * _result = 0;
    _com_dispatch_method(this, 0xe1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return BlockOccurrencesPtr(_result, false);
}

#pragma implementation_key(2671)
inline TGDraft::BlockLabelsPtr TGDraft::Sheet::GetBlockLabels ( ) {
    struct BlockLabels * _result = 0;
    _com_dispatch_method(this, 0xe2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return BlockLabelsPtr(_result, false);
}

#pragma implementation_key(2672)
inline TGFrameworkSupport::AreaPropertiesCollectionPtr TGDraft::Sheet::GetAreaPropertiesCollection ( ) {
    struct TGFrameworkSupport::AreaPropertiesCollection * _result = 0;
    _com_dispatch_method(this, 0x1389, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::AreaPropertiesCollectionPtr(_result, false);
}

#pragma implementation_key(2673)
inline IDispatchPtr TGDraft::Sheet::GetGostWeldSymbols ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xe3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2674)
inline TGDraft::SectionBoundaries2dPtr TGDraft::Sheet::GetSectionBoundaries2d ( ) {
    struct SectionBoundaries2d * _result = 0;
    _com_dispatch_method(this, 0x580d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SectionBoundaries2dPtr(_result, false);
}

#pragma implementation_key(2675)
inline void TGDraft::Sheet::PutNumber ( long _arg1 ) {
    _com_dispatch_method(this, 0xe4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2676)
inline long TGDraft::Sheet::GetNumber ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xe4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2677)
inline TGFramework::SelectSetPtr TGDraft::Sheet::SmartSelect ( IDispatch * pSourceObject, VARIANT_BOOL vbColor, VARIANT_BOOL vbType, VARIANT_BOOL vbLayer, VARIANT_BOOL vbLineType, VARIANT_BOOL vbLineWidth ) {
    struct TGFramework::SelectSet * _result = 0;
    _com_dispatch_method(this, 0xe5, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x000b\x000b\x000b\x000b\x000b", pSourceObject, vbColor, vbType, vbLayer, vbLineType, vbLineWidth);
    return TGFramework::SelectSetPtr(_result, false);
}

#pragma implementation_key(2678)
inline HRESULT TGDraft::Sheet::CleanGeometry2d ( long nElements, SAFEARRAY * * pElementArray, enum CleanProfileOptions options, VARIANT_BOOL bCleanPoints, VARIANT_BOOL bCleanBSplines, VARIANT_BOOL bCleanIdentical, VARIANT_BOOL bCleanSmall, const _variant_t & vLayer, const _variant_t & vSmallTolerance ) {
    return _com_dispatch_method(this, 0xe6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009\x0003\x000b\x000b\x000b\x000b\x000c\x000c", nElements, pElementArray, options, bCleanPoints, bCleanBSplines, bCleanIdentical, bCleanSmall, &vLayer, &vSmallTolerance);
}

#pragma implementation_key(2679)
inline IDispatchPtr TGDraft::Sheet::GetSheetGroup ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xe7, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2680)
inline HRESULT TGDraft::Sheet::ChainLocate ( double x, double y ) {
    return _com_dispatch_method(this, 0xe8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(2681)
inline HRESULT TGDraft::Sheet::Offset2d ( double offsetSideX, double offsetSideY, double offsetDistance ) {
    return _com_dispatch_method(this, 0xe9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", offsetSideX, offsetSideY, offsetDistance);
}

#pragma implementation_key(2682)
inline HRESULT TGDraft::Sheet::FenceLocate ( double dLeft, double dTop, double dRight, double dBottom ) {
    return _com_dispatch_method(this, 0xea, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", dLeft, dTop, dRight, dBottom);
}

#pragma implementation_key(2683)
inline IDispatchPtr TGDraft::Sheet::GetAnnotAlignmentShapes ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xef, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2684)
inline HRESULT TGDraft::Sheet::ArrangeDimensionsInSelectSet ( double iStackPitchMultiplier, VARIANT_BOOL bAssociative ) {
    return _com_dispatch_method(this, 0xeb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x000b", iStackPitchMultiplier, bAssociative);
}

#pragma implementation_key(2685)
inline HRESULT TGDraft::Sheet::ScaleSelectSet ( double dScale, double AboutPt_x, double AboutPt_y ) {
    return _com_dispatch_method(this, 0xec, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", dScale, AboutPt_x, AboutPt_y);
}

#pragma implementation_key(2686)
inline HRESULT TGDraft::Sheet::MoveSelectSet ( double FromPt_x, double FromPt_y, double ToPt_x, double ToPt_y ) {
    return _com_dispatch_method(this, 0xed, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", FromPt_x, FromPt_y, ToPt_x, ToPt_y);
}

#pragma implementation_key(2687)
inline HRESULT TGDraft::Sheet::RotateSelectSet ( double dAngle, double AboutPt_x, double AboutPt_y ) {
    return _com_dispatch_method(this, 0xee, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", dAngle, AboutPt_x, AboutPt_y);
}

#pragma implementation_key(2688)
inline HRESULT TGDraft::Sheet::PrintArea ( double LowerLeftX, double LowerLeftY, double UpperRightX, double UpperRightY, const _variant_t & Printer, const _variant_t & NumCopies, const _variant_t & Orientation, const _variant_t & PaperSize, const _variant_t & Scale, const _variant_t & PrintToFile, const _variant_t & OutputFileName, const _variant_t & ColorAsBlack, const _variant_t & Collate, const _variant_t & ScaleLineWidths, const _variant_t & ScaleLineTypes, const _variant_t & UsePrinterClipping ) {
    return _com_dispatch_method(this, 0xf0, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", LowerLeftX, LowerLeftY, UpperRightX, UpperRightY, &Printer, &NumCopies, &Orientation, &PaperSize, &Scale, &PrintToFile, &OutputFileName, &ColorAsBlack, &Collate, &ScaleLineWidths, &ScaleLineTypes, &UsePrinterClipping);
}

#pragma implementation_key(2689)
inline HRESULT TGDraft::Sheet::PrintSheet ( const _variant_t & Printer, const _variant_t & NumCopies, const _variant_t & Orientation, const _variant_t & PaperSize, const _variant_t & Scale, const _variant_t & PrintToFile, const _variant_t & OutputFileName, const _variant_t & ColorAsBlack, const _variant_t & Collate, const _variant_t & ScaleLineWidths, const _variant_t & ScaleLineTypes, const _variant_t & UsePrinterClipping ) {
    return _com_dispatch_method(this, 0xf1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &Printer, &NumCopies, &Orientation, &PaperSize, &Scale, &PrintToFile, &OutputFileName, &ColorAsBlack, &Collate, &ScaleLineWidths, &ScaleLineTypes, &UsePrinterClipping);
}

#pragma implementation_key(2690)
inline IDispatchPtr TGDraft::Sheet::GetTechnicalRequirements ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xf3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2691)
inline HRESULT TGDraft::Sheet::ReplaceBackground ( _bstr_t DraftFileName, _bstr_t BackgroundSheetName ) {
    return _com_dispatch_method(this, 0xf4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008", (BSTR)DraftFileName, (BSTR)BackgroundSheetName);
}

#pragma implementation_key(2692)
inline HRESULT TGDraft::Sheet::LineupText ( IDispatch * Source, SAFEARRAY * * Target, enum LineupTextAlignOptionConstants AlignOption, long OffsetGap ) {
    return _com_dispatch_method(this, 0xf5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x6009\x0003\x0003", Source, Target, AlignOption, OffsetGap);
}

#pragma implementation_key(2693)
inline HRESULT TGDraft::Sheet::LineupTextEx ( IDispatch * Source, SAFEARRAY * * Target, enum LineupTextAlignOptionConstants AlignOption, double OffsetGap ) {
    return _com_dispatch_method(this, 0xf6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x6009\x0003\x0005", Source, Target, AlignOption, OffsetGap);
}

#pragma implementation_key(2694)
inline TGFrameworkSupport::Conics2dPtr TGDraft::Sheet::GetConics2d ( ) {
    struct TGFrameworkSupport::Conics2d * _result = 0;
    _com_dispatch_method(this, 0xf7, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::Conics2dPtr(_result, false);
}

#pragma implementation_key(2695)
inline HRESULT TGDraft::Sheet::ReplaceBackgroundEx ( _bstr_t DraftFileName, _bstr_t BackgroundSheetName, VARIANT_BOOL bReplaceBlocksOfSameName ) {
    return _com_dispatch_method(this, 0xf8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x000b", (BSTR)DraftFileName, (BSTR)BackgroundSheetName, bReplaceBlocksOfSameName);
}

//
// interface _ISheetGroupSheetsAuto wrapper method implementations
//

#pragma implementation_key(2696)
inline TGFramework::ApplicationPtr TGDraft::_ISheetGroupSheetsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2697)
inline IDispatchPtr TGDraft::_ISheetGroupSheetsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2698)
inline long TGDraft::_ISheetGroupSheetsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2699)
inline TGDraft::SheetPtr TGDraft::_ISheetGroupSheetsAuto::Item ( const _variant_t & Index ) {
    struct Sheet * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SheetPtr(_result, false);
}

#pragma implementation_key(2700)
inline IUnknownPtr TGDraft::_ISheetGroupSheetsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

//
// dispinterface Section wrapper method implementations
//

#pragma implementation_key(2701)
inline TGFramework::ApplicationPtr TGDraft::Section::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2702)
inline long TGDraft::Section::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2703)
inline _bstr_t TGDraft::Section::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2704)
inline void TGDraft::Section::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2705)
inline IDispatchPtr TGDraft::Section::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2706)
inline TGDraft::SectionSheetsPtr TGDraft::Section::GetSheets ( ) {
    struct SectionSheets * _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SectionSheetsPtr(_result, false);
}

#pragma implementation_key(2707)
inline HRESULT TGDraft::Section::Activate ( ) {
    return _com_dispatch_method(this, 0x6a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2708)
inline HRESULT TGDraft::Section::Move ( const _variant_t & InsertBefore, const _variant_t & InsertAfter ) {
    return _com_dispatch_method(this, 0x6c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c", &InsertBefore, &InsertAfter);
}

#pragma implementation_key(2709)
inline enum TGDraft::SheetSectionTypeConstants TGDraft::Section::GetType ( ) {
    enum SheetSectionTypeConstants _result;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2710)
inline HRESULT TGDraft::Section::Deactivate ( ) {
    return _com_dispatch_method(this, 0x6e, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// dispinterface SectionSheets wrapper method implementations
//

#pragma implementation_key(2711)
inline TGFramework::ApplicationPtr TGDraft::SectionSheets::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2712)
inline IDispatchPtr TGDraft::SectionSheets::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2713)
inline long TGDraft::SectionSheets::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2714)
inline TGDraft::SheetPtr TGDraft::SectionSheets::Item ( const _variant_t & Index ) {
    struct Sheet * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return SheetPtr(_result, false);
}

//
// interface _ISectionSheetsAuto wrapper method implementations
//

#pragma implementation_key(2715)
inline TGFramework::ApplicationPtr TGDraft::_ISectionSheetsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2716)
inline IDispatchPtr TGDraft::_ISectionSheetsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2717)
inline long TGDraft::_ISectionSheetsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2718)
inline TGDraft::SheetPtr TGDraft::_ISectionSheetsAuto::Item ( const _variant_t & Index ) {
    struct Sheet * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SheetPtr(_result, false);
}

#pragma implementation_key(2719)
inline IUnknownPtr TGDraft::_ISectionSheetsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

//
// interface _ISectionAuto wrapper method implementations
//

#pragma implementation_key(2720)
inline TGFramework::ApplicationPtr TGDraft::_ISectionAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2721)
inline long TGDraft::_ISectionAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2722)
inline _bstr_t TGDraft::_ISectionAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2723)
inline void TGDraft::_ISectionAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2724)
inline IDispatchPtr TGDraft::_ISectionAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2725)
inline TGDraft::SectionSheetsPtr TGDraft::_ISectionAuto::GetSheets ( ) {
    struct SectionSheets * _result = 0;
    HRESULT _hr = get_Sheets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SectionSheetsPtr(_result, false);
}

#pragma implementation_key(2726)
inline HRESULT TGDraft::_ISectionAuto::Activate ( ) {
    HRESULT _hr = raw_Activate();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2727)
inline HRESULT TGDraft::_ISectionAuto::Move ( const _variant_t & InsertBefore, const _variant_t & InsertAfter ) {
    HRESULT _hr = raw_Move(InsertBefore, InsertAfter);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2728)
inline enum TGDraft::SheetSectionTypeConstants TGDraft::_ISectionAuto::GetType ( ) {
    enum SheetSectionTypeConstants _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2729)
inline HRESULT TGDraft::_ISectionAuto::Deactivate ( ) {
    HRESULT _hr = raw_Deactivate();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface SheetSetup wrapper method implementations
//

#pragma implementation_key(2730)
inline TGFramework::ApplicationPtr TGDraft::SheetSetup::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2731)
inline TGDraft::SheetPtr TGDraft::SheetSetup::GetParent ( ) {
    struct Sheet * _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SheetPtr(_result, false);
}

#pragma implementation_key(2732)
inline void TGDraft::SheetSetup::PutBottomMargin ( double _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2733)
inline double TGDraft::SheetSetup::GetBottomMargin ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2734)
inline void TGDraft::SheetSetup::PutFirstPageNumber ( long _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2735)
inline long TGDraft::SheetSetup::GetFirstPageNumber ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2736)
inline double TGDraft::SheetSetup::GetLeftMargin ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2737)
inline void TGDraft::SheetSetup::PutLeftMargin ( double _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2738)
inline enum TGDraft::PaperUnitConstants TGDraft::SheetSetup::GetPaperUnits ( ) {
    enum PaperUnitConstants _result;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2739)
inline void TGDraft::SheetSetup::PutPaperUnits ( enum PaperUnitConstants _arg1 ) {
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2740)
inline void TGDraft::SheetSetup::PutPaperUnitsPrecision ( enum PrecisionConstants _arg1 ) {
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2741)
inline enum TGDraft::PrecisionConstants TGDraft::SheetSetup::GetPaperUnitsPrecision ( ) {
    enum PrecisionConstants _result;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2742)
inline double TGDraft::SheetSetup::GetRightMargin ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2743)
inline void TGDraft::SheetSetup::PutRightMargin ( double _arg1 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2744)
inline enum TGDraft::PaperToModelScaleConstants TGDraft::SheetSetup::GetScaleOption ( ) {
    enum PaperToModelScaleConstants _result;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2745)
inline void TGDraft::SheetSetup::PutScaleOption ( enum PaperToModelScaleConstants _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2746)
inline void TGDraft::SheetSetup::PutSheetHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2747)
inline double TGDraft::SheetSetup::GetSheetHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2748)
inline void TGDraft::SheetSetup::PutSheetSizeOption ( enum PaperSizeConstants _arg1 ) {
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2749)
inline enum TGDraft::PaperSizeConstants TGDraft::SheetSetup::GetSheetSizeOption ( ) {
    enum PaperSizeConstants _result;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2750)
inline double TGDraft::SheetSetup::GetSheetWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2751)
inline void TGDraft::SheetSetup::PutSheetWidth ( double _arg1 ) {
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2752)
inline void TGDraft::SheetSetup::PutTopMargin ( double _arg1 ) {
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2753)
inline double TGDraft::SheetSetup::GetTopMargin ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2754)
inline HRESULT TGDraft::SheetSetup::SetScale ( double PaperRatioComponent, double ModelRatioComponent ) {
    return _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", PaperRatioComponent, ModelRatioComponent);
}

#pragma implementation_key(2755)
inline HRESULT TGDraft::SheetSetup::GetScale ( double * PaperRatioComponent, double * ModelRatioComponent ) {
    return _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", PaperRatioComponent, ModelRatioComponent);
}

#pragma implementation_key(2756)
inline double TGDraft::SheetSetup::GetScaleFactor ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2757)
inline HRESULT TGDraft::SheetSetup::SetDefaultDrawingViewScale ( double PaperRatioComponent, double ModelRatioComponent ) {
    return _com_dispatch_method(this, 0x1a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", PaperRatioComponent, ModelRatioComponent);
}

#pragma implementation_key(2758)
inline HRESULT TGDraft::SheetSetup::GetDefaultDrawingViewScale ( double * PaperRatioComponent, double * ModelRatioComponent ) {
    return _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", PaperRatioComponent, ModelRatioComponent);
}

#pragma implementation_key(2759)
inline double TGDraft::SheetSetup::GetDefaultDrawingViewScaleFactor ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_METHOD, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2760)
inline enum TGDraft::PaperToModelScaleConstants TGDraft::SheetSetup::GetDefaultDrawingViewScaleOption ( ) {
    enum PaperToModelScaleConstants _result;
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2761)
inline void TGDraft::SheetSetup::PutDefaultDrawingViewScaleOption ( enum PaperToModelScaleConstants _arg1 ) {
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2762)
inline IDispatchPtr TGDraft::SheetSetup::GetDrawingViewForSheetScale ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2763)
inline void TGDraft::SheetSetup::PutDrawingViewForSheetScale ( IDispatch * _arg1 ) {
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(2764)
inline VARIANT_BOOL TGDraft::SheetSetup::GetIsManualSheetScale ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2765)
inline HRESULT TGDraft::SheetSetup::ClearDrawingViewForSheetScale ( ) {
    return _com_dispatch_method(this, 0x1d, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// interface _ISheetSetupAuto wrapper method implementations
//

#pragma implementation_key(2766)
inline TGFramework::ApplicationPtr TGDraft::_ISheetSetupAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2767)
inline TGDraft::SheetPtr TGDraft::_ISheetSetupAuto::GetParent ( ) {
    struct Sheet * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SheetPtr(_result, false);
}

#pragma implementation_key(2768)
inline void TGDraft::_ISheetSetupAuto::PutBottomMargin ( double BottomMargin ) {
    HRESULT _hr = put_BottomMargin(BottomMargin);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2769)
inline double TGDraft::_ISheetSetupAuto::GetBottomMargin ( ) {
    double _result = 0;
    HRESULT _hr = get_BottomMargin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2770)
inline void TGDraft::_ISheetSetupAuto::PutFirstPageNumber ( long PageNumber ) {
    HRESULT _hr = put_FirstPageNumber(PageNumber);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2771)
inline long TGDraft::_ISheetSetupAuto::GetFirstPageNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_FirstPageNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2772)
inline double TGDraft::_ISheetSetupAuto::GetLeftMargin ( ) {
    double _result = 0;
    HRESULT _hr = get_LeftMargin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2773)
inline void TGDraft::_ISheetSetupAuto::PutLeftMargin ( double LeftMargin ) {
    HRESULT _hr = put_LeftMargin(LeftMargin);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2774)
inline enum TGDraft::PaperUnitConstants TGDraft::_ISheetSetupAuto::GetPaperUnits ( ) {
    enum PaperUnitConstants _result;
    HRESULT _hr = get_PaperUnits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2775)
inline void TGDraft::_ISheetSetupAuto::PutPaperUnits ( enum PaperUnitConstants UnitType ) {
    HRESULT _hr = put_PaperUnits(UnitType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2776)
inline void TGDraft::_ISheetSetupAuto::PutPaperUnitsPrecision ( enum PrecisionConstants Precision ) {
    HRESULT _hr = put_PaperUnitsPrecision(Precision);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2777)
inline enum TGDraft::PrecisionConstants TGDraft::_ISheetSetupAuto::GetPaperUnitsPrecision ( ) {
    enum PrecisionConstants _result;
    HRESULT _hr = get_PaperUnitsPrecision(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2778)
inline double TGDraft::_ISheetSetupAuto::GetRightMargin ( ) {
    double _result = 0;
    HRESULT _hr = get_RightMargin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2779)
inline void TGDraft::_ISheetSetupAuto::PutRightMargin ( double RightMargin ) {
    HRESULT _hr = put_RightMargin(RightMargin);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2780)
inline enum TGDraft::PaperToModelScaleConstants TGDraft::_ISheetSetupAuto::GetScaleOption ( ) {
    enum PaperToModelScaleConstants _result;
    HRESULT _hr = get_ScaleOption(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2781)
inline void TGDraft::_ISheetSetupAuto::PutScaleOption ( enum PaperToModelScaleConstants Option ) {
    HRESULT _hr = put_ScaleOption(Option);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2782)
inline void TGDraft::_ISheetSetupAuto::PutSheetHeight ( double Height ) {
    HRESULT _hr = put_SheetHeight(Height);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2783)
inline double TGDraft::_ISheetSetupAuto::GetSheetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_SheetHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2784)
inline void TGDraft::_ISheetSetupAuto::PutSheetSizeOption ( enum PaperSizeConstants Option ) {
    HRESULT _hr = put_SheetSizeOption(Option);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2785)
inline enum TGDraft::PaperSizeConstants TGDraft::_ISheetSetupAuto::GetSheetSizeOption ( ) {
    enum PaperSizeConstants _result;
    HRESULT _hr = get_SheetSizeOption(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2786)
inline double TGDraft::_ISheetSetupAuto::GetSheetWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_SheetWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2787)
inline void TGDraft::_ISheetSetupAuto::PutSheetWidth ( double Width ) {
    HRESULT _hr = put_SheetWidth(Width);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2788)
inline void TGDraft::_ISheetSetupAuto::PutTopMargin ( double TopMargin ) {
    HRESULT _hr = put_TopMargin(TopMargin);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2789)
inline double TGDraft::_ISheetSetupAuto::GetTopMargin ( ) {
    double _result = 0;
    HRESULT _hr = get_TopMargin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2790)
inline HRESULT TGDraft::_ISheetSetupAuto::SetScale ( double PaperRatioComponent, double ModelRatioComponent ) {
    HRESULT _hr = raw_SetScale(PaperRatioComponent, ModelRatioComponent);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2791)
inline HRESULT TGDraft::_ISheetSetupAuto::GetScale ( double * PaperRatioComponent, double * ModelRatioComponent ) {
    HRESULT _hr = raw_GetScale(PaperRatioComponent, ModelRatioComponent);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2792)
inline double TGDraft::_ISheetSetupAuto::GetScaleFactor ( ) {
    double _result = 0;
    HRESULT _hr = raw_GetScaleFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2793)
inline HRESULT TGDraft::_ISheetSetupAuto::SetDefaultDrawingViewScale ( double PaperRatioComponent, double ModelRatioComponent ) {
    HRESULT _hr = raw_SetDefaultDrawingViewScale(PaperRatioComponent, ModelRatioComponent);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2794)
inline HRESULT TGDraft::_ISheetSetupAuto::GetDefaultDrawingViewScale ( double * PaperRatioComponent, double * ModelRatioComponent ) {
    HRESULT _hr = raw_GetDefaultDrawingViewScale(PaperRatioComponent, ModelRatioComponent);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2795)
inline double TGDraft::_ISheetSetupAuto::GetDefaultDrawingViewScaleFactor ( ) {
    double _result = 0;
    HRESULT _hr = raw_GetDefaultDrawingViewScaleFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2796)
inline enum TGDraft::PaperToModelScaleConstants TGDraft::_ISheetSetupAuto::GetDefaultDrawingViewScaleOption ( ) {
    enum PaperToModelScaleConstants _result;
    HRESULT _hr = get_DefaultDrawingViewScaleOption(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2797)
inline void TGDraft::_ISheetSetupAuto::PutDefaultDrawingViewScaleOption ( enum PaperToModelScaleConstants Option ) {
    HRESULT _hr = put_DefaultDrawingViewScaleOption(Option);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2798)
inline IDispatchPtr TGDraft::_ISheetSetupAuto::GetDrawingViewForSheetScale ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_DrawingViewForSheetScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2799)
inline void TGDraft::_ISheetSetupAuto::PutDrawingViewForSheetScale ( IDispatch * ppDrawingView ) {
    HRESULT _hr = put_DrawingViewForSheetScale(ppDrawingView);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2800)
inline VARIANT_BOOL TGDraft::_ISheetSetupAuto::GetIsManualSheetScale ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsManualSheetScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2801)
inline HRESULT TGDraft::_ISheetSetupAuto::ClearDrawingViewForSheetScale ( ) {
    HRESULT _hr = raw_ClearDrawingViewForSheetScale();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _ISheetAuto wrapper method implementations
//

#pragma implementation_key(2802)
inline TGFramework::ApplicationPtr TGDraft::_ISheetAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2803)
inline IDispatchPtr TGDraft::_ISheetAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2804)
inline TGFrameworkSupport::DrawingObjectsPtr TGDraft::_ISheetAuto::GetDrawingObjects ( ) {
    struct TGFrameworkSupport::DrawingObjects * _result = 0;
    HRESULT _hr = get_DrawingObjects(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::DrawingObjectsPtr(_result, false);
}

#pragma implementation_key(2805)
inline long TGDraft::_ISheetAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2806)
inline _bstr_t TGDraft::_ISheetAuto::GetKey ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2807)
inline void TGDraft::_ISheetAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2808)
inline _bstr_t TGDraft::_ISheetAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2809)
inline IDispatchPtr TGDraft::_ISheetAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2810)
inline TGDraft::SectionPtr TGDraft::_ISheetAuto::GetSection ( ) {
    struct Section * _result = 0;
    HRESULT _hr = get_Section(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SectionPtr(_result, false);
}

#pragma implementation_key(2811)
inline enum TGDraft::SheetSectionTypeConstants TGDraft::_ISheetAuto::GetSectionType ( ) {
    enum SheetSectionTypeConstants _result;
    HRESULT _hr = get_SectionType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2812)
inline TGDraft::SheetSetupPtr TGDraft::_ISheetAuto::GetSheetSetup ( ) {
    struct SheetSetup * _result = 0;
    HRESULT _hr = get_SheetSetup(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SheetSetupPtr(_result, false);
}

#pragma implementation_key(2813)
inline long TGDraft::_ISheetAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2814)
inline void TGDraft::_ISheetAuto::PutVisible ( VARIANT_BOOL IsVisible ) {
    HRESULT _hr = put_Visible(IsVisible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2815)
inline VARIANT_BOOL TGDraft::_ISheetAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2816)
inline TGDraft::SheetPtr TGDraft::_ISheetAuto::GetBackground ( ) {
    struct Sheet * _result = 0;
    HRESULT _hr = get_Background(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SheetPtr(_result, false);
}

#pragma implementation_key(2817)
inline void TGDraft::_ISheetAuto::PutBackground ( struct Sheet * BackgroundSheet ) {
    HRESULT _hr = put_Background(BackgroundSheet);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2818)
inline void TGDraft::_ISheetAuto::PutBackgroundVisible ( VARIANT_BOOL IsVisible ) {
    HRESULT _hr = put_BackgroundVisible(IsVisible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2819)
inline VARIANT_BOOL TGDraft::_ISheetAuto::GetBackgroundVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BackgroundVisible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2820)
inline HRESULT TGDraft::_ISheetAuto::Activate ( ) {
    HRESULT _hr = raw_Activate();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2821)
inline HRESULT TGDraft::_ISheetAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2822)
inline TGFrameworkSupport::Lines2dPtr TGDraft::_ISheetAuto::GetLines2d ( ) {
    struct TGFrameworkSupport::Lines2d * _result = 0;
    HRESULT _hr = get_Lines2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::Lines2dPtr(_result, false);
}

#pragma implementation_key(2823)
inline TGFrameworkSupport::Circles2dPtr TGDraft::_ISheetAuto::GetCircles2d ( ) {
    struct TGFrameworkSupport::Circles2d * _result = 0;
    HRESULT _hr = get_Circles2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::Circles2dPtr(_result, false);
}

#pragma implementation_key(2824)
inline TGFrameworkSupport::Arcs2dPtr TGDraft::_ISheetAuto::GetArcs2d ( ) {
    struct TGFrameworkSupport::Arcs2d * _result = 0;
    HRESULT _hr = get_Arcs2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::Arcs2dPtr(_result, false);
}

#pragma implementation_key(2825)
inline TGFrameworkSupport::Ellipses2dPtr TGDraft::_ISheetAuto::GetEllipses2d ( ) {
    struct TGFrameworkSupport::Ellipses2d * _result = 0;
    HRESULT _hr = get_Ellipses2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::Ellipses2dPtr(_result, false);
}

#pragma implementation_key(2826)
inline TGFrameworkSupport::BSplineCurves2dPtr TGDraft::_ISheetAuto::GetBsplineCurves2d ( ) {
    struct TGFrameworkSupport::BSplineCurves2d * _result = 0;
    HRESULT _hr = get_BsplineCurves2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::BSplineCurves2dPtr(_result, false);
}

#pragma implementation_key(2827)
inline TGFrameworkSupport::Points2dPtr TGDraft::_ISheetAuto::GetPoints2d ( ) {
    struct TGFrameworkSupport::Points2d * _result = 0;
    HRESULT _hr = get_Points2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::Points2dPtr(_result, false);
}

#pragma implementation_key(2828)
inline TGFrameworkSupport::EllipticalArcs2dPtr TGDraft::_ISheetAuto::GetEllipticalArcs2d ( ) {
    struct TGFrameworkSupport::EllipticalArcs2d * _result = 0;
    HRESULT _hr = get_EllipticalArcs2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::EllipticalArcs2dPtr(_result, false);
}

#pragma implementation_key(2829)
inline TGFrameworkSupport::Curves2dPtr TGDraft::_ISheetAuto::GetCurves2d ( ) {
    struct TGFrameworkSupport::Curves2d * _result = 0;
    HRESULT _hr = get_Curves2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::Curves2dPtr(_result, false);
}

#pragma implementation_key(2830)
inline TGFrameworkSupport::LineStrings2dPtr TGDraft::_ISheetAuto::GetLineStrings2d ( ) {
    struct TGFrameworkSupport::LineStrings2d * _result = 0;
    HRESULT _hr = get_LineStrings2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::LineStrings2dPtr(_result, false);
}

#pragma implementation_key(2831)
inline TGFrameworkSupport::ComplexStrings2dPtr TGDraft::_ISheetAuto::GetComplexStrings2d ( ) {
    struct TGFrameworkSupport::ComplexStrings2d * _result = 0;
    HRESULT _hr = get_ComplexStrings2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::ComplexStrings2dPtr(_result, false);
}

#pragma implementation_key(2832)
inline TGFrameworkSupport::Boundaries2dPtr TGDraft::_ISheetAuto::GetBoundaries2d ( ) {
    struct TGFrameworkSupport::Boundaries2d * _result = 0;
    HRESULT _hr = get_Boundaries2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::Boundaries2dPtr(_result, false);
}

#pragma implementation_key(2833)
inline TGFrameworkSupport::Images2dPtr TGDraft::_ISheetAuto::GetImages2d ( ) {
    struct TGFrameworkSupport::Images2d * _result = 0;
    HRESULT _hr = get_Images2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::Images2dPtr(_result, false);
}

#pragma implementation_key(2834)
inline IDispatchPtr TGDraft::_ISheetAuto::GetDimensions ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Dimensions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2835)
inline IDispatchPtr TGDraft::_ISheetAuto::GetLeaders ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Leaders(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2836)
inline IDispatchPtr TGDraft::_ISheetAuto::GetBalloons ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Balloons(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2837)
inline IDispatchPtr TGDraft::_ISheetAuto::GetTextBoxes ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_TextBoxes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2838)
inline TGFrameworkSupport::TextProfilesPtr TGDraft::_ISheetAuto::GetTextProfiles ( ) {
    struct TGFrameworkSupport::TextProfiles * _result = 0;
    HRESULT _hr = get_TextProfiles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::TextProfilesPtr(_result, false);
}

#pragma implementation_key(2839)
inline TGFrameworkSupport::Relations2dPtr TGDraft::_ISheetAuto::GetRelations2d ( ) {
    struct TGFrameworkSupport::Relations2d * _result = 0;
    HRESULT _hr = get_Relations2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::Relations2dPtr(_result, false);
}

#pragma implementation_key(2840)
inline IDispatchPtr TGDraft::_ISheetAuto::GetSymbols ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Symbols(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2841)
inline IDispatchPtr TGDraft::_ISheetAuto::GetSmartFrames2d ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_SmartFrames2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2842)
inline TGFramework::LayersPtr TGDraft::_ISheetAuto::GetLayers ( ) {
    struct TGFramework::Layers * _result = 0;
    HRESULT _hr = get_Layers(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::LayersPtr(_result, false);
}

#pragma implementation_key(2843)
inline IDispatchPtr TGDraft::_ISheetAuto::GetVFS ( IDispatch * Path ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_VFS(Path, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2844)
inline HRESULT TGDraft::_ISheetAuto::CreateVFS ( IDispatch * Path, IDispatch * * VFS ) {
    HRESULT _hr = raw_CreateVFS(Path, VFS);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2845)
inline HRESULT TGDraft::_ISheetAuto::DeleteVFS ( IDispatch * VFS ) {
    HRESULT _hr = raw_DeleteVFS(VFS);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2846)
inline TGDraft::DrawingViewsPtr TGDraft::_ISheetAuto::GetDrawingViews ( ) {
    struct DrawingViews * _result = 0;
    HRESULT _hr = get_DrawingViews(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewsPtr(_result, false);
}

#pragma implementation_key(2847)
inline IDispatchPtr TGDraft::_ISheetAuto::GetCuttingPlanes ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_CuttingPlanes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2848)
inline IDispatchPtr TGDraft::_ISheetAuto::GetDatumFrames ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_DatumFrames(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2849)
inline IDispatchPtr TGDraft::_ISheetAuto::GetFeatureControlFrames ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_FeatureControlFrames(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2850)
inline IDispatchPtr TGDraft::_ISheetAuto::GetSurfaceFinishSymbols ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_SurfaceFinishSymbols(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2851)
inline IDispatchPtr TGDraft::_ISheetAuto::GetWeldSymbols ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_WeldSymbols(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2852)
inline IDispatchPtr TGDraft::_ISheetAuto::GetCenterMarks ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_CenterMarks(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2853)
inline IDispatchPtr TGDraft::_ISheetAuto::GetCenterLines ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_CenterLines(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2854)
inline IDispatchPtr TGDraft::_ISheetAuto::GetDatumTargets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_DatumTargets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2855)
inline IDispatchPtr TGDraft::_ISheetAuto::GetPinSymbols ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_PinSymbols(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2856)
inline IDispatchPtr TGDraft::_ISheetAuto::GetDatumPoints ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_DatumPoints(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2857)
inline IDispatchPtr TGDraft::_ISheetAuto::GetCornerAnnotations ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_CornerAnnotations(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2858)
inline IDispatchPtr TGDraft::_ISheetAuto::GetGroups ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Groups(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2859)
inline IDispatchPtr TGDraft::_ISheetAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2860)
inline VARIANT_BOOL TGDraft::_ISheetAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2861)
inline HRESULT TGDraft::_ISheetAuto::CopyEMFToClipboard ( ) {
    HRESULT _hr = raw_CopyEMFToClipboard();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2862)
inline HRESULT TGDraft::_ISheetAuto::GetAreaProperties ( SAFEARRAY * * AreaPointXArray, SAFEARRAY * * AreaPointYArray, long NumPoints, const _variant_t & LineStyle, const _variant_t & TextStyle, const _variant_t & DisplayResults, const _variant_t & CopyToClipboard, VARIANT * Area, VARIANT * Center, VARIANT * GlobalMomentsOfInertia, VARIANT * PrincipalAngle, VARIANT * PrincipalXOrientation, VARIANT * PrincipalYOrientation, VARIANT * PrincipalMomentsOfInertia ) {
    HRESULT _hr = raw_GetAreaProperties(AreaPointXArray, AreaPointYArray, NumPoints, LineStyle, TextStyle, DisplayResults, CopyToClipboard, Area, Center, GlobalMomentsOfInertia, PrincipalAngle, PrincipalXOrientation, PrincipalYOrientation, PrincipalMomentsOfInertia);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2863)
inline HRESULT TGDraft::_ISheetAuto::ConvertToCurve ( long NumberOfElements, SAFEARRAY * * ElementArray, VARIANT * NumConvertedElements, VARIANT * ConvertedElements ) {
    HRESULT _hr = raw_ConvertToCurve(NumberOfElements, ElementArray, NumConvertedElements, ConvertedElements);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2864)
inline IDispatchPtr TGDraft::_ISheetAuto::GetBoltHoleCircles ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_BoltHoleCircles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2865)
inline IDispatchPtr TGDraft::_ISheetAuto::GetConnectors ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Connectors(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2866)
inline void TGDraft::_ISheetAuto::PutDefaultTextScale ( double Scale ) {
    HRESULT _hr = put_DefaultTextScale(Scale);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2867)
inline double TGDraft::_ISheetAuto::GetDefaultTextScale ( ) {
    double _result = 0;
    HRESULT _hr = get_DefaultTextScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2868)
inline TGDraft::BlockOccurrencesPtr TGDraft::_ISheetAuto::GetBlockOccurrences ( ) {
    struct BlockOccurrences * _result = 0;
    HRESULT _hr = get_BlockOccurrences(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BlockOccurrencesPtr(_result, false);
}

#pragma implementation_key(2869)
inline TGDraft::BlockLabelsPtr TGDraft::_ISheetAuto::GetBlockLabels ( ) {
    struct BlockLabels * _result = 0;
    HRESULT _hr = get_BlockLabels(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BlockLabelsPtr(_result, false);
}

#pragma implementation_key(2870)
inline TGFrameworkSupport::AreaPropertiesCollectionPtr TGDraft::_ISheetAuto::GetAreaPropertiesCollection ( ) {
    struct TGFrameworkSupport::AreaPropertiesCollection * _result = 0;
    HRESULT _hr = get_AreaPropertiesCollection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::AreaPropertiesCollectionPtr(_result, false);
}

#pragma implementation_key(2871)
inline IDispatchPtr TGDraft::_ISheetAuto::GetGostWeldSymbols ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_GostWeldSymbols(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2872)
inline TGDraft::SectionBoundaries2dPtr TGDraft::_ISheetAuto::GetSectionBoundaries2d ( ) {
    struct SectionBoundaries2d * _result = 0;
    HRESULT _hr = get_SectionBoundaries2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SectionBoundaries2dPtr(_result, false);
}

#pragma implementation_key(2873)
inline void TGDraft::_ISheetAuto::PutNumber ( long pNumber ) {
    HRESULT _hr = put_Number(pNumber);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2874)
inline long TGDraft::_ISheetAuto::GetNumber ( ) {
    long _result = 0;
    HRESULT _hr = get_Number(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2875)
inline TGFramework::SelectSetPtr TGDraft::_ISheetAuto::SmartSelect ( IDispatch * pSourceObject, VARIANT_BOOL vbColor, VARIANT_BOOL vbType, VARIANT_BOOL vbLayer, VARIANT_BOOL vbLineType, VARIANT_BOOL vbLineWidth ) {
    struct TGFramework::SelectSet * _result = 0;
    HRESULT _hr = raw_SmartSelect(pSourceObject, vbColor, vbType, vbLayer, vbLineType, vbLineWidth, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::SelectSetPtr(_result, false);
}

#pragma implementation_key(2876)
inline HRESULT TGDraft::_ISheetAuto::CleanGeometry2d ( long nElements, SAFEARRAY * * pElementArray, enum CleanProfileOptions options, VARIANT_BOOL bCleanPoints, VARIANT_BOOL bCleanBSplines, VARIANT_BOOL bCleanIdentical, VARIANT_BOOL bCleanSmall, const _variant_t & vLayer, const _variant_t & vSmallTolerance ) {
    HRESULT _hr = raw_CleanGeometry2d(nElements, pElementArray, options, bCleanPoints, bCleanBSplines, bCleanIdentical, bCleanSmall, vLayer, vSmallTolerance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2877)
inline IDispatchPtr TGDraft::_ISheetAuto::GetSheetGroup ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_SheetGroup(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2878)
inline HRESULT TGDraft::_ISheetAuto::ChainLocate ( double x, double y ) {
    HRESULT _hr = raw_ChainLocate(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2879)
inline HRESULT TGDraft::_ISheetAuto::Offset2d ( double offsetSideX, double offsetSideY, double offsetDistance ) {
    HRESULT _hr = raw_Offset2d(offsetSideX, offsetSideY, offsetDistance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2880)
inline HRESULT TGDraft::_ISheetAuto::FenceLocate ( double dLeft, double dTop, double dRight, double dBottom ) {
    HRESULT _hr = raw_FenceLocate(dLeft, dTop, dRight, dBottom);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2881)
inline IDispatchPtr TGDraft::_ISheetAuto::GetAnnotAlignmentShapes ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AnnotAlignmentShapes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2882)
inline HRESULT TGDraft::_ISheetAuto::ArrangeDimensionsInSelectSet ( double iStackPitchMultiplier, VARIANT_BOOL bAssociative ) {
    HRESULT _hr = raw_ArrangeDimensionsInSelectSet(iStackPitchMultiplier, bAssociative);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2883)
inline HRESULT TGDraft::_ISheetAuto::ScaleSelectSet ( double dScale, double AboutPt_x, double AboutPt_y ) {
    HRESULT _hr = raw_ScaleSelectSet(dScale, AboutPt_x, AboutPt_y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2884)
inline HRESULT TGDraft::_ISheetAuto::MoveSelectSet ( double FromPt_x, double FromPt_y, double ToPt_x, double ToPt_y ) {
    HRESULT _hr = raw_MoveSelectSet(FromPt_x, FromPt_y, ToPt_x, ToPt_y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2885)
inline HRESULT TGDraft::_ISheetAuto::RotateSelectSet ( double dAngle, double AboutPt_x, double AboutPt_y ) {
    HRESULT _hr = raw_RotateSelectSet(dAngle, AboutPt_x, AboutPt_y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2886)
inline HRESULT TGDraft::_ISheetAuto::PrintArea ( double LowerLeftX, double LowerLeftY, double UpperRightX, double UpperRightY, const _variant_t & Printer, const _variant_t & NumCopies, const _variant_t & Orientation, const _variant_t & PaperSize, const _variant_t & Scale, const _variant_t & PrintToFile, const _variant_t & OutputFileName, const _variant_t & ColorAsBlack, const _variant_t & Collate, const _variant_t & ScaleLineWidths, const _variant_t & ScaleLineTypes, const _variant_t & UsePrinterClipping ) {
    HRESULT _hr = raw_PrintArea(LowerLeftX, LowerLeftY, UpperRightX, UpperRightY, Printer, NumCopies, Orientation, PaperSize, Scale, PrintToFile, OutputFileName, ColorAsBlack, Collate, ScaleLineWidths, ScaleLineTypes, UsePrinterClipping);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2887)
inline HRESULT TGDraft::_ISheetAuto::PrintSheet ( const _variant_t & Printer, const _variant_t & NumCopies, const _variant_t & Orientation, const _variant_t & PaperSize, const _variant_t & Scale, const _variant_t & PrintToFile, const _variant_t & OutputFileName, const _variant_t & ColorAsBlack, const _variant_t & Collate, const _variant_t & ScaleLineWidths, const _variant_t & ScaleLineTypes, const _variant_t & UsePrinterClipping ) {
    HRESULT _hr = raw_PrintSheet(Printer, NumCopies, Orientation, PaperSize, Scale, PrintToFile, OutputFileName, ColorAsBlack, Collate, ScaleLineWidths, ScaleLineTypes, UsePrinterClipping);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2888)
inline IDispatchPtr TGDraft::_ISheetAuto::GetTechnicalRequirements ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_TechnicalRequirements(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2889)
inline HRESULT TGDraft::_ISheetAuto::ReplaceBackground ( _bstr_t DraftFileName, _bstr_t BackgroundSheetName ) {
    HRESULT _hr = raw_ReplaceBackground(DraftFileName, BackgroundSheetName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2890)
inline HRESULT TGDraft::_ISheetAuto::LineupText ( IDispatch * Source, SAFEARRAY * * Target, enum LineupTextAlignOptionConstants AlignOption, long OffsetGap ) {
    HRESULT _hr = raw_LineupText(Source, Target, AlignOption, OffsetGap);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2891)
inline HRESULT TGDraft::_ISheetAuto::LineupTextEx ( IDispatch * Source, SAFEARRAY * * Target, enum LineupTextAlignOptionConstants AlignOption, double OffsetGap ) {
    HRESULT _hr = raw_LineupTextEx(Source, Target, AlignOption, OffsetGap);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2892)
inline TGFrameworkSupport::Conics2dPtr TGDraft::_ISheetAuto::GetConics2d ( ) {
    struct TGFrameworkSupport::Conics2d * _result = 0;
    HRESULT _hr = get_Conics2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::Conics2dPtr(_result, false);
}

#pragma implementation_key(2893)
inline HRESULT TGDraft::_ISheetAuto::ReplaceBackgroundEx ( _bstr_t DraftFileName, _bstr_t BackgroundSheetName, VARIANT_BOOL bReplaceBlocksOfSameName ) {
    HRESULT _hr = raw_ReplaceBackgroundEx(DraftFileName, BackgroundSheetName, bReplaceBlocksOfSameName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface Sheets wrapper method implementations
//

#pragma implementation_key(2894)
inline TGFramework::ApplicationPtr TGDraft::Sheets::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2895)
inline IDispatchPtr TGDraft::Sheets::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2896)
inline long TGDraft::Sheets::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2897)
inline TGDraft::SheetPtr TGDraft::Sheets::Item ( const _variant_t & Index ) {
    struct Sheet * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return SheetPtr(_result, false);
}

#pragma implementation_key(2898)
inline TGDraft::SheetPtr TGDraft::Sheets::Add ( const _variant_t & Name, const _variant_t & SectionName, const _variant_t & InsertBefore, const _variant_t & InsertAfter ) {
    struct Sheet * _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c", &Name, &SectionName, &InsertBefore, &InsertAfter);
    return SheetPtr(_result, false);
}

#pragma implementation_key(2899)
inline TGDraft::SheetPtr TGDraft::Sheets::AddSheet ( const _variant_t & Name, enum SheetSectionTypeConstants SectionType, const _variant_t & InsertBefore, const _variant_t & InsertAfter ) {
    struct Sheet * _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c\x0003\x080c\x080c", &Name, SectionType, &InsertBefore, &InsertAfter);
    return SheetPtr(_result, false);
}

#pragma implementation_key(2900)
inline HRESULT TGDraft::Sheets::Rename ( _bstr_t OldName, _bstr_t NewName ) {
    return _com_dispatch_method(this, 0x60010005, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008", (BSTR)OldName, (BSTR)NewName);
}

#pragma implementation_key(2901)
inline TGDraft::SheetPtr TGDraft::Sheets::GetGet2DModelSheet ( ) {
    struct Sheet * _result = 0;
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SheetPtr(_result, false);
}

//
// interface _ISheetsAuto wrapper method implementations
//

#pragma implementation_key(2902)
inline TGFramework::ApplicationPtr TGDraft::_ISheetsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2903)
inline IDispatchPtr TGDraft::_ISheetsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2904)
inline long TGDraft::_ISheetsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2905)
inline TGDraft::SheetPtr TGDraft::_ISheetsAuto::Item ( const _variant_t & Index ) {
    struct Sheet * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SheetPtr(_result, false);
}

#pragma implementation_key(2906)
inline IUnknownPtr TGDraft::_ISheetsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2907)
inline TGDraft::SheetPtr TGDraft::_ISheetsAuto::Add ( const _variant_t & Name, const _variant_t & SectionName, const _variant_t & InsertBefore, const _variant_t & InsertAfter ) {
    struct Sheet * _result = 0;
    HRESULT _hr = raw_Add(Name, SectionName, InsertBefore, InsertAfter, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SheetPtr(_result, false);
}

#pragma implementation_key(2908)
inline TGDraft::SheetPtr TGDraft::_ISheetsAuto::AddSheet ( const _variant_t & Name, enum SheetSectionTypeConstants SectionType, const _variant_t & InsertBefore, const _variant_t & InsertAfter ) {
    struct Sheet * _result = 0;
    HRESULT _hr = raw_AddSheet(Name, SectionType, InsertBefore, InsertAfter, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SheetPtr(_result, false);
}

#pragma implementation_key(2909)
inline HRESULT TGDraft::_ISheetsAuto::Rename ( _bstr_t OldName, _bstr_t NewName ) {
    HRESULT _hr = raw_Rename(OldName, NewName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2910)
inline TGDraft::SheetPtr TGDraft::_ISheetsAuto::GetGet2DModelSheet ( ) {
    struct Sheet * _result = 0;
    HRESULT _hr = get_Get2DModelSheet(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SheetPtr(_result, false);
}

//
// dispinterface Sections wrapper method implementations
//

#pragma implementation_key(2911)
inline TGFramework::ApplicationPtr TGDraft::Sections::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2912)
inline IDispatchPtr TGDraft::Sections::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x6e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2913)
inline long TGDraft::Sections::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2914)
inline TGDraft::SectionPtr TGDraft::Sections::Add ( const _variant_t & Name ) {
    struct Section * _result = 0;
    _com_dispatch_method(this, 0x70, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c", &Name);
    return SectionPtr(_result, false);
}

#pragma implementation_key(2915)
inline TGDraft::SectionPtr TGDraft::Sections::Item ( const _variant_t & Index ) {
    struct Section * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return SectionPtr(_result, false);
}

#pragma implementation_key(2916)
inline TGDraft::SectionPtr TGDraft::Sections::GetWorkingSection ( ) {
    struct Section * _result = 0;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SectionPtr(_result, false);
}

#pragma implementation_key(2917)
inline TGDraft::SectionPtr TGDraft::Sections::GetBackgroundSection ( ) {
    struct Section * _result = 0;
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SectionPtr(_result, false);
}

#pragma implementation_key(2918)
inline TGDraft::SheetPtr TGDraft::Sections::GetGet2DModelSheet ( ) {
    struct Sheet * _result = 0;
    _com_dispatch_method(this, 0x73, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SheetPtr(_result, false);
}

//
// interface _ISectionsAuto wrapper method implementations
//

#pragma implementation_key(2919)
inline TGFramework::ApplicationPtr TGDraft::_ISectionsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2920)
inline IDispatchPtr TGDraft::_ISectionsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2921)
inline long TGDraft::_ISectionsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2922)
inline TGDraft::SectionPtr TGDraft::_ISectionsAuto::Add ( const _variant_t & Name ) {
    struct Section * _result = 0;
    HRESULT _hr = raw_Add(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SectionPtr(_result, false);
}

#pragma implementation_key(2923)
inline TGDraft::SectionPtr TGDraft::_ISectionsAuto::Item ( const _variant_t & Index ) {
    struct Section * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SectionPtr(_result, false);
}

#pragma implementation_key(2924)
inline IUnknownPtr TGDraft::_ISectionsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2925)
inline TGDraft::SectionPtr TGDraft::_ISectionsAuto::GetWorkingSection ( ) {
    struct Section * _result = 0;
    HRESULT _hr = get_WorkingSection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SectionPtr(_result, false);
}

#pragma implementation_key(2926)
inline TGDraft::SectionPtr TGDraft::_ISectionsAuto::GetBackgroundSection ( ) {
    struct Section * _result = 0;
    HRESULT _hr = get_BackgroundSection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SectionPtr(_result, false);
}

#pragma implementation_key(2927)
inline TGDraft::SheetPtr TGDraft::_ISectionsAuto::GetGet2DModelSheet ( ) {
    struct Sheet * _result = 0;
    HRESULT _hr = get_Get2DModelSheet(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SheetPtr(_result, false);
}

//
// dispinterface ModelLinks wrapper method implementations
//

#pragma implementation_key(2928)
inline TGFramework::ApplicationPtr TGDraft::ModelLinks::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2929)
inline long TGDraft::ModelLinks::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2930)
inline IDispatchPtr TGDraft::ModelLinks::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2931)
inline TGDraft::ModelLinkPtr TGDraft::ModelLinks::Item ( const _variant_t & Index ) {
    struct ModelLink * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return ModelLinkPtr(_result, false);
}

#pragma implementation_key(2932)
inline TGDraft::ModelLinkPtr TGDraft::ModelLinks::Add ( _bstr_t FileName ) {
    struct ModelLink * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008", (BSTR)FileName);
    return ModelLinkPtr(_result, false);
}

#pragma implementation_key(2933)
inline HRESULT TGDraft::ModelLinks::ReduceFile ( ) {
    return _com_dispatch_method(this, 0x66, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// interface _IModelLinksAuto wrapper method implementations
//

#pragma implementation_key(2934)
inline TGFramework::ApplicationPtr TGDraft::_IModelLinksAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2935)
inline long TGDraft::_IModelLinksAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2936)
inline IDispatchPtr TGDraft::_IModelLinksAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2937)
inline TGDraft::ModelLinkPtr TGDraft::_IModelLinksAuto::Item ( const _variant_t & Index ) {
    struct ModelLink * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ModelLinkPtr(_result, false);
}

#pragma implementation_key(2938)
inline IUnknownPtr TGDraft::_IModelLinksAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2939)
inline TGDraft::ModelLinkPtr TGDraft::_IModelLinksAuto::Add ( _bstr_t FileName ) {
    struct ModelLink * _result = 0;
    HRESULT _hr = raw_Add(FileName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ModelLinkPtr(_result, false);
}

#pragma implementation_key(2940)
inline HRESULT TGDraft::_IModelLinksAuto::ReduceFile ( ) {
    HRESULT _hr = raw_ReduceFile();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface PartsLists wrapper method implementations
//

#pragma implementation_key(2941)
inline TGFramework::ApplicationPtr TGDraft::PartsLists::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2942)
inline IDispatchPtr TGDraft::PartsLists::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2943)
inline long TGDraft::PartsLists::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2944)
inline TGDraft::PartsListPtr TGDraft::PartsLists::Item ( const _variant_t & Index ) {
    struct PartsList * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return PartsListPtr(_result, false);
}

#pragma implementation_key(2945)
inline TGDraft::PartsListPtr TGDraft::PartsLists::Add ( struct DrawingView * DrawingView, _bstr_t SavedSettings, long AutoBalloon, long CreatePartsList ) {
    struct PartsList * _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0008\x0003\x0003", DrawingView, (BSTR)SavedSettings, AutoBalloon, CreatePartsList);
    return PartsListPtr(_result, false);
}

#pragma implementation_key(2946)
inline TGDraft::PartsListPtr TGDraft::PartsLists::AddEx ( struct DrawingView * DrawingView, long LinkToActive, _bstr_t SavedSettings, long AutoBalloon, long CreatePartsList ) {
    struct PartsList * _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0003\x0008\x0003\x0003", DrawingView, LinkToActive, (BSTR)SavedSettings, AutoBalloon, CreatePartsList);
    return PartsListPtr(_result, false);
}

#pragma implementation_key(2947)
inline TGDraft::PartsListPtr TGDraft::PartsLists::AddFamilyOfAssemblyPartsList ( struct DrawingView * DrawingView, long LinkToActive, _bstr_t SavedSettings, long AutoBalloon, long CreatePartsList ) {
    struct PartsList * _result = 0;
    _com_dispatch_method(this, 0x6a, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0003\x0008\x0003\x0003", DrawingView, LinkToActive, (BSTR)SavedSettings, AutoBalloon, CreatePartsList);
    return PartsListPtr(_result, false);
}

#pragma implementation_key(2948)
inline TGDraft::PartsListPtr TGDraft::PartsLists::AddFromExistingPartsList ( struct PartsList * pExistingPartsList, _bstr_t AssemblyFileFullPath ) {
    struct PartsList * _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0008", pExistingPartsList, (BSTR)AssemblyFileFullPath);
    return PartsListPtr(_result, false);
}

//
// dispinterface PartsList wrapper method implementations
//

#pragma implementation_key(2949)
inline TGFramework::ApplicationPtr TGDraft::PartsList::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2950)
inline _bstr_t TGDraft::PartsList::GetAssemblyFileName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2951)
inline IDispatchPtr TGDraft::PartsList::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2952)
inline HRESULT TGDraft::PartsList::Update ( ) {
    return _com_dispatch_method(this, 0x68, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2953)
inline HRESULT TGDraft::PartsList::CopyToClipboard ( ) {
    return _com_dispatch_method(this, 0x69, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2954)
inline TGDraft::ModelLinkPtr TGDraft::PartsList::GetModelLink ( ) {
    struct ModelLink * _result = 0;
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ModelLinkPtr(_result, false);
}

#pragma implementation_key(2955)
inline HRESULT TGDraft::PartsList::Delete ( ) {
    return _com_dispatch_method(this, 0x6c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2956)
inline void TGDraft::PartsList::PutSavedSettings ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2957)
inline HRESULT TGDraft::PartsList::SetOrigin ( double x, double y ) {
    return _com_dispatch_method(this, 0x6e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(2958)
inline HRESULT TGDraft::PartsList::GetOrigin ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x6d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(2959)
inline HRESULT TGDraft::PartsList::GetListOfSavedSettings ( long * NumSavedSettings, SAFEARRAY * * ListOfSavedSettings ) {
    return _com_dispatch_method(this, 0x6f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6008", NumSavedSettings, ListOfSavedSettings);
}

#pragma implementation_key(2960)
inline VARIANT_BOOL TGDraft::PartsList::GetIsUpToDate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2961)
inline TGDraft::TableCellPtr TGDraft::PartsList::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex ) {
    struct TableCell * _result = 0;
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000c\x000c", &RowIndex, &ColumnIndex);
    return TableCellPtr(_result, false);
}

#pragma implementation_key(2962)
inline enum TGDraft::TitlePosition TGDraft::PartsList::GetColumnHeaderPosition ( ) {
    enum TitlePosition _result;
    _com_dispatch_method(this, 0x73, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2963)
inline void TGDraft::PartsList::PutColumnHeaderPosition ( enum TitlePosition _arg1 ) {
    _com_dispatch_method(this, 0x73, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2964)
inline TGDraft::TableColumnsPtr TGDraft::PartsList::GetColumns ( ) {
    struct TableColumns * _result = 0;
    _com_dispatch_method(this, 0x74, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableColumnsPtr(_result, false);
}

#pragma implementation_key(2965)
inline double TGDraft::PartsList::GetMargin ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2966)
inline void TGDraft::PartsList::PutMargin ( double _arg1 ) {
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2967)
inline long TGDraft::PartsList::GetMaximumRows ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2968)
inline void TGDraft::PartsList::PutMaximumRows ( long _arg1 ) {
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2969)
inline double TGDraft::PartsList::GetPageGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x7a, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2970)
inline void TGDraft::PartsList::PutPageGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x7a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2971)
inline VARIANT_BOOL TGDraft::PartsList::GetReverseDisplayOrder ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2972)
inline void TGDraft::PartsList::PutReverseDisplayOrder ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2973)
inline TGDraft::TableRowsPtr TGDraft::PartsList::GetRows ( ) {
    struct TableRows * _result = 0;
    _com_dispatch_method(this, 0x7d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableRowsPtr(_result, false);
}

#pragma implementation_key(2974)
inline VARIANT_BOOL TGDraft::PartsList::GetShowColumnHeader ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2975)
inline void TGDraft::PartsList::PutShowColumnHeader ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x7e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2976)
inline _bstr_t TGDraft::PartsList::GetTableStyle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2977)
inline void TGDraft::PartsList::PutTableStyle ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x7f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2978)
inline TGDraft::TableTitlesPtr TGDraft::PartsList::GetTitles ( ) {
    struct TableTitles * _result = 0;
    _com_dispatch_method(this, 0x80, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableTitlesPtr(_result, false);
}

#pragma implementation_key(2979)
inline enum TGDraft::TableAnchorPoint TGDraft::PartsList::GetAnchorPoint ( ) {
    enum TableAnchorPoint _result;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2980)
inline void TGDraft::PartsList::PutAnchorPoint ( enum TableAnchorPoint _arg1 ) {
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2981)
inline TGDraft::TablePagesPtr TGDraft::PartsList::GetPages ( ) {
    struct TablePages * _result = 0;
    _com_dispatch_method(this, 0x7b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TablePagesPtr(_result, false);
}

#pragma implementation_key(2982)
inline double TGDraft::PartsList::GetHeaderFixedRowHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2983)
inline void TGDraft::PartsList::PutHeaderFixedRowHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2984)
inline double TGDraft::PartsList::GetDataFixedRowHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x75, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2985)
inline void TGDraft::PartsList::PutDataFixedRowHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x75, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2986)
inline double TGDraft::PartsList::GetMaximumHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2987)
inline void TGDraft::PartsList::PutMaximumHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2988)
inline HRESULT TGDraft::PartsList::ConvertToTable ( ) {
    return _com_dispatch_method(this, 0x81, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2989)
inline enum TGDraft::PartsListType TGDraft::PartsList::GetListType ( ) {
    enum PartsListType _result;
    _com_dispatch_method(this, 0x82, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2990)
inline void TGDraft::PartsList::PutListType ( enum PartsListType _arg1 ) {
    _com_dispatch_method(this, 0x82, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2991)
inline VARIANT_BOOL TGDraft::PartsList::GetUseAssemblyItemNumbers ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x83, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2992)
inline void TGDraft::PartsList::PutUseAssemblyItemNumbers ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x83, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2993)
inline VARIANT_BOOL TGDraft::PartsList::GetShowTopAssembly ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x84, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2994)
inline void TGDraft::PartsList::PutShowTopAssembly ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x84, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2995)
inline VARIANT_BOOL TGDraft::PartsList::GetUseLevelBasedItemNumbers ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x85, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2996)
inline void TGDraft::PartsList::PutUseLevelBasedItemNumbers ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x85, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2997)
inline long TGDraft::PartsList::GetNumberOfHeaderRows ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x86, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2998)
inline void TGDraft::PartsList::PutNumberOfHeaderRows ( long _arg1 ) {
    _com_dispatch_method(this, 0x86, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2999)
inline long TGDraft::PartsList::GetMaximumRowsFirstPage ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x87, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3000)
inline void TGDraft::PartsList::PutMaximumRowsFirstPage ( long _arg1 ) {
    _com_dispatch_method(this, 0x87, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3001)
inline long TGDraft::PartsList::GetMaximumRowsAdditionalPages ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x88, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3002)
inline void TGDraft::PartsList::PutMaximumRowsAdditionalPages ( long _arg1 ) {
    _com_dispatch_method(this, 0x88, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3003)
inline double TGDraft::PartsList::GetMaximumHeightFirstPage ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x89, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3004)
inline void TGDraft::PartsList::PutMaximumHeightFirstPage ( double _arg1 ) {
    _com_dispatch_method(this, 0x89, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3005)
inline double TGDraft::PartsList::GetMaximumHeightAdditionalPages ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x8a, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3006)
inline void TGDraft::PartsList::PutMaximumHeightAdditionalPages ( double _arg1 ) {
    _com_dispatch_method(this, 0x8a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3007)
inline VARIANT_BOOL TGDraft::PartsList::GetCreateNewSheetsForTable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3008)
inline void TGDraft::PartsList::PutCreateNewSheetsForTable ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3009)
inline _bstr_t TGDraft::PartsList::GetFirstSheetBackgroundName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x8c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3010)
inline void TGDraft::PartsList::PutFirstSheetBackgroundName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3011)
inline _bstr_t TGDraft::PartsList::GetAdditionalSheetsBackgroundName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x8d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3012)
inline void TGDraft::PartsList::PutAdditionalSheetsBackgroundName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3013)
inline VARIANT_BOOL TGDraft::PartsList::GetShowSheetBackground ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3014)
inline void TGDraft::PartsList::PutShowSheetBackground ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3015)
inline VARIANT_BOOL TGDraft::PartsList::GetMaintainSheetsWithTableSize ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3016)
inline void TGDraft::PartsList::PutMaintainSheetsWithTableSize ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3017)
inline VARIANT_BOOL TGDraft::PartsList::GetEnableGroups ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x90, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3018)
inline void TGDraft::PartsList::PutEnableGroups ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x90, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3019)
inline TGDraft::TableGroupsPtr TGDraft::PartsList::GetGroups ( ) {
    struct TableGroups * _result = 0;
    _com_dispatch_method(this, 0x91, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableGroupsPtr(_result, false);
}

#pragma implementation_key(3020)
inline VARIANT_BOOL TGDraft::PartsList::GetWrapDataCellsToNewRow ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x92, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3021)
inline void TGDraft::PartsList::PutWrapDataCellsToNewRow ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x92, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3022)
inline VARIANT_BOOL TGDraft::PartsList::GetFillEndOfTableWithBlankRows ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x93, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3023)
inline void TGDraft::PartsList::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x93, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3024)
inline long TGDraft::PartsList::GetGroupByColumn ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x94, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3025)
inline void TGDraft::PartsList::PutGroupByColumn ( long _arg1 ) {
    _com_dispatch_method(this, 0x94, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3026)
inline VARIANT_BOOL TGDraft::PartsList::GetActive ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x9c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3027)
inline void TGDraft::PartsList::PutActive ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x9c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3028)
inline long TGDraft::PartsList::GetItemNumberStart ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3029)
inline void TGDraft::PartsList::PutItemNumberStart ( long _arg1 ) {
    _com_dispatch_method(this, 0x9b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3030)
inline long TGDraft::PartsList::GetItemNumberIncrement ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3031)
inline void TGDraft::PartsList::PutItemNumberIncrement ( long _arg1 ) {
    _com_dispatch_method(this, 0x9a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3032)
inline VARIANT_BOOL TGDraft::PartsList::GetMarkUnballoonedItems ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x9f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3033)
inline void TGDraft::PartsList::PutMarkUnballoonedItems ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x9f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3034)
inline _bstr_t TGDraft::PartsList::GetMarkUnballoonedItemsString ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xa0, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3035)
inline void TGDraft::PartsList::PutMarkUnballoonedItemsString ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xa0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3036)
inline VARIANT_BOOL TGDraft::PartsList::GetRenumberAccordingToSortOrder ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xa2, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3037)
inline void TGDraft::PartsList::PutRenumberAccordingToSortOrder ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xa2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3038)
inline VARIANT_BOOL TGDraft::PartsList::GetConvertDeletedPartsIntoUserDefinedRows ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x97, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3039)
inline void TGDraft::PartsList::PutConvertDeletedPartsIntoUserDefinedRows ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x97, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3040)
inline _bstr_t TGDraft::PartsList::GetConfiguration ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x96, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3041)
inline void TGDraft::PartsList::PutConfiguration ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x96, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3042)
inline VARIANT_BOOL TGDraft::PartsList::GetExpandWeldmentSubAssemblies ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x98, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3043)
inline void TGDraft::PartsList::PutExpandWeldmentSubAssemblies ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x98, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3044)
inline VARIANT_BOOL TGDraft::PartsList::GetUseUniquenessCriteria_CutLength ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xa6, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3045)
inline void TGDraft::PartsList::PutUseUniquenessCriteria_CutLength ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xa6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3046)
inline VARIANT_BOOL TGDraft::PartsList::GetUseUniquenessCriteria_Mass ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xa7, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3047)
inline void TGDraft::PartsList::PutUseUniquenessCriteria_Mass ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xa7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3048)
inline VARIANT_BOOL TGDraft::PartsList::GetUseUniquenessCriteria_Miter ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xa8, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3049)
inline void TGDraft::PartsList::PutUseUniquenessCriteria_Miter ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xa8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3050)
inline VARIANT_BOOL TGDraft::PartsList::GetMarkAmbiguousValues ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x9d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3051)
inline void TGDraft::PartsList::PutMarkAmbiguousValues ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x9d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3052)
inline _bstr_t TGDraft::PartsList::GetMarkAmbiguousValuesString ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x9e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3053)
inline void TGDraft::PartsList::PutMarkAmbiguousValuesString ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3054)
inline VARIANT_BOOL TGDraft::PartsList::GetNonPlanerValues ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xb0, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3055)
inline void TGDraft::PartsList::PutNonPlanerValues ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xb0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3056)
inline _bstr_t TGDraft::PartsList::GetNonPlanerValuesString ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xb1, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3057)
inline void TGDraft::PartsList::PutNonPlanerValuesString ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xb1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3058)
inline enum TGDraft::PartListEndAngleRepresentationType TGDraft::PartsList::GetEndAngleRepresentation ( ) {
    enum PartListEndAngleRepresentationType _result;
    _com_dispatch_method(this, 0xb2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3059)
inline void TGDraft::PartsList::PutEndAngleRepresentation ( enum PartListEndAngleRepresentationType _arg1 ) {
    _com_dispatch_method(this, 0xb2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3060)
inline VARIANT_BOOL TGDraft::PartsList::GetUseUniquenessCriteria_AngleOrientation ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xb3, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3061)
inline void TGDraft::PartsList::PutUseUniquenessCriteria_AngleOrientation ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xb3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3062)
inline VARIANT_BOOL TGDraft::PartsList::GetTotalLengthPartsList ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xa4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3063)
inline void TGDraft::PartsList::PutTotalLengthPartsList ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xa4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3064)
inline _bstr_t TGDraft::PartsList::GetTotalLengthPartsList_ItemNumberSeparator ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xa5, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3065)
inline void TGDraft::PartsList::PutTotalLengthPartsList_ItemNumberSeparator ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xa5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3066)
inline HRESULT TGDraft::PartsList::SetShowComponent ( enum PartsListComponentType ComponentType, VARIANT_BOOL ShowComponent ) {
    return _com_dispatch_method(this, 0xa3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x000b", ComponentType, ShowComponent);
}

#pragma implementation_key(3067)
inline HRESULT TGDraft::PartsList::SetComponentSortPriority ( enum PartsListComponentType ComponentType, long ComponentSortPriority ) {
    return _com_dispatch_method(this, 0x95, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", ComponentType, ComponentSortPriority);
}

#pragma implementation_key(3068)
inline double TGDraft::PartsList::GetPipeRoughCutEndClearance ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xa1, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3069)
inline void TGDraft::PartsList::PutPipeRoughCutEndClearance ( double _arg1 ) {
    _com_dispatch_method(this, 0xa1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3070)
inline double TGDraft::PartsList::GetFrameRoughCutEndClearance ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x99, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3071)
inline void TGDraft::PartsList::PutFrameRoughCutEndClearance ( double _arg1 ) {
    _com_dispatch_method(this, 0x99, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3072)
inline double TGDraft::PartsList::GetTitleFixedRowHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xa9, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3073)
inline void TGDraft::PartsList::PutTitleFixedRowHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0xa9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3074)
inline double TGDraft::PartsList::GetMarginHorizontal ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xaa, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3075)
inline void TGDraft::PartsList::PutMarginHorizontal ( double _arg1 ) {
    _com_dispatch_method(this, 0xaa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3076)
inline double TGDraft::PartsList::GetMarginVertical ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xab, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3077)
inline void TGDraft::PartsList::PutMarginVertical ( double _arg1 ) {
    _com_dispatch_method(this, 0xab, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3078)
inline VARIANT_BOOL TGDraft::PartsList::GetUseUniquenessCriteria_TubeFlatLength ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xac, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3079)
inline void TGDraft::PartsList::PutUseUniquenessCriteria_TubeFlatLength ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xac, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3080)
inline VARIANT_BOOL TGDraft::PartsList::GetUseUniquenessCriteria_TubeMass ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xad, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3081)
inline void TGDraft::PartsList::PutUseUniquenessCriteria_TubeMass ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xad, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3082)
inline VARIANT_BOOL TGDraft::PartsList::GetMarkAmbiguousValuesForTube ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xae, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3083)
inline void TGDraft::PartsList::PutMarkAmbiguousValuesForTube ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xae, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3084)
inline _bstr_t TGDraft::PartsList::GetMarkAmbiguousValuesStringForTube ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xaf, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3085)
inline void TGDraft::PartsList::PutMarkAmbiguousValuesStringForTube ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xaf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3086)
inline VARIANT_BOOL TGDraft::PartsList::GetZeroQuantity ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xb4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3087)
inline void TGDraft::PartsList::PutZeroQuantity ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xb4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3088)
inline _bstr_t TGDraft::PartsList::GetZeroQuantityString ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xb5, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3089)
inline void TGDraft::PartsList::PutZeroQuantityString ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xb5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3090)
inline VARIANT_BOOL TGDraft::PartsList::IsFamilyOfAssemblyPartsList ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xb6, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3091)
inline HRESULT TGDraft::PartsList::GetAllFamilyOfAssemblyPartsListMembers ( struct DrawingView * DrawingView, long * NumOfMembers, SAFEARRAY * * ListOfMembers ) {
    return _com_dispatch_method(this, 0xb7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x4003\x6008", DrawingView, NumOfMembers, ListOfMembers);
}

#pragma implementation_key(3092)
inline HRESULT TGDraft::PartsList::GetSelectedFamilyOfAssemblyPartsListMembers ( long * NumOfMembers, SAFEARRAY * * ListOfMembers ) {
    return _com_dispatch_method(this, 0xb8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6008", NumOfMembers, ListOfMembers);
}

#pragma implementation_key(3093)
inline HRESULT TGDraft::PartsList::SetSelectedFamilyOfAssemblyPartsListMembers ( long * NumOfMembers, SAFEARRAY * * ListOfMembers ) {
    return _com_dispatch_method(this, 0xb9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6008", NumOfMembers, ListOfMembers);
}

#pragma implementation_key(3094)
inline _bstr_t TGDraft::PartsList::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xba, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3095)
inline HRESULT TGDraft::PartsList::GetUniquenessCriteria_Gusset ( VARIANT_BOOL * UseGussetMass, enum GussetPlateUniquenessCriteria * GussetPlateUniquenessCriteriaType ) {
    return _com_dispatch_method(this, 0xbb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b\x4003", UseGussetMass, GussetPlateUniquenessCriteriaType);
}

#pragma implementation_key(3096)
inline HRESULT TGDraft::PartsList::SetUniquenessCriteria_Gusset ( VARIANT_BOOL UseGussetMass, enum GussetPlateUniquenessCriteria GussetPlateUniquenessCriteriaType ) {
    return _com_dispatch_method(this, 0xbc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b\x0003", UseGussetMass, GussetPlateUniquenessCriteriaType);
}

#pragma implementation_key(3097)
inline HRESULT TGDraft::PartsList::GetGussetPlateNamingFormat ( BSTR * Name, enum GussetPlateNamingFormat * GussetPlateNamingFormat_Param1, enum GussetPlateNamingFormat * GussetPlateNamingFormat_Param2, enum GussetPlateNamingFormat * GussetPlateNamingFormat_Param3 ) {
    return _com_dispatch_method(this, 0xbd, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008\x4003\x4003\x4003", Name, GussetPlateNamingFormat_Param1, GussetPlateNamingFormat_Param2, GussetPlateNamingFormat_Param3);
}

#pragma implementation_key(3098)
inline HRESULT TGDraft::PartsList::SetGussetPlateNamingFormat ( _bstr_t Name, enum GussetPlateNamingFormat GussetPlateNamingFormat_Param1, enum GussetPlateNamingFormat GussetPlateNamingFormat_Param2, enum GussetPlateNamingFormat GussetPlateNamingFormat_Param3 ) {
    return _com_dispatch_method(this, 0xbe, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0003\x0003\x0003", (BSTR)Name, GussetPlateNamingFormat_Param1, GussetPlateNamingFormat_Param2, GussetPlateNamingFormat_Param3);
}

#pragma implementation_key(3099)
inline VARIANT_BOOL TGDraft::PartsList::IsTableSpecifiedByHeight ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xbf, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// interface _IPartsListsAuto wrapper method implementations
//

#pragma implementation_key(3100)
inline TGFramework::ApplicationPtr TGDraft::_IPartsListsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3101)
inline IDispatchPtr TGDraft::_IPartsListsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3102)
inline long TGDraft::_IPartsListsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3103)
inline TGDraft::PartsListPtr TGDraft::_IPartsListsAuto::Item ( const _variant_t & Index ) {
    struct PartsList * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PartsListPtr(_result, false);
}

#pragma implementation_key(3104)
inline IUnknownPtr TGDraft::_IPartsListsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3105)
inline TGDraft::PartsListPtr TGDraft::_IPartsListsAuto::Add ( struct DrawingView * DrawingView, _bstr_t SavedSettings, long AutoBalloon, long CreatePartsList ) {
    struct PartsList * _result = 0;
    HRESULT _hr = raw_Add(DrawingView, SavedSettings, AutoBalloon, CreatePartsList, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PartsListPtr(_result, false);
}

#pragma implementation_key(3106)
inline TGDraft::PartsListPtr TGDraft::_IPartsListsAuto::AddEx ( struct DrawingView * DrawingView, long LinkToActive, _bstr_t SavedSettings, long AutoBalloon, long CreatePartsList ) {
    struct PartsList * _result = 0;
    HRESULT _hr = raw_AddEx(DrawingView, LinkToActive, SavedSettings, AutoBalloon, CreatePartsList, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PartsListPtr(_result, false);
}

#pragma implementation_key(3107)
inline TGDraft::PartsListPtr TGDraft::_IPartsListsAuto::AddFamilyOfAssemblyPartsList ( struct DrawingView * DrawingView, long LinkToActive, _bstr_t SavedSettings, long AutoBalloon, long CreatePartsList ) {
    struct PartsList * _result = 0;
    HRESULT _hr = raw_AddFamilyOfAssemblyPartsList(DrawingView, LinkToActive, SavedSettings, AutoBalloon, CreatePartsList, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PartsListPtr(_result, false);
}

#pragma implementation_key(3108)
inline TGDraft::PartsListPtr TGDraft::_IPartsListsAuto::AddFromExistingPartsList ( struct PartsList * pExistingPartsList, _bstr_t AssemblyFileFullPath ) {
    struct PartsList * _result = 0;
    HRESULT _hr = raw_AddFromExistingPartsList(pExistingPartsList, AssemblyFileFullPath, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PartsListPtr(_result, false);
}

//
// dispinterface TableCell wrapper method implementations
//

#pragma implementation_key(3109)
inline TGFramework::ApplicationPtr TGDraft::TableCell::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3110)
inline IDispatchPtr TGDraft::TableCell::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3111)
inline _bstr_t TGDraft::TableCell::Getvalue ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3112)
inline void TGDraft::TableCell::Putvalue ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3113)
inline _bstr_t TGDraft::TableCell::GetFontName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3114)
inline void TGDraft::TableCell::PutFontName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3115)
inline enum TGFrameworkSupport::DimTextFontStyleConstants TGDraft::TableCell::GetFontStyle ( ) {
    enum TGFrameworkSupport::DimTextFontStyleConstants _result;
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3116)
inline void TGDraft::TableCell::PutFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants _arg1 ) {
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3117)
inline VARIANT_BOOL TGDraft::TableCell::GetUnderline ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3118)
inline void TGDraft::TableCell::PutUnderline ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3119)
inline enum TGFrameworkSupport::TextHorizontalAlignmentConstants TGDraft::TableCell::GetHorizontalAlignment ( ) {
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants _result;
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3120)
inline void TGDraft::TableCell::PutHorizontalAlignment ( enum TGFrameworkSupport::TextHorizontalAlignmentConstants _arg1 ) {
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3121)
inline enum TGFrameworkSupport::TextVerticalAlignmentConstants TGDraft::TableCell::GetVerticalAlignment ( ) {
    enum TGFrameworkSupport::TextVerticalAlignmentConstants _result;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3122)
inline void TGDraft::TableCell::PutVerticalAlignment ( enum TGFrameworkSupport::TextVerticalAlignmentConstants _arg1 ) {
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3123)
inline VARIANT_BOOL TGDraft::TableCell::GetAllowCellOverrides ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3124)
inline void TGDraft::TableCell::PutAllowCellOverrides ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3125)
inline double TGDraft::TableCell::GetFontSize ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3126)
inline _bstr_t TGDraft::TableCell::GetPropertyText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3127)
inline VARIANT_BOOL TGDraft::TableCell::GetIsOverridden ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// interface _ITableCellAuto wrapper method implementations
//

#pragma implementation_key(3128)
inline TGFramework::ApplicationPtr TGDraft::_ITableCellAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3129)
inline IDispatchPtr TGDraft::_ITableCellAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3130)
inline _bstr_t TGDraft::_ITableCellAuto::Getvalue ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_value(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3131)
inline void TGDraft::_ITableCellAuto::Putvalue ( _bstr_t value ) {
    HRESULT _hr = put_value(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3132)
inline _bstr_t TGDraft::_ITableCellAuto::GetFontName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FontName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3133)
inline void TGDraft::_ITableCellAuto::PutFontName ( _bstr_t FontName ) {
    HRESULT _hr = put_FontName(FontName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3134)
inline enum TGFrameworkSupport::DimTextFontStyleConstants TGDraft::_ITableCellAuto::GetFontStyle ( ) {
    enum TGFrameworkSupport::DimTextFontStyleConstants _result;
    HRESULT _hr = get_FontStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3135)
inline void TGDraft::_ITableCellAuto::PutFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants FontStyle ) {
    HRESULT _hr = put_FontStyle(FontStyle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3136)
inline VARIANT_BOOL TGDraft::_ITableCellAuto::GetUnderline ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Underline(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3137)
inline void TGDraft::_ITableCellAuto::PutUnderline ( VARIANT_BOOL Underline ) {
    HRESULT _hr = put_Underline(Underline);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3138)
inline enum TGFrameworkSupport::TextHorizontalAlignmentConstants TGDraft::_ITableCellAuto::GetHorizontalAlignment ( ) {
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants _result;
    HRESULT _hr = get_HorizontalAlignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3139)
inline void TGDraft::_ITableCellAuto::PutHorizontalAlignment ( enum TGFrameworkSupport::TextHorizontalAlignmentConstants HorizontalAlignment ) {
    HRESULT _hr = put_HorizontalAlignment(HorizontalAlignment);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3140)
inline enum TGFrameworkSupport::TextVerticalAlignmentConstants TGDraft::_ITableCellAuto::GetVerticalAlignment ( ) {
    enum TGFrameworkSupport::TextVerticalAlignmentConstants _result;
    HRESULT _hr = get_VerticalAlignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3141)
inline void TGDraft::_ITableCellAuto::PutVerticalAlignment ( enum TGFrameworkSupport::TextVerticalAlignmentConstants VerticalAlignment ) {
    HRESULT _hr = put_VerticalAlignment(VerticalAlignment);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3142)
inline VARIANT_BOOL TGDraft::_ITableCellAuto::GetAllowCellOverrides ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AllowCellOverrides(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3143)
inline void TGDraft::_ITableCellAuto::PutAllowCellOverrides ( VARIANT_BOOL AllowCellOverrides ) {
    HRESULT _hr = put_AllowCellOverrides(AllowCellOverrides);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3144)
inline double TGDraft::_ITableCellAuto::GetFontSize ( ) {
    double _result = 0;
    HRESULT _hr = get_FontSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3145)
inline _bstr_t TGDraft::_ITableCellAuto::GetPropertyText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PropertyText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3146)
inline VARIANT_BOOL TGDraft::_ITableCellAuto::GetIsOverridden ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsOverridden(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface TableColumns wrapper method implementations
//

#pragma implementation_key(3147)
inline TGFramework::ApplicationPtr TGDraft::TableColumns::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3148)
inline IDispatchPtr TGDraft::TableColumns::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3149)
inline long TGDraft::TableColumns::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3150)
inline TGDraft::TableColumnPtr TGDraft::TableColumns::Item ( const _variant_t & Index ) {
    struct TableColumn * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return TableColumnPtr(_result, false);
}

#pragma implementation_key(3151)
inline TGDraft::TableColumnPtr TGDraft::TableColumns::Add ( const _variant_t & Index, VARIANT_BOOL after ) {
    struct TableColumn * _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c\x000b", &Index, after);
    return TableColumnPtr(_result, false);
}

//
// dispinterface TableColumn wrapper method implementations
//

#pragma implementation_key(3152)
inline TGFramework::ApplicationPtr TGDraft::TableColumn::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3153)
inline IDispatchPtr TGDraft::TableColumn::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3154)
inline HRESULT TGDraft::TableColumn::Delete ( ) {
    return _com_dispatch_method(this, 0x68, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3155)
inline enum TGFrameworkSupport::TextHorizontalAlignmentConstants TGDraft::TableColumn::GetDataAlignment ( ) {
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants _result;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3156)
inline void TGDraft::TableColumn::PutDataAlignment ( enum TGFrameworkSupport::TextHorizontalAlignmentConstants _arg1 ) {
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3157)
inline _bstr_t TGDraft::TableColumn::GetHeader ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3158)
inline void TGDraft::TableColumn::PutHeader ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3159)
inline enum TGFrameworkSupport::TextHorizontalAlignmentConstants TGDraft::TableColumn::GetHeaderAlignment ( ) {
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants _result;
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3160)
inline void TGDraft::TableColumn::PutHeaderAlignment ( enum TGFrameworkSupport::TextHorizontalAlignmentConstants _arg1 ) {
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3161)
inline long TGDraft::TableColumn::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3162)
inline VARIANT_BOOL TGDraft::TableColumn::GetShow ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3163)
inline void TGDraft::TableColumn::PutShow ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3164)
inline VARIANT_BOOL TGDraft::TableColumn::GetSortAscending ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3165)
inline void TGDraft::TableColumn::PutSortAscending ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3166)
inline long TGDraft::TableColumn::GetSortPrecedence ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3167)
inline void TGDraft::TableColumn::PutSortPrecedence ( long _arg1 ) {
    _com_dispatch_method(this, 0x6e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3168)
inline double TGDraft::TableColumn::GetWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3169)
inline void TGDraft::TableColumn::PutWidth ( double _arg1 ) {
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3170)
inline void TGDraft::TableColumn::PutCurrentHeaderRow ( long _arg1 ) {
    _com_dispatch_method(this, 0x73, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3171)
inline _bstr_t TGDraft::TableColumn::GetHeaderRowValue ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x74, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3172)
inline void TGDraft::TableColumn::PutHeaderRowValue ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x74, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3173)
inline enum TGFrameworkSupport::TextHorizontalAlignmentConstants TGDraft::TableColumn::GetHeaderRowHorizontalAlignment ( ) {
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants _result;
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3174)
inline void TGDraft::TableColumn::PutHeaderRowHorizontalAlignment ( enum TGFrameworkSupport::TextHorizontalAlignmentConstants _arg1 ) {
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3175)
inline enum TGFrameworkSupport::TextVerticalAlignmentConstants TGDraft::TableColumn::GetHeaderRowVerticalAlignment ( ) {
    enum TGFrameworkSupport::TextVerticalAlignmentConstants _result;
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3176)
inline void TGDraft::TableColumn::PutHeaderRowVerticalAlignment ( enum TGFrameworkSupport::TextVerticalAlignmentConstants _arg1 ) {
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3177)
inline enum TGDraft::TableTextOrientation TGDraft::TableColumn::GetHeaderRowOrientation ( ) {
    enum TableTextOrientation _result;
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3178)
inline void TGDraft::TableColumn::PutHeaderRowOrientation ( enum TableTextOrientation _arg1 ) {
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3179)
inline VARIANT_BOOL TGDraft::TableColumn::GetHeaderRowFitToWidth ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x75, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3180)
inline void TGDraft::TableColumn::PutHeaderRowFitToWidth ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x75, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3181)
inline VARIANT_BOOL TGDraft::TableColumn::GetHeaderRowMergeWithNext ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3182)
inline void TGDraft::TableColumn::PutHeaderRowMergeWithNext ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3183)
inline enum TGFrameworkSupport::TextHorizontalAlignmentConstants TGDraft::TableColumn::GetDataHorizontalAlignment ( ) {
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants _result;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3184)
inline void TGDraft::TableColumn::PutDataHorizontalAlignment ( enum TGFrameworkSupport::TextHorizontalAlignmentConstants _arg1 ) {
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3185)
inline enum TGFrameworkSupport::TextVerticalAlignmentConstants TGDraft::TableColumn::GetDataVerticalAlignment ( ) {
    enum TGFrameworkSupport::TextVerticalAlignmentConstants _result;
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3186)
inline void TGDraft::TableColumn::PutDataVerticalAlignment ( enum TGFrameworkSupport::TextVerticalAlignmentConstants _arg1 ) {
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3187)
inline VARIANT_BOOL TGDraft::TableColumn::GetDataFitToWidth ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3188)
inline void TGDraft::TableColumn::PutDataFitToWidth ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3189)
inline _bstr_t TGDraft::TableColumn::GetPropertyText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3190)
inline void TGDraft::TableColumn::PutPropertyText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x7a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3191)
inline VARIANT_BOOL TGDraft::TableColumn::GetDataMergeCellsWithSameValue ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3192)
inline void TGDraft::TableColumn::PutDataMergeCellsWithSameValue ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x7b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3193)
inline _bstr_t TGDraft::TableColumn::GetHeaderRowFontName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3194)
inline void TGDraft::TableColumn::PutHeaderRowFontName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3195)
inline enum TGFrameworkSupport::DimTextFontStyleConstants TGDraft::TableColumn::GetHeaderRowFontStyle ( ) {
    enum TGFrameworkSupport::DimTextFontStyleConstants _result;
    _com_dispatch_method(this, 0x7d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3196)
inline void TGDraft::TableColumn::PutHeaderRowFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants _arg1 ) {
    _com_dispatch_method(this, 0x7d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3197)
inline VARIANT_BOOL TGDraft::TableColumn::GetHeaderRowUnderline ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3198)
inline void TGDraft::TableColumn::PutHeaderRowUnderline ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x7e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3199)
inline _bstr_t TGDraft::TableColumn::GetDataFontName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3200)
inline void TGDraft::TableColumn::PutDataFontName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x7f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3201)
inline enum TGFrameworkSupport::DimTextFontStyleConstants TGDraft::TableColumn::GetDataFontStyle ( ) {
    enum TGFrameworkSupport::DimTextFontStyleConstants _result;
    _com_dispatch_method(this, 0x80, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3202)
inline void TGDraft::TableColumn::PutDataFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants _arg1 ) {
    _com_dispatch_method(this, 0x80, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3203)
inline VARIANT_BOOL TGDraft::TableColumn::GetDataUnderline ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3204)
inline void TGDraft::TableColumn::PutDataUnderline ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3205)
inline double TGDraft::TableColumn::GetHeaderRowHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x82, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3206)
inline double TGDraft::TableColumn::GetHeaderRowFontSize ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x83, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3207)
inline VARIANT_BOOL TGDraft::TableColumn::GetHeaderRowMergeWithNextVerticalCell ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x84, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3208)
inline void TGDraft::TableColumn::PutHeaderRowMergeWithNextVerticalCell ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x84, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3209)
inline double TGDraft::TableColumn::GetDataFontSize ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x85, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

//
// interface _ITableColumnsAuto wrapper method implementations
//

#pragma implementation_key(3210)
inline TGFramework::ApplicationPtr TGDraft::_ITableColumnsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3211)
inline IDispatchPtr TGDraft::_ITableColumnsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3212)
inline long TGDraft::_ITableColumnsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3213)
inline TGDraft::TableColumnPtr TGDraft::_ITableColumnsAuto::Item ( const _variant_t & Index ) {
    struct TableColumn * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableColumnPtr(_result, false);
}

#pragma implementation_key(3214)
inline IUnknownPtr TGDraft::_ITableColumnsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3215)
inline TGDraft::TableColumnPtr TGDraft::_ITableColumnsAuto::Add ( const _variant_t & Index, VARIANT_BOOL after ) {
    struct TableColumn * _result = 0;
    HRESULT _hr = raw_Add(Index, after, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableColumnPtr(_result, false);
}

//
// interface _ITableColumnAuto wrapper method implementations
//

#pragma implementation_key(3216)
inline TGFramework::ApplicationPtr TGDraft::_ITableColumnAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3217)
inline IDispatchPtr TGDraft::_ITableColumnAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3218)
inline HRESULT TGDraft::_ITableColumnAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3219)
inline enum TGFrameworkSupport::TextHorizontalAlignmentConstants TGDraft::_ITableColumnAuto::GetDataAlignment ( ) {
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants _result;
    HRESULT _hr = get_DataAlignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3220)
inline void TGDraft::_ITableColumnAuto::PutDataAlignment ( enum TGFrameworkSupport::TextHorizontalAlignmentConstants DataAlignment ) {
    HRESULT _hr = put_DataAlignment(DataAlignment);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3221)
inline _bstr_t TGDraft::_ITableColumnAuto::GetHeader ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Header(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3222)
inline void TGDraft::_ITableColumnAuto::PutHeader ( _bstr_t Header ) {
    HRESULT _hr = put_Header(Header);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3223)
inline enum TGFrameworkSupport::TextHorizontalAlignmentConstants TGDraft::_ITableColumnAuto::GetHeaderAlignment ( ) {
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants _result;
    HRESULT _hr = get_HeaderAlignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3224)
inline void TGDraft::_ITableColumnAuto::PutHeaderAlignment ( enum TGFrameworkSupport::TextHorizontalAlignmentConstants HeaderAlignment ) {
    HRESULT _hr = put_HeaderAlignment(HeaderAlignment);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3225)
inline long TGDraft::_ITableColumnAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3226)
inline VARIANT_BOOL TGDraft::_ITableColumnAuto::GetShow ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Show(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3227)
inline void TGDraft::_ITableColumnAuto::PutShow ( VARIANT_BOOL Show ) {
    HRESULT _hr = put_Show(Show);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3228)
inline VARIANT_BOOL TGDraft::_ITableColumnAuto::GetSortAscending ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SortAscending(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3229)
inline void TGDraft::_ITableColumnAuto::PutSortAscending ( VARIANT_BOOL SortAscending ) {
    HRESULT _hr = put_SortAscending(SortAscending);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3230)
inline long TGDraft::_ITableColumnAuto::GetSortPrecedence ( ) {
    long _result = 0;
    HRESULT _hr = get_SortPrecedence(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3231)
inline void TGDraft::_ITableColumnAuto::PutSortPrecedence ( long SortPrecedence ) {
    HRESULT _hr = put_SortPrecedence(SortPrecedence);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3232)
inline double TGDraft::_ITableColumnAuto::GetWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3233)
inline void TGDraft::_ITableColumnAuto::PutWidth ( double Width ) {
    HRESULT _hr = put_Width(Width);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3234)
inline void TGDraft::_ITableColumnAuto::PutCurrentHeaderRow ( long _arg1 ) {
    HRESULT _hr = put_CurrentHeaderRow(_arg1);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3235)
inline _bstr_t TGDraft::_ITableColumnAuto::GetHeaderRowValue ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HeaderRowValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3236)
inline void TGDraft::_ITableColumnAuto::PutHeaderRowValue ( _bstr_t HeaderRowValue ) {
    HRESULT _hr = put_HeaderRowValue(HeaderRowValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3237)
inline enum TGFrameworkSupport::TextHorizontalAlignmentConstants TGDraft::_ITableColumnAuto::GetHeaderRowHorizontalAlignment ( ) {
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants _result;
    HRESULT _hr = get_HeaderRowHorizontalAlignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3238)
inline void TGDraft::_ITableColumnAuto::PutHeaderRowHorizontalAlignment ( enum TGFrameworkSupport::TextHorizontalAlignmentConstants HeaderRowHorizontalAlignment ) {
    HRESULT _hr = put_HeaderRowHorizontalAlignment(HeaderRowHorizontalAlignment);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3239)
inline enum TGFrameworkSupport::TextVerticalAlignmentConstants TGDraft::_ITableColumnAuto::GetHeaderRowVerticalAlignment ( ) {
    enum TGFrameworkSupport::TextVerticalAlignmentConstants _result;
    HRESULT _hr = get_HeaderRowVerticalAlignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3240)
inline void TGDraft::_ITableColumnAuto::PutHeaderRowVerticalAlignment ( enum TGFrameworkSupport::TextVerticalAlignmentConstants HeaderRowVerticalAlignment ) {
    HRESULT _hr = put_HeaderRowVerticalAlignment(HeaderRowVerticalAlignment);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3241)
inline enum TGDraft::TableTextOrientation TGDraft::_ITableColumnAuto::GetHeaderRowOrientation ( ) {
    enum TableTextOrientation _result;
    HRESULT _hr = get_HeaderRowOrientation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3242)
inline void TGDraft::_ITableColumnAuto::PutHeaderRowOrientation ( enum TableTextOrientation HeaderRowOrientation ) {
    HRESULT _hr = put_HeaderRowOrientation(HeaderRowOrientation);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3243)
inline VARIANT_BOOL TGDraft::_ITableColumnAuto::GetHeaderRowFitToWidth ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HeaderRowFitToWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3244)
inline void TGDraft::_ITableColumnAuto::PutHeaderRowFitToWidth ( VARIANT_BOOL HeaderRowFitToWidth ) {
    HRESULT _hr = put_HeaderRowFitToWidth(HeaderRowFitToWidth);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3245)
inline VARIANT_BOOL TGDraft::_ITableColumnAuto::GetHeaderRowMergeWithNext ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HeaderRowMergeWithNext(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3246)
inline void TGDraft::_ITableColumnAuto::PutHeaderRowMergeWithNext ( VARIANT_BOOL HeaderRowMergeWithNext ) {
    HRESULT _hr = put_HeaderRowMergeWithNext(HeaderRowMergeWithNext);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3247)
inline enum TGFrameworkSupport::TextHorizontalAlignmentConstants TGDraft::_ITableColumnAuto::GetDataHorizontalAlignment ( ) {
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants _result;
    HRESULT _hr = get_DataHorizontalAlignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3248)
inline void TGDraft::_ITableColumnAuto::PutDataHorizontalAlignment ( enum TGFrameworkSupport::TextHorizontalAlignmentConstants DataHorizontalAlignment ) {
    HRESULT _hr = put_DataHorizontalAlignment(DataHorizontalAlignment);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3249)
inline enum TGFrameworkSupport::TextVerticalAlignmentConstants TGDraft::_ITableColumnAuto::GetDataVerticalAlignment ( ) {
    enum TGFrameworkSupport::TextVerticalAlignmentConstants _result;
    HRESULT _hr = get_DataVerticalAlignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3250)
inline void TGDraft::_ITableColumnAuto::PutDataVerticalAlignment ( enum TGFrameworkSupport::TextVerticalAlignmentConstants DataVerticalAlignment ) {
    HRESULT _hr = put_DataVerticalAlignment(DataVerticalAlignment);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3251)
inline VARIANT_BOOL TGDraft::_ITableColumnAuto::GetDataFitToWidth ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DataFitToWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3252)
inline void TGDraft::_ITableColumnAuto::PutDataFitToWidth ( VARIANT_BOOL DataFitToWidth ) {
    HRESULT _hr = put_DataFitToWidth(DataFitToWidth);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3253)
inline _bstr_t TGDraft::_ITableColumnAuto::GetPropertyText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PropertyText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3254)
inline void TGDraft::_ITableColumnAuto::PutPropertyText ( _bstr_t PropertyText ) {
    HRESULT _hr = put_PropertyText(PropertyText);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3255)
inline VARIANT_BOOL TGDraft::_ITableColumnAuto::GetDataMergeCellsWithSameValue ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DataMergeCellsWithSameValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3256)
inline void TGDraft::_ITableColumnAuto::PutDataMergeCellsWithSameValue ( VARIANT_BOOL DataMergeCellsWithSameValue ) {
    HRESULT _hr = put_DataMergeCellsWithSameValue(DataMergeCellsWithSameValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3257)
inline _bstr_t TGDraft::_ITableColumnAuto::GetHeaderRowFontName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HeaderRowFontName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3258)
inline void TGDraft::_ITableColumnAuto::PutHeaderRowFontName ( _bstr_t FontName ) {
    HRESULT _hr = put_HeaderRowFontName(FontName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3259)
inline enum TGFrameworkSupport::DimTextFontStyleConstants TGDraft::_ITableColumnAuto::GetHeaderRowFontStyle ( ) {
    enum TGFrameworkSupport::DimTextFontStyleConstants _result;
    HRESULT _hr = get_HeaderRowFontStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3260)
inline void TGDraft::_ITableColumnAuto::PutHeaderRowFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants FontStyle ) {
    HRESULT _hr = put_HeaderRowFontStyle(FontStyle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3261)
inline VARIANT_BOOL TGDraft::_ITableColumnAuto::GetHeaderRowUnderline ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HeaderRowUnderline(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3262)
inline void TGDraft::_ITableColumnAuto::PutHeaderRowUnderline ( VARIANT_BOOL Underline ) {
    HRESULT _hr = put_HeaderRowUnderline(Underline);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3263)
inline _bstr_t TGDraft::_ITableColumnAuto::GetDataFontName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DataFontName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3264)
inline void TGDraft::_ITableColumnAuto::PutDataFontName ( _bstr_t FontName ) {
    HRESULT _hr = put_DataFontName(FontName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3265)
inline enum TGFrameworkSupport::DimTextFontStyleConstants TGDraft::_ITableColumnAuto::GetDataFontStyle ( ) {
    enum TGFrameworkSupport::DimTextFontStyleConstants _result;
    HRESULT _hr = get_DataFontStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3266)
inline void TGDraft::_ITableColumnAuto::PutDataFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants FontStyle ) {
    HRESULT _hr = put_DataFontStyle(FontStyle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3267)
inline VARIANT_BOOL TGDraft::_ITableColumnAuto::GetDataUnderline ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DataUnderline(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3268)
inline void TGDraft::_ITableColumnAuto::PutDataUnderline ( VARIANT_BOOL Underline ) {
    HRESULT _hr = put_DataUnderline(Underline);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3269)
inline double TGDraft::_ITableColumnAuto::GetHeaderRowHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_HeaderRowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3270)
inline double TGDraft::_ITableColumnAuto::GetHeaderRowFontSize ( ) {
    double _result = 0;
    HRESULT _hr = get_HeaderRowFontSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3271)
inline VARIANT_BOOL TGDraft::_ITableColumnAuto::GetHeaderRowMergeWithNextVerticalCell ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HeaderRowMergeWithNextVerticalCell(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3272)
inline void TGDraft::_ITableColumnAuto::PutHeaderRowMergeWithNextVerticalCell ( VARIANT_BOOL HeaderRowMergeWithNextVerticalCell ) {
    HRESULT _hr = put_HeaderRowMergeWithNextVerticalCell(HeaderRowMergeWithNextVerticalCell);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3273)
inline double TGDraft::_ITableColumnAuto::GetDataFontSize ( ) {
    double _result = 0;
    HRESULT _hr = get_DataFontSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface TableRows wrapper method implementations
//

#pragma implementation_key(3274)
inline TGFramework::ApplicationPtr TGDraft::TableRows::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3275)
inline IDispatchPtr TGDraft::TableRows::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3276)
inline long TGDraft::TableRows::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3277)
inline TGDraft::TableRowPtr TGDraft::TableRows::Item ( const _variant_t & Index ) {
    struct TableRow * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return TableRowPtr(_result, false);
}

#pragma implementation_key(3278)
inline TGDraft::TableRowPtr TGDraft::TableRows::Add ( const _variant_t & Index, VARIANT_BOOL after ) {
    struct TableRow * _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c\x000b", &Index, after);
    return TableRowPtr(_result, false);
}

//
// dispinterface TableRow wrapper method implementations
//

#pragma implementation_key(3279)
inline TGFramework::ApplicationPtr TGDraft::TableRow::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3280)
inline IDispatchPtr TGDraft::TableRow::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3281)
inline HRESULT TGDraft::TableRow::Delete ( ) {
    return _com_dispatch_method(this, 0x67, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3282)
inline long TGDraft::TableRow::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3283)
inline TGDraft::ModelNodePtr TGDraft::TableRow::GetModelNode ( ) {
    struct ModelNode * _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ModelNodePtr(_result, false);
}

#pragma implementation_key(3284)
inline VARIANT_BOOL TGDraft::TableRow::GetHideRow ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3285)
inline void TGDraft::TableRow::PutHideRow ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3286)
inline double TGDraft::TableRow::GetRowHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

//
// interface _ITableRowsAuto wrapper method implementations
//

#pragma implementation_key(3287)
inline TGFramework::ApplicationPtr TGDraft::_ITableRowsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3288)
inline IDispatchPtr TGDraft::_ITableRowsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3289)
inline long TGDraft::_ITableRowsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3290)
inline TGDraft::TableRowPtr TGDraft::_ITableRowsAuto::Item ( const _variant_t & Index ) {
    struct TableRow * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableRowPtr(_result, false);
}

#pragma implementation_key(3291)
inline IUnknownPtr TGDraft::_ITableRowsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3292)
inline TGDraft::TableRowPtr TGDraft::_ITableRowsAuto::Add ( const _variant_t & Index, VARIANT_BOOL after ) {
    struct TableRow * _result = 0;
    HRESULT _hr = raw_Add(Index, after, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableRowPtr(_result, false);
}

//
// interface _ITableRowAuto wrapper method implementations
//

#pragma implementation_key(3293)
inline TGFramework::ApplicationPtr TGDraft::_ITableRowAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3294)
inline IDispatchPtr TGDraft::_ITableRowAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3295)
inline HRESULT TGDraft::_ITableRowAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3296)
inline long TGDraft::_ITableRowAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3297)
inline TGDraft::ModelNodePtr TGDraft::_ITableRowAuto::GetModelNode ( ) {
    struct ModelNode * _result = 0;
    HRESULT _hr = get_ModelNode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ModelNodePtr(_result, false);
}

#pragma implementation_key(3298)
inline VARIANT_BOOL TGDraft::_ITableRowAuto::GetHideRow ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HideRow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3299)
inline void TGDraft::_ITableRowAuto::PutHideRow ( VARIANT_BOOL HideRow ) {
    HRESULT _hr = put_HideRow(HideRow);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3300)
inline double TGDraft::_ITableRowAuto::GetRowHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_RowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface TableTitles wrapper method implementations
//

#pragma implementation_key(3301)
inline TGFramework::ApplicationPtr TGDraft::TableTitles::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3302)
inline IDispatchPtr TGDraft::TableTitles::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3303)
inline long TGDraft::TableTitles::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3304)
inline TGDraft::TableTitlePtr TGDraft::TableTitles::Item ( const _variant_t & Index ) {
    struct TableTitle * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return TableTitlePtr(_result, false);
}

#pragma implementation_key(3305)
inline TGDraft::TableTitlePtr TGDraft::TableTitles::Add ( ) {
    struct TableTitle * _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TableTitlePtr(_result, false);
}

//
// dispinterface TableTitle wrapper method implementations
//

#pragma implementation_key(3306)
inline TGFramework::ApplicationPtr TGDraft::TableTitle::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3307)
inline IDispatchPtr TGDraft::TableTitle::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3308)
inline HRESULT TGDraft::TableTitle::Delete ( ) {
    return _com_dispatch_method(this, 0x67, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3309)
inline long TGDraft::TableTitle::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3310)
inline enum TGDraft::TitlePosition TGDraft::TableTitle::GetPosition ( ) {
    enum TitlePosition _result;
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3311)
inline void TGDraft::TableTitle::PutPosition ( enum TitlePosition _arg1 ) {
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3312)
inline _bstr_t TGDraft::TableTitle::Getvalue ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3313)
inline void TGDraft::TableTitle::Putvalue ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3314)
inline enum TGFrameworkSupport::TextHorizontalAlignmentConstants TGDraft::TableTitle::GetAlignment ( ) {
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants _result;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3315)
inline void TGDraft::TableTitle::PutAlignment ( enum TGFrameworkSupport::TextHorizontalAlignmentConstants _arg1 ) {
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3316)
inline VARIANT_BOOL TGDraft::TableTitle::GetFitToWidth ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3317)
inline void TGDraft::TableTitle::PutFitToWidth ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3318)
inline _bstr_t TGDraft::TableTitle::GetFontName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3319)
inline void TGDraft::TableTitle::PutFontName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3320)
inline enum TGFrameworkSupport::DimTextFontStyleConstants TGDraft::TableTitle::GetFontStyle ( ) {
    enum TGFrameworkSupport::DimTextFontStyleConstants _result;
    _com_dispatch_method(this, 0x6e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3321)
inline void TGDraft::TableTitle::PutFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants _arg1 ) {
    _com_dispatch_method(this, 0x6e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3322)
inline double TGDraft::TableTitle::GetFontSize ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3323)
inline void TGDraft::TableTitle::PutFontSize ( double _arg1 ) {
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3324)
inline double TGDraft::TableTitle::GetRowHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3325)
inline VARIANT_BOOL TGDraft::TableTitle::GetUnderline ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// interface _ITableTitlesAuto wrapper method implementations
//

#pragma implementation_key(3326)
inline TGFramework::ApplicationPtr TGDraft::_ITableTitlesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3327)
inline IDispatchPtr TGDraft::_ITableTitlesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3328)
inline long TGDraft::_ITableTitlesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3329)
inline TGDraft::TableTitlePtr TGDraft::_ITableTitlesAuto::Item ( const _variant_t & Index ) {
    struct TableTitle * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableTitlePtr(_result, false);
}

#pragma implementation_key(3330)
inline IUnknownPtr TGDraft::_ITableTitlesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3331)
inline TGDraft::TableTitlePtr TGDraft::_ITableTitlesAuto::Add ( ) {
    struct TableTitle * _result = 0;
    HRESULT _hr = raw_Add(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableTitlePtr(_result, false);
}

//
// interface _ITableTitleAuto wrapper method implementations
//

#pragma implementation_key(3332)
inline TGFramework::ApplicationPtr TGDraft::_ITableTitleAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3333)
inline IDispatchPtr TGDraft::_ITableTitleAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3334)
inline HRESULT TGDraft::_ITableTitleAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3335)
inline long TGDraft::_ITableTitleAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3336)
inline enum TGDraft::TitlePosition TGDraft::_ITableTitleAuto::GetPosition ( ) {
    enum TitlePosition _result;
    HRESULT _hr = get_Position(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3337)
inline void TGDraft::_ITableTitleAuto::PutPosition ( enum TitlePosition Position ) {
    HRESULT _hr = put_Position(Position);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3338)
inline _bstr_t TGDraft::_ITableTitleAuto::Getvalue ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_value(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3339)
inline void TGDraft::_ITableTitleAuto::Putvalue ( _bstr_t value ) {
    HRESULT _hr = put_value(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3340)
inline enum TGFrameworkSupport::TextHorizontalAlignmentConstants TGDraft::_ITableTitleAuto::GetAlignment ( ) {
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants _result;
    HRESULT _hr = get_Alignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3341)
inline void TGDraft::_ITableTitleAuto::PutAlignment ( enum TGFrameworkSupport::TextHorizontalAlignmentConstants Alignment ) {
    HRESULT _hr = put_Alignment(Alignment);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3342)
inline VARIANT_BOOL TGDraft::_ITableTitleAuto::GetFitToWidth ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_FitToWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3343)
inline void TGDraft::_ITableTitleAuto::PutFitToWidth ( VARIANT_BOOL FitToWidth ) {
    HRESULT _hr = put_FitToWidth(FitToWidth);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3344)
inline _bstr_t TGDraft::_ITableTitleAuto::GetFontName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FontName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3345)
inline void TGDraft::_ITableTitleAuto::PutFontName ( _bstr_t FontName ) {
    HRESULT _hr = put_FontName(FontName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3346)
inline enum TGFrameworkSupport::DimTextFontStyleConstants TGDraft::_ITableTitleAuto::GetFontStyle ( ) {
    enum TGFrameworkSupport::DimTextFontStyleConstants _result;
    HRESULT _hr = get_FontStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3347)
inline void TGDraft::_ITableTitleAuto::PutFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants FontStyle ) {
    HRESULT _hr = put_FontStyle(FontStyle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3348)
inline double TGDraft::_ITableTitleAuto::GetFontSize ( ) {
    double _result = 0;
    HRESULT _hr = get_FontSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3349)
inline void TGDraft::_ITableTitleAuto::PutFontSize ( double FontSize ) {
    HRESULT _hr = put_FontSize(FontSize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3350)
inline double TGDraft::_ITableTitleAuto::GetRowHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_RowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3351)
inline VARIANT_BOOL TGDraft::_ITableTitleAuto::GetUnderline ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Underline(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface TablePages wrapper method implementations
//

#pragma implementation_key(3352)
inline TGFramework::ApplicationPtr TGDraft::TablePages::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3353)
inline IDispatchPtr TGDraft::TablePages::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3354)
inline long TGDraft::TablePages::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3355)
inline TGDraft::TablePagePtr TGDraft::TablePages::Item ( const _variant_t & Index ) {
    struct TablePage * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return TablePagePtr(_result, false);
}

//
// dispinterface TablePage wrapper method implementations
//

#pragma implementation_key(3356)
inline TGFramework::ApplicationPtr TGDraft::TablePage::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3357)
inline IDispatchPtr TGDraft::TablePage::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3358)
inline HRESULT TGDraft::TablePage::GetOrigin ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x67, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(3359)
inline HRESULT TGDraft::TablePage::SetOrigin ( double x, double y ) {
    return _com_dispatch_method(this, 0x68, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(3360)
inline _bstr_t TGDraft::TablePage::GetSheet ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3361)
inline void TGDraft::TablePage::PutSheet ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3362)
inline double TGDraft::TablePage::GetHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3363)
inline double TGDraft::TablePage::GetWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3364)
inline double TGDraft::TablePage::GetRotationAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3365)
inline void TGDraft::TablePage::PutRotationAngle ( double _arg1 ) {
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3366)
inline _bstr_t TGDraft::TablePage::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3367)
inline void TGDraft::TablePage::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

//
// interface _ITablePagesAuto wrapper method implementations
//

#pragma implementation_key(3368)
inline TGFramework::ApplicationPtr TGDraft::_ITablePagesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3369)
inline IDispatchPtr TGDraft::_ITablePagesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3370)
inline long TGDraft::_ITablePagesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3371)
inline TGDraft::TablePagePtr TGDraft::_ITablePagesAuto::Item ( const _variant_t & Index ) {
    struct TablePage * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TablePagePtr(_result, false);
}

#pragma implementation_key(3372)
inline IUnknownPtr TGDraft::_ITablePagesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

//
// interface _ITablePageAuto wrapper method implementations
//

#pragma implementation_key(3373)
inline TGFramework::ApplicationPtr TGDraft::_ITablePageAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3374)
inline IDispatchPtr TGDraft::_ITablePageAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3375)
inline HRESULT TGDraft::_ITablePageAuto::GetOrigin ( double * x, double * y ) {
    HRESULT _hr = raw_GetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3376)
inline HRESULT TGDraft::_ITablePageAuto::SetOrigin ( double x, double y ) {
    HRESULT _hr = raw_SetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3377)
inline _bstr_t TGDraft::_ITablePageAuto::GetSheet ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Sheet(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3378)
inline void TGDraft::_ITablePageAuto::PutSheet ( _bstr_t value ) {
    HRESULT _hr = put_Sheet(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3379)
inline double TGDraft::_ITablePageAuto::GetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3380)
inline double TGDraft::_ITablePageAuto::GetWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3381)
inline double TGDraft::_ITablePageAuto::GetRotationAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_RotationAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3382)
inline void TGDraft::_ITablePageAuto::PutRotationAngle ( double value ) {
    HRESULT _hr = put_RotationAngle(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3383)
inline _bstr_t TGDraft::_ITablePageAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3384)
inline void TGDraft::_ITablePageAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// dispinterface TableGroups wrapper method implementations
//

#pragma implementation_key(3385)
inline TGFramework::ApplicationPtr TGDraft::TableGroups::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3386)
inline IDispatchPtr TGDraft::TableGroups::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3387)
inline long TGDraft::TableGroups::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3388)
inline TGDraft::TableGroupPtr TGDraft::TableGroups::Item ( const _variant_t & Index ) {
    struct TableGroup * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return TableGroupPtr(_result, false);
}

#pragma implementation_key(3389)
inline TGDraft::TableGroupPtr TGDraft::TableGroups::Add ( ) {
    struct TableGroup * _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TableGroupPtr(_result, false);
}

//
// dispinterface TableGroup wrapper method implementations
//

#pragma implementation_key(3390)
inline TGFramework::ApplicationPtr TGDraft::TableGroup::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3391)
inline IDispatchPtr TGDraft::TableGroup::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3392)
inline _bstr_t TGDraft::TableGroup::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3393)
inline void TGDraft::TableGroup::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3394)
inline _bstr_t TGDraft::TableGroup::Getvalue ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3395)
inline void TGDraft::TableGroup::Putvalue ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3396)
inline long TGDraft::TableGroup::GetSortByColumn ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3397)
inline void TGDraft::TableGroup::PutSortByColumn ( long _arg1 ) {
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3398)
inline VARIANT_BOOL TGDraft::TableGroup::GetSortAscending ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3399)
inline void TGDraft::TableGroup::PutSortAscending ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3400)
inline VARIANT_BOOL TGDraft::TableGroup::GetShowHeader ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3401)
inline void TGDraft::TableGroup::PutShowHeader ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3402)
inline long TGDraft::TableGroup::GetNumberOfHeaderRows ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3403)
inline void TGDraft::TableGroup::PutNumberOfHeaderRows ( long _arg1 ) {
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3404)
inline TGDraft::TableCellPtr TGDraft::TableGroup::GetHeaderCell ( const _variant_t & HeaderRowIndex, const _variant_t & ColumnIndex ) {
    struct TableCell * _result = 0;
    _com_dispatch_method(this, 0x6e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000c\x000c", &HeaderRowIndex, &ColumnIndex);
    return TableCellPtr(_result, false);
}

//
// interface _ITableGroupsAuto wrapper method implementations
//

#pragma implementation_key(3405)
inline TGFramework::ApplicationPtr TGDraft::_ITableGroupsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3406)
inline IDispatchPtr TGDraft::_ITableGroupsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3407)
inline long TGDraft::_ITableGroupsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3408)
inline TGDraft::TableGroupPtr TGDraft::_ITableGroupsAuto::Item ( const _variant_t & Index ) {
    struct TableGroup * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableGroupPtr(_result, false);
}

#pragma implementation_key(3409)
inline IUnknownPtr TGDraft::_ITableGroupsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3410)
inline TGDraft::TableGroupPtr TGDraft::_ITableGroupsAuto::Add ( ) {
    struct TableGroup * _result = 0;
    HRESULT _hr = raw_Add(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableGroupPtr(_result, false);
}

//
// interface _ITableGroupAuto wrapper method implementations
//

#pragma implementation_key(3411)
inline TGFramework::ApplicationPtr TGDraft::_ITableGroupAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3412)
inline IDispatchPtr TGDraft::_ITableGroupAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3413)
inline _bstr_t TGDraft::_ITableGroupAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3414)
inline void TGDraft::_ITableGroupAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3415)
inline _bstr_t TGDraft::_ITableGroupAuto::Getvalue ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_value(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3416)
inline void TGDraft::_ITableGroupAuto::Putvalue ( _bstr_t value ) {
    HRESULT _hr = put_value(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3417)
inline long TGDraft::_ITableGroupAuto::GetSortByColumn ( ) {
    long _result = 0;
    HRESULT _hr = get_SortByColumn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3418)
inline void TGDraft::_ITableGroupAuto::PutSortByColumn ( long ColumnIndex ) {
    HRESULT _hr = put_SortByColumn(ColumnIndex);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3419)
inline VARIANT_BOOL TGDraft::_ITableGroupAuto::GetSortAscending ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SortAscending(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3420)
inline void TGDraft::_ITableGroupAuto::PutSortAscending ( VARIANT_BOOL SortAscending ) {
    HRESULT _hr = put_SortAscending(SortAscending);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3421)
inline VARIANT_BOOL TGDraft::_ITableGroupAuto::GetShowHeader ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowHeader(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3422)
inline void TGDraft::_ITableGroupAuto::PutShowHeader ( VARIANT_BOOL ShowHeader ) {
    HRESULT _hr = put_ShowHeader(ShowHeader);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3423)
inline long TGDraft::_ITableGroupAuto::GetNumberOfHeaderRows ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfHeaderRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3424)
inline void TGDraft::_ITableGroupAuto::PutNumberOfHeaderRows ( long NumberOfHeaderRows ) {
    HRESULT _hr = put_NumberOfHeaderRows(NumberOfHeaderRows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3425)
inline TGDraft::TableCellPtr TGDraft::_ITableGroupAuto::GetHeaderCell ( const _variant_t & HeaderRowIndex, const _variant_t & ColumnIndex ) {
    struct TableCell * _result = 0;
    HRESULT _hr = get_HeaderCell(HeaderRowIndex, ColumnIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableCellPtr(_result, false);
}

//
// interface _IPartsListAuto wrapper method implementations
//

#pragma implementation_key(3426)
inline TGFramework::ApplicationPtr TGDraft::_IPartsListAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3427)
inline _bstr_t TGDraft::_IPartsListAuto::GetAssemblyFileName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AssemblyFileName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3428)
inline IDispatchPtr TGDraft::_IPartsListAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3429)
inline HRESULT TGDraft::_IPartsListAuto::Update ( ) {
    HRESULT _hr = raw_Update();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3430)
inline HRESULT TGDraft::_IPartsListAuto::CopyToClipboard ( ) {
    HRESULT _hr = raw_CopyToClipboard();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3431)
inline TGDraft::ModelLinkPtr TGDraft::_IPartsListAuto::GetModelLink ( ) {
    struct ModelLink * _result = 0;
    HRESULT _hr = get_ModelLink(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ModelLinkPtr(_result, false);
}

#pragma implementation_key(3432)
inline HRESULT TGDraft::_IPartsListAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3433)
inline void TGDraft::_IPartsListAuto::PutSavedSettings ( _bstr_t _arg1 ) {
    HRESULT _hr = put_SavedSettings(_arg1);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3434)
inline HRESULT TGDraft::_IPartsListAuto::SetOrigin ( double x, double y ) {
    HRESULT _hr = raw_SetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3435)
inline HRESULT TGDraft::_IPartsListAuto::GetOrigin ( double * x, double * y ) {
    HRESULT _hr = raw_GetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3436)
inline HRESULT TGDraft::_IPartsListAuto::GetListOfSavedSettings ( long * NumSavedSettings, SAFEARRAY * * ListOfSavedSettings ) {
    HRESULT _hr = raw_GetListOfSavedSettings(NumSavedSettings, ListOfSavedSettings);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3437)
inline VARIANT_BOOL TGDraft::_IPartsListAuto::GetIsUpToDate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsUpToDate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3438)
inline TGDraft::TableCellPtr TGDraft::_IPartsListAuto::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex ) {
    struct TableCell * _result = 0;
    HRESULT _hr = get_Cell(RowIndex, ColumnIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableCellPtr(_result, false);
}

#pragma implementation_key(3439)
inline enum TGDraft::TitlePosition TGDraft::_IPartsListAuto::GetColumnHeaderPosition ( ) {
    enum TitlePosition _result;
    HRESULT _hr = get_ColumnHeaderPosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3440)
inline void TGDraft::_IPartsListAuto::PutColumnHeaderPosition ( enum TitlePosition ColumnHeaderPosition ) {
    HRESULT _hr = put_ColumnHeaderPosition(ColumnHeaderPosition);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3441)
inline TGDraft::TableColumnsPtr TGDraft::_IPartsListAuto::GetColumns ( ) {
    struct TableColumns * _result = 0;
    HRESULT _hr = get_Columns(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableColumnsPtr(_result, false);
}

#pragma implementation_key(3442)
inline double TGDraft::_IPartsListAuto::GetMargin ( ) {
    double _result = 0;
    HRESULT _hr = get_Margin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3443)
inline void TGDraft::_IPartsListAuto::PutMargin ( double Margin ) {
    HRESULT _hr = put_Margin(Margin);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3444)
inline long TGDraft::_IPartsListAuto::GetMaximumRows ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3445)
inline void TGDraft::_IPartsListAuto::PutMaximumRows ( long MaximumRows ) {
    HRESULT _hr = put_MaximumRows(MaximumRows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3446)
inline double TGDraft::_IPartsListAuto::GetPageGap ( ) {
    double _result = 0;
    HRESULT _hr = get_PageGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3447)
inline void TGDraft::_IPartsListAuto::PutPageGap ( double PageGap ) {
    HRESULT _hr = put_PageGap(PageGap);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3448)
inline VARIANT_BOOL TGDraft::_IPartsListAuto::GetReverseDisplayOrder ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ReverseDisplayOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3449)
inline void TGDraft::_IPartsListAuto::PutReverseDisplayOrder ( VARIANT_BOOL ReverseDisplayOrder ) {
    HRESULT _hr = put_ReverseDisplayOrder(ReverseDisplayOrder);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3450)
inline TGDraft::TableRowsPtr TGDraft::_IPartsListAuto::GetRows ( ) {
    struct TableRows * _result = 0;
    HRESULT _hr = get_Rows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableRowsPtr(_result, false);
}

#pragma implementation_key(3451)
inline VARIANT_BOOL TGDraft::_IPartsListAuto::GetShowColumnHeader ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowColumnHeader(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3452)
inline void TGDraft::_IPartsListAuto::PutShowColumnHeader ( VARIANT_BOOL ShowColumnHeader ) {
    HRESULT _hr = put_ShowColumnHeader(ShowColumnHeader);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3453)
inline _bstr_t TGDraft::_IPartsListAuto::GetTableStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TableStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3454)
inline void TGDraft::_IPartsListAuto::PutTableStyle ( _bstr_t TableStyle ) {
    HRESULT _hr = put_TableStyle(TableStyle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3455)
inline TGDraft::TableTitlesPtr TGDraft::_IPartsListAuto::GetTitles ( ) {
    struct TableTitles * _result = 0;
    HRESULT _hr = get_Titles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableTitlesPtr(_result, false);
}

#pragma implementation_key(3456)
inline enum TGDraft::TableAnchorPoint TGDraft::_IPartsListAuto::GetAnchorPoint ( ) {
    enum TableAnchorPoint _result;
    HRESULT _hr = get_AnchorPoint(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3457)
inline void TGDraft::_IPartsListAuto::PutAnchorPoint ( enum TableAnchorPoint AnchorPoint ) {
    HRESULT _hr = put_AnchorPoint(AnchorPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3458)
inline TGDraft::TablePagesPtr TGDraft::_IPartsListAuto::GetPages ( ) {
    struct TablePages * _result = 0;
    HRESULT _hr = get_Pages(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TablePagesPtr(_result, false);
}

#pragma implementation_key(3459)
inline double TGDraft::_IPartsListAuto::GetHeaderFixedRowHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_HeaderFixedRowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3460)
inline void TGDraft::_IPartsListAuto::PutHeaderFixedRowHeight ( double HeaderFixedRowHeight ) {
    HRESULT _hr = put_HeaderFixedRowHeight(HeaderFixedRowHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3461)
inline double TGDraft::_IPartsListAuto::GetDataFixedRowHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_DataFixedRowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3462)
inline void TGDraft::_IPartsListAuto::PutDataFixedRowHeight ( double DataFixedRowHeight ) {
    HRESULT _hr = put_DataFixedRowHeight(DataFixedRowHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3463)
inline double TGDraft::_IPartsListAuto::GetMaximumHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3464)
inline void TGDraft::_IPartsListAuto::PutMaximumHeight ( double MaximumHeight ) {
    HRESULT _hr = put_MaximumHeight(MaximumHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3465)
inline HRESULT TGDraft::_IPartsListAuto::ConvertToTable ( ) {
    HRESULT _hr = raw_ConvertToTable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3466)
inline enum TGDraft::PartsListType TGDraft::_IPartsListAuto::GetListType ( ) {
    enum PartsListType _result;
    HRESULT _hr = get_ListType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3467)
inline void TGDraft::_IPartsListAuto::PutListType ( enum PartsListType ListType ) {
    HRESULT _hr = put_ListType(ListType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3468)
inline VARIANT_BOOL TGDraft::_IPartsListAuto::GetUseAssemblyItemNumbers ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseAssemblyItemNumbers(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3469)
inline void TGDraft::_IPartsListAuto::PutUseAssemblyItemNumbers ( VARIANT_BOOL UseAssemblyItemNumbers ) {
    HRESULT _hr = put_UseAssemblyItemNumbers(UseAssemblyItemNumbers);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3470)
inline VARIANT_BOOL TGDraft::_IPartsListAuto::GetShowTopAssembly ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowTopAssembly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3471)
inline void TGDraft::_IPartsListAuto::PutShowTopAssembly ( VARIANT_BOOL ShowTopAssembly ) {
    HRESULT _hr = put_ShowTopAssembly(ShowTopAssembly);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3472)
inline VARIANT_BOOL TGDraft::_IPartsListAuto::GetUseLevelBasedItemNumbers ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseLevelBasedItemNumbers(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3473)
inline void TGDraft::_IPartsListAuto::PutUseLevelBasedItemNumbers ( VARIANT_BOOL UseLevelBasedItemNumbers ) {
    HRESULT _hr = put_UseLevelBasedItemNumbers(UseLevelBasedItemNumbers);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3474)
inline long TGDraft::_IPartsListAuto::GetNumberOfHeaderRows ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfHeaderRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3475)
inline void TGDraft::_IPartsListAuto::PutNumberOfHeaderRows ( long NumberOfHeaderRows ) {
    HRESULT _hr = put_NumberOfHeaderRows(NumberOfHeaderRows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3476)
inline long TGDraft::_IPartsListAuto::GetMaximumRowsFirstPage ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumRowsFirstPage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3477)
inline void TGDraft::_IPartsListAuto::PutMaximumRowsFirstPage ( long MaximumRowsFirstPage ) {
    HRESULT _hr = put_MaximumRowsFirstPage(MaximumRowsFirstPage);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3478)
inline long TGDraft::_IPartsListAuto::GetMaximumRowsAdditionalPages ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumRowsAdditionalPages(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3479)
inline void TGDraft::_IPartsListAuto::PutMaximumRowsAdditionalPages ( long MaximumRowsAdditionalPages ) {
    HRESULT _hr = put_MaximumRowsAdditionalPages(MaximumRowsAdditionalPages);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3480)
inline double TGDraft::_IPartsListAuto::GetMaximumHeightFirstPage ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumHeightFirstPage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3481)
inline void TGDraft::_IPartsListAuto::PutMaximumHeightFirstPage ( double MaximumHeightFirstPage ) {
    HRESULT _hr = put_MaximumHeightFirstPage(MaximumHeightFirstPage);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3482)
inline double TGDraft::_IPartsListAuto::GetMaximumHeightAdditionalPages ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumHeightAdditionalPages(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3483)
inline void TGDraft::_IPartsListAuto::PutMaximumHeightAdditionalPages ( double MaximumHeightAdditionalPages ) {
    HRESULT _hr = put_MaximumHeightAdditionalPages(MaximumHeightAdditionalPages);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3484)
inline VARIANT_BOOL TGDraft::_IPartsListAuto::GetCreateNewSheetsForTable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CreateNewSheetsForTable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3485)
inline void TGDraft::_IPartsListAuto::PutCreateNewSheetsForTable ( VARIANT_BOOL CreateNewSheetsForTable ) {
    HRESULT _hr = put_CreateNewSheetsForTable(CreateNewSheetsForTable);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3486)
inline _bstr_t TGDraft::_IPartsListAuto::GetFirstSheetBackgroundName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FirstSheetBackgroundName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3487)
inline void TGDraft::_IPartsListAuto::PutFirstSheetBackgroundName ( _bstr_t FirstSheetBackgroundName ) {
    HRESULT _hr = put_FirstSheetBackgroundName(FirstSheetBackgroundName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3488)
inline _bstr_t TGDraft::_IPartsListAuto::GetAdditionalSheetsBackgroundName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AdditionalSheetsBackgroundName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3489)
inline void TGDraft::_IPartsListAuto::PutAdditionalSheetsBackgroundName ( _bstr_t AdditionalSheetsBackgroundName ) {
    HRESULT _hr = put_AdditionalSheetsBackgroundName(AdditionalSheetsBackgroundName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3490)
inline VARIANT_BOOL TGDraft::_IPartsListAuto::GetShowSheetBackground ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowSheetBackground(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3491)
inline void TGDraft::_IPartsListAuto::PutShowSheetBackground ( VARIANT_BOOL ShowSheetBackground ) {
    HRESULT _hr = put_ShowSheetBackground(ShowSheetBackground);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3492)
inline VARIANT_BOOL TGDraft::_IPartsListAuto::GetMaintainSheetsWithTableSize ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MaintainSheetsWithTableSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3493)
inline void TGDraft::_IPartsListAuto::PutMaintainSheetsWithTableSize ( VARIANT_BOOL MaintainSheetsWithTableSize ) {
    HRESULT _hr = put_MaintainSheetsWithTableSize(MaintainSheetsWithTableSize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3494)
inline VARIANT_BOOL TGDraft::_IPartsListAuto::GetEnableGroups ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_EnableGroups(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3495)
inline void TGDraft::_IPartsListAuto::PutEnableGroups ( VARIANT_BOOL EnableGroups ) {
    HRESULT _hr = put_EnableGroups(EnableGroups);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3496)
inline TGDraft::TableGroupsPtr TGDraft::_IPartsListAuto::GetGroups ( ) {
    struct TableGroups * _result = 0;
    HRESULT _hr = get_Groups(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableGroupsPtr(_result, false);
}

#pragma implementation_key(3497)
inline VARIANT_BOOL TGDraft::_IPartsListAuto::GetWrapDataCellsToNewRow ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WrapDataCellsToNewRow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3498)
inline void TGDraft::_IPartsListAuto::PutWrapDataCellsToNewRow ( VARIANT_BOOL WrapDataCellsToNewRow ) {
    HRESULT _hr = put_WrapDataCellsToNewRow(WrapDataCellsToNewRow);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3499)
inline VARIANT_BOOL TGDraft::_IPartsListAuto::GetFillEndOfTableWithBlankRows ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_FillEndOfTableWithBlankRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3500)
inline void TGDraft::_IPartsListAuto::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL FillEndOfTableWithBlankRows ) {
    HRESULT _hr = put_FillEndOfTableWithBlankRows(FillEndOfTableWithBlankRows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3501)
inline long TGDraft::_IPartsListAuto::GetGroupByColumn ( ) {
    long _result = 0;
    HRESULT _hr = get_GroupByColumn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3502)
inline void TGDraft::_IPartsListAuto::PutGroupByColumn ( long ColumnIndex ) {
    HRESULT _hr = put_GroupByColumn(ColumnIndex);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3503)
inline VARIANT_BOOL TGDraft::_IPartsListAuto::GetActive ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Active(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3504)
inline void TGDraft::_IPartsListAuto::PutActive ( VARIANT_BOOL Active ) {
    HRESULT _hr = put_Active(Active);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3505)
inline long TGDraft::_IPartsListAuto::GetItemNumberStart ( ) {
    long _result = 0;
    HRESULT _hr = get_ItemNumberStart(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3506)
inline void TGDraft::_IPartsListAuto::PutItemNumberStart ( long ItemNumberStart ) {
    HRESULT _hr = put_ItemNumberStart(ItemNumberStart);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3507)
inline long TGDraft::_IPartsListAuto::GetItemNumberIncrement ( ) {
    long _result = 0;
    HRESULT _hr = get_ItemNumberIncrement(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3508)
inline void TGDraft::_IPartsListAuto::PutItemNumberIncrement ( long ItemNumberIncrement ) {
    HRESULT _hr = put_ItemNumberIncrement(ItemNumberIncrement);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3509)
inline VARIANT_BOOL TGDraft::_IPartsListAuto::GetMarkUnballoonedItems ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MarkUnballoonedItems(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3510)
inline void TGDraft::_IPartsListAuto::PutMarkUnballoonedItems ( VARIANT_BOOL MarkUnballoonedItems ) {
    HRESULT _hr = put_MarkUnballoonedItems(MarkUnballoonedItems);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3511)
inline _bstr_t TGDraft::_IPartsListAuto::GetMarkUnballoonedItemsString ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_MarkUnballoonedItemsString(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3512)
inline void TGDraft::_IPartsListAuto::PutMarkUnballoonedItemsString ( _bstr_t MarkUnballoonedItemsString ) {
    HRESULT _hr = put_MarkUnballoonedItemsString(MarkUnballoonedItemsString);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3513)
inline VARIANT_BOOL TGDraft::_IPartsListAuto::GetRenumberAccordingToSortOrder ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RenumberAccordingToSortOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3514)
inline void TGDraft::_IPartsListAuto::PutRenumberAccordingToSortOrder ( VARIANT_BOOL RenumberAccordingToSortOrder ) {
    HRESULT _hr = put_RenumberAccordingToSortOrder(RenumberAccordingToSortOrder);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3515)
inline VARIANT_BOOL TGDraft::_IPartsListAuto::GetConvertDeletedPartsIntoUserDefinedRows ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ConvertDeletedPartsIntoUserDefinedRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3516)
inline void TGDraft::_IPartsListAuto::PutConvertDeletedPartsIntoUserDefinedRows ( VARIANT_BOOL ConvertDeletedPartsIntoUserDefinedRows ) {
    HRESULT _hr = put_ConvertDeletedPartsIntoUserDefinedRows(ConvertDeletedPartsIntoUserDefinedRows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3517)
inline _bstr_t TGDraft::_IPartsListAuto::GetConfiguration ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Configuration(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3518)
inline void TGDraft::_IPartsListAuto::PutConfiguration ( _bstr_t Configuration ) {
    HRESULT _hr = put_Configuration(Configuration);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3519)
inline VARIANT_BOOL TGDraft::_IPartsListAuto::GetExpandWeldmentSubAssemblies ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ExpandWeldmentSubAssemblies(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3520)
inline void TGDraft::_IPartsListAuto::PutExpandWeldmentSubAssemblies ( VARIANT_BOOL ExpandWeldmentSubAssemblies ) {
    HRESULT _hr = put_ExpandWeldmentSubAssemblies(ExpandWeldmentSubAssemblies);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3521)
inline VARIANT_BOOL TGDraft::_IPartsListAuto::GetUseUniquenessCriteria_CutLength ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseUniquenessCriteria_CutLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3522)
inline void TGDraft::_IPartsListAuto::PutUseUniquenessCriteria_CutLength ( VARIANT_BOOL UseUniquenessCriteria_CutLength ) {
    HRESULT _hr = put_UseUniquenessCriteria_CutLength(UseUniquenessCriteria_CutLength);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3523)
inline VARIANT_BOOL TGDraft::_IPartsListAuto::GetUseUniquenessCriteria_Mass ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseUniquenessCriteria_Mass(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3524)
inline void TGDraft::_IPartsListAuto::PutUseUniquenessCriteria_Mass ( VARIANT_BOOL UseUniquenessCriteria_Mass ) {
    HRESULT _hr = put_UseUniquenessCriteria_Mass(UseUniquenessCriteria_Mass);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3525)
inline VARIANT_BOOL TGDraft::_IPartsListAuto::GetUseUniquenessCriteria_Miter ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseUniquenessCriteria_Miter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3526)
inline void TGDraft::_IPartsListAuto::PutUseUniquenessCriteria_Miter ( VARIANT_BOOL UseUniquenessCriteria_Miter ) {
    HRESULT _hr = put_UseUniquenessCriteria_Miter(UseUniquenessCriteria_Miter);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3527)
inline VARIANT_BOOL TGDraft::_IPartsListAuto::GetMarkAmbiguousValues ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MarkAmbiguousValues(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3528)
inline void TGDraft::_IPartsListAuto::PutMarkAmbiguousValues ( VARIANT_BOOL MarkAmbiguousValues ) {
    HRESULT _hr = put_MarkAmbiguousValues(MarkAmbiguousValues);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3529)
inline _bstr_t TGDraft::_IPartsListAuto::GetMarkAmbiguousValuesString ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_MarkAmbiguousValuesString(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3530)
inline void TGDraft::_IPartsListAuto::PutMarkAmbiguousValuesString ( _bstr_t MarkAmbiguousValuesString ) {
    HRESULT _hr = put_MarkAmbiguousValuesString(MarkAmbiguousValuesString);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3531)
inline VARIANT_BOOL TGDraft::_IPartsListAuto::GetNonPlanerValues ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_NonPlanerValues(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3532)
inline void TGDraft::_IPartsListAuto::PutNonPlanerValues ( VARIANT_BOOL NonPlanerValues ) {
    HRESULT _hr = put_NonPlanerValues(NonPlanerValues);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3533)
inline _bstr_t TGDraft::_IPartsListAuto::GetNonPlanerValuesString ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_NonPlanerValuesString(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3534)
inline void TGDraft::_IPartsListAuto::PutNonPlanerValuesString ( _bstr_t NonPlanerValuesString ) {
    HRESULT _hr = put_NonPlanerValuesString(NonPlanerValuesString);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3535)
inline enum TGDraft::PartListEndAngleRepresentationType TGDraft::_IPartsListAuto::GetEndAngleRepresentation ( ) {
    enum PartListEndAngleRepresentationType _result;
    HRESULT _hr = get_EndAngleRepresentation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3536)
inline void TGDraft::_IPartsListAuto::PutEndAngleRepresentation ( enum PartListEndAngleRepresentationType EndAngleRepresentation ) {
    HRESULT _hr = put_EndAngleRepresentation(EndAngleRepresentation);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3537)
inline VARIANT_BOOL TGDraft::_IPartsListAuto::GetUseUniquenessCriteria_AngleOrientation ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseUniquenessCriteria_AngleOrientation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3538)
inline void TGDraft::_IPartsListAuto::PutUseUniquenessCriteria_AngleOrientation ( VARIANT_BOOL UseUniquenessCriteria_AngleOrientation ) {
    HRESULT _hr = put_UseUniquenessCriteria_AngleOrientation(UseUniquenessCriteria_AngleOrientation);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3539)
inline VARIANT_BOOL TGDraft::_IPartsListAuto::GetTotalLengthPartsList ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_TotalLengthPartsList(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3540)
inline void TGDraft::_IPartsListAuto::PutTotalLengthPartsList ( VARIANT_BOOL TotalLengthPartsList ) {
    HRESULT _hr = put_TotalLengthPartsList(TotalLengthPartsList);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3541)
inline _bstr_t TGDraft::_IPartsListAuto::GetTotalLengthPartsList_ItemNumberSeparator ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TotalLengthPartsList_ItemNumberSeparator(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3542)
inline void TGDraft::_IPartsListAuto::PutTotalLengthPartsList_ItemNumberSeparator ( _bstr_t TotalLengthPartsList_ItemNumberSeparator ) {
    HRESULT _hr = put_TotalLengthPartsList_ItemNumberSeparator(TotalLengthPartsList_ItemNumberSeparator);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3543)
inline HRESULT TGDraft::_IPartsListAuto::SetShowComponent ( enum PartsListComponentType ComponentType, VARIANT_BOOL ShowComponent ) {
    HRESULT _hr = raw_SetShowComponent(ComponentType, ShowComponent);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3544)
inline HRESULT TGDraft::_IPartsListAuto::SetComponentSortPriority ( enum PartsListComponentType ComponentType, long ComponentSortPriority ) {
    HRESULT _hr = raw_SetComponentSortPriority(ComponentType, ComponentSortPriority);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3545)
inline double TGDraft::_IPartsListAuto::GetPipeRoughCutEndClearance ( ) {
    double _result = 0;
    HRESULT _hr = get_PipeRoughCutEndClearance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3546)
inline void TGDraft::_IPartsListAuto::PutPipeRoughCutEndClearance ( double PipeRoughCutEndClearance ) {
    HRESULT _hr = put_PipeRoughCutEndClearance(PipeRoughCutEndClearance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3547)
inline double TGDraft::_IPartsListAuto::GetFrameRoughCutEndClearance ( ) {
    double _result = 0;
    HRESULT _hr = get_FrameRoughCutEndClearance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3548)
inline void TGDraft::_IPartsListAuto::PutFrameRoughCutEndClearance ( double FrameRoughCutEndClearance ) {
    HRESULT _hr = put_FrameRoughCutEndClearance(FrameRoughCutEndClearance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3549)
inline double TGDraft::_IPartsListAuto::GetTitleFixedRowHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_TitleFixedRowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3550)
inline void TGDraft::_IPartsListAuto::PutTitleFixedRowHeight ( double TitleFixedRowHeight ) {
    HRESULT _hr = put_TitleFixedRowHeight(TitleFixedRowHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3551)
inline double TGDraft::_IPartsListAuto::GetMarginHorizontal ( ) {
    double _result = 0;
    HRESULT _hr = get_MarginHorizontal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3552)
inline void TGDraft::_IPartsListAuto::PutMarginHorizontal ( double MarginHorizontal ) {
    HRESULT _hr = put_MarginHorizontal(MarginHorizontal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3553)
inline double TGDraft::_IPartsListAuto::GetMarginVertical ( ) {
    double _result = 0;
    HRESULT _hr = get_MarginVertical(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3554)
inline void TGDraft::_IPartsListAuto::PutMarginVertical ( double MarginVertical ) {
    HRESULT _hr = put_MarginVertical(MarginVertical);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3555)
inline VARIANT_BOOL TGDraft::_IPartsListAuto::GetUseUniquenessCriteria_TubeFlatLength ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseUniquenessCriteria_TubeFlatLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3556)
inline void TGDraft::_IPartsListAuto::PutUseUniquenessCriteria_TubeFlatLength ( VARIANT_BOOL UseUniquenessCriteria_TubeFlatLength ) {
    HRESULT _hr = put_UseUniquenessCriteria_TubeFlatLength(UseUniquenessCriteria_TubeFlatLength);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3557)
inline VARIANT_BOOL TGDraft::_IPartsListAuto::GetUseUniquenessCriteria_TubeMass ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseUniquenessCriteria_TubeMass(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3558)
inline void TGDraft::_IPartsListAuto::PutUseUniquenessCriteria_TubeMass ( VARIANT_BOOL UseUniquenessCriteria_TubeMass ) {
    HRESULT _hr = put_UseUniquenessCriteria_TubeMass(UseUniquenessCriteria_TubeMass);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3559)
inline VARIANT_BOOL TGDraft::_IPartsListAuto::GetMarkAmbiguousValuesForTube ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MarkAmbiguousValuesForTube(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3560)
inline void TGDraft::_IPartsListAuto::PutMarkAmbiguousValuesForTube ( VARIANT_BOOL MarkAmbiguousValuesForTube ) {
    HRESULT _hr = put_MarkAmbiguousValuesForTube(MarkAmbiguousValuesForTube);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3561)
inline _bstr_t TGDraft::_IPartsListAuto::GetMarkAmbiguousValuesStringForTube ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_MarkAmbiguousValuesStringForTube(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3562)
inline void TGDraft::_IPartsListAuto::PutMarkAmbiguousValuesStringForTube ( _bstr_t MarkAmbiguousValuesStringForTube ) {
    HRESULT _hr = put_MarkAmbiguousValuesStringForTube(MarkAmbiguousValuesStringForTube);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3563)
inline VARIANT_BOOL TGDraft::_IPartsListAuto::GetZeroQuantity ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ZeroQuantity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3564)
inline void TGDraft::_IPartsListAuto::PutZeroQuantity ( VARIANT_BOOL ZeroQuantityValues ) {
    HRESULT _hr = put_ZeroQuantity(ZeroQuantityValues);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3565)
inline _bstr_t TGDraft::_IPartsListAuto::GetZeroQuantityString ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ZeroQuantityString(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3566)
inline void TGDraft::_IPartsListAuto::PutZeroQuantityString ( _bstr_t ZeroQuantityString ) {
    HRESULT _hr = put_ZeroQuantityString(ZeroQuantityString);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3567)
inline VARIANT_BOOL TGDraft::_IPartsListAuto::IsFamilyOfAssemblyPartsList ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsFamilyOfAssemblyPartsList(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3568)
inline HRESULT TGDraft::_IPartsListAuto::GetAllFamilyOfAssemblyPartsListMembers ( struct DrawingView * DrawingView, long * NumOfMembers, SAFEARRAY * * ListOfMembers ) {
    HRESULT _hr = raw_GetAllFamilyOfAssemblyPartsListMembers(DrawingView, NumOfMembers, ListOfMembers);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3569)
inline HRESULT TGDraft::_IPartsListAuto::GetSelectedFamilyOfAssemblyPartsListMembers ( long * NumOfMembers, SAFEARRAY * * ListOfMembers ) {
    HRESULT _hr = raw_GetSelectedFamilyOfAssemblyPartsListMembers(NumOfMembers, ListOfMembers);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3570)
inline HRESULT TGDraft::_IPartsListAuto::SetSelectedFamilyOfAssemblyPartsListMembers ( long * NumOfMembers, SAFEARRAY * * ListOfMembers ) {
    HRESULT _hr = raw_SetSelectedFamilyOfAssemblyPartsListMembers(NumOfMembers, ListOfMembers);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3571)
inline _bstr_t TGDraft::_IPartsListAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3572)
inline HRESULT TGDraft::_IPartsListAuto::GetUniquenessCriteria_Gusset ( VARIANT_BOOL * UseGussetMass, enum GussetPlateUniquenessCriteria * GussetPlateUniquenessCriteriaType ) {
    HRESULT _hr = raw_GetUniquenessCriteria_Gusset(UseGussetMass, GussetPlateUniquenessCriteriaType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3573)
inline HRESULT TGDraft::_IPartsListAuto::SetUniquenessCriteria_Gusset ( VARIANT_BOOL UseGussetMass, enum GussetPlateUniquenessCriteria GussetPlateUniquenessCriteriaType ) {
    HRESULT _hr = raw_SetUniquenessCriteria_Gusset(UseGussetMass, GussetPlateUniquenessCriteriaType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3574)
inline HRESULT TGDraft::_IPartsListAuto::GetGussetPlateNamingFormat ( BSTR * Name, enum GussetPlateNamingFormat * GussetPlateNamingFormat_Param1, enum GussetPlateNamingFormat * GussetPlateNamingFormat_Param2, enum GussetPlateNamingFormat * GussetPlateNamingFormat_Param3 ) {
    HRESULT _hr = raw_GetGussetPlateNamingFormat(Name, GussetPlateNamingFormat_Param1, GussetPlateNamingFormat_Param2, GussetPlateNamingFormat_Param3);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3575)
inline HRESULT TGDraft::_IPartsListAuto::SetGussetPlateNamingFormat ( _bstr_t Name, enum GussetPlateNamingFormat GussetPlateNamingFormat_Param1, enum GussetPlateNamingFormat GussetPlateNamingFormat_Param2, enum GussetPlateNamingFormat GussetPlateNamingFormat_Param3 ) {
    HRESULT _hr = raw_SetGussetPlateNamingFormat(Name, GussetPlateNamingFormat_Param1, GussetPlateNamingFormat_Param2, GussetPlateNamingFormat_Param3);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3576)
inline VARIANT_BOOL TGDraft::_IPartsListAuto::IsTableSpecifiedByHeight ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsTableSpecifiedByHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface HoleTables wrapper method implementations
//

#pragma implementation_key(3577)
inline TGFramework::ApplicationPtr TGDraft::HoleTables::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3578)
inline IDispatchPtr TGDraft::HoleTables::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3579)
inline long TGDraft::HoleTables::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3580)
inline TGDraft::HoleTablePtr TGDraft::HoleTables::Item ( const _variant_t & Index ) {
    struct HoleTable * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return HoleTablePtr(_result, false);
}

//
// dispinterface HoleTable wrapper method implementations
//

#pragma implementation_key(3581)
inline TGFramework::ApplicationPtr TGDraft::HoleTable::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3582)
inline IDispatchPtr TGDraft::HoleTable::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3583)
inline TGDraft::HTHolesPtr TGDraft::HoleTable::GetHoles ( ) {
    struct HTHoles * _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return HTHolesPtr(_result, false);
}

#pragma implementation_key(3584)
inline HRESULT TGDraft::HoleTable::Update ( ) {
    return _com_dispatch_method(this, 0x6a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3585)
inline HRESULT TGDraft::HoleTable::Delete ( ) {
    return _com_dispatch_method(this, 0x66, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3586)
inline void TGDraft::HoleTable::PutSavedSettings ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

//
// interface _IHoleTablesAuto wrapper method implementations
//

#pragma implementation_key(3587)
inline TGFramework::ApplicationPtr TGDraft::_IHoleTablesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3588)
inline IDispatchPtr TGDraft::_IHoleTablesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3589)
inline long TGDraft::_IHoleTablesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3590)
inline TGDraft::HoleTablePtr TGDraft::_IHoleTablesAuto::Item ( const _variant_t & Index ) {
    struct HoleTable * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return HoleTablePtr(_result, false);
}

#pragma implementation_key(3591)
inline IUnknownPtr TGDraft::_IHoleTablesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

//
// dispinterface HTHoles wrapper method implementations
//

#pragma implementation_key(3592)
inline TGFramework::ApplicationPtr TGDraft::HTHoles::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3593)
inline IDispatchPtr TGDraft::HTHoles::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3594)
inline long TGDraft::HTHoles::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3595)
inline TGDraft::HTHolePtr TGDraft::HTHoles::Item ( const _variant_t & Index ) {
    struct HTHole * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return HTHolePtr(_result, false);
}

//
// interface _IHoleTableAuto wrapper method implementations
//

#pragma implementation_key(3596)
inline TGFramework::ApplicationPtr TGDraft::_IHoleTableAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3597)
inline IDispatchPtr TGDraft::_IHoleTableAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3598)
inline TGDraft::HTHolesPtr TGDraft::_IHoleTableAuto::GetHoles ( ) {
    struct HTHoles * _result = 0;
    HRESULT _hr = get_Holes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return HTHolesPtr(_result, false);
}

#pragma implementation_key(3599)
inline HRESULT TGDraft::_IHoleTableAuto::Update ( ) {
    HRESULT _hr = raw_Update();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3600)
inline HRESULT TGDraft::_IHoleTableAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3601)
inline void TGDraft::_IHoleTableAuto::PutSavedSettings ( _bstr_t _arg1 ) {
    HRESULT _hr = put_SavedSettings(_arg1);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// dispinterface HTHole wrapper method implementations
//

#pragma implementation_key(3602)
inline TGFramework::ApplicationPtr TGDraft::HTHole::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3603)
inline IDispatchPtr TGDraft::HTHole::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3604)
inline double TGDraft::HTHole::GetXLocation ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3605)
inline double TGDraft::HTHole::GetYLocation ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3606)
inline double TGDraft::HTHole::GetRadialLocation ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3607)
inline double TGDraft::HTHole::GetAngularLocation ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3608)
inline double TGDraft::HTHole::GetSize ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x73, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3609)
inline double TGDraft::HTHole::GetDepth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3610)
inline double TGDraft::HTHole::GetCounterboreSize ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3611)
inline double TGDraft::HTHole::GetCounterboreDepth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3612)
inline double TGDraft::HTHole::GetCountersinkSize ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3613)
inline double TGDraft::HTHole::GetCountersinkAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3614)
inline _bstr_t TGDraft::HTHole::GetLabel ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3615)
inline enum TGDraft::HTHoleTypeConstants TGDraft::HTHole::GetType ( ) {
    enum HTHoleTypeConstants _result;
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3616)
inline _bstr_t TGDraft::HTHole::GetThreadSize ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x75, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3617)
inline void TGDraft::HTHole::PutNotes1 ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3618)
inline _bstr_t TGDraft::HTHole::GetNotes1 ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3619)
inline void TGDraft::HTHole::PutNotes2 ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x6e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3620)
inline _bstr_t TGDraft::HTHole::GetNotes2 ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3621)
inline void TGDraft::HTHole::PutNotes3 ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3622)
inline _bstr_t TGDraft::HTHole::GetNotes3 ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3623)
inline void TGDraft::HTHole::PutSuffix ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x74, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3624)
inline _bstr_t TGDraft::HTHole::GetSuffix ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x74, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3625)
inline void TGDraft::HTHole::PutPrefix ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3626)
inline _bstr_t TGDraft::HTHole::GetPrefix ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

//
// interface _IHTHolesAuto wrapper method implementations
//

#pragma implementation_key(3627)
inline TGFramework::ApplicationPtr TGDraft::_IHTHolesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3628)
inline IDispatchPtr TGDraft::_IHTHolesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3629)
inline long TGDraft::_IHTHolesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3630)
inline TGDraft::HTHolePtr TGDraft::_IHTHolesAuto::Item ( const _variant_t & Index ) {
    struct HTHole * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return HTHolePtr(_result, false);
}

#pragma implementation_key(3631)
inline IUnknownPtr TGDraft::_IHTHolesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

//
// interface _IHTHoleAuto wrapper method implementations
//

#pragma implementation_key(3632)
inline TGFramework::ApplicationPtr TGDraft::_IHTHoleAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3633)
inline IDispatchPtr TGDraft::_IHTHoleAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3634)
inline double TGDraft::_IHTHoleAuto::GetXLocation ( ) {
    double _result = 0;
    HRESULT _hr = get_XLocation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3635)
inline double TGDraft::_IHTHoleAuto::GetYLocation ( ) {
    double _result = 0;
    HRESULT _hr = get_YLocation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3636)
inline double TGDraft::_IHTHoleAuto::GetRadialLocation ( ) {
    double _result = 0;
    HRESULT _hr = get_RadialLocation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3637)
inline double TGDraft::_IHTHoleAuto::GetAngularLocation ( ) {
    double _result = 0;
    HRESULT _hr = get_AngularLocation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3638)
inline double TGDraft::_IHTHoleAuto::GetSize ( ) {
    double _result = 0;
    HRESULT _hr = get_Size(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3639)
inline double TGDraft::_IHTHoleAuto::GetDepth ( ) {
    double _result = 0;
    HRESULT _hr = get_Depth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3640)
inline double TGDraft::_IHTHoleAuto::GetCounterboreSize ( ) {
    double _result = 0;
    HRESULT _hr = get_CounterboreSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3641)
inline double TGDraft::_IHTHoleAuto::GetCounterboreDepth ( ) {
    double _result = 0;
    HRESULT _hr = get_CounterboreDepth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3642)
inline double TGDraft::_IHTHoleAuto::GetCountersinkSize ( ) {
    double _result = 0;
    HRESULT _hr = get_CountersinkSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3643)
inline double TGDraft::_IHTHoleAuto::GetCountersinkAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_CountersinkAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3644)
inline _bstr_t TGDraft::_IHTHoleAuto::GetLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Label(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3645)
inline enum TGDraft::HTHoleTypeConstants TGDraft::_IHTHoleAuto::GetType ( ) {
    enum HTHoleTypeConstants _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3646)
inline _bstr_t TGDraft::_IHTHoleAuto::GetThreadSize ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ThreadSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3647)
inline void TGDraft::_IHTHoleAuto::PutNotes1 ( _bstr_t pNotes1 ) {
    HRESULT _hr = put_Notes1(pNotes1);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3648)
inline _bstr_t TGDraft::_IHTHoleAuto::GetNotes1 ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Notes1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3649)
inline void TGDraft::_IHTHoleAuto::PutNotes2 ( _bstr_t pNotes2 ) {
    HRESULT _hr = put_Notes2(pNotes2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3650)
inline _bstr_t TGDraft::_IHTHoleAuto::GetNotes2 ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Notes2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3651)
inline void TGDraft::_IHTHoleAuto::PutNotes3 ( _bstr_t pNotes3 ) {
    HRESULT _hr = put_Notes3(pNotes3);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3652)
inline _bstr_t TGDraft::_IHTHoleAuto::GetNotes3 ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Notes3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3653)
inline void TGDraft::_IHTHoleAuto::PutSuffix ( _bstr_t pSuffix ) {
    HRESULT _hr = put_Suffix(pSuffix);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3654)
inline _bstr_t TGDraft::_IHTHoleAuto::GetSuffix ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Suffix(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3655)
inline void TGDraft::_IHTHoleAuto::PutPrefix ( _bstr_t pPrefix ) {
    HRESULT _hr = put_Prefix(pPrefix);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3656)
inline _bstr_t TGDraft::_IHTHoleAuto::GetPrefix ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Prefix(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// dispinterface Tables wrapper method implementations
//

#pragma implementation_key(3657)
inline TGFramework::ApplicationPtr TGDraft::Tables::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3658)
inline IDispatchPtr TGDraft::Tables::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3659)
inline long TGDraft::Tables::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3660)
inline TGDraft::TablePtr TGDraft::Tables::Item ( const _variant_t & Index ) {
    struct Table * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return TablePtr(_result, false);
}

#pragma implementation_key(3661)
inline TGDraft::TablePtr TGDraft::Tables::Add ( ) {
    struct Table * _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return TablePtr(_result, false);
}

//
// dispinterface Table wrapper method implementations
//

#pragma implementation_key(3662)
inline TGFramework::ApplicationPtr TGDraft::Table::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3663)
inline IDispatchPtr TGDraft::Table::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3664)
inline TGDraft::TableCellPtr TGDraft::Table::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex ) {
    struct TableCell * _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000c\x000c", &RowIndex, &ColumnIndex);
    return TableCellPtr(_result, false);
}

#pragma implementation_key(3665)
inline enum TGDraft::TitlePosition TGDraft::Table::GetColumnHeaderPosition ( ) {
    enum TitlePosition _result;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3666)
inline void TGDraft::Table::PutColumnHeaderPosition ( enum TitlePosition _arg1 ) {
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3667)
inline TGDraft::TableColumnsPtr TGDraft::Table::GetColumns ( ) {
    struct TableColumns * _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableColumnsPtr(_result, false);
}

#pragma implementation_key(3668)
inline HRESULT TGDraft::Table::Delete ( ) {
    return _com_dispatch_method(this, 0x6a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3669)
inline double TGDraft::Table::GetMargin ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3670)
inline void TGDraft::Table::PutMargin ( double _arg1 ) {
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3671)
inline long TGDraft::Table::GetMaximumRows ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3672)
inline void TGDraft::Table::PutMaximumRows ( long _arg1 ) {
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3673)
inline double TGDraft::Table::GetPageGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3674)
inline void TGDraft::Table::PutPageGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3675)
inline VARIANT_BOOL TGDraft::Table::GetReverseDisplayOrder ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3676)
inline void TGDraft::Table::PutReverseDisplayOrder ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3677)
inline TGDraft::TableRowsPtr TGDraft::Table::GetRows ( ) {
    struct TableRows * _result = 0;
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableRowsPtr(_result, false);
}

#pragma implementation_key(3678)
inline HRESULT TGDraft::Table::SetOrigin ( double x, double y ) {
    return _com_dispatch_method(this, 0x74, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(3679)
inline VARIANT_BOOL TGDraft::Table::GetShowColumnHeader ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3680)
inline void TGDraft::Table::PutShowColumnHeader ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3681)
inline _bstr_t TGDraft::Table::GetTableStyle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3682)
inline void TGDraft::Table::PutTableStyle ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3683)
inline TGDraft::TableTitlesPtr TGDraft::Table::GetTitles ( ) {
    struct TableTitles * _result = 0;
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableTitlesPtr(_result, false);
}

#pragma implementation_key(3684)
inline HRESULT TGDraft::Table::Update ( ) {
    return _com_dispatch_method(this, 0x73, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3685)
inline enum TGDraft::TableAnchorPoint TGDraft::Table::GetAnchorPoint ( ) {
    enum TableAnchorPoint _result;
    _com_dispatch_method(this, 0x75, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3686)
inline void TGDraft::Table::PutAnchorPoint ( enum TableAnchorPoint _arg1 ) {
    _com_dispatch_method(this, 0x75, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3687)
inline TGDraft::TablePagesPtr TGDraft::Table::GetPages ( ) {
    struct TablePages * _result = 0;
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TablePagesPtr(_result, false);
}

#pragma implementation_key(3688)
inline double TGDraft::Table::GetHeaderFixedRowHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3689)
inline void TGDraft::Table::PutHeaderFixedRowHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3690)
inline double TGDraft::Table::GetDataFixedRowHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3691)
inline void TGDraft::Table::PutDataFixedRowHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3692)
inline double TGDraft::Table::GetMaximumHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3693)
inline void TGDraft::Table::PutMaximumHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3694)
inline long TGDraft::Table::GetNumberOfHeaderRows ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3695)
inline void TGDraft::Table::PutNumberOfHeaderRows ( long _arg1 ) {
    _com_dispatch_method(this, 0x7a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3696)
inline long TGDraft::Table::GetMaximumRowsFirstPage ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3697)
inline void TGDraft::Table::PutMaximumRowsFirstPage ( long _arg1 ) {
    _com_dispatch_method(this, 0x7b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3698)
inline long TGDraft::Table::GetMaximumRowsAdditionalPages ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3699)
inline void TGDraft::Table::PutMaximumRowsAdditionalPages ( long _arg1 ) {
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3700)
inline double TGDraft::Table::GetMaximumHeightFirstPage ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x7d, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3701)
inline void TGDraft::Table::PutMaximumHeightFirstPage ( double _arg1 ) {
    _com_dispatch_method(this, 0x7d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3702)
inline double TGDraft::Table::GetMaximumHeightAdditionalPages ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x7e, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3703)
inline void TGDraft::Table::PutMaximumHeightAdditionalPages ( double _arg1 ) {
    _com_dispatch_method(this, 0x7e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3704)
inline VARIANT_BOOL TGDraft::Table::GetCreateNewSheetsForTable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3705)
inline void TGDraft::Table::PutCreateNewSheetsForTable ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x7f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3706)
inline _bstr_t TGDraft::Table::GetFirstSheetBackgroundName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x80, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3707)
inline void TGDraft::Table::PutFirstSheetBackgroundName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x80, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3708)
inline _bstr_t TGDraft::Table::GetAdditionalSheetsBackgroundName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3709)
inline void TGDraft::Table::PutAdditionalSheetsBackgroundName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3710)
inline VARIANT_BOOL TGDraft::Table::GetShowSheetBackground ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x82, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3711)
inline void TGDraft::Table::PutShowSheetBackground ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x82, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3712)
inline VARIANT_BOOL TGDraft::Table::GetMaintainSheetsWithTableSize ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x83, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3713)
inline void TGDraft::Table::PutMaintainSheetsWithTableSize ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x83, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3714)
inline VARIANT_BOOL TGDraft::Table::GetEnableGroups ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x84, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3715)
inline void TGDraft::Table::PutEnableGroups ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x84, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3716)
inline TGDraft::TableGroupsPtr TGDraft::Table::GetGroups ( ) {
    struct TableGroups * _result = 0;
    _com_dispatch_method(this, 0x85, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableGroupsPtr(_result, false);
}

#pragma implementation_key(3717)
inline VARIANT_BOOL TGDraft::Table::GetWrapDataCellsToNewRow ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x86, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3718)
inline void TGDraft::Table::PutWrapDataCellsToNewRow ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x86, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3719)
inline VARIANT_BOOL TGDraft::Table::GetFillEndOfTableWithBlankRows ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x87, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3720)
inline void TGDraft::Table::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x87, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3721)
inline long TGDraft::Table::GetGroupByColumn ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x88, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3722)
inline void TGDraft::Table::PutGroupByColumn ( long _arg1 ) {
    _com_dispatch_method(this, 0x88, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3723)
inline double TGDraft::Table::GetTitleFixedRowHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x89, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3724)
inline void TGDraft::Table::PutTitleFixedRowHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x89, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3725)
inline double TGDraft::Table::GetMarginHorizontal ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x8a, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3726)
inline void TGDraft::Table::PutMarginHorizontal ( double _arg1 ) {
    _com_dispatch_method(this, 0x8a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3727)
inline double TGDraft::Table::GetMarginVertical ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x8b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3728)
inline void TGDraft::Table::PutMarginVertical ( double _arg1 ) {
    _com_dispatch_method(this, 0x8b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3729)
inline _bstr_t TGDraft::Table::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x8c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

//
// interface _ITablesAuto wrapper method implementations
//

#pragma implementation_key(3730)
inline TGFramework::ApplicationPtr TGDraft::_ITablesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3731)
inline IDispatchPtr TGDraft::_ITablesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3732)
inline long TGDraft::_ITablesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3733)
inline TGDraft::TablePtr TGDraft::_ITablesAuto::Item ( const _variant_t & Index ) {
    struct Table * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TablePtr(_result, false);
}

#pragma implementation_key(3734)
inline IUnknownPtr TGDraft::_ITablesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3735)
inline TGDraft::TablePtr TGDraft::_ITablesAuto::Add ( ) {
    struct Table * _result = 0;
    HRESULT _hr = raw_Add(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TablePtr(_result, false);
}

//
// interface _ITableAuto wrapper method implementations
//

#pragma implementation_key(3736)
inline TGFramework::ApplicationPtr TGDraft::_ITableAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3737)
inline IDispatchPtr TGDraft::_ITableAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3738)
inline TGDraft::TableCellPtr TGDraft::_ITableAuto::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex ) {
    struct TableCell * _result = 0;
    HRESULT _hr = get_Cell(RowIndex, ColumnIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableCellPtr(_result, false);
}

#pragma implementation_key(3739)
inline enum TGDraft::TitlePosition TGDraft::_ITableAuto::GetColumnHeaderPosition ( ) {
    enum TitlePosition _result;
    HRESULT _hr = get_ColumnHeaderPosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3740)
inline void TGDraft::_ITableAuto::PutColumnHeaderPosition ( enum TitlePosition ColumnHeaderPosition ) {
    HRESULT _hr = put_ColumnHeaderPosition(ColumnHeaderPosition);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3741)
inline TGDraft::TableColumnsPtr TGDraft::_ITableAuto::GetColumns ( ) {
    struct TableColumns * _result = 0;
    HRESULT _hr = get_Columns(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableColumnsPtr(_result, false);
}

#pragma implementation_key(3742)
inline HRESULT TGDraft::_ITableAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3743)
inline double TGDraft::_ITableAuto::GetMargin ( ) {
    double _result = 0;
    HRESULT _hr = get_Margin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3744)
inline void TGDraft::_ITableAuto::PutMargin ( double Margin ) {
    HRESULT _hr = put_Margin(Margin);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3745)
inline long TGDraft::_ITableAuto::GetMaximumRows ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3746)
inline void TGDraft::_ITableAuto::PutMaximumRows ( long MaximumRows ) {
    HRESULT _hr = put_MaximumRows(MaximumRows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3747)
inline double TGDraft::_ITableAuto::GetPageGap ( ) {
    double _result = 0;
    HRESULT _hr = get_PageGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3748)
inline void TGDraft::_ITableAuto::PutPageGap ( double PageGap ) {
    HRESULT _hr = put_PageGap(PageGap);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3749)
inline VARIANT_BOOL TGDraft::_ITableAuto::GetReverseDisplayOrder ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ReverseDisplayOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3750)
inline void TGDraft::_ITableAuto::PutReverseDisplayOrder ( VARIANT_BOOL ReverseDisplayOrder ) {
    HRESULT _hr = put_ReverseDisplayOrder(ReverseDisplayOrder);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3751)
inline TGDraft::TableRowsPtr TGDraft::_ITableAuto::GetRows ( ) {
    struct TableRows * _result = 0;
    HRESULT _hr = get_Rows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableRowsPtr(_result, false);
}

#pragma implementation_key(3752)
inline HRESULT TGDraft::_ITableAuto::SetOrigin ( double x, double y ) {
    HRESULT _hr = raw_SetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3753)
inline VARIANT_BOOL TGDraft::_ITableAuto::GetShowColumnHeader ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowColumnHeader(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3754)
inline void TGDraft::_ITableAuto::PutShowColumnHeader ( VARIANT_BOOL ShowColumnHeader ) {
    HRESULT _hr = put_ShowColumnHeader(ShowColumnHeader);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3755)
inline _bstr_t TGDraft::_ITableAuto::GetTableStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TableStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3756)
inline void TGDraft::_ITableAuto::PutTableStyle ( _bstr_t TableStyle ) {
    HRESULT _hr = put_TableStyle(TableStyle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3757)
inline TGDraft::TableTitlesPtr TGDraft::_ITableAuto::GetTitles ( ) {
    struct TableTitles * _result = 0;
    HRESULT _hr = get_Titles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableTitlesPtr(_result, false);
}

#pragma implementation_key(3758)
inline HRESULT TGDraft::_ITableAuto::Update ( ) {
    HRESULT _hr = raw_Update();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3759)
inline enum TGDraft::TableAnchorPoint TGDraft::_ITableAuto::GetAnchorPoint ( ) {
    enum TableAnchorPoint _result;
    HRESULT _hr = get_AnchorPoint(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3760)
inline void TGDraft::_ITableAuto::PutAnchorPoint ( enum TableAnchorPoint AnchorPoint ) {
    HRESULT _hr = put_AnchorPoint(AnchorPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3761)
inline TGDraft::TablePagesPtr TGDraft::_ITableAuto::GetPages ( ) {
    struct TablePages * _result = 0;
    HRESULT _hr = get_Pages(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TablePagesPtr(_result, false);
}

#pragma implementation_key(3762)
inline double TGDraft::_ITableAuto::GetHeaderFixedRowHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_HeaderFixedRowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3763)
inline void TGDraft::_ITableAuto::PutHeaderFixedRowHeight ( double HeaderFixedRowHeight ) {
    HRESULT _hr = put_HeaderFixedRowHeight(HeaderFixedRowHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3764)
inline double TGDraft::_ITableAuto::GetDataFixedRowHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_DataFixedRowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3765)
inline void TGDraft::_ITableAuto::PutDataFixedRowHeight ( double DataFixedRowHeight ) {
    HRESULT _hr = put_DataFixedRowHeight(DataFixedRowHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3766)
inline double TGDraft::_ITableAuto::GetMaximumHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3767)
inline void TGDraft::_ITableAuto::PutMaximumHeight ( double MaximumHeight ) {
    HRESULT _hr = put_MaximumHeight(MaximumHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3768)
inline long TGDraft::_ITableAuto::GetNumberOfHeaderRows ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfHeaderRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3769)
inline void TGDraft::_ITableAuto::PutNumberOfHeaderRows ( long NumberOfHeaderRows ) {
    HRESULT _hr = put_NumberOfHeaderRows(NumberOfHeaderRows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3770)
inline long TGDraft::_ITableAuto::GetMaximumRowsFirstPage ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumRowsFirstPage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3771)
inline void TGDraft::_ITableAuto::PutMaximumRowsFirstPage ( long MaximumRowsFirstPage ) {
    HRESULT _hr = put_MaximumRowsFirstPage(MaximumRowsFirstPage);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3772)
inline long TGDraft::_ITableAuto::GetMaximumRowsAdditionalPages ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumRowsAdditionalPages(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3773)
inline void TGDraft::_ITableAuto::PutMaximumRowsAdditionalPages ( long MaximumRowsAdditionalPages ) {
    HRESULT _hr = put_MaximumRowsAdditionalPages(MaximumRowsAdditionalPages);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3774)
inline double TGDraft::_ITableAuto::GetMaximumHeightFirstPage ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumHeightFirstPage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3775)
inline void TGDraft::_ITableAuto::PutMaximumHeightFirstPage ( double MaximumHeightFirstPage ) {
    HRESULT _hr = put_MaximumHeightFirstPage(MaximumHeightFirstPage);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3776)
inline double TGDraft::_ITableAuto::GetMaximumHeightAdditionalPages ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumHeightAdditionalPages(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3777)
inline void TGDraft::_ITableAuto::PutMaximumHeightAdditionalPages ( double MaximumHeightAdditionalPages ) {
    HRESULT _hr = put_MaximumHeightAdditionalPages(MaximumHeightAdditionalPages);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3778)
inline VARIANT_BOOL TGDraft::_ITableAuto::GetCreateNewSheetsForTable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CreateNewSheetsForTable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3779)
inline void TGDraft::_ITableAuto::PutCreateNewSheetsForTable ( VARIANT_BOOL CreateNewSheetsForTable ) {
    HRESULT _hr = put_CreateNewSheetsForTable(CreateNewSheetsForTable);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3780)
inline _bstr_t TGDraft::_ITableAuto::GetFirstSheetBackgroundName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FirstSheetBackgroundName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3781)
inline void TGDraft::_ITableAuto::PutFirstSheetBackgroundName ( _bstr_t FirstSheetBackgroundName ) {
    HRESULT _hr = put_FirstSheetBackgroundName(FirstSheetBackgroundName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3782)
inline _bstr_t TGDraft::_ITableAuto::GetAdditionalSheetsBackgroundName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AdditionalSheetsBackgroundName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3783)
inline void TGDraft::_ITableAuto::PutAdditionalSheetsBackgroundName ( _bstr_t AdditionalSheetsBackgroundName ) {
    HRESULT _hr = put_AdditionalSheetsBackgroundName(AdditionalSheetsBackgroundName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3784)
inline VARIANT_BOOL TGDraft::_ITableAuto::GetShowSheetBackground ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowSheetBackground(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3785)
inline void TGDraft::_ITableAuto::PutShowSheetBackground ( VARIANT_BOOL ShowSheetBackground ) {
    HRESULT _hr = put_ShowSheetBackground(ShowSheetBackground);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3786)
inline VARIANT_BOOL TGDraft::_ITableAuto::GetMaintainSheetsWithTableSize ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MaintainSheetsWithTableSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3787)
inline void TGDraft::_ITableAuto::PutMaintainSheetsWithTableSize ( VARIANT_BOOL MaintainSheetsWithTableSize ) {
    HRESULT _hr = put_MaintainSheetsWithTableSize(MaintainSheetsWithTableSize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3788)
inline VARIANT_BOOL TGDraft::_ITableAuto::GetEnableGroups ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_EnableGroups(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3789)
inline void TGDraft::_ITableAuto::PutEnableGroups ( VARIANT_BOOL EnableGroups ) {
    HRESULT _hr = put_EnableGroups(EnableGroups);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3790)
inline TGDraft::TableGroupsPtr TGDraft::_ITableAuto::GetGroups ( ) {
    struct TableGroups * _result = 0;
    HRESULT _hr = get_Groups(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableGroupsPtr(_result, false);
}

#pragma implementation_key(3791)
inline VARIANT_BOOL TGDraft::_ITableAuto::GetWrapDataCellsToNewRow ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WrapDataCellsToNewRow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3792)
inline void TGDraft::_ITableAuto::PutWrapDataCellsToNewRow ( VARIANT_BOOL WrapDataCellsToNewRow ) {
    HRESULT _hr = put_WrapDataCellsToNewRow(WrapDataCellsToNewRow);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3793)
inline VARIANT_BOOL TGDraft::_ITableAuto::GetFillEndOfTableWithBlankRows ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_FillEndOfTableWithBlankRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3794)
inline void TGDraft::_ITableAuto::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL FillEndOfTableWithBlankRows ) {
    HRESULT _hr = put_FillEndOfTableWithBlankRows(FillEndOfTableWithBlankRows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3795)
inline long TGDraft::_ITableAuto::GetGroupByColumn ( ) {
    long _result = 0;
    HRESULT _hr = get_GroupByColumn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3796)
inline void TGDraft::_ITableAuto::PutGroupByColumn ( long ColumnIndex ) {
    HRESULT _hr = put_GroupByColumn(ColumnIndex);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3797)
inline double TGDraft::_ITableAuto::GetTitleFixedRowHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_TitleFixedRowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3798)
inline void TGDraft::_ITableAuto::PutTitleFixedRowHeight ( double TitleFixedRowHeight ) {
    HRESULT _hr = put_TitleFixedRowHeight(TitleFixedRowHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3799)
inline double TGDraft::_ITableAuto::GetMarginHorizontal ( ) {
    double _result = 0;
    HRESULT _hr = get_MarginHorizontal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3800)
inline void TGDraft::_ITableAuto::PutMarginHorizontal ( double MarginHorizontal ) {
    HRESULT _hr = put_MarginHorizontal(MarginHorizontal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3801)
inline double TGDraft::_ITableAuto::GetMarginVertical ( ) {
    double _result = 0;
    HRESULT _hr = get_MarginVertical(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3802)
inline void TGDraft::_ITableAuto::PutMarginVertical ( double MarginVertical ) {
    HRESULT _hr = put_MarginVertical(MarginVertical);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3803)
inline _bstr_t TGDraft::_ITableAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// dispinterface DraftBendTables wrapper method implementations
//

#pragma implementation_key(3804)
inline TGFramework::ApplicationPtr TGDraft::DraftBendTables::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3805)
inline long TGDraft::DraftBendTables::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3806)
inline TGDraft::DraftBendTablePtr TGDraft::DraftBendTables::Item ( const _variant_t & Index ) {
    struct DraftBendTable * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return DraftBendTablePtr(_result, false);
}

#pragma implementation_key(3807)
inline TGDraft::DraftBendTablePtr TGDraft::DraftBendTables::Add ( struct DrawingView * DrawingView, _bstr_t SavedSettings, long AutoBalloon, long CreateDraftBendTable ) {
    struct DraftBendTable * _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0008\x0003\x0003", DrawingView, (BSTR)SavedSettings, AutoBalloon, CreateDraftBendTable);
    return DraftBendTablePtr(_result, false);
}

#pragma implementation_key(3808)
inline IDispatchPtr TGDraft::DraftBendTables::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// dispinterface DraftBendTable wrapper method implementations
//

#pragma implementation_key(3809)
inline TGFramework::ApplicationPtr TGDraft::DraftBendTable::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3810)
inline HRESULT TGDraft::DraftBendTable::Update ( ) {
    return _com_dispatch_method(this, 0x66, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3811)
inline HRESULT TGDraft::DraftBendTable::CopyToClipboard ( ) {
    return _com_dispatch_method(this, 0x67, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3812)
inline TGDraft::ModelLinkPtr TGDraft::DraftBendTable::GetModelLink ( ) {
    struct ModelLink * _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ModelLinkPtr(_result, false);
}

#pragma implementation_key(3813)
inline HRESULT TGDraft::DraftBendTable::Delete ( ) {
    return _com_dispatch_method(this, 0x6a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3814)
inline void TGDraft::DraftBendTable::PutSavedSettings ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3815)
inline IDispatchPtr TGDraft::DraftBendTable::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3816)
inline TGDraft::TableCellPtr TGDraft::DraftBendTable::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex ) {
    struct TableCell * _result = 0;
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000c\x000c", &RowIndex, &ColumnIndex);
    return TableCellPtr(_result, false);
}

#pragma implementation_key(3817)
inline enum TGDraft::TitlePosition TGDraft::DraftBendTable::GetColumnHeaderPosition ( ) {
    enum TitlePosition _result;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3818)
inline void TGDraft::DraftBendTable::PutColumnHeaderPosition ( enum TitlePosition _arg1 ) {
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3819)
inline TGDraft::TableColumnsPtr TGDraft::DraftBendTable::GetColumns ( ) {
    struct TableColumns * _result = 0;
    _com_dispatch_method(this, 0x6e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableColumnsPtr(_result, false);
}

#pragma implementation_key(3820)
inline double TGDraft::DraftBendTable::GetMarginHorizontal ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xa0, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3821)
inline void TGDraft::DraftBendTable::PutMarginHorizontal ( double _arg1 ) {
    _com_dispatch_method(this, 0xa0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3822)
inline double TGDraft::DraftBendTable::GetMarginVertical ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xa1, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3823)
inline void TGDraft::DraftBendTable::PutMarginVertical ( double _arg1 ) {
    _com_dispatch_method(this, 0xa1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3824)
inline long TGDraft::DraftBendTable::GetMaximumRows ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3825)
inline void TGDraft::DraftBendTable::PutMaximumRows ( long _arg1 ) {
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3826)
inline double TGDraft::DraftBendTable::GetPageGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3827)
inline void TGDraft::DraftBendTable::PutPageGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3828)
inline VARIANT_BOOL TGDraft::DraftBendTable::GetReverseDisplayOrder ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x73, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3829)
inline void TGDraft::DraftBendTable::PutReverseDisplayOrder ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x73, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3830)
inline TGDraft::TableRowsPtr TGDraft::DraftBendTable::GetRows ( ) {
    struct TableRows * _result = 0;
    _com_dispatch_method(this, 0x74, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableRowsPtr(_result, false);
}

#pragma implementation_key(3831)
inline HRESULT TGDraft::DraftBendTable::SetOrigin ( double x, double y ) {
    return _com_dispatch_method(this, 0x78, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(3832)
inline VARIANT_BOOL TGDraft::DraftBendTable::GetShowColumnHeader ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x75, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3833)
inline void TGDraft::DraftBendTable::PutShowColumnHeader ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x75, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3834)
inline _bstr_t TGDraft::DraftBendTable::GetTableStyle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3835)
inline void TGDraft::DraftBendTable::PutTableStyle ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3836)
inline TGDraft::TableTitlesPtr TGDraft::DraftBendTable::GetTitles ( ) {
    struct TableTitles * _result = 0;
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableTitlesPtr(_result, false);
}

#pragma implementation_key(3837)
inline enum TGDraft::TableAnchorPoint TGDraft::DraftBendTable::GetAnchorPoint ( ) {
    enum TableAnchorPoint _result;
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3838)
inline void TGDraft::DraftBendTable::PutAnchorPoint ( enum TableAnchorPoint _arg1 ) {
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3839)
inline TGDraft::TablePagesPtr TGDraft::DraftBendTable::GetPages ( ) {
    struct TablePages * _result = 0;
    _com_dispatch_method(this, 0x7a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TablePagesPtr(_result, false);
}

#pragma implementation_key(3840)
inline double TGDraft::DraftBendTable::GetHeaderFixedRowHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x7b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3841)
inline void TGDraft::DraftBendTable::PutHeaderFixedRowHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x7b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3842)
inline double TGDraft::DraftBendTable::GetDataFixedRowHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3843)
inline void TGDraft::DraftBendTable::PutDataFixedRowHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3844)
inline double TGDraft::DraftBendTable::GetMaximumHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x7d, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3845)
inline void TGDraft::DraftBendTable::PutMaximumHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x7d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3846)
inline long TGDraft::DraftBendTable::GetNumberOfHeaderRows ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3847)
inline void TGDraft::DraftBendTable::PutNumberOfHeaderRows ( long _arg1 ) {
    _com_dispatch_method(this, 0x7e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3848)
inline long TGDraft::DraftBendTable::GetMaximumRowsFirstPage ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3849)
inline void TGDraft::DraftBendTable::PutMaximumRowsFirstPage ( long _arg1 ) {
    _com_dispatch_method(this, 0x7f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3850)
inline long TGDraft::DraftBendTable::GetMaximumRowsAdditionalPages ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x80, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3851)
inline void TGDraft::DraftBendTable::PutMaximumRowsAdditionalPages ( long _arg1 ) {
    _com_dispatch_method(this, 0x80, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3852)
inline double TGDraft::DraftBendTable::GetMaximumHeightFirstPage ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3853)
inline void TGDraft::DraftBendTable::PutMaximumHeightFirstPage ( double _arg1 ) {
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3854)
inline double TGDraft::DraftBendTable::GetMaximumHeightAdditionalPages ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x82, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3855)
inline void TGDraft::DraftBendTable::PutMaximumHeightAdditionalPages ( double _arg1 ) {
    _com_dispatch_method(this, 0x82, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3856)
inline VARIANT_BOOL TGDraft::DraftBendTable::GetCreateNewSheetsForTable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x83, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3857)
inline void TGDraft::DraftBendTable::PutCreateNewSheetsForTable ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x83, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3858)
inline _bstr_t TGDraft::DraftBendTable::GetFirstSheetBackgroundName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x84, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3859)
inline void TGDraft::DraftBendTable::PutFirstSheetBackgroundName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x84, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3860)
inline _bstr_t TGDraft::DraftBendTable::GetAdditionalSheetsBackgroundName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x85, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3861)
inline void TGDraft::DraftBendTable::PutAdditionalSheetsBackgroundName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x85, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3862)
inline VARIANT_BOOL TGDraft::DraftBendTable::GetShowSheetBackground ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x86, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3863)
inline void TGDraft::DraftBendTable::PutShowSheetBackground ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x86, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3864)
inline VARIANT_BOOL TGDraft::DraftBendTable::GetMaintainSheetsWithTableSize ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x87, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3865)
inline void TGDraft::DraftBendTable::PutMaintainSheetsWithTableSize ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x87, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3866)
inline VARIANT_BOOL TGDraft::DraftBendTable::GetEnableGroups ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x88, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3867)
inline void TGDraft::DraftBendTable::PutEnableGroups ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x88, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3868)
inline TGDraft::TableGroupsPtr TGDraft::DraftBendTable::GetGroups ( ) {
    struct TableGroups * _result = 0;
    _com_dispatch_method(this, 0x89, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableGroupsPtr(_result, false);
}

#pragma implementation_key(3869)
inline VARIANT_BOOL TGDraft::DraftBendTable::GetWrapDataCellsToNewRow ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3870)
inline void TGDraft::DraftBendTable::PutWrapDataCellsToNewRow ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3871)
inline VARIANT_BOOL TGDraft::DraftBendTable::GetFillEndOfTableWithBlankRows ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3872)
inline void TGDraft::DraftBendTable::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3873)
inline long TGDraft::DraftBendTable::GetGroupByColumn ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3874)
inline void TGDraft::DraftBendTable::PutGroupByColumn ( long _arg1 ) {
    _com_dispatch_method(this, 0x8c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3875)
inline double TGDraft::DraftBendTable::GetTitleFixedRowHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x8d, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3876)
inline void TGDraft::DraftBendTable::PutTitleFixedRowHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x8d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3877)
inline HRESULT TGDraft::DraftBendTable::GetListOfSavedSettings ( long * NumSavedSettings, SAFEARRAY * * ListOfSavedSettings ) {
    return _com_dispatch_method(this, 0x8e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6008", NumSavedSettings, ListOfSavedSettings);
}

#pragma implementation_key(3878)
inline _bstr_t TGDraft::DraftBendTable::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x8f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

//
// interface _IDraftBendTablesAuto wrapper method implementations
//

#pragma implementation_key(3879)
inline TGFramework::ApplicationPtr TGDraft::_IDraftBendTablesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3880)
inline long TGDraft::_IDraftBendTablesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3881)
inline TGDraft::DraftBendTablePtr TGDraft::_IDraftBendTablesAuto::Item ( const _variant_t & Index ) {
    struct DraftBendTable * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DraftBendTablePtr(_result, false);
}

#pragma implementation_key(3882)
inline IUnknownPtr TGDraft::_IDraftBendTablesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3883)
inline TGDraft::DraftBendTablePtr TGDraft::_IDraftBendTablesAuto::Add ( struct DrawingView * DrawingView, _bstr_t SavedSettings, long AutoBalloon, long CreateDraftBendTable ) {
    struct DraftBendTable * _result = 0;
    HRESULT _hr = raw_Add(DrawingView, SavedSettings, AutoBalloon, CreateDraftBendTable, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DraftBendTablePtr(_result, false);
}

#pragma implementation_key(3884)
inline IDispatchPtr TGDraft::_IDraftBendTablesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// interface _IDraftBendTableAuto wrapper method implementations
//

#pragma implementation_key(3885)
inline TGFramework::ApplicationPtr TGDraft::_IDraftBendTableAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3886)
inline HRESULT TGDraft::_IDraftBendTableAuto::Update ( ) {
    HRESULT _hr = raw_Update();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3887)
inline HRESULT TGDraft::_IDraftBendTableAuto::CopyToClipboard ( ) {
    HRESULT _hr = raw_CopyToClipboard();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3888)
inline TGDraft::ModelLinkPtr TGDraft::_IDraftBendTableAuto::GetModelLink ( ) {
    struct ModelLink * _result = 0;
    HRESULT _hr = get_ModelLink(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ModelLinkPtr(_result, false);
}

#pragma implementation_key(3889)
inline HRESULT TGDraft::_IDraftBendTableAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3890)
inline void TGDraft::_IDraftBendTableAuto::PutSavedSettings ( _bstr_t _arg1 ) {
    HRESULT _hr = put_SavedSettings(_arg1);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3891)
inline IDispatchPtr TGDraft::_IDraftBendTableAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3892)
inline TGDraft::TableCellPtr TGDraft::_IDraftBendTableAuto::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex ) {
    struct TableCell * _result = 0;
    HRESULT _hr = get_Cell(RowIndex, ColumnIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableCellPtr(_result, false);
}

#pragma implementation_key(3893)
inline enum TGDraft::TitlePosition TGDraft::_IDraftBendTableAuto::GetColumnHeaderPosition ( ) {
    enum TitlePosition _result;
    HRESULT _hr = get_ColumnHeaderPosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3894)
inline void TGDraft::_IDraftBendTableAuto::PutColumnHeaderPosition ( enum TitlePosition ColumnHeaderPosition ) {
    HRESULT _hr = put_ColumnHeaderPosition(ColumnHeaderPosition);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3895)
inline TGDraft::TableColumnsPtr TGDraft::_IDraftBendTableAuto::GetColumns ( ) {
    struct TableColumns * _result = 0;
    HRESULT _hr = get_Columns(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableColumnsPtr(_result, false);
}

#pragma implementation_key(3896)
inline double TGDraft::_IDraftBendTableAuto::GetMarginHorizontal ( ) {
    double _result = 0;
    HRESULT _hr = get_MarginHorizontal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3897)
inline void TGDraft::_IDraftBendTableAuto::PutMarginHorizontal ( double MarginHorizontal ) {
    HRESULT _hr = put_MarginHorizontal(MarginHorizontal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3898)
inline double TGDraft::_IDraftBendTableAuto::GetMarginVertical ( ) {
    double _result = 0;
    HRESULT _hr = get_MarginVertical(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3899)
inline void TGDraft::_IDraftBendTableAuto::PutMarginVertical ( double MarginVertical ) {
    HRESULT _hr = put_MarginVertical(MarginVertical);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3900)
inline long TGDraft::_IDraftBendTableAuto::GetMaximumRows ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3901)
inline void TGDraft::_IDraftBendTableAuto::PutMaximumRows ( long MaximumRows ) {
    HRESULT _hr = put_MaximumRows(MaximumRows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3902)
inline double TGDraft::_IDraftBendTableAuto::GetPageGap ( ) {
    double _result = 0;
    HRESULT _hr = get_PageGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3903)
inline void TGDraft::_IDraftBendTableAuto::PutPageGap ( double PageGap ) {
    HRESULT _hr = put_PageGap(PageGap);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3904)
inline VARIANT_BOOL TGDraft::_IDraftBendTableAuto::GetReverseDisplayOrder ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ReverseDisplayOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3905)
inline void TGDraft::_IDraftBendTableAuto::PutReverseDisplayOrder ( VARIANT_BOOL ReverseDisplayOrder ) {
    HRESULT _hr = put_ReverseDisplayOrder(ReverseDisplayOrder);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3906)
inline TGDraft::TableRowsPtr TGDraft::_IDraftBendTableAuto::GetRows ( ) {
    struct TableRows * _result = 0;
    HRESULT _hr = get_Rows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableRowsPtr(_result, false);
}

#pragma implementation_key(3907)
inline HRESULT TGDraft::_IDraftBendTableAuto::SetOrigin ( double x, double y ) {
    HRESULT _hr = raw_SetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3908)
inline VARIANT_BOOL TGDraft::_IDraftBendTableAuto::GetShowColumnHeader ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowColumnHeader(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3909)
inline void TGDraft::_IDraftBendTableAuto::PutShowColumnHeader ( VARIANT_BOOL ShowColumnHeader ) {
    HRESULT _hr = put_ShowColumnHeader(ShowColumnHeader);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3910)
inline _bstr_t TGDraft::_IDraftBendTableAuto::GetTableStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TableStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3911)
inline void TGDraft::_IDraftBendTableAuto::PutTableStyle ( _bstr_t TableStyle ) {
    HRESULT _hr = put_TableStyle(TableStyle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3912)
inline TGDraft::TableTitlesPtr TGDraft::_IDraftBendTableAuto::GetTitles ( ) {
    struct TableTitles * _result = 0;
    HRESULT _hr = get_Titles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableTitlesPtr(_result, false);
}

#pragma implementation_key(3913)
inline enum TGDraft::TableAnchorPoint TGDraft::_IDraftBendTableAuto::GetAnchorPoint ( ) {
    enum TableAnchorPoint _result;
    HRESULT _hr = get_AnchorPoint(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3914)
inline void TGDraft::_IDraftBendTableAuto::PutAnchorPoint ( enum TableAnchorPoint AnchorPoint ) {
    HRESULT _hr = put_AnchorPoint(AnchorPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3915)
inline TGDraft::TablePagesPtr TGDraft::_IDraftBendTableAuto::GetPages ( ) {
    struct TablePages * _result = 0;
    HRESULT _hr = get_Pages(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TablePagesPtr(_result, false);
}

#pragma implementation_key(3916)
inline double TGDraft::_IDraftBendTableAuto::GetHeaderFixedRowHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_HeaderFixedRowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3917)
inline void TGDraft::_IDraftBendTableAuto::PutHeaderFixedRowHeight ( double HeaderFixedRowHeight ) {
    HRESULT _hr = put_HeaderFixedRowHeight(HeaderFixedRowHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3918)
inline double TGDraft::_IDraftBendTableAuto::GetDataFixedRowHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_DataFixedRowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3919)
inline void TGDraft::_IDraftBendTableAuto::PutDataFixedRowHeight ( double DataFixedRowHeight ) {
    HRESULT _hr = put_DataFixedRowHeight(DataFixedRowHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3920)
inline double TGDraft::_IDraftBendTableAuto::GetMaximumHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3921)
inline void TGDraft::_IDraftBendTableAuto::PutMaximumHeight ( double MaximumHeight ) {
    HRESULT _hr = put_MaximumHeight(MaximumHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3922)
inline long TGDraft::_IDraftBendTableAuto::GetNumberOfHeaderRows ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfHeaderRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3923)
inline void TGDraft::_IDraftBendTableAuto::PutNumberOfHeaderRows ( long NumberOfHeaderRows ) {
    HRESULT _hr = put_NumberOfHeaderRows(NumberOfHeaderRows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3924)
inline long TGDraft::_IDraftBendTableAuto::GetMaximumRowsFirstPage ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumRowsFirstPage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3925)
inline void TGDraft::_IDraftBendTableAuto::PutMaximumRowsFirstPage ( long MaximumRowsFirstPage ) {
    HRESULT _hr = put_MaximumRowsFirstPage(MaximumRowsFirstPage);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3926)
inline long TGDraft::_IDraftBendTableAuto::GetMaximumRowsAdditionalPages ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumRowsAdditionalPages(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3927)
inline void TGDraft::_IDraftBendTableAuto::PutMaximumRowsAdditionalPages ( long MaximumRowsAdditionalPages ) {
    HRESULT _hr = put_MaximumRowsAdditionalPages(MaximumRowsAdditionalPages);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3928)
inline double TGDraft::_IDraftBendTableAuto::GetMaximumHeightFirstPage ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumHeightFirstPage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3929)
inline void TGDraft::_IDraftBendTableAuto::PutMaximumHeightFirstPage ( double MaximumHeightFirstPage ) {
    HRESULT _hr = put_MaximumHeightFirstPage(MaximumHeightFirstPage);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3930)
inline double TGDraft::_IDraftBendTableAuto::GetMaximumHeightAdditionalPages ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumHeightAdditionalPages(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3931)
inline void TGDraft::_IDraftBendTableAuto::PutMaximumHeightAdditionalPages ( double MaximumHeightAdditionalPages ) {
    HRESULT _hr = put_MaximumHeightAdditionalPages(MaximumHeightAdditionalPages);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3932)
inline VARIANT_BOOL TGDraft::_IDraftBendTableAuto::GetCreateNewSheetsForTable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CreateNewSheetsForTable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3933)
inline void TGDraft::_IDraftBendTableAuto::PutCreateNewSheetsForTable ( VARIANT_BOOL CreateNewSheetsForTable ) {
    HRESULT _hr = put_CreateNewSheetsForTable(CreateNewSheetsForTable);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3934)
inline _bstr_t TGDraft::_IDraftBendTableAuto::GetFirstSheetBackgroundName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FirstSheetBackgroundName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3935)
inline void TGDraft::_IDraftBendTableAuto::PutFirstSheetBackgroundName ( _bstr_t FirstSheetBackgroundName ) {
    HRESULT _hr = put_FirstSheetBackgroundName(FirstSheetBackgroundName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3936)
inline _bstr_t TGDraft::_IDraftBendTableAuto::GetAdditionalSheetsBackgroundName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AdditionalSheetsBackgroundName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3937)
inline void TGDraft::_IDraftBendTableAuto::PutAdditionalSheetsBackgroundName ( _bstr_t AdditionalSheetsBackgroundName ) {
    HRESULT _hr = put_AdditionalSheetsBackgroundName(AdditionalSheetsBackgroundName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3938)
inline VARIANT_BOOL TGDraft::_IDraftBendTableAuto::GetShowSheetBackground ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowSheetBackground(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3939)
inline void TGDraft::_IDraftBendTableAuto::PutShowSheetBackground ( VARIANT_BOOL ShowSheetBackground ) {
    HRESULT _hr = put_ShowSheetBackground(ShowSheetBackground);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3940)
inline VARIANT_BOOL TGDraft::_IDraftBendTableAuto::GetMaintainSheetsWithTableSize ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MaintainSheetsWithTableSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3941)
inline void TGDraft::_IDraftBendTableAuto::PutMaintainSheetsWithTableSize ( VARIANT_BOOL MaintainSheetsWithTableSize ) {
    HRESULT _hr = put_MaintainSheetsWithTableSize(MaintainSheetsWithTableSize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3942)
inline VARIANT_BOOL TGDraft::_IDraftBendTableAuto::GetEnableGroups ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_EnableGroups(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3943)
inline void TGDraft::_IDraftBendTableAuto::PutEnableGroups ( VARIANT_BOOL EnableGroups ) {
    HRESULT _hr = put_EnableGroups(EnableGroups);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3944)
inline TGDraft::TableGroupsPtr TGDraft::_IDraftBendTableAuto::GetGroups ( ) {
    struct TableGroups * _result = 0;
    HRESULT _hr = get_Groups(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableGroupsPtr(_result, false);
}

#pragma implementation_key(3945)
inline VARIANT_BOOL TGDraft::_IDraftBendTableAuto::GetWrapDataCellsToNewRow ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WrapDataCellsToNewRow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3946)
inline void TGDraft::_IDraftBendTableAuto::PutWrapDataCellsToNewRow ( VARIANT_BOOL WrapDataCellsToNewRow ) {
    HRESULT _hr = put_WrapDataCellsToNewRow(WrapDataCellsToNewRow);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3947)
inline VARIANT_BOOL TGDraft::_IDraftBendTableAuto::GetFillEndOfTableWithBlankRows ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_FillEndOfTableWithBlankRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3948)
inline void TGDraft::_IDraftBendTableAuto::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL FillEndOfTableWithBlankRows ) {
    HRESULT _hr = put_FillEndOfTableWithBlankRows(FillEndOfTableWithBlankRows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3949)
inline long TGDraft::_IDraftBendTableAuto::GetGroupByColumn ( ) {
    long _result = 0;
    HRESULT _hr = get_GroupByColumn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3950)
inline void TGDraft::_IDraftBendTableAuto::PutGroupByColumn ( long ColumnIndex ) {
    HRESULT _hr = put_GroupByColumn(ColumnIndex);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3951)
inline double TGDraft::_IDraftBendTableAuto::GetTitleFixedRowHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_TitleFixedRowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3952)
inline void TGDraft::_IDraftBendTableAuto::PutTitleFixedRowHeight ( double TitleFixedRowHeight ) {
    HRESULT _hr = put_TitleFixedRowHeight(TitleFixedRowHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3953)
inline HRESULT TGDraft::_IDraftBendTableAuto::GetListOfSavedSettings ( long * NumSavedSettings, SAFEARRAY * * ListOfSavedSettings ) {
    HRESULT _hr = raw_GetListOfSavedSettings(NumSavedSettings, ListOfSavedSettings);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3954)
inline _bstr_t TGDraft::_IDraftBendTableAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// dispinterface ConnectorTables wrapper method implementations
//

#pragma implementation_key(3955)
inline TGFramework::ApplicationPtr TGDraft::ConnectorTables::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3956)
inline long TGDraft::ConnectorTables::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3957)
inline TGDraft::ConnectorTablePtr TGDraft::ConnectorTables::Item ( const _variant_t & Index ) {
    struct ConnectorTable * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return ConnectorTablePtr(_result, false);
}

#pragma implementation_key(3958)
inline TGDraft::ConnectorTablePtr TGDraft::ConnectorTables::Add ( struct DrawingView * DrawingView, _bstr_t SavedSettings, long AutoBalloon, long CreateConnectorTable ) {
    struct ConnectorTable * _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0008\x0003\x0003", DrawingView, (BSTR)SavedSettings, AutoBalloon, CreateConnectorTable);
    return ConnectorTablePtr(_result, false);
}

#pragma implementation_key(3959)
inline IDispatchPtr TGDraft::ConnectorTables::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// dispinterface ConnectorTable wrapper method implementations
//

#pragma implementation_key(3960)
inline TGFramework::ApplicationPtr TGDraft::ConnectorTable::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3961)
inline HRESULT TGDraft::ConnectorTable::Update ( ) {
    return _com_dispatch_method(this, 0x66, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3962)
inline HRESULT TGDraft::ConnectorTable::CopyToClipboard ( ) {
    return _com_dispatch_method(this, 0x67, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3963)
inline TGDraft::DrawingViewPtr TGDraft::ConnectorTable::GetDrawingView ( ) {
    struct DrawingView * _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(3964)
inline HRESULT TGDraft::ConnectorTable::Delete ( ) {
    return _com_dispatch_method(this, 0x6a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3965)
inline void TGDraft::ConnectorTable::PutSavedSettings ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3966)
inline IDispatchPtr TGDraft::ConnectorTable::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3967)
inline HRESULT TGDraft::ConnectorTable::SetOrigin ( double x, double y ) {
    return _com_dispatch_method(this, 0x6d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(3968)
inline HRESULT TGDraft::ConnectorTable::GetOrigin ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x6c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(3969)
inline HRESULT TGDraft::ConnectorTable::GetListOfSavedSettings ( long * NumSavedSettings, SAFEARRAY * * ListOfSavedSettings ) {
    return _com_dispatch_method(this, 0x6e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6008", NumSavedSettings, ListOfSavedSettings);
}

#pragma implementation_key(3970)
inline VARIANT_BOOL TGDraft::ConnectorTable::GetIsUpToDate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3971)
inline HRESULT TGDraft::ConnectorTable::ConvertToTable ( ) {
    return _com_dispatch_method(this, 0x80, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3972)
inline TGDraft::TableCellPtr TGDraft::ConnectorTable::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex ) {
    struct TableCell * _result = 0;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000c\x000c", &RowIndex, &ColumnIndex);
    return TableCellPtr(_result, false);
}

#pragma implementation_key(3973)
inline enum TGDraft::TitlePosition TGDraft::ConnectorTable::GetColumnHeaderPosition ( ) {
    enum TitlePosition _result;
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3974)
inline void TGDraft::ConnectorTable::PutColumnHeaderPosition ( enum TitlePosition _arg1 ) {
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3975)
inline TGDraft::TableColumnsPtr TGDraft::ConnectorTable::GetColumns ( ) {
    struct TableColumns * _result = 0;
    _com_dispatch_method(this, 0x73, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableColumnsPtr(_result, false);
}

#pragma implementation_key(3976)
inline double TGDraft::ConnectorTable::GetMargin ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3977)
inline void TGDraft::ConnectorTable::PutMargin ( double _arg1 ) {
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3978)
inline long TGDraft::ConnectorTable::GetMaximumRows ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3979)
inline void TGDraft::ConnectorTable::PutMaximumRows ( long _arg1 ) {
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3980)
inline double TGDraft::ConnectorTable::GetPageGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3981)
inline void TGDraft::ConnectorTable::PutPageGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3982)
inline VARIANT_BOOL TGDraft::ConnectorTable::GetReverseDisplayOrder ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3983)
inline void TGDraft::ConnectorTable::PutReverseDisplayOrder ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x7b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3984)
inline TGDraft::TableRowsPtr TGDraft::ConnectorTable::GetRows ( ) {
    struct TableRows * _result = 0;
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableRowsPtr(_result, false);
}

#pragma implementation_key(3985)
inline VARIANT_BOOL TGDraft::ConnectorTable::GetShowColumnHeader ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3986)
inline void TGDraft::ConnectorTable::PutShowColumnHeader ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x7d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3987)
inline _bstr_t TGDraft::ConnectorTable::GetTableStyle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3988)
inline void TGDraft::ConnectorTable::PutTableStyle ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x7e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3989)
inline TGDraft::TableTitlesPtr TGDraft::ConnectorTable::GetTitles ( ) {
    struct TableTitles * _result = 0;
    _com_dispatch_method(this, 0x7f, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableTitlesPtr(_result, false);
}

#pragma implementation_key(3990)
inline enum TGDraft::TableAnchorPoint TGDraft::ConnectorTable::GetAnchorPoint ( ) {
    enum TableAnchorPoint _result;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3991)
inline void TGDraft::ConnectorTable::PutAnchorPoint ( enum TableAnchorPoint _arg1 ) {
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3992)
inline TGDraft::TablePagesPtr TGDraft::ConnectorTable::GetPages ( ) {
    struct TablePages * _result = 0;
    _com_dispatch_method(this, 0x7a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TablePagesPtr(_result, false);
}

#pragma implementation_key(3993)
inline double TGDraft::ConnectorTable::GetHeaderFixedRowHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x75, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3994)
inline void TGDraft::ConnectorTable::PutHeaderFixedRowHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x75, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3995)
inline double TGDraft::ConnectorTable::GetDataFixedRowHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x74, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3996)
inline void TGDraft::ConnectorTable::PutDataFixedRowHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x74, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3997)
inline double TGDraft::ConnectorTable::GetMaximumHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3998)
inline void TGDraft::ConnectorTable::PutMaximumHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3999)
inline long TGDraft::ConnectorTable::GetNumberOfHeaderRows ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4000)
inline void TGDraft::ConnectorTable::PutNumberOfHeaderRows ( long _arg1 ) {
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4001)
inline long TGDraft::ConnectorTable::GetMaximumRowsFirstPage ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x82, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4002)
inline void TGDraft::ConnectorTable::PutMaximumRowsFirstPage ( long _arg1 ) {
    _com_dispatch_method(this, 0x82, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4003)
inline long TGDraft::ConnectorTable::GetMaximumRowsAdditionalPages ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x83, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4004)
inline void TGDraft::ConnectorTable::PutMaximumRowsAdditionalPages ( long _arg1 ) {
    _com_dispatch_method(this, 0x83, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4005)
inline double TGDraft::ConnectorTable::GetMaximumHeightFirstPage ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x84, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4006)
inline void TGDraft::ConnectorTable::PutMaximumHeightFirstPage ( double _arg1 ) {
    _com_dispatch_method(this, 0x84, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4007)
inline double TGDraft::ConnectorTable::GetMaximumHeightAdditionalPages ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x85, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4008)
inline void TGDraft::ConnectorTable::PutMaximumHeightAdditionalPages ( double _arg1 ) {
    _com_dispatch_method(this, 0x85, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4009)
inline VARIANT_BOOL TGDraft::ConnectorTable::GetCreateNewSheetsForTable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x86, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4010)
inline void TGDraft::ConnectorTable::PutCreateNewSheetsForTable ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x86, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4011)
inline _bstr_t TGDraft::ConnectorTable::GetFirstSheetBackgroundName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x87, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4012)
inline void TGDraft::ConnectorTable::PutFirstSheetBackgroundName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x87, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4013)
inline _bstr_t TGDraft::ConnectorTable::GetAdditionalSheetsBackgroundName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x88, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4014)
inline void TGDraft::ConnectorTable::PutAdditionalSheetsBackgroundName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x88, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4015)
inline VARIANT_BOOL TGDraft::ConnectorTable::GetShowSheetBackground ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x89, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4016)
inline void TGDraft::ConnectorTable::PutShowSheetBackground ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x89, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4017)
inline VARIANT_BOOL TGDraft::ConnectorTable::GetMaintainSheetsWithTableSize ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4018)
inline void TGDraft::ConnectorTable::PutMaintainSheetsWithTableSize ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4019)
inline VARIANT_BOOL TGDraft::ConnectorTable::GetEnableGroups ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4020)
inline void TGDraft::ConnectorTable::PutEnableGroups ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4021)
inline TGDraft::TableGroupsPtr TGDraft::ConnectorTable::GetGroups ( ) {
    struct TableGroups * _result = 0;
    _com_dispatch_method(this, 0x8c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableGroupsPtr(_result, false);
}

#pragma implementation_key(4022)
inline VARIANT_BOOL TGDraft::ConnectorTable::GetWrapDataCellsToNewRow ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4023)
inline void TGDraft::ConnectorTable::PutWrapDataCellsToNewRow ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4024)
inline VARIANT_BOOL TGDraft::ConnectorTable::GetFillEndOfTableWithBlankRows ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4025)
inline void TGDraft::ConnectorTable::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4026)
inline long TGDraft::ConnectorTable::GetGroupByColumn ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4027)
inline void TGDraft::ConnectorTable::PutGroupByColumn ( long _arg1 ) {
    _com_dispatch_method(this, 0x8f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4028)
inline double TGDraft::ConnectorTable::GetTitleFixedRowHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x90, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4029)
inline void TGDraft::ConnectorTable::PutTitleFixedRowHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x90, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4030)
inline double TGDraft::ConnectorTable::GetMarginHorizontal ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x91, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4031)
inline void TGDraft::ConnectorTable::PutMarginHorizontal ( double _arg1 ) {
    _com_dispatch_method(this, 0x91, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4032)
inline double TGDraft::ConnectorTable::GetMarginVertical ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x92, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4033)
inline void TGDraft::ConnectorTable::PutMarginVertical ( double _arg1 ) {
    _com_dispatch_method(this, 0x92, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4034)
inline _bstr_t TGDraft::ConnectorTable::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x93, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

//
// interface _IConnectorTablesAuto wrapper method implementations
//

#pragma implementation_key(4035)
inline TGFramework::ApplicationPtr TGDraft::_IConnectorTablesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4036)
inline long TGDraft::_IConnectorTablesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4037)
inline TGDraft::ConnectorTablePtr TGDraft::_IConnectorTablesAuto::Item ( const _variant_t & Index ) {
    struct ConnectorTable * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ConnectorTablePtr(_result, false);
}

#pragma implementation_key(4038)
inline IUnknownPtr TGDraft::_IConnectorTablesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4039)
inline TGDraft::ConnectorTablePtr TGDraft::_IConnectorTablesAuto::Add ( struct DrawingView * DrawingView, _bstr_t SavedSettings, long AutoBalloon, long CreateConnectorTable ) {
    struct ConnectorTable * _result = 0;
    HRESULT _hr = raw_Add(DrawingView, SavedSettings, AutoBalloon, CreateConnectorTable, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ConnectorTablePtr(_result, false);
}

#pragma implementation_key(4040)
inline IDispatchPtr TGDraft::_IConnectorTablesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// interface _IConnectorTableAuto wrapper method implementations
//

#pragma implementation_key(4041)
inline TGFramework::ApplicationPtr TGDraft::_IConnectorTableAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4042)
inline HRESULT TGDraft::_IConnectorTableAuto::Update ( ) {
    HRESULT _hr = raw_Update();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4043)
inline HRESULT TGDraft::_IConnectorTableAuto::CopyToClipboard ( ) {
    HRESULT _hr = raw_CopyToClipboard();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4044)
inline TGDraft::DrawingViewPtr TGDraft::_IConnectorTableAuto::GetDrawingView ( ) {
    struct DrawingView * _result = 0;
    HRESULT _hr = get_DrawingView(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(4045)
inline HRESULT TGDraft::_IConnectorTableAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4046)
inline void TGDraft::_IConnectorTableAuto::PutSavedSettings ( _bstr_t _arg1 ) {
    HRESULT _hr = put_SavedSettings(_arg1);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4047)
inline IDispatchPtr TGDraft::_IConnectorTableAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4048)
inline HRESULT TGDraft::_IConnectorTableAuto::SetOrigin ( double x, double y ) {
    HRESULT _hr = raw_SetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4049)
inline HRESULT TGDraft::_IConnectorTableAuto::GetOrigin ( double * x, double * y ) {
    HRESULT _hr = raw_GetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4050)
inline HRESULT TGDraft::_IConnectorTableAuto::GetListOfSavedSettings ( long * NumSavedSettings, SAFEARRAY * * ListOfSavedSettings ) {
    HRESULT _hr = raw_GetListOfSavedSettings(NumSavedSettings, ListOfSavedSettings);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4051)
inline VARIANT_BOOL TGDraft::_IConnectorTableAuto::GetIsUpToDate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsUpToDate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4052)
inline HRESULT TGDraft::_IConnectorTableAuto::ConvertToTable ( ) {
    HRESULT _hr = raw_ConvertToTable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4053)
inline TGDraft::TableCellPtr TGDraft::_IConnectorTableAuto::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex ) {
    struct TableCell * _result = 0;
    HRESULT _hr = get_Cell(RowIndex, ColumnIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableCellPtr(_result, false);
}

#pragma implementation_key(4054)
inline enum TGDraft::TitlePosition TGDraft::_IConnectorTableAuto::GetColumnHeaderPosition ( ) {
    enum TitlePosition _result;
    HRESULT _hr = get_ColumnHeaderPosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4055)
inline void TGDraft::_IConnectorTableAuto::PutColumnHeaderPosition ( enum TitlePosition ColumnHeaderPosition ) {
    HRESULT _hr = put_ColumnHeaderPosition(ColumnHeaderPosition);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4056)
inline TGDraft::TableColumnsPtr TGDraft::_IConnectorTableAuto::GetColumns ( ) {
    struct TableColumns * _result = 0;
    HRESULT _hr = get_Columns(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableColumnsPtr(_result, false);
}

#pragma implementation_key(4057)
inline double TGDraft::_IConnectorTableAuto::GetMargin ( ) {
    double _result = 0;
    HRESULT _hr = get_Margin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4058)
inline void TGDraft::_IConnectorTableAuto::PutMargin ( double Margin ) {
    HRESULT _hr = put_Margin(Margin);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4059)
inline long TGDraft::_IConnectorTableAuto::GetMaximumRows ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4060)
inline void TGDraft::_IConnectorTableAuto::PutMaximumRows ( long MaximumRows ) {
    HRESULT _hr = put_MaximumRows(MaximumRows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4061)
inline double TGDraft::_IConnectorTableAuto::GetPageGap ( ) {
    double _result = 0;
    HRESULT _hr = get_PageGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4062)
inline void TGDraft::_IConnectorTableAuto::PutPageGap ( double PageGap ) {
    HRESULT _hr = put_PageGap(PageGap);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4063)
inline VARIANT_BOOL TGDraft::_IConnectorTableAuto::GetReverseDisplayOrder ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ReverseDisplayOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4064)
inline void TGDraft::_IConnectorTableAuto::PutReverseDisplayOrder ( VARIANT_BOOL ReverseDisplayOrder ) {
    HRESULT _hr = put_ReverseDisplayOrder(ReverseDisplayOrder);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4065)
inline TGDraft::TableRowsPtr TGDraft::_IConnectorTableAuto::GetRows ( ) {
    struct TableRows * _result = 0;
    HRESULT _hr = get_Rows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableRowsPtr(_result, false);
}

#pragma implementation_key(4066)
inline VARIANT_BOOL TGDraft::_IConnectorTableAuto::GetShowColumnHeader ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowColumnHeader(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4067)
inline void TGDraft::_IConnectorTableAuto::PutShowColumnHeader ( VARIANT_BOOL ShowColumnHeader ) {
    HRESULT _hr = put_ShowColumnHeader(ShowColumnHeader);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4068)
inline _bstr_t TGDraft::_IConnectorTableAuto::GetTableStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TableStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4069)
inline void TGDraft::_IConnectorTableAuto::PutTableStyle ( _bstr_t TableStyle ) {
    HRESULT _hr = put_TableStyle(TableStyle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4070)
inline TGDraft::TableTitlesPtr TGDraft::_IConnectorTableAuto::GetTitles ( ) {
    struct TableTitles * _result = 0;
    HRESULT _hr = get_Titles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableTitlesPtr(_result, false);
}

#pragma implementation_key(4071)
inline enum TGDraft::TableAnchorPoint TGDraft::_IConnectorTableAuto::GetAnchorPoint ( ) {
    enum TableAnchorPoint _result;
    HRESULT _hr = get_AnchorPoint(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4072)
inline void TGDraft::_IConnectorTableAuto::PutAnchorPoint ( enum TableAnchorPoint AnchorPoint ) {
    HRESULT _hr = put_AnchorPoint(AnchorPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4073)
inline TGDraft::TablePagesPtr TGDraft::_IConnectorTableAuto::GetPages ( ) {
    struct TablePages * _result = 0;
    HRESULT _hr = get_Pages(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TablePagesPtr(_result, false);
}

#pragma implementation_key(4074)
inline double TGDraft::_IConnectorTableAuto::GetHeaderFixedRowHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_HeaderFixedRowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4075)
inline void TGDraft::_IConnectorTableAuto::PutHeaderFixedRowHeight ( double HeaderFixedRowHeight ) {
    HRESULT _hr = put_HeaderFixedRowHeight(HeaderFixedRowHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4076)
inline double TGDraft::_IConnectorTableAuto::GetDataFixedRowHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_DataFixedRowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4077)
inline void TGDraft::_IConnectorTableAuto::PutDataFixedRowHeight ( double DataFixedRowHeight ) {
    HRESULT _hr = put_DataFixedRowHeight(DataFixedRowHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4078)
inline double TGDraft::_IConnectorTableAuto::GetMaximumHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4079)
inline void TGDraft::_IConnectorTableAuto::PutMaximumHeight ( double MaximumHeight ) {
    HRESULT _hr = put_MaximumHeight(MaximumHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4080)
inline long TGDraft::_IConnectorTableAuto::GetNumberOfHeaderRows ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfHeaderRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4081)
inline void TGDraft::_IConnectorTableAuto::PutNumberOfHeaderRows ( long NumberOfHeaderRows ) {
    HRESULT _hr = put_NumberOfHeaderRows(NumberOfHeaderRows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4082)
inline long TGDraft::_IConnectorTableAuto::GetMaximumRowsFirstPage ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumRowsFirstPage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4083)
inline void TGDraft::_IConnectorTableAuto::PutMaximumRowsFirstPage ( long MaximumRowsFirstPage ) {
    HRESULT _hr = put_MaximumRowsFirstPage(MaximumRowsFirstPage);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4084)
inline long TGDraft::_IConnectorTableAuto::GetMaximumRowsAdditionalPages ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumRowsAdditionalPages(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4085)
inline void TGDraft::_IConnectorTableAuto::PutMaximumRowsAdditionalPages ( long MaximumRowsAdditionalPages ) {
    HRESULT _hr = put_MaximumRowsAdditionalPages(MaximumRowsAdditionalPages);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4086)
inline double TGDraft::_IConnectorTableAuto::GetMaximumHeightFirstPage ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumHeightFirstPage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4087)
inline void TGDraft::_IConnectorTableAuto::PutMaximumHeightFirstPage ( double MaximumHeightFirstPage ) {
    HRESULT _hr = put_MaximumHeightFirstPage(MaximumHeightFirstPage);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4088)
inline double TGDraft::_IConnectorTableAuto::GetMaximumHeightAdditionalPages ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumHeightAdditionalPages(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4089)
inline void TGDraft::_IConnectorTableAuto::PutMaximumHeightAdditionalPages ( double MaximumHeightAdditionalPages ) {
    HRESULT _hr = put_MaximumHeightAdditionalPages(MaximumHeightAdditionalPages);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4090)
inline VARIANT_BOOL TGDraft::_IConnectorTableAuto::GetCreateNewSheetsForTable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CreateNewSheetsForTable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4091)
inline void TGDraft::_IConnectorTableAuto::PutCreateNewSheetsForTable ( VARIANT_BOOL CreateNewSheetsForTable ) {
    HRESULT _hr = put_CreateNewSheetsForTable(CreateNewSheetsForTable);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4092)
inline _bstr_t TGDraft::_IConnectorTableAuto::GetFirstSheetBackgroundName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FirstSheetBackgroundName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4093)
inline void TGDraft::_IConnectorTableAuto::PutFirstSheetBackgroundName ( _bstr_t FirstSheetBackgroundName ) {
    HRESULT _hr = put_FirstSheetBackgroundName(FirstSheetBackgroundName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4094)
inline _bstr_t TGDraft::_IConnectorTableAuto::GetAdditionalSheetsBackgroundName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AdditionalSheetsBackgroundName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4095)
inline void TGDraft::_IConnectorTableAuto::PutAdditionalSheetsBackgroundName ( _bstr_t AdditionalSheetsBackgroundName ) {
    HRESULT _hr = put_AdditionalSheetsBackgroundName(AdditionalSheetsBackgroundName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4096)
inline VARIANT_BOOL TGDraft::_IConnectorTableAuto::GetShowSheetBackground ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowSheetBackground(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4097)
inline void TGDraft::_IConnectorTableAuto::PutShowSheetBackground ( VARIANT_BOOL ShowSheetBackground ) {
    HRESULT _hr = put_ShowSheetBackground(ShowSheetBackground);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4098)
inline VARIANT_BOOL TGDraft::_IConnectorTableAuto::GetMaintainSheetsWithTableSize ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MaintainSheetsWithTableSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4099)
inline void TGDraft::_IConnectorTableAuto::PutMaintainSheetsWithTableSize ( VARIANT_BOOL MaintainSheetsWithTableSize ) {
    HRESULT _hr = put_MaintainSheetsWithTableSize(MaintainSheetsWithTableSize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4100)
inline VARIANT_BOOL TGDraft::_IConnectorTableAuto::GetEnableGroups ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_EnableGroups(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4101)
inline void TGDraft::_IConnectorTableAuto::PutEnableGroups ( VARIANT_BOOL EnableGroups ) {
    HRESULT _hr = put_EnableGroups(EnableGroups);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4102)
inline TGDraft::TableGroupsPtr TGDraft::_IConnectorTableAuto::GetGroups ( ) {
    struct TableGroups * _result = 0;
    HRESULT _hr = get_Groups(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableGroupsPtr(_result, false);
}

#pragma implementation_key(4103)
inline VARIANT_BOOL TGDraft::_IConnectorTableAuto::GetWrapDataCellsToNewRow ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WrapDataCellsToNewRow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4104)
inline void TGDraft::_IConnectorTableAuto::PutWrapDataCellsToNewRow ( VARIANT_BOOL WrapDataCellsToNewRow ) {
    HRESULT _hr = put_WrapDataCellsToNewRow(WrapDataCellsToNewRow);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4105)
inline VARIANT_BOOL TGDraft::_IConnectorTableAuto::GetFillEndOfTableWithBlankRows ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_FillEndOfTableWithBlankRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4106)
inline void TGDraft::_IConnectorTableAuto::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL FillEndOfTableWithBlankRows ) {
    HRESULT _hr = put_FillEndOfTableWithBlankRows(FillEndOfTableWithBlankRows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4107)
inline long TGDraft::_IConnectorTableAuto::GetGroupByColumn ( ) {
    long _result = 0;
    HRESULT _hr = get_GroupByColumn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4108)
inline void TGDraft::_IConnectorTableAuto::PutGroupByColumn ( long ColumnIndex ) {
    HRESULT _hr = put_GroupByColumn(ColumnIndex);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4109)
inline double TGDraft::_IConnectorTableAuto::GetTitleFixedRowHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_TitleFixedRowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4110)
inline void TGDraft::_IConnectorTableAuto::PutTitleFixedRowHeight ( double TitleFixedRowHeight ) {
    HRESULT _hr = put_TitleFixedRowHeight(TitleFixedRowHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4111)
inline double TGDraft::_IConnectorTableAuto::GetMarginHorizontal ( ) {
    double _result = 0;
    HRESULT _hr = get_MarginHorizontal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4112)
inline void TGDraft::_IConnectorTableAuto::PutMarginHorizontal ( double MarginHorizontal ) {
    HRESULT _hr = put_MarginHorizontal(MarginHorizontal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4113)
inline double TGDraft::_IConnectorTableAuto::GetMarginVertical ( ) {
    double _result = 0;
    HRESULT _hr = get_MarginVertical(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4114)
inline void TGDraft::_IConnectorTableAuto::PutMarginVertical ( double MarginVertical ) {
    HRESULT _hr = put_MarginVertical(MarginVertical);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4115)
inline _bstr_t TGDraft::_IConnectorTableAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// dispinterface BlockTables wrapper method implementations
//

#pragma implementation_key(4116)
inline TGFramework::ApplicationPtr TGDraft::BlockTables::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4117)
inline long TGDraft::BlockTables::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4118)
inline TGDraft::BlockTablePtr TGDraft::BlockTables::Item ( const _variant_t & Index ) {
    struct BlockTable * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return BlockTablePtr(_result, false);
}

#pragma implementation_key(4119)
inline TGDraft::BlockTablePtr TGDraft::BlockTables::AddByActiveSheet ( _bstr_t SavedSettings, long AutoBalloon ) {
    struct BlockTable * _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0003", (BSTR)SavedSettings, AutoBalloon);
    return BlockTablePtr(_result, false);
}

#pragma implementation_key(4120)
inline TGDraft::BlockTablePtr TGDraft::BlockTables::AddByDrawingView ( struct DrawingView * DrawingView, _bstr_t SavedSettings, long AutoBalloon, long BlocksInView ) {
    struct BlockTable * _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0008\x0003\x0003", DrawingView, (BSTR)SavedSettings, AutoBalloon, BlocksInView);
    return BlockTablePtr(_result, false);
}

#pragma implementation_key(4121)
inline TGDraft::BlockTablePtr TGDraft::BlockTables::AddByUserSelection ( _bstr_t SavedSettings, long AutoBalloon ) {
    struct BlockTable * _result = 0;
    _com_dispatch_method(this, 0x6a, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0003", (BSTR)SavedSettings, AutoBalloon);
    return BlockTablePtr(_result, false);
}

#pragma implementation_key(4122)
inline IDispatchPtr TGDraft::BlockTables::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// dispinterface BlockTable wrapper method implementations
//

#pragma implementation_key(4123)
inline TGFramework::ApplicationPtr TGDraft::BlockTable::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4124)
inline HRESULT TGDraft::BlockTable::Update ( ) {
    return _com_dispatch_method(this, 0x66, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4125)
inline HRESULT TGDraft::BlockTable::CopyToClipboard ( ) {
    return _com_dispatch_method(this, 0x67, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4126)
inline HRESULT TGDraft::BlockTable::SourceBlocks ( SAFEARRAY * * ppBlocks ) {
    return _com_dispatch_method(this, 0x68, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009", ppBlocks);
}

#pragma implementation_key(4127)
inline HRESULT TGDraft::BlockTable::Delete ( ) {
    return _com_dispatch_method(this, 0x6a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4128)
inline void TGDraft::BlockTable::PutSavedSettings ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4129)
inline IDispatchPtr TGDraft::BlockTable::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4130)
inline HRESULT TGDraft::BlockTable::SetOrigin ( double x, double y ) {
    return _com_dispatch_method(this, 0x6d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(4131)
inline HRESULT TGDraft::BlockTable::GetOrigin ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x6c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(4132)
inline HRESULT TGDraft::BlockTable::GetListOfSavedSettings ( long * NumSavedSettings, SAFEARRAY * * ListOfSavedSettings ) {
    return _com_dispatch_method(this, 0x6e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6008", NumSavedSettings, ListOfSavedSettings);
}

#pragma implementation_key(4133)
inline VARIANT_BOOL TGDraft::BlockTable::GetIsUpToDate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4134)
inline HRESULT TGDraft::BlockTable::ConvertToTable ( ) {
    return _com_dispatch_method(this, 0x80, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4135)
inline TGDraft::TableCellPtr TGDraft::BlockTable::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex ) {
    struct TableCell * _result = 0;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000c\x000c", &RowIndex, &ColumnIndex);
    return TableCellPtr(_result, false);
}

#pragma implementation_key(4136)
inline enum TGDraft::TitlePosition TGDraft::BlockTable::GetColumnHeaderPosition ( ) {
    enum TitlePosition _result;
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4137)
inline void TGDraft::BlockTable::PutColumnHeaderPosition ( enum TitlePosition _arg1 ) {
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4138)
inline TGDraft::TableColumnsPtr TGDraft::BlockTable::GetColumns ( ) {
    struct TableColumns * _result = 0;
    _com_dispatch_method(this, 0x73, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableColumnsPtr(_result, false);
}

#pragma implementation_key(4139)
inline double TGDraft::BlockTable::GetMargin ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4140)
inline void TGDraft::BlockTable::PutMargin ( double _arg1 ) {
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4141)
inline long TGDraft::BlockTable::GetMaximumRows ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4142)
inline void TGDraft::BlockTable::PutMaximumRows ( long _arg1 ) {
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4143)
inline double TGDraft::BlockTable::GetPageGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4144)
inline void TGDraft::BlockTable::PutPageGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4145)
inline VARIANT_BOOL TGDraft::BlockTable::GetReverseDisplayOrder ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4146)
inline void TGDraft::BlockTable::PutReverseDisplayOrder ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x7b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4147)
inline TGDraft::TableRowsPtr TGDraft::BlockTable::GetRows ( ) {
    struct TableRows * _result = 0;
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableRowsPtr(_result, false);
}

#pragma implementation_key(4148)
inline VARIANT_BOOL TGDraft::BlockTable::GetShowColumnHeader ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4149)
inline void TGDraft::BlockTable::PutShowColumnHeader ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x7d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4150)
inline _bstr_t TGDraft::BlockTable::GetTableStyle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4151)
inline void TGDraft::BlockTable::PutTableStyle ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x7e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4152)
inline TGDraft::TableTitlesPtr TGDraft::BlockTable::GetTitles ( ) {
    struct TableTitles * _result = 0;
    _com_dispatch_method(this, 0x7f, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableTitlesPtr(_result, false);
}

#pragma implementation_key(4153)
inline enum TGDraft::TableAnchorPoint TGDraft::BlockTable::GetAnchorPoint ( ) {
    enum TableAnchorPoint _result;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4154)
inline void TGDraft::BlockTable::PutAnchorPoint ( enum TableAnchorPoint _arg1 ) {
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4155)
inline TGDraft::TablePagesPtr TGDraft::BlockTable::GetPages ( ) {
    struct TablePages * _result = 0;
    _com_dispatch_method(this, 0x7a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TablePagesPtr(_result, false);
}

#pragma implementation_key(4156)
inline double TGDraft::BlockTable::GetHeaderFixedRowHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x75, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4157)
inline void TGDraft::BlockTable::PutHeaderFixedRowHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x75, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4158)
inline double TGDraft::BlockTable::GetDataFixedRowHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x74, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4159)
inline void TGDraft::BlockTable::PutDataFixedRowHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x74, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4160)
inline double TGDraft::BlockTable::GetMaximumHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4161)
inline void TGDraft::BlockTable::PutMaximumHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4162)
inline long TGDraft::BlockTable::GetNumberOfHeaderRows ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4163)
inline void TGDraft::BlockTable::PutNumberOfHeaderRows ( long _arg1 ) {
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4164)
inline long TGDraft::BlockTable::GetMaximumRowsFirstPage ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x82, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4165)
inline void TGDraft::BlockTable::PutMaximumRowsFirstPage ( long _arg1 ) {
    _com_dispatch_method(this, 0x82, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4166)
inline long TGDraft::BlockTable::GetMaximumRowsAdditionalPages ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x83, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4167)
inline void TGDraft::BlockTable::PutMaximumRowsAdditionalPages ( long _arg1 ) {
    _com_dispatch_method(this, 0x83, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4168)
inline double TGDraft::BlockTable::GetMaximumHeightFirstPage ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x84, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4169)
inline void TGDraft::BlockTable::PutMaximumHeightFirstPage ( double _arg1 ) {
    _com_dispatch_method(this, 0x84, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4170)
inline double TGDraft::BlockTable::GetMaximumHeightAdditionalPages ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x85, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4171)
inline void TGDraft::BlockTable::PutMaximumHeightAdditionalPages ( double _arg1 ) {
    _com_dispatch_method(this, 0x85, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4172)
inline VARIANT_BOOL TGDraft::BlockTable::GetCreateNewSheetsForTable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x86, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4173)
inline void TGDraft::BlockTable::PutCreateNewSheetsForTable ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x86, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4174)
inline _bstr_t TGDraft::BlockTable::GetFirstSheetBackgroundName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x87, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4175)
inline void TGDraft::BlockTable::PutFirstSheetBackgroundName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x87, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4176)
inline _bstr_t TGDraft::BlockTable::GetAdditionalSheetsBackgroundName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x88, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4177)
inline void TGDraft::BlockTable::PutAdditionalSheetsBackgroundName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x88, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4178)
inline VARIANT_BOOL TGDraft::BlockTable::GetShowSheetBackground ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x89, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4179)
inline void TGDraft::BlockTable::PutShowSheetBackground ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x89, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4180)
inline VARIANT_BOOL TGDraft::BlockTable::GetMaintainSheetsWithTableSize ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4181)
inline void TGDraft::BlockTable::PutMaintainSheetsWithTableSize ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4182)
inline VARIANT_BOOL TGDraft::BlockTable::GetEnableGroups ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4183)
inline void TGDraft::BlockTable::PutEnableGroups ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4184)
inline TGDraft::TableGroupsPtr TGDraft::BlockTable::GetGroups ( ) {
    struct TableGroups * _result = 0;
    _com_dispatch_method(this, 0x8c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableGroupsPtr(_result, false);
}

#pragma implementation_key(4185)
inline VARIANT_BOOL TGDraft::BlockTable::GetWrapDataCellsToNewRow ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4186)
inline void TGDraft::BlockTable::PutWrapDataCellsToNewRow ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4187)
inline VARIANT_BOOL TGDraft::BlockTable::GetFillEndOfTableWithBlankRows ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4188)
inline void TGDraft::BlockTable::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4189)
inline long TGDraft::BlockTable::GetGroupByColumn ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4190)
inline void TGDraft::BlockTable::PutGroupByColumn ( long _arg1 ) {
    _com_dispatch_method(this, 0x8f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4191)
inline double TGDraft::BlockTable::GetTitleFixedRowHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x90, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4192)
inline void TGDraft::BlockTable::PutTitleFixedRowHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x90, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4193)
inline long TGDraft::BlockTable::GetItemNumberStart ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x91, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4194)
inline void TGDraft::BlockTable::PutItemNumberStart ( long _arg1 ) {
    _com_dispatch_method(this, 0x91, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4195)
inline long TGDraft::BlockTable::GetItemNumberIncrement ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x92, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4196)
inline void TGDraft::BlockTable::PutItemNumberIncrement ( long _arg1 ) {
    _com_dispatch_method(this, 0x92, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4197)
inline VARIANT_BOOL TGDraft::BlockTable::GetMarkUnballoonedItems ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x93, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4198)
inline void TGDraft::BlockTable::PutMarkUnballoonedItems ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x93, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4199)
inline _bstr_t TGDraft::BlockTable::GetMarkUnballoonedItemsString ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x94, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4200)
inline void TGDraft::BlockTable::PutMarkUnballoonedItemsString ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x94, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4201)
inline VARIANT_BOOL TGDraft::BlockTable::GetRenumberAccordingToSortOrder ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x95, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4202)
inline void TGDraft::BlockTable::PutRenumberAccordingToSortOrder ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x95, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4203)
inline VARIANT_BOOL TGDraft::BlockTable::GetConvertDeletedBlocksIntoUserDefinedRows ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x96, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4204)
inline void TGDraft::BlockTable::PutConvertDeletedBlocksIntoUserDefinedRows ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x96, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4205)
inline enum TGDraft::BlockTableType TGDraft::BlockTable::GetListType ( ) {
    enum BlockTableType _result;
    _com_dispatch_method(this, 0x97, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4206)
inline void TGDraft::BlockTable::PutListType ( enum BlockTableType _arg1 ) {
    _com_dispatch_method(this, 0x97, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4207)
inline VARIANT_BOOL TGDraft::BlockTable::GetListBlockOnSeparateRow ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x98, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4208)
inline void TGDraft::BlockTable::PutListBlockOnSeparateRow ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x98, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4209)
inline VARIANT_BOOL TGDraft::BlockTable::GetUseSameItemNumberForBlockViews ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x99, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4210)
inline void TGDraft::BlockTable::PutUseSameItemNumberForBlockViews ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x99, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4211)
inline VARIANT_BOOL TGDraft::BlockTable::GetListByBlockOccurrence ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x9a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4212)
inline void TGDraft::BlockTable::PutListByBlockOccurrence ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x9a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4213)
inline VARIANT_BOOL TGDraft::BlockTable::GetListBlockOrBlockViewOnSeparateRow ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x9b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4214)
inline void TGDraft::BlockTable::PutListBlockOrBlockViewOnSeparateRow ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x9b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4215)
inline VARIANT_BOOL TGDraft::BlockTable::GetListNestedBlocks ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x9c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4216)
inline void TGDraft::BlockTable::PutListNestedBlocks ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x9c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4217)
inline VARIANT_BOOL TGDraft::BlockTable::GetListAllNestedBlocksSeparately ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x9d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4218)
inline void TGDraft::BlockTable::PutListAllNestedBlocksSeparately ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x9d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4219)
inline VARIANT_BOOL TGDraft::BlockTable::GetListWithNestedStructure ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x9e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4220)
inline void TGDraft::BlockTable::PutListWithNestedStructure ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x9e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4221)
inline VARIANT_BOOL TGDraft::BlockTable::GetUseLevelBasedItemNumbers ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x9f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4222)
inline void TGDraft::BlockTable::PutUseLevelBasedItemNumbers ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x9f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4223)
inline double TGDraft::BlockTable::GetMarginHorizontal ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xa0, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4224)
inline void TGDraft::BlockTable::PutMarginHorizontal ( double _arg1 ) {
    _com_dispatch_method(this, 0xa0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4225)
inline double TGDraft::BlockTable::GetMarginVertical ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xa1, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4226)
inline void TGDraft::BlockTable::PutMarginVertical ( double _arg1 ) {
    _com_dispatch_method(this, 0xa1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4227)
inline _bstr_t TGDraft::BlockTable::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xa2, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

//
// interface _IBlockTablesAuto wrapper method implementations
//

#pragma implementation_key(4228)
inline TGFramework::ApplicationPtr TGDraft::_IBlockTablesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4229)
inline long TGDraft::_IBlockTablesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4230)
inline TGDraft::BlockTablePtr TGDraft::_IBlockTablesAuto::Item ( const _variant_t & Index ) {
    struct BlockTable * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BlockTablePtr(_result, false);
}

#pragma implementation_key(4231)
inline IUnknownPtr TGDraft::_IBlockTablesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4232)
inline TGDraft::BlockTablePtr TGDraft::_IBlockTablesAuto::AddByActiveSheet ( _bstr_t SavedSettings, long AutoBalloon ) {
    struct BlockTable * _result = 0;
    HRESULT _hr = raw_AddByActiveSheet(SavedSettings, AutoBalloon, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BlockTablePtr(_result, false);
}

#pragma implementation_key(4233)
inline TGDraft::BlockTablePtr TGDraft::_IBlockTablesAuto::AddByDrawingView ( struct DrawingView * DrawingView, _bstr_t SavedSettings, long AutoBalloon, long BlocksInView ) {
    struct BlockTable * _result = 0;
    HRESULT _hr = raw_AddByDrawingView(DrawingView, SavedSettings, AutoBalloon, BlocksInView, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BlockTablePtr(_result, false);
}

#pragma implementation_key(4234)
inline TGDraft::BlockTablePtr TGDraft::_IBlockTablesAuto::AddByUserSelection ( _bstr_t SavedSettings, long AutoBalloon ) {
    struct BlockTable * _result = 0;
    HRESULT _hr = raw_AddByUserSelection(SavedSettings, AutoBalloon, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BlockTablePtr(_result, false);
}

#pragma implementation_key(4235)
inline IDispatchPtr TGDraft::_IBlockTablesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// interface _IBlockTableAuto wrapper method implementations
//

#pragma implementation_key(4236)
inline TGFramework::ApplicationPtr TGDraft::_IBlockTableAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4237)
inline HRESULT TGDraft::_IBlockTableAuto::Update ( ) {
    HRESULT _hr = raw_Update();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4238)
inline HRESULT TGDraft::_IBlockTableAuto::CopyToClipboard ( ) {
    HRESULT _hr = raw_CopyToClipboard();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4239)
inline HRESULT TGDraft::_IBlockTableAuto::SourceBlocks ( SAFEARRAY * * ppBlocks ) {
    HRESULT _hr = raw_SourceBlocks(ppBlocks);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4240)
inline HRESULT TGDraft::_IBlockTableAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4241)
inline void TGDraft::_IBlockTableAuto::PutSavedSettings ( _bstr_t _arg1 ) {
    HRESULT _hr = put_SavedSettings(_arg1);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4242)
inline IDispatchPtr TGDraft::_IBlockTableAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4243)
inline HRESULT TGDraft::_IBlockTableAuto::SetOrigin ( double x, double y ) {
    HRESULT _hr = raw_SetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4244)
inline HRESULT TGDraft::_IBlockTableAuto::GetOrigin ( double * x, double * y ) {
    HRESULT _hr = raw_GetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4245)
inline HRESULT TGDraft::_IBlockTableAuto::GetListOfSavedSettings ( long * NumSavedSettings, SAFEARRAY * * ListOfSavedSettings ) {
    HRESULT _hr = raw_GetListOfSavedSettings(NumSavedSettings, ListOfSavedSettings);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4246)
inline VARIANT_BOOL TGDraft::_IBlockTableAuto::GetIsUpToDate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsUpToDate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4247)
inline HRESULT TGDraft::_IBlockTableAuto::ConvertToTable ( ) {
    HRESULT _hr = raw_ConvertToTable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4248)
inline TGDraft::TableCellPtr TGDraft::_IBlockTableAuto::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex ) {
    struct TableCell * _result = 0;
    HRESULT _hr = get_Cell(RowIndex, ColumnIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableCellPtr(_result, false);
}

#pragma implementation_key(4249)
inline enum TGDraft::TitlePosition TGDraft::_IBlockTableAuto::GetColumnHeaderPosition ( ) {
    enum TitlePosition _result;
    HRESULT _hr = get_ColumnHeaderPosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4250)
inline void TGDraft::_IBlockTableAuto::PutColumnHeaderPosition ( enum TitlePosition ColumnHeaderPosition ) {
    HRESULT _hr = put_ColumnHeaderPosition(ColumnHeaderPosition);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4251)
inline TGDraft::TableColumnsPtr TGDraft::_IBlockTableAuto::GetColumns ( ) {
    struct TableColumns * _result = 0;
    HRESULT _hr = get_Columns(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableColumnsPtr(_result, false);
}

#pragma implementation_key(4252)
inline double TGDraft::_IBlockTableAuto::GetMargin ( ) {
    double _result = 0;
    HRESULT _hr = get_Margin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4253)
inline void TGDraft::_IBlockTableAuto::PutMargin ( double Margin ) {
    HRESULT _hr = put_Margin(Margin);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4254)
inline long TGDraft::_IBlockTableAuto::GetMaximumRows ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4255)
inline void TGDraft::_IBlockTableAuto::PutMaximumRows ( long MaximumRows ) {
    HRESULT _hr = put_MaximumRows(MaximumRows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4256)
inline double TGDraft::_IBlockTableAuto::GetPageGap ( ) {
    double _result = 0;
    HRESULT _hr = get_PageGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4257)
inline void TGDraft::_IBlockTableAuto::PutPageGap ( double PageGap ) {
    HRESULT _hr = put_PageGap(PageGap);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4258)
inline VARIANT_BOOL TGDraft::_IBlockTableAuto::GetReverseDisplayOrder ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ReverseDisplayOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4259)
inline void TGDraft::_IBlockTableAuto::PutReverseDisplayOrder ( VARIANT_BOOL ReverseDisplayOrder ) {
    HRESULT _hr = put_ReverseDisplayOrder(ReverseDisplayOrder);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4260)
inline TGDraft::TableRowsPtr TGDraft::_IBlockTableAuto::GetRows ( ) {
    struct TableRows * _result = 0;
    HRESULT _hr = get_Rows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableRowsPtr(_result, false);
}

#pragma implementation_key(4261)
inline VARIANT_BOOL TGDraft::_IBlockTableAuto::GetShowColumnHeader ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowColumnHeader(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4262)
inline void TGDraft::_IBlockTableAuto::PutShowColumnHeader ( VARIANT_BOOL ShowColumnHeader ) {
    HRESULT _hr = put_ShowColumnHeader(ShowColumnHeader);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4263)
inline _bstr_t TGDraft::_IBlockTableAuto::GetTableStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TableStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4264)
inline void TGDraft::_IBlockTableAuto::PutTableStyle ( _bstr_t TableStyle ) {
    HRESULT _hr = put_TableStyle(TableStyle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4265)
inline TGDraft::TableTitlesPtr TGDraft::_IBlockTableAuto::GetTitles ( ) {
    struct TableTitles * _result = 0;
    HRESULT _hr = get_Titles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableTitlesPtr(_result, false);
}

#pragma implementation_key(4266)
inline enum TGDraft::TableAnchorPoint TGDraft::_IBlockTableAuto::GetAnchorPoint ( ) {
    enum TableAnchorPoint _result;
    HRESULT _hr = get_AnchorPoint(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4267)
inline void TGDraft::_IBlockTableAuto::PutAnchorPoint ( enum TableAnchorPoint AnchorPoint ) {
    HRESULT _hr = put_AnchorPoint(AnchorPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4268)
inline TGDraft::TablePagesPtr TGDraft::_IBlockTableAuto::GetPages ( ) {
    struct TablePages * _result = 0;
    HRESULT _hr = get_Pages(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TablePagesPtr(_result, false);
}

#pragma implementation_key(4269)
inline double TGDraft::_IBlockTableAuto::GetHeaderFixedRowHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_HeaderFixedRowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4270)
inline void TGDraft::_IBlockTableAuto::PutHeaderFixedRowHeight ( double HeaderFixedRowHeight ) {
    HRESULT _hr = put_HeaderFixedRowHeight(HeaderFixedRowHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4271)
inline double TGDraft::_IBlockTableAuto::GetDataFixedRowHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_DataFixedRowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4272)
inline void TGDraft::_IBlockTableAuto::PutDataFixedRowHeight ( double DataFixedRowHeight ) {
    HRESULT _hr = put_DataFixedRowHeight(DataFixedRowHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4273)
inline double TGDraft::_IBlockTableAuto::GetMaximumHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4274)
inline void TGDraft::_IBlockTableAuto::PutMaximumHeight ( double MaximumHeight ) {
    HRESULT _hr = put_MaximumHeight(MaximumHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4275)
inline long TGDraft::_IBlockTableAuto::GetNumberOfHeaderRows ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfHeaderRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4276)
inline void TGDraft::_IBlockTableAuto::PutNumberOfHeaderRows ( long NumberOfHeaderRows ) {
    HRESULT _hr = put_NumberOfHeaderRows(NumberOfHeaderRows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4277)
inline long TGDraft::_IBlockTableAuto::GetMaximumRowsFirstPage ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumRowsFirstPage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4278)
inline void TGDraft::_IBlockTableAuto::PutMaximumRowsFirstPage ( long MaximumRowsFirstPage ) {
    HRESULT _hr = put_MaximumRowsFirstPage(MaximumRowsFirstPage);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4279)
inline long TGDraft::_IBlockTableAuto::GetMaximumRowsAdditionalPages ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumRowsAdditionalPages(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4280)
inline void TGDraft::_IBlockTableAuto::PutMaximumRowsAdditionalPages ( long MaximumRowsAdditionalPages ) {
    HRESULT _hr = put_MaximumRowsAdditionalPages(MaximumRowsAdditionalPages);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4281)
inline double TGDraft::_IBlockTableAuto::GetMaximumHeightFirstPage ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumHeightFirstPage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4282)
inline void TGDraft::_IBlockTableAuto::PutMaximumHeightFirstPage ( double MaximumHeightFirstPage ) {
    HRESULT _hr = put_MaximumHeightFirstPage(MaximumHeightFirstPage);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4283)
inline double TGDraft::_IBlockTableAuto::GetMaximumHeightAdditionalPages ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumHeightAdditionalPages(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4284)
inline void TGDraft::_IBlockTableAuto::PutMaximumHeightAdditionalPages ( double MaximumHeightAdditionalPages ) {
    HRESULT _hr = put_MaximumHeightAdditionalPages(MaximumHeightAdditionalPages);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4285)
inline VARIANT_BOOL TGDraft::_IBlockTableAuto::GetCreateNewSheetsForTable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CreateNewSheetsForTable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4286)
inline void TGDraft::_IBlockTableAuto::PutCreateNewSheetsForTable ( VARIANT_BOOL CreateNewSheetsForTable ) {
    HRESULT _hr = put_CreateNewSheetsForTable(CreateNewSheetsForTable);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4287)
inline _bstr_t TGDraft::_IBlockTableAuto::GetFirstSheetBackgroundName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FirstSheetBackgroundName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4288)
inline void TGDraft::_IBlockTableAuto::PutFirstSheetBackgroundName ( _bstr_t FirstSheetBackgroundName ) {
    HRESULT _hr = put_FirstSheetBackgroundName(FirstSheetBackgroundName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4289)
inline _bstr_t TGDraft::_IBlockTableAuto::GetAdditionalSheetsBackgroundName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AdditionalSheetsBackgroundName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4290)
inline void TGDraft::_IBlockTableAuto::PutAdditionalSheetsBackgroundName ( _bstr_t AdditionalSheetsBackgroundName ) {
    HRESULT _hr = put_AdditionalSheetsBackgroundName(AdditionalSheetsBackgroundName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4291)
inline VARIANT_BOOL TGDraft::_IBlockTableAuto::GetShowSheetBackground ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowSheetBackground(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4292)
inline void TGDraft::_IBlockTableAuto::PutShowSheetBackground ( VARIANT_BOOL ShowSheetBackground ) {
    HRESULT _hr = put_ShowSheetBackground(ShowSheetBackground);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4293)
inline VARIANT_BOOL TGDraft::_IBlockTableAuto::GetMaintainSheetsWithTableSize ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MaintainSheetsWithTableSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4294)
inline void TGDraft::_IBlockTableAuto::PutMaintainSheetsWithTableSize ( VARIANT_BOOL MaintainSheetsWithTableSize ) {
    HRESULT _hr = put_MaintainSheetsWithTableSize(MaintainSheetsWithTableSize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4295)
inline VARIANT_BOOL TGDraft::_IBlockTableAuto::GetEnableGroups ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_EnableGroups(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4296)
inline void TGDraft::_IBlockTableAuto::PutEnableGroups ( VARIANT_BOOL EnableGroups ) {
    HRESULT _hr = put_EnableGroups(EnableGroups);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4297)
inline TGDraft::TableGroupsPtr TGDraft::_IBlockTableAuto::GetGroups ( ) {
    struct TableGroups * _result = 0;
    HRESULT _hr = get_Groups(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableGroupsPtr(_result, false);
}

#pragma implementation_key(4298)
inline VARIANT_BOOL TGDraft::_IBlockTableAuto::GetWrapDataCellsToNewRow ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WrapDataCellsToNewRow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4299)
inline void TGDraft::_IBlockTableAuto::PutWrapDataCellsToNewRow ( VARIANT_BOOL WrapDataCellsToNewRow ) {
    HRESULT _hr = put_WrapDataCellsToNewRow(WrapDataCellsToNewRow);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4300)
inline VARIANT_BOOL TGDraft::_IBlockTableAuto::GetFillEndOfTableWithBlankRows ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_FillEndOfTableWithBlankRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4301)
inline void TGDraft::_IBlockTableAuto::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL FillEndOfTableWithBlankRows ) {
    HRESULT _hr = put_FillEndOfTableWithBlankRows(FillEndOfTableWithBlankRows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4302)
inline long TGDraft::_IBlockTableAuto::GetGroupByColumn ( ) {
    long _result = 0;
    HRESULT _hr = get_GroupByColumn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4303)
inline void TGDraft::_IBlockTableAuto::PutGroupByColumn ( long ColumnIndex ) {
    HRESULT _hr = put_GroupByColumn(ColumnIndex);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4304)
inline double TGDraft::_IBlockTableAuto::GetTitleFixedRowHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_TitleFixedRowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4305)
inline void TGDraft::_IBlockTableAuto::PutTitleFixedRowHeight ( double TitleFixedRowHeight ) {
    HRESULT _hr = put_TitleFixedRowHeight(TitleFixedRowHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4306)
inline long TGDraft::_IBlockTableAuto::GetItemNumberStart ( ) {
    long _result = 0;
    HRESULT _hr = get_ItemNumberStart(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4307)
inline void TGDraft::_IBlockTableAuto::PutItemNumberStart ( long ItemNumberStart ) {
    HRESULT _hr = put_ItemNumberStart(ItemNumberStart);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4308)
inline long TGDraft::_IBlockTableAuto::GetItemNumberIncrement ( ) {
    long _result = 0;
    HRESULT _hr = get_ItemNumberIncrement(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4309)
inline void TGDraft::_IBlockTableAuto::PutItemNumberIncrement ( long ItemNumberIncrement ) {
    HRESULT _hr = put_ItemNumberIncrement(ItemNumberIncrement);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4310)
inline VARIANT_BOOL TGDraft::_IBlockTableAuto::GetMarkUnballoonedItems ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MarkUnballoonedItems(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4311)
inline void TGDraft::_IBlockTableAuto::PutMarkUnballoonedItems ( VARIANT_BOOL MarkUnballoonedItems ) {
    HRESULT _hr = put_MarkUnballoonedItems(MarkUnballoonedItems);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4312)
inline _bstr_t TGDraft::_IBlockTableAuto::GetMarkUnballoonedItemsString ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_MarkUnballoonedItemsString(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4313)
inline void TGDraft::_IBlockTableAuto::PutMarkUnballoonedItemsString ( _bstr_t MarkUnballoonedItemsString ) {
    HRESULT _hr = put_MarkUnballoonedItemsString(MarkUnballoonedItemsString);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4314)
inline VARIANT_BOOL TGDraft::_IBlockTableAuto::GetRenumberAccordingToSortOrder ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RenumberAccordingToSortOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4315)
inline void TGDraft::_IBlockTableAuto::PutRenumberAccordingToSortOrder ( VARIANT_BOOL RenumberAccordingToSortOrder ) {
    HRESULT _hr = put_RenumberAccordingToSortOrder(RenumberAccordingToSortOrder);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4316)
inline VARIANT_BOOL TGDraft::_IBlockTableAuto::GetConvertDeletedBlocksIntoUserDefinedRows ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ConvertDeletedBlocksIntoUserDefinedRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4317)
inline void TGDraft::_IBlockTableAuto::PutConvertDeletedBlocksIntoUserDefinedRows ( VARIANT_BOOL ConvertDeletedBlocksIntoUserDefinedRows ) {
    HRESULT _hr = put_ConvertDeletedBlocksIntoUserDefinedRows(ConvertDeletedBlocksIntoUserDefinedRows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4318)
inline enum TGDraft::BlockTableType TGDraft::_IBlockTableAuto::GetListType ( ) {
    enum BlockTableType _result;
    HRESULT _hr = get_ListType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4319)
inline void TGDraft::_IBlockTableAuto::PutListType ( enum BlockTableType ListType ) {
    HRESULT _hr = put_ListType(ListType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4320)
inline VARIANT_BOOL TGDraft::_IBlockTableAuto::GetListBlockOnSeparateRow ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ListBlockOnSeparateRow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4321)
inline void TGDraft::_IBlockTableAuto::PutListBlockOnSeparateRow ( VARIANT_BOOL ListBlockOnSeparateRow ) {
    HRESULT _hr = put_ListBlockOnSeparateRow(ListBlockOnSeparateRow);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4322)
inline VARIANT_BOOL TGDraft::_IBlockTableAuto::GetUseSameItemNumberForBlockViews ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseSameItemNumberForBlockViews(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4323)
inline void TGDraft::_IBlockTableAuto::PutUseSameItemNumberForBlockViews ( VARIANT_BOOL UseSameItemNumberForBlockViews ) {
    HRESULT _hr = put_UseSameItemNumberForBlockViews(UseSameItemNumberForBlockViews);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4324)
inline VARIANT_BOOL TGDraft::_IBlockTableAuto::GetListByBlockOccurrence ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ListByBlockOccurrence(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4325)
inline void TGDraft::_IBlockTableAuto::PutListByBlockOccurrence ( VARIANT_BOOL ListByBlockOccurrence ) {
    HRESULT _hr = put_ListByBlockOccurrence(ListByBlockOccurrence);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4326)
inline VARIANT_BOOL TGDraft::_IBlockTableAuto::GetListBlockOrBlockViewOnSeparateRow ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ListBlockOrBlockViewOnSeparateRow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4327)
inline void TGDraft::_IBlockTableAuto::PutListBlockOrBlockViewOnSeparateRow ( VARIANT_BOOL ListBlockOrBlockViewOnSeparateRow ) {
    HRESULT _hr = put_ListBlockOrBlockViewOnSeparateRow(ListBlockOrBlockViewOnSeparateRow);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4328)
inline VARIANT_BOOL TGDraft::_IBlockTableAuto::GetListNestedBlocks ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ListNestedBlocks(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4329)
inline void TGDraft::_IBlockTableAuto::PutListNestedBlocks ( VARIANT_BOOL ListNestedBlocks ) {
    HRESULT _hr = put_ListNestedBlocks(ListNestedBlocks);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4330)
inline VARIANT_BOOL TGDraft::_IBlockTableAuto::GetListAllNestedBlocksSeparately ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ListAllNestedBlocksSeparately(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4331)
inline void TGDraft::_IBlockTableAuto::PutListAllNestedBlocksSeparately ( VARIANT_BOOL ListAllNestedBlocksSeparately ) {
    HRESULT _hr = put_ListAllNestedBlocksSeparately(ListAllNestedBlocksSeparately);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4332)
inline VARIANT_BOOL TGDraft::_IBlockTableAuto::GetListWithNestedStructure ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ListWithNestedStructure(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4333)
inline void TGDraft::_IBlockTableAuto::PutListWithNestedStructure ( VARIANT_BOOL ListWithNestedStructure ) {
    HRESULT _hr = put_ListWithNestedStructure(ListWithNestedStructure);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4334)
inline VARIANT_BOOL TGDraft::_IBlockTableAuto::GetUseLevelBasedItemNumbers ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseLevelBasedItemNumbers(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4335)
inline void TGDraft::_IBlockTableAuto::PutUseLevelBasedItemNumbers ( VARIANT_BOOL UseLevelBasedItemNumbers ) {
    HRESULT _hr = put_UseLevelBasedItemNumbers(UseLevelBasedItemNumbers);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4336)
inline double TGDraft::_IBlockTableAuto::GetMarginHorizontal ( ) {
    double _result = 0;
    HRESULT _hr = get_MarginHorizontal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4337)
inline void TGDraft::_IBlockTableAuto::PutMarginHorizontal ( double MarginHorizontal ) {
    HRESULT _hr = put_MarginHorizontal(MarginHorizontal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4338)
inline double TGDraft::_IBlockTableAuto::GetMarginVertical ( ) {
    double _result = 0;
    HRESULT _hr = get_MarginVertical(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4339)
inline void TGDraft::_IBlockTableAuto::PutMarginVertical ( double MarginVertical ) {
    HRESULT _hr = put_MarginVertical(MarginVertical);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4340)
inline _bstr_t TGDraft::_IBlockTableAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// dispinterface FOPTables wrapper method implementations
//

#pragma implementation_key(4341)
inline TGFramework::ApplicationPtr TGDraft::FOPTables::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4342)
inline long TGDraft::FOPTables::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4343)
inline TGDraft::FOPTablePtr TGDraft::FOPTables::Item ( const _variant_t & Index ) {
    struct FOPTable * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return FOPTablePtr(_result, false);
}

#pragma implementation_key(4344)
inline TGDraft::FOPTablePtr TGDraft::FOPTables::Add ( struct DrawingView * pDrawingView ) {
    struct FOPTable * _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", pDrawingView);
    return FOPTablePtr(_result, false);
}

#pragma implementation_key(4345)
inline IDispatchPtr TGDraft::FOPTables::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// dispinterface FOPTable wrapper method implementations
//

#pragma implementation_key(4346)
inline TGFramework::ApplicationPtr TGDraft::FOPTable::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4347)
inline HRESULT TGDraft::FOPTable::Update ( ) {
    return _com_dispatch_method(this, 0x66, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4348)
inline TGDraft::ModelLinkPtr TGDraft::FOPTable::GetModelLink ( ) {
    struct ModelLink * _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ModelLinkPtr(_result, false);
}

#pragma implementation_key(4349)
inline HRESULT TGDraft::FOPTable::Delete ( ) {
    return _com_dispatch_method(this, 0x6a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4350)
inline IDispatchPtr TGDraft::FOPTable::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4351)
inline TGDraft::TableCellPtr TGDraft::FOPTable::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex ) {
    struct TableCell * _result = 0;
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000c\x000c", &RowIndex, &ColumnIndex);
    return TableCellPtr(_result, false);
}

#pragma implementation_key(4352)
inline enum TGDraft::TitlePosition TGDraft::FOPTable::GetColumnHeaderPosition ( ) {
    enum TitlePosition _result;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4353)
inline void TGDraft::FOPTable::PutColumnHeaderPosition ( enum TitlePosition _arg1 ) {
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4354)
inline TGDraft::TableColumnsPtr TGDraft::FOPTable::GetColumns ( ) {
    struct TableColumns * _result = 0;
    _com_dispatch_method(this, 0x6e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableColumnsPtr(_result, false);
}

#pragma implementation_key(4355)
inline double TGDraft::FOPTable::GetMarginHorizontal ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xa0, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4356)
inline void TGDraft::FOPTable::PutMarginHorizontal ( double _arg1 ) {
    _com_dispatch_method(this, 0xa0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4357)
inline double TGDraft::FOPTable::GetMarginVertical ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xa1, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4358)
inline void TGDraft::FOPTable::PutMarginVertical ( double _arg1 ) {
    _com_dispatch_method(this, 0xa1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4359)
inline long TGDraft::FOPTable::GetMaximumRows ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4360)
inline void TGDraft::FOPTable::PutMaximumRows ( long _arg1 ) {
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4361)
inline double TGDraft::FOPTable::GetPageGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4362)
inline void TGDraft::FOPTable::PutPageGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4363)
inline VARIANT_BOOL TGDraft::FOPTable::GetReverseDisplayOrder ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x73, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4364)
inline void TGDraft::FOPTable::PutReverseDisplayOrder ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x73, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4365)
inline TGDraft::TableRowsPtr TGDraft::FOPTable::GetRows ( ) {
    struct TableRows * _result = 0;
    _com_dispatch_method(this, 0x74, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableRowsPtr(_result, false);
}

#pragma implementation_key(4366)
inline HRESULT TGDraft::FOPTable::SetOrigin ( double x, double y ) {
    return _com_dispatch_method(this, 0x78, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(4367)
inline VARIANT_BOOL TGDraft::FOPTable::GetShowColumnHeader ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x75, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4368)
inline void TGDraft::FOPTable::PutShowColumnHeader ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x75, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4369)
inline _bstr_t TGDraft::FOPTable::GetTableStyle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4370)
inline void TGDraft::FOPTable::PutTableStyle ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4371)
inline TGDraft::TableTitlesPtr TGDraft::FOPTable::GetTitles ( ) {
    struct TableTitles * _result = 0;
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableTitlesPtr(_result, false);
}

#pragma implementation_key(4372)
inline enum TGDraft::TableAnchorPoint TGDraft::FOPTable::GetAnchorPoint ( ) {
    enum TableAnchorPoint _result;
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4373)
inline void TGDraft::FOPTable::PutAnchorPoint ( enum TableAnchorPoint _arg1 ) {
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4374)
inline TGDraft::TablePagesPtr TGDraft::FOPTable::GetPages ( ) {
    struct TablePages * _result = 0;
    _com_dispatch_method(this, 0x7a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TablePagesPtr(_result, false);
}

#pragma implementation_key(4375)
inline double TGDraft::FOPTable::GetHeaderFixedRowHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x7b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4376)
inline void TGDraft::FOPTable::PutHeaderFixedRowHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x7b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4377)
inline double TGDraft::FOPTable::GetDataFixedRowHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4378)
inline void TGDraft::FOPTable::PutDataFixedRowHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4379)
inline double TGDraft::FOPTable::GetMaximumHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x7d, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4380)
inline void TGDraft::FOPTable::PutMaximumHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x7d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4381)
inline long TGDraft::FOPTable::GetNumberOfHeaderRows ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4382)
inline void TGDraft::FOPTable::PutNumberOfHeaderRows ( long _arg1 ) {
    _com_dispatch_method(this, 0x7e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4383)
inline long TGDraft::FOPTable::GetMaximumRowsFirstPage ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4384)
inline void TGDraft::FOPTable::PutMaximumRowsFirstPage ( long _arg1 ) {
    _com_dispatch_method(this, 0x7f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4385)
inline long TGDraft::FOPTable::GetMaximumRowsAdditionalPages ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x80, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4386)
inline void TGDraft::FOPTable::PutMaximumRowsAdditionalPages ( long _arg1 ) {
    _com_dispatch_method(this, 0x80, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4387)
inline double TGDraft::FOPTable::GetMaximumHeightFirstPage ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4388)
inline void TGDraft::FOPTable::PutMaximumHeightFirstPage ( double _arg1 ) {
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4389)
inline double TGDraft::FOPTable::GetMaximumHeightAdditionalPages ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x82, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4390)
inline void TGDraft::FOPTable::PutMaximumHeightAdditionalPages ( double _arg1 ) {
    _com_dispatch_method(this, 0x82, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4391)
inline VARIANT_BOOL TGDraft::FOPTable::GetCreateNewSheetsForTable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x83, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4392)
inline void TGDraft::FOPTable::PutCreateNewSheetsForTable ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x83, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4393)
inline _bstr_t TGDraft::FOPTable::GetFirstSheetBackgroundName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x84, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4394)
inline void TGDraft::FOPTable::PutFirstSheetBackgroundName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x84, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4395)
inline _bstr_t TGDraft::FOPTable::GetAdditionalSheetsBackgroundName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x85, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4396)
inline void TGDraft::FOPTable::PutAdditionalSheetsBackgroundName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x85, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4397)
inline VARIANT_BOOL TGDraft::FOPTable::GetShowSheetBackground ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x86, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4398)
inline void TGDraft::FOPTable::PutShowSheetBackground ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x86, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4399)
inline VARIANT_BOOL TGDraft::FOPTable::GetMaintainSheetsWithTableSize ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x87, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4400)
inline void TGDraft::FOPTable::PutMaintainSheetsWithTableSize ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x87, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4401)
inline VARIANT_BOOL TGDraft::FOPTable::GetEnableGroups ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x88, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4402)
inline void TGDraft::FOPTable::PutEnableGroups ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x88, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4403)
inline TGDraft::TableGroupsPtr TGDraft::FOPTable::GetGroups ( ) {
    struct TableGroups * _result = 0;
    _com_dispatch_method(this, 0x89, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableGroupsPtr(_result, false);
}

#pragma implementation_key(4404)
inline VARIANT_BOOL TGDraft::FOPTable::GetWrapDataCellsToNewRow ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4405)
inline void TGDraft::FOPTable::PutWrapDataCellsToNewRow ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4406)
inline VARIANT_BOOL TGDraft::FOPTable::GetFillEndOfTableWithBlankRows ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4407)
inline void TGDraft::FOPTable::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4408)
inline long TGDraft::FOPTable::GetGroupByColumn ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4409)
inline void TGDraft::FOPTable::PutGroupByColumn ( long _arg1 ) {
    _com_dispatch_method(this, 0x8c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4410)
inline double TGDraft::FOPTable::GetTitleFixedRowHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x8d, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4411)
inline void TGDraft::FOPTable::PutTitleFixedRowHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x8d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4412)
inline _bstr_t TGDraft::FOPTable::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x8f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

//
// interface _IFOPTablesAuto wrapper method implementations
//

#pragma implementation_key(4413)
inline TGFramework::ApplicationPtr TGDraft::_IFOPTablesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4414)
inline long TGDraft::_IFOPTablesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4415)
inline TGDraft::FOPTablePtr TGDraft::_IFOPTablesAuto::Item ( const _variant_t & Index ) {
    struct FOPTable * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return FOPTablePtr(_result, false);
}

#pragma implementation_key(4416)
inline IUnknownPtr TGDraft::_IFOPTablesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4417)
inline TGDraft::FOPTablePtr TGDraft::_IFOPTablesAuto::Add ( struct DrawingView * pDrawingView ) {
    struct FOPTable * _result = 0;
    HRESULT _hr = raw_Add(pDrawingView, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return FOPTablePtr(_result, false);
}

#pragma implementation_key(4418)
inline IDispatchPtr TGDraft::_IFOPTablesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// interface _IFOPTableAuto wrapper method implementations
//

#pragma implementation_key(4419)
inline TGFramework::ApplicationPtr TGDraft::_IFOPTableAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4420)
inline HRESULT TGDraft::_IFOPTableAuto::Update ( ) {
    HRESULT _hr = raw_Update();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4421)
inline TGDraft::ModelLinkPtr TGDraft::_IFOPTableAuto::GetModelLink ( ) {
    struct ModelLink * _result = 0;
    HRESULT _hr = get_ModelLink(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ModelLinkPtr(_result, false);
}

#pragma implementation_key(4422)
inline HRESULT TGDraft::_IFOPTableAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4423)
inline IDispatchPtr TGDraft::_IFOPTableAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4424)
inline TGDraft::TableCellPtr TGDraft::_IFOPTableAuto::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex ) {
    struct TableCell * _result = 0;
    HRESULT _hr = get_Cell(RowIndex, ColumnIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableCellPtr(_result, false);
}

#pragma implementation_key(4425)
inline enum TGDraft::TitlePosition TGDraft::_IFOPTableAuto::GetColumnHeaderPosition ( ) {
    enum TitlePosition _result;
    HRESULT _hr = get_ColumnHeaderPosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4426)
inline void TGDraft::_IFOPTableAuto::PutColumnHeaderPosition ( enum TitlePosition ColumnHeaderPosition ) {
    HRESULT _hr = put_ColumnHeaderPosition(ColumnHeaderPosition);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4427)
inline TGDraft::TableColumnsPtr TGDraft::_IFOPTableAuto::GetColumns ( ) {
    struct TableColumns * _result = 0;
    HRESULT _hr = get_Columns(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableColumnsPtr(_result, false);
}

#pragma implementation_key(4428)
inline double TGDraft::_IFOPTableAuto::GetMarginHorizontal ( ) {
    double _result = 0;
    HRESULT _hr = get_MarginHorizontal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4429)
inline void TGDraft::_IFOPTableAuto::PutMarginHorizontal ( double MarginHorizontal ) {
    HRESULT _hr = put_MarginHorizontal(MarginHorizontal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4430)
inline double TGDraft::_IFOPTableAuto::GetMarginVertical ( ) {
    double _result = 0;
    HRESULT _hr = get_MarginVertical(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4431)
inline void TGDraft::_IFOPTableAuto::PutMarginVertical ( double MarginVertical ) {
    HRESULT _hr = put_MarginVertical(MarginVertical);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4432)
inline long TGDraft::_IFOPTableAuto::GetMaximumRows ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4433)
inline void TGDraft::_IFOPTableAuto::PutMaximumRows ( long MaximumRows ) {
    HRESULT _hr = put_MaximumRows(MaximumRows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4434)
inline double TGDraft::_IFOPTableAuto::GetPageGap ( ) {
    double _result = 0;
    HRESULT _hr = get_PageGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4435)
inline void TGDraft::_IFOPTableAuto::PutPageGap ( double PageGap ) {
    HRESULT _hr = put_PageGap(PageGap);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4436)
inline VARIANT_BOOL TGDraft::_IFOPTableAuto::GetReverseDisplayOrder ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ReverseDisplayOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4437)
inline void TGDraft::_IFOPTableAuto::PutReverseDisplayOrder ( VARIANT_BOOL ReverseDisplayOrder ) {
    HRESULT _hr = put_ReverseDisplayOrder(ReverseDisplayOrder);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4438)
inline TGDraft::TableRowsPtr TGDraft::_IFOPTableAuto::GetRows ( ) {
    struct TableRows * _result = 0;
    HRESULT _hr = get_Rows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableRowsPtr(_result, false);
}

#pragma implementation_key(4439)
inline HRESULT TGDraft::_IFOPTableAuto::SetOrigin ( double x, double y ) {
    HRESULT _hr = raw_SetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4440)
inline VARIANT_BOOL TGDraft::_IFOPTableAuto::GetShowColumnHeader ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowColumnHeader(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4441)
inline void TGDraft::_IFOPTableAuto::PutShowColumnHeader ( VARIANT_BOOL ShowColumnHeader ) {
    HRESULT _hr = put_ShowColumnHeader(ShowColumnHeader);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4442)
inline _bstr_t TGDraft::_IFOPTableAuto::GetTableStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TableStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4443)
inline void TGDraft::_IFOPTableAuto::PutTableStyle ( _bstr_t TableStyle ) {
    HRESULT _hr = put_TableStyle(TableStyle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4444)
inline TGDraft::TableTitlesPtr TGDraft::_IFOPTableAuto::GetTitles ( ) {
    struct TableTitles * _result = 0;
    HRESULT _hr = get_Titles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableTitlesPtr(_result, false);
}

#pragma implementation_key(4445)
inline enum TGDraft::TableAnchorPoint TGDraft::_IFOPTableAuto::GetAnchorPoint ( ) {
    enum TableAnchorPoint _result;
    HRESULT _hr = get_AnchorPoint(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4446)
inline void TGDraft::_IFOPTableAuto::PutAnchorPoint ( enum TableAnchorPoint AnchorPoint ) {
    HRESULT _hr = put_AnchorPoint(AnchorPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4447)
inline TGDraft::TablePagesPtr TGDraft::_IFOPTableAuto::GetPages ( ) {
    struct TablePages * _result = 0;
    HRESULT _hr = get_Pages(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TablePagesPtr(_result, false);
}

#pragma implementation_key(4448)
inline double TGDraft::_IFOPTableAuto::GetHeaderFixedRowHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_HeaderFixedRowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4449)
inline void TGDraft::_IFOPTableAuto::PutHeaderFixedRowHeight ( double HeaderFixedRowHeight ) {
    HRESULT _hr = put_HeaderFixedRowHeight(HeaderFixedRowHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4450)
inline double TGDraft::_IFOPTableAuto::GetDataFixedRowHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_DataFixedRowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4451)
inline void TGDraft::_IFOPTableAuto::PutDataFixedRowHeight ( double DataFixedRowHeight ) {
    HRESULT _hr = put_DataFixedRowHeight(DataFixedRowHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4452)
inline double TGDraft::_IFOPTableAuto::GetMaximumHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4453)
inline void TGDraft::_IFOPTableAuto::PutMaximumHeight ( double MaximumHeight ) {
    HRESULT _hr = put_MaximumHeight(MaximumHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4454)
inline long TGDraft::_IFOPTableAuto::GetNumberOfHeaderRows ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfHeaderRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4455)
inline void TGDraft::_IFOPTableAuto::PutNumberOfHeaderRows ( long NumberOfHeaderRows ) {
    HRESULT _hr = put_NumberOfHeaderRows(NumberOfHeaderRows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4456)
inline long TGDraft::_IFOPTableAuto::GetMaximumRowsFirstPage ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumRowsFirstPage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4457)
inline void TGDraft::_IFOPTableAuto::PutMaximumRowsFirstPage ( long MaximumRowsFirstPage ) {
    HRESULT _hr = put_MaximumRowsFirstPage(MaximumRowsFirstPage);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4458)
inline long TGDraft::_IFOPTableAuto::GetMaximumRowsAdditionalPages ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumRowsAdditionalPages(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4459)
inline void TGDraft::_IFOPTableAuto::PutMaximumRowsAdditionalPages ( long MaximumRowsAdditionalPages ) {
    HRESULT _hr = put_MaximumRowsAdditionalPages(MaximumRowsAdditionalPages);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4460)
inline double TGDraft::_IFOPTableAuto::GetMaximumHeightFirstPage ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumHeightFirstPage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4461)
inline void TGDraft::_IFOPTableAuto::PutMaximumHeightFirstPage ( double MaximumHeightFirstPage ) {
    HRESULT _hr = put_MaximumHeightFirstPage(MaximumHeightFirstPage);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4462)
inline double TGDraft::_IFOPTableAuto::GetMaximumHeightAdditionalPages ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumHeightAdditionalPages(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4463)
inline void TGDraft::_IFOPTableAuto::PutMaximumHeightAdditionalPages ( double MaximumHeightAdditionalPages ) {
    HRESULT _hr = put_MaximumHeightAdditionalPages(MaximumHeightAdditionalPages);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4464)
inline VARIANT_BOOL TGDraft::_IFOPTableAuto::GetCreateNewSheetsForTable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CreateNewSheetsForTable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4465)
inline void TGDraft::_IFOPTableAuto::PutCreateNewSheetsForTable ( VARIANT_BOOL CreateNewSheetsForTable ) {
    HRESULT _hr = put_CreateNewSheetsForTable(CreateNewSheetsForTable);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4466)
inline _bstr_t TGDraft::_IFOPTableAuto::GetFirstSheetBackgroundName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FirstSheetBackgroundName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4467)
inline void TGDraft::_IFOPTableAuto::PutFirstSheetBackgroundName ( _bstr_t FirstSheetBackgroundName ) {
    HRESULT _hr = put_FirstSheetBackgroundName(FirstSheetBackgroundName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4468)
inline _bstr_t TGDraft::_IFOPTableAuto::GetAdditionalSheetsBackgroundName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AdditionalSheetsBackgroundName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4469)
inline void TGDraft::_IFOPTableAuto::PutAdditionalSheetsBackgroundName ( _bstr_t AdditionalSheetsBackgroundName ) {
    HRESULT _hr = put_AdditionalSheetsBackgroundName(AdditionalSheetsBackgroundName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4470)
inline VARIANT_BOOL TGDraft::_IFOPTableAuto::GetShowSheetBackground ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowSheetBackground(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4471)
inline void TGDraft::_IFOPTableAuto::PutShowSheetBackground ( VARIANT_BOOL ShowSheetBackground ) {
    HRESULT _hr = put_ShowSheetBackground(ShowSheetBackground);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4472)
inline VARIANT_BOOL TGDraft::_IFOPTableAuto::GetMaintainSheetsWithTableSize ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MaintainSheetsWithTableSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4473)
inline void TGDraft::_IFOPTableAuto::PutMaintainSheetsWithTableSize ( VARIANT_BOOL MaintainSheetsWithTableSize ) {
    HRESULT _hr = put_MaintainSheetsWithTableSize(MaintainSheetsWithTableSize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4474)
inline VARIANT_BOOL TGDraft::_IFOPTableAuto::GetEnableGroups ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_EnableGroups(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4475)
inline void TGDraft::_IFOPTableAuto::PutEnableGroups ( VARIANT_BOOL EnableGroups ) {
    HRESULT _hr = put_EnableGroups(EnableGroups);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4476)
inline TGDraft::TableGroupsPtr TGDraft::_IFOPTableAuto::GetGroups ( ) {
    struct TableGroups * _result = 0;
    HRESULT _hr = get_Groups(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableGroupsPtr(_result, false);
}

#pragma implementation_key(4477)
inline VARIANT_BOOL TGDraft::_IFOPTableAuto::GetWrapDataCellsToNewRow ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WrapDataCellsToNewRow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4478)
inline void TGDraft::_IFOPTableAuto::PutWrapDataCellsToNewRow ( VARIANT_BOOL WrapDataCellsToNewRow ) {
    HRESULT _hr = put_WrapDataCellsToNewRow(WrapDataCellsToNewRow);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4479)
inline VARIANT_BOOL TGDraft::_IFOPTableAuto::GetFillEndOfTableWithBlankRows ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_FillEndOfTableWithBlankRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4480)
inline void TGDraft::_IFOPTableAuto::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL FillEndOfTableWithBlankRows ) {
    HRESULT _hr = put_FillEndOfTableWithBlankRows(FillEndOfTableWithBlankRows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4481)
inline long TGDraft::_IFOPTableAuto::GetGroupByColumn ( ) {
    long _result = 0;
    HRESULT _hr = get_GroupByColumn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4482)
inline void TGDraft::_IFOPTableAuto::PutGroupByColumn ( long ColumnIndex ) {
    HRESULT _hr = put_GroupByColumn(ColumnIndex);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4483)
inline double TGDraft::_IFOPTableAuto::GetTitleFixedRowHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_TitleFixedRowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4484)
inline void TGDraft::_IFOPTableAuto::PutTitleFixedRowHeight ( double TitleFixedRowHeight ) {
    HRESULT _hr = put_TitleFixedRowHeight(TitleFixedRowHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4485)
inline _bstr_t TGDraft::_IFOPTableAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// dispinterface ConductorTables wrapper method implementations
//

#pragma implementation_key(4486)
inline TGFramework::ApplicationPtr TGDraft::ConductorTables::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4487)
inline long TGDraft::ConductorTables::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4488)
inline TGDraft::ConductorTablePtr TGDraft::ConductorTables::Item ( const _variant_t & Index ) {
    struct ConductorTable * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return ConductorTablePtr(_result, false);
}

#pragma implementation_key(4489)
inline TGDraft::ConductorTablePtr TGDraft::ConductorTables::Add ( struct DrawingView * pDrawingView ) {
    struct ConductorTable * _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", pDrawingView);
    return ConductorTablePtr(_result, false);
}

#pragma implementation_key(4490)
inline IDispatchPtr TGDraft::ConductorTables::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// dispinterface ConductorTable wrapper method implementations
//

#pragma implementation_key(4491)
inline TGFramework::ApplicationPtr TGDraft::ConductorTable::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4492)
inline HRESULT TGDraft::ConductorTable::Update ( ) {
    return _com_dispatch_method(this, 0x66, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4493)
inline TGDraft::ModelLinkPtr TGDraft::ConductorTable::GetModelLink ( ) {
    struct ModelLink * _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ModelLinkPtr(_result, false);
}

#pragma implementation_key(4494)
inline HRESULT TGDraft::ConductorTable::Delete ( ) {
    return _com_dispatch_method(this, 0x6a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4495)
inline IDispatchPtr TGDraft::ConductorTable::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4496)
inline TGDraft::TableCellPtr TGDraft::ConductorTable::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex ) {
    struct TableCell * _result = 0;
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000c\x000c", &RowIndex, &ColumnIndex);
    return TableCellPtr(_result, false);
}

#pragma implementation_key(4497)
inline enum TGDraft::TitlePosition TGDraft::ConductorTable::GetColumnHeaderPosition ( ) {
    enum TitlePosition _result;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4498)
inline void TGDraft::ConductorTable::PutColumnHeaderPosition ( enum TitlePosition _arg1 ) {
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4499)
inline TGDraft::TableColumnsPtr TGDraft::ConductorTable::GetColumns ( ) {
    struct TableColumns * _result = 0;
    _com_dispatch_method(this, 0x6e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableColumnsPtr(_result, false);
}

#pragma implementation_key(4500)
inline double TGDraft::ConductorTable::GetMarginHorizontal ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xa0, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4501)
inline void TGDraft::ConductorTable::PutMarginHorizontal ( double _arg1 ) {
    _com_dispatch_method(this, 0xa0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4502)
inline double TGDraft::ConductorTable::GetMarginVertical ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xa1, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4503)
inline void TGDraft::ConductorTable::PutMarginVertical ( double _arg1 ) {
    _com_dispatch_method(this, 0xa1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4504)
inline long TGDraft::ConductorTable::GetMaximumRows ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4505)
inline void TGDraft::ConductorTable::PutMaximumRows ( long _arg1 ) {
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4506)
inline double TGDraft::ConductorTable::GetPageGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4507)
inline void TGDraft::ConductorTable::PutPageGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4508)
inline VARIANT_BOOL TGDraft::ConductorTable::GetReverseDisplayOrder ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x73, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4509)
inline void TGDraft::ConductorTable::PutReverseDisplayOrder ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x73, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4510)
inline TGDraft::TableRowsPtr TGDraft::ConductorTable::GetRows ( ) {
    struct TableRows * _result = 0;
    _com_dispatch_method(this, 0x74, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableRowsPtr(_result, false);
}

#pragma implementation_key(4511)
inline HRESULT TGDraft::ConductorTable::SetOrigin ( double x, double y ) {
    return _com_dispatch_method(this, 0x78, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(4512)
inline VARIANT_BOOL TGDraft::ConductorTable::GetShowColumnHeader ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x75, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4513)
inline void TGDraft::ConductorTable::PutShowColumnHeader ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x75, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4514)
inline _bstr_t TGDraft::ConductorTable::GetTableStyle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4515)
inline void TGDraft::ConductorTable::PutTableStyle ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4516)
inline TGDraft::TableTitlesPtr TGDraft::ConductorTable::GetTitles ( ) {
    struct TableTitles * _result = 0;
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableTitlesPtr(_result, false);
}

#pragma implementation_key(4517)
inline enum TGDraft::TableAnchorPoint TGDraft::ConductorTable::GetAnchorPoint ( ) {
    enum TableAnchorPoint _result;
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4518)
inline void TGDraft::ConductorTable::PutAnchorPoint ( enum TableAnchorPoint _arg1 ) {
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4519)
inline TGDraft::TablePagesPtr TGDraft::ConductorTable::GetPages ( ) {
    struct TablePages * _result = 0;
    _com_dispatch_method(this, 0x7a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TablePagesPtr(_result, false);
}

#pragma implementation_key(4520)
inline double TGDraft::ConductorTable::GetHeaderFixedRowHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x7b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4521)
inline void TGDraft::ConductorTable::PutHeaderFixedRowHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x7b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4522)
inline double TGDraft::ConductorTable::GetDataFixedRowHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4523)
inline void TGDraft::ConductorTable::PutDataFixedRowHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4524)
inline double TGDraft::ConductorTable::GetMaximumHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x7d, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4525)
inline void TGDraft::ConductorTable::PutMaximumHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x7d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4526)
inline long TGDraft::ConductorTable::GetNumberOfHeaderRows ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4527)
inline void TGDraft::ConductorTable::PutNumberOfHeaderRows ( long _arg1 ) {
    _com_dispatch_method(this, 0x7e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4528)
inline long TGDraft::ConductorTable::GetMaximumRowsFirstPage ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4529)
inline void TGDraft::ConductorTable::PutMaximumRowsFirstPage ( long _arg1 ) {
    _com_dispatch_method(this, 0x7f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4530)
inline long TGDraft::ConductorTable::GetMaximumRowsAdditionalPages ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x80, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4531)
inline void TGDraft::ConductorTable::PutMaximumRowsAdditionalPages ( long _arg1 ) {
    _com_dispatch_method(this, 0x80, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4532)
inline double TGDraft::ConductorTable::GetMaximumHeightFirstPage ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4533)
inline void TGDraft::ConductorTable::PutMaximumHeightFirstPage ( double _arg1 ) {
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4534)
inline double TGDraft::ConductorTable::GetMaximumHeightAdditionalPages ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x82, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4535)
inline void TGDraft::ConductorTable::PutMaximumHeightAdditionalPages ( double _arg1 ) {
    _com_dispatch_method(this, 0x82, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4536)
inline VARIANT_BOOL TGDraft::ConductorTable::GetCreateNewSheetsForTable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x83, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4537)
inline void TGDraft::ConductorTable::PutCreateNewSheetsForTable ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x83, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4538)
inline _bstr_t TGDraft::ConductorTable::GetFirstSheetBackgroundName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x84, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4539)
inline void TGDraft::ConductorTable::PutFirstSheetBackgroundName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x84, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4540)
inline _bstr_t TGDraft::ConductorTable::GetAdditionalSheetsBackgroundName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x85, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4541)
inline void TGDraft::ConductorTable::PutAdditionalSheetsBackgroundName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x85, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4542)
inline VARIANT_BOOL TGDraft::ConductorTable::GetShowSheetBackground ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x86, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4543)
inline void TGDraft::ConductorTable::PutShowSheetBackground ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x86, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4544)
inline VARIANT_BOOL TGDraft::ConductorTable::GetMaintainSheetsWithTableSize ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x87, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4545)
inline void TGDraft::ConductorTable::PutMaintainSheetsWithTableSize ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x87, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4546)
inline VARIANT_BOOL TGDraft::ConductorTable::GetEnableGroups ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x88, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4547)
inline void TGDraft::ConductorTable::PutEnableGroups ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x88, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4548)
inline TGDraft::TableGroupsPtr TGDraft::ConductorTable::GetGroups ( ) {
    struct TableGroups * _result = 0;
    _com_dispatch_method(this, 0x89, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableGroupsPtr(_result, false);
}

#pragma implementation_key(4549)
inline VARIANT_BOOL TGDraft::ConductorTable::GetWrapDataCellsToNewRow ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4550)
inline void TGDraft::ConductorTable::PutWrapDataCellsToNewRow ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4551)
inline VARIANT_BOOL TGDraft::ConductorTable::GetFillEndOfTableWithBlankRows ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4552)
inline void TGDraft::ConductorTable::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4553)
inline long TGDraft::ConductorTable::GetGroupByColumn ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4554)
inline void TGDraft::ConductorTable::PutGroupByColumn ( long _arg1 ) {
    _com_dispatch_method(this, 0x8c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4555)
inline double TGDraft::ConductorTable::GetTitleFixedRowHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x8d, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4556)
inline void TGDraft::ConductorTable::PutTitleFixedRowHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x8d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4557)
inline HRESULT TGDraft::ConductorTable::GetListOfSavedSettings ( long * NumSavedSettings, SAFEARRAY * * ListOfSavedSettings ) {
    return _com_dispatch_method(this, 0x8e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6008", NumSavedSettings, ListOfSavedSettings);
}

#pragma implementation_key(4558)
inline void TGDraft::ConductorTable::PutSavedSettings ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4559)
inline _bstr_t TGDraft::ConductorTable::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x90, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

//
// interface _IConductorTablesAuto wrapper method implementations
//

#pragma implementation_key(4560)
inline TGFramework::ApplicationPtr TGDraft::_IConductorTablesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4561)
inline long TGDraft::_IConductorTablesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4562)
inline TGDraft::ConductorTablePtr TGDraft::_IConductorTablesAuto::Item ( const _variant_t & Index ) {
    struct ConductorTable * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ConductorTablePtr(_result, false);
}

#pragma implementation_key(4563)
inline IUnknownPtr TGDraft::_IConductorTablesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4564)
inline TGDraft::ConductorTablePtr TGDraft::_IConductorTablesAuto::Add ( struct DrawingView * pDrawingView ) {
    struct ConductorTable * _result = 0;
    HRESULT _hr = raw_Add(pDrawingView, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ConductorTablePtr(_result, false);
}

#pragma implementation_key(4565)
inline IDispatchPtr TGDraft::_IConductorTablesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// interface _IConductorTableAuto wrapper method implementations
//

#pragma implementation_key(4566)
inline TGFramework::ApplicationPtr TGDraft::_IConductorTableAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4567)
inline HRESULT TGDraft::_IConductorTableAuto::Update ( ) {
    HRESULT _hr = raw_Update();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4568)
inline TGDraft::ModelLinkPtr TGDraft::_IConductorTableAuto::GetModelLink ( ) {
    struct ModelLink * _result = 0;
    HRESULT _hr = get_ModelLink(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ModelLinkPtr(_result, false);
}

#pragma implementation_key(4569)
inline HRESULT TGDraft::_IConductorTableAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4570)
inline IDispatchPtr TGDraft::_IConductorTableAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4571)
inline TGDraft::TableCellPtr TGDraft::_IConductorTableAuto::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex ) {
    struct TableCell * _result = 0;
    HRESULT _hr = get_Cell(RowIndex, ColumnIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableCellPtr(_result, false);
}

#pragma implementation_key(4572)
inline enum TGDraft::TitlePosition TGDraft::_IConductorTableAuto::GetColumnHeaderPosition ( ) {
    enum TitlePosition _result;
    HRESULT _hr = get_ColumnHeaderPosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4573)
inline void TGDraft::_IConductorTableAuto::PutColumnHeaderPosition ( enum TitlePosition ColumnHeaderPosition ) {
    HRESULT _hr = put_ColumnHeaderPosition(ColumnHeaderPosition);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4574)
inline TGDraft::TableColumnsPtr TGDraft::_IConductorTableAuto::GetColumns ( ) {
    struct TableColumns * _result = 0;
    HRESULT _hr = get_Columns(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableColumnsPtr(_result, false);
}

#pragma implementation_key(4575)
inline double TGDraft::_IConductorTableAuto::GetMarginHorizontal ( ) {
    double _result = 0;
    HRESULT _hr = get_MarginHorizontal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4576)
inline void TGDraft::_IConductorTableAuto::PutMarginHorizontal ( double MarginHorizontal ) {
    HRESULT _hr = put_MarginHorizontal(MarginHorizontal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4577)
inline double TGDraft::_IConductorTableAuto::GetMarginVertical ( ) {
    double _result = 0;
    HRESULT _hr = get_MarginVertical(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4578)
inline void TGDraft::_IConductorTableAuto::PutMarginVertical ( double MarginVertical ) {
    HRESULT _hr = put_MarginVertical(MarginVertical);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4579)
inline long TGDraft::_IConductorTableAuto::GetMaximumRows ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4580)
inline void TGDraft::_IConductorTableAuto::PutMaximumRows ( long MaximumRows ) {
    HRESULT _hr = put_MaximumRows(MaximumRows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4581)
inline double TGDraft::_IConductorTableAuto::GetPageGap ( ) {
    double _result = 0;
    HRESULT _hr = get_PageGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4582)
inline void TGDraft::_IConductorTableAuto::PutPageGap ( double PageGap ) {
    HRESULT _hr = put_PageGap(PageGap);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4583)
inline VARIANT_BOOL TGDraft::_IConductorTableAuto::GetReverseDisplayOrder ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ReverseDisplayOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4584)
inline void TGDraft::_IConductorTableAuto::PutReverseDisplayOrder ( VARIANT_BOOL ReverseDisplayOrder ) {
    HRESULT _hr = put_ReverseDisplayOrder(ReverseDisplayOrder);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4585)
inline TGDraft::TableRowsPtr TGDraft::_IConductorTableAuto::GetRows ( ) {
    struct TableRows * _result = 0;
    HRESULT _hr = get_Rows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableRowsPtr(_result, false);
}

#pragma implementation_key(4586)
inline HRESULT TGDraft::_IConductorTableAuto::SetOrigin ( double x, double y ) {
    HRESULT _hr = raw_SetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4587)
inline VARIANT_BOOL TGDraft::_IConductorTableAuto::GetShowColumnHeader ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowColumnHeader(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4588)
inline void TGDraft::_IConductorTableAuto::PutShowColumnHeader ( VARIANT_BOOL ShowColumnHeader ) {
    HRESULT _hr = put_ShowColumnHeader(ShowColumnHeader);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4589)
inline _bstr_t TGDraft::_IConductorTableAuto::GetTableStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TableStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4590)
inline void TGDraft::_IConductorTableAuto::PutTableStyle ( _bstr_t TableStyle ) {
    HRESULT _hr = put_TableStyle(TableStyle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4591)
inline TGDraft::TableTitlesPtr TGDraft::_IConductorTableAuto::GetTitles ( ) {
    struct TableTitles * _result = 0;
    HRESULT _hr = get_Titles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableTitlesPtr(_result, false);
}

#pragma implementation_key(4592)
inline enum TGDraft::TableAnchorPoint TGDraft::_IConductorTableAuto::GetAnchorPoint ( ) {
    enum TableAnchorPoint _result;
    HRESULT _hr = get_AnchorPoint(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4593)
inline void TGDraft::_IConductorTableAuto::PutAnchorPoint ( enum TableAnchorPoint AnchorPoint ) {
    HRESULT _hr = put_AnchorPoint(AnchorPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4594)
inline TGDraft::TablePagesPtr TGDraft::_IConductorTableAuto::GetPages ( ) {
    struct TablePages * _result = 0;
    HRESULT _hr = get_Pages(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TablePagesPtr(_result, false);
}

#pragma implementation_key(4595)
inline double TGDraft::_IConductorTableAuto::GetHeaderFixedRowHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_HeaderFixedRowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4596)
inline void TGDraft::_IConductorTableAuto::PutHeaderFixedRowHeight ( double HeaderFixedRowHeight ) {
    HRESULT _hr = put_HeaderFixedRowHeight(HeaderFixedRowHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4597)
inline double TGDraft::_IConductorTableAuto::GetDataFixedRowHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_DataFixedRowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4598)
inline void TGDraft::_IConductorTableAuto::PutDataFixedRowHeight ( double DataFixedRowHeight ) {
    HRESULT _hr = put_DataFixedRowHeight(DataFixedRowHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4599)
inline double TGDraft::_IConductorTableAuto::GetMaximumHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4600)
inline void TGDraft::_IConductorTableAuto::PutMaximumHeight ( double MaximumHeight ) {
    HRESULT _hr = put_MaximumHeight(MaximumHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4601)
inline long TGDraft::_IConductorTableAuto::GetNumberOfHeaderRows ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfHeaderRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4602)
inline void TGDraft::_IConductorTableAuto::PutNumberOfHeaderRows ( long NumberOfHeaderRows ) {
    HRESULT _hr = put_NumberOfHeaderRows(NumberOfHeaderRows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4603)
inline long TGDraft::_IConductorTableAuto::GetMaximumRowsFirstPage ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumRowsFirstPage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4604)
inline void TGDraft::_IConductorTableAuto::PutMaximumRowsFirstPage ( long MaximumRowsFirstPage ) {
    HRESULT _hr = put_MaximumRowsFirstPage(MaximumRowsFirstPage);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4605)
inline long TGDraft::_IConductorTableAuto::GetMaximumRowsAdditionalPages ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumRowsAdditionalPages(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4606)
inline void TGDraft::_IConductorTableAuto::PutMaximumRowsAdditionalPages ( long MaximumRowsAdditionalPages ) {
    HRESULT _hr = put_MaximumRowsAdditionalPages(MaximumRowsAdditionalPages);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4607)
inline double TGDraft::_IConductorTableAuto::GetMaximumHeightFirstPage ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumHeightFirstPage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4608)
inline void TGDraft::_IConductorTableAuto::PutMaximumHeightFirstPage ( double MaximumHeightFirstPage ) {
    HRESULT _hr = put_MaximumHeightFirstPage(MaximumHeightFirstPage);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4609)
inline double TGDraft::_IConductorTableAuto::GetMaximumHeightAdditionalPages ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumHeightAdditionalPages(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4610)
inline void TGDraft::_IConductorTableAuto::PutMaximumHeightAdditionalPages ( double MaximumHeightAdditionalPages ) {
    HRESULT _hr = put_MaximumHeightAdditionalPages(MaximumHeightAdditionalPages);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4611)
inline VARIANT_BOOL TGDraft::_IConductorTableAuto::GetCreateNewSheetsForTable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CreateNewSheetsForTable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4612)
inline void TGDraft::_IConductorTableAuto::PutCreateNewSheetsForTable ( VARIANT_BOOL CreateNewSheetsForTable ) {
    HRESULT _hr = put_CreateNewSheetsForTable(CreateNewSheetsForTable);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4613)
inline _bstr_t TGDraft::_IConductorTableAuto::GetFirstSheetBackgroundName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FirstSheetBackgroundName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4614)
inline void TGDraft::_IConductorTableAuto::PutFirstSheetBackgroundName ( _bstr_t FirstSheetBackgroundName ) {
    HRESULT _hr = put_FirstSheetBackgroundName(FirstSheetBackgroundName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4615)
inline _bstr_t TGDraft::_IConductorTableAuto::GetAdditionalSheetsBackgroundName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AdditionalSheetsBackgroundName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4616)
inline void TGDraft::_IConductorTableAuto::PutAdditionalSheetsBackgroundName ( _bstr_t AdditionalSheetsBackgroundName ) {
    HRESULT _hr = put_AdditionalSheetsBackgroundName(AdditionalSheetsBackgroundName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4617)
inline VARIANT_BOOL TGDraft::_IConductorTableAuto::GetShowSheetBackground ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowSheetBackground(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4618)
inline void TGDraft::_IConductorTableAuto::PutShowSheetBackground ( VARIANT_BOOL ShowSheetBackground ) {
    HRESULT _hr = put_ShowSheetBackground(ShowSheetBackground);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4619)
inline VARIANT_BOOL TGDraft::_IConductorTableAuto::GetMaintainSheetsWithTableSize ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MaintainSheetsWithTableSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4620)
inline void TGDraft::_IConductorTableAuto::PutMaintainSheetsWithTableSize ( VARIANT_BOOL MaintainSheetsWithTableSize ) {
    HRESULT _hr = put_MaintainSheetsWithTableSize(MaintainSheetsWithTableSize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4621)
inline VARIANT_BOOL TGDraft::_IConductorTableAuto::GetEnableGroups ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_EnableGroups(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4622)
inline void TGDraft::_IConductorTableAuto::PutEnableGroups ( VARIANT_BOOL EnableGroups ) {
    HRESULT _hr = put_EnableGroups(EnableGroups);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4623)
inline TGDraft::TableGroupsPtr TGDraft::_IConductorTableAuto::GetGroups ( ) {
    struct TableGroups * _result = 0;
    HRESULT _hr = get_Groups(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableGroupsPtr(_result, false);
}

#pragma implementation_key(4624)
inline VARIANT_BOOL TGDraft::_IConductorTableAuto::GetWrapDataCellsToNewRow ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WrapDataCellsToNewRow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4625)
inline void TGDraft::_IConductorTableAuto::PutWrapDataCellsToNewRow ( VARIANT_BOOL WrapDataCellsToNewRow ) {
    HRESULT _hr = put_WrapDataCellsToNewRow(WrapDataCellsToNewRow);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4626)
inline VARIANT_BOOL TGDraft::_IConductorTableAuto::GetFillEndOfTableWithBlankRows ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_FillEndOfTableWithBlankRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4627)
inline void TGDraft::_IConductorTableAuto::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL FillEndOfTableWithBlankRows ) {
    HRESULT _hr = put_FillEndOfTableWithBlankRows(FillEndOfTableWithBlankRows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4628)
inline long TGDraft::_IConductorTableAuto::GetGroupByColumn ( ) {
    long _result = 0;
    HRESULT _hr = get_GroupByColumn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4629)
inline void TGDraft::_IConductorTableAuto::PutGroupByColumn ( long ColumnIndex ) {
    HRESULT _hr = put_GroupByColumn(ColumnIndex);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4630)
inline double TGDraft::_IConductorTableAuto::GetTitleFixedRowHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_TitleFixedRowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4631)
inline void TGDraft::_IConductorTableAuto::PutTitleFixedRowHeight ( double TitleFixedRowHeight ) {
    HRESULT _hr = put_TitleFixedRowHeight(TitleFixedRowHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4632)
inline HRESULT TGDraft::_IConductorTableAuto::GetListOfSavedSettings ( long * NumSavedSettings, SAFEARRAY * * ListOfSavedSettings ) {
    HRESULT _hr = raw_GetListOfSavedSettings(NumSavedSettings, ListOfSavedSettings);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4633)
inline void TGDraft::_IConductorTableAuto::PutSavedSettings ( _bstr_t _arg1 ) {
    HRESULT _hr = put_SavedSettings(_arg1);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4634)
inline _bstr_t TGDraft::_IConductorTableAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// dispinterface ToleranceTables wrapper method implementations
//

#pragma implementation_key(4635)
inline TGFramework::ApplicationPtr TGDraft::ToleranceTables::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4636)
inline long TGDraft::ToleranceTables::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4637)
inline TGDraft::ToleranceTablePtr TGDraft::ToleranceTables::Item ( const _variant_t & Index ) {
    struct ToleranceTable * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return ToleranceTablePtr(_result, false);
}

#pragma implementation_key(4638)
inline TGDraft::ToleranceTablePtr TGDraft::ToleranceTables::AddByActiveSheet ( _bstr_t SavedSettings ) {
    struct ToleranceTable * _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008", (BSTR)SavedSettings);
    return ToleranceTablePtr(_result, false);
}

#pragma implementation_key(4639)
inline TGDraft::ToleranceTablePtr TGDraft::ToleranceTables::AddByDrawingView ( struct DrawingView * DrawingView, _bstr_t SavedSettings, long DimensionsInView ) {
    struct ToleranceTable * _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0008\x0003", DrawingView, (BSTR)SavedSettings, DimensionsInView);
    return ToleranceTablePtr(_result, false);
}

#pragma implementation_key(4640)
inline TGDraft::ToleranceTablePtr TGDraft::ToleranceTables::AddByUserSelection ( _bstr_t SavedSettings ) {
    struct ToleranceTable * _result = 0;
    _com_dispatch_method(this, 0x6a, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008", (BSTR)SavedSettings);
    return ToleranceTablePtr(_result, false);
}

#pragma implementation_key(4641)
inline IDispatchPtr TGDraft::ToleranceTables::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// dispinterface ToleranceTable wrapper method implementations
//

#pragma implementation_key(4642)
inline TGFramework::ApplicationPtr TGDraft::ToleranceTable::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4643)
inline HRESULT TGDraft::ToleranceTable::Update ( ) {
    return _com_dispatch_method(this, 0x66, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4644)
inline HRESULT TGDraft::ToleranceTable::CopyToClipboard ( ) {
    return _com_dispatch_method(this, 0x67, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4645)
inline HRESULT TGDraft::ToleranceTable::SourceDimensions ( SAFEARRAY * * ppDimensions ) {
    return _com_dispatch_method(this, 0x68, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009", ppDimensions);
}

#pragma implementation_key(4646)
inline HRESULT TGDraft::ToleranceTable::Delete ( ) {
    return _com_dispatch_method(this, 0x6a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4647)
inline void TGDraft::ToleranceTable::PutSavedSettings ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4648)
inline IDispatchPtr TGDraft::ToleranceTable::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4649)
inline VARIANT_BOOL TGDraft::ToleranceTable::GetIncludeDimensionsInView ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x93, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4650)
inline void TGDraft::ToleranceTable::PutIncludeDimensionsInView ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x93, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4651)
inline HRESULT TGDraft::ToleranceTable::SetOrigin ( double x, double y ) {
    return _com_dispatch_method(this, 0x6d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(4652)
inline HRESULT TGDraft::ToleranceTable::GetOrigin ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x6c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(4653)
inline HRESULT TGDraft::ToleranceTable::GetListOfSavedSettings ( long * NumSavedSettings, SAFEARRAY * * ListOfSavedSettings ) {
    return _com_dispatch_method(this, 0x6e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6008", NumSavedSettings, ListOfSavedSettings);
}

#pragma implementation_key(4654)
inline VARIANT_BOOL TGDraft::ToleranceTable::GetIsUpToDate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4655)
inline HRESULT TGDraft::ToleranceTable::ConvertToTable ( ) {
    return _com_dispatch_method(this, 0x80, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4656)
inline TGDraft::TableCellPtr TGDraft::ToleranceTable::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex ) {
    struct TableCell * _result = 0;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000c\x000c", &RowIndex, &ColumnIndex);
    return TableCellPtr(_result, false);
}

#pragma implementation_key(4657)
inline enum TGDraft::TitlePosition TGDraft::ToleranceTable::GetColumnHeaderPosition ( ) {
    enum TitlePosition _result;
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4658)
inline void TGDraft::ToleranceTable::PutColumnHeaderPosition ( enum TitlePosition _arg1 ) {
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4659)
inline TGDraft::TableColumnsPtr TGDraft::ToleranceTable::GetColumns ( ) {
    struct TableColumns * _result = 0;
    _com_dispatch_method(this, 0x73, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableColumnsPtr(_result, false);
}

#pragma implementation_key(4660)
inline double TGDraft::ToleranceTable::GetMargin ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4661)
inline void TGDraft::ToleranceTable::PutMargin ( double _arg1 ) {
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4662)
inline long TGDraft::ToleranceTable::GetMaximumRows ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4663)
inline void TGDraft::ToleranceTable::PutMaximumRows ( long _arg1 ) {
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4664)
inline double TGDraft::ToleranceTable::GetPageGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4665)
inline void TGDraft::ToleranceTable::PutPageGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4666)
inline VARIANT_BOOL TGDraft::ToleranceTable::GetReverseDisplayOrder ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4667)
inline void TGDraft::ToleranceTable::PutReverseDisplayOrder ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x7b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4668)
inline TGDraft::TableRowsPtr TGDraft::ToleranceTable::GetRows ( ) {
    struct TableRows * _result = 0;
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableRowsPtr(_result, false);
}

#pragma implementation_key(4669)
inline VARIANT_BOOL TGDraft::ToleranceTable::GetShowColumnHeader ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4670)
inline void TGDraft::ToleranceTable::PutShowColumnHeader ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x7d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4671)
inline _bstr_t TGDraft::ToleranceTable::GetTableStyle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4672)
inline void TGDraft::ToleranceTable::PutTableStyle ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x7e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4673)
inline TGDraft::TableTitlesPtr TGDraft::ToleranceTable::GetTitles ( ) {
    struct TableTitles * _result = 0;
    _com_dispatch_method(this, 0x7f, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableTitlesPtr(_result, false);
}

#pragma implementation_key(4674)
inline enum TGDraft::TableAnchorPoint TGDraft::ToleranceTable::GetAnchorPoint ( ) {
    enum TableAnchorPoint _result;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4675)
inline void TGDraft::ToleranceTable::PutAnchorPoint ( enum TableAnchorPoint _arg1 ) {
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4676)
inline TGDraft::TablePagesPtr TGDraft::ToleranceTable::GetPages ( ) {
    struct TablePages * _result = 0;
    _com_dispatch_method(this, 0x7a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TablePagesPtr(_result, false);
}

#pragma implementation_key(4677)
inline double TGDraft::ToleranceTable::GetHeaderFixedRowHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x75, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4678)
inline void TGDraft::ToleranceTable::PutHeaderFixedRowHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x75, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4679)
inline double TGDraft::ToleranceTable::GetDataFixedRowHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x74, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4680)
inline void TGDraft::ToleranceTable::PutDataFixedRowHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x74, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4681)
inline double TGDraft::ToleranceTable::GetMaximumHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4682)
inline void TGDraft::ToleranceTable::PutMaximumHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4683)
inline long TGDraft::ToleranceTable::GetNumberOfHeaderRows ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4684)
inline void TGDraft::ToleranceTable::PutNumberOfHeaderRows ( long _arg1 ) {
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4685)
inline long TGDraft::ToleranceTable::GetMaximumRowsFirstPage ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x82, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4686)
inline void TGDraft::ToleranceTable::PutMaximumRowsFirstPage ( long _arg1 ) {
    _com_dispatch_method(this, 0x82, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4687)
inline long TGDraft::ToleranceTable::GetMaximumRowsAdditionalPages ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x83, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4688)
inline void TGDraft::ToleranceTable::PutMaximumRowsAdditionalPages ( long _arg1 ) {
    _com_dispatch_method(this, 0x83, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4689)
inline double TGDraft::ToleranceTable::GetMaximumHeightFirstPage ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x84, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4690)
inline void TGDraft::ToleranceTable::PutMaximumHeightFirstPage ( double _arg1 ) {
    _com_dispatch_method(this, 0x84, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4691)
inline double TGDraft::ToleranceTable::GetMaximumHeightAdditionalPages ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x85, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4692)
inline void TGDraft::ToleranceTable::PutMaximumHeightAdditionalPages ( double _arg1 ) {
    _com_dispatch_method(this, 0x85, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4693)
inline VARIANT_BOOL TGDraft::ToleranceTable::GetCreateNewSheetsForTable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x86, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4694)
inline void TGDraft::ToleranceTable::PutCreateNewSheetsForTable ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x86, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4695)
inline _bstr_t TGDraft::ToleranceTable::GetFirstSheetBackgroundName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x87, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4696)
inline void TGDraft::ToleranceTable::PutFirstSheetBackgroundName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x87, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4697)
inline _bstr_t TGDraft::ToleranceTable::GetAdditionalSheetsBackgroundName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x88, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4698)
inline void TGDraft::ToleranceTable::PutAdditionalSheetsBackgroundName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x88, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4699)
inline VARIANT_BOOL TGDraft::ToleranceTable::GetShowSheetBackground ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x89, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4700)
inline void TGDraft::ToleranceTable::PutShowSheetBackground ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x89, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4701)
inline VARIANT_BOOL TGDraft::ToleranceTable::GetMaintainSheetsWithTableSize ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4702)
inline void TGDraft::ToleranceTable::PutMaintainSheetsWithTableSize ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4703)
inline VARIANT_BOOL TGDraft::ToleranceTable::GetEnableGroups ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4704)
inline void TGDraft::ToleranceTable::PutEnableGroups ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4705)
inline TGDraft::TableGroupsPtr TGDraft::ToleranceTable::GetGroups ( ) {
    struct TableGroups * _result = 0;
    _com_dispatch_method(this, 0x8c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableGroupsPtr(_result, false);
}

#pragma implementation_key(4706)
inline VARIANT_BOOL TGDraft::ToleranceTable::GetWrapDataCellsToNewRow ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4707)
inline void TGDraft::ToleranceTable::PutWrapDataCellsToNewRow ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4708)
inline VARIANT_BOOL TGDraft::ToleranceTable::GetFillEndOfTableWithBlankRows ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4709)
inline void TGDraft::ToleranceTable::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4710)
inline long TGDraft::ToleranceTable::GetGroupByColumn ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4711)
inline void TGDraft::ToleranceTable::PutGroupByColumn ( long _arg1 ) {
    _com_dispatch_method(this, 0x8f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4712)
inline double TGDraft::ToleranceTable::GetTitleFixedRowHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x90, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4713)
inline void TGDraft::ToleranceTable::PutTitleFixedRowHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x90, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4714)
inline double TGDraft::ToleranceTable::GetMarginHorizontal ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x91, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4715)
inline void TGDraft::ToleranceTable::PutMarginHorizontal ( double _arg1 ) {
    _com_dispatch_method(this, 0x91, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4716)
inline double TGDraft::ToleranceTable::GetMarginVertical ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x92, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4717)
inline void TGDraft::ToleranceTable::PutMarginVertical ( double _arg1 ) {
    _com_dispatch_method(this, 0x92, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4718)
inline _bstr_t TGDraft::ToleranceTable::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x94, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

//
// interface _IToleranceTablesAuto wrapper method implementations
//

#pragma implementation_key(4719)
inline TGFramework::ApplicationPtr TGDraft::_IToleranceTablesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4720)
inline long TGDraft::_IToleranceTablesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4721)
inline TGDraft::ToleranceTablePtr TGDraft::_IToleranceTablesAuto::Item ( const _variant_t & Index ) {
    struct ToleranceTable * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ToleranceTablePtr(_result, false);
}

#pragma implementation_key(4722)
inline IUnknownPtr TGDraft::_IToleranceTablesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4723)
inline TGDraft::ToleranceTablePtr TGDraft::_IToleranceTablesAuto::AddByActiveSheet ( _bstr_t SavedSettings ) {
    struct ToleranceTable * _result = 0;
    HRESULT _hr = raw_AddByActiveSheet(SavedSettings, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ToleranceTablePtr(_result, false);
}

#pragma implementation_key(4724)
inline TGDraft::ToleranceTablePtr TGDraft::_IToleranceTablesAuto::AddByDrawingView ( struct DrawingView * DrawingView, _bstr_t SavedSettings, long DimensionsInView ) {
    struct ToleranceTable * _result = 0;
    HRESULT _hr = raw_AddByDrawingView(DrawingView, SavedSettings, DimensionsInView, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ToleranceTablePtr(_result, false);
}

#pragma implementation_key(4725)
inline TGDraft::ToleranceTablePtr TGDraft::_IToleranceTablesAuto::AddByUserSelection ( _bstr_t SavedSettings ) {
    struct ToleranceTable * _result = 0;
    HRESULT _hr = raw_AddByUserSelection(SavedSettings, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ToleranceTablePtr(_result, false);
}

#pragma implementation_key(4726)
inline IDispatchPtr TGDraft::_IToleranceTablesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// interface _IToleranceTableAuto wrapper method implementations
//

#pragma implementation_key(4727)
inline TGFramework::ApplicationPtr TGDraft::_IToleranceTableAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4728)
inline HRESULT TGDraft::_IToleranceTableAuto::Update ( ) {
    HRESULT _hr = raw_Update();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4729)
inline HRESULT TGDraft::_IToleranceTableAuto::CopyToClipboard ( ) {
    HRESULT _hr = raw_CopyToClipboard();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4730)
inline HRESULT TGDraft::_IToleranceTableAuto::SourceDimensions ( SAFEARRAY * * ppDimensions ) {
    HRESULT _hr = raw_SourceDimensions(ppDimensions);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4731)
inline HRESULT TGDraft::_IToleranceTableAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4732)
inline void TGDraft::_IToleranceTableAuto::PutSavedSettings ( _bstr_t _arg1 ) {
    HRESULT _hr = put_SavedSettings(_arg1);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4733)
inline IDispatchPtr TGDraft::_IToleranceTableAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4734)
inline VARIANT_BOOL TGDraft::_IToleranceTableAuto::GetIncludeDimensionsInView ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IncludeDimensionsInView(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4735)
inline void TGDraft::_IToleranceTableAuto::PutIncludeDimensionsInView ( VARIANT_BOOL value ) {
    HRESULT _hr = put_IncludeDimensionsInView(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4736)
inline HRESULT TGDraft::_IToleranceTableAuto::SetOrigin ( double x, double y ) {
    HRESULT _hr = raw_SetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4737)
inline HRESULT TGDraft::_IToleranceTableAuto::GetOrigin ( double * x, double * y ) {
    HRESULT _hr = raw_GetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4738)
inline HRESULT TGDraft::_IToleranceTableAuto::GetListOfSavedSettings ( long * NumSavedSettings, SAFEARRAY * * ListOfSavedSettings ) {
    HRESULT _hr = raw_GetListOfSavedSettings(NumSavedSettings, ListOfSavedSettings);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4739)
inline VARIANT_BOOL TGDraft::_IToleranceTableAuto::GetIsUpToDate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsUpToDate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4740)
inline HRESULT TGDraft::_IToleranceTableAuto::ConvertToTable ( ) {
    HRESULT _hr = raw_ConvertToTable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4741)
inline TGDraft::TableCellPtr TGDraft::_IToleranceTableAuto::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex ) {
    struct TableCell * _result = 0;
    HRESULT _hr = get_Cell(RowIndex, ColumnIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableCellPtr(_result, false);
}

#pragma implementation_key(4742)
inline enum TGDraft::TitlePosition TGDraft::_IToleranceTableAuto::GetColumnHeaderPosition ( ) {
    enum TitlePosition _result;
    HRESULT _hr = get_ColumnHeaderPosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4743)
inline void TGDraft::_IToleranceTableAuto::PutColumnHeaderPosition ( enum TitlePosition ColumnHeaderPosition ) {
    HRESULT _hr = put_ColumnHeaderPosition(ColumnHeaderPosition);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4744)
inline TGDraft::TableColumnsPtr TGDraft::_IToleranceTableAuto::GetColumns ( ) {
    struct TableColumns * _result = 0;
    HRESULT _hr = get_Columns(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableColumnsPtr(_result, false);
}

#pragma implementation_key(4745)
inline double TGDraft::_IToleranceTableAuto::GetMargin ( ) {
    double _result = 0;
    HRESULT _hr = get_Margin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4746)
inline void TGDraft::_IToleranceTableAuto::PutMargin ( double Margin ) {
    HRESULT _hr = put_Margin(Margin);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4747)
inline long TGDraft::_IToleranceTableAuto::GetMaximumRows ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4748)
inline void TGDraft::_IToleranceTableAuto::PutMaximumRows ( long MaximumRows ) {
    HRESULT _hr = put_MaximumRows(MaximumRows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4749)
inline double TGDraft::_IToleranceTableAuto::GetPageGap ( ) {
    double _result = 0;
    HRESULT _hr = get_PageGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4750)
inline void TGDraft::_IToleranceTableAuto::PutPageGap ( double PageGap ) {
    HRESULT _hr = put_PageGap(PageGap);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4751)
inline VARIANT_BOOL TGDraft::_IToleranceTableAuto::GetReverseDisplayOrder ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ReverseDisplayOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4752)
inline void TGDraft::_IToleranceTableAuto::PutReverseDisplayOrder ( VARIANT_BOOL ReverseDisplayOrder ) {
    HRESULT _hr = put_ReverseDisplayOrder(ReverseDisplayOrder);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4753)
inline TGDraft::TableRowsPtr TGDraft::_IToleranceTableAuto::GetRows ( ) {
    struct TableRows * _result = 0;
    HRESULT _hr = get_Rows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableRowsPtr(_result, false);
}

#pragma implementation_key(4754)
inline VARIANT_BOOL TGDraft::_IToleranceTableAuto::GetShowColumnHeader ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowColumnHeader(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4755)
inline void TGDraft::_IToleranceTableAuto::PutShowColumnHeader ( VARIANT_BOOL ShowColumnHeader ) {
    HRESULT _hr = put_ShowColumnHeader(ShowColumnHeader);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4756)
inline _bstr_t TGDraft::_IToleranceTableAuto::GetTableStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TableStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4757)
inline void TGDraft::_IToleranceTableAuto::PutTableStyle ( _bstr_t TableStyle ) {
    HRESULT _hr = put_TableStyle(TableStyle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4758)
inline TGDraft::TableTitlesPtr TGDraft::_IToleranceTableAuto::GetTitles ( ) {
    struct TableTitles * _result = 0;
    HRESULT _hr = get_Titles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableTitlesPtr(_result, false);
}

#pragma implementation_key(4759)
inline enum TGDraft::TableAnchorPoint TGDraft::_IToleranceTableAuto::GetAnchorPoint ( ) {
    enum TableAnchorPoint _result;
    HRESULT _hr = get_AnchorPoint(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4760)
inline void TGDraft::_IToleranceTableAuto::PutAnchorPoint ( enum TableAnchorPoint AnchorPoint ) {
    HRESULT _hr = put_AnchorPoint(AnchorPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4761)
inline TGDraft::TablePagesPtr TGDraft::_IToleranceTableAuto::GetPages ( ) {
    struct TablePages * _result = 0;
    HRESULT _hr = get_Pages(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TablePagesPtr(_result, false);
}

#pragma implementation_key(4762)
inline double TGDraft::_IToleranceTableAuto::GetHeaderFixedRowHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_HeaderFixedRowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4763)
inline void TGDraft::_IToleranceTableAuto::PutHeaderFixedRowHeight ( double HeaderFixedRowHeight ) {
    HRESULT _hr = put_HeaderFixedRowHeight(HeaderFixedRowHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4764)
inline double TGDraft::_IToleranceTableAuto::GetDataFixedRowHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_DataFixedRowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4765)
inline void TGDraft::_IToleranceTableAuto::PutDataFixedRowHeight ( double DataFixedRowHeight ) {
    HRESULT _hr = put_DataFixedRowHeight(DataFixedRowHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4766)
inline double TGDraft::_IToleranceTableAuto::GetMaximumHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4767)
inline void TGDraft::_IToleranceTableAuto::PutMaximumHeight ( double MaximumHeight ) {
    HRESULT _hr = put_MaximumHeight(MaximumHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4768)
inline long TGDraft::_IToleranceTableAuto::GetNumberOfHeaderRows ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfHeaderRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4769)
inline void TGDraft::_IToleranceTableAuto::PutNumberOfHeaderRows ( long NumberOfHeaderRows ) {
    HRESULT _hr = put_NumberOfHeaderRows(NumberOfHeaderRows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4770)
inline long TGDraft::_IToleranceTableAuto::GetMaximumRowsFirstPage ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumRowsFirstPage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4771)
inline void TGDraft::_IToleranceTableAuto::PutMaximumRowsFirstPage ( long MaximumRowsFirstPage ) {
    HRESULT _hr = put_MaximumRowsFirstPage(MaximumRowsFirstPage);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4772)
inline long TGDraft::_IToleranceTableAuto::GetMaximumRowsAdditionalPages ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumRowsAdditionalPages(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4773)
inline void TGDraft::_IToleranceTableAuto::PutMaximumRowsAdditionalPages ( long MaximumRowsAdditionalPages ) {
    HRESULT _hr = put_MaximumRowsAdditionalPages(MaximumRowsAdditionalPages);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4774)
inline double TGDraft::_IToleranceTableAuto::GetMaximumHeightFirstPage ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumHeightFirstPage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4775)
inline void TGDraft::_IToleranceTableAuto::PutMaximumHeightFirstPage ( double MaximumHeightFirstPage ) {
    HRESULT _hr = put_MaximumHeightFirstPage(MaximumHeightFirstPage);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4776)
inline double TGDraft::_IToleranceTableAuto::GetMaximumHeightAdditionalPages ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumHeightAdditionalPages(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4777)
inline void TGDraft::_IToleranceTableAuto::PutMaximumHeightAdditionalPages ( double MaximumHeightAdditionalPages ) {
    HRESULT _hr = put_MaximumHeightAdditionalPages(MaximumHeightAdditionalPages);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4778)
inline VARIANT_BOOL TGDraft::_IToleranceTableAuto::GetCreateNewSheetsForTable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CreateNewSheetsForTable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4779)
inline void TGDraft::_IToleranceTableAuto::PutCreateNewSheetsForTable ( VARIANT_BOOL CreateNewSheetsForTable ) {
    HRESULT _hr = put_CreateNewSheetsForTable(CreateNewSheetsForTable);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4780)
inline _bstr_t TGDraft::_IToleranceTableAuto::GetFirstSheetBackgroundName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FirstSheetBackgroundName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4781)
inline void TGDraft::_IToleranceTableAuto::PutFirstSheetBackgroundName ( _bstr_t FirstSheetBackgroundName ) {
    HRESULT _hr = put_FirstSheetBackgroundName(FirstSheetBackgroundName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4782)
inline _bstr_t TGDraft::_IToleranceTableAuto::GetAdditionalSheetsBackgroundName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AdditionalSheetsBackgroundName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4783)
inline void TGDraft::_IToleranceTableAuto::PutAdditionalSheetsBackgroundName ( _bstr_t AdditionalSheetsBackgroundName ) {
    HRESULT _hr = put_AdditionalSheetsBackgroundName(AdditionalSheetsBackgroundName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4784)
inline VARIANT_BOOL TGDraft::_IToleranceTableAuto::GetShowSheetBackground ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowSheetBackground(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4785)
inline void TGDraft::_IToleranceTableAuto::PutShowSheetBackground ( VARIANT_BOOL ShowSheetBackground ) {
    HRESULT _hr = put_ShowSheetBackground(ShowSheetBackground);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4786)
inline VARIANT_BOOL TGDraft::_IToleranceTableAuto::GetMaintainSheetsWithTableSize ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MaintainSheetsWithTableSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4787)
inline void TGDraft::_IToleranceTableAuto::PutMaintainSheetsWithTableSize ( VARIANT_BOOL MaintainSheetsWithTableSize ) {
    HRESULT _hr = put_MaintainSheetsWithTableSize(MaintainSheetsWithTableSize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4788)
inline VARIANT_BOOL TGDraft::_IToleranceTableAuto::GetEnableGroups ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_EnableGroups(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4789)
inline void TGDraft::_IToleranceTableAuto::PutEnableGroups ( VARIANT_BOOL EnableGroups ) {
    HRESULT _hr = put_EnableGroups(EnableGroups);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4790)
inline TGDraft::TableGroupsPtr TGDraft::_IToleranceTableAuto::GetGroups ( ) {
    struct TableGroups * _result = 0;
    HRESULT _hr = get_Groups(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableGroupsPtr(_result, false);
}

#pragma implementation_key(4791)
inline VARIANT_BOOL TGDraft::_IToleranceTableAuto::GetWrapDataCellsToNewRow ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WrapDataCellsToNewRow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4792)
inline void TGDraft::_IToleranceTableAuto::PutWrapDataCellsToNewRow ( VARIANT_BOOL WrapDataCellsToNewRow ) {
    HRESULT _hr = put_WrapDataCellsToNewRow(WrapDataCellsToNewRow);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4793)
inline VARIANT_BOOL TGDraft::_IToleranceTableAuto::GetFillEndOfTableWithBlankRows ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_FillEndOfTableWithBlankRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4794)
inline void TGDraft::_IToleranceTableAuto::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL FillEndOfTableWithBlankRows ) {
    HRESULT _hr = put_FillEndOfTableWithBlankRows(FillEndOfTableWithBlankRows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4795)
inline long TGDraft::_IToleranceTableAuto::GetGroupByColumn ( ) {
    long _result = 0;
    HRESULT _hr = get_GroupByColumn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4796)
inline void TGDraft::_IToleranceTableAuto::PutGroupByColumn ( long ColumnIndex ) {
    HRESULT _hr = put_GroupByColumn(ColumnIndex);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4797)
inline double TGDraft::_IToleranceTableAuto::GetTitleFixedRowHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_TitleFixedRowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4798)
inline void TGDraft::_IToleranceTableAuto::PutTitleFixedRowHeight ( double TitleFixedRowHeight ) {
    HRESULT _hr = put_TitleFixedRowHeight(TitleFixedRowHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4799)
inline double TGDraft::_IToleranceTableAuto::GetMarginHorizontal ( ) {
    double _result = 0;
    HRESULT _hr = get_MarginHorizontal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4800)
inline void TGDraft::_IToleranceTableAuto::PutMarginHorizontal ( double MarginHorizontal ) {
    HRESULT _hr = put_MarginHorizontal(MarginHorizontal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4801)
inline double TGDraft::_IToleranceTableAuto::GetMarginVertical ( ) {
    double _result = 0;
    HRESULT _hr = get_MarginVertical(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4802)
inline void TGDraft::_IToleranceTableAuto::PutMarginVertical ( double MarginVertical ) {
    HRESULT _hr = put_MarginVertical(MarginVertical);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4803)
inline _bstr_t TGDraft::_IToleranceTableAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// dispinterface HoleTables2 wrapper method implementations
//

#pragma implementation_key(4804)
inline TGFramework::ApplicationPtr TGDraft::HoleTables2::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4805)
inline long TGDraft::HoleTables2::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4806)
inline TGDraft::HoleTable2Ptr TGDraft::HoleTables2::Item ( const _variant_t & Index ) {
    struct HoleTable2 * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return HoleTable2Ptr(_result, false);
}

#pragma implementation_key(4807)
inline TGDraft::HoleTable2Ptr TGDraft::HoleTables2::Add ( _bstr_t SavedSettings, enum HoleTableType TableType ) {
    struct HoleTable2 * _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0003", (BSTR)SavedSettings, TableType);
    return HoleTable2Ptr(_result, false);
}

#pragma implementation_key(4808)
inline IDispatchPtr TGDraft::HoleTables2::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// dispinterface HoleTable2 wrapper method implementations
//

#pragma implementation_key(4809)
inline TGFramework::ApplicationPtr TGDraft::HoleTable2::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4810)
inline HRESULT TGDraft::HoleTable2::AddNewXYorigin ( IUnknown * pElement ) {
    return _com_dispatch_method(this, 0xa1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000d", pElement);
}

#pragma implementation_key(4811)
inline HRESULT TGDraft::HoleTable2::AddNewXYoriginEx ( IUnknown * pElement, enum KeypointIndexConstants KeyPointIndex ) {
    return _com_dispatch_method(this, 0xb7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000d\x0003", pElement, KeyPointIndex);
}

#pragma implementation_key(4812)
inline HRESULT TGDraft::HoleTable2::AddHole ( IUnknown * pElement, const _variant_t & Index ) {
    return _com_dispatch_method(this, 0xa2, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000d\x000c", pElement, &Index);
}

#pragma implementation_key(4813)
inline HRESULT TGDraft::HoleTable2::RemoveXYorigin ( const _variant_t & Index ) {
    return _com_dispatch_method(this, 0xb5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c", &Index);
}

#pragma implementation_key(4814)
inline HRESULT TGDraft::HoleTable2::RemoveHole ( IUnknown * pElement ) {
    return _com_dispatch_method(this, 0xb4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000d", pElement);
}

#pragma implementation_key(4815)
inline HRESULT TGDraft::HoleTable2::AttachDrawingView ( struct DrawingView * DrawingView ) {
    return _com_dispatch_method(this, 0xa3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", DrawingView);
}

#pragma implementation_key(4816)
inline unsigned long TGDraft::HoleTable2::GetOriginCount ( ) {
    unsigned long _result = 0;
    _com_dispatch_method(this, 0xa4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4817)
inline HRESULT TGDraft::HoleTable2::GetHoles ( const _variant_t & Index, SAFEARRAY * * ppHoles ) {
    return _com_dispatch_method(this, 0xa5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c\x6009", &Index, ppHoles);
}

#pragma implementation_key(4818)
inline HRESULT TGDraft::HoleTable2::Update ( ) {
    return _com_dispatch_method(this, 0x66, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4819)
inline HRESULT TGDraft::HoleTable2::CopyToClipboard ( ) {
    return _com_dispatch_method(this, 0x67, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4820)
inline HRESULT TGDraft::HoleTable2::Delete ( ) {
    return _com_dispatch_method(this, 0x6a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4821)
inline void TGDraft::HoleTable2::PutSavedSettings ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4822)
inline IDispatchPtr TGDraft::HoleTable2::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4823)
inline HRESULT TGDraft::HoleTable2::SetOrigin ( double x, double y ) {
    return _com_dispatch_method(this, 0x6d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(4824)
inline HRESULT TGDraft::HoleTable2::GetOrigin ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x6c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(4825)
inline HRESULT TGDraft::HoleTable2::GetListOfSavedSettings ( long * NumSavedSettings, SAFEARRAY * * ListOfSavedSettings ) {
    return _com_dispatch_method(this, 0x6e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6008", NumSavedSettings, ListOfSavedSettings);
}

#pragma implementation_key(4826)
inline VARIANT_BOOL TGDraft::HoleTable2::GetIsUpToDate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4827)
inline HRESULT TGDraft::HoleTable2::ConvertToTable ( ) {
    return _com_dispatch_method(this, 0x80, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4828)
inline TGDraft::TableCellPtr TGDraft::HoleTable2::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex ) {
    struct TableCell * _result = 0;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000c\x000c", &RowIndex, &ColumnIndex);
    return TableCellPtr(_result, false);
}

#pragma implementation_key(4829)
inline enum TGDraft::TitlePosition TGDraft::HoleTable2::GetColumnHeaderPosition ( ) {
    enum TitlePosition _result;
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4830)
inline void TGDraft::HoleTable2::PutColumnHeaderPosition ( enum TitlePosition _arg1 ) {
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4831)
inline TGDraft::TableColumnsPtr TGDraft::HoleTable2::GetColumns ( ) {
    struct TableColumns * _result = 0;
    _com_dispatch_method(this, 0x73, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableColumnsPtr(_result, false);
}

#pragma implementation_key(4832)
inline double TGDraft::HoleTable2::GetMargin ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4833)
inline void TGDraft::HoleTable2::PutMargin ( double _arg1 ) {
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4834)
inline long TGDraft::HoleTable2::GetMaximumRows ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4835)
inline void TGDraft::HoleTable2::PutMaximumRows ( long _arg1 ) {
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4836)
inline double TGDraft::HoleTable2::GetPageGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4837)
inline void TGDraft::HoleTable2::PutPageGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4838)
inline VARIANT_BOOL TGDraft::HoleTable2::GetReverseDisplayOrder ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4839)
inline void TGDraft::HoleTable2::PutReverseDisplayOrder ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x7b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4840)
inline TGDraft::TableRowsPtr TGDraft::HoleTable2::GetRows ( ) {
    struct TableRows * _result = 0;
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableRowsPtr(_result, false);
}

#pragma implementation_key(4841)
inline VARIANT_BOOL TGDraft::HoleTable2::GetShowColumnHeader ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4842)
inline void TGDraft::HoleTable2::PutShowColumnHeader ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x7d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4843)
inline _bstr_t TGDraft::HoleTable2::GetTableStyle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4844)
inline void TGDraft::HoleTable2::PutTableStyle ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x7e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4845)
inline TGDraft::TableTitlesPtr TGDraft::HoleTable2::GetTitles ( ) {
    struct TableTitles * _result = 0;
    _com_dispatch_method(this, 0x7f, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableTitlesPtr(_result, false);
}

#pragma implementation_key(4846)
inline enum TGDraft::TableAnchorPoint TGDraft::HoleTable2::GetAnchorPoint ( ) {
    enum TableAnchorPoint _result;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4847)
inline void TGDraft::HoleTable2::PutAnchorPoint ( enum TableAnchorPoint _arg1 ) {
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4848)
inline TGDraft::TablePagesPtr TGDraft::HoleTable2::GetPages ( ) {
    struct TablePages * _result = 0;
    _com_dispatch_method(this, 0x7a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TablePagesPtr(_result, false);
}

#pragma implementation_key(4849)
inline double TGDraft::HoleTable2::GetHeaderFixedRowHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x75, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4850)
inline void TGDraft::HoleTable2::PutHeaderFixedRowHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x75, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4851)
inline double TGDraft::HoleTable2::GetDataFixedRowHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x74, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4852)
inline void TGDraft::HoleTable2::PutDataFixedRowHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x74, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4853)
inline double TGDraft::HoleTable2::GetMaximumHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4854)
inline void TGDraft::HoleTable2::PutMaximumHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4855)
inline long TGDraft::HoleTable2::GetNumberOfHeaderRows ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4856)
inline void TGDraft::HoleTable2::PutNumberOfHeaderRows ( long _arg1 ) {
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4857)
inline long TGDraft::HoleTable2::GetMaximumRowsFirstPage ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x82, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4858)
inline void TGDraft::HoleTable2::PutMaximumRowsFirstPage ( long _arg1 ) {
    _com_dispatch_method(this, 0x82, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4859)
inline long TGDraft::HoleTable2::GetMaximumRowsAdditionalPages ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x83, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4860)
inline void TGDraft::HoleTable2::PutMaximumRowsAdditionalPages ( long _arg1 ) {
    _com_dispatch_method(this, 0x83, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4861)
inline double TGDraft::HoleTable2::GetMaximumHeightFirstPage ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x84, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4862)
inline void TGDraft::HoleTable2::PutMaximumHeightFirstPage ( double _arg1 ) {
    _com_dispatch_method(this, 0x84, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4863)
inline double TGDraft::HoleTable2::GetMaximumHeightAdditionalPages ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x85, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4864)
inline void TGDraft::HoleTable2::PutMaximumHeightAdditionalPages ( double _arg1 ) {
    _com_dispatch_method(this, 0x85, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4865)
inline VARIANT_BOOL TGDraft::HoleTable2::GetCreateNewSheetsForTable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x86, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4866)
inline void TGDraft::HoleTable2::PutCreateNewSheetsForTable ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x86, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4867)
inline _bstr_t TGDraft::HoleTable2::GetFirstSheetBackgroundName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x87, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4868)
inline void TGDraft::HoleTable2::PutFirstSheetBackgroundName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x87, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4869)
inline _bstr_t TGDraft::HoleTable2::GetAdditionalSheetsBackgroundName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x88, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4870)
inline void TGDraft::HoleTable2::PutAdditionalSheetsBackgroundName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x88, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4871)
inline VARIANT_BOOL TGDraft::HoleTable2::GetShowSheetBackground ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x89, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4872)
inline void TGDraft::HoleTable2::PutShowSheetBackground ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x89, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4873)
inline VARIANT_BOOL TGDraft::HoleTable2::GetMaintainSheetsWithTableSize ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4874)
inline void TGDraft::HoleTable2::PutMaintainSheetsWithTableSize ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4875)
inline VARIANT_BOOL TGDraft::HoleTable2::GetEnableGroups ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4876)
inline void TGDraft::HoleTable2::PutEnableGroups ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4877)
inline TGDraft::TableGroupsPtr TGDraft::HoleTable2::GetGroups ( ) {
    struct TableGroups * _result = 0;
    _com_dispatch_method(this, 0x8c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableGroupsPtr(_result, false);
}

#pragma implementation_key(4878)
inline VARIANT_BOOL TGDraft::HoleTable2::GetWrapDataCellsToNewRow ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4879)
inline void TGDraft::HoleTable2::PutWrapDataCellsToNewRow ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4880)
inline VARIANT_BOOL TGDraft::HoleTable2::GetFillEndOfTableWithBlankRows ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4881)
inline void TGDraft::HoleTable2::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4882)
inline long TGDraft::HoleTable2::GetGroupByColumn ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4883)
inline void TGDraft::HoleTable2::PutGroupByColumn ( long _arg1 ) {
    _com_dispatch_method(this, 0x8f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4884)
inline double TGDraft::HoleTable2::GetTitleFixedRowHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4885)
inline void TGDraft::HoleTable2::PutTitleFixedRowHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4886)
inline double TGDraft::HoleTable2::GetMarginHorizontal ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x90, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4887)
inline void TGDraft::HoleTable2::PutMarginHorizontal ( double _arg1 ) {
    _com_dispatch_method(this, 0x90, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4888)
inline double TGDraft::HoleTable2::GetMarginVertical ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x91, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4889)
inline void TGDraft::HoleTable2::PutMarginVertical ( double _arg1 ) {
    _com_dispatch_method(this, 0x91, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4890)
inline VARIANT_BOOL TGDraft::HoleTable2::GetListByOrigin ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x92, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4891)
inline void TGDraft::HoleTable2::PutListByOrigin ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x92, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4892)
inline VARIANT_BOOL TGDraft::HoleTable2::GetListEachHole ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x93, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4893)
inline void TGDraft::HoleTable2::PutListEachHole ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x93, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4894)
inline VARIANT_BOOL TGDraft::HoleTable2::GetListEachHoleSize ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x94, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4895)
inline void TGDraft::HoleTable2::PutListEachHoleSize ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x94, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4896)
inline VARIANT_BOOL TGDraft::HoleTable2::GetShowOriginOrGroupName ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x95, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4897)
inline void TGDraft::HoleTable2::PutShowOriginOrGroupName ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x95, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4898)
inline VARIANT_BOOL TGDraft::HoleTable2::GetRenumberOnUpdate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x96, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4899)
inline void TGDraft::HoleTable2::PutRenumberOnUpdate ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x96, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4900)
inline VARIANT_BOOL TGDraft::HoleTable2::GetKeepDeletedHoles ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x97, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4901)
inline void TGDraft::HoleTable2::PutKeepDeletedHoles ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x97, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4902)
inline VARIANT_BOOL TGDraft::HoleTable2::GetShowIndexOnBlankRows ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x98, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4903)
inline void TGDraft::HoleTable2::PutShowIndexOnBlankRows ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x98, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4904)
inline VARIANT_BOOL TGDraft::HoleTable2::GetCenterMark ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x99, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4905)
inline void TGDraft::HoleTable2::PutCenterMark ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x99, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4906)
inline VARIANT_BOOL TGDraft::HoleTable2::GetCenterMarkProjectionLines ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x9a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4907)
inline void TGDraft::HoleTable2::PutCenterMarkProjectionLines ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x9a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4908)
inline VARIANT_BOOL TGDraft::HoleTable2::GetShowAnnotation ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x9b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4909)
inline void TGDraft::HoleTable2::PutShowAnnotation ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x9b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4910)
inline enum TGDraft::HoleTableAnnotPosition TGDraft::HoleTable2::GetAnnotationPosition ( ) {
    enum HoleTableAnnotPosition _result;
    _com_dispatch_method(this, 0x9c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4911)
inline void TGDraft::HoleTable2::PutAnnotationPosition ( enum HoleTableAnnotPosition _arg1 ) {
    _com_dispatch_method(this, 0x9c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4912)
inline double TGDraft::HoleTable2::GetAnnotationOffset ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x9d, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4913)
inline void TGDraft::HoleTable2::PutAnnotationOffset ( double _arg1 ) {
    _com_dispatch_method(this, 0x9d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4914)
inline enum TGDraft::HoleTableDelimiterType TGDraft::HoleTable2::GetAnnotationDelimeterType ( ) {
    enum HoleTableDelimiterType _result;
    _com_dispatch_method(this, 0x9e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4915)
inline void TGDraft::HoleTable2::PutAnnotationDelimeterType ( enum HoleTableDelimiterType _arg1 ) {
    _com_dispatch_method(this, 0x9e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4916)
inline VARIANT_BOOL TGDraft::HoleTable2::GetLeader ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x9f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4917)
inline void TGDraft::HoleTable2::PutLeader ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x9f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4918)
inline VARIANT_BOOL TGDraft::HoleTable2::GetBreakLine ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xa0, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4919)
inline void TGDraft::HoleTable2::PutBreakLine ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xa0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4920)
inline HRESULT TGDraft::HoleTable2::GetHoleTableCalloutText ( enum HoleTableCalloutType calloutType, enum HTHoleTypeConstants holeType, BSTR * pCalloutText ) {
    return _com_dispatch_method(this, 0xa6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x4008", calloutType, holeType, pCalloutText);
}

#pragma implementation_key(4921)
inline HRESULT TGDraft::HoleTable2::SetHoleTableCalloutText ( enum HoleTableCalloutType calloutType, enum HTHoleTypeConstants holeType, _bstr_t CalloutText ) {
    return _com_dispatch_method(this, 0xa7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0008", calloutType, holeType, (BSTR)CalloutText);
}

#pragma implementation_key(4922)
inline _bstr_t TGDraft::HoleTable2::GetSmartDepthHoleThru ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xa8, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4923)
inline void TGDraft::HoleTable2::PutSmartDepthHoleThru ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xa8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4924)
inline _bstr_t TGDraft::HoleTable2::GetSmartDepthHoleFinite ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xa9, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4925)
inline void TGDraft::HoleTable2::PutSmartDepthHoleFinite ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xa9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4926)
inline _bstr_t TGDraft::HoleTable2::GetSmartDepthThreadThru ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xaa, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4927)
inline void TGDraft::HoleTable2::PutSmartDepthThreadThru ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xaa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4928)
inline _bstr_t TGDraft::HoleTable2::GetSmartDepthThreadFinite ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xab, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4929)
inline void TGDraft::HoleTable2::PutSmartDepthThreadFinite ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xab, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4930)
inline enum TGDraft::HoleTable2PrimaryLinearUnit TGDraft::HoleTable2::GetPrimaryLinearUnits ( ) {
    enum HoleTable2PrimaryLinearUnit _result;
    _com_dispatch_method(this, 0xac, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4931)
inline void TGDraft::HoleTable2::PutPrimaryLinearUnits ( enum HoleTable2PrimaryLinearUnit _arg1 ) {
    _com_dispatch_method(this, 0xac, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4932)
inline enum TGDraft::HoleTable2DecimalRoundOffTypeConstants TGDraft::HoleTable2::GetPrimaryLinearDecimalRoundOff ( ) {
    enum HoleTable2DecimalRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0xad, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4933)
inline void TGDraft::HoleTable2::PutPrimaryLinearDecimalRoundOff ( enum HoleTable2DecimalRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0xad, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4934)
inline enum TGDraft::HoleTableDelimiterType TGDraft::HoleTable2::GetPrimaryDelimiter ( ) {
    enum HoleTableDelimiterType _result;
    _com_dispatch_method(this, 0xae, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4935)
inline void TGDraft::HoleTable2::PutPrimaryDelimiter ( enum HoleTableDelimiterType _arg1 ) {
    _com_dispatch_method(this, 0xae, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4936)
inline enum TGDraft::HoleTable2AngularUnit TGDraft::HoleTable2::GetPrimaryAngularUnits ( ) {
    enum HoleTable2AngularUnit _result;
    _com_dispatch_method(this, 0xaf, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4937)
inline void TGDraft::HoleTable2::PutPrimaryAngularUnits ( enum HoleTable2AngularUnit _arg1 ) {
    _com_dispatch_method(this, 0xaf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4938)
inline enum TGDraft::HoleTable2DMSRoundOffTypeConstants TGDraft::HoleTable2::GetPrimaryAngularDMSRoundOff ( ) {
    enum HoleTable2DMSRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0xb0, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4939)
inline void TGDraft::HoleTable2::PutPrimaryAngularDMSRoundOff ( enum HoleTable2DMSRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0xb0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4940)
inline enum TGDraft::HoleTable2DecimalRoundOffTypeConstants TGDraft::HoleTable2::GetPrimaryAngularDecimalRoundOff ( ) {
    enum HoleTable2DecimalRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0xb1, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4941)
inline void TGDraft::HoleTable2::PutPrimaryAngularDecimalRoundOff ( enum HoleTable2DecimalRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0xb1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4942)
inline VARIANT_BOOL TGDraft::HoleTable2::GetPrimaryLeadingZeros ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xb2, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4943)
inline void TGDraft::HoleTable2::PutPrimaryLeadingZeros ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xb2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4944)
inline VARIANT_BOOL TGDraft::HoleTable2::GetPrimaryTrailingZeros ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xb3, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4945)
inline void TGDraft::HoleTable2::PutPrimaryTrailingZeros ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xb3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4946)
inline enum TGDraft::HoleTableType TGDraft::HoleTable2::GetHoleTableType ( ) {
    enum HoleTableType _result;
    _com_dispatch_method(this, 0xb6, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4947)
inline HRESULT TGDraft::HoleTable2::GetXYorigin ( const _variant_t & Index, IUnknown * * pElement, enum KeypointIndexConstants * KeyPointIndex ) {
    return _com_dispatch_method(this, 0xb8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c\x400d\x4003", &Index, pElement, KeyPointIndex);
}

#pragma implementation_key(4948)
inline VARIANT_BOOL TGDraft::HoleTable2::GetShowHoleTableOrigin ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xb9, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4949)
inline void TGDraft::HoleTable2::PutShowHoleTableOrigin ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xb9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4950)
inline _bstr_t TGDraft::HoleTable2::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xba, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

//
// interface _IHoleTables2Auto wrapper method implementations
//

#pragma implementation_key(4951)
inline TGFramework::ApplicationPtr TGDraft::_IHoleTables2Auto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4952)
inline long TGDraft::_IHoleTables2Auto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4953)
inline TGDraft::HoleTable2Ptr TGDraft::_IHoleTables2Auto::Item ( const _variant_t & Index ) {
    struct HoleTable2 * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return HoleTable2Ptr(_result, false);
}

#pragma implementation_key(4954)
inline IUnknownPtr TGDraft::_IHoleTables2Auto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4955)
inline TGDraft::HoleTable2Ptr TGDraft::_IHoleTables2Auto::Add ( _bstr_t SavedSettings, enum HoleTableType TableType ) {
    struct HoleTable2 * _result = 0;
    HRESULT _hr = raw_Add(SavedSettings, TableType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return HoleTable2Ptr(_result, false);
}

#pragma implementation_key(4956)
inline IDispatchPtr TGDraft::_IHoleTables2Auto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// interface _IHoleTable2Auto wrapper method implementations
//

#pragma implementation_key(4957)
inline TGFramework::ApplicationPtr TGDraft::_IHoleTable2Auto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4958)
inline HRESULT TGDraft::_IHoleTable2Auto::AddNewXYorigin ( IUnknown * pElement ) {
    HRESULT _hr = raw_AddNewXYorigin(pElement);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4959)
inline HRESULT TGDraft::_IHoleTable2Auto::AddNewXYoriginEx ( IUnknown * pElement, enum KeypointIndexConstants KeyPointIndex ) {
    HRESULT _hr = raw_AddNewXYoriginEx(pElement, KeyPointIndex);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4960)
inline HRESULT TGDraft::_IHoleTable2Auto::AddHole ( IUnknown * pElement, const _variant_t & Index ) {
    HRESULT _hr = raw_AddHole(pElement, Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4961)
inline HRESULT TGDraft::_IHoleTable2Auto::RemoveXYorigin ( const _variant_t & Index ) {
    HRESULT _hr = raw_RemoveXYorigin(Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4962)
inline HRESULT TGDraft::_IHoleTable2Auto::RemoveHole ( IUnknown * pElement ) {
    HRESULT _hr = raw_RemoveHole(pElement);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4963)
inline HRESULT TGDraft::_IHoleTable2Auto::AttachDrawingView ( struct DrawingView * DrawingView ) {
    HRESULT _hr = raw_AttachDrawingView(DrawingView);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4964)
inline unsigned long TGDraft::_IHoleTable2Auto::GetOriginCount ( ) {
    unsigned long _result = 0;
    HRESULT _hr = get_OriginCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4965)
inline HRESULT TGDraft::_IHoleTable2Auto::GetHoles ( const _variant_t & Index, SAFEARRAY * * ppHoles ) {
    HRESULT _hr = raw_GetHoles(Index, ppHoles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4966)
inline HRESULT TGDraft::_IHoleTable2Auto::Update ( ) {
    HRESULT _hr = raw_Update();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4967)
inline HRESULT TGDraft::_IHoleTable2Auto::CopyToClipboard ( ) {
    HRESULT _hr = raw_CopyToClipboard();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4968)
inline HRESULT TGDraft::_IHoleTable2Auto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4969)
inline void TGDraft::_IHoleTable2Auto::PutSavedSettings ( _bstr_t _arg1 ) {
    HRESULT _hr = put_SavedSettings(_arg1);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4970)
inline IDispatchPtr TGDraft::_IHoleTable2Auto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4971)
inline HRESULT TGDraft::_IHoleTable2Auto::SetOrigin ( double x, double y ) {
    HRESULT _hr = raw_SetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4972)
inline HRESULT TGDraft::_IHoleTable2Auto::GetOrigin ( double * x, double * y ) {
    HRESULT _hr = raw_GetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4973)
inline HRESULT TGDraft::_IHoleTable2Auto::GetListOfSavedSettings ( long * NumSavedSettings, SAFEARRAY * * ListOfSavedSettings ) {
    HRESULT _hr = raw_GetListOfSavedSettings(NumSavedSettings, ListOfSavedSettings);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4974)
inline VARIANT_BOOL TGDraft::_IHoleTable2Auto::GetIsUpToDate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsUpToDate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4975)
inline HRESULT TGDraft::_IHoleTable2Auto::ConvertToTable ( ) {
    HRESULT _hr = raw_ConvertToTable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4976)
inline TGDraft::TableCellPtr TGDraft::_IHoleTable2Auto::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex ) {
    struct TableCell * _result = 0;
    HRESULT _hr = get_Cell(RowIndex, ColumnIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableCellPtr(_result, false);
}

#pragma implementation_key(4977)
inline enum TGDraft::TitlePosition TGDraft::_IHoleTable2Auto::GetColumnHeaderPosition ( ) {
    enum TitlePosition _result;
    HRESULT _hr = get_ColumnHeaderPosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4978)
inline void TGDraft::_IHoleTable2Auto::PutColumnHeaderPosition ( enum TitlePosition ColumnHeaderPosition ) {
    HRESULT _hr = put_ColumnHeaderPosition(ColumnHeaderPosition);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4979)
inline TGDraft::TableColumnsPtr TGDraft::_IHoleTable2Auto::GetColumns ( ) {
    struct TableColumns * _result = 0;
    HRESULT _hr = get_Columns(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableColumnsPtr(_result, false);
}

#pragma implementation_key(4980)
inline double TGDraft::_IHoleTable2Auto::GetMargin ( ) {
    double _result = 0;
    HRESULT _hr = get_Margin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4981)
inline void TGDraft::_IHoleTable2Auto::PutMargin ( double Margin ) {
    HRESULT _hr = put_Margin(Margin);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4982)
inline long TGDraft::_IHoleTable2Auto::GetMaximumRows ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4983)
inline void TGDraft::_IHoleTable2Auto::PutMaximumRows ( long MaximumRows ) {
    HRESULT _hr = put_MaximumRows(MaximumRows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4984)
inline double TGDraft::_IHoleTable2Auto::GetPageGap ( ) {
    double _result = 0;
    HRESULT _hr = get_PageGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4985)
inline void TGDraft::_IHoleTable2Auto::PutPageGap ( double PageGap ) {
    HRESULT _hr = put_PageGap(PageGap);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4986)
inline VARIANT_BOOL TGDraft::_IHoleTable2Auto::GetReverseDisplayOrder ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ReverseDisplayOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4987)
inline void TGDraft::_IHoleTable2Auto::PutReverseDisplayOrder ( VARIANT_BOOL ReverseDisplayOrder ) {
    HRESULT _hr = put_ReverseDisplayOrder(ReverseDisplayOrder);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4988)
inline TGDraft::TableRowsPtr TGDraft::_IHoleTable2Auto::GetRows ( ) {
    struct TableRows * _result = 0;
    HRESULT _hr = get_Rows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableRowsPtr(_result, false);
}

#pragma implementation_key(4989)
inline VARIANT_BOOL TGDraft::_IHoleTable2Auto::GetShowColumnHeader ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowColumnHeader(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4990)
inline void TGDraft::_IHoleTable2Auto::PutShowColumnHeader ( VARIANT_BOOL ShowColumnHeader ) {
    HRESULT _hr = put_ShowColumnHeader(ShowColumnHeader);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4991)
inline _bstr_t TGDraft::_IHoleTable2Auto::GetTableStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TableStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4992)
inline void TGDraft::_IHoleTable2Auto::PutTableStyle ( _bstr_t TableStyle ) {
    HRESULT _hr = put_TableStyle(TableStyle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4993)
inline TGDraft::TableTitlesPtr TGDraft::_IHoleTable2Auto::GetTitles ( ) {
    struct TableTitles * _result = 0;
    HRESULT _hr = get_Titles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableTitlesPtr(_result, false);
}

#pragma implementation_key(4994)
inline enum TGDraft::TableAnchorPoint TGDraft::_IHoleTable2Auto::GetAnchorPoint ( ) {
    enum TableAnchorPoint _result;
    HRESULT _hr = get_AnchorPoint(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4995)
inline void TGDraft::_IHoleTable2Auto::PutAnchorPoint ( enum TableAnchorPoint AnchorPoint ) {
    HRESULT _hr = put_AnchorPoint(AnchorPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4996)
inline TGDraft::TablePagesPtr TGDraft::_IHoleTable2Auto::GetPages ( ) {
    struct TablePages * _result = 0;
    HRESULT _hr = get_Pages(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TablePagesPtr(_result, false);
}

#pragma implementation_key(4997)
inline double TGDraft::_IHoleTable2Auto::GetHeaderFixedRowHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_HeaderFixedRowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4998)
inline void TGDraft::_IHoleTable2Auto::PutHeaderFixedRowHeight ( double HeaderFixedRowHeight ) {
    HRESULT _hr = put_HeaderFixedRowHeight(HeaderFixedRowHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4999)
inline double TGDraft::_IHoleTable2Auto::GetDataFixedRowHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_DataFixedRowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5000)
inline void TGDraft::_IHoleTable2Auto::PutDataFixedRowHeight ( double DataFixedRowHeight ) {
    HRESULT _hr = put_DataFixedRowHeight(DataFixedRowHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5001)
inline double TGDraft::_IHoleTable2Auto::GetMaximumHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5002)
inline void TGDraft::_IHoleTable2Auto::PutMaximumHeight ( double MaximumHeight ) {
    HRESULT _hr = put_MaximumHeight(MaximumHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5003)
inline long TGDraft::_IHoleTable2Auto::GetNumberOfHeaderRows ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfHeaderRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5004)
inline void TGDraft::_IHoleTable2Auto::PutNumberOfHeaderRows ( long NumberOfHeaderRows ) {
    HRESULT _hr = put_NumberOfHeaderRows(NumberOfHeaderRows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5005)
inline long TGDraft::_IHoleTable2Auto::GetMaximumRowsFirstPage ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumRowsFirstPage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5006)
inline void TGDraft::_IHoleTable2Auto::PutMaximumRowsFirstPage ( long MaximumRowsFirstPage ) {
    HRESULT _hr = put_MaximumRowsFirstPage(MaximumRowsFirstPage);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5007)
inline long TGDraft::_IHoleTable2Auto::GetMaximumRowsAdditionalPages ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumRowsAdditionalPages(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5008)
inline void TGDraft::_IHoleTable2Auto::PutMaximumRowsAdditionalPages ( long MaximumRowsAdditionalPages ) {
    HRESULT _hr = put_MaximumRowsAdditionalPages(MaximumRowsAdditionalPages);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5009)
inline double TGDraft::_IHoleTable2Auto::GetMaximumHeightFirstPage ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumHeightFirstPage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5010)
inline void TGDraft::_IHoleTable2Auto::PutMaximumHeightFirstPage ( double MaximumHeightFirstPage ) {
    HRESULT _hr = put_MaximumHeightFirstPage(MaximumHeightFirstPage);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5011)
inline double TGDraft::_IHoleTable2Auto::GetMaximumHeightAdditionalPages ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumHeightAdditionalPages(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5012)
inline void TGDraft::_IHoleTable2Auto::PutMaximumHeightAdditionalPages ( double MaximumHeightAdditionalPages ) {
    HRESULT _hr = put_MaximumHeightAdditionalPages(MaximumHeightAdditionalPages);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5013)
inline VARIANT_BOOL TGDraft::_IHoleTable2Auto::GetCreateNewSheetsForTable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CreateNewSheetsForTable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5014)
inline void TGDraft::_IHoleTable2Auto::PutCreateNewSheetsForTable ( VARIANT_BOOL CreateNewSheetsForTable ) {
    HRESULT _hr = put_CreateNewSheetsForTable(CreateNewSheetsForTable);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5015)
inline _bstr_t TGDraft::_IHoleTable2Auto::GetFirstSheetBackgroundName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FirstSheetBackgroundName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5016)
inline void TGDraft::_IHoleTable2Auto::PutFirstSheetBackgroundName ( _bstr_t FirstSheetBackgroundName ) {
    HRESULT _hr = put_FirstSheetBackgroundName(FirstSheetBackgroundName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5017)
inline _bstr_t TGDraft::_IHoleTable2Auto::GetAdditionalSheetsBackgroundName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AdditionalSheetsBackgroundName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5018)
inline void TGDraft::_IHoleTable2Auto::PutAdditionalSheetsBackgroundName ( _bstr_t AdditionalSheetsBackgroundName ) {
    HRESULT _hr = put_AdditionalSheetsBackgroundName(AdditionalSheetsBackgroundName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5019)
inline VARIANT_BOOL TGDraft::_IHoleTable2Auto::GetShowSheetBackground ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowSheetBackground(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5020)
inline void TGDraft::_IHoleTable2Auto::PutShowSheetBackground ( VARIANT_BOOL ShowSheetBackground ) {
    HRESULT _hr = put_ShowSheetBackground(ShowSheetBackground);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5021)
inline VARIANT_BOOL TGDraft::_IHoleTable2Auto::GetMaintainSheetsWithTableSize ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MaintainSheetsWithTableSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5022)
inline void TGDraft::_IHoleTable2Auto::PutMaintainSheetsWithTableSize ( VARIANT_BOOL MaintainSheetsWithTableSize ) {
    HRESULT _hr = put_MaintainSheetsWithTableSize(MaintainSheetsWithTableSize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5023)
inline VARIANT_BOOL TGDraft::_IHoleTable2Auto::GetEnableGroups ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_EnableGroups(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5024)
inline void TGDraft::_IHoleTable2Auto::PutEnableGroups ( VARIANT_BOOL EnableGroups ) {
    HRESULT _hr = put_EnableGroups(EnableGroups);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5025)
inline TGDraft::TableGroupsPtr TGDraft::_IHoleTable2Auto::GetGroups ( ) {
    struct TableGroups * _result = 0;
    HRESULT _hr = get_Groups(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableGroupsPtr(_result, false);
}

#pragma implementation_key(5026)
inline VARIANT_BOOL TGDraft::_IHoleTable2Auto::GetWrapDataCellsToNewRow ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WrapDataCellsToNewRow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5027)
inline void TGDraft::_IHoleTable2Auto::PutWrapDataCellsToNewRow ( VARIANT_BOOL WrapDataCellsToNewRow ) {
    HRESULT _hr = put_WrapDataCellsToNewRow(WrapDataCellsToNewRow);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5028)
inline VARIANT_BOOL TGDraft::_IHoleTable2Auto::GetFillEndOfTableWithBlankRows ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_FillEndOfTableWithBlankRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5029)
inline void TGDraft::_IHoleTable2Auto::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL FillEndOfTableWithBlankRows ) {
    HRESULT _hr = put_FillEndOfTableWithBlankRows(FillEndOfTableWithBlankRows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5030)
inline long TGDraft::_IHoleTable2Auto::GetGroupByColumn ( ) {
    long _result = 0;
    HRESULT _hr = get_GroupByColumn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5031)
inline void TGDraft::_IHoleTable2Auto::PutGroupByColumn ( long ColumnIndex ) {
    HRESULT _hr = put_GroupByColumn(ColumnIndex);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5032)
inline double TGDraft::_IHoleTable2Auto::GetTitleFixedRowHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_TitleFixedRowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5033)
inline void TGDraft::_IHoleTable2Auto::PutTitleFixedRowHeight ( double TitleFixedRowHeight ) {
    HRESULT _hr = put_TitleFixedRowHeight(TitleFixedRowHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5034)
inline double TGDraft::_IHoleTable2Auto::GetMarginHorizontal ( ) {
    double _result = 0;
    HRESULT _hr = get_MarginHorizontal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5035)
inline void TGDraft::_IHoleTable2Auto::PutMarginHorizontal ( double MarginHorizontal ) {
    HRESULT _hr = put_MarginHorizontal(MarginHorizontal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5036)
inline double TGDraft::_IHoleTable2Auto::GetMarginVertical ( ) {
    double _result = 0;
    HRESULT _hr = get_MarginVertical(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5037)
inline void TGDraft::_IHoleTable2Auto::PutMarginVertical ( double MarginVertical ) {
    HRESULT _hr = put_MarginVertical(MarginVertical);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5038)
inline VARIANT_BOOL TGDraft::_IHoleTable2Auto::GetListByOrigin ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ListByOrigin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5039)
inline void TGDraft::_IHoleTable2Auto::PutListByOrigin ( VARIANT_BOOL ListByOrigin ) {
    HRESULT _hr = put_ListByOrigin(ListByOrigin);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5040)
inline VARIANT_BOOL TGDraft::_IHoleTable2Auto::GetListEachHole ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ListEachHole(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5041)
inline void TGDraft::_IHoleTable2Auto::PutListEachHole ( VARIANT_BOOL ListEachHole ) {
    HRESULT _hr = put_ListEachHole(ListEachHole);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5042)
inline VARIANT_BOOL TGDraft::_IHoleTable2Auto::GetListEachHoleSize ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ListEachHoleSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5043)
inline void TGDraft::_IHoleTable2Auto::PutListEachHoleSize ( VARIANT_BOOL ListEachHoleSize ) {
    HRESULT _hr = put_ListEachHoleSize(ListEachHoleSize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5044)
inline VARIANT_BOOL TGDraft::_IHoleTable2Auto::GetShowOriginOrGroupName ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowOriginOrGroupName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5045)
inline void TGDraft::_IHoleTable2Auto::PutShowOriginOrGroupName ( VARIANT_BOOL ShowOriginOrGroupName ) {
    HRESULT _hr = put_ShowOriginOrGroupName(ShowOriginOrGroupName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5046)
inline VARIANT_BOOL TGDraft::_IHoleTable2Auto::GetRenumberOnUpdate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_RenumberOnUpdate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5047)
inline void TGDraft::_IHoleTable2Auto::PutRenumberOnUpdate ( VARIANT_BOOL RenumberOnUpdate ) {
    HRESULT _hr = put_RenumberOnUpdate(RenumberOnUpdate);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5048)
inline VARIANT_BOOL TGDraft::_IHoleTable2Auto::GetKeepDeletedHoles ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_KeepDeletedHoles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5049)
inline void TGDraft::_IHoleTable2Auto::PutKeepDeletedHoles ( VARIANT_BOOL KeepDeletedHoles ) {
    HRESULT _hr = put_KeepDeletedHoles(KeepDeletedHoles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5050)
inline VARIANT_BOOL TGDraft::_IHoleTable2Auto::GetShowIndexOnBlankRows ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowIndexOnBlankRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5051)
inline void TGDraft::_IHoleTable2Auto::PutShowIndexOnBlankRows ( VARIANT_BOOL ShowIndexOnBlankRows ) {
    HRESULT _hr = put_ShowIndexOnBlankRows(ShowIndexOnBlankRows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5052)
inline VARIANT_BOOL TGDraft::_IHoleTable2Auto::GetCenterMark ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CenterMark(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5053)
inline void TGDraft::_IHoleTable2Auto::PutCenterMark ( VARIANT_BOOL CenterMark ) {
    HRESULT _hr = put_CenterMark(CenterMark);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5054)
inline VARIANT_BOOL TGDraft::_IHoleTable2Auto::GetCenterMarkProjectionLines ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CenterMarkProjectionLines(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5055)
inline void TGDraft::_IHoleTable2Auto::PutCenterMarkProjectionLines ( VARIANT_BOOL CenterMarkProjectionLines ) {
    HRESULT _hr = put_CenterMarkProjectionLines(CenterMarkProjectionLines);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5056)
inline VARIANT_BOOL TGDraft::_IHoleTable2Auto::GetShowAnnotation ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowAnnotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5057)
inline void TGDraft::_IHoleTable2Auto::PutShowAnnotation ( VARIANT_BOOL ShowAnnotation ) {
    HRESULT _hr = put_ShowAnnotation(ShowAnnotation);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5058)
inline enum TGDraft::HoleTableAnnotPosition TGDraft::_IHoleTable2Auto::GetAnnotationPosition ( ) {
    enum HoleTableAnnotPosition _result;
    HRESULT _hr = get_AnnotationPosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5059)
inline void TGDraft::_IHoleTable2Auto::PutAnnotationPosition ( enum HoleTableAnnotPosition AnnotationPosition ) {
    HRESULT _hr = put_AnnotationPosition(AnnotationPosition);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5060)
inline double TGDraft::_IHoleTable2Auto::GetAnnotationOffset ( ) {
    double _result = 0;
    HRESULT _hr = get_AnnotationOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5061)
inline void TGDraft::_IHoleTable2Auto::PutAnnotationOffset ( double offset ) {
    HRESULT _hr = put_AnnotationOffset(offset);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5062)
inline enum TGDraft::HoleTableDelimiterType TGDraft::_IHoleTable2Auto::GetAnnotationDelimeterType ( ) {
    enum HoleTableDelimiterType _result;
    HRESULT _hr = get_AnnotationDelimeterType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5063)
inline void TGDraft::_IHoleTable2Auto::PutAnnotationDelimeterType ( enum HoleTableDelimiterType AnnotationDelimeterType ) {
    HRESULT _hr = put_AnnotationDelimeterType(AnnotationDelimeterType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5064)
inline VARIANT_BOOL TGDraft::_IHoleTable2Auto::GetLeader ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Leader(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5065)
inline void TGDraft::_IHoleTable2Auto::PutLeader ( VARIANT_BOOL Leader ) {
    HRESULT _hr = put_Leader(Leader);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5066)
inline VARIANT_BOOL TGDraft::_IHoleTable2Auto::GetBreakLine ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BreakLine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5067)
inline void TGDraft::_IHoleTable2Auto::PutBreakLine ( VARIANT_BOOL BreakLine ) {
    HRESULT _hr = put_BreakLine(BreakLine);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5068)
inline HRESULT TGDraft::_IHoleTable2Auto::GetHoleTableCalloutText ( enum HoleTableCalloutType calloutType, enum HTHoleTypeConstants holeType, BSTR * pCalloutText ) {
    HRESULT _hr = raw_GetHoleTableCalloutText(calloutType, holeType, pCalloutText);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5069)
inline HRESULT TGDraft::_IHoleTable2Auto::SetHoleTableCalloutText ( enum HoleTableCalloutType calloutType, enum HTHoleTypeConstants holeType, _bstr_t CalloutText ) {
    HRESULT _hr = raw_SetHoleTableCalloutText(calloutType, holeType, CalloutText);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5070)
inline _bstr_t TGDraft::_IHoleTable2Auto::GetSmartDepthHoleThru ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SmartDepthHoleThru(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5071)
inline void TGDraft::_IHoleTable2Auto::PutSmartDepthHoleThru ( _bstr_t HoleThru ) {
    HRESULT _hr = put_SmartDepthHoleThru(HoleThru);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5072)
inline _bstr_t TGDraft::_IHoleTable2Auto::GetSmartDepthHoleFinite ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SmartDepthHoleFinite(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5073)
inline void TGDraft::_IHoleTable2Auto::PutSmartDepthHoleFinite ( _bstr_t HoleFinite ) {
    HRESULT _hr = put_SmartDepthHoleFinite(HoleFinite);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5074)
inline _bstr_t TGDraft::_IHoleTable2Auto::GetSmartDepthThreadThru ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SmartDepthThreadThru(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5075)
inline void TGDraft::_IHoleTable2Auto::PutSmartDepthThreadThru ( _bstr_t ThreadThru ) {
    HRESULT _hr = put_SmartDepthThreadThru(ThreadThru);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5076)
inline _bstr_t TGDraft::_IHoleTable2Auto::GetSmartDepthThreadFinite ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SmartDepthThreadFinite(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5077)
inline void TGDraft::_IHoleTable2Auto::PutSmartDepthThreadFinite ( _bstr_t ThreadFinite ) {
    HRESULT _hr = put_SmartDepthThreadFinite(ThreadFinite);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5078)
inline enum TGDraft::HoleTable2PrimaryLinearUnit TGDraft::_IHoleTable2Auto::GetPrimaryLinearUnits ( ) {
    enum HoleTable2PrimaryLinearUnit _result;
    HRESULT _hr = get_PrimaryLinearUnits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5079)
inline void TGDraft::_IHoleTable2Auto::PutPrimaryLinearUnits ( enum HoleTable2PrimaryLinearUnit val ) {
    HRESULT _hr = put_PrimaryLinearUnits(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5080)
inline enum TGDraft::HoleTable2DecimalRoundOffTypeConstants TGDraft::_IHoleTable2Auto::GetPrimaryLinearDecimalRoundOff ( ) {
    enum HoleTable2DecimalRoundOffTypeConstants _result;
    HRESULT _hr = get_PrimaryLinearDecimalRoundOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5081)
inline void TGDraft::_IHoleTable2Auto::PutPrimaryLinearDecimalRoundOff ( enum HoleTable2DecimalRoundOffTypeConstants val ) {
    HRESULT _hr = put_PrimaryLinearDecimalRoundOff(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5082)
inline enum TGDraft::HoleTableDelimiterType TGDraft::_IHoleTable2Auto::GetPrimaryDelimiter ( ) {
    enum HoleTableDelimiterType _result;
    HRESULT _hr = get_PrimaryDelimiter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5083)
inline void TGDraft::_IHoleTable2Auto::PutPrimaryDelimiter ( enum HoleTableDelimiterType val ) {
    HRESULT _hr = put_PrimaryDelimiter(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5084)
inline enum TGDraft::HoleTable2AngularUnit TGDraft::_IHoleTable2Auto::GetPrimaryAngularUnits ( ) {
    enum HoleTable2AngularUnit _result;
    HRESULT _hr = get_PrimaryAngularUnits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5085)
inline void TGDraft::_IHoleTable2Auto::PutPrimaryAngularUnits ( enum HoleTable2AngularUnit val ) {
    HRESULT _hr = put_PrimaryAngularUnits(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5086)
inline enum TGDraft::HoleTable2DMSRoundOffTypeConstants TGDraft::_IHoleTable2Auto::GetPrimaryAngularDMSRoundOff ( ) {
    enum HoleTable2DMSRoundOffTypeConstants _result;
    HRESULT _hr = get_PrimaryAngularDMSRoundOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5087)
inline void TGDraft::_IHoleTable2Auto::PutPrimaryAngularDMSRoundOff ( enum HoleTable2DMSRoundOffTypeConstants val ) {
    HRESULT _hr = put_PrimaryAngularDMSRoundOff(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5088)
inline enum TGDraft::HoleTable2DecimalRoundOffTypeConstants TGDraft::_IHoleTable2Auto::GetPrimaryAngularDecimalRoundOff ( ) {
    enum HoleTable2DecimalRoundOffTypeConstants _result;
    HRESULT _hr = get_PrimaryAngularDecimalRoundOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5089)
inline void TGDraft::_IHoleTable2Auto::PutPrimaryAngularDecimalRoundOff ( enum HoleTable2DecimalRoundOffTypeConstants val ) {
    HRESULT _hr = put_PrimaryAngularDecimalRoundOff(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5090)
inline VARIANT_BOOL TGDraft::_IHoleTable2Auto::GetPrimaryLeadingZeros ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_PrimaryLeadingZeros(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5091)
inline void TGDraft::_IHoleTable2Auto::PutPrimaryLeadingZeros ( VARIANT_BOOL val ) {
    HRESULT _hr = put_PrimaryLeadingZeros(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5092)
inline VARIANT_BOOL TGDraft::_IHoleTable2Auto::GetPrimaryTrailingZeros ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_PrimaryTrailingZeros(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5093)
inline void TGDraft::_IHoleTable2Auto::PutPrimaryTrailingZeros ( VARIANT_BOOL val ) {
    HRESULT _hr = put_PrimaryTrailingZeros(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5094)
inline enum TGDraft::HoleTableType TGDraft::_IHoleTable2Auto::GetHoleTableType ( ) {
    enum HoleTableType _result;
    HRESULT _hr = get_HoleTableType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5095)
inline HRESULT TGDraft::_IHoleTable2Auto::GetXYorigin ( const _variant_t & Index, IUnknown * * pElement, enum KeypointIndexConstants * KeyPointIndex ) {
    HRESULT _hr = raw_GetXYorigin(Index, pElement, KeyPointIndex);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5096)
inline VARIANT_BOOL TGDraft::_IHoleTable2Auto::GetShowHoleTableOrigin ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowHoleTableOrigin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5097)
inline void TGDraft::_IHoleTable2Auto::PutShowHoleTableOrigin ( VARIANT_BOOL ShowHoleTableOrigin ) {
    HRESULT _hr = put_ShowHoleTableOrigin(ShowHoleTableOrigin);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5098)
inline _bstr_t TGDraft::_IHoleTable2Auto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// dispinterface WeldTables wrapper method implementations
//

#pragma implementation_key(5099)
inline TGFramework::ApplicationPtr TGDraft::WeldTables::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5100)
inline long TGDraft::WeldTables::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5101)
inline TGDraft::WeldTablePtr TGDraft::WeldTables::Item ( const _variant_t & Index ) {
    struct WeldTable * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return WeldTablePtr(_result, false);
}

#pragma implementation_key(5102)
inline TGDraft::WeldTablePtr TGDraft::WeldTables::AddByActiveSheet ( _bstr_t SavedSettings, long isMerge ) {
    struct WeldTable * _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0003", (BSTR)SavedSettings, isMerge);
    return WeldTablePtr(_result, false);
}

#pragma implementation_key(5103)
inline TGDraft::WeldTablePtr TGDraft::WeldTables::AddByDrawingView ( struct DrawingView * DrawingView, _bstr_t SavedSettings, long DimensionsInView, long isMerge ) {
    struct WeldTable * _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0008\x0003\x0003", DrawingView, (BSTR)SavedSettings, DimensionsInView, isMerge);
    return WeldTablePtr(_result, false);
}

#pragma implementation_key(5104)
inline TGDraft::WeldTablePtr TGDraft::WeldTables::AddByUserSelection ( _bstr_t SavedSettings, long isMerge ) {
    struct WeldTable * _result = 0;
    _com_dispatch_method(this, 0x6a, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0003", (BSTR)SavedSettings, isMerge);
    return WeldTablePtr(_result, false);
}

#pragma implementation_key(5105)
inline IDispatchPtr TGDraft::WeldTables::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// interface _IDraftDocumentAuto wrapper method implementations
//

#pragma implementation_key(5106)
inline HRESULT TGDraft::_IDraftDocumentAuto::Activate ( ) {
    HRESULT _hr = raw_Activate();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5107)
inline TGFramework::ApplicationPtr TGDraft::_IDraftDocumentAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5108)
inline HRESULT TGDraft::_IDraftDocumentAuto::Close ( const _variant_t & SaveChanges, const _variant_t & FileName, const _variant_t & RouteWorkbook ) {
    HRESULT _hr = raw_Close(SaveChanges, FileName, RouteWorkbook);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5109)
inline _bstr_t TGDraft::_IDraftDocumentAuto::GetFullName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FullName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5110)
inline _bstr_t TGDraft::_IDraftDocumentAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5111)
inline TGFramework::ApplicationPtr TGDraft::_IDraftDocumentAuto::GetParent ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5112)
inline _bstr_t TGDraft::_IDraftDocumentAuto::GetPath ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Path(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5113)
inline HRESULT TGDraft::_IDraftDocumentAuto::PrintOut ( const _variant_t & Printer, const _variant_t & NumCopies, const _variant_t & Orientation, const _variant_t & PaperSize, const _variant_t & Scale, const _variant_t & PrintToFile, const _variant_t & OutputFileName, const _variant_t & PrintRange, const _variant_t & Sheets, const _variant_t & ColorAsBlack, const _variant_t & Collate ) {
    HRESULT _hr = raw_PrintOut(Printer, NumCopies, Orientation, PaperSize, Scale, PrintToFile, OutputFileName, PrintRange, Sheets, ColorAsBlack, Collate);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5114)
inline VARIANT_BOOL TGDraft::_IDraftDocumentAuto::GetReadOnly ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ReadOnly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5115)
inline IDispatchPtr TGDraft::_IDraftDocumentAuto::GetRoutingSlip ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_RoutingSlip(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5116)
inline HRESULT TGDraft::_IDraftDocumentAuto::Save ( ) {
    HRESULT _hr = raw_Save();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5117)
inline HRESULT TGDraft::_IDraftDocumentAuto::SaveAs ( _bstr_t NewName, const _variant_t & IsATemplate, const _variant_t & FileFormat, const _variant_t & ReadOnlyEnforced, const _variant_t & ReadOnlyRecommended, const _variant_t & NewStatus, const _variant_t & CreateBackup, const _variant_t & UpdateLinkInContainer, const _variant_t & UpdateAllLinksInContainer ) {
    HRESULT _hr = raw_SaveAs(NewName, IsATemplate, FileFormat, ReadOnlyEnforced, ReadOnlyRecommended, NewStatus, CreateBackup, UpdateLinkInContainer, UpdateAllLinksInContainer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5118)
inline HRESULT TGDraft::_IDraftDocumentAuto::SaveCopyAs ( _bstr_t Name ) {
    HRESULT _hr = raw_SaveCopyAs(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5119)
inline HRESULT TGDraft::_IDraftDocumentAuto::SaveAsJT ( _bstr_t NewName, const _variant_t & Include_PreciseGeom, const _variant_t & Prod_Structure_Option, const _variant_t & Export_PMI, const _variant_t & Export_CoordinateSystem, const _variant_t & Export_3DBodies, const _variant_t & NumberofLODs, const _variant_t & JTFileUnit, const _variant_t & Write_Which_Files, const _variant_t & Use_Simplified_TopAsm, const _variant_t & Use_Simplified_SubAsm, const _variant_t & Use_Simplified_Part, const _variant_t & EnableDefaultOutputPath, const _variant_t & IncludeSEProperties, const _variant_t & Export_VisiblePartsOnly, const _variant_t & Export_VisibleConstructionsOnly, const _variant_t & RemoveUnsafeCharacters, const _variant_t & ExportSEPartFileAsSingleJTFile ) {
    HRESULT _hr = raw_SaveAsJT(NewName, Include_PreciseGeom, Prod_Structure_Option, Export_PMI, Export_CoordinateSystem, Export_3DBodies, NumberofLODs, JTFileUnit, Write_Which_Files, Use_Simplified_TopAsm, Use_Simplified_SubAsm, Use_Simplified_Part, EnableDefaultOutputPath, IncludeSEProperties, Export_VisiblePartsOnly, Export_VisibleConstructionsOnly, RemoveUnsafeCharacters, ExportSEPartFileAsSingleJTFile);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5120)
inline _bstr_t TGDraft::_IDraftDocumentAuto::SaveAsBIDM ( _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title ) {
    BSTR _result = 0;
    HRESULT _hr = raw_SaveAsBIDM(FilePath, DocumentNumber, Revision, Title, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5121)
inline _bstr_t TGDraft::_IDraftDocumentAuto::ReviseBIDM ( _bstr_t FilePath, _bstr_t Revision, _bstr_t Title ) {
    BSTR _result = 0;
    HRESULT _hr = raw_ReviseBIDM(FilePath, Revision, Title, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5122)
inline TGFramework::SelectSetPtr TGDraft::_IDraftDocumentAuto::GetSelectSet ( ) {
    struct TGFramework::SelectSet * _result = 0;
    HRESULT _hr = get_SelectSet(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::SelectSetPtr(_result, false);
}

#pragma implementation_key(5123)
inline HRESULT TGDraft::_IDraftDocumentAuto::SendMail ( const _variant_t & Recipients, const _variant_t & Subject, const _variant_t & ReturnReceipt ) {
    HRESULT _hr = raw_SendMail(Recipients, Subject, ReturnReceipt);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5124)
inline IDispatchPtr TGDraft::_IDraftDocumentAuto::GetSummaryInfo ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_SummaryInfo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5125)
inline TGFramework::WindowsPtr TGDraft::_IDraftDocumentAuto::GetWindows ( ) {
    struct TGFramework::Windows * _result = 0;
    HRESULT _hr = get_Windows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::WindowsPtr(_result, false);
}

#pragma implementation_key(5126)
inline IDispatchPtr TGDraft::_IDraftDocumentAuto::GetProperties ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Properties(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5127)
inline VARIANT_BOOL TGDraft::_IDraftDocumentAuto::GetIsTemplate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsTemplate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5128)
inline void TGDraft::_IDraftDocumentAuto::PutIsTemplate ( VARIANT_BOOL IsTemplate ) {
    HRESULT _hr = put_IsTemplate(IsTemplate);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5129)
inline enum TGFramework::DocumentStatus TGDraft::_IDraftDocumentAuto::GetStatus ( ) {
    enum TGFramework::DocumentStatus _result;
    HRESULT _hr = get_Status(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5130)
inline void TGDraft::_IDraftDocumentAuto::PutStatus ( enum TGFramework::DocumentStatus Status ) {
    HRESULT _hr = put_Status(Status);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5131)
inline HRESULT TGDraft::_IDraftDocumentAuto::EditProperties ( ) {
    HRESULT _hr = raw_EditProperties();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5132)
inline TGFramework::UnitsOfMeasurePtr TGDraft::_IDraftDocumentAuto::GetUnitsOfMeasure ( ) {
    struct TGFramework::UnitsOfMeasure * _result = 0;
    HRESULT _hr = get_UnitsOfMeasure(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::UnitsOfMeasurePtr(_result, false);
}

#pragma implementation_key(5133)
inline IDispatchPtr TGDraft::_IDraftDocumentAuto::GetActiveSketch ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_ActiveSketch(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5134)
inline enum TGFramework::DocumentTypeConstants TGDraft::_IDraftDocumentAuto::GetType ( ) {
    enum TGFramework::DocumentTypeConstants _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5135)
inline IUnknownPtr TGDraft::_IDraftDocumentAuto::GetDocumentEvents ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_DocumentEvents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5136)
inline IUnknownPtr TGDraft::_IDraftDocumentAuto::GetRootStorage ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get_RootStorage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5137)
inline IUnknownPtr TGDraft::_IDraftDocumentAuto::GetAddInsStorage ( _bstr_t Name, long grfMode ) {
    IUnknown * _result = 0;
    HRESULT _hr = get_AddInsStorage(Name, grfMode, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5138)
inline VARIANT_BOOL TGDraft::_IDraftDocumentAuto::GetDirty ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Dirty(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5139)
inline void TGDraft::_IDraftDocumentAuto::PutDirty ( VARIANT_BOOL Dirty ) {
    HRESULT _hr = put_Dirty(Dirty);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5140)
inline TGFramework::AttributeQueryPtr TGDraft::_IDraftDocumentAuto::GetAttributeQuery ( ) {
    struct TGFramework::AttributeQuery * _result = 0;
    HRESULT _hr = get_AttributeQuery(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::AttributeQueryPtr(_result, false);
}

#pragma implementation_key(5141)
inline _bstr_t TGDraft::_IDraftDocumentAuto::GetCreatedVersion ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CreatedVersion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5142)
inline _bstr_t TGDraft::_IDraftDocumentAuto::GetLastSavedVersion ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LastSavedVersion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5143)
inline TGFramework::HighlightSetsPtr TGDraft::_IDraftDocumentAuto::GetHighlightSets ( ) {
    struct TGFramework::HighlightSets * _result = 0;
    HRESULT _hr = get_HighlightSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::HighlightSetsPtr(_result, false);
}

#pragma implementation_key(5144)
inline VARIANT_BOOL TGDraft::_IDraftDocumentAuto::GetInPlaceActivated ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_InPlaceActivated(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5145)
inline HRESULT TGDraft::_IDraftDocumentAuto::SeekWriteAccess ( VARIANT_BOOL * WriteAccess ) {
    HRESULT _hr = raw_SeekWriteAccess(WriteAccess);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5146)
inline long TGDraft::_IDraftDocumentAuto::GetUndoSteps ( ) {
    long _result = 0;
    HRESULT _hr = get_UndoSteps(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5147)
inline void TGDraft::_IDraftDocumentAuto::PutUndoSteps ( long NumberOfUndoSteps ) {
    HRESULT _hr = put_UndoSteps(NumberOfUndoSteps);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5148)
inline HRESULT TGDraft::_IDraftDocumentAuto::CreatePreview ( ) {
    HRESULT _hr = raw_CreatePreview();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5149)
inline void TGDraft::_IDraftDocumentAuto::PutReadOnly ( VARIANT_BOOL ReadOnly ) {
    HRESULT _hr = put_ReadOnly(ReadOnly);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5150)
inline HRESULT TGDraft::_IDraftDocumentAuto::SeekReadOnlyAccess ( VARIANT_BOOL * ReadOnlyAccess ) {
    HRESULT _hr = raw_SeekReadOnlyAccess(ReadOnlyAccess);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5151)
inline HRESULT TGDraft::_IDraftDocumentAuto::ImportStyles2 ( enum TGFramework::seStyleTypeConstants StyleType, VARIANT_BOOL bReplace, IDispatch * pSrcDocument ) {
    HRESULT _hr = raw_ImportStyles2(StyleType, bReplace, pSrcDocument);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5152)
inline VARIANT_BOOL TGDraft::_IDraftDocumentAuto::GetIsInsightFile ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsInsightFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5153)
inline TGFramework::NamedViewsPtr TGDraft::_IDraftDocumentAuto::GetNamedViews ( ) {
    struct TGFramework::NamedViews * _result = 0;
    HRESULT _hr = get_NamedViews(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::NamedViewsPtr(_result, false);
}

#pragma implementation_key(5154)
inline HRESULT TGDraft::_IDraftDocumentAuto::GetRegisteredCustomPropertiesBiDM ( VARIANT * varPropInfo ) {
    HRESULT _hr = raw_GetRegisteredCustomPropertiesBiDM(varPropInfo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5155)
inline _bstr_t TGDraft::_IDraftDocumentAuto::SaveAsWithCustomPropertiesBIDM ( _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title, const _variant_t & varPropInfo ) {
    BSTR _result = 0;
    HRESULT _hr = raw_SaveAsWithCustomPropertiesBIDM(FilePath, DocumentNumber, Revision, Title, varPropInfo, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5156)
inline _bstr_t TGDraft::_IDraftDocumentAuto::ReviseWithCustomPropertiesBIDM ( _bstr_t FilePath, _bstr_t Revision, _bstr_t Title, const _variant_t & varPropInfo ) {
    BSTR _result = 0;
    HRESULT _hr = raw_ReviseWithCustomPropertiesBIDM(FilePath, Revision, Title, varPropInfo, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5157)
inline HRESULT TGDraft::_IDraftDocumentAuto::SaveAsPRC ( _bstr_t FileName ) {
    HRESULT _hr = raw_SaveAsPRC(FileName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5158)
inline IDispatchPtr TGDraft::_IDraftDocumentAuto::GetVariables ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Variables(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5159)
inline _variant_t TGDraft::_IDraftDocumentAuto::NewWindow ( const _variant_t & NewWindowOptions, const _variant_t & Environment ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = raw_NewWindow(NewWindowOptions, Environment, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(5160)
inline TGDraft::SheetsPtr TGDraft::_IDraftDocumentAuto::GetSheets ( ) {
    struct Sheets * _result = 0;
    HRESULT _hr = get_Sheets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SheetsPtr(_result, false);
}

#pragma implementation_key(5161)
inline TGDraft::SectionsPtr TGDraft::_IDraftDocumentAuto::GetSections ( ) {
    struct Sections * _result = 0;
    HRESULT _hr = get_Sections(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SectionsPtr(_result, false);
}

#pragma implementation_key(5162)
inline TGDraft::SheetPtr TGDraft::_IDraftDocumentAuto::GetActiveSheet ( ) {
    struct Sheet * _result = 0;
    HRESULT _hr = get_ActiveSheet(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SheetPtr(_result, false);
}

#pragma implementation_key(5163)
inline TGDraft::SectionPtr TGDraft::_IDraftDocumentAuto::GetActiveSection ( ) {
    struct Section * _result = 0;
    HRESULT _hr = get_ActiveSection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SectionPtr(_result, false);
}

#pragma implementation_key(5164)
inline enum TGDraft::SheetSectionTypeConstants TGDraft::_IDraftDocumentAuto::GetActiveSectionType ( ) {
    enum SheetSectionTypeConstants _result;
    HRESULT _hr = get_ActiveSectionType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5165)
inline HRESULT TGDraft::_IDraftDocumentAuto::DimensionTrackerStatistics ( long * ChangedDimCount, long * DetachedDimCount ) {
    HRESULT _hr = raw_DimensionTrackerStatistics(ChangedDimCount, DetachedDimCount);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5166)
inline IDispatchPtr TGDraft::_IDraftDocumentAuto::GetLinearStyles ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_LinearStyles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5167)
inline IDispatchPtr TGDraft::_IDraftDocumentAuto::GetSmartFrame2dStyles ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_SmartFrame2dStyles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5168)
inline IDispatchPtr TGDraft::_IDraftDocumentAuto::GetTextStyles ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_TextStyles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5169)
inline IDispatchPtr TGDraft::_IDraftDocumentAuto::GetTextCharStyles ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_TextCharStyles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5170)
inline IDispatchPtr TGDraft::_IDraftDocumentAuto::GetFillStyles ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_FillStyles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5171)
inline IDispatchPtr TGDraft::_IDraftDocumentAuto::GetHatchPatternStyles ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_HatchPatternStyles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5172)
inline IDispatchPtr TGDraft::_IDraftDocumentAuto::GetDimensionStyles ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_DimensionStyles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5173)
inline IDispatchPtr TGDraft::_IDraftDocumentAuto::GetSymbolProperties ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_SymbolProperties(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5174)
inline TGDraft::ModelLinksPtr TGDraft::_IDraftDocumentAuto::GetModelLinks ( ) {
    struct ModelLinks * _result = 0;
    HRESULT _hr = get_ModelLinks(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ModelLinksPtr(_result, false);
}

#pragma implementation_key(5175)
inline TGFrameworkSupport::FeatureControlFrameDataSetsPtr TGDraft::_IDraftDocumentAuto::GetFeatureControlFrameDataSets ( ) {
    struct TGFrameworkSupport::FeatureControlFrameDataSets * _result = 0;
    HRESULT _hr = get_FeatureControlFrameDataSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::FeatureControlFrameDataSetsPtr(_result, false);
}

#pragma implementation_key(5176)
inline TGFrameworkSupport::SurfaceFinishSymbolDataSetsPtr TGDraft::_IDraftDocumentAuto::GetSurfaceFinishSymbolDataSets ( ) {
    struct TGFrameworkSupport::SurfaceFinishSymbolDataSets * _result = 0;
    HRESULT _hr = get_SurfaceFinishSymbolDataSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::SurfaceFinishSymbolDataSetsPtr(_result, false);
}

#pragma implementation_key(5177)
inline TGFrameworkSupport::WeldSymbolDataSetsPtr TGDraft::_IDraftDocumentAuto::GetWeldSymbolDataSets ( ) {
    struct TGFrameworkSupport::WeldSymbolDataSets * _result = 0;
    HRESULT _hr = get_WeldSymbolDataSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::WeldSymbolDataSetsPtr(_result, false);
}

#pragma implementation_key(5178)
inline TGDraft::PartsListsPtr TGDraft::_IDraftDocumentAuto::GetPartsLists ( ) {
    struct PartsLists * _result = 0;
    HRESULT _hr = get_PartsLists(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PartsListsPtr(_result, false);
}

#pragma implementation_key(5179)
inline IUnknownPtr TGDraft::_IDraftDocumentAuto::GetDrawingViewEvents ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_DrawingViewEvents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5180)
inline TGDraft::SheetPtr TGDraft::_IDraftDocumentAuto::GetActivePrintingSheet ( ) {
    struct Sheet * _result = 0;
    HRESULT _hr = get_ActivePrintingSheet(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SheetPtr(_result, false);
}

#pragma implementation_key(5181)
inline HRESULT TGDraft::_IDraftDocumentAuto::GetGlobalParameter ( enum DraftGlobalConstants Parameter, VARIANT * value ) {
    HRESULT _hr = raw_GetGlobalParameter(Parameter, value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5182)
inline HRESULT TGDraft::_IDraftDocumentAuto::SetGlobalParameter ( enum DraftGlobalConstants Parameter, const _variant_t & value ) {
    HRESULT _hr = raw_SetGlobalParameter(Parameter, value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5183)
inline TGDraft::HoleTablesPtr TGDraft::_IDraftDocumentAuto::GetHoleTables ( ) {
    struct HoleTables * _result = 0;
    HRESULT _hr = get_HoleTables(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return HoleTablesPtr(_result, false);
}

#pragma implementation_key(5184)
inline HRESULT TGDraft::_IDraftDocumentAuto::AnnotationTrackerStatistics ( long * ChangedAnnotationCount, long * DetachedAnnotationCount ) {
    HRESULT _hr = raw_AnnotationTrackerStatistics(ChangedAnnotationCount, DetachedAnnotationCount);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5185)
inline VARIANT_BOOL TGDraft::_IDraftDocumentAuto::GetMaintainRelationships ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MaintainRelationships(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5186)
inline void TGDraft::_IDraftDocumentAuto::PutMaintainRelationships ( VARIANT_BOOL Enabled ) {
    HRESULT _hr = put_MaintainRelationships(Enabled);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5187)
inline HRESULT TGDraft::_IDraftDocumentAuto::UpdatePropertyTextDisplay ( ) {
    HRESULT _hr = raw_UpdatePropertyTextDisplay();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5188)
inline HRESULT TGDraft::_IDraftDocumentAuto::UpdatePropertyTextCacheAndDisplay ( ) {
    HRESULT _hr = raw_UpdatePropertyTextCacheAndDisplay();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5189)
inline IUnknownPtr TGDraft::_IDraftDocumentAuto::GetPartsListEvents ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_PartsListEvents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5190)
inline IDispatchPtr TGDraft::_IDraftDocumentAuto::GetDashStyles ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_DashStyles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5191)
inline HRESULT TGDraft::_IDraftDocumentAuto::PopulateQuicksheetTemplate ( _bstr_t FileName ) {
    HRESULT _hr = raw_PopulateQuicksheetTemplate(FileName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5192)
inline long TGDraft::_IDraftDocumentAuto::GetQuicksheetTemplateCount ( ) {
    long _result = 0;
    HRESULT _hr = get_QuicksheetTemplateCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5193)
inline TGDraft::BlocksPtr TGDraft::_IDraftDocumentAuto::GetBlocks ( ) {
    struct Blocks * _result = 0;
    HRESULT _hr = get_Blocks(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BlocksPtr(_result, false);
}

#pragma implementation_key(5194)
inline TGDraft::TablesPtr TGDraft::_IDraftDocumentAuto::GetTables ( ) {
    struct Tables * _result = 0;
    HRESULT _hr = get_Tables(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TablesPtr(_result, false);
}

#pragma implementation_key(5195)
inline VARIANT_BOOL TGDraft::_IDraftDocumentAuto::GetInactiveDrawingViewMode ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_InactiveDrawingViewMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5196)
inline void TGDraft::_IDraftDocumentAuto::PutInactiveDrawingViewMode ( VARIANT_BOOL Enabled ) {
    HRESULT _hr = put_InactiveDrawingViewMode(Enabled);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5197)
inline HRESULT TGDraft::_IDraftDocumentAuto::DimensionTrackerStatisticsEx ( long * ChangedAnnotationCount, long * ChangedDimensionCount, long * DetachedAnnotationCount, long * DetachedDimensionCount, long * AnnotationsReattachedToAvailableGeometry, long * DimensionsReattachedToAvailableGeometry ) {
    HRESULT _hr = raw_DimensionTrackerStatisticsEx(ChangedAnnotationCount, ChangedDimensionCount, DetachedAnnotationCount, DetachedDimensionCount, AnnotationsReattachedToAvailableGeometry, DimensionsReattachedToAvailableGeometry);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5198)
inline HRESULT TGDraft::_IDraftDocumentAuto::DimensionTrackerNumEntries ( long * NumberOfEntries ) {
    HRESULT _hr = raw_DimensionTrackerNumEntries(NumberOfEntries);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5199)
inline HRESULT TGDraft::_IDraftDocumentAuto::DimensionTrackerEntry ( long Entry, long * BalloonID, IDispatch * * pObject, enum DimensionTrackerReasonCode * ReasonCode, double * PreviousValue, double * CurrentValue, BSTR * SheetName ) {
    HRESULT _hr = raw_DimensionTrackerEntry(Entry, BalloonID, pObject, ReasonCode, PreviousValue, CurrentValue, SheetName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5200)
inline HRESULT TGDraft::_IDraftDocumentAuto::GoalSeek ( _bstr_t NameTargetVariable, _bstr_t NameVariableToChange, double dTargetValue, double dTimeLimitInSecs, long NumIterationsLimit, double * dTimeElapsed, long * NumIterations, VARIANT_BOOL * TimeLimitExceeded, VARIANT_BOOL * IterationsLimitExceeded ) {
    HRESULT _hr = raw_GoalSeek(NameTargetVariable, NameVariableToChange, dTargetValue, dTimeLimitInSecs, NumIterationsLimit, dTimeElapsed, NumIterations, TimeLimitExceeded, IterationsLimitExceeded);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5201)
inline HRESULT TGDraft::_IDraftDocumentAuto::PrintOutEx ( const _variant_t & Printer, const _variant_t & NumCopies, const _variant_t & Orientation, const _variant_t & PaperSize, const _variant_t & Scale, const _variant_t & PrintToFile, const _variant_t & OutputFileName, const _variant_t & PrintRange, const _variant_t & Sheets, const _variant_t & ColorAsBlack, const _variant_t & Collate, const _variant_t & ScaleLineWidths, const _variant_t & ScaleLineTypes, const _variant_t & UsePrinterClipping ) {
    HRESULT _hr = raw_PrintOutEx(Printer, NumCopies, Orientation, PaperSize, Scale, PrintToFile, OutputFileName, PrintRange, Sheets, ColorAsBlack, Collate, ScaleLineWidths, ScaleLineTypes, UsePrinterClipping);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5202)
inline TGDraft::DraftBendTablesPtr TGDraft::_IDraftDocumentAuto::GetDraftBendTables ( ) {
    struct DraftBendTables * _result = 0;
    HRESULT _hr = get_DraftBendTables(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DraftBendTablesPtr(_result, false);
}

#pragma implementation_key(5203)
inline IUnknownPtr TGDraft::_IDraftDocumentAuto::GetDraftBendTableEvents ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_DraftBendTableEvents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5204)
inline TGDraft::DraftFilePreferencesPtr TGDraft::_IDraftDocumentAuto::GetFilePreferences ( ) {
    struct DraftFilePreferences * _result = 0;
    HRESULT _hr = get_FilePreferences(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DraftFilePreferencesPtr(_result, false);
}

#pragma implementation_key(5205)
inline TGFrameworkSupport::DrawingViewStylesPtr TGDraft::_IDraftDocumentAuto::GetDrawingViewStyles ( ) {
    struct TGFrameworkSupport::DrawingViewStyles * _result = 0;
    HRESULT _hr = get_DrawingViewStyles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::DrawingViewStylesPtr(_result, false);
}

#pragma implementation_key(5206)
inline VARIANT_BOOL TGDraft::_IDraftDocumentAuto::GetDisplayRelationshipHandles ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayRelationshipHandles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5207)
inline void TGDraft::_IDraftDocumentAuto::PutDisplayRelationshipHandles ( VARIANT_BOOL Displayed ) {
    HRESULT _hr = put_DisplayRelationshipHandles(Displayed);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5208)
inline VARIANT_BOOL TGDraft::_IDraftDocumentAuto::GetDisplayAlignmentIndicator ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayAlignmentIndicator(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5209)
inline void TGDraft::_IDraftDocumentAuto::PutDisplayAlignmentIndicator ( VARIANT_BOOL Displayed ) {
    HRESULT _hr = put_DisplayAlignmentIndicator(Displayed);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5210)
inline IDispatchPtr TGDraft::_IDraftDocumentAuto::GetObjectFromKey ( _bstr_t Key ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_GetObjectFromKey(Key, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5211)
inline HRESULT TGDraft::_IDraftDocumentAuto::ClearAllDimensionTrackerEntries ( ) {
    HRESULT _hr = raw_ClearAllDimensionTrackerEntries();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5212)
inline TGDraft::ConnectorTablesPtr TGDraft::_IDraftDocumentAuto::GetConnectorTables ( ) {
    struct ConnectorTables * _result = 0;
    HRESULT _hr = get_ConnectorTables(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ConnectorTablesPtr(_result, false);
}

#pragma implementation_key(5213)
inline IUnknownPtr TGDraft::_IDraftDocumentAuto::GetConnectorTableEvents ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_ConnectorTableEvents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5214)
inline IDispatchPtr TGDraft::_IDraftDocumentAuto::GetSheetGroups ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_SheetGroups(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5215)
inline HRESULT TGDraft::_IDraftDocumentAuto::SetFilenameForDVWizard ( _bstr_t FileName ) {
    HRESULT _hr = raw_SetFilenameForDVWizard(FileName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5216)
inline HRESULT TGDraft::_IDraftDocumentAuto::SetSymbolFileOrigin ( double XOrigin, double YOrigin ) {
    HRESULT _hr = raw_SetSymbolFileOrigin(XOrigin, YOrigin);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5217)
inline HRESULT TGDraft::_IDraftDocumentAuto::GetSymbolFileOrigin ( double * pxOrigin, double * pyOrigin ) {
    HRESULT _hr = raw_GetSymbolFileOrigin(pxOrigin, pyOrigin);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5218)
inline TGDraft::BlockTablesPtr TGDraft::_IDraftDocumentAuto::GetBlockTables ( ) {
    struct BlockTables * _result = 0;
    HRESULT _hr = get_BlockTables(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BlockTablesPtr(_result, false);
}

#pragma implementation_key(5219)
inline IUnknownPtr TGDraft::_IDraftDocumentAuto::GetBlockTableEvents ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_BlockTableEvents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5220)
inline TGFrameworkSupport::TableStylesPtr TGDraft::_IDraftDocumentAuto::GetTableStyles ( ) {
    struct TGFrameworkSupport::TableStyles * _result = 0;
    HRESULT _hr = get_TableStyles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::TableStylesPtr(_result, false);
}

#pragma implementation_key(5221)
inline TGDraft::FOPTablesPtr TGDraft::_IDraftDocumentAuto::GetFOPTables ( ) {
    struct FOPTables * _result = 0;
    HRESULT _hr = get_FOPTables(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return FOPTablesPtr(_result, false);
}

#pragma implementation_key(5222)
inline TGDraft::ConductorTablesPtr TGDraft::_IDraftDocumentAuto::GetConductorTables ( ) {
    struct ConductorTables * _result = 0;
    HRESULT _hr = get_ConductorTables(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ConductorTablesPtr(_result, false);
}

#pragma implementation_key(5223)
inline TGDraft::ToleranceTablesPtr TGDraft::_IDraftDocumentAuto::GetToleranceTables ( ) {
    struct ToleranceTables * _result = 0;
    HRESULT _hr = get_ToleranceTables(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ToleranceTablesPtr(_result, false);
}

#pragma implementation_key(5224)
inline TGDraft::HoleTables2Ptr TGDraft::_IDraftDocumentAuto::GetHoleTables2 ( ) {
    struct HoleTables2 * _result = 0;
    HRESULT _hr = get_HoleTables2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return HoleTables2Ptr(_result, false);
}

#pragma implementation_key(5225)
inline VARIANT_BOOL TGDraft::_IDraftDocumentAuto::GetLocateBackgroundSheetGeometry ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_LocateBackgroundSheetGeometry(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5226)
inline void TGDraft::_IDraftDocumentAuto::PutLocateBackgroundSheetGeometry ( VARIANT_BOOL pbLocate ) {
    HRESULT _hr = put_LocateBackgroundSheetGeometry(pbLocate);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5227)
inline HRESULT TGDraft::_IDraftDocumentAuto::UpdateRetrievedDimensionsAndAnnotations ( ) {
    HRESULT _hr = raw_UpdateRetrievedDimensionsAndAnnotations();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5228)
inline void TGDraft::_IDraftDocumentAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5229)
inline HRESULT TGDraft::_IDraftDocumentAuto::UpdateAll ( VARIANT_BOOL bForceUpdate ) {
    HRESULT _hr = raw_UpdateAll(bForceUpdate);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5230)
inline VARIANT_BOOL TGDraft::_IDraftDocumentAuto::GetMaintainAlignmentSet ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MaintainAlignmentSet(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5231)
inline void TGDraft::_IDraftDocumentAuto::PutMaintainAlignmentSet ( VARIANT_BOOL pbAlign ) {
    HRESULT _hr = put_MaintainAlignmentSet(pbAlign);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5232)
inline TGDraft::WeldTablesPtr TGDraft::_IDraftDocumentAuto::GetWeldTables ( ) {
    struct WeldTables * _result = 0;
    HRESULT _hr = get_WeldTables(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return WeldTablesPtr(_result, false);
}

//
// dispinterface WeldTable wrapper method implementations
//

#pragma implementation_key(5233)
inline TGFramework::ApplicationPtr TGDraft::WeldTable::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5234)
inline HRESULT TGDraft::WeldTable::Update ( ) {
    return _com_dispatch_method(this, 0x66, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5235)
inline HRESULT TGDraft::WeldTable::CopyToClipboard ( ) {
    return _com_dispatch_method(this, 0x67, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5236)
inline HRESULT TGDraft::WeldTable::SourceDimensions ( SAFEARRAY * * ppDimensions ) {
    return _com_dispatch_method(this, 0x68, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009", ppDimensions);
}

#pragma implementation_key(5237)
inline HRESULT TGDraft::WeldTable::Delete ( ) {
    return _com_dispatch_method(this, 0x6a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5238)
inline void TGDraft::WeldTable::PutSavedSettings ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5239)
inline IDispatchPtr TGDraft::WeldTable::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5240)
inline VARIANT_BOOL TGDraft::WeldTable::GetIncludeDimensionsInView ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x93, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5241)
inline void TGDraft::WeldTable::PutIncludeDimensionsInView ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x93, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5242)
inline HRESULT TGDraft::WeldTable::SetOrigin ( double x, double y ) {
    return _com_dispatch_method(this, 0x6d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(5243)
inline HRESULT TGDraft::WeldTable::GetOrigin ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x6c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(5244)
inline HRESULT TGDraft::WeldTable::GetListOfSavedSettings ( long * NumSavedSettings, SAFEARRAY * * ListOfSavedSettings ) {
    return _com_dispatch_method(this, 0x6e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6008", NumSavedSettings, ListOfSavedSettings);
}

#pragma implementation_key(5245)
inline VARIANT_BOOL TGDraft::WeldTable::GetIsUpToDate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5246)
inline HRESULT TGDraft::WeldTable::ConvertToTable ( ) {
    return _com_dispatch_method(this, 0x80, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5247)
inline TGDraft::TableCellPtr TGDraft::WeldTable::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex ) {
    struct TableCell * _result = 0;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000c\x000c", &RowIndex, &ColumnIndex);
    return TableCellPtr(_result, false);
}

#pragma implementation_key(5248)
inline enum TGDraft::TitlePosition TGDraft::WeldTable::GetColumnHeaderPosition ( ) {
    enum TitlePosition _result;
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5249)
inline void TGDraft::WeldTable::PutColumnHeaderPosition ( enum TitlePosition _arg1 ) {
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5250)
inline TGDraft::TableColumnsPtr TGDraft::WeldTable::GetColumns ( ) {
    struct TableColumns * _result = 0;
    _com_dispatch_method(this, 0x73, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableColumnsPtr(_result, false);
}

#pragma implementation_key(5251)
inline double TGDraft::WeldTable::GetMargin ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5252)
inline void TGDraft::WeldTable::PutMargin ( double _arg1 ) {
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(5253)
inline long TGDraft::WeldTable::GetMaximumRows ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5254)
inline void TGDraft::WeldTable::PutMaximumRows ( long _arg1 ) {
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5255)
inline double TGDraft::WeldTable::GetPageGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5256)
inline void TGDraft::WeldTable::PutPageGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(5257)
inline VARIANT_BOOL TGDraft::WeldTable::GetReverseDisplayOrder ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5258)
inline void TGDraft::WeldTable::PutReverseDisplayOrder ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x7b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5259)
inline TGDraft::TableRowsPtr TGDraft::WeldTable::GetRows ( ) {
    struct TableRows * _result = 0;
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableRowsPtr(_result, false);
}

#pragma implementation_key(5260)
inline VARIANT_BOOL TGDraft::WeldTable::GetShowColumnHeader ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5261)
inline void TGDraft::WeldTable::PutShowColumnHeader ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x7d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5262)
inline _bstr_t TGDraft::WeldTable::GetTableStyle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5263)
inline void TGDraft::WeldTable::PutTableStyle ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x7e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5264)
inline TGDraft::TableTitlesPtr TGDraft::WeldTable::GetTitles ( ) {
    struct TableTitles * _result = 0;
    _com_dispatch_method(this, 0x7f, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableTitlesPtr(_result, false);
}

#pragma implementation_key(5265)
inline enum TGDraft::TableAnchorPoint TGDraft::WeldTable::GetAnchorPoint ( ) {
    enum TableAnchorPoint _result;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5266)
inline void TGDraft::WeldTable::PutAnchorPoint ( enum TableAnchorPoint _arg1 ) {
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5267)
inline TGDraft::TablePagesPtr TGDraft::WeldTable::GetPages ( ) {
    struct TablePages * _result = 0;
    _com_dispatch_method(this, 0x7a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TablePagesPtr(_result, false);
}

#pragma implementation_key(5268)
inline double TGDraft::WeldTable::GetHeaderFixedRowHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x75, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5269)
inline void TGDraft::WeldTable::PutHeaderFixedRowHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x75, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(5270)
inline double TGDraft::WeldTable::GetDataFixedRowHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x74, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5271)
inline void TGDraft::WeldTable::PutDataFixedRowHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x74, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(5272)
inline double TGDraft::WeldTable::GetMaximumHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5273)
inline void TGDraft::WeldTable::PutMaximumHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(5274)
inline long TGDraft::WeldTable::GetNumberOfHeaderRows ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5275)
inline void TGDraft::WeldTable::PutNumberOfHeaderRows ( long _arg1 ) {
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5276)
inline long TGDraft::WeldTable::GetMaximumRowsFirstPage ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x82, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5277)
inline void TGDraft::WeldTable::PutMaximumRowsFirstPage ( long _arg1 ) {
    _com_dispatch_method(this, 0x82, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5278)
inline long TGDraft::WeldTable::GetMaximumRowsAdditionalPages ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x83, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5279)
inline void TGDraft::WeldTable::PutMaximumRowsAdditionalPages ( long _arg1 ) {
    _com_dispatch_method(this, 0x83, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5280)
inline double TGDraft::WeldTable::GetMaximumHeightFirstPage ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x84, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5281)
inline void TGDraft::WeldTable::PutMaximumHeightFirstPage ( double _arg1 ) {
    _com_dispatch_method(this, 0x84, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(5282)
inline double TGDraft::WeldTable::GetMaximumHeightAdditionalPages ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x85, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5283)
inline void TGDraft::WeldTable::PutMaximumHeightAdditionalPages ( double _arg1 ) {
    _com_dispatch_method(this, 0x85, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(5284)
inline VARIANT_BOOL TGDraft::WeldTable::GetCreateNewSheetsForTable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x86, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5285)
inline void TGDraft::WeldTable::PutCreateNewSheetsForTable ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x86, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5286)
inline _bstr_t TGDraft::WeldTable::GetFirstSheetBackgroundName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x87, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5287)
inline void TGDraft::WeldTable::PutFirstSheetBackgroundName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x87, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5288)
inline _bstr_t TGDraft::WeldTable::GetAdditionalSheetsBackgroundName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x88, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5289)
inline void TGDraft::WeldTable::PutAdditionalSheetsBackgroundName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x88, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5290)
inline VARIANT_BOOL TGDraft::WeldTable::GetShowSheetBackground ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x89, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5291)
inline void TGDraft::WeldTable::PutShowSheetBackground ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x89, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5292)
inline VARIANT_BOOL TGDraft::WeldTable::GetMaintainSheetsWithTableSize ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5293)
inline void TGDraft::WeldTable::PutMaintainSheetsWithTableSize ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5294)
inline VARIANT_BOOL TGDraft::WeldTable::GetEnableGroups ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5295)
inline void TGDraft::WeldTable::PutEnableGroups ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5296)
inline TGDraft::TableGroupsPtr TGDraft::WeldTable::GetGroups ( ) {
    struct TableGroups * _result = 0;
    _com_dispatch_method(this, 0x8c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TableGroupsPtr(_result, false);
}

#pragma implementation_key(5297)
inline VARIANT_BOOL TGDraft::WeldTable::GetWrapDataCellsToNewRow ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5298)
inline void TGDraft::WeldTable::PutWrapDataCellsToNewRow ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5299)
inline VARIANT_BOOL TGDraft::WeldTable::GetFillEndOfTableWithBlankRows ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5300)
inline void TGDraft::WeldTable::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5301)
inline long TGDraft::WeldTable::GetGroupByColumn ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5302)
inline void TGDraft::WeldTable::PutGroupByColumn ( long _arg1 ) {
    _com_dispatch_method(this, 0x8f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5303)
inline double TGDraft::WeldTable::GetTitleFixedRowHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x90, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5304)
inline void TGDraft::WeldTable::PutTitleFixedRowHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x90, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(5305)
inline double TGDraft::WeldTable::GetMarginHorizontal ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x91, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5306)
inline void TGDraft::WeldTable::PutMarginHorizontal ( double _arg1 ) {
    _com_dispatch_method(this, 0x91, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(5307)
inline double TGDraft::WeldTable::GetMarginVertical ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x92, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5308)
inline void TGDraft::WeldTable::PutMarginVertical ( double _arg1 ) {
    _com_dispatch_method(this, 0x92, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(5309)
inline _bstr_t TGDraft::WeldTable::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x94, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5310)
inline _bstr_t TGDraft::WeldTable::GetWeldTableDataJson ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x95, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

//
// interface _IWeldTablesAuto wrapper method implementations
//

#pragma implementation_key(5311)
inline TGFramework::ApplicationPtr TGDraft::_IWeldTablesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5312)
inline long TGDraft::_IWeldTablesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5313)
inline TGDraft::WeldTablePtr TGDraft::_IWeldTablesAuto::Item ( const _variant_t & Index ) {
    struct WeldTable * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return WeldTablePtr(_result, false);
}

#pragma implementation_key(5314)
inline IUnknownPtr TGDraft::_IWeldTablesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5315)
inline TGDraft::WeldTablePtr TGDraft::_IWeldTablesAuto::AddByActiveSheet ( _bstr_t SavedSettings, long isMerge ) {
    struct WeldTable * _result = 0;
    HRESULT _hr = raw_AddByActiveSheet(SavedSettings, isMerge, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return WeldTablePtr(_result, false);
}

#pragma implementation_key(5316)
inline TGDraft::WeldTablePtr TGDraft::_IWeldTablesAuto::AddByDrawingView ( struct DrawingView * DrawingView, _bstr_t SavedSettings, long DimensionsInView, long isMerge ) {
    struct WeldTable * _result = 0;
    HRESULT _hr = raw_AddByDrawingView(DrawingView, SavedSettings, DimensionsInView, isMerge, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return WeldTablePtr(_result, false);
}

#pragma implementation_key(5317)
inline TGDraft::WeldTablePtr TGDraft::_IWeldTablesAuto::AddByUserSelection ( _bstr_t SavedSettings, long isMerge ) {
    struct WeldTable * _result = 0;
    HRESULT _hr = raw_AddByUserSelection(SavedSettings, isMerge, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return WeldTablePtr(_result, false);
}

#pragma implementation_key(5318)
inline IDispatchPtr TGDraft::_IWeldTablesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// interface _IWeldTableAuto wrapper method implementations
//

#pragma implementation_key(5319)
inline TGFramework::ApplicationPtr TGDraft::_IWeldTableAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5320)
inline HRESULT TGDraft::_IWeldTableAuto::Update ( ) {
    HRESULT _hr = raw_Update();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5321)
inline HRESULT TGDraft::_IWeldTableAuto::CopyToClipboard ( ) {
    HRESULT _hr = raw_CopyToClipboard();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5322)
inline HRESULT TGDraft::_IWeldTableAuto::SourceDimensions ( SAFEARRAY * * ppDimensions ) {
    HRESULT _hr = raw_SourceDimensions(ppDimensions);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5323)
inline HRESULT TGDraft::_IWeldTableAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5324)
inline void TGDraft::_IWeldTableAuto::PutSavedSettings ( _bstr_t _arg1 ) {
    HRESULT _hr = put_SavedSettings(_arg1);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5325)
inline IDispatchPtr TGDraft::_IWeldTableAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5326)
inline VARIANT_BOOL TGDraft::_IWeldTableAuto::GetIncludeDimensionsInView ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IncludeDimensionsInView(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5327)
inline void TGDraft::_IWeldTableAuto::PutIncludeDimensionsInView ( VARIANT_BOOL value ) {
    HRESULT _hr = put_IncludeDimensionsInView(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5328)
inline HRESULT TGDraft::_IWeldTableAuto::SetOrigin ( double x, double y ) {
    HRESULT _hr = raw_SetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5329)
inline HRESULT TGDraft::_IWeldTableAuto::GetOrigin ( double * x, double * y ) {
    HRESULT _hr = raw_GetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5330)
inline HRESULT TGDraft::_IWeldTableAuto::GetListOfSavedSettings ( long * NumSavedSettings, SAFEARRAY * * ListOfSavedSettings ) {
    HRESULT _hr = raw_GetListOfSavedSettings(NumSavedSettings, ListOfSavedSettings);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5331)
inline VARIANT_BOOL TGDraft::_IWeldTableAuto::GetIsUpToDate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsUpToDate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5332)
inline HRESULT TGDraft::_IWeldTableAuto::ConvertToTable ( ) {
    HRESULT _hr = raw_ConvertToTable();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5333)
inline TGDraft::TableCellPtr TGDraft::_IWeldTableAuto::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex ) {
    struct TableCell * _result = 0;
    HRESULT _hr = get_Cell(RowIndex, ColumnIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableCellPtr(_result, false);
}

#pragma implementation_key(5334)
inline enum TGDraft::TitlePosition TGDraft::_IWeldTableAuto::GetColumnHeaderPosition ( ) {
    enum TitlePosition _result;
    HRESULT _hr = get_ColumnHeaderPosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5335)
inline void TGDraft::_IWeldTableAuto::PutColumnHeaderPosition ( enum TitlePosition ColumnHeaderPosition ) {
    HRESULT _hr = put_ColumnHeaderPosition(ColumnHeaderPosition);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5336)
inline TGDraft::TableColumnsPtr TGDraft::_IWeldTableAuto::GetColumns ( ) {
    struct TableColumns * _result = 0;
    HRESULT _hr = get_Columns(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableColumnsPtr(_result, false);
}

#pragma implementation_key(5337)
inline double TGDraft::_IWeldTableAuto::GetMargin ( ) {
    double _result = 0;
    HRESULT _hr = get_Margin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5338)
inline void TGDraft::_IWeldTableAuto::PutMargin ( double Margin ) {
    HRESULT _hr = put_Margin(Margin);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5339)
inline long TGDraft::_IWeldTableAuto::GetMaximumRows ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5340)
inline void TGDraft::_IWeldTableAuto::PutMaximumRows ( long MaximumRows ) {
    HRESULT _hr = put_MaximumRows(MaximumRows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5341)
inline double TGDraft::_IWeldTableAuto::GetPageGap ( ) {
    double _result = 0;
    HRESULT _hr = get_PageGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5342)
inline void TGDraft::_IWeldTableAuto::PutPageGap ( double PageGap ) {
    HRESULT _hr = put_PageGap(PageGap);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5343)
inline VARIANT_BOOL TGDraft::_IWeldTableAuto::GetReverseDisplayOrder ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ReverseDisplayOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5344)
inline void TGDraft::_IWeldTableAuto::PutReverseDisplayOrder ( VARIANT_BOOL ReverseDisplayOrder ) {
    HRESULT _hr = put_ReverseDisplayOrder(ReverseDisplayOrder);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5345)
inline TGDraft::TableRowsPtr TGDraft::_IWeldTableAuto::GetRows ( ) {
    struct TableRows * _result = 0;
    HRESULT _hr = get_Rows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableRowsPtr(_result, false);
}

#pragma implementation_key(5346)
inline VARIANT_BOOL TGDraft::_IWeldTableAuto::GetShowColumnHeader ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowColumnHeader(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5347)
inline void TGDraft::_IWeldTableAuto::PutShowColumnHeader ( VARIANT_BOOL ShowColumnHeader ) {
    HRESULT _hr = put_ShowColumnHeader(ShowColumnHeader);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5348)
inline _bstr_t TGDraft::_IWeldTableAuto::GetTableStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TableStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5349)
inline void TGDraft::_IWeldTableAuto::PutTableStyle ( _bstr_t TableStyle ) {
    HRESULT _hr = put_TableStyle(TableStyle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5350)
inline TGDraft::TableTitlesPtr TGDraft::_IWeldTableAuto::GetTitles ( ) {
    struct TableTitles * _result = 0;
    HRESULT _hr = get_Titles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableTitlesPtr(_result, false);
}

#pragma implementation_key(5351)
inline enum TGDraft::TableAnchorPoint TGDraft::_IWeldTableAuto::GetAnchorPoint ( ) {
    enum TableAnchorPoint _result;
    HRESULT _hr = get_AnchorPoint(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5352)
inline void TGDraft::_IWeldTableAuto::PutAnchorPoint ( enum TableAnchorPoint AnchorPoint ) {
    HRESULT _hr = put_AnchorPoint(AnchorPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5353)
inline TGDraft::TablePagesPtr TGDraft::_IWeldTableAuto::GetPages ( ) {
    struct TablePages * _result = 0;
    HRESULT _hr = get_Pages(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TablePagesPtr(_result, false);
}

#pragma implementation_key(5354)
inline double TGDraft::_IWeldTableAuto::GetHeaderFixedRowHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_HeaderFixedRowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5355)
inline void TGDraft::_IWeldTableAuto::PutHeaderFixedRowHeight ( double HeaderFixedRowHeight ) {
    HRESULT _hr = put_HeaderFixedRowHeight(HeaderFixedRowHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5356)
inline double TGDraft::_IWeldTableAuto::GetDataFixedRowHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_DataFixedRowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5357)
inline void TGDraft::_IWeldTableAuto::PutDataFixedRowHeight ( double DataFixedRowHeight ) {
    HRESULT _hr = put_DataFixedRowHeight(DataFixedRowHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5358)
inline double TGDraft::_IWeldTableAuto::GetMaximumHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5359)
inline void TGDraft::_IWeldTableAuto::PutMaximumHeight ( double MaximumHeight ) {
    HRESULT _hr = put_MaximumHeight(MaximumHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5360)
inline long TGDraft::_IWeldTableAuto::GetNumberOfHeaderRows ( ) {
    long _result = 0;
    HRESULT _hr = get_NumberOfHeaderRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5361)
inline void TGDraft::_IWeldTableAuto::PutNumberOfHeaderRows ( long NumberOfHeaderRows ) {
    HRESULT _hr = put_NumberOfHeaderRows(NumberOfHeaderRows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5362)
inline long TGDraft::_IWeldTableAuto::GetMaximumRowsFirstPage ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumRowsFirstPage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5363)
inline void TGDraft::_IWeldTableAuto::PutMaximumRowsFirstPage ( long MaximumRowsFirstPage ) {
    HRESULT _hr = put_MaximumRowsFirstPage(MaximumRowsFirstPage);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5364)
inline long TGDraft::_IWeldTableAuto::GetMaximumRowsAdditionalPages ( ) {
    long _result = 0;
    HRESULT _hr = get_MaximumRowsAdditionalPages(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5365)
inline void TGDraft::_IWeldTableAuto::PutMaximumRowsAdditionalPages ( long MaximumRowsAdditionalPages ) {
    HRESULT _hr = put_MaximumRowsAdditionalPages(MaximumRowsAdditionalPages);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5366)
inline double TGDraft::_IWeldTableAuto::GetMaximumHeightFirstPage ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumHeightFirstPage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5367)
inline void TGDraft::_IWeldTableAuto::PutMaximumHeightFirstPage ( double MaximumHeightFirstPage ) {
    HRESULT _hr = put_MaximumHeightFirstPage(MaximumHeightFirstPage);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5368)
inline double TGDraft::_IWeldTableAuto::GetMaximumHeightAdditionalPages ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumHeightAdditionalPages(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5369)
inline void TGDraft::_IWeldTableAuto::PutMaximumHeightAdditionalPages ( double MaximumHeightAdditionalPages ) {
    HRESULT _hr = put_MaximumHeightAdditionalPages(MaximumHeightAdditionalPages);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5370)
inline VARIANT_BOOL TGDraft::_IWeldTableAuto::GetCreateNewSheetsForTable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CreateNewSheetsForTable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5371)
inline void TGDraft::_IWeldTableAuto::PutCreateNewSheetsForTable ( VARIANT_BOOL CreateNewSheetsForTable ) {
    HRESULT _hr = put_CreateNewSheetsForTable(CreateNewSheetsForTable);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5372)
inline _bstr_t TGDraft::_IWeldTableAuto::GetFirstSheetBackgroundName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FirstSheetBackgroundName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5373)
inline void TGDraft::_IWeldTableAuto::PutFirstSheetBackgroundName ( _bstr_t FirstSheetBackgroundName ) {
    HRESULT _hr = put_FirstSheetBackgroundName(FirstSheetBackgroundName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5374)
inline _bstr_t TGDraft::_IWeldTableAuto::GetAdditionalSheetsBackgroundName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AdditionalSheetsBackgroundName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5375)
inline void TGDraft::_IWeldTableAuto::PutAdditionalSheetsBackgroundName ( _bstr_t AdditionalSheetsBackgroundName ) {
    HRESULT _hr = put_AdditionalSheetsBackgroundName(AdditionalSheetsBackgroundName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5376)
inline VARIANT_BOOL TGDraft::_IWeldTableAuto::GetShowSheetBackground ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowSheetBackground(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5377)
inline void TGDraft::_IWeldTableAuto::PutShowSheetBackground ( VARIANT_BOOL ShowSheetBackground ) {
    HRESULT _hr = put_ShowSheetBackground(ShowSheetBackground);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5378)
inline VARIANT_BOOL TGDraft::_IWeldTableAuto::GetMaintainSheetsWithTableSize ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MaintainSheetsWithTableSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5379)
inline void TGDraft::_IWeldTableAuto::PutMaintainSheetsWithTableSize ( VARIANT_BOOL MaintainSheetsWithTableSize ) {
    HRESULT _hr = put_MaintainSheetsWithTableSize(MaintainSheetsWithTableSize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5380)
inline VARIANT_BOOL TGDraft::_IWeldTableAuto::GetEnableGroups ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_EnableGroups(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5381)
inline void TGDraft::_IWeldTableAuto::PutEnableGroups ( VARIANT_BOOL EnableGroups ) {
    HRESULT _hr = put_EnableGroups(EnableGroups);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5382)
inline TGDraft::TableGroupsPtr TGDraft::_IWeldTableAuto::GetGroups ( ) {
    struct TableGroups * _result = 0;
    HRESULT _hr = get_Groups(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableGroupsPtr(_result, false);
}

#pragma implementation_key(5383)
inline VARIANT_BOOL TGDraft::_IWeldTableAuto::GetWrapDataCellsToNewRow ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WrapDataCellsToNewRow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5384)
inline void TGDraft::_IWeldTableAuto::PutWrapDataCellsToNewRow ( VARIANT_BOOL WrapDataCellsToNewRow ) {
    HRESULT _hr = put_WrapDataCellsToNewRow(WrapDataCellsToNewRow);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5385)
inline VARIANT_BOOL TGDraft::_IWeldTableAuto::GetFillEndOfTableWithBlankRows ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_FillEndOfTableWithBlankRows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5386)
inline void TGDraft::_IWeldTableAuto::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL FillEndOfTableWithBlankRows ) {
    HRESULT _hr = put_FillEndOfTableWithBlankRows(FillEndOfTableWithBlankRows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5387)
inline long TGDraft::_IWeldTableAuto::GetGroupByColumn ( ) {
    long _result = 0;
    HRESULT _hr = get_GroupByColumn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5388)
inline void TGDraft::_IWeldTableAuto::PutGroupByColumn ( long ColumnIndex ) {
    HRESULT _hr = put_GroupByColumn(ColumnIndex);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5389)
inline double TGDraft::_IWeldTableAuto::GetTitleFixedRowHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_TitleFixedRowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5390)
inline void TGDraft::_IWeldTableAuto::PutTitleFixedRowHeight ( double TitleFixedRowHeight ) {
    HRESULT _hr = put_TitleFixedRowHeight(TitleFixedRowHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5391)
inline double TGDraft::_IWeldTableAuto::GetMarginHorizontal ( ) {
    double _result = 0;
    HRESULT _hr = get_MarginHorizontal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5392)
inline void TGDraft::_IWeldTableAuto::PutMarginHorizontal ( double MarginHorizontal ) {
    HRESULT _hr = put_MarginHorizontal(MarginHorizontal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5393)
inline double TGDraft::_IWeldTableAuto::GetMarginVertical ( ) {
    double _result = 0;
    HRESULT _hr = get_MarginVertical(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5394)
inline void TGDraft::_IWeldTableAuto::PutMarginVertical ( double MarginVertical ) {
    HRESULT _hr = put_MarginVertical(MarginVertical);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5395)
inline _bstr_t TGDraft::_IWeldTableAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5396)
inline _bstr_t TGDraft::_IWeldTableAuto::GetWeldTableDataJson ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_WeldTableDataJson(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// interface _IViewPlaneAuto wrapper method implementations
//

#pragma implementation_key(5397)
inline void TGDraft::_IViewPlaneAuto::PutDisplayCaption ( VARIANT_BOOL DisplayCaption ) {
    HRESULT _hr = put_DisplayCaption(DisplayCaption);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5398)
inline VARIANT_BOOL TGDraft::_IViewPlaneAuto::GetDisplayCaption ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayCaption(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5399)
inline TGDraft::DrawingViewPtr TGDraft::_IViewPlaneAuto::GetSourceDrawingView ( ) {
    struct DrawingView * _result = 0;
    HRESULT _hr = get_SourceDrawingView(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(5400)
inline _bstr_t TGDraft::_IViewPlaneAuto::GetCaption ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Caption(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5401)
inline void TGDraft::_IViewPlaneAuto::PutCaption ( _bstr_t Caption ) {
    HRESULT _hr = put_Caption(Caption);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5402)
inline enum TGFrameworkSupport::DimViewPlaneDisplayTypeConstants TGDraft::_IViewPlaneAuto::GetDisplayType ( ) {
    enum TGFrameworkSupport::DimViewPlaneDisplayTypeConstants _result;
    HRESULT _hr = get_DisplayType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5403)
inline void TGDraft::_IViewPlaneAuto::PutDisplayType ( enum TGFrameworkSupport::DimViewPlaneDisplayTypeConstants DisplayType ) {
    HRESULT _hr = put_DisplayType(DisplayType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5404)
inline _bstr_t TGDraft::_IViewPlaneAuto::GetTextFont ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextFont(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5405)
inline void TGDraft::_IViewPlaneAuto::PutTextFont ( _bstr_t TextFont ) {
    HRESULT _hr = put_TextFont(TextFont);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5406)
inline enum TGFrameworkSupport::DimTextFontStyleConstants TGDraft::_IViewPlaneAuto::GetTextFontStyle ( ) {
    enum TGFrameworkSupport::DimTextFontStyleConstants _result;
    HRESULT _hr = get_TextFontStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5407)
inline void TGDraft::_IViewPlaneAuto::PutTextFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants TextFontStyle ) {
    HRESULT _hr = put_TextFontStyle(TextFontStyle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5408)
inline double TGDraft::_IViewPlaneAuto::GetTextHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_TextHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5409)
inline void TGDraft::_IViewPlaneAuto::PutTextHeight ( double TextHeight ) {
    HRESULT _hr = put_TextHeight(TextHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5410)
inline double TGDraft::_IViewPlaneAuto::GetTextRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_TextRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5411)
inline void TGDraft::_IViewPlaneAuto::PutTextRatio ( double TextRatio ) {
    HRESULT _hr = put_TextRatio(TextRatio);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5412)
inline long TGDraft::_IViewPlaneAuto::GetTextColor ( ) {
    long _result = 0;
    HRESULT _hr = get_TextColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5413)
inline void TGDraft::_IViewPlaneAuto::PutTextColor ( long TextColor ) {
    HRESULT _hr = put_TextColor(TextColor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5414)
inline _bstr_t TGDraft::_IViewPlaneAuto::GetStyleName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StyleName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5415)
inline void TGDraft::_IViewPlaneAuto::PutStyleName ( _bstr_t StyleName ) {
    HRESULT _hr = put_StyleName(StyleName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5416)
inline enum TGFrameworkSupport::DimTermTypeConstants TGDraft::_IViewPlaneAuto::GetTerminatorType ( ) {
    enum TGFrameworkSupport::DimTermTypeConstants _result;
    HRESULT _hr = get_TerminatorType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5417)
inline void TGDraft::_IViewPlaneAuto::PutTerminatorType ( enum TGFrameworkSupport::DimTermTypeConstants TerminatorType ) {
    HRESULT _hr = put_TerminatorType(TerminatorType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5418)
inline double TGDraft::_IViewPlaneAuto::GetTerminatorRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_TerminatorRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5419)
inline void TGDraft::_IViewPlaneAuto::PutTerminatorRatio ( double TerminatorRatio ) {
    HRESULT _hr = put_TerminatorRatio(TerminatorRatio);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5420)
inline double TGDraft::_IViewPlaneAuto::GetLineWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_LineWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5421)
inline void TGDraft::_IViewPlaneAuto::PutLineWidth ( double LineWidth ) {
    HRESULT _hr = put_LineWidth(LineWidth);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5422)
inline _bstr_t TGDraft::_IViewPlaneAuto::GetLineType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LineType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5423)
inline void TGDraft::_IViewPlaneAuto::PutLineType ( _bstr_t LineType ) {
    HRESULT _hr = put_LineType(LineType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5424)
inline TGFramework::ApplicationPtr TGDraft::_IViewPlaneAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5425)
inline long TGDraft::_IViewPlaneAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5426)
inline _bstr_t TGDraft::_IViewPlaneAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5427)
inline IDispatchPtr TGDraft::_IViewPlaneAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5428)
inline long TGDraft::_IViewPlaneAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5429)
inline VARIANT_BOOL TGDraft::_IViewPlaneAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5430)
inline void TGDraft::_IViewPlaneAuto::PutVisible ( VARIANT_BOOL * Toggle ) {
    HRESULT _hr = put_Visible(Toggle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5431)
inline long TGDraft::_IViewPlaneAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5432)
inline _bstr_t TGDraft::_IViewPlaneAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5433)
inline IDispatchPtr TGDraft::_IViewPlaneAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5434)
inline HRESULT TGDraft::_IViewPlaneAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5435)
inline HRESULT TGDraft::_IViewPlaneAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5436)
inline HRESULT TGDraft::_IViewPlaneAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5437)
inline HRESULT TGDraft::_IViewPlaneAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5438)
inline HRESULT TGDraft::_IViewPlaneAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5439)
inline HRESULT TGDraft::_IViewPlaneAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5440)
inline HRESULT TGDraft::_IViewPlaneAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5441)
inline HRESULT TGDraft::_IViewPlaneAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5442)
inline HRESULT TGDraft::_IViewPlaneAuto::Range ( double * min_x, double * min_y, double * max_x, double * max_y ) {
    HRESULT _hr = raw_Range(min_x, min_y, max_x, max_y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5443)
inline _bstr_t TGDraft::_IViewPlaneAuto::GetCaptionDefinitionText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CaptionDefinitionText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5444)
inline void TGDraft::_IViewPlaneAuto::PutCaptionDefinitionText ( _bstr_t CaptionDefinitionText ) {
    HRESULT _hr = put_CaptionDefinitionText(CaptionDefinitionText);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5445)
inline _bstr_t TGDraft::_IViewPlaneAuto::GetCaptionDisplayedText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CaptionDisplayedText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5446)
inline HRESULT TGDraft::_IViewPlaneAuto::GetFoldLineWithViewDirection ( double * LineStartX, double * LineStartY, double * LineEndX, double * LineEndY, double * ViewDirectionX, double * ViewDirectionY ) {
    HRESULT _hr = raw_GetFoldLineWithViewDirection(LineStartX, LineStartY, LineEndX, LineEndY, ViewDirectionX, ViewDirectionY);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5447)
inline HRESULT TGDraft::_IViewPlaneAuto::GetViewLineWithArrowDirection ( double * LineStartX, double * LineStartY, double * LineEndX, double * LineEndY, double * ArrowDirectionX, double * ArrowDirectionY ) {
    HRESULT _hr = raw_GetViewLineWithArrowDirection(LineStartX, LineStartY, LineEndX, LineEndY, ArrowDirectionX, ArrowDirectionY);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5448)
inline _bstr_t TGDraft::_IViewPlaneAuto::GetViewSheetNumberDefinitionText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ViewSheetNumberDefinitionText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5449)
inline void TGDraft::_IViewPlaneAuto::PutViewSheetNumberDefinitionText ( _bstr_t ViewSheetNumberDefinitionText ) {
    HRESULT _hr = put_ViewSheetNumberDefinitionText(ViewSheetNumberDefinitionText);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5450)
inline VARIANT_BOOL TGDraft::_IViewPlaneAuto::GetDisplayViewSheetNumber ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayViewSheetNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5451)
inline void TGDraft::_IViewPlaneAuto::PutDisplayViewSheetNumber ( VARIANT_BOOL DisplayViewSheetNumber ) {
    HRESULT _hr = put_DisplayViewSheetNumber(DisplayViewSheetNumber);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5452)
inline enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants TGDraft::_IViewPlaneAuto::GetViewSheetNumberLocation ( ) {
    enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants _result;
    HRESULT _hr = get_ViewSheetNumberLocation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5453)
inline void TGDraft::_IViewPlaneAuto::PutViewSheetNumberLocation ( enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants ViewSheetNumberLocation ) {
    HRESULT _hr = put_ViewSheetNumberLocation(ViewSheetNumberLocation);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5454)
inline HRESULT TGDraft::_IViewPlaneAuto::GetCaptionPosition ( VARIANT_BOOL CaptionAtStartOfLine, double * x, double * y ) {
    HRESULT _hr = raw_GetCaptionPosition(CaptionAtStartOfLine, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5455)
inline HRESULT TGDraft::_IViewPlaneAuto::SetCaptionPosition ( VARIANT_BOOL CaptionAtStartOfLine, double x, double y ) {
    HRESULT _hr = raw_SetCaptionPosition(CaptionAtStartOfLine, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5456)
inline void TGDraft::_IViewPlaneAuto::PutAuto ( VARIANT_BOOL value ) {
    HRESULT _hr = put_Auto(value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5457)
inline VARIANT_BOOL TGDraft::_IViewPlaneAuto::GetAuto ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Auto(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5458)
inline IDispatchPtr TGDraft::_IViewPlaneAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5459)
inline VARIANT_BOOL TGDraft::_IViewPlaneAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5460)
inline HRESULT TGDraft::_IViewPlaneAuto::SetAuxiliaryViewArrowPosition ( double startPosX, double startPosY, double endPosX, double endPosY ) {
    HRESULT _hr = raw_SetAuxiliaryViewArrowPosition(startPosX, startPosY, endPosX, endPosY);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface SelectedSheets wrapper method implementations
//

#pragma implementation_key(5461)
inline TGFramework::ApplicationPtr TGDraft::SelectedSheets::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5462)
inline IDispatchPtr TGDraft::SelectedSheets::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5463)
inline long TGDraft::SelectedSheets::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5464)
inline TGDraft::SheetPtr TGDraft::SelectedSheets::Item ( const _variant_t & Index ) {
    struct Sheet * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return SheetPtr(_result, false);
}

//
// interface _ISelectedSheetsAuto wrapper method implementations
//

#pragma implementation_key(5465)
inline TGFramework::ApplicationPtr TGDraft::_ISelectedSheetsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5466)
inline IDispatchPtr TGDraft::_ISelectedSheetsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5467)
inline long TGDraft::_ISelectedSheetsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5468)
inline IUnknownPtr TGDraft::_ISelectedSheetsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5469)
inline TGDraft::SheetPtr TGDraft::_ISelectedSheetsAuto::Item ( const _variant_t & Index ) {
    struct Sheet * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SheetPtr(_result, false);
}

//
// interface _ISheetWindowAuto wrapper method implementations
//

#pragma implementation_key(5470)
inline void TGDraft::_ISheetWindowAuto::PutActiveSheet ( struct Sheet * Sheet ) {
    HRESULT _hr = put_ActiveSheet(Sheet);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5471)
inline TGDraft::SheetPtr TGDraft::_ISheetWindowAuto::GetActiveSheet ( ) {
    struct Sheet * _result = 0;
    HRESULT _hr = get_ActiveSheet(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SheetPtr(_result, false);
}

#pragma implementation_key(5472)
inline TGDraft::SectionPtr TGDraft::_ISheetWindowAuto::GetActiveSection ( ) {
    struct Section * _result = 0;
    HRESULT _hr = get_ActiveSection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SectionPtr(_result, false);
}

#pragma implementation_key(5473)
inline void TGDraft::_ISheetWindowAuto::PutActiveSection ( struct Section * Section ) {
    HRESULT _hr = put_ActiveSection(Section);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5474)
inline enum TGDraft::SheetSectionTypeConstants TGDraft::_ISheetWindowAuto::GetActiveSectionType ( ) {
    enum SheetSectionTypeConstants _result;
    HRESULT _hr = get_ActiveSectionType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5475)
inline void TGDraft::_ISheetWindowAuto::PutActiveSectionType ( enum SheetSectionTypeConstants Section ) {
    HRESULT _hr = put_ActiveSectionType(Section);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5476)
inline void TGDraft::_ISheetWindowAuto::PutDisplaySheetTabs ( VARIANT_BOOL DisplaySheetTabs ) {
    HRESULT _hr = put_DisplaySheetTabs(DisplaySheetTabs);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5477)
inline VARIANT_BOOL TGDraft::_ISheetWindowAuto::GetDisplaySheetTabs ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplaySheetTabs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5478)
inline void TGDraft::_ISheetWindowAuto::PutDisplaySectionTabs ( VARIANT_BOOL DisplaySectionTabs ) {
    HRESULT _hr = put_DisplaySectionTabs(DisplaySectionTabs);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5479)
inline VARIANT_BOOL TGDraft::_ISheetWindowAuto::GetDisplaySectionTabs ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplaySectionTabs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5480)
inline void TGDraft::_ISheetWindowAuto::PutTransparentDisplay ( VARIANT_BOOL TransparentDisplay ) {
    HRESULT _hr = put_TransparentDisplay(TransparentDisplay);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5481)
inline VARIANT_BOOL TGDraft::_ISheetWindowAuto::GetTransparentDisplay ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_TransparentDisplay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5482)
inline void TGDraft::_ISheetWindowAuto::PutSheetTabRatio ( double Ratio ) {
    HRESULT _hr = put_SheetTabRatio(Ratio);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5483)
inline double TGDraft::_ISheetWindowAuto::GetSheetTabRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_SheetTabRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5484)
inline double TGDraft::_ISheetWindowAuto::GetSectionTabRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_SectionTabRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5485)
inline void TGDraft::_ISheetWindowAuto::PutSectionTabRatio ( double Ratio ) {
    HRESULT _hr = put_SectionTabRatio(Ratio);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5486)
inline TGDraft::SelectedSheetsPtr TGDraft::_ISheetWindowAuto::GetSelectedSheets ( ) {
    struct SelectedSheets * _result = 0;
    HRESULT _hr = get_SelectedSheets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SelectedSheetsPtr(_result, false);
}

#pragma implementation_key(5487)
inline void TGDraft::_ISheetWindowAuto::PutZoom ( double ZoomPercent ) {
    HRESULT _hr = put_Zoom(ZoomPercent);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5488)
inline double TGDraft::_ISheetWindowAuto::GetZoom ( ) {
    double _result = 0;
    HRESULT _hr = get_Zoom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5489)
inline int TGDraft::_ISheetWindowAuto::GetUsableHeight ( ) {
    int _result = 0;
    HRESULT _hr = get_UsableHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5490)
inline int TGDraft::_ISheetWindowAuto::GetUsableWidth ( ) {
    int _result = 0;
    HRESULT _hr = get_UsableWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5491)
inline VARIANT_BOOL TGDraft::_ISheetWindowAuto::GetDisplayHScroll ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayHScroll(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5492)
inline void TGDraft::_ISheetWindowAuto::PutDisplayHScroll ( VARIANT_BOOL Display ) {
    HRESULT _hr = put_DisplayHScroll(Display);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5493)
inline VARIANT_BOOL TGDraft::_ISheetWindowAuto::GetDisplayVScroll ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayVScroll(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5494)
inline void TGDraft::_ISheetWindowAuto::PutDisplayVScroll ( VARIANT_BOOL Display ) {
    HRESULT _hr = put_DisplayVScroll(Display);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5495)
inline TGFrameworkSupport::BackDropPtr TGDraft::_ISheetWindowAuto::GetBackdrop ( ) {
    struct TGFrameworkSupport::BackDrop * _result = 0;
    HRESULT _hr = get_Backdrop(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFrameworkSupport::BackDropPtr(_result, false);
}

#pragma implementation_key(5496)
inline void TGDraft::_ISheetWindowAuto::PutDisplayAsPrinted ( VARIANT_BOOL DisplayAsPrinted ) {
    HRESULT _hr = put_DisplayAsPrinted(DisplayAsPrinted);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5497)
inline VARIANT_BOOL TGDraft::_ISheetWindowAuto::GetDisplayAsPrinted ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayAsPrinted(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5498)
inline HRESULT TGDraft::_ISheetWindowAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5499)
inline HRESULT TGDraft::_ISheetWindowAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5500)
inline HRESULT TGDraft::_ISheetWindowAuto::DeselectSheet ( const _variant_t & Sheet ) {
    HRESULT _hr = raw_DeselectSheet(Sheet);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5501)
inline HRESULT TGDraft::_ISheetWindowAuto::Paste ( ) {
    HRESULT _hr = raw_Paste();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5502)
inline HRESULT TGDraft::_ISheetWindowAuto::WindowToModel ( int WindowX, int WindowY, double * ModelX, double * ModelY ) {
    HRESULT _hr = raw_WindowToModel(WindowX, WindowY, ModelX, ModelY);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5503)
inline HRESULT TGDraft::_ISheetWindowAuto::ModelToWindow ( double ModelX, double ModelY, int * WindowX, int * WindowY ) {
    HRESULT _hr = raw_ModelToWindow(ModelX, ModelY, WindowX, WindowY);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5504)
inline HRESULT TGDraft::_ISheetWindowAuto::GetOrigin ( double * x, double * y ) {
    HRESULT _hr = raw_GetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5505)
inline HRESULT TGDraft::_ISheetWindowAuto::SetOrigin ( double x, double y ) {
    HRESULT _hr = raw_SetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5506)
inline HRESULT TGDraft::_ISheetWindowAuto::Pan ( int x, int y ) {
    HRESULT _hr = raw_Pan(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5507)
inline HRESULT TGDraft::_ISheetWindowAuto::SelectSheet ( const _variant_t & Sheet, const _variant_t & Replace ) {
    HRESULT _hr = raw_SelectSheet(Sheet, Replace);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5508)
inline HRESULT TGDraft::_ISheetWindowAuto::ZoomArea ( int x1, int y1, int x2, int y2 ) {
    HRESULT _hr = raw_ZoomArea(x1, y1, x2, y2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5509)
inline HRESULT TGDraft::_ISheetWindowAuto::Fit ( ) {
    HRESULT _hr = raw_Fit();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5510)
inline _variant_t TGDraft::_ISheetWindowAuto::Key ( const _variant_t & Recurse ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = raw_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(5511)
inline HRESULT TGDraft::_ISheetWindowAuto::Activate ( ) {
    HRESULT _hr = raw_Activate();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5512)
inline HRESULT TGDraft::_ISheetWindowAuto::ActivateNext ( ) {
    HRESULT _hr = raw_ActivateNext();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5513)
inline HRESULT TGDraft::_ISheetWindowAuto::ActivatePrevious ( ) {
    HRESULT _hr = raw_ActivatePrevious();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5514)
inline TGFramework::ApplicationPtr TGDraft::_ISheetWindowAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5515)
inline _bstr_t TGDraft::_ISheetWindowAuto::GetCaption ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Caption(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5516)
inline void TGDraft::_ISheetWindowAuto::PutCaption ( _bstr_t Caption ) {
    HRESULT _hr = put_Caption(Caption);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5517)
inline HRESULT TGDraft::_ISheetWindowAuto::Close ( const _variant_t & SaveChanges, const _variant_t & FileName, const _variant_t & RouteWorkbook ) {
    HRESULT _hr = raw_Close(SaveChanges, FileName, RouteWorkbook);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5518)
inline _bstr_t TGDraft::_ISheetWindowAuto::GetEnvironment ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Environment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5519)
inline void TGDraft::_ISheetWindowAuto::PutEnvironment ( _bstr_t Environment ) {
    HRESULT _hr = put_Environment(Environment);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5520)
inline int TGDraft::_ISheetWindowAuto::GetHeight ( ) {
    int _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5521)
inline void TGDraft::_ISheetWindowAuto::PutHeight ( int Height ) {
    HRESULT _hr = put_Height(Height);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5522)
inline long TGDraft::_ISheetWindowAuto::GethWnd ( ) {
    long _result = 0;
    HRESULT _hr = get_hWnd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5523)
inline int TGDraft::_ISheetWindowAuto::GetIndex ( ) {
    int _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5524)
inline int TGDraft::_ISheetWindowAuto::GetLeft ( ) {
    int _result = 0;
    HRESULT _hr = get_Left(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5525)
inline void TGDraft::_ISheetWindowAuto::PutLeft ( int Left ) {
    HRESULT _hr = put_Left(Left);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5526)
inline IDispatchPtr TGDraft::_ISheetWindowAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5527)
inline HRESULT TGDraft::_ISheetWindowAuto::PrintOut ( ) {
    HRESULT _hr = raw_PrintOut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5528)
inline TGFramework::SelectSetPtr TGDraft::_ISheetWindowAuto::GetSelectSet ( ) {
    struct TGFramework::SelectSet * _result = 0;
    HRESULT _hr = get_SelectSet(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::SelectSetPtr(_result, false);
}

#pragma implementation_key(5529)
inline int TGDraft::_ISheetWindowAuto::GetTop ( ) {
    int _result = 0;
    HRESULT _hr = get_Top(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5530)
inline void TGDraft::_ISheetWindowAuto::PutTop ( int Top ) {
    HRESULT _hr = put_Top(Top);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5531)
inline _bstr_t TGDraft::_ISheetWindowAuto::GetType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5532)
inline VARIANT_BOOL TGDraft::_ISheetWindowAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5533)
inline void TGDraft::_ISheetWindowAuto::PutVisible ( VARIANT_BOOL Visible ) {
    HRESULT _hr = put_Visible(Visible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5534)
inline int TGDraft::_ISheetWindowAuto::GetWidth ( ) {
    int _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5535)
inline void TGDraft::_ISheetWindowAuto::PutWidth ( int Width ) {
    HRESULT _hr = put_Width(Width);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5536)
inline int TGDraft::_ISheetWindowAuto::GetWindowNumber ( ) {
    int _result = 0;
    HRESULT _hr = get_WindowNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5537)
inline int TGDraft::_ISheetWindowAuto::GetWindowState ( ) {
    int _result = 0;
    HRESULT _hr = get_WindowState(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5538)
inline void TGDraft::_ISheetWindowAuto::PutWindowState ( int WindowState ) {
    HRESULT _hr = put_WindowState(WindowState);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5539)
inline long TGDraft::_ISheetWindowAuto::GetIcon ( ) {
    long _result = 0;
    HRESULT _hr = get_Icon(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5540)
inline HRESULT TGDraft::_ISheetWindowAuto::SaveAsImage ( _bstr_t FileName, const _variant_t & Width, const _variant_t & Height, const _variant_t & Resolution, const _variant_t & ColorDepth, enum TGFramework::SeImageQualityType ImageQuality, VARIANT_BOOL Invert ) {
    HRESULT _hr = raw_SaveAsImage(FileName, Width, Height, Resolution, ColorDepth, ImageQuality, Invert);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5541)
inline HRESULT TGDraft::_ISheetWindowAuto::Update ( ) {
    HRESULT _hr = raw_Update();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5542)
inline HRESULT TGDraft::_ISheetWindowAuto::FitEx ( enum SheetFitConstants FitOption ) {
    HRESULT _hr = raw_FitEx(FitOption);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5543)
inline void TGDraft::_ISheetWindowAuto::PutDisplayBackgroundSheetTabs ( VARIANT_BOOL DisplayBackgroundSheetTabs ) {
    HRESULT _hr = put_DisplayBackgroundSheetTabs(DisplayBackgroundSheetTabs);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5544)
inline VARIANT_BOOL TGDraft::_ISheetWindowAuto::GetDisplayBackgroundSheetTabs ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayBackgroundSheetTabs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5545)
inline void TGDraft::_ISheetWindowAuto::PutDisplayWorkingSheetTabs ( VARIANT_BOOL DisplayWorkingSheetTabs ) {
    HRESULT _hr = put_DisplayWorkingSheetTabs(DisplayWorkingSheetTabs);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5546)
inline VARIANT_BOOL TGDraft::_ISheetWindowAuto::GetDisplayWorkingSheetTabs ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayWorkingSheetTabs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5547)
inline void TGDraft::_ISheetWindowAuto::PutDisplay2DModelSheetTab ( VARIANT_BOOL Display2DModelSheetTab ) {
    HRESULT _hr = put_Display2DModelSheetTab(Display2DModelSheetTab);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5548)
inline VARIANT_BOOL TGDraft::_ISheetWindowAuto::GetDisplay2DModelSheetTab ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Display2DModelSheetTab(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5549)
inline HRESULT TGDraft::_ISheetWindowAuto::ZoomAreaEx ( double x1, double y1, double x2, double y2 ) {
    HRESULT _hr = raw_ZoomAreaEx(x1, y1, x2, y2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5550)
inline HRESULT TGDraft::_ISheetWindowAuto::BeginSheetViewDynamics ( ) {
    HRESULT _hr = raw_BeginSheetViewDynamics();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5551)
inline HRESULT TGDraft::_ISheetWindowAuto::EndSheetViewDynamics ( ) {
    HRESULT _hr = raw_EndSheetViewDynamics();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5552)
inline IDispatchPtr TGDraft::_ISheetWindowAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5553)
inline VARIANT_BOOL TGDraft::_ISheetWindowAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface DraftDocument wrapper method implementations
//

#pragma implementation_key(5554)
inline HRESULT TGDraft::DraftDocument::Activate ( ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5555)
inline TGFramework::ApplicationPtr TGDraft::DraftDocument::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5556)
inline HRESULT TGDraft::DraftDocument::Close ( const _variant_t & SaveChanges, const _variant_t & FileName, const _variant_t & RouteWorkbook ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c\x080c", &SaveChanges, &FileName, &RouteWorkbook);
}

#pragma implementation_key(5557)
inline _bstr_t TGDraft::DraftDocument::GetFullName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5558)
inline _bstr_t TGDraft::DraftDocument::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5559)
inline TGFramework::ApplicationPtr TGDraft::DraftDocument::GetParent ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5560)
inline _bstr_t TGDraft::DraftDocument::GetPath ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5561)
inline HRESULT TGDraft::DraftDocument::PrintOut ( const _variant_t & Printer, const _variant_t & NumCopies, const _variant_t & Orientation, const _variant_t & PaperSize, const _variant_t & Scale, const _variant_t & PrintToFile, const _variant_t & OutputFileName, const _variant_t & PrintRange, const _variant_t & Sheets, const _variant_t & ColorAsBlack, const _variant_t & Collate ) {
    return _com_dispatch_method(this, 0x18, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &Printer, &NumCopies, &Orientation, &PaperSize, &Scale, &PrintToFile, &OutputFileName, &PrintRange, &Sheets, &ColorAsBlack, &Collate);
}

#pragma implementation_key(5562)
inline VARIANT_BOOL TGDraft::DraftDocument::GetReadOnly ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5563)
inline IDispatchPtr TGDraft::DraftDocument::GetRoutingSlip ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x21, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5564)
inline HRESULT TGDraft::DraftDocument::Save ( ) {
    return _com_dispatch_method(this, 0x22, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5565)
inline HRESULT TGDraft::DraftDocument::SaveAs ( _bstr_t NewName, const _variant_t & IsATemplate, const _variant_t & FileFormat, const _variant_t & ReadOnlyEnforced, const _variant_t & ReadOnlyRecommended, const _variant_t & NewStatus, const _variant_t & CreateBackup, const _variant_t & UpdateLinkInContainer, const _variant_t & UpdateAllLinksInContainer ) {
    return _com_dispatch_method(this, 0x23, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", (BSTR)NewName, &IsATemplate, &FileFormat, &ReadOnlyEnforced, &ReadOnlyRecommended, &NewStatus, &CreateBackup, &UpdateLinkInContainer, &UpdateAllLinksInContainer);
}

#pragma implementation_key(5566)
inline HRESULT TGDraft::DraftDocument::SaveCopyAs ( _bstr_t Name ) {
    return _com_dispatch_method(this, 0x24, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Name);
}

#pragma implementation_key(5567)
inline HRESULT TGDraft::DraftDocument::SaveAsJT ( _bstr_t NewName, const _variant_t & Include_PreciseGeom, const _variant_t & Prod_Structure_Option, const _variant_t & Export_PMI, const _variant_t & Export_CoordinateSystem, const _variant_t & Export_3DBodies, const _variant_t & NumberofLODs, const _variant_t & JTFileUnit, const _variant_t & Write_Which_Files, const _variant_t & Use_Simplified_TopAsm, const _variant_t & Use_Simplified_SubAsm, const _variant_t & Use_Simplified_Part, const _variant_t & EnableDefaultOutputPath, const _variant_t & IncludeSEProperties, const _variant_t & Export_VisiblePartsOnly, const _variant_t & Export_VisibleConstructionsOnly, const _variant_t & RemoveUnsafeCharacters, const _variant_t & ExportSEPartFileAsSingleJTFile ) {
    return _com_dispatch_method(this, 0x5b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", (BSTR)NewName, &Include_PreciseGeom, &Prod_Structure_Option, &Export_PMI, &Export_CoordinateSystem, &Export_3DBodies, &NumberofLODs, &JTFileUnit, &Write_Which_Files, &Use_Simplified_TopAsm, &Use_Simplified_SubAsm, &Use_Simplified_Part, &EnableDefaultOutputPath, &IncludeSEProperties, &Export_VisiblePartsOnly, &Export_VisibleConstructionsOnly, &RemoveUnsafeCharacters, &ExportSEPartFileAsSingleJTFile);
}

#pragma implementation_key(5568)
inline _bstr_t TGDraft::DraftDocument::SaveAsBIDM ( _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x5e, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0008\x0008\x0008\x0008", (BSTR)FilePath, (BSTR)DocumentNumber, (BSTR)Revision, (BSTR)Title);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5569)
inline _bstr_t TGDraft::DraftDocument::ReviseBIDM ( _bstr_t FilePath, _bstr_t Revision, _bstr_t Title ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x5f, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0008\x0008\x0008", (BSTR)FilePath, (BSTR)Revision, (BSTR)Title);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5570)
inline TGFramework::SelectSetPtr TGDraft::DraftDocument::GetSelectSet ( ) {
    struct TGFramework::SelectSet * _result = 0;
    _com_dispatch_method(this, 0x27, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::SelectSetPtr(_result, false);
}

#pragma implementation_key(5571)
inline HRESULT TGDraft::DraftDocument::SendMail ( const _variant_t & Recipients, const _variant_t & Subject, const _variant_t & ReturnReceipt ) {
    return _com_dispatch_method(this, 0x28, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c\x080c", &Recipients, &Subject, &ReturnReceipt);
}

#pragma implementation_key(5572)
inline IDispatchPtr TGDraft::DraftDocument::GetSummaryInfo ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5573)
inline TGFramework::WindowsPtr TGDraft::DraftDocument::GetWindows ( ) {
    struct TGFramework::Windows * _result = 0;
    _com_dispatch_method(this, 0x30, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::WindowsPtr(_result, false);
}

#pragma implementation_key(5574)
inline IDispatchPtr TGDraft::DraftDocument::GetProperties ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x34, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5575)
inline VARIANT_BOOL TGDraft::DraftDocument::GetIsTemplate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x35, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5576)
inline void TGDraft::DraftDocument::PutIsTemplate ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x35, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5577)
inline enum TGFramework::DocumentStatus TGDraft::DraftDocument::GetStatus ( ) {
    enum TGFramework::DocumentStatus _result;
    _com_dispatch_method(this, 0x39, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5578)
inline void TGDraft::DraftDocument::PutStatus ( enum TGFramework::DocumentStatus _arg1 ) {
    _com_dispatch_method(this, 0x39, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5579)
inline HRESULT TGDraft::DraftDocument::EditProperties ( ) {
    return _com_dispatch_method(this, 0x3e, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5580)
inline TGFramework::UnitsOfMeasurePtr TGDraft::DraftDocument::GetUnitsOfMeasure ( ) {
    struct TGFramework::UnitsOfMeasure * _result = 0;
    _com_dispatch_method(this, 0x44, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::UnitsOfMeasurePtr(_result, false);
}

#pragma implementation_key(5581)
inline IDispatchPtr TGDraft::DraftDocument::GetActiveSketch ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x45, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5582)
inline enum TGFramework::DocumentTypeConstants TGDraft::DraftDocument::GetType ( ) {
    enum TGFramework::DocumentTypeConstants _result;
    _com_dispatch_method(this, 0x46, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5583)
inline IUnknownPtr TGDraft::DraftDocument::GetDocumentEvents ( ) {
    struct IUnknown * _result = 0;
    _com_dispatch_method(this, 0x47, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5584)
inline IUnknownPtr TGDraft::DraftDocument::GetRootStorage ( ) {
    IUnknown * _result = 0;
    _com_dispatch_method(this, 0x48, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5585)
inline IUnknownPtr TGDraft::DraftDocument::GetAddInsStorage ( _bstr_t Name, long grfMode ) {
    IUnknown * _result = 0;
    _com_dispatch_method(this, 0x49, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, 
        L"\x0008\x0003", (BSTR)Name, grfMode);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5586)
inline VARIANT_BOOL TGDraft::DraftDocument::GetDirty ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5587)
inline void TGDraft::DraftDocument::PutDirty ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5588)
inline TGFramework::AttributeQueryPtr TGDraft::DraftDocument::GetAttributeQuery ( ) {
    struct TGFramework::AttributeQuery * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::AttributeQueryPtr(_result, false);
}

#pragma implementation_key(5589)
inline _bstr_t TGDraft::DraftDocument::GetCreatedVersion ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5590)
inline _bstr_t TGDraft::DraftDocument::GetLastSavedVersion ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5591)
inline TGFramework::HighlightSetsPtr TGDraft::DraftDocument::GetHighlightSets ( ) {
    struct TGFramework::HighlightSets * _result = 0;
    _com_dispatch_method(this, 0x4d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::HighlightSetsPtr(_result, false);
}

#pragma implementation_key(5592)
inline VARIANT_BOOL TGDraft::DraftDocument::GetInPlaceActivated ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5593)
inline HRESULT TGDraft::DraftDocument::SeekWriteAccess ( VARIANT_BOOL * WriteAccess ) {
    return _com_dispatch_method(this, 0x4f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b", WriteAccess);
}

#pragma implementation_key(5594)
inline long TGDraft::DraftDocument::GetUndoSteps ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x54, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5595)
inline void TGDraft::DraftDocument::PutUndoSteps ( long _arg1 ) {
    _com_dispatch_method(this, 0x54, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5596)
inline HRESULT TGDraft::DraftDocument::CreatePreview ( ) {
    return _com_dispatch_method(this, 0x59, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5597)
inline void TGDraft::DraftDocument::PutReadOnly ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5598)
inline HRESULT TGDraft::DraftDocument::SeekReadOnlyAccess ( VARIANT_BOOL * ReadOnlyAccess ) {
    return _com_dispatch_method(this, 0x5a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b", ReadOnlyAccess);
}

#pragma implementation_key(5599)
inline HRESULT TGDraft::DraftDocument::ImportStyles2 ( enum TGFramework::seStyleTypeConstants StyleType, VARIANT_BOOL bReplace, IDispatch * pSrcDocument ) {
    return _com_dispatch_method(this, 0x5c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x000b\x0009", StyleType, bReplace, pSrcDocument);
}

#pragma implementation_key(5600)
inline VARIANT_BOOL TGDraft::DraftDocument::GetIsInsightFile ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x5d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5601)
inline TGFramework::NamedViewsPtr TGDraft::DraftDocument::GetNamedViews ( ) {
    struct TGFramework::NamedViews * _result = 0;
    _com_dispatch_method(this, 0x31, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::NamedViewsPtr(_result, false);
}

#pragma implementation_key(5602)
inline HRESULT TGDraft::DraftDocument::GetRegisteredCustomPropertiesBiDM ( VARIANT * varPropInfo ) {
    return _com_dispatch_method(this, 0x60, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c", varPropInfo);
}

#pragma implementation_key(5603)
inline _bstr_t TGDraft::DraftDocument::SaveAsWithCustomPropertiesBIDM ( _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title, const _variant_t & varPropInfo ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x61, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0008\x0008\x0008\x0008\x000c", (BSTR)FilePath, (BSTR)DocumentNumber, (BSTR)Revision, (BSTR)Title, &varPropInfo);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5604)
inline _bstr_t TGDraft::DraftDocument::ReviseWithCustomPropertiesBIDM ( _bstr_t FilePath, _bstr_t Revision, _bstr_t Title, const _variant_t & varPropInfo ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x62, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0008\x0008\x0008\x000c", (BSTR)FilePath, (BSTR)Revision, (BSTR)Title, &varPropInfo);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5605)
inline HRESULT TGDraft::DraftDocument::SaveAsPRC ( _bstr_t FileName ) {
    return _com_dispatch_method(this, 0x63, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)FileName);
}

#pragma implementation_key(5606)
inline IDispatchPtr TGDraft::DraftDocument::GetVariables ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5607)
inline _variant_t TGDraft::DraftDocument::NewWindow ( const _variant_t & NewWindowOptions, const _variant_t & Environment ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x1069, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &NewWindowOptions, &Environment);
    return _variant_t(_result, false);
}

#pragma implementation_key(5608)
inline TGDraft::SheetsPtr TGDraft::DraftDocument::GetSheets ( ) {
    struct Sheets * _result = 0;
    _com_dispatch_method(this, 0x1065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SheetsPtr(_result, false);
}

#pragma implementation_key(5609)
inline TGDraft::SectionsPtr TGDraft::DraftDocument::GetSections ( ) {
    struct Sections * _result = 0;
    _com_dispatch_method(this, 0x1067, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SectionsPtr(_result, false);
}

#pragma implementation_key(5610)
inline TGDraft::SheetPtr TGDraft::DraftDocument::GetActiveSheet ( ) {
    struct Sheet * _result = 0;
    _com_dispatch_method(this, 0x1066, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SheetPtr(_result, false);
}

#pragma implementation_key(5611)
inline TGDraft::SectionPtr TGDraft::DraftDocument::GetActiveSection ( ) {
    struct Section * _result = 0;
    _com_dispatch_method(this, 0x1068, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SectionPtr(_result, false);
}

#pragma implementation_key(5612)
inline enum TGDraft::SheetSectionTypeConstants TGDraft::DraftDocument::GetActiveSectionType ( ) {
    enum SheetSectionTypeConstants _result;
    _com_dispatch_method(this, 0x1071, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5613)
inline HRESULT TGDraft::DraftDocument::DimensionTrackerStatistics ( long * ChangedDimCount, long * DetachedDimCount ) {
    return _com_dispatch_method(this, 0x10e1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4003", ChangedDimCount, DetachedDimCount);
}

#pragma implementation_key(5614)
inline IDispatchPtr TGDraft::DraftDocument::GetLinearStyles ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2005, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5615)
inline IDispatchPtr TGDraft::DraftDocument::GetSmartFrame2dStyles ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2006, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5616)
inline IDispatchPtr TGDraft::DraftDocument::GetTextStyles ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2007, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5617)
inline IDispatchPtr TGDraft::DraftDocument::GetTextCharStyles ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2008, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5618)
inline IDispatchPtr TGDraft::DraftDocument::GetFillStyles ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2009, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5619)
inline IDispatchPtr TGDraft::DraftDocument::GetHatchPatternStyles ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x200a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5620)
inline IDispatchPtr TGDraft::DraftDocument::GetDimensionStyles ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x3001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5621)
inline IDispatchPtr TGDraft::DraftDocument::GetSymbolProperties ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x5001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5622)
inline TGDraft::ModelLinksPtr TGDraft::DraftDocument::GetModelLinks ( ) {
    struct ModelLinks * _result = 0;
    _com_dispatch_method(this, 0x6065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ModelLinksPtr(_result, false);
}

#pragma implementation_key(5623)
inline TGFrameworkSupport::FeatureControlFrameDataSetsPtr TGDraft::DraftDocument::GetFeatureControlFrameDataSets ( ) {
    struct TGFrameworkSupport::FeatureControlFrameDataSets * _result = 0;
    _com_dispatch_method(this, 0x106a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::FeatureControlFrameDataSetsPtr(_result, false);
}

#pragma implementation_key(5624)
inline TGFrameworkSupport::SurfaceFinishSymbolDataSetsPtr TGDraft::DraftDocument::GetSurfaceFinishSymbolDataSets ( ) {
    struct TGFrameworkSupport::SurfaceFinishSymbolDataSets * _result = 0;
    _com_dispatch_method(this, 0x107d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::SurfaceFinishSymbolDataSetsPtr(_result, false);
}

#pragma implementation_key(5625)
inline TGFrameworkSupport::WeldSymbolDataSetsPtr TGDraft::DraftDocument::GetWeldSymbolDataSets ( ) {
    struct TGFrameworkSupport::WeldSymbolDataSets * _result = 0;
    _com_dispatch_method(this, 0x107e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::WeldSymbolDataSetsPtr(_result, false);
}

#pragma implementation_key(5626)
inline TGDraft::PartsListsPtr TGDraft::DraftDocument::GetPartsLists ( ) {
    struct PartsLists * _result = 0;
    _com_dispatch_method(this, 0x106b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return PartsListsPtr(_result, false);
}

#pragma implementation_key(5627)
inline IUnknownPtr TGDraft::DraftDocument::GetDrawingViewEvents ( ) {
    struct IUnknown * _result = 0;
    _com_dispatch_method(this, 0x106d, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5628)
inline TGDraft::SheetPtr TGDraft::DraftDocument::GetActivePrintingSheet ( ) {
    struct Sheet * _result = 0;
    _com_dispatch_method(this, 0x106c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SheetPtr(_result, false);
}

#pragma implementation_key(5629)
inline HRESULT TGDraft::DraftDocument::GetGlobalParameter ( enum DraftGlobalConstants Parameter, VARIANT * value ) {
    return _com_dispatch_method(this, 0x106e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x400c", Parameter, value);
}

#pragma implementation_key(5630)
inline HRESULT TGDraft::DraftDocument::SetGlobalParameter ( enum DraftGlobalConstants Parameter, const _variant_t & value ) {
    return _com_dispatch_method(this, 0x106f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x000c", Parameter, &value);
}

#pragma implementation_key(5631)
inline TGDraft::HoleTablesPtr TGDraft::DraftDocument::GetHoleTables ( ) {
    struct HoleTables * _result = 0;
    _com_dispatch_method(this, 0x1070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return HoleTablesPtr(_result, false);
}

#pragma implementation_key(5632)
inline HRESULT TGDraft::DraftDocument::AnnotationTrackerStatistics ( long * ChangedAnnotationCount, long * DetachedAnnotationCount ) {
    return _com_dispatch_method(this, 0x10e2, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4003", ChangedAnnotationCount, DetachedAnnotationCount);
}

#pragma implementation_key(5633)
inline VARIANT_BOOL TGDraft::DraftDocument::GetMaintainRelationships ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1072, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5634)
inline void TGDraft::DraftDocument::PutMaintainRelationships ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1072, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5635)
inline HRESULT TGDraft::DraftDocument::UpdatePropertyTextDisplay ( ) {
    return _com_dispatch_method(this, 0x1074, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5636)
inline HRESULT TGDraft::DraftDocument::UpdatePropertyTextCacheAndDisplay ( ) {
    return _com_dispatch_method(this, 0x1075, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5637)
inline IUnknownPtr TGDraft::DraftDocument::GetPartsListEvents ( ) {
    struct IUnknown * _result = 0;
    _com_dispatch_method(this, 0x1076, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5638)
inline IDispatchPtr TGDraft::DraftDocument::GetDashStyles ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x200b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5639)
inline HRESULT TGDraft::DraftDocument::PopulateQuicksheetTemplate ( _bstr_t FileName ) {
    return _com_dispatch_method(this, 0x1077, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)FileName);
}

#pragma implementation_key(5640)
inline long TGDraft::DraftDocument::GetQuicksheetTemplateCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1078, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5641)
inline TGDraft::BlocksPtr TGDraft::DraftDocument::GetBlocks ( ) {
    struct Blocks * _result = 0;
    _com_dispatch_method(this, 0x1079, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return BlocksPtr(_result, false);
}

#pragma implementation_key(5642)
inline TGDraft::TablesPtr TGDraft::DraftDocument::GetTables ( ) {
    struct Tables * _result = 0;
    _com_dispatch_method(this, 0x107a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TablesPtr(_result, false);
}

#pragma implementation_key(5643)
inline VARIANT_BOOL TGDraft::DraftDocument::GetInactiveDrawingViewMode ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x107b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5644)
inline void TGDraft::DraftDocument::PutInactiveDrawingViewMode ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x107b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5645)
inline HRESULT TGDraft::DraftDocument::DimensionTrackerStatisticsEx ( long * ChangedAnnotationCount, long * ChangedDimensionCount, long * DetachedAnnotationCount, long * DetachedDimensionCount, long * AnnotationsReattachedToAvailableGeometry, long * DimensionsReattachedToAvailableGeometry ) {
    return _com_dispatch_method(this, 0x107c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4003\x4003\x4003\x4003\x4003", ChangedAnnotationCount, ChangedDimensionCount, DetachedAnnotationCount, DetachedDimensionCount, AnnotationsReattachedToAvailableGeometry, DimensionsReattachedToAvailableGeometry);
}

#pragma implementation_key(5646)
inline HRESULT TGDraft::DraftDocument::DimensionTrackerNumEntries ( long * NumberOfEntries ) {
    return _com_dispatch_method(this, 0x107f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003", NumberOfEntries);
}

#pragma implementation_key(5647)
inline HRESULT TGDraft::DraftDocument::DimensionTrackerEntry ( long Entry, long * BalloonID, IDispatch * * pObject, enum DimensionTrackerReasonCode * ReasonCode, double * PreviousValue, double * CurrentValue, BSTR * SheetName ) {
    return _com_dispatch_method(this, 0x1080, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4003\x4009\x4003\x4005\x4005\x4008", Entry, BalloonID, pObject, ReasonCode, PreviousValue, CurrentValue, SheetName);
}

#pragma implementation_key(5648)
inline HRESULT TGDraft::DraftDocument::GoalSeek ( _bstr_t NameTargetVariable, _bstr_t NameVariableToChange, double dTargetValue, double dTimeLimitInSecs, long NumIterationsLimit, double * dTimeElapsed, long * NumIterations, VARIANT_BOOL * TimeLimitExceeded, VARIANT_BOOL * IterationsLimitExceeded ) {
    return _com_dispatch_method(this, 0x58, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0005\x0005\x0003\x4005\x4003\x400b\x400b", (BSTR)NameTargetVariable, (BSTR)NameVariableToChange, dTargetValue, dTimeLimitInSecs, NumIterationsLimit, dTimeElapsed, NumIterations, TimeLimitExceeded, IterationsLimitExceeded);
}

#pragma implementation_key(5649)
inline HRESULT TGDraft::DraftDocument::PrintOutEx ( const _variant_t & Printer, const _variant_t & NumCopies, const _variant_t & Orientation, const _variant_t & PaperSize, const _variant_t & Scale, const _variant_t & PrintToFile, const _variant_t & OutputFileName, const _variant_t & PrintRange, const _variant_t & Sheets, const _variant_t & ColorAsBlack, const _variant_t & Collate, const _variant_t & ScaleLineWidths, const _variant_t & ScaleLineTypes, const _variant_t & UsePrinterClipping ) {
    return _com_dispatch_method(this, 0x1081, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &Printer, &NumCopies, &Orientation, &PaperSize, &Scale, &PrintToFile, &OutputFileName, &PrintRange, &Sheets, &ColorAsBlack, &Collate, &ScaleLineWidths, &ScaleLineTypes, &UsePrinterClipping);
}

#pragma implementation_key(5650)
inline TGDraft::DraftBendTablesPtr TGDraft::DraftDocument::GetDraftBendTables ( ) {
    struct DraftBendTables * _result = 0;
    _com_dispatch_method(this, 0x1082, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DraftBendTablesPtr(_result, false);
}

#pragma implementation_key(5651)
inline IUnknownPtr TGDraft::DraftDocument::GetDraftBendTableEvents ( ) {
    struct IUnknown * _result = 0;
    _com_dispatch_method(this, 0x1083, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5652)
inline TGDraft::DraftFilePreferencesPtr TGDraft::DraftDocument::GetFilePreferences ( ) {
    struct DraftFilePreferences * _result = 0;
    _com_dispatch_method(this, 0x1084, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DraftFilePreferencesPtr(_result, false);
}

#pragma implementation_key(5653)
inline TGFrameworkSupport::DrawingViewStylesPtr TGDraft::DraftDocument::GetDrawingViewStyles ( ) {
    struct TGFrameworkSupport::DrawingViewStyles * _result = 0;
    _com_dispatch_method(this, 0x1085, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::DrawingViewStylesPtr(_result, false);
}

#pragma implementation_key(5654)
inline VARIANT_BOOL TGDraft::DraftDocument::GetDisplayRelationshipHandles ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1086, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5655)
inline void TGDraft::DraftDocument::PutDisplayRelationshipHandles ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1086, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5656)
inline VARIANT_BOOL TGDraft::DraftDocument::GetDisplayAlignmentIndicator ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1087, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5657)
inline void TGDraft::DraftDocument::PutDisplayAlignmentIndicator ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1087, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5658)
inline IDispatchPtr TGDraft::DraftDocument::GetObjectFromKey ( _bstr_t Key ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1088, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008", (BSTR)Key);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5659)
inline HRESULT TGDraft::DraftDocument::ClearAllDimensionTrackerEntries ( ) {
    return _com_dispatch_method(this, 0x1089, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5660)
inline TGDraft::ConnectorTablesPtr TGDraft::DraftDocument::GetConnectorTables ( ) {
    struct ConnectorTables * _result = 0;
    _com_dispatch_method(this, 0x108a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ConnectorTablesPtr(_result, false);
}

#pragma implementation_key(5661)
inline IUnknownPtr TGDraft::DraftDocument::GetConnectorTableEvents ( ) {
    struct IUnknown * _result = 0;
    _com_dispatch_method(this, 0x108b, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5662)
inline IDispatchPtr TGDraft::DraftDocument::GetSheetGroups ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x108c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5663)
inline HRESULT TGDraft::DraftDocument::SetFilenameForDVWizard ( _bstr_t FileName ) {
    return _com_dispatch_method(this, 0x108d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)FileName);
}

#pragma implementation_key(5664)
inline HRESULT TGDraft::DraftDocument::SetSymbolFileOrigin ( double XOrigin, double YOrigin ) {
    return _com_dispatch_method(this, 0x108e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", XOrigin, YOrigin);
}

#pragma implementation_key(5665)
inline HRESULT TGDraft::DraftDocument::GetSymbolFileOrigin ( double * pxOrigin, double * pyOrigin ) {
    return _com_dispatch_method(this, 0x108f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", pxOrigin, pyOrigin);
}

#pragma implementation_key(5666)
inline TGDraft::BlockTablesPtr TGDraft::DraftDocument::GetBlockTables ( ) {
    struct BlockTables * _result = 0;
    _com_dispatch_method(this, 0x1090, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return BlockTablesPtr(_result, false);
}

#pragma implementation_key(5667)
inline IUnknownPtr TGDraft::DraftDocument::GetBlockTableEvents ( ) {
    struct IUnknown * _result = 0;
    _com_dispatch_method(this, 0x1091, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5668)
inline TGFrameworkSupport::TableStylesPtr TGDraft::DraftDocument::GetTableStyles ( ) {
    struct TGFrameworkSupport::TableStyles * _result = 0;
    _com_dispatch_method(this, 0x1092, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::TableStylesPtr(_result, false);
}

#pragma implementation_key(5669)
inline TGDraft::FOPTablesPtr TGDraft::DraftDocument::GetFOPTables ( ) {
    struct FOPTables * _result = 0;
    _com_dispatch_method(this, 0x1093, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return FOPTablesPtr(_result, false);
}

#pragma implementation_key(5670)
inline TGDraft::ConductorTablesPtr TGDraft::DraftDocument::GetConductorTables ( ) {
    struct ConductorTables * _result = 0;
    _com_dispatch_method(this, 0x1094, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ConductorTablesPtr(_result, false);
}

#pragma implementation_key(5671)
inline TGDraft::ToleranceTablesPtr TGDraft::DraftDocument::GetToleranceTables ( ) {
    struct ToleranceTables * _result = 0;
    _com_dispatch_method(this, 0x1095, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ToleranceTablesPtr(_result, false);
}

#pragma implementation_key(5672)
inline TGDraft::HoleTables2Ptr TGDraft::DraftDocument::GetHoleTables2 ( ) {
    struct HoleTables2 * _result = 0;
    _com_dispatch_method(this, 0x1096, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return HoleTables2Ptr(_result, false);
}

#pragma implementation_key(5673)
inline VARIANT_BOOL TGDraft::DraftDocument::GetLocateBackgroundSheetGeometry ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1097, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5674)
inline void TGDraft::DraftDocument::PutLocateBackgroundSheetGeometry ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1097, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5675)
inline HRESULT TGDraft::DraftDocument::UpdateRetrievedDimensionsAndAnnotations ( ) {
    return _com_dispatch_method(this, 0x1098, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5676)
inline void TGDraft::DraftDocument::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5677)
inline HRESULT TGDraft::DraftDocument::UpdateAll ( VARIANT_BOOL bForceUpdate ) {
    return _com_dispatch_method(this, 0x1099, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", bForceUpdate);
}

#pragma implementation_key(5678)
inline VARIANT_BOOL TGDraft::DraftDocument::GetMaintainAlignmentSet ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x109a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5679)
inline void TGDraft::DraftDocument::PutMaintainAlignmentSet ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x109a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5680)
inline TGDraft::WeldTablesPtr TGDraft::DraftDocument::GetWeldTables ( ) {
    struct WeldTables * _result = 0;
    _com_dispatch_method(this, 0x109b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return WeldTablesPtr(_result, false);
}

//
// interface _IDraftPrintUtilityAuto wrapper method implementations
//

#pragma implementation_key(5681)
inline TGFramework::ApplicationPtr TGDraft::_IDraftPrintUtilityAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5682)
inline TGFramework::ApplicationPtr TGDraft::_IDraftPrintUtilityAuto::GetParent ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5683)
inline _bstr_t TGDraft::_IDraftPrintUtilityAuto::GetPrinter ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Printer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5684)
inline void TGDraft::_IDraftPrintUtilityAuto::PutPrinter ( _bstr_t pPrinter ) {
    HRESULT _hr = put_Printer(pPrinter);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5685)
inline HRESULT TGDraft::_IDraftPrintUtilityAuto::AddFile ( _bstr_t FileName ) {
    HRESULT _hr = raw_AddFile(FileName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5686)
inline HRESULT TGDraft::_IDraftPrintUtilityAuto::AddDocument ( struct DraftDocument * pDocument ) {
    HRESULT _hr = raw_AddDocument(pDocument);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5687)
inline HRESULT TGDraft::_IDraftPrintUtilityAuto::AddSheet ( struct Sheet * pSheet ) {
    HRESULT _hr = raw_AddSheet(pSheet);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5688)
inline HRESULT TGDraft::_IDraftPrintUtilityAuto::RemoveAllDocuments ( ) {
    HRESULT _hr = raw_RemoveAllDocuments();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5689)
inline enum TGDraft::DraftPrintSheetsPerPageConstants TGDraft::_IDraftPrintUtilityAuto::GetSheetsPerPage ( ) {
    enum DraftPrintSheetsPerPageConstants _result;
    HRESULT _hr = get_SheetsPerPage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5690)
inline void TGDraft::_IDraftPrintUtilityAuto::PutSheetsPerPage ( enum DraftPrintSheetsPerPageConstants pSheetsPerPage ) {
    HRESULT _hr = put_SheetsPerPage(pSheetsPerPage);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5691)
inline enum TGDraft::DraftPrintUnitsConstants TGDraft::_IDraftPrintUtilityAuto::GetUnits ( ) {
    enum DraftPrintUnitsConstants _result;
    HRESULT _hr = get_Units(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5692)
inline void TGDraft::_IDraftPrintUtilityAuto::PutUnits ( enum DraftPrintUnitsConstants pUnits ) {
    HRESULT _hr = put_Units(pUnits);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5693)
inline VARIANT_BOOL TGDraft::_IDraftPrintUtilityAuto::GetPrintAsBlack ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_PrintAsBlack(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5694)
inline void TGDraft::_IDraftPrintUtilityAuto::PutPrintAsBlack ( VARIANT_BOOL pPrintAsBlack ) {
    HRESULT _hr = put_PrintAsBlack(pPrintAsBlack);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5695)
inline VARIANT_BOOL TGDraft::_IDraftPrintUtilityAuto::GetScaleLineWidths ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ScaleLineWidths(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5696)
inline void TGDraft::_IDraftPrintUtilityAuto::PutScaleLineWidths ( VARIANT_BOOL pScaleLineWidths ) {
    HRESULT _hr = put_ScaleLineWidths(pScaleLineWidths);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5697)
inline VARIANT_BOOL TGDraft::_IDraftPrintUtilityAuto::GetScaleLineTypes ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ScaleLineTypes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5698)
inline void TGDraft::_IDraftPrintUtilityAuto::PutScaleLineTypes ( VARIANT_BOOL pScaleLineTypes ) {
    HRESULT _hr = put_ScaleLineTypes(pScaleLineTypes);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5699)
inline VARIANT_BOOL TGDraft::_IDraftPrintUtilityAuto::GetUsePrinterClipping ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsePrinterClipping(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5700)
inline void TGDraft::_IDraftPrintUtilityAuto::PutUsePrinterClipping ( VARIANT_BOOL pUsePrinterClipping ) {
    HRESULT _hr = put_UsePrinterClipping(pUsePrinterClipping);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5701)
inline enum TGDraft::DraftPrintScaleTooLargeActionConstants TGDraft::_IDraftPrintUtilityAuto::GetScaleTooLarge ( ) {
    enum DraftPrintScaleTooLargeActionConstants _result;
    HRESULT _hr = get_ScaleTooLarge(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5702)
inline void TGDraft::_IDraftPrintUtilityAuto::PutScaleTooLarge ( enum DraftPrintScaleTooLargeActionConstants pAction ) {
    HRESULT _hr = put_ScaleTooLarge(pAction);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5703)
inline VARIANT_BOOL TGDraft::_IDraftPrintUtilityAuto::GetPrintToFile ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_PrintToFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5704)
inline void TGDraft::_IDraftPrintUtilityAuto::PutPrintToFile ( VARIANT_BOOL pPrintToFile ) {
    HRESULT _hr = put_PrintToFile(pPrintToFile);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5705)
inline _bstr_t TGDraft::_IDraftPrintUtilityAuto::GetPrintToFilePath ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PrintToFilePath(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5706)
inline void TGDraft::_IDraftPrintUtilityAuto::PutPrintToFilePath ( _bstr_t pPrintToFilePath ) {
    HRESULT _hr = put_PrintToFilePath(pPrintToFilePath);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5707)
inline _bstr_t TGDraft::_IDraftPrintUtilityAuto::GetPrintToFileName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PrintToFileName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5708)
inline void TGDraft::_IDraftPrintUtilityAuto::PutPrintToFileName ( _bstr_t pPrintToFileName ) {
    HRESULT _hr = put_PrintToFileName(pPrintToFileName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5709)
inline double TGDraft::_IDraftPrintUtilityAuto::GetSingleSheetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_SingleSheetScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5710)
inline void TGDraft::_IDraftPrintUtilityAuto::PutSingleSheetScale ( double pSingleSheetScale ) {
    HRESULT _hr = put_SingleSheetScale(pSingleSheetScale);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5711)
inline VARIANT_BOOL TGDraft::_IDraftPrintUtilityAuto::GetCenter ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Center(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5712)
inline void TGDraft::_IDraftPrintUtilityAuto::PutCenter ( VARIANT_BOOL pCenter ) {
    HRESULT _hr = put_Center(pCenter);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5713)
inline VARIANT_BOOL TGDraft::_IDraftPrintUtilityAuto::GetAutoOrient ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AutoOrient(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5714)
inline void TGDraft::_IDraftPrintUtilityAuto::PutAutoOrient ( VARIANT_BOOL pAutoOrient ) {
    HRESULT _hr = put_AutoOrient(pAutoOrient);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5715)
inline VARIANT_BOOL TGDraft::_IDraftPrintUtilityAuto::GetBestFit ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BestFit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5716)
inline void TGDraft::_IDraftPrintUtilityAuto::PutBestFit ( VARIANT_BOOL pBestFit ) {
    HRESULT _hr = put_BestFit(pBestFit);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5717)
inline double TGDraft::_IDraftPrintUtilityAuto::GetMultipleSheetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_MultipleSheetScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5718)
inline void TGDraft::_IDraftPrintUtilityAuto::PutMultipleSheetScale ( double pMultipleSheetScale ) {
    HRESULT _hr = put_MultipleSheetScale(pMultipleSheetScale);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5719)
inline double TGDraft::_IDraftPrintUtilityAuto::GetGap ( ) {
    double _result = 0;
    HRESULT _hr = get_Gap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5720)
inline void TGDraft::_IDraftPrintUtilityAuto::PutGap ( double pGap ) {
    HRESULT _hr = put_Gap(pGap);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5721)
inline VARIANT_BOOL TGDraft::_IDraftPrintUtilityAuto::GetDisplaySheetBoundary ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplaySheetBoundary(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5722)
inline void TGDraft::_IDraftPrintUtilityAuto::PutDisplaySheetBoundary ( VARIANT_BOOL pDisplaySheetBoundary ) {
    HRESULT _hr = put_DisplaySheetBoundary(pDisplaySheetBoundary);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5723)
inline VARIANT_BOOL TGDraft::_IDraftPrintUtilityAuto::GetDisplayCutLine ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayCutLine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5724)
inline void TGDraft::_IDraftPrintUtilityAuto::PutDisplayCutLine ( VARIANT_BOOL pDisplayCutLine ) {
    HRESULT _hr = put_DisplayCutLine(pDisplayCutLine);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5725)
inline VARIANT_BOOL TGDraft::_IDraftPrintUtilityAuto::GetUsePrinterMargins ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UsePrinterMargins(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5726)
inline void TGDraft::_IDraftPrintUtilityAuto::PutUsePrinterMargins ( VARIANT_BOOL pUsePrinterMargins ) {
    HRESULT _hr = put_UsePrinterMargins(pUsePrinterMargins);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5727)
inline HRESULT TGDraft::_IDraftPrintUtilityAuto::GetMargins ( double * pdLeft, double * pdTop, double * pdRight, double * pdBottom ) {
    HRESULT _hr = raw_GetMargins(pdLeft, pdTop, pdRight, pdBottom);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5728)
inline HRESULT TGDraft::_IDraftPrintUtilityAuto::SetMargins ( double dLeft, double dTop, double dRight, double dBottom ) {
    HRESULT _hr = raw_SetMargins(dLeft, dTop, dRight, dBottom);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5729)
inline HRESULT TGDraft::_IDraftPrintUtilityAuto::PrintOut ( ) {
    HRESULT _hr = raw_PrintOut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5730)
inline enum TGDraft::DraftPrintOrientationConstants TGDraft::_IDraftPrintUtilityAuto::GetOrientation ( ) {
    enum DraftPrintOrientationConstants _result;
    HRESULT _hr = get_Orientation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5731)
inline void TGDraft::_IDraftPrintUtilityAuto::PutOrientation ( enum DraftPrintOrientationConstants pOrientation ) {
    HRESULT _hr = put_Orientation(pOrientation);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5732)
inline double TGDraft::_IDraftPrintUtilityAuto::GetPaperWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_PaperWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5733)
inline void TGDraft::_IDraftPrintUtilityAuto::PutPaperWidth ( double pPaperWidth ) {
    HRESULT _hr = put_PaperWidth(pPaperWidth);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5734)
inline double TGDraft::_IDraftPrintUtilityAuto::GetPaperHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_PaperHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5735)
inline void TGDraft::_IDraftPrintUtilityAuto::PutPaperHeight ( double pPaperHeight ) {
    HRESULT _hr = put_PaperHeight(pPaperHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5736)
inline enum TGDraft::DraftPrintPaperSizeConstants TGDraft::_IDraftPrintUtilityAuto::GetPaperSize ( ) {
    enum DraftPrintPaperSizeConstants _result;
    HRESULT _hr = get_PaperSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5737)
inline void TGDraft::_IDraftPrintUtilityAuto::PutPaperSize ( enum DraftPrintPaperSizeConstants pPaperSize ) {
    HRESULT _hr = put_PaperSize(pPaperSize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5738)
inline short TGDraft::_IDraftPrintUtilityAuto::GetCopies ( ) {
    short _result = 0;
    HRESULT _hr = get_Copies(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5739)
inline void TGDraft::_IDraftPrintUtilityAuto::PutCopies ( short pCopies ) {
    HRESULT _hr = put_Copies(pCopies);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5740)
inline HRESULT TGDraft::_IDraftPrintUtilityAuto::SavePreferences ( ) {
    HRESULT _hr = raw_SavePreferences();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5741)
inline HRESULT TGDraft::_IDraftPrintUtilityAuto::GetOrigin ( double * pdXOrigin, double * pdYOrigin ) {
    HRESULT _hr = raw_GetOrigin(pdXOrigin, pdYOrigin);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5742)
inline HRESULT TGDraft::_IDraftPrintUtilityAuto::SetOrigin ( double dXOrigin, double dYOrigin ) {
    HRESULT _hr = raw_SetOrigin(dXOrigin, dYOrigin);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5743)
inline VARIANT_BOOL TGDraft::_IDraftPrintUtilityAuto::GetIncludeWatermark ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IncludeWatermark(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5744)
inline void TGDraft::_IDraftPrintUtilityAuto::PutIncludeWatermark ( VARIANT_BOOL pIncludeWatermark ) {
    HRESULT _hr = put_IncludeWatermark(pIncludeWatermark);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// dispinterface ViewPlane wrapper method implementations
//

#pragma implementation_key(5745)
inline void TGDraft::ViewPlane::PutDisplayCaption ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5746)
inline VARIANT_BOOL TGDraft::ViewPlane::GetDisplayCaption ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5747)
inline TGDraft::DrawingViewPtr TGDraft::ViewPlane::GetSourceDrawingView ( ) {
    struct DrawingView * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DrawingViewPtr(_result, false);
}

#pragma implementation_key(5748)
inline _bstr_t TGDraft::ViewPlane::GetCaption ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5749)
inline void TGDraft::ViewPlane::PutCaption ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5750)
inline enum TGFrameworkSupport::DimViewPlaneDisplayTypeConstants TGDraft::ViewPlane::GetDisplayType ( ) {
    enum TGFrameworkSupport::DimViewPlaneDisplayTypeConstants _result;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5751)
inline void TGDraft::ViewPlane::PutDisplayType ( enum TGFrameworkSupport::DimViewPlaneDisplayTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5752)
inline _bstr_t TGDraft::ViewPlane::GetTextFont ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x2001, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5753)
inline void TGDraft::ViewPlane::PutTextFont ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x2001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5754)
inline enum TGFrameworkSupport::DimTextFontStyleConstants TGDraft::ViewPlane::GetTextFontStyle ( ) {
    enum TGFrameworkSupport::DimTextFontStyleConstants _result;
    _com_dispatch_method(this, 0x2002, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5755)
inline void TGDraft::ViewPlane::PutTextFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants _arg1 ) {
    _com_dispatch_method(this, 0x2002, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5756)
inline double TGDraft::ViewPlane::GetTextHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x2003, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5757)
inline void TGDraft::ViewPlane::PutTextHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x2003, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(5758)
inline double TGDraft::ViewPlane::GetTextRatio ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x2004, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5759)
inline void TGDraft::ViewPlane::PutTextRatio ( double _arg1 ) {
    _com_dispatch_method(this, 0x2004, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(5760)
inline long TGDraft::ViewPlane::GetTextColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2005, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5761)
inline void TGDraft::ViewPlane::PutTextColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x2005, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5762)
inline _bstr_t TGDraft::ViewPlane::GetStyleName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x2006, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5763)
inline void TGDraft::ViewPlane::PutStyleName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x2006, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5764)
inline enum TGFrameworkSupport::DimTermTypeConstants TGDraft::ViewPlane::GetTerminatorType ( ) {
    enum TGFrameworkSupport::DimTermTypeConstants _result;
    _com_dispatch_method(this, 0x3001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5765)
inline void TGDraft::ViewPlane::PutTerminatorType ( enum TGFrameworkSupport::DimTermTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x3001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5766)
inline double TGDraft::ViewPlane::GetTerminatorRatio ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3002, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5767)
inline void TGDraft::ViewPlane::PutTerminatorRatio ( double _arg1 ) {
    _com_dispatch_method(this, 0x3002, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(5768)
inline double TGDraft::ViewPlane::GetLineWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3003, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5769)
inline void TGDraft::ViewPlane::PutLineWidth ( double _arg1 ) {
    _com_dispatch_method(this, 0x3003, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(5770)
inline _bstr_t TGDraft::ViewPlane::GetLineType ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x3004, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5771)
inline void TGDraft::ViewPlane::PutLineType ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3004, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5772)
inline TGFramework::ApplicationPtr TGDraft::ViewPlane::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x4065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5773)
inline long TGDraft::ViewPlane::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4066, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5774)
inline _bstr_t TGDraft::ViewPlane::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4067, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5775)
inline IDispatchPtr TGDraft::ViewPlane::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4068, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5776)
inline long TGDraft::ViewPlane::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4069, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5777)
inline VARIANT_BOOL TGDraft::ViewPlane::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x406a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5778)
inline void TGDraft::ViewPlane::PutVisible ( VARIANT_BOOL * _arg1 ) {
    _com_dispatch_method(this, 0x406a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x400b", _arg1);
}

#pragma implementation_key(5779)
inline long TGDraft::ViewPlane::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x406b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5780)
inline _bstr_t TGDraft::ViewPlane::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x406c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5781)
inline IDispatchPtr TGDraft::ViewPlane::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x406d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5782)
inline HRESULT TGDraft::ViewPlane::Copy ( ) {
    return _com_dispatch_method(this, 0x6001400a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5783)
inline HRESULT TGDraft::ViewPlane::Cut ( ) {
    return _com_dispatch_method(this, 0x6001400b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5784)
inline HRESULT TGDraft::ViewPlane::Delete ( ) {
    return _com_dispatch_method(this, 0x6001400c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5785)
inline HRESULT TGDraft::ViewPlane::BringToFront ( ) {
    return _com_dispatch_method(this, 0x6001400d, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5786)
inline HRESULT TGDraft::ViewPlane::BringForward ( ) {
    return _com_dispatch_method(this, 0x6001400e, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5787)
inline HRESULT TGDraft::ViewPlane::SendToBack ( ) {
    return _com_dispatch_method(this, 0x6001400f, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5788)
inline HRESULT TGDraft::ViewPlane::SendBackward ( ) {
    return _com_dispatch_method(this, 0x60014010, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5789)
inline HRESULT TGDraft::ViewPlane::Select ( ) {
    return _com_dispatch_method(this, 0x60014011, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5790)
inline HRESULT TGDraft::ViewPlane::Range ( double * min_x, double * min_y, double * max_x, double * max_y ) {
    return _com_dispatch_method(this, 0x60014012, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", min_x, min_y, max_x, max_y);
}

#pragma implementation_key(5791)
inline _bstr_t TGDraft::ViewPlane::GetCaptionDefinitionText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x73, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5792)
inline void TGDraft::ViewPlane::PutCaptionDefinitionText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x73, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5793)
inline _bstr_t TGDraft::ViewPlane::GetCaptionDisplayedText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x74, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5794)
inline HRESULT TGDraft::ViewPlane::GetFoldLineWithViewDirection ( double * LineStartX, double * LineStartY, double * LineEndX, double * LineEndY, double * ViewDirectionX, double * ViewDirectionY ) {
    return _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005", LineStartX, LineStartY, LineEndX, LineEndY, ViewDirectionX, ViewDirectionY);
}

#pragma implementation_key(5795)
inline HRESULT TGDraft::ViewPlane::GetViewLineWithArrowDirection ( double * LineStartX, double * LineStartY, double * LineEndX, double * LineEndY, double * ArrowDirectionX, double * ArrowDirectionY ) {
    return _com_dispatch_method(this, 0x76, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005", LineStartX, LineStartY, LineEndX, LineEndY, ArrowDirectionX, ArrowDirectionY);
}

#pragma implementation_key(5796)
inline _bstr_t TGDraft::ViewPlane::GetViewSheetNumberDefinitionText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5797)
inline void TGDraft::ViewPlane::PutViewSheetNumberDefinitionText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5798)
inline VARIANT_BOOL TGDraft::ViewPlane::GetDisplayViewSheetNumber ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5799)
inline void TGDraft::ViewPlane::PutDisplayViewSheetNumber ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5800)
inline enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants TGDraft::ViewPlane::GetViewSheetNumberLocation ( ) {
    enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants _result;
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5801)
inline void TGDraft::ViewPlane::PutViewSheetNumberLocation ( enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants _arg1 ) {
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5802)
inline HRESULT TGDraft::ViewPlane::GetCaptionPosition ( VARIANT_BOOL CaptionAtStartOfLine, double * x, double * y ) {
    return _com_dispatch_method(this, 0x7a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b\x4005\x4005", CaptionAtStartOfLine, x, y);
}

#pragma implementation_key(5803)
inline HRESULT TGDraft::ViewPlane::SetCaptionPosition ( VARIANT_BOOL CaptionAtStartOfLine, double x, double y ) {
    return _com_dispatch_method(this, 0x7b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b\x0005\x0005", CaptionAtStartOfLine, x, y);
}

#pragma implementation_key(5804)
inline void TGDraft::ViewPlane::PutAuto ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5805)
inline VARIANT_BOOL TGDraft::ViewPlane::GetAuto ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5806)
inline IDispatchPtr TGDraft::ViewPlane::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5807)
inline VARIANT_BOOL TGDraft::ViewPlane::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(5808)
inline HRESULT TGDraft::ViewPlane::SetAuxiliaryViewArrowPosition ( double startPosX, double startPosY, double endPosX, double endPosY ) {
    return _com_dispatch_method(this, 0x7d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", startPosX, startPosY, endPosX, endPosY);
}

//
// dispinterface SheetWindow wrapper method implementations
//

#pragma implementation_key(5809)
inline void TGDraft::SheetWindow::PutActiveSheet ( struct Sheet * _arg1 ) {
    _com_dispatch_method(this, 0x64, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(5810)
inline TGDraft::SheetPtr TGDraft::SheetWindow::GetActiveSheet ( ) {
    struct Sheet * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SheetPtr(_result, false);
}

#pragma implementation_key(5811)
inline TGDraft::SectionPtr TGDraft::SheetWindow::GetActiveSection ( ) {
    struct Section * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SectionPtr(_result, false);
}

#pragma implementation_key(5812)
inline void TGDraft::SheetWindow::PutActiveSection ( struct Section * _arg1 ) {
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(5813)
inline enum TGDraft::SheetSectionTypeConstants TGDraft::SheetWindow::GetActiveSectionType ( ) {
    enum SheetSectionTypeConstants _result;
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5814)
inline void TGDraft::SheetWindow::PutActiveSectionType ( enum SheetSectionTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5815)
inline void TGDraft::SheetWindow::PutDisplaySheetTabs ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5816)
inline VARIANT_BOOL TGDraft::SheetWindow::GetDisplaySheetTabs ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5817)
inline void TGDraft::SheetWindow::PutDisplaySectionTabs ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5818)
inline VARIANT_BOOL TGDraft::SheetWindow::GetDisplaySectionTabs ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5819)
inline void TGDraft::SheetWindow::PutTransparentDisplay ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5820)
inline VARIANT_BOOL TGDraft::SheetWindow::GetTransparentDisplay ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5821)
inline void TGDraft::SheetWindow::PutSheetTabRatio ( double _arg1 ) {
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(5822)
inline double TGDraft::SheetWindow::GetSheetTabRatio ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5823)
inline double TGDraft::SheetWindow::GetSectionTabRatio ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5824)
inline void TGDraft::SheetWindow::PutSectionTabRatio ( double _arg1 ) {
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(5825)
inline TGDraft::SelectedSheetsPtr TGDraft::SheetWindow::GetSelectedSheets ( ) {
    struct SelectedSheets * _result = 0;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SelectedSheetsPtr(_result, false);
}

#pragma implementation_key(5826)
inline void TGDraft::SheetWindow::PutZoom ( double _arg1 ) {
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(5827)
inline double TGDraft::SheetWindow::GetZoom ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5828)
inline int TGDraft::SheetWindow::GetUsableHeight ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5829)
inline int TGDraft::SheetWindow::GetUsableWidth ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5830)
inline VARIANT_BOOL TGDraft::SheetWindow::GetDisplayHScroll ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x73, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5831)
inline void TGDraft::SheetWindow::PutDisplayHScroll ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x73, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5832)
inline VARIANT_BOOL TGDraft::SheetWindow::GetDisplayVScroll ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x74, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5833)
inline void TGDraft::SheetWindow::PutDisplayVScroll ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x74, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5834)
inline TGFrameworkSupport::BackDropPtr TGDraft::SheetWindow::GetBackdrop ( ) {
    struct TGFrameworkSupport::BackDrop * _result = 0;
    _com_dispatch_method(this, 0x75, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFrameworkSupport::BackDropPtr(_result, false);
}

#pragma implementation_key(5835)
inline void TGDraft::SheetWindow::PutDisplayAsPrinted ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5836)
inline VARIANT_BOOL TGDraft::SheetWindow::GetDisplayAsPrinted ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5837)
inline HRESULT TGDraft::SheetWindow::Copy ( ) {
    return _com_dispatch_method(this, 0x6001001a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5838)
inline HRESULT TGDraft::SheetWindow::Cut ( ) {
    return _com_dispatch_method(this, 0x6001001b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5839)
inline HRESULT TGDraft::SheetWindow::DeselectSheet ( const _variant_t & Sheet ) {
    return _com_dispatch_method(this, 0x6001001c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c", &Sheet);
}

#pragma implementation_key(5840)
inline HRESULT TGDraft::SheetWindow::Paste ( ) {
    return _com_dispatch_method(this, 0x6001001d, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5841)
inline HRESULT TGDraft::SheetWindow::WindowToModel ( int WindowX, int WindowY, double * ModelX, double * ModelY ) {
    return _com_dispatch_method(this, 0x6001001e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x4005\x4005", WindowX, WindowY, ModelX, ModelY);
}

#pragma implementation_key(5842)
inline HRESULT TGDraft::SheetWindow::ModelToWindow ( double ModelX, double ModelY, int * WindowX, int * WindowY ) {
    return _com_dispatch_method(this, 0x6001001f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x4003\x4003", ModelX, ModelY, WindowX, WindowY);
}

#pragma implementation_key(5843)
inline HRESULT TGDraft::SheetWindow::GetOrigin ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x60010020, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(5844)
inline HRESULT TGDraft::SheetWindow::SetOrigin ( double x, double y ) {
    return _com_dispatch_method(this, 0x60010021, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(5845)
inline HRESULT TGDraft::SheetWindow::Pan ( int x, int y ) {
    return _com_dispatch_method(this, 0x60010022, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", x, y);
}

#pragma implementation_key(5846)
inline HRESULT TGDraft::SheetWindow::SelectSheet ( const _variant_t & Sheet, const _variant_t & Replace ) {
    return _com_dispatch_method(this, 0x60010023, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c\x080c", &Sheet, &Replace);
}

#pragma implementation_key(5847)
inline HRESULT TGDraft::SheetWindow::ZoomArea ( int x1, int y1, int x2, int y2 ) {
    return _com_dispatch_method(this, 0x60010024, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0003\x0003", x1, y1, x2, y2);
}

#pragma implementation_key(5848)
inline HRESULT TGDraft::SheetWindow::Fit ( ) {
    return _com_dispatch_method(this, 0x60010025, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5849)
inline _variant_t TGDraft::SheetWindow::Key ( const _variant_t & Recurse ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x60010026, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c", &Recurse);
    return _variant_t(_result, false);
}

#pragma implementation_key(5850)
inline HRESULT TGDraft::SheetWindow::Activate ( ) {
    return _com_dispatch_method(this, 0x4001, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5851)
inline HRESULT TGDraft::SheetWindow::ActivateNext ( ) {
    return _com_dispatch_method(this, 0x4002, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5852)
inline HRESULT TGDraft::SheetWindow::ActivatePrevious ( ) {
    return _com_dispatch_method(this, 0x4003, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5853)
inline TGFramework::ApplicationPtr TGDraft::SheetWindow::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x4004, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5854)
inline _bstr_t TGDraft::SheetWindow::GetCaption ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4005, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5855)
inline void TGDraft::SheetWindow::PutCaption ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x4005, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5856)
inline HRESULT TGDraft::SheetWindow::Close ( const _variant_t & SaveChanges, const _variant_t & FileName, const _variant_t & RouteWorkbook ) {
    return _com_dispatch_method(this, 0x4006, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c\x080c", &SaveChanges, &FileName, &RouteWorkbook);
}

#pragma implementation_key(5857)
inline _bstr_t TGDraft::SheetWindow::GetEnvironment ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x401b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5858)
inline void TGDraft::SheetWindow::PutEnvironment ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x401b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5859)
inline int TGDraft::SheetWindow::GetHeight ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4007, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5860)
inline void TGDraft::SheetWindow::PutHeight ( int _arg1 ) {
    _com_dispatch_method(this, 0x4007, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5861)
inline long TGDraft::SheetWindow::GethWnd ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4008, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5862)
inline int TGDraft::SheetWindow::GetIndex ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4009, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5863)
inline int TGDraft::SheetWindow::GetLeft ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x400a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5864)
inline void TGDraft::SheetWindow::PutLeft ( int _arg1 ) {
    _com_dispatch_method(this, 0x400a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5865)
inline IDispatchPtr TGDraft::SheetWindow::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x400d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5866)
inline HRESULT TGDraft::SheetWindow::PrintOut ( ) {
    return _com_dispatch_method(this, 0x400e, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5867)
inline TGFramework::SelectSetPtr TGDraft::SheetWindow::GetSelectSet ( ) {
    struct TGFramework::SelectSet * _result = 0;
    _com_dispatch_method(this, 0x4010, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::SelectSetPtr(_result, false);
}

#pragma implementation_key(5868)
inline int TGDraft::SheetWindow::GetTop ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4011, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5869)
inline void TGDraft::SheetWindow::PutTop ( int _arg1 ) {
    _com_dispatch_method(this, 0x4011, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5870)
inline _bstr_t TGDraft::SheetWindow::GetType ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4012, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5871)
inline VARIANT_BOOL TGDraft::SheetWindow::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4015, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5872)
inline void TGDraft::SheetWindow::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4015, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5873)
inline int TGDraft::SheetWindow::GetWidth ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4016, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5874)
inline void TGDraft::SheetWindow::PutWidth ( int _arg1 ) {
    _com_dispatch_method(this, 0x4016, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5875)
inline int TGDraft::SheetWindow::GetWindowNumber ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4017, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5876)
inline int TGDraft::SheetWindow::GetWindowState ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4018, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5877)
inline void TGDraft::SheetWindow::PutWindowState ( int _arg1 ) {
    _com_dispatch_method(this, 0x4018, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5878)
inline long TGDraft::SheetWindow::GetIcon ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x401c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5879)
inline HRESULT TGDraft::SheetWindow::SaveAsImage ( _bstr_t FileName, const _variant_t & Width, const _variant_t & Height, const _variant_t & Resolution, const _variant_t & ColorDepth, enum TGFramework::SeImageQualityType ImageQuality, VARIANT_BOOL Invert ) {
    return _com_dispatch_method(this, 0x4019, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x000c\x000c\x000c\x000c\x0003\x000b", (BSTR)FileName, &Width, &Height, &Resolution, &ColorDepth, ImageQuality, Invert);
}

#pragma implementation_key(5880)
inline HRESULT TGDraft::SheetWindow::Update ( ) {
    return _com_dispatch_method(this, 0x4074, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5881)
inline HRESULT TGDraft::SheetWindow::FitEx ( enum SheetFitConstants FitOption ) {
    return _com_dispatch_method(this, 0x4075, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", FitOption);
}

#pragma implementation_key(5882)
inline void TGDraft::SheetWindow::PutDisplayBackgroundSheetTabs ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4076, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5883)
inline VARIANT_BOOL TGDraft::SheetWindow::GetDisplayBackgroundSheetTabs ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4076, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5884)
inline void TGDraft::SheetWindow::PutDisplayWorkingSheetTabs ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4077, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5885)
inline VARIANT_BOOL TGDraft::SheetWindow::GetDisplayWorkingSheetTabs ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4077, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5886)
inline void TGDraft::SheetWindow::PutDisplay2DModelSheetTab ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4078, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5887)
inline VARIANT_BOOL TGDraft::SheetWindow::GetDisplay2DModelSheetTab ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4078, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5888)
inline HRESULT TGDraft::SheetWindow::ZoomAreaEx ( double x1, double y1, double x2, double y2 ) {
    return _com_dispatch_method(this, 0x4079, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", x1, y1, x2, y2);
}

#pragma implementation_key(5889)
inline HRESULT TGDraft::SheetWindow::BeginSheetViewDynamics ( ) {
    return _com_dispatch_method(this, 0x407a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5890)
inline HRESULT TGDraft::SheetWindow::EndSheetViewDynamics ( ) {
    return _com_dispatch_method(this, 0x407b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5891)
inline IDispatchPtr TGDraft::SheetWindow::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5892)
inline VARIANT_BOOL TGDraft::SheetWindow::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// dispinterface DraftPrintUtility wrapper method implementations
//

#pragma implementation_key(5893)
inline TGFramework::ApplicationPtr TGDraft::DraftPrintUtility::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x12d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5894)
inline TGFramework::ApplicationPtr TGDraft::DraftPrintUtility::GetParent ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x12e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5895)
inline _bstr_t TGDraft::DraftPrintUtility::GetPrinter ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x12f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5896)
inline void TGDraft::DraftPrintUtility::PutPrinter ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x12f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5897)
inline HRESULT TGDraft::DraftPrintUtility::AddFile ( _bstr_t FileName ) {
    return _com_dispatch_method(this, 0x130, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)FileName);
}

#pragma implementation_key(5898)
inline HRESULT TGDraft::DraftPrintUtility::AddDocument ( struct DraftDocument * pDocument ) {
    return _com_dispatch_method(this, 0x131, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", pDocument);
}

#pragma implementation_key(5899)
inline HRESULT TGDraft::DraftPrintUtility::AddSheet ( struct Sheet * pSheet ) {
    return _com_dispatch_method(this, 0x148, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", pSheet);
}

#pragma implementation_key(5900)
inline HRESULT TGDraft::DraftPrintUtility::RemoveAllDocuments ( ) {
    return _com_dispatch_method(this, 0x132, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5901)
inline enum TGDraft::DraftPrintSheetsPerPageConstants TGDraft::DraftPrintUtility::GetSheetsPerPage ( ) {
    enum DraftPrintSheetsPerPageConstants _result;
    _com_dispatch_method(this, 0x133, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5902)
inline void TGDraft::DraftPrintUtility::PutSheetsPerPage ( enum DraftPrintSheetsPerPageConstants _arg1 ) {
    _com_dispatch_method(this, 0x133, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5903)
inline enum TGDraft::DraftPrintUnitsConstants TGDraft::DraftPrintUtility::GetUnits ( ) {
    enum DraftPrintUnitsConstants _result;
    _com_dispatch_method(this, 0x134, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5904)
inline void TGDraft::DraftPrintUtility::PutUnits ( enum DraftPrintUnitsConstants _arg1 ) {
    _com_dispatch_method(this, 0x134, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5905)
inline VARIANT_BOOL TGDraft::DraftPrintUtility::GetPrintAsBlack ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x135, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5906)
inline void TGDraft::DraftPrintUtility::PutPrintAsBlack ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x135, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5907)
inline VARIANT_BOOL TGDraft::DraftPrintUtility::GetScaleLineWidths ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x136, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5908)
inline void TGDraft::DraftPrintUtility::PutScaleLineWidths ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x136, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5909)
inline VARIANT_BOOL TGDraft::DraftPrintUtility::GetScaleLineTypes ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x137, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5910)
inline void TGDraft::DraftPrintUtility::PutScaleLineTypes ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x137, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5911)
inline VARIANT_BOOL TGDraft::DraftPrintUtility::GetUsePrinterClipping ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x138, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5912)
inline void TGDraft::DraftPrintUtility::PutUsePrinterClipping ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x138, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5913)
inline enum TGDraft::DraftPrintScaleTooLargeActionConstants TGDraft::DraftPrintUtility::GetScaleTooLarge ( ) {
    enum DraftPrintScaleTooLargeActionConstants _result;
    _com_dispatch_method(this, 0x149, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5914)
inline void TGDraft::DraftPrintUtility::PutScaleTooLarge ( enum DraftPrintScaleTooLargeActionConstants _arg1 ) {
    _com_dispatch_method(this, 0x149, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5915)
inline VARIANT_BOOL TGDraft::DraftPrintUtility::GetPrintToFile ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x139, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5916)
inline void TGDraft::DraftPrintUtility::PutPrintToFile ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x139, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5917)
inline _bstr_t TGDraft::DraftPrintUtility::GetPrintToFilePath ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x13a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5918)
inline void TGDraft::DraftPrintUtility::PutPrintToFilePath ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x13a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5919)
inline _bstr_t TGDraft::DraftPrintUtility::GetPrintToFileName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x13b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5920)
inline void TGDraft::DraftPrintUtility::PutPrintToFileName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x13b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5921)
inline double TGDraft::DraftPrintUtility::GetSingleSheetScale ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x13c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5922)
inline void TGDraft::DraftPrintUtility::PutSingleSheetScale ( double _arg1 ) {
    _com_dispatch_method(this, 0x13c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(5923)
inline VARIANT_BOOL TGDraft::DraftPrintUtility::GetCenter ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x13d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5924)
inline void TGDraft::DraftPrintUtility::PutCenter ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x13d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5925)
inline VARIANT_BOOL TGDraft::DraftPrintUtility::GetAutoOrient ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x13e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5926)
inline void TGDraft::DraftPrintUtility::PutAutoOrient ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x13e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5927)
inline VARIANT_BOOL TGDraft::DraftPrintUtility::GetBestFit ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x13f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5928)
inline void TGDraft::DraftPrintUtility::PutBestFit ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x13f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5929)
inline double TGDraft::DraftPrintUtility::GetMultipleSheetScale ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x140, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5930)
inline void TGDraft::DraftPrintUtility::PutMultipleSheetScale ( double _arg1 ) {
    _com_dispatch_method(this, 0x140, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(5931)
inline double TGDraft::DraftPrintUtility::GetGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x141, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5932)
inline void TGDraft::DraftPrintUtility::PutGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x141, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(5933)
inline VARIANT_BOOL TGDraft::DraftPrintUtility::GetDisplaySheetBoundary ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x142, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5934)
inline void TGDraft::DraftPrintUtility::PutDisplaySheetBoundary ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x142, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5935)
inline VARIANT_BOOL TGDraft::DraftPrintUtility::GetDisplayCutLine ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x143, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5936)
inline void TGDraft::DraftPrintUtility::PutDisplayCutLine ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x143, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5937)
inline VARIANT_BOOL TGDraft::DraftPrintUtility::GetUsePrinterMargins ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x144, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5938)
inline void TGDraft::DraftPrintUtility::PutUsePrinterMargins ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x144, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5939)
inline HRESULT TGDraft::DraftPrintUtility::GetMargins ( double * pdLeft, double * pdTop, double * pdRight, double * pdBottom ) {
    return _com_dispatch_method(this, 0x145, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", pdLeft, pdTop, pdRight, pdBottom);
}

#pragma implementation_key(5940)
inline HRESULT TGDraft::DraftPrintUtility::SetMargins ( double dLeft, double dTop, double dRight, double dBottom ) {
    return _com_dispatch_method(this, 0x146, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", dLeft, dTop, dRight, dBottom);
}

#pragma implementation_key(5941)
inline HRESULT TGDraft::DraftPrintUtility::PrintOut ( ) {
    return _com_dispatch_method(this, 0x147, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5942)
inline enum TGDraft::DraftPrintOrientationConstants TGDraft::DraftPrintUtility::GetOrientation ( ) {
    enum DraftPrintOrientationConstants _result;
    _com_dispatch_method(this, 0x14a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5943)
inline void TGDraft::DraftPrintUtility::PutOrientation ( enum DraftPrintOrientationConstants _arg1 ) {
    _com_dispatch_method(this, 0x14a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5944)
inline double TGDraft::DraftPrintUtility::GetPaperWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x14b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5945)
inline void TGDraft::DraftPrintUtility::PutPaperWidth ( double _arg1 ) {
    _com_dispatch_method(this, 0x14b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(5946)
inline double TGDraft::DraftPrintUtility::GetPaperHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x14c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5947)
inline void TGDraft::DraftPrintUtility::PutPaperHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x14c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(5948)
inline enum TGDraft::DraftPrintPaperSizeConstants TGDraft::DraftPrintUtility::GetPaperSize ( ) {
    enum DraftPrintPaperSizeConstants _result;
    _com_dispatch_method(this, 0x14d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5949)
inline void TGDraft::DraftPrintUtility::PutPaperSize ( enum DraftPrintPaperSizeConstants _arg1 ) {
    _com_dispatch_method(this, 0x14d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5950)
inline short TGDraft::DraftPrintUtility::GetCopies ( ) {
    short _result = 0;
    _com_dispatch_method(this, 0x14e, DISPATCH_PROPERTYGET, VT_I2, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5951)
inline void TGDraft::DraftPrintUtility::PutCopies ( short _arg1 ) {
    _com_dispatch_method(this, 0x14e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0002", _arg1);
}

#pragma implementation_key(5952)
inline HRESULT TGDraft::DraftPrintUtility::SavePreferences ( ) {
    return _com_dispatch_method(this, 0x14f, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5953)
inline HRESULT TGDraft::DraftPrintUtility::GetOrigin ( double * pdXOrigin, double * pdYOrigin ) {
    return _com_dispatch_method(this, 0x150, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", pdXOrigin, pdYOrigin);
}

#pragma implementation_key(5954)
inline HRESULT TGDraft::DraftPrintUtility::SetOrigin ( double dXOrigin, double dYOrigin ) {
    return _com_dispatch_method(this, 0x151, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", dXOrigin, dYOrigin);
}

#pragma implementation_key(5955)
inline VARIANT_BOOL TGDraft::DraftPrintUtility::GetIncludeWatermark ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x152, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5956)
inline void TGDraft::DraftPrintUtility::PutIncludeWatermark ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x152, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

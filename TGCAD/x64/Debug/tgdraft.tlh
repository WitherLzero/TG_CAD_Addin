// Created by Microsoft (R) C/C++ Compiler Version 14.32.31332.0 (1f6ada9e).
//
// D:\visualstudio\project\TGCAD\TGCAD\x64\Debug\tgdraft.tlh
//
// C++ source equivalent of type library tgdraft.tlb
// compiler-generated file - DO NOT EDIT!

//
// Cross-referenced type libraries:
//
//

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

namespace TGDraft {

//
// Forward references and typedefs
//

struct __declspec(uuid("852a51db-5cbd-4a4a-aa58-b7e76526746c"))
/* LIBID */ __TGDraft;
struct __declspec(uuid("cd8078ae-bb16-41ad-8bd9-7bddfbb37d8d"))
/* dispinterface */ BlockView;
struct __declspec(uuid("954a7da3-336b-4cee-a6cb-c476dba30a1c"))
/* interface */ _IBlockViewAuto;
struct __declspec(uuid("61f55454-5269-11ce-9cfe-08003637fb01"))
/* dispinterface */ DrawingViews;
struct __declspec(uuid("61f55455-5269-11ce-9cfe-08003637fb01"))
/* interface */ _IDrawingViewsAuto;
struct __declspec(uuid("61f55450-5269-11ce-9cfe-08003637fb01"))
/* dispinterface */ DrawingView;
struct __declspec(uuid("61f55451-5269-11ce-9cfe-08003637fb01"))
/* interface */ _IDrawingViewAuto;
enum DrawingViewTypeConstants;
struct __declspec(uuid("302d8646-aa5f-11d3-9080-00c04f79b2c6"))
/* dispinterface */ CoordinateSystems2d;
struct __declspec(uuid("302d8644-aa5f-11d3-9080-00c04f79b2c6"))
/* interface */ _ICoordinateSystems2dAuto;
struct __declspec(uuid("302d8645-aa5f-11d3-9080-00c04f79b2c6"))
/* dispinterface */ CoordinateSystem2d;
struct __declspec(uuid("302d8643-aa5f-11d3-9080-00c04f79b2c6"))
/* interface */ _ICoordinateSystem2dAuto;
enum CoordinateSystem2dAxisConstants;
struct __declspec(uuid("e3ca5ef6-163d-11d4-ab46-00c04f72e275"))
/* dispinterface */ ModelMembers;
struct __declspec(uuid("5079d1b2-163e-11d4-ab46-00c04f72e275"))
/* interface */ _IModelMembersAuto;
struct __declspec(uuid("f4e15a14-163d-11d4-ab46-00c04f72e275"))
/* dispinterface */ ModelMember;
struct __declspec(uuid("4108d6ce-163e-11d4-ab46-00c04f72e275"))
/* interface */ _IModelMemberAuto;
enum ModelMemberDisplayTypeConstants;
enum ModelMemberTypeConstants;
enum ModelMemberComponentTypeConstants;
struct __declspec(uuid("20f0ef52-163e-11d4-ab46-00c04f72e275"))
/* dispinterface */ GraphicMembers;
struct __declspec(uuid("70f1173e-163e-11d4-ab46-00c04f72e275"))
/* interface */ _IGraphicMembersAuto;
struct __declspec(uuid("929bc102-30e9-11d4-ab5d-00c04f72e275"))
/* dispinterface */ DVLines2d;
struct __declspec(uuid("22be9170-2c2a-11d4-ab5c-00c04f72e275"))
/* interface */ _IDVLines2dAuto;
struct __declspec(uuid("a980f5d8-2c32-11d4-ab5c-00c04f72e275"))
/* dispinterface */ DVLine2d;
struct __declspec(uuid("345186d6-2c2a-11d4-ab5c-00c04f72e275"))
/* interface */ _IDVLine2dAuto;
enum GraphicMemberEdgeTypeConstants;
enum __MIDL___MIDL_itf_draft_0002_0027_0001;
struct __declspec(uuid("128dad0b-94a6-11d4-a517-0004ac9695cb"))
/* dispinterface */ ModelWelds;
struct __declspec(uuid("128dad09-94a6-11d4-a517-0004ac9695cb"))
/* interface */ _IModelWeldsAuto;
struct __declspec(uuid("128dad0a-94a6-11d4-a517-0004ac9695cb"))
/* dispinterface */ ModelWeld;
struct __declspec(uuid("128dad08-94a6-11d4-a517-0004ac9695cb"))
/* interface */ _IModelWeldAuto;
enum DimWeldLabelImportConstants;
enum DimWeldBeadWeldmentTypeConstants;
enum DimWeldBeadWeldmentShapeConstants;
enum DimWeldBeadWeldTypeConstants;
enum DimWeldBeadWeldStandardConstants;
enum DimWeldBeadWeldImportConstants;
struct __declspec(uuid("bbbeb3dc-30e9-11d4-ab5d-00c04f72e275"))
/* dispinterface */ DVArcs2d;
struct __declspec(uuid("3888f644-30ad-11d4-ab5d-00c04f72e275"))
/* interface */ _IDVArcs2dAuto;
struct __declspec(uuid("325840ec-3024-11d4-ab5c-00c04f72e275"))
/* dispinterface */ DVArc2d;
struct __declspec(uuid("9476c272-3000-11d4-ab5c-00c04f72e275"))
/* interface */ _IDVArc2dAuto;
struct __declspec(uuid("da3ee93a-30e9-11d4-ab5d-00c04f72e275"))
/* dispinterface */ DVBSplineCurves2d;
struct __declspec(uuid("e164a272-30ad-11d4-ab5d-00c04f72e275"))
/* interface */ _IDVBSplineCurves2dAuto;
struct __declspec(uuid("7a0e7bf4-3024-11d4-ab5c-00c04f72e275"))
/* dispinterface */ DVBSplineCurve2d;
struct __declspec(uuid("5c6f8db0-3018-11d4-ab5c-00c04f72e275"))
/* interface */ _IDVBSplineCurve2dAuto;
struct __declspec(uuid("fddc099a-30e9-11d4-ab5d-00c04f72e275"))
/* dispinterface */ DVCircles2d;
struct __declspec(uuid("04b31538-30ae-11d4-ab5d-00c04f72e275"))
/* interface */ _IDVCircles2dAuto;
struct __declspec(uuid("91b3ee92-3024-11d4-ab5c-00c04f72e275"))
/* dispinterface */ DVCircle2d;
struct __declspec(uuid("845d8e56-301a-11d4-ab5c-00c04f72e275"))
/* interface */ _IDVCircle2dAuto;
struct __declspec(uuid("1ca1632a-30ea-11d4-ab5d-00c04f72e275"))
/* dispinterface */ DVEllipses2d;
struct __declspec(uuid("39a79034-30ae-11d4-ab5d-00c04f72e275"))
/* interface */ _IDVEllipses2dAuto;
struct __declspec(uuid("ba0c398a-3024-11d4-ab5c-00c04f72e275"))
/* dispinterface */ DVEllipse2d;
struct __declspec(uuid("e66056d4-301e-11d4-ab5c-00c04f72e275"))
/* interface */ _IDVEllipse2dAuto;
struct __declspec(uuid("5de0fe36-30ea-11d4-ab5d-00c04f72e275"))
/* dispinterface */ DVLineStrings2d;
struct __declspec(uuid("8437da90-30af-11d4-ab5d-00c04f72e275"))
/* interface */ _IDVLineStrings2dAuto;
struct __declspec(uuid("09b1c81a-3025-11d4-ab5c-00c04f72e275"))
/* dispinterface */ DVLineString2d;
struct __declspec(uuid("94b94b94-3021-11d4-ab5c-00c04f72e275"))
/* interface */ _IDVLineString2dAuto;
struct __declspec(uuid("4007ad74-30ea-11d4-ab5d-00c04f72e275"))
/* dispinterface */ DVEllipticalArcs2d;
struct __declspec(uuid("74a4ff00-30ae-11d4-ab5d-00c04f72e275"))
/* interface */ _IDVEllipArcs2dAuto;
struct __declspec(uuid("dc605566-3024-11d4-ab5c-00c04f72e275"))
/* dispinterface */ DVEllipticalArc2d;
struct __declspec(uuid("6687bbd4-3021-11d4-ab5c-00c04f72e275"))
/* interface */ _IDVEllipArc2dAuto;
struct __declspec(uuid("5cd42230-048a-428d-8d72-c1b8c99f12d6"))
/* dispinterface */ DVPoints2d;
struct __declspec(uuid("862ae00c-0048-4987-b6f4-e47df1abf928"))
/* interface */ _IDVPoints2dAuto;
struct __declspec(uuid("295fc019-9748-4764-8d0a-f7bf9210f43d"))
/* dispinterface */ DVPoint2d;
struct __declspec(uuid("0c545328-76fb-4ff0-bcfc-41ff1ac8f848"))
/* interface */ _IDVPoint2dAuto;
struct __declspec(uuid("50e8a417-2a6d-11d4-a4c3-0004ac9695cb"))
/* dispinterface */ ModelNode;
struct __declspec(uuid("50e8a415-2a6d-11d4-a4c3-0004ac9695cb"))
/* interface */ _IModelNodeAuto;
enum ModelNodeTypeConstants;
struct __declspec(uuid("50e8a416-2a6d-11d4-a4c3-0004ac9695cb"))
/* dispinterface */ ModelNodes;
struct __declspec(uuid("50e8a414-2a6d-11d4-a4c3-0004ac9695cb"))
/* interface */ _IModelNodesAuto;
struct __declspec(uuid("3534e85c-1d65-4dea-9f9c-6be027eb2831"))
/* dispinterface */ SectionBoundaries2d;
struct __declspec(uuid("b2d7974c-9930-4873-87c6-9fcb1aa1dcd1"))
/* interface */ _ISectionBoundaries2dAuto;
enum DrawingViewShadingQualityConstants;
enum DrawingViewSnapShotQualityConstants;
enum DrawingViewVHL_ToleranceOverrideQualityConstants;
enum ViewOrientationConstants;
enum DrawingViewBsplineSimplificationConstants;
enum DrawingViewIntersectionProcessingConstants;
enum DrawingViewSimplifiedAssemblyOptionConstants;
enum DrawingViewSimplifiedPartOptionConstants;
struct __declspec(uuid("fecbeb70-894d-11ce-acbe-08003601eb9a"))
/* dispinterface */ CuttingPlanes;
struct __declspec(uuid("e631c020-894d-11ce-acbe-08003601eb9a"))
/* interface */ _ICuttingPlanesAuto;
struct __declspec(uuid("4bb99f75-67f5-4374-bf75-c264b8832bb5"))
/* dispinterface */ CuttingPlane;
struct __declspec(uuid("406e53b3-9a8e-4011-be05-82aac2250055"))
/* interface */ _ICuttingPlaneAuto;
enum DraftSectionViewType;
struct __declspec(uuid("2189b19a-4a41-42ba-b3e0-73e89d481399"))
/* dispinterface */ DraftProfile;
struct __declspec(uuid("41435b59-152a-4265-8b34-c7793feed7cb"))
/* interface */ _IDraftProfileAuto;
enum ProfileValidationStatus;
struct __declspec(uuid("73688157-01d1-47f4-b122-5f68950dd39b"))
/* dispinterface */ BrokenOutSectionProfiles;
struct __declspec(uuid("c6929ce1-515c-4f4a-be4b-fe54f75918aa"))
/* interface */ _IBrokenOutSectionProfilesAuto;
struct __declspec(uuid("481e02b1-f278-4eb9-bfc6-7200a1e5a1ad"))
/* dispinterface */ BrokenOutSectionProfile;
struct __declspec(uuid("8ad7a363-3da2-483a-a091-0f43462f6544"))
/* interface */ _IBrokenOutSectionProfileAuto;
struct __declspec(uuid("ee600ec8-bd5e-4a32-ae58-ae1265e6aaac"))
/* dispinterface */ DetailEnvelopes;
struct __declspec(uuid("7fc045f7-bf3a-4fdb-9a8d-f3241dc2a8f2"))
/* interface */ _IDetailEnvelopesAuto;
struct __declspec(uuid("d2baa3a0-e799-11ce-90af-08003601eb9a"))
/* dispinterface */ DetailEnvelope;
struct __declspec(uuid("a1dc4790-e799-11ce-90af-08003601eb9a"))
/* interface */ _IDetailEnvelopeAuto;
enum DetailEnvelopeStandardConstants;
struct __declspec(uuid("809175b9-9bde-4c8f-9fc2-9598f6b6e779"))
/* dispinterface */ HighlightDrawingViewMembers;
struct __declspec(uuid("e0a8e0b2-12a1-4e35-ac4a-53ccaa6413d0"))
/* interface */ _IHighlightDrawingViewMembersAuto;
struct __declspec(uuid("ca10e8ff-87b4-4b29-b116-629f79c7c53e"))
/* dispinterface */ BreakLinePairs;
struct __declspec(uuid("26b54af8-af79-4ca4-870c-14f600d20dd7"))
/* interface */ _IBreakLinePairsAuto;
struct __declspec(uuid("a6c7276a-39a5-4f8f-9311-bfa057de538e"))
/* dispinterface */ BreakLinePair;
struct __declspec(uuid("a126955b-5693-4e12-933d-14c85c538070"))
/* interface */ _IBreakLinePairAuto;
enum BreakLinePairDirConstants;
enum BreakLinePairTypeConstants;
enum BreakLinePairOrientConstants;
enum KeypointIndexConstants;
enum StyleConstants;
struct __declspec(uuid("a32fc151-10c7-11d0-a1c3-08003627cf02"))
/* dispinterface */ ModelLink;
struct __declspec(uuid("a32fc150-10c7-11d0-a1c3-08003627cf02"))
/* interface */ _IModelLinkAuto;
enum ModelLinkTypeConstants;
enum FoldTypeConstants;
enum AssemblyDrawingViewTypeConstants;
enum PartDrawingViewTypeConstants;
enum SheetMetalDrawingViewTypeConstants;
enum WeldmentDrawingViewTypeConstants;
enum DrawingViewDefaultsConstants;
struct __declspec(uuid("cd8078b1-bb16-41ad-8bd9-7bddfbb37d8d"))
/* dispinterface */ BlockOccurrences;
struct __declspec(uuid("016532b9-e7a9-41e4-967d-81296f37cdeb"))
/* interface */ _IBlockOccurrencesAuto;
struct __declspec(uuid("cd8078b0-bb16-41ad-8bd9-7bddfbb37d8d"))
/* dispinterface */ BlockOccurrence;
struct __declspec(uuid("e30c2c4f-2995-4c15-810e-ed3a4bbd2a69"))
/* interface */ _IBlockOccurrenceAuto;
struct __declspec(uuid("cd8078ac-bb16-41ad-8bd9-7bddfbb37d8d"))
/* dispinterface */ Block;
struct __declspec(uuid("57e69f66-314c-4cd7-a850-b96352004fb3"))
/* interface */ _IBlockAuto;
struct __declspec(uuid("cd8078af-bb16-41ad-8bd9-7bddfbb37d8d"))
/* dispinterface */ BlockViews;
struct __declspec(uuid("dab679a2-e1fe-43b9-9873-af8631922c14"))
/* interface */ _IBlockViewsAuto;
struct __declspec(uuid("3fefc410-bc0f-471d-a1e2-444e214ad825"))
/* dispinterface */ BlockLabelOccurrences;
struct __declspec(uuid("f6ddd962-ea51-447e-a3ed-63719ac988ec"))
/* interface */ _IBlockLabelOccurrencesAuto;
struct __declspec(uuid("91f00328-101c-428b-a695-9d157b50849d"))
/* dispinterface */ BlockLabelOccurrence;
struct __declspec(uuid("19985ab2-1db6-4180-a26a-0b54f2a6377e"))
/* interface */ _IBlockLabelOccurrenceAuto;
enum BlockLabelOriginLocationConstants;
struct __declspec(uuid("b52b0e3f-6287-4993-9aac-64ab57b8bdd5"))
/* dispinterface */ BlockLabel;
struct __declspec(uuid("099e1a88-9415-4ba9-98cb-3c806d4b2674"))
/* interface */ _IBlockLabelAuto;
struct __declspec(uuid("68ecd1d3-f0d4-488d-8359-b358e8d91524"))
/* dispinterface */ BlockLabels;
struct __declspec(uuid("875413cc-0dc7-4ac6-ab16-c947f5379ce7"))
/* interface */ _IBlockLabelsAuto;
struct __declspec(uuid("cd8078ad-bb16-41ad-8bd9-7bddfbb37d8d"))
/* dispinterface */ Blocks;
struct __declspec(uuid("6cba07d6-d066-4e56-a107-02a41f449544"))
/* interface */ _IBlocksAuto;
struct __declspec(uuid("61bbf651-53f0-4d0a-ac29-545eecf6fa8d"))
/* dispinterface */ DraftFilePreferences;
struct __declspec(uuid("e1b3ee37-bbbd-4c24-bf2b-a0d6e91d4016"))
/* interface */ _IDraftFilePreferencesAuto;
enum DrawingViewProjectionAngleConstants;
enum DVThreadDisplayModeConstants;
enum DrawingViewStyleMappingElementType;
enum GridDisplayOptionsConstants;
enum GridSnapOptionsConstants;
enum DrawingViewEdgeStyleMappingEdgeType;
struct __declspec(uuid("c8d3c856-0f7d-4375-9002-671ee363082a"))
/* dispinterface */ SheetGroups;
struct __declspec(uuid("10ddea76-77aa-40ce-8a43-196d8ce9a9f1"))
/* interface */ _ISheetGroupsAuto;
struct __declspec(uuid("741593ae-a753-49ae-8c92-99315d899a80"))
/* dispinterface */ SheetGroup;
struct __declspec(uuid("7443c8ce-d8f2-44f8-951b-f3d11a4fb070"))
/* interface */ _ISheetGroupAuto;
struct __declspec(uuid("04848584-d011-4411-8ad5-ff51d41c72e3"))
/* dispinterface */ SheetGroupSheets;
struct __declspec(uuid("401d8cd3-813d-4c27-990d-9761bbae1d0f"))
/* interface */ _ISheetGroupSheetsAuto;
struct __declspec(uuid("ffb20fa0-339b-11ce-956a-08003601dfe5"))
/* dispinterface */ Sheet;
struct __declspec(uuid("06ece4d0-0229-11d2-be0d-080036b4d502"))
/* interface */ _ISheetAuto;
struct __declspec(uuid("2f364920-5eb1-11ce-956a-08003601dfe5"))
/* dispinterface */ Section;
struct __declspec(uuid("0e78c9b0-5eb1-11ce-956a-08003601dfe5"))
/* interface */ _ISectionAuto;
struct __declspec(uuid("c39cae50-5fb0-11ce-956a-08003601dfe5"))
/* dispinterface */ SectionSheets;
struct __declspec(uuid("9a09a160-5fb0-11ce-956a-08003601dfe5"))
/* interface */ _ISectionSheetsAuto;
enum SheetSectionTypeConstants;
struct __declspec(uuid("a1ba2bc0-41ea-11ce-bb8e-08003601bb4e"))
/* dispinterface */ SheetSetup;
struct __declspec(uuid("0b154580-41d0-11ce-bb8e-08003601bb4e"))
/* interface */ _ISheetSetupAuto;
enum PaperUnitConstants;
enum PrecisionConstants;
enum PaperToModelScaleConstants;
enum PaperSizeConstants;
enum CleanProfileOptions;
enum LineupTextAlignOptionConstants;
struct __declspec(uuid("06ece4c4-0229-11d2-be0d-080036b4d502"))
/* interface */ _IDraftDocumentAuto;
struct __declspec(uuid("9a318380-3398-11ce-956a-08003601dfe5"))
/* dispinterface */ Sheets;
struct __declspec(uuid("99a96250-3397-11ce-956a-08003601dfe5"))
/* interface */ _ISheetsAuto;
struct __declspec(uuid("823e92a0-5eb1-11ce-956a-08003601dfe5"))
/* dispinterface */ Sections;
struct __declspec(uuid("5ae33810-5eb1-11ce-956a-08003601dfe5"))
/* interface */ _ISectionsAuto;
struct __declspec(uuid("a32fc155-10c7-11d0-a1c3-08003627cf02"))
/* dispinterface */ ModelLinks;
struct __declspec(uuid("a32fc153-10c7-11d0-a1c3-08003627cf02"))
/* interface */ _IModelLinksAuto;
struct __declspec(uuid("86f045db-ad81-11d3-a431-0004ac9695cb"))
/* dispinterface */ PartsLists;
struct __declspec(uuid("86f045da-ad81-11d3-a431-0004ac9695cb"))
/* interface */ _IPartsListsAuto;
struct __declspec(uuid("86f045dd-ad81-11d3-a431-0004ac9695cb"))
/* dispinterface */ PartsList;
struct __declspec(uuid("86f045dc-ad81-11d3-a431-0004ac9695cb"))
/* interface */ _IPartsListAuto;
struct __declspec(uuid("5b0c45c9-7e64-43b6-822f-195024dd7c2d"))
/* dispinterface */ TableCell;
struct __declspec(uuid("dda40fc7-58b1-4495-a767-e306ac407165"))
/* interface */ _ITableCellAuto;
enum TitlePosition;
struct __declspec(uuid("36444aa2-b43c-4cd5-8528-49e7b4ed064c"))
/* dispinterface */ TableColumns;
struct __declspec(uuid("8676a3cd-4292-4fc1-9b39-c59b27e43093"))
/* interface */ _ITableColumnsAuto;
struct __declspec(uuid("159efe68-473c-4434-b795-a44be29f7d12"))
/* dispinterface */ TableColumn;
struct __declspec(uuid("f3d33e80-cd5c-440c-95e3-11be1bb77de9"))
/* interface */ _ITableColumnAuto;
enum TableTextOrientation;
struct __declspec(uuid("897097cc-09aa-4f6a-9dc4-1e6bb2bf1cb8"))
/* dispinterface */ TableRows;
struct __declspec(uuid("804712b7-2929-402a-a3bd-a60b36958be4"))
/* interface */ _ITableRowsAuto;
struct __declspec(uuid("9ae1bd4d-03ad-40b4-a464-70ee247ea86a"))
/* dispinterface */ TableRow;
struct __declspec(uuid("1099a363-b37e-4bba-9bb2-439381391c61"))
/* interface */ _ITableRowAuto;
struct __declspec(uuid("c1555ce6-61d0-40b0-b141-c88689fea532"))
/* dispinterface */ TableTitles;
struct __declspec(uuid("0c696886-9fe6-4704-bd16-3b1b292a5371"))
/* interface */ _ITableTitlesAuto;
struct __declspec(uuid("9fcf811c-b8bf-4e36-b045-24b6e3f017fe"))
/* dispinterface */ TableTitle;
struct __declspec(uuid("55f0cb78-b6cf-4426-9449-5f591aede982"))
/* interface */ _ITableTitleAuto;
enum TableAnchorPoint;
struct __declspec(uuid("c4793541-1f40-4918-beca-49eb32c5b329"))
/* dispinterface */ TablePages;
struct __declspec(uuid("079f7c5e-4fb0-4ec8-889a-c3d6649bacb4"))
/* interface */ _ITablePagesAuto;
struct __declspec(uuid("bccff534-1c09-4ae4-8fd8-bcb3ed787b31"))
/* dispinterface */ TablePage;
struct __declspec(uuid("627b1a05-a94f-4263-8b5e-2c264f3c57f0"))
/* interface */ _ITablePageAuto;
enum PartsListType;
struct __declspec(uuid("e9c25e3b-04bc-403f-9e59-dd72730807bf"))
/* dispinterface */ TableGroups;
struct __declspec(uuid("5e7698b0-7f50-4d69-bc98-d09fa9efaf13"))
/* interface */ _ITableGroupsAuto;
struct __declspec(uuid("3f12a8b0-4db7-498c-bb7c-a6542cc91e73"))
/* dispinterface */ TableGroup;
struct __declspec(uuid("a4e44a44-5828-4486-b9d7-07f0eb83be36"))
/* interface */ _ITableGroupAuto;
enum PartListEndAngleRepresentationType;
enum PartsListComponentType;
enum GussetPlateUniquenessCriteria;
enum GussetPlateNamingFormat;
enum DraftGlobalConstants;
struct __declspec(uuid("4ccc6304-ee3b-11d4-a556-0004ac9695cb"))
/* dispinterface */ HoleTables;
struct __declspec(uuid("4ccc6300-ee3b-11d4-a556-0004ac9695cb"))
/* interface */ _IHoleTablesAuto;
struct __declspec(uuid("4ccc6305-ee3b-11d4-a556-0004ac9695cb"))
/* dispinterface */ HoleTable;
struct __declspec(uuid("4ccc6301-ee3b-11d4-a556-0004ac9695cb"))
/* interface */ _IHoleTableAuto;
struct __declspec(uuid("4ccc6306-ee3b-11d4-a556-0004ac9695cb"))
/* dispinterface */ HTHoles;
struct __declspec(uuid("4ccc6302-ee3b-11d4-a556-0004ac9695cb"))
/* interface */ _IHTHolesAuto;
struct __declspec(uuid("4ccc6307-ee3b-11d4-a556-0004ac9695cb"))
/* dispinterface */ HTHole;
struct __declspec(uuid("4ccc6303-ee3b-11d4-a556-0004ac9695cb"))
/* interface */ _IHTHoleAuto;
enum HTHoleTypeConstants;
struct __declspec(uuid("e4a4ad23-0349-42e8-826a-ad0ee7ecc46c"))
/* dispinterface */ Tables;
struct __declspec(uuid("56cd0aee-bebb-49e4-8772-524a1ee3e95a"))
/* interface */ _ITablesAuto;
struct __declspec(uuid("a3e06cfc-a7a5-43ea-aa39-0d8fc56aed7f"))
/* dispinterface */ Table;
struct __declspec(uuid("4fea2508-4900-4836-b86a-b9fe65b17845"))
/* interface */ _ITableAuto;
enum DimensionTrackerReasonCode;
struct __declspec(uuid("570df120-72db-11df-93f2-0800200c9a66"))
/* dispinterface */ DraftBendTables;
struct __declspec(uuid("b8ee8d50-72db-11df-93f2-0800200c9a66"))
/* interface */ _IDraftBendTablesAuto;
struct __declspec(uuid("3f4cdb50-72db-11df-93f2-0800200c9a66"))
/* dispinterface */ DraftBendTable;
struct __declspec(uuid("c51c3a50-72db-11df-93f2-0800200c9a66"))
/* interface */ _IDraftBendTableAuto;
struct __declspec(uuid("1db3f5f4-7a93-4706-81ef-75892e647a39"))
/* dispinterface */ ConnectorTables;
struct __declspec(uuid("40ad0ef5-5b13-4ad0-93bd-d451d3b7ef83"))
/* interface */ _IConnectorTablesAuto;
struct __declspec(uuid("15cb7c8d-72b0-4738-851c-3157df0f75d5"))
/* dispinterface */ ConnectorTable;
struct __declspec(uuid("af5a9b4f-e67a-41e0-8c82-736d978c8d18"))
/* interface */ _IConnectorTableAuto;
struct __declspec(uuid("98975961-4f99-4dc1-b19e-ae7215f061c0"))
/* dispinterface */ BlockTables;
struct __declspec(uuid("8f17269d-6154-499b-9127-2153f538c3ba"))
/* interface */ _IBlockTablesAuto;
struct __declspec(uuid("1a23e531-6f1c-4616-ad40-adbbb03308d1"))
/* dispinterface */ BlockTable;
struct __declspec(uuid("762efabf-e95b-4905-80a5-13d45d49bceb"))
/* interface */ _IBlockTableAuto;
enum BlockTableType;
struct __declspec(uuid("f8a87f4d-f7b1-45d4-a708-05b32c553311"))
/* dispinterface */ FOPTables;
struct __declspec(uuid("d40c76d4-2715-4038-9dfc-494ca03f4da3"))
/* interface */ _IFOPTablesAuto;
struct __declspec(uuid("f8229ad0-fb3c-4b3e-909b-0173babbf8a1"))
/* dispinterface */ FOPTable;
struct __declspec(uuid("be7d2949-3406-48c0-9f18-4c476537f2d0"))
/* interface */ _IFOPTableAuto;
struct __declspec(uuid("556577d4-6738-4fca-9099-459ad8c3d0ca"))
/* dispinterface */ ConductorTables;
struct __declspec(uuid("3370b09a-06b4-4ff9-9e87-369059995fd6"))
/* interface */ _IConductorTablesAuto;
struct __declspec(uuid("c5afe3b1-2125-4ccf-b722-c93377809a88"))
/* dispinterface */ ConductorTable;
struct __declspec(uuid("1f591807-b1ca-4fd2-a4df-bb742415bb18"))
/* interface */ _IConductorTableAuto;
struct __declspec(uuid("06475741-4bb7-4224-a9c6-14a8225f9095"))
/* dispinterface */ ToleranceTables;
struct __declspec(uuid("926837cf-e4a0-4039-aa76-1125b1e17dd3"))
/* interface */ _IToleranceTablesAuto;
struct __declspec(uuid("417ccada-99b4-4e73-b421-601fdfdceda0"))
/* dispinterface */ ToleranceTable;
struct __declspec(uuid("b2d14483-6ef6-4cf2-a684-f98d11495f69"))
/* interface */ _IToleranceTableAuto;
struct __declspec(uuid("7a2ae9ed-5659-4383-9369-a694b90016ae"))
/* dispinterface */ HoleTables2;
struct __declspec(uuid("8275e9d2-46c4-4c37-aa93-888c2c819295"))
/* interface */ _IHoleTables2Auto;
struct __declspec(uuid("b88c5970-d797-479b-a8b7-584be089f187"))
/* dispinterface */ HoleTable2;
struct __declspec(uuid("5371e9c4-52d5-473f-89a1-3db5d315318d"))
/* interface */ _IHoleTable2Auto;
enum HoleTableAnnotPosition;
enum HoleTableDelimiterType;
enum HoleTableCalloutType;
enum HoleTable2PrimaryLinearUnit;
enum HoleTable2DecimalRoundOffTypeConstants;
enum HoleTable2AngularUnit;
enum HoleTable2DMSRoundOffTypeConstants;
enum HoleTableType;
struct __declspec(uuid("d2447707-b471-49f2-ad4c-cc834e353947"))
/* dispinterface */ WeldTables;
struct __declspec(uuid("05842745-e6bf-4c62-bb82-ffd6791f70fa"))
/* interface */ _IWeldTablesAuto;
struct __declspec(uuid("f8b3b455-0515-4df6-a002-acd92e4a8fbf"))
/* dispinterface */ WeldTable;
struct __declspec(uuid("00462f3c-562e-4641-af3b-b486fbbbbf30"))
/* interface */ _IWeldTableAuto;
struct __declspec(uuid("cdfa7a70-d0df-11ce-90ac-08003601eb9a"))
/* interface */ _IViewPlaneAuto;
struct __declspec(uuid("c7a308ca-428a-11ce-84a7-08003601c5f3"))
/* interface */ _ISheetWindowAuto;
struct __declspec(uuid("5eef1291-04a8-11cf-829f-0800366e0402"))
/* dispinterface */ SelectedSheets;
struct __declspec(uuid("5eef1290-04a8-11cf-829f-0800366e0402"))
/* interface */ _ISelectedSheetsAuto;
enum SheetFitConstants;
struct __declspec(uuid("016b11fb-cdc0-11ce-a035-08003601e53b"))
/* dispinterface */ DraftDocument;
struct __declspec(uuid("61a86697-d191-488e-88c0-948e90c8c4ef"))
/* interface */ _IDraftPrintUtilityAuto;
enum DraftPrintSheetsPerPageConstants;
enum DraftPrintUnitsConstants;
enum DraftPrintScaleTooLargeActionConstants;
enum DraftPrintOrientationConstants;
enum DraftPrintPaperSizeConstants;
struct __declspec(uuid("e3452040-d0df-11ce-90ac-08003601eb9a"))
/* dispinterface */ ViewPlane;
struct __declspec(uuid("c7a308cb-428a-11ce-84a7-08003601c5f3"))
/* dispinterface */ SheetWindow;
struct __declspec(uuid("189e730b-b634-4b04-9465-f4ebbaf9a1dc"))
/* dispinterface */ DraftPrintUtility;
struct __declspec(uuid("e74d3026-4a6f-4dcb-8493-dcd4f997cbad"))
/* dispinterface */ ViewPlanes;
typedef enum __MIDL___MIDL_itf_draft_0002_0027_0001 DVShowHideEdgeOverrideType;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(BlockView, __uuidof(BlockView));
_COM_SMARTPTR_TYPEDEF(DrawingViews, __uuidof(DrawingViews));
_COM_SMARTPTR_TYPEDEF(DrawingView, __uuidof(DrawingView));
_COM_SMARTPTR_TYPEDEF(CoordinateSystems2d, __uuidof(CoordinateSystems2d));
_COM_SMARTPTR_TYPEDEF(CoordinateSystem2d, __uuidof(CoordinateSystem2d));
_COM_SMARTPTR_TYPEDEF(_ICoordinateSystems2dAuto, __uuidof(_ICoordinateSystems2dAuto));
_COM_SMARTPTR_TYPEDEF(_ICoordinateSystem2dAuto, __uuidof(_ICoordinateSystem2dAuto));
_COM_SMARTPTR_TYPEDEF(ModelMembers, __uuidof(ModelMembers));
_COM_SMARTPTR_TYPEDEF(ModelMember, __uuidof(ModelMember));
_COM_SMARTPTR_TYPEDEF(_IModelMembersAuto, __uuidof(_IModelMembersAuto));
_COM_SMARTPTR_TYPEDEF(GraphicMembers, __uuidof(GraphicMembers));
_COM_SMARTPTR_TYPEDEF(_IGraphicMembersAuto, __uuidof(_IGraphicMembersAuto));
_COM_SMARTPTR_TYPEDEF(DVLines2d, __uuidof(DVLines2d));
_COM_SMARTPTR_TYPEDEF(DVLine2d, __uuidof(DVLine2d));
_COM_SMARTPTR_TYPEDEF(_IDVLines2dAuto, __uuidof(_IDVLines2dAuto));
_COM_SMARTPTR_TYPEDEF(ModelWelds, __uuidof(ModelWelds));
_COM_SMARTPTR_TYPEDEF(_IDVLine2dAuto, __uuidof(_IDVLine2dAuto));
_COM_SMARTPTR_TYPEDEF(ModelWeld, __uuidof(ModelWeld));
_COM_SMARTPTR_TYPEDEF(_IModelWeldsAuto, __uuidof(_IModelWeldsAuto));
_COM_SMARTPTR_TYPEDEF(_IModelWeldAuto, __uuidof(_IModelWeldAuto));
_COM_SMARTPTR_TYPEDEF(DVArcs2d, __uuidof(DVArcs2d));
_COM_SMARTPTR_TYPEDEF(DVArc2d, __uuidof(DVArc2d));
_COM_SMARTPTR_TYPEDEF(_IDVArcs2dAuto, __uuidof(_IDVArcs2dAuto));
_COM_SMARTPTR_TYPEDEF(_IDVArc2dAuto, __uuidof(_IDVArc2dAuto));
_COM_SMARTPTR_TYPEDEF(DVBSplineCurves2d, __uuidof(DVBSplineCurves2d));
_COM_SMARTPTR_TYPEDEF(DVBSplineCurve2d, __uuidof(DVBSplineCurve2d));
_COM_SMARTPTR_TYPEDEF(_IDVBSplineCurves2dAuto, __uuidof(_IDVBSplineCurves2dAuto));
_COM_SMARTPTR_TYPEDEF(_IDVBSplineCurve2dAuto, __uuidof(_IDVBSplineCurve2dAuto));
_COM_SMARTPTR_TYPEDEF(DVCircles2d, __uuidof(DVCircles2d));
_COM_SMARTPTR_TYPEDEF(DVCircle2d, __uuidof(DVCircle2d));
_COM_SMARTPTR_TYPEDEF(_IDVCircles2dAuto, __uuidof(_IDVCircles2dAuto));
_COM_SMARTPTR_TYPEDEF(_IDVCircle2dAuto, __uuidof(_IDVCircle2dAuto));
_COM_SMARTPTR_TYPEDEF(DVEllipses2d, __uuidof(DVEllipses2d));
_COM_SMARTPTR_TYPEDEF(DVEllipse2d, __uuidof(DVEllipse2d));
_COM_SMARTPTR_TYPEDEF(_IDVEllipses2dAuto, __uuidof(_IDVEllipses2dAuto));
_COM_SMARTPTR_TYPEDEF(_IDVEllipse2dAuto, __uuidof(_IDVEllipse2dAuto));
_COM_SMARTPTR_TYPEDEF(DVLineStrings2d, __uuidof(DVLineStrings2d));
_COM_SMARTPTR_TYPEDEF(DVLineString2d, __uuidof(DVLineString2d));
_COM_SMARTPTR_TYPEDEF(_IDVLineStrings2dAuto, __uuidof(_IDVLineStrings2dAuto));
_COM_SMARTPTR_TYPEDEF(_IDVLineString2dAuto, __uuidof(_IDVLineString2dAuto));
_COM_SMARTPTR_TYPEDEF(DVEllipticalArcs2d, __uuidof(DVEllipticalArcs2d));
_COM_SMARTPTR_TYPEDEF(DVEllipticalArc2d, __uuidof(DVEllipticalArc2d));
_COM_SMARTPTR_TYPEDEF(_IDVEllipArcs2dAuto, __uuidof(_IDVEllipArcs2dAuto));
_COM_SMARTPTR_TYPEDEF(_IDVEllipArc2dAuto, __uuidof(_IDVEllipArc2dAuto));
_COM_SMARTPTR_TYPEDEF(DVPoints2d, __uuidof(DVPoints2d));
_COM_SMARTPTR_TYPEDEF(DVPoint2d, __uuidof(DVPoint2d));
_COM_SMARTPTR_TYPEDEF(_IDVPoints2dAuto, __uuidof(_IDVPoints2dAuto));
_COM_SMARTPTR_TYPEDEF(_IDVPoint2dAuto, __uuidof(_IDVPoint2dAuto));
_COM_SMARTPTR_TYPEDEF(ModelNode, __uuidof(ModelNode));
_COM_SMARTPTR_TYPEDEF(ModelNodes, __uuidof(ModelNodes));
_COM_SMARTPTR_TYPEDEF(_IModelNodeAuto, __uuidof(_IModelNodeAuto));
_COM_SMARTPTR_TYPEDEF(_IModelNodesAuto, __uuidof(_IModelNodesAuto));
_COM_SMARTPTR_TYPEDEF(SectionBoundaries2d, __uuidof(SectionBoundaries2d));
_COM_SMARTPTR_TYPEDEF(_IModelMemberAuto, __uuidof(_IModelMemberAuto));
_COM_SMARTPTR_TYPEDEF(_ISectionBoundaries2dAuto, __uuidof(_ISectionBoundaries2dAuto));
_COM_SMARTPTR_TYPEDEF(CuttingPlanes, __uuidof(CuttingPlanes));
_COM_SMARTPTR_TYPEDEF(CuttingPlane, __uuidof(CuttingPlane));
_COM_SMARTPTR_TYPEDEF(_ICuttingPlanesAuto, __uuidof(_ICuttingPlanesAuto));
_COM_SMARTPTR_TYPEDEF(DraftProfile, __uuidof(DraftProfile));
_COM_SMARTPTR_TYPEDEF(_ICuttingPlaneAuto, __uuidof(_ICuttingPlaneAuto));
_COM_SMARTPTR_TYPEDEF(_IDraftProfileAuto, __uuidof(_IDraftProfileAuto));
_COM_SMARTPTR_TYPEDEF(BrokenOutSectionProfiles, __uuidof(BrokenOutSectionProfiles));
_COM_SMARTPTR_TYPEDEF(BrokenOutSectionProfile, __uuidof(BrokenOutSectionProfile));
_COM_SMARTPTR_TYPEDEF(_IBrokenOutSectionProfilesAuto, __uuidof(_IBrokenOutSectionProfilesAuto));
_COM_SMARTPTR_TYPEDEF(_IBrokenOutSectionProfileAuto, __uuidof(_IBrokenOutSectionProfileAuto));
_COM_SMARTPTR_TYPEDEF(DetailEnvelopes, __uuidof(DetailEnvelopes));
_COM_SMARTPTR_TYPEDEF(DetailEnvelope, __uuidof(DetailEnvelope));
_COM_SMARTPTR_TYPEDEF(_IDetailEnvelopesAuto, __uuidof(_IDetailEnvelopesAuto));
_COM_SMARTPTR_TYPEDEF(_IDetailEnvelopeAuto, __uuidof(_IDetailEnvelopeAuto));
_COM_SMARTPTR_TYPEDEF(HighlightDrawingViewMembers, __uuidof(HighlightDrawingViewMembers));
_COM_SMARTPTR_TYPEDEF(_IHighlightDrawingViewMembersAuto, __uuidof(_IHighlightDrawingViewMembersAuto));
_COM_SMARTPTR_TYPEDEF(BreakLinePairs, __uuidof(BreakLinePairs));
_COM_SMARTPTR_TYPEDEF(BreakLinePair, __uuidof(BreakLinePair));
_COM_SMARTPTR_TYPEDEF(_IBreakLinePairsAuto, __uuidof(_IBreakLinePairsAuto));
_COM_SMARTPTR_TYPEDEF(_IBreakLinePairAuto, __uuidof(_IBreakLinePairAuto));
_COM_SMARTPTR_TYPEDEF(_IDrawingViewAuto, __uuidof(_IDrawingViewAuto));
_COM_SMARTPTR_TYPEDEF(ModelLink, __uuidof(ModelLink));
_COM_SMARTPTR_TYPEDEF(_IModelLinkAuto, __uuidof(_IModelLinkAuto));
_COM_SMARTPTR_TYPEDEF(_IDrawingViewsAuto, __uuidof(_IDrawingViewsAuto));
_COM_SMARTPTR_TYPEDEF(BlockOccurrences, __uuidof(BlockOccurrences));
_COM_SMARTPTR_TYPEDEF(BlockOccurrence, __uuidof(BlockOccurrence));
_COM_SMARTPTR_TYPEDEF(_IBlockOccurrencesAuto, __uuidof(_IBlockOccurrencesAuto));
_COM_SMARTPTR_TYPEDEF(Block, __uuidof(Block));
_COM_SMARTPTR_TYPEDEF(BlockViews, __uuidof(BlockViews));
_COM_SMARTPTR_TYPEDEF(_IBlockAuto, __uuidof(_IBlockAuto));
_COM_SMARTPTR_TYPEDEF(_IBlockViewsAuto, __uuidof(_IBlockViewsAuto));
_COM_SMARTPTR_TYPEDEF(BlockLabelOccurrences, __uuidof(BlockLabelOccurrences));
_COM_SMARTPTR_TYPEDEF(_IBlockOccurrenceAuto, __uuidof(_IBlockOccurrenceAuto));
_COM_SMARTPTR_TYPEDEF(BlockLabelOccurrence, __uuidof(BlockLabelOccurrence));
_COM_SMARTPTR_TYPEDEF(_IBlockLabelOccurrencesAuto, __uuidof(_IBlockLabelOccurrencesAuto));
_COM_SMARTPTR_TYPEDEF(BlockLabel, __uuidof(BlockLabel));
_COM_SMARTPTR_TYPEDEF(_IBlockLabelOccurrenceAuto, __uuidof(_IBlockLabelOccurrenceAuto));
_COM_SMARTPTR_TYPEDEF(_IBlockLabelAuto, __uuidof(_IBlockLabelAuto));
_COM_SMARTPTR_TYPEDEF(BlockLabels, __uuidof(BlockLabels));
_COM_SMARTPTR_TYPEDEF(_IBlockViewAuto, __uuidof(_IBlockViewAuto));
_COM_SMARTPTR_TYPEDEF(_IBlockLabelsAuto, __uuidof(_IBlockLabelsAuto));
_COM_SMARTPTR_TYPEDEF(Blocks, __uuidof(Blocks));
_COM_SMARTPTR_TYPEDEF(_IBlocksAuto, __uuidof(_IBlocksAuto));
_COM_SMARTPTR_TYPEDEF(DraftFilePreferences, __uuidof(DraftFilePreferences));
_COM_SMARTPTR_TYPEDEF(_IDraftFilePreferencesAuto, __uuidof(_IDraftFilePreferencesAuto));
_COM_SMARTPTR_TYPEDEF(SheetGroups, __uuidof(SheetGroups));
_COM_SMARTPTR_TYPEDEF(SheetGroup, __uuidof(SheetGroup));
_COM_SMARTPTR_TYPEDEF(_ISheetGroupsAuto, __uuidof(_ISheetGroupsAuto));
_COM_SMARTPTR_TYPEDEF(SheetGroupSheets, __uuidof(SheetGroupSheets));
_COM_SMARTPTR_TYPEDEF(_ISheetGroupAuto, __uuidof(_ISheetGroupAuto));
_COM_SMARTPTR_TYPEDEF(Sheet, __uuidof(Sheet));
_COM_SMARTPTR_TYPEDEF(_ISheetGroupSheetsAuto, __uuidof(_ISheetGroupSheetsAuto));
_COM_SMARTPTR_TYPEDEF(Section, __uuidof(Section));
_COM_SMARTPTR_TYPEDEF(SectionSheets, __uuidof(SectionSheets));
_COM_SMARTPTR_TYPEDEF(_ISectionSheetsAuto, __uuidof(_ISectionSheetsAuto));
_COM_SMARTPTR_TYPEDEF(_ISectionAuto, __uuidof(_ISectionAuto));
_COM_SMARTPTR_TYPEDEF(SheetSetup, __uuidof(SheetSetup));
_COM_SMARTPTR_TYPEDEF(_ISheetSetupAuto, __uuidof(_ISheetSetupAuto));
_COM_SMARTPTR_TYPEDEF(_ISheetAuto, __uuidof(_ISheetAuto));
_COM_SMARTPTR_TYPEDEF(Sheets, __uuidof(Sheets));
_COM_SMARTPTR_TYPEDEF(_ISheetsAuto, __uuidof(_ISheetsAuto));
_COM_SMARTPTR_TYPEDEF(Sections, __uuidof(Sections));
_COM_SMARTPTR_TYPEDEF(_ISectionsAuto, __uuidof(_ISectionsAuto));
_COM_SMARTPTR_TYPEDEF(ModelLinks, __uuidof(ModelLinks));
_COM_SMARTPTR_TYPEDEF(_IModelLinksAuto, __uuidof(_IModelLinksAuto));
_COM_SMARTPTR_TYPEDEF(PartsLists, __uuidof(PartsLists));
_COM_SMARTPTR_TYPEDEF(PartsList, __uuidof(PartsList));
_COM_SMARTPTR_TYPEDEF(_IPartsListsAuto, __uuidof(_IPartsListsAuto));
_COM_SMARTPTR_TYPEDEF(TableCell, __uuidof(TableCell));
_COM_SMARTPTR_TYPEDEF(_ITableCellAuto, __uuidof(_ITableCellAuto));
_COM_SMARTPTR_TYPEDEF(TableColumns, __uuidof(TableColumns));
_COM_SMARTPTR_TYPEDEF(TableColumn, __uuidof(TableColumn));
_COM_SMARTPTR_TYPEDEF(_ITableColumnsAuto, __uuidof(_ITableColumnsAuto));
_COM_SMARTPTR_TYPEDEF(_ITableColumnAuto, __uuidof(_ITableColumnAuto));
_COM_SMARTPTR_TYPEDEF(TableRows, __uuidof(TableRows));
_COM_SMARTPTR_TYPEDEF(TableRow, __uuidof(TableRow));
_COM_SMARTPTR_TYPEDEF(_ITableRowsAuto, __uuidof(_ITableRowsAuto));
_COM_SMARTPTR_TYPEDEF(_ITableRowAuto, __uuidof(_ITableRowAuto));
_COM_SMARTPTR_TYPEDEF(TableTitles, __uuidof(TableTitles));
_COM_SMARTPTR_TYPEDEF(TableTitle, __uuidof(TableTitle));
_COM_SMARTPTR_TYPEDEF(_ITableTitlesAuto, __uuidof(_ITableTitlesAuto));
_COM_SMARTPTR_TYPEDEF(_ITableTitleAuto, __uuidof(_ITableTitleAuto));
_COM_SMARTPTR_TYPEDEF(TablePages, __uuidof(TablePages));
_COM_SMARTPTR_TYPEDEF(TablePage, __uuidof(TablePage));
_COM_SMARTPTR_TYPEDEF(_ITablePagesAuto, __uuidof(_ITablePagesAuto));
_COM_SMARTPTR_TYPEDEF(_ITablePageAuto, __uuidof(_ITablePageAuto));
_COM_SMARTPTR_TYPEDEF(TableGroups, __uuidof(TableGroups));
_COM_SMARTPTR_TYPEDEF(TableGroup, __uuidof(TableGroup));
_COM_SMARTPTR_TYPEDEF(_ITableGroupsAuto, __uuidof(_ITableGroupsAuto));
_COM_SMARTPTR_TYPEDEF(_ITableGroupAuto, __uuidof(_ITableGroupAuto));
_COM_SMARTPTR_TYPEDEF(_IPartsListAuto, __uuidof(_IPartsListAuto));
_COM_SMARTPTR_TYPEDEF(HoleTables, __uuidof(HoleTables));
_COM_SMARTPTR_TYPEDEF(HoleTable, __uuidof(HoleTable));
_COM_SMARTPTR_TYPEDEF(_IHoleTablesAuto, __uuidof(_IHoleTablesAuto));
_COM_SMARTPTR_TYPEDEF(HTHoles, __uuidof(HTHoles));
_COM_SMARTPTR_TYPEDEF(_IHoleTableAuto, __uuidof(_IHoleTableAuto));
_COM_SMARTPTR_TYPEDEF(HTHole, __uuidof(HTHole));
_COM_SMARTPTR_TYPEDEF(_IHTHolesAuto, __uuidof(_IHTHolesAuto));
_COM_SMARTPTR_TYPEDEF(_IHTHoleAuto, __uuidof(_IHTHoleAuto));
_COM_SMARTPTR_TYPEDEF(Tables, __uuidof(Tables));
_COM_SMARTPTR_TYPEDEF(Table, __uuidof(Table));
_COM_SMARTPTR_TYPEDEF(_ITablesAuto, __uuidof(_ITablesAuto));
_COM_SMARTPTR_TYPEDEF(_ITableAuto, __uuidof(_ITableAuto));
_COM_SMARTPTR_TYPEDEF(DraftBendTables, __uuidof(DraftBendTables));
_COM_SMARTPTR_TYPEDEF(DraftBendTable, __uuidof(DraftBendTable));
_COM_SMARTPTR_TYPEDEF(_IDraftBendTablesAuto, __uuidof(_IDraftBendTablesAuto));
_COM_SMARTPTR_TYPEDEF(_IDraftBendTableAuto, __uuidof(_IDraftBendTableAuto));
_COM_SMARTPTR_TYPEDEF(ConnectorTables, __uuidof(ConnectorTables));
_COM_SMARTPTR_TYPEDEF(ConnectorTable, __uuidof(ConnectorTable));
_COM_SMARTPTR_TYPEDEF(_IConnectorTablesAuto, __uuidof(_IConnectorTablesAuto));
_COM_SMARTPTR_TYPEDEF(_IConnectorTableAuto, __uuidof(_IConnectorTableAuto));
_COM_SMARTPTR_TYPEDEF(BlockTables, __uuidof(BlockTables));
_COM_SMARTPTR_TYPEDEF(BlockTable, __uuidof(BlockTable));
_COM_SMARTPTR_TYPEDEF(_IBlockTablesAuto, __uuidof(_IBlockTablesAuto));
_COM_SMARTPTR_TYPEDEF(_IBlockTableAuto, __uuidof(_IBlockTableAuto));
_COM_SMARTPTR_TYPEDEF(FOPTables, __uuidof(FOPTables));
_COM_SMARTPTR_TYPEDEF(FOPTable, __uuidof(FOPTable));
_COM_SMARTPTR_TYPEDEF(_IFOPTablesAuto, __uuidof(_IFOPTablesAuto));
_COM_SMARTPTR_TYPEDEF(_IFOPTableAuto, __uuidof(_IFOPTableAuto));
_COM_SMARTPTR_TYPEDEF(ConductorTables, __uuidof(ConductorTables));
_COM_SMARTPTR_TYPEDEF(ConductorTable, __uuidof(ConductorTable));
_COM_SMARTPTR_TYPEDEF(_IConductorTablesAuto, __uuidof(_IConductorTablesAuto));
_COM_SMARTPTR_TYPEDEF(_IConductorTableAuto, __uuidof(_IConductorTableAuto));
_COM_SMARTPTR_TYPEDEF(ToleranceTables, __uuidof(ToleranceTables));
_COM_SMARTPTR_TYPEDEF(ToleranceTable, __uuidof(ToleranceTable));
_COM_SMARTPTR_TYPEDEF(_IToleranceTablesAuto, __uuidof(_IToleranceTablesAuto));
_COM_SMARTPTR_TYPEDEF(_IToleranceTableAuto, __uuidof(_IToleranceTableAuto));
_COM_SMARTPTR_TYPEDEF(HoleTables2, __uuidof(HoleTables2));
_COM_SMARTPTR_TYPEDEF(HoleTable2, __uuidof(HoleTable2));
_COM_SMARTPTR_TYPEDEF(_IHoleTables2Auto, __uuidof(_IHoleTables2Auto));
_COM_SMARTPTR_TYPEDEF(_IHoleTable2Auto, __uuidof(_IHoleTable2Auto));
_COM_SMARTPTR_TYPEDEF(WeldTables, __uuidof(WeldTables));
_COM_SMARTPTR_TYPEDEF(_IDraftDocumentAuto, __uuidof(_IDraftDocumentAuto));
_COM_SMARTPTR_TYPEDEF(WeldTable, __uuidof(WeldTable));
_COM_SMARTPTR_TYPEDEF(_IWeldTablesAuto, __uuidof(_IWeldTablesAuto));
_COM_SMARTPTR_TYPEDEF(_IWeldTableAuto, __uuidof(_IWeldTableAuto));
_COM_SMARTPTR_TYPEDEF(_IViewPlaneAuto, __uuidof(_IViewPlaneAuto));
_COM_SMARTPTR_TYPEDEF(SelectedSheets, __uuidof(SelectedSheets));
_COM_SMARTPTR_TYPEDEF(_ISelectedSheetsAuto, __uuidof(_ISelectedSheetsAuto));
_COM_SMARTPTR_TYPEDEF(_ISheetWindowAuto, __uuidof(_ISheetWindowAuto));
_COM_SMARTPTR_TYPEDEF(DraftDocument, __uuidof(DraftDocument));
_COM_SMARTPTR_TYPEDEF(_IDraftPrintUtilityAuto, __uuidof(_IDraftPrintUtilityAuto));
_COM_SMARTPTR_TYPEDEF(ViewPlane, __uuidof(ViewPlane));
_COM_SMARTPTR_TYPEDEF(SheetWindow, __uuidof(SheetWindow));
_COM_SMARTPTR_TYPEDEF(DraftPrintUtility, __uuidof(DraftPrintUtility));
_COM_SMARTPTR_TYPEDEF(ViewPlanes, __uuidof(ViewPlanes));

//
// Type library items
//

struct __declspec(uuid("cd8078ae-bb16-41ad-8bd9-7bddfbb37d8d"))
BlockView : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDimensions))
    TGFrameworkSupport::DimensionsPtr Dimensions;
    __declspec(property(get=GetLeaders))
    TGFrameworkSupport::LeadersPtr Leaders;
    __declspec(property(get=GetBalloons))
    TGFrameworkSupport::BalloonsPtr Balloons;
    __declspec(property(get=GetTextBoxes))
    TGFrameworkSupport::TextBoxesPtr TextBoxes;
    __declspec(property(get=GetRelations2d))
    TGFrameworkSupport::Relations2dPtr Relations2d;
    __declspec(property(get=GetSmartFrames2d))
    TGFrameworkSupport::SmartFrames2dPtr SmartFrames2d;
    __declspec(property(get=GetPinSymbols))
    TGFrameworkSupport::PinSymbolsPtr PinSymbols;
    __declspec(property(get=GetDrawingViews))
    DrawingViewsPtr DrawingViews;
    __declspec(property(get=GetDatumFrames))
    TGFrameworkSupport::DatumFramesPtr DatumFrames;
    __declspec(property(get=GetFeatureControlFrames))
    TGFrameworkSupport::FeatureControlFramesPtr FeatureControlFrames;
    __declspec(property(get=GetSurfaceFinishSymbols))
    TGFrameworkSupport::SurfaceFinishSymbolsPtr SurfaceFinishSymbols;
    __declspec(property(get=GetWeldSymbols))
    TGFrameworkSupport::WeldSymbolsPtr WeldSymbols;
    __declspec(property(get=GetCenterMarks))
    TGFrameworkSupport::CenterMarksPtr CenterMarks;
    __declspec(property(get=GetCenterLines))
    TGFrameworkSupport::CenterLinesPtr CenterLines;
    __declspec(property(get=GetDatumTargets))
    TGFrameworkSupport::DatumTargetsPtr DatumTargets;
    __declspec(property(get=GetDatumPoints))
    TGFrameworkSupport::DatumPointsPtr DatumPoints;
    __declspec(property(get=GetCornerAnnotations))
    TGFrameworkSupport::CornerAnnotationsPtr CornerAnnotations;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];
    __declspec(property(get=GetBoltHoleCircles))
    TGFrameworkSupport::BoltHoleCirclesPtr BoltHoleCircles;
    __declspec(property(get=GetConnectors))
    TGFrameworkSupport::ConnectorsPtr Connectors;
    __declspec(property(get=GetBlockOccurrences))
    BlockOccurrencesPtr BlockOccurrences;
    __declspec(property(get=GetBlockLabels))
    BlockLabelsPtr BlockLabels;
    __declspec(property(get=GetImages2d))
    TGFrameworkSupport::Images2dPtr Images2d;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetDocument))
    IDispatchPtr Document;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetLines2d))
    TGFrameworkSupport::Lines2dPtr Lines2d;
    __declspec(property(get=GetCircles2d))
    TGFrameworkSupport::Circles2dPtr Circles2d;
    __declspec(property(get=GetArcs2d))
    TGFrameworkSupport::Arcs2dPtr Arcs2d;
    __declspec(property(get=GetEllipses2d))
    TGFrameworkSupport::Ellipses2dPtr Ellipses2d;
    __declspec(property(get=GetBsplineCurves2d))
    TGFrameworkSupport::BSplineCurves2dPtr BsplineCurves2d;
    __declspec(property(get=GetPoints2d))
    TGFrameworkSupport::Points2dPtr Points2d;
    __declspec(property(get=GetEllipticalArcs2d))
    TGFrameworkSupport::EllipticalArcs2dPtr EllipticalArcs2d;
    __declspec(property(get=GetCurves2d))
    TGFrameworkSupport::Curves2dPtr Curves2d;
    __declspec(property(get=GetLineStrings2d))
    TGFrameworkSupport::LineStrings2dPtr LineStrings2d;
    __declspec(property(get=GetComplexStrings2d))
    TGFrameworkSupport::ComplexStrings2dPtr ComplexStrings2d;
    __declspec(property(get=GetBoundaries2d))
    TGFrameworkSupport::Boundaries2dPtr Boundaries2d;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetDocument ( );
    long GetIndex ( );
    void PutName (
        _bstr_t _arg1 );
    _bstr_t GetName ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    TGFrameworkSupport::Lines2dPtr GetLines2d ( );
    TGFrameworkSupport::Circles2dPtr GetCircles2d ( );
    TGFrameworkSupport::Arcs2dPtr GetArcs2d ( );
    TGFrameworkSupport::Ellipses2dPtr GetEllipses2d ( );
    TGFrameworkSupport::BSplineCurves2dPtr GetBsplineCurves2d ( );
    TGFrameworkSupport::Points2dPtr GetPoints2d ( );
    TGFrameworkSupport::EllipticalArcs2dPtr GetEllipticalArcs2d ( );
    TGFrameworkSupport::Curves2dPtr GetCurves2d ( );
    TGFrameworkSupport::LineStrings2dPtr GetLineStrings2d ( );
    TGFrameworkSupport::ComplexStrings2dPtr GetComplexStrings2d ( );
    TGFrameworkSupport::Boundaries2dPtr GetBoundaries2d ( );
    TGFrameworkSupport::DimensionsPtr GetDimensions ( );
    TGFrameworkSupport::LeadersPtr GetLeaders ( );
    TGFrameworkSupport::BalloonsPtr GetBalloons ( );
    TGFrameworkSupport::TextBoxesPtr GetTextBoxes ( );
    TGFrameworkSupport::Relations2dPtr GetRelations2d ( );
    TGFrameworkSupport::SmartFrames2dPtr GetSmartFrames2d ( );
    TGFrameworkSupport::DatumFramesPtr GetDatumFrames ( );
    TGFrameworkSupport::FeatureControlFramesPtr GetFeatureControlFrames ( );
    TGFrameworkSupport::SurfaceFinishSymbolsPtr GetSurfaceFinishSymbols ( );
    TGFrameworkSupport::WeldSymbolsPtr GetWeldSymbols ( );
    TGFrameworkSupport::CenterMarksPtr GetCenterMarks ( );
    TGFrameworkSupport::CenterLinesPtr GetCenterLines ( );
    TGFrameworkSupport::DatumTargetsPtr GetDatumTargets ( );
    TGFrameworkSupport::PinSymbolsPtr GetPinSymbols ( );
    TGFrameworkSupport::DatumPointsPtr GetDatumPoints ( );
    TGFrameworkSupport::CornerAnnotationsPtr GetCornerAnnotations ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    TGFrameworkSupport::BoltHoleCirclesPtr GetBoltHoleCircles ( );
    TGFrameworkSupport::ConnectorsPtr GetConnectors ( );
    HRESULT SetOrigin (
        double x,
        double y );
    HRESULT GetOrigin (
        double * x,
        double * y );
    HRESULT ReplaceGraphics (
        const _variant_t & DeleteSelectedGraphics = vtMissing );
    HRESULT UpdatePreview ( );
    DrawingViewsPtr GetDrawingViews ( );
    BlockOccurrencesPtr GetBlockOccurrences ( );
    BlockLabelsPtr GetBlockLabels ( );
    TGFrameworkSupport::Images2dPtr GetImages2d ( );
};

struct __declspec(uuid("61f55454-5269-11ce-9cfe-08003637fb01"))
DrawingViews : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
    DrawingViewPtr Item (
        const _variant_t & Index );
    DrawingViewPtr Add (
        struct ModelLink * From,
        enum ViewOrientationConstants Orientation,
        double Scale,
        double x,
        double y );
    DrawingViewPtr AddWithConfiguration (
        struct ModelLink * From,
        enum ViewOrientationConstants Orientation,
        double Scale,
        double x,
        double y,
        _bstr_t ConfigFileName,
        _bstr_t ConfigurationName );
    DrawingViewPtr AddByFold (
        struct DrawingView * From,
        enum FoldTypeConstants foldDir,
        double x,
        double y );
    DrawingViewPtr AddByAuxiliaryFold (
        struct DrawingView * From,
        double x1,
        double y1,
        double x2,
        double y2,
        double x3,
        double y3 );
    DrawingViewPtr AddByDetailEnvelope (
        struct DrawingView * From,
        double x1,
        double y1,
        double Radius,
        double Scale,
        double x2,
        double y2 );
    DrawingViewPtr AddDraftView (
        double Scale,
        double x1,
        double y1 );
    DrawingViewPtr AddByDraftView (
        struct DrawingView * From,
        double Scale,
        double x1,
        double y1 );
    HRESULT Align ( );
    HRESULT Unalign ( );
    DrawingViewPtr AddAssemblyView (
        struct ModelLink * From,
        enum ViewOrientationConstants Orientation,
        double Scale,
        double x,
        double y,
        enum AssemblyDrawingViewTypeConstants ViewType,
        _bstr_t ConfigurationName,
        VARIANT_BOOL Snapshot,
        long SnapShotQuality );
    DrawingViewPtr AddPartView (
        struct ModelLink * From,
        enum ViewOrientationConstants Orientation,
        double Scale,
        double x,
        double y,
        enum PartDrawingViewTypeConstants ViewType );
    DrawingViewPtr AddSheetMetalView (
        struct ModelLink * From,
        enum ViewOrientationConstants Orientation,
        double Scale,
        double x,
        double y,
        enum SheetMetalDrawingViewTypeConstants ViewType );
    DrawingViewPtr AddWeldmentView (
        struct ModelLink * From,
        enum ViewOrientationConstants Orientation,
        double Scale,
        double x,
        double y,
        enum WeldmentDrawingViewTypeConstants ViewType );
    DrawingViewPtr AddDetailView (
        struct DrawingView * From,
        double x1,
        double y1,
        double Radius,
        double Scale,
        double x2,
        double y2,
        VARIANT_BOOL Independent );
    DrawingViewPtr Add2dModelView (
        double Scale,
        double x1,
        double y1 );
    DrawingViewPtr AddPMIModelView (
        struct ModelLink * From,
        _bstr_t ModelViewName,
        double Scale,
        double x,
        double y,
        VARIANT_BOOL IncludePMIDimensions,
        VARIANT_BOOL UseDraftQuality,
        long DraftQuality );
    DrawingViewPtr AddEmptyView (
        struct ModelLink * From,
        enum DrawingViewDefaultsConstants CreationDefaults );
};

struct __declspec(uuid("61f55450-5269-11ce-9cfe-08003637fb01"))
DrawingView : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDefaults_ShowTangentEdges,put=PutDefaults_ShowTangentEdges))
    VARIANT_BOOL Defaults_ShowTangentEdges;
    __declspec(property(get=GetScaleFactor,put=PutScaleFactor))
    double ScaleFactor;
    __declspec(property(get=GetDefaults_TangentEdgeStyleName,put=PutDefaults_TangentEdgeStyleName))
    _bstr_t Defaults_TangentEdgeStyleName;
    __declspec(property(get=GetDefaults_ShowTubeCenterlines,put=PutDefaults_ShowTubeCenterlines))
    VARIANT_BOOL Defaults_ShowTubeCenterlines;
    __declspec(property(get=GetDrawingViewType))
    enum DrawingViewTypeConstants DrawingViewType;
    __declspec(property(get=GetDefaults_TubeCenterlineStyleName,put=PutDefaults_TubeCenterlineStyleName))
    _bstr_t Defaults_TubeCenterlineStyleName;
    __declspec(property(get=GetCropLeft,put=PutCropLeft))
    double CropLeft;
    __declspec(property(get=GetCropRight,put=PutCropRight))
    double CropRight;
    __declspec(property(get=GetCropTop,put=PutCropTop))
    double CropTop;
    __declspec(property(get=GetCropBottom,put=PutCropBottom))
    double CropBottom;
    __declspec(property(get=GetCrop,put=PutCrop))
    VARIANT_BOOL Crop;
    __declspec(property(get=GetCaption,put=PutCaption))
    _bstr_t Caption;
    __declspec(property(get=GetCroppedBoundaryStyle,put=PutCroppedBoundaryStyle))
    _bstr_t CroppedBoundaryStyle;
    __declspec(property(get=GetDisplayCroppedBoundary,put=PutDisplayCroppedBoundary))
    VARIANT_BOOL DisplayCroppedBoundary;
    __declspec(property(get=GetDisplayBorder,put=PutDisplayBorder))
    VARIANT_BOOL DisplayBorder;
    __declspec(property(get=GetSuffix))
    _bstr_t Suffix;
    __declspec(property(get=GetDefaults_ShowEdgesHiddenTangentEdgesSelfHidden,put=PutDefaults_ShowEdgesHiddenTangentEdgesSelfHidden))
    VARIANT_BOOL Defaults_ShowEdgesHiddenTangentEdgesSelfHidden;
    __declspec(property(get=GetDescription,put=PutDescription))
    _bstr_t Description;
    __declspec(property(get=GetDisplayCaption,put=PutDisplayCaption))
    VARIANT_BOOL DisplayCaption;
    __declspec(property(get=GetDisplaySuffix,put=PutDisplaySuffix))
    VARIANT_BOOL DisplaySuffix;
    __declspec(property(get=GetDisplayScale,put=PutDisplayScale))
    VARIANT_BOOL DisplayScale;
    __declspec(property(get=GetDisplayAnnotation,put=PutDisplayAnnotation))
    VARIANT_BOOL DisplayAnnotation;
    __declspec(property(get=GetDefaults_ShowEdgesHiddenTangentEdgesHiddenByOtherParts,put=PutDefaults_ShowEdgesHiddenTangentEdgesHiddenByOtherParts))
    VARIANT_BOOL Defaults_ShowEdgesHiddenTangentEdgesHiddenByOtherParts;
    __declspec(property(get=GetIncludePMIAnnotations,put=PutIncludePMIAnnotations))
    VARIANT_BOOL IncludePMIAnnotations;
    __declspec(property(get=GetEdgesUseModelColor,put=PutEdgesUseModelColor))
    VARIANT_BOOL EdgesUseModelColor;
    __declspec(property(get=GetEdgesUsePartBaseColor,put=PutEdgesUsePartBaseColor))
    VARIANT_BOOL EdgesUsePartBaseColor;
    __declspec(property(get=GetEdgesUseAssemblyOverrideColor,put=PutEdgesUseAssemblyOverrideColor))
    VARIANT_BOOL EdgesUseAssemblyOverrideColor;
    __declspec(property(get=GetSectionHatchUseModelColor,put=PutSectionHatchUseModelColor))
    VARIANT_BOOL SectionHatchUseModelColor;
    __declspec(property(get=GetAnnotation))
    IDispatchPtr Annotation;
    __declspec(property(get=GetSheet,put=PutSheet))
    IDispatchPtr Sheet;
    __declspec(property(get=GetDisplayWindow,put=PutDisplayWindow))
    VARIANT_BOOL DisplayWindow;
    __declspec(property(get=GetModelLink))
    IDispatchPtr ModelLink;
    __declspec(property(get=GetIsUpToDate))
    VARIANT_BOOL IsUpToDate;
    __declspec(property(get=GetIsPerspective))
    VARIANT_BOOL IsPerspective;
    __declspec(property(get=GetIsBrokenOutSectionTarget))
    VARIANT_BOOL IsBrokenOutSectionTarget;
    __declspec(property(get=GetIsCut))
    VARIANT_BOOL IsCut;
    __declspec(property(get=GetLockView,put=PutLockView))
    VARIANT_BOOL LockView;
    __declspec(property(get=GetHatchRibsInSectionViews,put=PutHatchRibsInSectionViews))
    VARIANT_BOOL HatchRibsInSectionViews;
    __declspec(property(get=GetDisplayBreakLinesInBrokenState,put=PutDisplayBreakLinesInBrokenState))
    VARIANT_BOOL DisplayBreakLinesInBrokenState;
    __declspec(property(get=GetCaptionDefinitionTextPrimary,put=PutCaptionDefinitionTextPrimary))
    _bstr_t CaptionDefinitionTextPrimary;
    __declspec(property(get=GetCaptionDisplayedTextPrimary))
    _bstr_t CaptionDisplayedTextPrimary;
    __declspec(property(get=GetDisplayCaptionPrimary,put=PutDisplayCaptionPrimary))
    VARIANT_BOOL DisplayCaptionPrimary;
    __declspec(property(get=GetCaptionDefinitionTextSecondary,put=PutCaptionDefinitionTextSecondary))
    _bstr_t CaptionDefinitionTextSecondary;
    __declspec(property(get=GetCaptionDisplayedTextSecondary))
    _bstr_t CaptionDisplayedTextSecondary;
    __declspec(property(get=GetDisplayCaptionSecondary,put=PutDisplayCaptionSecondary))
    VARIANT_BOOL DisplayCaptionSecondary;
    __declspec(property(get=GetSuffixDefinitionText,put=PutSuffixDefinitionText))
    _bstr_t SuffixDefinitionText;
    __declspec(property(get=GetScaleDefinitionText,put=PutScaleDefinitionText))
    _bstr_t ScaleDefinitionText;
    __declspec(property(get=GetSourceDrawingView))
    DrawingViewPtr SourceDrawingView;
    __declspec(property(get=GetZone,put=PutZone))
    _bstr_t Zone;
    __declspec(property(get=GetAnnotationSheetNumberDefinitionText,put=PutAnnotationSheetNumberDefinitionText))
    _bstr_t AnnotationSheetNumberDefinitionText;
    __declspec(property(get=GetDisplayAnnotationSheetNumber,put=PutDisplayAnnotationSheetNumber))
    VARIANT_BOOL DisplayAnnotationSheetNumber;
    __declspec(property(get=GetRotationAngleDefinitionText,put=PutRotationAngleDefinitionText))
    _bstr_t RotationAngleDefinitionText;
    __declspec(property(get=GetDisplayRotationAngle,put=PutDisplayRotationAngle))
    VARIANT_BOOL DisplayRotationAngle;
    __declspec(property(get=GetCaptionLocation,put=PutCaptionLocation))
    enum TGFrameworkSupport::DimViewCaptionLocationConstants CaptionLocation;
    __declspec(property(get=GetPrimaryCaptionColor,put=PutPrimaryCaptionColor))
    long PrimaryCaptionColor;
    __declspec(property(get=GetIsBroken))
    VARIANT_BOOL IsBroken;
    __declspec(property(get=GetPrimaryCaptionFont,put=PutPrimaryCaptionFont))
    _bstr_t PrimaryCaptionFont;
    __declspec(property(get=GetPrimaryCaptionFontStyle,put=PutPrimaryCaptionFontStyle))
    enum TGFrameworkSupport::DimTextFontStyleConstants PrimaryCaptionFontStyle;
    __declspec(property(get=GetPrimaryCaptionTextAlignment,put=PutPrimaryCaptionTextAlignment))
    enum TGFrameworkSupport::DrawingViewCaptionTextAlignment PrimaryCaptionTextAlignment;
    __declspec(property(get=GetCroppedVHL,put=PutCroppedVHL))
    VARIANT_BOOL CroppedVHL;
    __declspec(property(get=GetPrimaryCaptionTextSize,put=PutPrimaryCaptionTextSize))
    double PrimaryCaptionTextSize;
    __declspec(property(get=GetSecondaryCaptionColor,put=PutSecondaryCaptionColor))
    long SecondaryCaptionColor;
    __declspec(property(get=GetSecondaryCaptionFont,put=PutSecondaryCaptionFont))
    _bstr_t SecondaryCaptionFont;
    __declspec(property(get=GetSecondaryCaptionFontStyle,put=PutSecondaryCaptionFontStyle))
    enum TGFrameworkSupport::DimTextFontStyleConstants SecondaryCaptionFontStyle;
    __declspec(property(get=GetSecondaryCaptionTextAlignment,put=PutSecondaryCaptionTextAlignment))
    enum TGFrameworkSupport::DrawingViewCaptionTextAlignment SecondaryCaptionTextAlignment;
    __declspec(property(get=GetGetReferenceToGraphicMember2))
    TGFramework::ReferencePtr GetReferenceToGraphicMember2[];
    __declspec(property(get=GetSecondaryCaptionTextSize,put=PutSecondaryCaptionTextSize))
    double SecondaryCaptionTextSize;
    __declspec(property(get=GetShowPrimarySecondayCaptionSeparator,put=PutShowPrimarySecondayCaptionSeparator))
    VARIANT_BOOL ShowPrimarySecondayCaptionSeparator;
    __declspec(property(get=GetSimplifiedAssemblyOption,put=PutSimplifiedAssemblyOption))
    enum DrawingViewSimplifiedAssemblyOptionConstants SimplifiedAssemblyOption;
    __declspec(property(get=GetSimplifiedPartOption,put=PutSimplifiedPartOption))
    enum DrawingViewSimplifiedPartOptionConstants SimplifiedPartOption;
    __declspec(property(get=GetPMIModelView,put=PutPMIModelView))
    _bstr_t PMIModelView;
    __declspec(property(get=GetReferenceComponentsByConfigurations,put=PutReferenceComponentsByConfigurations))
    VARIANT_BOOL ReferenceComponentsByConfigurations;
    __declspec(property(get=GetDefaults_SolidFillSectionWeldBeads,put=PutDefaults_SolidFillSectionWeldBeads))
    VARIANT_BOOL Defaults_SolidFillSectionWeldBeads;
    __declspec(property(get=GetDefaults_EnableAlternatingHatchSpacing,put=PutDefaults_EnableAlternatingHatchSpacing))
    VARIANT_BOOL Defaults_EnableAlternatingHatchSpacing;
    __declspec(property(get=GetIncludePMIDimensions,put=PutIncludePMIDimensions))
    VARIANT_BOOL IncludePMIDimensions;
    __declspec(property(get=GetDefaults_EnableAlternatingHatchAngle,put=PutDefaults_EnableAlternatingHatchAngle))
    VARIANT_BOOL Defaults_EnableAlternatingHatchAngle;
    __declspec(property(get=GetPrimaryMember,put=PutPrimaryMember))
    _bstr_t PrimaryMember;
    __declspec(property(get=GetCuttingPlanes))
    CuttingPlanesPtr CuttingPlanes;
    __declspec(property(get=GetBrokenOutSectionProfiles))
    BrokenOutSectionProfilesPtr BrokenOutSectionProfiles;
    __declspec(property(get=GetDetailEnvelopes))
    DetailEnvelopesPtr DetailEnvelopes;
    __declspec(property(get=GetCroppingBoundaryProfile))
    DraftProfilePtr CroppingBoundaryProfile;
    __declspec(property(get=GetSectionOnly,put=PutSectionOnly))
    VARIANT_BOOL SectionOnly;
    __declspec(property(get=GetLayer,put=PutLayer))
    _bstr_t Layer;
    __declspec(property(get=GetHighlightDrawingViewMembers))
    HighlightDrawingViewMembersPtr HighlightDrawingViewMembers;
    __declspec(property(get=GetLastUpdateSEVersion))
    _bstr_t LastUpdateSEVersion;
    __declspec(property(get=GetLastUpdateDate))
    _variant_t LastUpdateDate;
    __declspec(property(get=GetLastUpdateUsername))
    _bstr_t LastUpdateUsername;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetLastUpdateTimeToUpdate))
    double LastUpdateTimeToUpdate;
    __declspec(property(get=GetDefaults_CoordinateSystemEdgeStyleName,put=PutDefaults_CoordinateSystemEdgeStyleName))
    _bstr_t Defaults_CoordinateSystemEdgeStyleName;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];
    __declspec(property(get=GetIsReferencePartTransparent,put=PutIsReferencePartTransparent))
    VARIANT_BOOL IsReferencePartTransparent;
    __declspec(property(get=GetBreakLinePairs))
    BreakLinePairsPtr BreakLinePairs;
    __declspec(property(get=GetDepthPlaneOffset,put=PutDepthPlaneOffset))
    double DepthPlaneOffset;
    __declspec(property(get=GetRetrieveDimOnUpdate,put=PutRetrieveDimOnUpdate))
    VARIANT_BOOL RetrieveDimOnUpdate;
    __declspec(property(get=GetCoordinateSystems2d))
    CoordinateSystems2dPtr CoordinateSystems2d;
    __declspec(property(get=GetSectionFullModel,put=PutSectionFullModel))
    VARIANT_BOOL SectionFullModel;
    __declspec(property(get=GetRevolvedSection,put=PutRevolvedSection))
    VARIANT_BOOL RevolvedSection;
    __declspec(property(get=GetShowNewComponentsAddedtoAssembly,put=PutShowNewComponentsAddedtoAssembly))
    VARIANT_BOOL ShowNewComponentsAddedtoAssembly;
    __declspec(property(get=GetTextFont,put=PutTextFont))
    _bstr_t TextFont;
    __declspec(property(get=GetTextFontStyle,put=PutTextFontStyle))
    enum TGFrameworkSupport::DimTextFontStyleConstants TextFontStyle;
    __declspec(property(get=GetTextHeight,put=PutTextHeight))
    double TextHeight;
    __declspec(property(get=GetTextRatio,put=PutTextRatio))
    double TextRatio;
    __declspec(property(get=GetTextColor,put=PutTextColor))
    long TextColor;
    __declspec(property(get=GetStyleName,put=PutStyleName))
    _bstr_t StyleName;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetName))
    _bstr_t Name[];
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetType))
    long Type;
    __declspec(property(get=GetZOrder))
    long ZOrder;
    __declspec(property(get=GetKey))
    _bstr_t Key[];
    __declspec(property(get=GetDocument))
    IDispatchPtr Document;
    __declspec(property(get=GetModelMembers))
    ModelMembersPtr ModelMembers;
    __declspec(property(get=GetGraphicMembers))
    GraphicMembersPtr GraphicMembers;
    __declspec(property(get=GetShowEdgesHiddenByOtherParts,put=PutShowEdgesHiddenByOtherParts))
    VARIANT_BOOL ShowEdgesHiddenByOtherParts;
    __declspec(property(get=GetProcessPartIntersections,put=PutProcessPartIntersections))
    VARIANT_BOOL ProcessPartIntersections;
    __declspec(property(get=GetDVLines2d))
    DVLines2dPtr DVLines2d;
    __declspec(property(get=GetDVArcs2d))
    DVArcs2dPtr DVArcs2d;
    __declspec(property(get=GetDVBSplineCurves2d))
    DVBSplineCurves2dPtr DVBSplineCurves2d;
    __declspec(property(get=GetDVCircles2d))
    DVCircles2dPtr DVCircles2d;
    __declspec(property(get=GetDVEllipses2d))
    DVEllipses2dPtr DVEllipses2d;
    __declspec(property(get=GetDVLineStrings2d))
    DVLineStrings2dPtr DVLineStrings2d;
    __declspec(property(get=GetDVEllipticalArcs2d))
    DVEllipticalArcs2dPtr DVEllipticalArcs2d;
    __declspec(property(get=GetConfiguration,put=PutConfiguration))
    _bstr_t Configuration;
    __declspec(property(get=GetViewType))
    long ViewType;
    __declspec(property(get=GetMatchConfiguration,put=PutMatchConfiguration))
    VARIANT_BOOL MatchConfiguration;
    __declspec(property(get=GetScaleDimensionsAndAnnotations,put=PutScaleDimensionsAndAnnotations))
    VARIANT_BOOL ScaleDimensionsAndAnnotations;
    __declspec(property(get=GetShading,put=PutShading))
    VARIANT_BOOL Shading;
    __declspec(property(get=GetShadingQuality,put=PutShadingQuality))
    enum DrawingViewShadingQualityConstants ShadingQuality;
    __declspec(property(get=GetShadingAllowAssemblyOverrides,put=PutShadingAllowAssemblyOverrides))
    VARIANT_BOOL ShadingAllowAssemblyOverrides;
    __declspec(property(get=GetShadingAllowPartFaceColors,put=PutShadingAllowPartFaceColors))
    VARIANT_BOOL ShadingAllowPartFaceColors;
    __declspec(property(get=GetShadingShowVisibleEdges,put=PutShadingShowVisibleEdges))
    VARIANT_BOOL ShadingShowVisibleEdges;
    __declspec(property(get=GetShadingGrayscale,put=PutShadingGrayscale))
    VARIANT_BOOL ShadingGrayscale;
    __declspec(property(get=GetShadingFlat,put=PutShadingFlat))
    VARIANT_BOOL ShadingFlat;
    __declspec(property(get=GetShadingTextures,put=PutShadingTextures))
    VARIANT_BOOL ShadingTextures;
    __declspec(property(get=GetShadingReflections,put=PutShadingReflections))
    VARIANT_BOOL ShadingReflections;
    __declspec(property(get=GetSnapShotQuality,put=PutSnapShotQuality))
    enum DrawingViewSnapShotQualityConstants SnapShotQuality;
    __declspec(property(get=GetVHL_ToleranceOverrideQuality,put=PutVHL_ToleranceOverrideQuality))
    enum DrawingViewVHL_ToleranceOverrideQualityConstants VHL_ToleranceOverrideQuality;
    __declspec(property(get=GetIsSnapShot,put=PutIsSnapShot))
    VARIANT_BOOL IsSnapShot;
    __declspec(property(get=GetDVPoints2d))
    DVPoints2dPtr DVPoints2d;
    __declspec(property(get=GetSnapshot,put=PutSnapshot))
    VARIANT_BOOL Snapshot;
    __declspec(property(get=GetTangencyTolerance,put=PutTangencyTolerance))
    double TangencyTolerance;
    __declspec(property(get=GetThreadAxisTolerance,put=PutThreadAxisTolerance))
    double ThreadAxisTolerance;
    __declspec(property(get=GetBsplineSimplification,put=PutBsplineSimplification))
    enum DrawingViewBsplineSimplificationConstants BsplineSimplification;
    __declspec(property(get=GetIntersectionProcessing,put=PutIntersectionProcessing))
    enum DrawingViewIntersectionProcessingConstants IntersectionProcessing;
    __declspec(property(get=GetDefaults_ShowSectionHatch,put=PutDefaults_ShowSectionHatch))
    VARIANT_BOOL Defaults_ShowSectionHatch;
    __declspec(property(get=GetDefaults_DeriveSectionHatchStyleNameFromPart,put=PutDefaults_DeriveSectionHatchStyleNameFromPart))
    VARIANT_BOOL Defaults_DeriveSectionHatchStyleNameFromPart;
    __declspec(property(get=GetDefaults_SectionHatchStyleName,put=PutDefaults_SectionHatchStyleName))
    _bstr_t Defaults_SectionHatchStyleName;
    __declspec(property(get=GetDefaults_VisibleEdgeStyleName,put=PutDefaults_VisibleEdgeStyleName))
    _bstr_t Defaults_VisibleEdgeStyleName;
    __declspec(property(get=GetDefaults_ShowHiddenEdges,put=PutDefaults_ShowHiddenEdges))
    VARIANT_BOOL Defaults_ShowHiddenEdges;
    __declspec(property(get=GetDefaults_HiddenEdgeStyleName,put=PutDefaults_HiddenEdgeStyleName))
    _bstr_t Defaults_HiddenEdgeStyleName;
    __declspec(property(get=GetDefaults_ShowEdgesHiddenByOtherParts,put=PutDefaults_ShowEdgesHiddenByOtherParts))
    VARIANT_BOOL Defaults_ShowEdgesHiddenByOtherParts;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    double GetScaleFactor ( );
    void PutScaleFactor (
        double _arg1 );
    HRESULT GetOrigin (
        double * x,
        double * y );
    HRESULT SetOrigin (
        double x,
        double y );
    enum DrawingViewTypeConstants GetDrawingViewType ( );
    double GetCropLeft ( );
    void PutCropLeft (
        double _arg1 );
    double GetCropRight ( );
    void PutCropRight (
        double _arg1 );
    double GetCropTop ( );
    void PutCropTop (
        double _arg1 );
    double GetCropBottom ( );
    void PutCropBottom (
        double _arg1 );
    VARIANT_BOOL GetCrop ( );
    void PutCrop (
        VARIANT_BOOL _arg1 );
    _bstr_t GetCaption ( );
    void PutCaption (
        _bstr_t _arg1 );
    _bstr_t GetSuffix ( );
    _bstr_t GetDescription ( );
    void PutDescription (
        _bstr_t _arg1 );
    VARIANT_BOOL GetDisplayCaption ( );
    void PutDisplayCaption (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplaySuffix ( );
    void PutDisplaySuffix (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayScale ( );
    void PutDisplayScale (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayAnnotation ( );
    void PutDisplayAnnotation (
        VARIANT_BOOL _arg1 );
    IDispatchPtr GetAnnotation ( );
    IDispatchPtr GetSheet ( );
    void PutSheet (
        IDispatch * _arg1 );
    VARIANT_BOOL GetDisplayWindow ( );
    void PutDisplayWindow (
        VARIANT_BOOL _arg1 );
    IDispatchPtr GetModelLink ( );
    VARIANT_BOOL GetIsUpToDate ( );
    HRESULT SheetToView (
        double xSheet,
        double ySheet,
        double * xView,
        double * yView );
    HRESULT ViewToSheet (
        double xView,
        double yView,
        double * xSheet,
        double * ySheet );
    IDispatchPtr Drop ( );
    HRESULT Update ( );
    _bstr_t GetTextFont ( );
    void PutTextFont (
        _bstr_t _arg1 );
    enum TGFrameworkSupport::DimTextFontStyleConstants GetTextFontStyle ( );
    void PutTextFontStyle (
        enum TGFrameworkSupport::DimTextFontStyleConstants _arg1 );
    double GetTextHeight ( );
    void PutTextHeight (
        double _arg1 );
    double GetTextRatio ( );
    void PutTextRatio (
        double _arg1 );
    long GetTextColor ( );
    void PutTextColor (
        long _arg1 );
    _bstr_t GetStyleName ( );
    void PutStyleName (
        _bstr_t _arg1 );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetIndex ( );
    _bstr_t GetName (
        const _variant_t & Recurse );
    IDispatchPtr GetParent ( );
    long GetType ( );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL * _arg1 );
    long GetZOrder ( );
    _bstr_t GetKey (
        const _variant_t & Recurse = vtMissing );
    IDispatchPtr GetDocument ( );
    HRESULT Copy ( );
    HRESULT Cut ( );
    HRESULT Delete ( );
    HRESULT BringToFront ( );
    HRESULT BringForward ( );
    HRESULT SendToBack ( );
    HRESULT SendBackward ( );
    HRESULT Select ( );
    HRESULT Range (
        double * min_x,
        double * min_y,
        double * max_x,
        double * max_y );
    CoordinateSystems2dPtr GetCoordinateSystems2d ( );
    HRESULT GetActiveCoordinateSystem (
        VARIANT * CoordinateSystem2d = &vtMissing,
        VARIANT * AlignmentAxis = &vtMissing );
    HRESULT SetActiveCoordinateSystem (
        const _variant_t & CoordinateSystem2d = vtMissing,
        const _variant_t & AlignmentAxis = vtMissing );
    ModelMembersPtr GetModelMembers ( );
    GraphicMembersPtr GetGraphicMembers ( );
    VARIANT_BOOL GetShowEdgesHiddenByOtherParts ( );
    void PutShowEdgesHiddenByOtherParts (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetProcessPartIntersections ( );
    void PutProcessPartIntersections (
        VARIANT_BOOL _arg1 );
    DVLines2dPtr GetDVLines2d ( );
    DVArcs2dPtr GetDVArcs2d ( );
    DVBSplineCurves2dPtr GetDVBSplineCurves2d ( );
    DVCircles2dPtr GetDVCircles2d ( );
    DVEllipses2dPtr GetDVEllipses2d ( );
    DVLineStrings2dPtr GetDVLineStrings2d ( );
    DVEllipticalArcs2dPtr GetDVEllipticalArcs2d ( );
    DVPoints2dPtr GetDVPoints2d ( );
    _bstr_t GetConfiguration ( );
    void PutConfiguration (
        _bstr_t _arg1 );
    HRESULT CheckConfiguration (
        VARIANT_BOOL * UpToDate );
    long GetViewType ( );
    VARIANT_BOOL GetMatchConfiguration ( );
    void PutMatchConfiguration (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetScaleDimensionsAndAnnotations ( );
    void PutScaleDimensionsAndAnnotations (
        VARIANT_BOOL _arg1 );
    HRESULT GetReferenceToGraphicMember (
        IDispatch * GraphicMember,
        struct TGFramework::Reference * * Reference );
    TGFramework::ReferencePtr GetGetReferenceToGraphicMember2 (
        IDispatch * GraphicMember );
    HRESULT GetRotationAngle (
        double * dRotAngle );
    HRESULT SetRotationAngle (
        double dRotAngle );
    HRESULT GetListOfHiddenLayers (
        long * NumLayers,
        SAFEARRAY * * HiddenLayers );
    HRESULT HideLayer (
        _bstr_t LayerName );
    HRESULT ShowLayer (
        _bstr_t LayerName );
    VARIANT_BOOL IsLayerHidden (
        _bstr_t LayerName );
    HRESULT RetrieveDimensions (
        VARIANT_BOOL IsRetrieve,
        _bstr_t DimensionStyleName,
        VARIANT_BOOL TypeLinear,
        VARIANT_BOOL TypeRadial,
        VARIANT_BOOL TypeAngular,
        VARIANT_BOOL TypeAnnotation,
        VARIANT_BOOL TypeCenterMark,
        VARIANT_BOOL GetDuplicatedRadial,
        VARIANT_BOOL GetDimensionToHiddenLines,
        VARIANT_BOOL ProjectCenterMark,
        VARIANT_BOOL ConnectCenters,
        VARIANT_BOOL GetCenterMarkToCircle,
        VARIANT_BOOL GetCenterMarkToArc );
    HRESULT RetrieveCenterLinesCenterMarks (
        VARIANT_BOOL IsRetrieve,
        _bstr_t DimensionStyleName,
        VARIANT_BOOL TypeCenterLine,
        VARIANT_BOOL TypeCenterMark,
        VARIANT_BOOL ProjectCenterMark,
        VARIANT_BOOL ConnectCenters,
        VARIANT_BOOL GetCenterLineToFullCylinder,
        VARIANT_BOOL GetCenterLineToPartialCylinder,
        VARIANT_BOOL GetCenterMarkToCircle,
        VARIANT_BOOL GetCenterMarkToArc,
        VARIANT_BOOL GetCenterMarkToEllipse,
        VARIANT_BOOL GetCenterMarkToPartialEllipse,
        VARIANT_BOOL EnableCenterMarkRangeCheck,
        VARIANT_BOOL EnableCenterLineRangeCheck,
        double dCenterLineMinRadius,
        double dCenterLineMaxRadius,
        double dCenterMarkMinRadius,
        double dCenterMarkMaxRadius );
    VARIANT_BOOL GetShading ( );
    void PutShading (
        VARIANT_BOOL _arg1 );
    enum DrawingViewShadingQualityConstants GetShadingQuality ( );
    void PutShadingQuality (
        enum DrawingViewShadingQualityConstants _arg1 );
    VARIANT_BOOL GetShadingAllowAssemblyOverrides ( );
    void PutShadingAllowAssemblyOverrides (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetShadingAllowPartFaceColors ( );
    void PutShadingAllowPartFaceColors (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetShadingShowVisibleEdges ( );
    void PutShadingShowVisibleEdges (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetShadingGrayscale ( );
    void PutShadingGrayscale (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetShadingFlat ( );
    void PutShadingFlat (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetShadingTextures ( );
    void PutShadingTextures (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetShadingReflections ( );
    void PutShadingReflections (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetIsSnapShot ( );
    enum DrawingViewSnapShotQualityConstants GetSnapShotQuality ( );
    void PutSnapShotQuality (
        enum DrawingViewSnapShotQualityConstants _arg1 );
    enum DrawingViewVHL_ToleranceOverrideQualityConstants GetVHL_ToleranceOverrideQuality ( );
    void PutVHL_ToleranceOverrideQuality (
        enum DrawingViewVHL_ToleranceOverrideQualityConstants _arg1 );
    VARIANT_BOOL GetIsBroken ( );
    HRESULT ModelToView (
        double xModel,
        double yModel,
        double zModel,
        double * xView,
        double * yView );
    HRESULT ViewOrientation (
        double * ViewVector_X,
        double * ViewVector_Y,
        double * ViewVector_Z,
        double * LocalXVector_X,
        double * LocalXVector_Y,
        double * LocalXVector_Z,
        enum ViewOrientationConstants * Orientation );
    VARIANT_BOOL GetSnapshot ( );
    void PutSnapshot (
        VARIANT_BOOL _arg1 );
    double GetTangencyTolerance ( );
    void PutTangencyTolerance (
        double _arg1 );
    double GetThreadAxisTolerance ( );
    void PutThreadAxisTolerance (
        double _arg1 );
    enum DrawingViewBsplineSimplificationConstants GetBsplineSimplification ( );
    void PutBsplineSimplification (
        enum DrawingViewBsplineSimplificationConstants _arg1 );
    enum DrawingViewIntersectionProcessingConstants GetIntersectionProcessing ( );
    void PutIntersectionProcessing (
        enum DrawingViewIntersectionProcessingConstants _arg1 );
    VARIANT_BOOL GetDefaults_ShowSectionHatch ( );
    void PutDefaults_ShowSectionHatch (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDefaults_DeriveSectionHatchStyleNameFromPart ( );
    void PutDefaults_DeriveSectionHatchStyleNameFromPart (
        VARIANT_BOOL _arg1 );
    _bstr_t GetDefaults_SectionHatchStyleName ( );
    void PutDefaults_SectionHatchStyleName (
        _bstr_t _arg1 );
    _bstr_t GetDefaults_VisibleEdgeStyleName ( );
    void PutDefaults_VisibleEdgeStyleName (
        _bstr_t _arg1 );
    VARIANT_BOOL GetDefaults_ShowHiddenEdges ( );
    void PutDefaults_ShowHiddenEdges (
        VARIANT_BOOL _arg1 );
    _bstr_t GetDefaults_HiddenEdgeStyleName ( );
    void PutDefaults_HiddenEdgeStyleName (
        _bstr_t _arg1 );
    VARIANT_BOOL GetDefaults_ShowEdgesHiddenByOtherParts ( );
    void PutDefaults_ShowEdgesHiddenByOtherParts (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDefaults_ShowTangentEdges ( );
    void PutDefaults_ShowTangentEdges (
        VARIANT_BOOL _arg1 );
    _bstr_t GetDefaults_TangentEdgeStyleName ( );
    void PutDefaults_TangentEdgeStyleName (
        _bstr_t _arg1 );
    VARIANT_BOOL GetDefaults_ShowTubeCenterlines ( );
    void PutDefaults_ShowTubeCenterlines (
        VARIANT_BOOL _arg1 );
    _bstr_t GetDefaults_TubeCenterlineStyleName ( );
    void PutDefaults_TubeCenterlineStyleName (
        _bstr_t _arg1 );
    VARIANT_BOOL GetDefaults_ShowEdgesHiddenTangentEdgesSelfHidden ( );
    void PutDefaults_ShowEdgesHiddenTangentEdgesSelfHidden (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDefaults_ShowEdgesHiddenTangentEdgesHiddenByOtherParts ( );
    void PutDefaults_ShowEdgesHiddenTangentEdgesHiddenByOtherParts (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetCroppedVHL ( );
    void PutCroppedVHL (
        VARIANT_BOOL _arg1 );
    HRESULT ConvertToIndependentDetailView ( );
    _bstr_t GetPMIModelView ( );
    void PutPMIModelView (
        _bstr_t _arg1 );
    VARIANT_BOOL GetIncludePMIDimensions ( );
    void PutIncludePMIDimensions (
        VARIANT_BOOL _arg1 );
    void PutCroppedBoundaryStyle (
        _bstr_t _arg1 );
    _bstr_t GetCroppedBoundaryStyle ( );
    void PutDisplayCroppedBoundary (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayCroppedBoundary ( );
    void PutDisplayBorder (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayBorder ( );
    VARIANT_BOOL GetIncludePMIAnnotations ( );
    void PutIncludePMIAnnotations (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetEdgesUseModelColor ( );
    void PutEdgesUseModelColor (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetEdgesUsePartBaseColor ( );
    void PutEdgesUsePartBaseColor (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetEdgesUseAssemblyOverrideColor ( );
    void PutEdgesUseAssemblyOverrideColor (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetSectionHatchUseModelColor ( );
    void PutSectionHatchUseModelColor (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetIsPerspective ( );
    HRESULT SetPerspectiveOn (
        double FocalLength );
    HRESULT SetPerspectiveOff ( );
    HRESULT SetPerspectiveFromNamedView (
        _bstr_t ViewName );
    VARIANT_BOOL GetIsBrokenOutSectionTarget ( );
    VARIANT_BOOL GetIsCut ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    void PutLockView (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetLockView ( );
    void PutHatchRibsInSectionViews (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetHatchRibsInSectionViews ( );
    VARIANT_BOOL GetDisplayBreakLinesInBrokenState ( );
    void PutDisplayBreakLinesInBrokenState (
        VARIANT_BOOL _arg1 );
    _bstr_t GetCaptionDefinitionTextPrimary ( );
    void PutCaptionDefinitionTextPrimary (
        _bstr_t _arg1 );
    _bstr_t GetCaptionDisplayedTextPrimary ( );
    VARIANT_BOOL GetDisplayCaptionPrimary ( );
    void PutDisplayCaptionPrimary (
        VARIANT_BOOL _arg1 );
    _bstr_t GetCaptionDefinitionTextSecondary ( );
    void PutCaptionDefinitionTextSecondary (
        _bstr_t _arg1 );
    _bstr_t GetCaptionDisplayedTextSecondary ( );
    VARIANT_BOOL GetDisplayCaptionSecondary ( );
    void PutDisplayCaptionSecondary (
        VARIANT_BOOL _arg1 );
    _bstr_t GetSuffixDefinitionText ( );
    void PutSuffixDefinitionText (
        _bstr_t _arg1 );
    _bstr_t GetScaleDefinitionText ( );
    void PutScaleDefinitionText (
        _bstr_t _arg1 );
    HRESULT SetViewOrientation (
        double ViewVector_X,
        double ViewVector_Y,
        double ViewVector_Z,
        double LocalXVector_X,
        double LocalXVector_Y,
        double LocalXVector_Z );
    HRESULT SetViewOrientationStandard (
        enum ViewOrientationConstants Orientation );
    HRESULT SetViewOrientationFromNamedView (
        _bstr_t NamedView,
        VARIANT_BOOL UsePerspective );
    HRESULT ForceUpdate ( );
    DrawingViewPtr GetSourceDrawingView ( );
    HRESULT GetCaptionPosition (
        double * x,
        double * y );
    HRESULT SetCaptionPosition (
        double x,
        double y );
    _bstr_t GetZone ( );
    void PutZone (
        _bstr_t _arg1 );
    void PutIsSnapShot (
        VARIANT_BOOL _arg1 );
    enum DrawingViewSimplifiedAssemblyOptionConstants GetSimplifiedAssemblyOption ( );
    void PutSimplifiedAssemblyOption (
        enum DrawingViewSimplifiedAssemblyOptionConstants _arg1 );
    enum DrawingViewSimplifiedPartOptionConstants GetSimplifiedPartOption ( );
    void PutSimplifiedPartOption (
        enum DrawingViewSimplifiedPartOptionConstants _arg1 );
    _bstr_t GetAnnotationSheetNumberDefinitionText ( );
    void PutAnnotationSheetNumberDefinitionText (
        _bstr_t _arg1 );
    VARIANT_BOOL GetDisplayAnnotationSheetNumber ( );
    void PutDisplayAnnotationSheetNumber (
        VARIANT_BOOL _arg1 );
    _bstr_t GetRotationAngleDefinitionText ( );
    void PutRotationAngleDefinitionText (
        _bstr_t _arg1 );
    VARIANT_BOOL GetDisplayRotationAngle ( );
    void PutDisplayRotationAngle (
        VARIANT_BOOL _arg1 );
    _bstr_t GetPrimaryCaptionFont ( );
    void PutPrimaryCaptionFont (
        _bstr_t _arg1 );
    enum TGFrameworkSupport::DimTextFontStyleConstants GetPrimaryCaptionFontStyle ( );
    void PutPrimaryCaptionFontStyle (
        enum TGFrameworkSupport::DimTextFontStyleConstants _arg1 );
    long GetPrimaryCaptionColor ( );
    void PutPrimaryCaptionColor (
        long _arg1 );
    double GetPrimaryCaptionTextSize ( );
    void PutPrimaryCaptionTextSize (
        double _arg1 );
    enum TGFrameworkSupport::DrawingViewCaptionTextAlignment GetPrimaryCaptionTextAlignment ( );
    void PutPrimaryCaptionTextAlignment (
        enum TGFrameworkSupport::DrawingViewCaptionTextAlignment _arg1 );
    _bstr_t GetSecondaryCaptionFont ( );
    void PutSecondaryCaptionFont (
        _bstr_t _arg1 );
    enum TGFrameworkSupport::DimTextFontStyleConstants GetSecondaryCaptionFontStyle ( );
    void PutSecondaryCaptionFontStyle (
        enum TGFrameworkSupport::DimTextFontStyleConstants _arg1 );
    long GetSecondaryCaptionColor ( );
    void PutSecondaryCaptionColor (
        long _arg1 );
    double GetSecondaryCaptionTextSize ( );
    void PutSecondaryCaptionTextSize (
        double _arg1 );
    enum TGFrameworkSupport::DrawingViewCaptionTextAlignment GetSecondaryCaptionTextAlignment ( );
    void PutSecondaryCaptionTextAlignment (
        enum TGFrameworkSupport::DrawingViewCaptionTextAlignment _arg1 );
    VARIANT_BOOL GetShowPrimarySecondayCaptionSeparator ( );
    void PutShowPrimarySecondayCaptionSeparator (
        VARIANT_BOOL _arg1 );
    enum TGFrameworkSupport::DimViewCaptionLocationConstants GetCaptionLocation ( );
    void PutCaptionLocation (
        enum TGFrameworkSupport::DimViewCaptionLocationConstants _arg1 );
    ModelMembersPtr ExecuteQuery (
        _bstr_t QueryName );
    VARIANT_BOOL GetReferenceComponentsByConfigurations ( );
    void PutReferenceComponentsByConfigurations (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDefaults_SolidFillSectionWeldBeads ( );
    void PutDefaults_SolidFillSectionWeldBeads (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDefaults_EnableAlternatingHatchSpacing ( );
    void PutDefaults_EnableAlternatingHatchSpacing (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDefaults_EnableAlternatingHatchAngle ( );
    void PutDefaults_EnableAlternatingHatchAngle (
        VARIANT_BOOL _arg1 );
    _bstr_t GetPrimaryMember ( );
    void PutPrimaryMember (
        _bstr_t _arg1 );
    HRESULT GetAlternateMembers (
        long * NumMembers,
        SAFEARRAY * * Members );
    HRESULT GetAlternatePositionMemberCandidates (
        long * NumMembers,
        SAFEARRAY * * Members );
    HRESULT AddAlternateMember (
        _bstr_t Member );
    HRESULT RemoveAlternateMember (
        _bstr_t Member );
    void PutLayer (
        _bstr_t _arg1 );
    _bstr_t GetLayer ( );
    VARIANT_BOOL GetSectionOnly ( );
    void PutSectionOnly (
        VARIANT_BOOL _arg1 );
    CuttingPlanesPtr GetCuttingPlanes ( );
    BrokenOutSectionProfilesPtr GetBrokenOutSectionProfiles ( );
    DetailEnvelopesPtr GetDetailEnvelopes ( );
    DraftProfilePtr GetCroppingBoundaryProfile ( );
    HighlightDrawingViewMembersPtr GetHighlightDrawingViewMembers ( );
    HRESULT AddConnectedDimensionsToSelectSet ( );
    HRESULT AddConnectedAnnotationsToSelectSet ( );
    _bstr_t GetLastUpdateSEVersion ( );
    _variant_t GetLastUpdateDate ( );
    _bstr_t GetLastUpdateUsername ( );
    double GetLastUpdateTimeToUpdate ( );
    _bstr_t GetDefaults_CoordinateSystemEdgeStyleName ( );
    void PutDefaults_CoordinateSystemEdgeStyleName (
        _bstr_t _arg1 );
    HRESULT ClearEdgeOverrides ( );
    void PutIsReferencePartTransparent (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetIsReferencePartTransparent ( );
    void PutRetrieveDimOnUpdate (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetRetrieveDimOnUpdate ( );
    BreakLinePairsPtr GetBreakLinePairs ( );
    HRESULT SetBrokenState ( );
    HRESULT SetUnBrokenState ( );
    void PutDepthPlaneOffset (
        double _arg1 );
    double GetDepthPlaneOffset ( );
    HRESULT RemoveDepthPlane ( );
    void PutSectionFullModel (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetSectionFullModel ( );
    void PutRevolvedSection (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetRevolvedSection ( );
    HRESULT AddBreakAxisForBreakLines (
        IUnknown * pElement1,
        enum KeypointIndexConstants KeyPointIndex1,
        IUnknown * pElement2,
        enum KeypointIndexConstants KeyPointIndex2 );
    HRESULT SetCenterForDetailView (
        double x,
        double y );
    HRESULT GetCenterForDetailView (
        double * x,
        double * y );
    HRESULT RetrieveSlotCenterLinesCenterMarks (
        VARIANT_BOOL IsRetrieve,
        _bstr_t DimensionStyleName,
        VARIANT_BOOL TypeCenterLine,
        VARIANT_BOOL TypeCenterMark,
        VARIANT_BOOL ProjectCenterMark,
        VARIANT_BOOL GetSlotCenterLines,
        VARIANT_BOOL GetStrikePointCenterMarks,
        VARIANT_BOOL GetEndPointCenterMarks,
        VARIANT_BOOL GetCenterofArcProjectionLines,
        VARIANT_BOOL EnableCenterMarkRangeCheck,
        VARIANT_BOOL EnableCenterLineRangeCheck,
        double dCenterLineMinRadius,
        double dCenterLineMaxRadius,
        double dCenterMarkMinRadius,
        double dCenterMarkMaxRadius );
    void PutShowNewComponentsAddedtoAssembly (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetShowNewComponentsAddedtoAssembly ( );
    HRESULT GetEdgeOrFaceID (
        IDispatch * pGraphicDVObj,
        long * pEntityId,
        VARIANT_BOOL * pIsEdge );
    HRESULT SetBendCenterlineStyleAndDisplay (
        enum StyleConstants bendUpCenterlineStyle,
        enum StyleConstants bendDownCenterlineStyle );
};

enum DrawingViewTypeConstants
{
    igNullView = 0,
    igPrincipleView = 1,
    igIsometricView = 2,
    igAuxiliaryView = 3,
    igXSectionView = 4,
    igDetailView = 5,
    igIsoXSectionView = 6,
    igUserView = 7,
    igRevolvedSectionView = 8,
    igBrokenView = 9,
    igNailboardView = 10
};

struct __declspec(uuid("302d8646-aa5f-11d3-9080-00c04f79b2c6"))
CoordinateSystems2d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
    CoordinateSystem2dPtr Item (
        const _variant_t & Index );
};

struct __declspec(uuid("302d8645-aa5f-11d3-9080-00c04f79b2c6"))
CoordinateSystem2d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetType))
    long Type;
    __declspec(property(get=GetIsDefault))
    VARIANT_BOOL IsDefault;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    long GetType ( );
    VARIANT_BOOL GetIsDefault ( );
    HRESULT GetOrigin (
        double * XOrigin,
        double * YOrigin );
    HRESULT GetAxisProperties (
        enum CoordinateSystem2dAxisConstants AxisDesignation,
        BSTR * Name,
        double * AxisX,
        double * AxisY );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
};

struct __declspec(uuid("302d8644-aa5f-11d3-9080-00c04f79b2c6"))
_ICoordinateSystems2dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
    CoordinateSystem2dPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * pApp ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * pParent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct CoordinateSystem2d * * pItem ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
};

enum CoordinateSystem2dAxisConstants
{
    seCoordinateSystem2dAxisLow = 0,
    seCoordinateSystem2dAxisHigh = 1
};

struct __declspec(uuid("302d8643-aa5f-11d3-9080-00c04f79b2c6"))
_ICoordinateSystem2dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetType))
    long Type;
    __declspec(property(get=GetIsDefault))
    VARIANT_BOOL IsDefault;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    long GetType ( );
    VARIANT_BOOL GetIsDefault ( );
    HRESULT GetOrigin (
        double * XOrigin,
        double * YOrigin );
    HRESULT GetAxisProperties (
        enum CoordinateSystem2dAxisConstants AxisDesignation,
        BSTR * Name,
        double * AxisX,
        double * AxisY );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall get_IsDefault (
        /*[out,retval]*/ VARIANT_BOOL * IsDefault ) = 0;
      virtual HRESULT __stdcall raw_GetOrigin (
        /*[out]*/ double * XOrigin,
        /*[out]*/ double * YOrigin ) = 0;
      virtual HRESULT __stdcall raw_GetAxisProperties (
        /*[in]*/ enum CoordinateSystem2dAxisConstants AxisDesignation,
        /*[out]*/ BSTR * Name,
        /*[out]*/ double * AxisX,
        /*[out]*/ double * AxisY ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
};

struct __declspec(uuid("e3ca5ef6-163d-11d4-ab46-00c04f72e275"))
ModelMembers : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
    ModelMemberPtr Item (
        const _variant_t & Index );
};

struct __declspec(uuid("f4e15a14-163d-11d4-ab46-00c04f72e275"))
ModelMember : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetImmediateParent))
    ModelMemberPtr ImmediateParent;
    __declspec(property(get=GetFileName))
    _bstr_t FileName;
    __declspec(property(get=GetDisplayType,put=PutDisplayType))
    enum ModelMemberDisplayTypeConstants DisplayType;
    __declspec(property(get=GetShowHiddenEdges,put=PutShowHiddenEdges))
    VARIANT_BOOL ShowHiddenEdges;
    __declspec(property(get=GetShowTangentEdges,put=PutShowTangentEdges))
    VARIANT_BOOL ShowTangentEdges;
    __declspec(property(get=GetShowSectionHatch,put=PutShowSectionHatch))
    VARIANT_BOOL ShowSectionHatch;
    __declspec(property(get=GetVisibleEdgeStyleName,put=PutVisibleEdgeStyleName))
    _bstr_t VisibleEdgeStyleName;
    __declspec(property(get=GetHiddenEdgeStyleName,put=PutHiddenEdgeStyleName))
    _bstr_t HiddenEdgeStyleName;
    __declspec(property(get=GetTangentEdgeStyleName,put=PutTangentEdgeStyleName))
    _bstr_t TangentEdgeStyleName;
    __declspec(property(get=GetModelMembers))
    ModelMembersPtr ModelMembers;
    __declspec(property(get=GetGraphicMembers))
    GraphicMembersPtr GraphicMembers;
    __declspec(property(get=GetDVLines2d))
    DVLines2dPtr DVLines2d;
    __declspec(property(get=GetDVArcs2d))
    DVArcs2dPtr DVArcs2d;
    __declspec(property(get=GetDVBSplineCurves2d))
    DVBSplineCurves2dPtr DVBSplineCurves2d;
    __declspec(property(get=GetDVCircles2d))
    DVCircles2dPtr DVCircles2d;
    __declspec(property(get=GetDVEllipses2d))
    DVEllipses2dPtr DVEllipses2d;
    __declspec(property(get=GetDVLineStrings2d))
    DVLineStrings2dPtr DVLineStrings2d;
    __declspec(property(get=GetDVEllipticalArcs2d))
    DVEllipticalArcs2dPtr DVEllipticalArcs2d;
    __declspec(property(get=GetType))
    enum ModelMemberTypeConstants Type;
    __declspec(property(get=GetIsSimplified))
    VARIANT_BOOL IsSimplified;
    __declspec(property(get=GetIsFlat))
    VARIANT_BOOL IsFlat;
    __declspec(property(get=GetRoadMap))
    _bstr_t RoadMap;
    __declspec(property(get=GetComponentType))
    enum ModelMemberComponentTypeConstants ComponentType;
    __declspec(property(get=GetDisplayAsReference,put=PutDisplayAsReference))
    VARIANT_BOOL DisplayAsReference;
    __declspec(property(get=GetDVPoints2d))
    DVPoints2dPtr DVPoints2d;
    __declspec(property(get=GetComponentName))
    _bstr_t ComponentName;
    __declspec(property(get=GetShowEdgesHiddenByOtherParts,put=PutShowEdgesHiddenByOtherParts))
    VARIANT_BOOL ShowEdgesHiddenByOtherParts;
    __declspec(property(get=GetShowEdgesHiddenTangentEdgesSelfHidden,put=PutShowEdgesHiddenTangentEdgesSelfHidden))
    VARIANT_BOOL ShowEdgesHiddenTangentEdgesSelfHidden;
    __declspec(property(get=GetShowEdgesHiddenTangentEdgesHiddenByOtherParts,put=PutShowEdgesHiddenTangentEdgesHiddenByOtherParts))
    VARIANT_BOOL ShowEdgesHiddenTangentEdgesHiddenByOtherParts;
    __declspec(property(get=GetShowFill,put=PutShowFill))
    VARIANT_BOOL ShowFill;
    __declspec(property(get=GetFillStyleName,put=PutFillStyleName))
    _bstr_t FillStyleName;
    __declspec(property(get=GetDeriveFillStyleFromPart,put=PutDeriveFillStyleFromPart))
    VARIANT_BOOL DeriveFillStyleFromPart;
    __declspec(property(get=GetDVBoundaries2d))
    SectionBoundaries2dPtr DVBoundaries2d;
    __declspec(property(get=GetModelNode))
    ModelNodePtr ModelNode;
    __declspec(property(get=GetHatchSpacing,put=PutHatchSpacing))
    double HatchSpacing;
    __declspec(property(get=GetHatchAngle,put=PutHatchAngle))
    double HatchAngle;
    __declspec(property(get=GetIsPrimaryAlternatePosition))
    VARIANT_BOOL IsPrimaryAlternatePosition;
    __declspec(property(get=GetIsAlternatePosition))
    VARIANT_BOOL IsAlternatePosition;
    __declspec(property(get=GetAlternatePositionMemberName))
    _bstr_t AlternatePositionMemberName;
    __declspec(property(get=GetCutHardware,put=PutCutHardware))
    VARIANT_BOOL CutHardware;
    __declspec(property(get=GetDisplaySection,put=PutDisplaySection))
    VARIANT_BOOL DisplaySection;
    __declspec(property(get=GetDisplayPart,put=PutDisplayPart))
    VARIANT_BOOL DisplayPart;
    __declspec(property(get=GetDeriveDisplayAsReferenceFromAsm,put=PutDeriveDisplayAsReferenceFromAsm))
    VARIANT_BOOL DeriveDisplayAsReferenceFromAsm;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    ModelMemberPtr GetImmediateParent ( );
    _bstr_t GetFileName ( );
    enum ModelMemberDisplayTypeConstants GetDisplayType ( );
    void PutDisplayType (
        enum ModelMemberDisplayTypeConstants _arg1 );
    enum ModelMemberTypeConstants GetType ( );
    enum ModelMemberComponentTypeConstants GetComponentType ( );
    VARIANT_BOOL GetShowHiddenEdges ( );
    void PutShowHiddenEdges (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetShowTangentEdges ( );
    void PutShowTangentEdges (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetShowSectionHatch ( );
    void PutShowSectionHatch (
        VARIANT_BOOL _arg1 );
    _bstr_t GetVisibleEdgeStyleName ( );
    void PutVisibleEdgeStyleName (
        _bstr_t _arg1 );
    _bstr_t GetHiddenEdgeStyleName ( );
    void PutHiddenEdgeStyleName (
        _bstr_t _arg1 );
    _bstr_t GetTangentEdgeStyleName ( );
    void PutTangentEdgeStyleName (
        _bstr_t _arg1 );
    ModelMembersPtr GetModelMembers ( );
    GraphicMembersPtr GetGraphicMembers ( );
    DVLines2dPtr GetDVLines2d ( );
    DVArcs2dPtr GetDVArcs2d ( );
    DVBSplineCurves2dPtr GetDVBSplineCurves2d ( );
    DVCircles2dPtr GetDVCircles2d ( );
    DVEllipses2dPtr GetDVEllipses2d ( );
    DVLineStrings2dPtr GetDVLineStrings2d ( );
    DVEllipticalArcs2dPtr GetDVEllipticalArcs2d ( );
    DVPoints2dPtr GetDVPoints2d ( );
    VARIANT_BOOL GetIsSimplified ( );
    VARIANT_BOOL GetIsFlat ( );
    _bstr_t GetRoadMap ( );
    VARIANT_BOOL GetDisplayAsReference ( );
    void PutDisplayAsReference (
        VARIANT_BOOL _arg1 );
    HRESULT GetRange2d (
        double * XMin,
        double * YMin,
        double * XMax,
        double * YMax );
    HRESULT GetRange3d (
        double * XMin,
        double * YMin,
        double * ZMin,
        double * XMax,
        double * YMax,
        double * ZMax );
    _bstr_t GetComponentName ( );
    VARIANT_BOOL GetShowEdgesHiddenByOtherParts ( );
    void PutShowEdgesHiddenByOtherParts (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetShowEdgesHiddenTangentEdgesSelfHidden ( );
    void PutShowEdgesHiddenTangentEdgesSelfHidden (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetShowEdgesHiddenTangentEdgesHiddenByOtherParts ( );
    void PutShowEdgesHiddenTangentEdgesHiddenByOtherParts (
        VARIANT_BOOL _arg1 );
    ModelNodePtr GetModelNode ( );
    VARIANT_BOOL GetShowFill ( );
    void PutShowFill (
        VARIANT_BOOL _arg1 );
    _bstr_t GetFillStyleName ( );
    void PutFillStyleName (
        _bstr_t _arg1 );
    VARIANT_BOOL GetDeriveFillStyleFromPart ( );
    void PutDeriveFillStyleFromPart (
        VARIANT_BOOL _arg1 );
    SectionBoundaries2dPtr GetDVBoundaries2d ( );
    double GetHatchSpacing ( );
    void PutHatchSpacing (
        double _arg1 );
    double GetHatchAngle ( );
    void PutHatchAngle (
        double _arg1 );
    VARIANT_BOOL GetIsPrimaryAlternatePosition ( );
    VARIANT_BOOL GetIsAlternatePosition ( );
    _bstr_t GetAlternatePositionMemberName ( );
    VARIANT_BOOL GetCutHardware ( );
    void PutCutHardware (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplaySection ( );
    void PutDisplaySection (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayPart ( );
    void PutDisplayPart (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDeriveDisplayAsReferenceFromAsm ( );
    void PutDeriveDisplayAsReferenceFromAsm (
        VARIANT_BOOL _arg1 );
};

struct __declspec(uuid("5079d1b2-163e-11d4-ab46-00c04f72e275"))
_IModelMembersAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
    ModelMemberPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * pApp ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * pParent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct ModelMember * * pItem ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
};

enum ModelMemberDisplayTypeConstants
{
    seShowPart = 0,
    seHidePart = 1,
    seSectionPart = 2,
    seUndefinedDisplay = 3
};

enum ModelMemberTypeConstants
{
    seAssemblyMember = 0,
    sePartMember = 1,
    seConstructionMember = 2
};

enum ModelMemberComponentTypeConstants
{
    seAssemblyMemberType = 0,
    sePartMemberType = 1,
    seConstructionMemberType = 2,
    seWeldmentMemberType = 3,
    seWeldPartMemberType = 4,
    seWeldBeadMemberType = 5,
    seSheetMetalMemberType = 6,
    seSolidBodyMemberType = 7,
    seReferencePlaneMemberType = 8,
    seSketchMemberType = 9,
    seTubeCenterlineMemberType = 10,
    seCoordinateSystemMemberType = 11
};

struct __declspec(uuid("20f0ef52-163e-11d4-ab46-00c04f72e275"))
GraphicMembers : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr Item (
        const _variant_t & Index );
};

struct __declspec(uuid("70f1173e-163e-11d4-ab46-00c04f72e275"))
_IGraphicMembersAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * pApp ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * pParent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * pItem ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
};

struct __declspec(uuid("929bc102-30e9-11d4-ab5d-00c04f72e275"))
DVLines2d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    DVLine2dPtr Item (
        const _variant_t & Index );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
};

struct __declspec(uuid("a980f5d8-2c32-11d4-ab5c-00c04f72e275"))
DVLine2d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetLength))
    double Length;
    __declspec(property(get=GetAngle))
    double Angle;
    __declspec(property(get=GetRelationships))
    TGFrameworkSupport::Relationships2dPtr Relationships;
    __declspec(property(get=GetKeyPointCount))
    long KeyPointCount;
    __declspec(property(get=GetSegmentedStyleCount))
    long SegmentedStyleCount;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetName))
    _bstr_t Name[];
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetKey))
    _bstr_t Key[];
    __declspec(property(get=GetDocument))
    IDispatchPtr Document;
    __declspec(property(get=GetBendAngle))
    double BendAngle;
    __declspec(property(get=GetBendRadius))
    double BendRadius;
    __declspec(property(get=GetDrawingView))
    DrawingViewPtr DrawingView;
    __declspec(property(get=GetModelMember))
    ModelMemberPtr ModelMember;
    __declspec(property(get=GetEdgeType))
    enum GraphicMemberEdgeTypeConstants EdgeType;
    __declspec(property(get=GetReference))
    TGFramework::ReferencePtr Reference;
    __declspec(property(get=GetBendQuantity))
    int BendQuantity;
    __declspec(property(get=GetShowHideEdgeOverride,put=PutShowHideEdgeOverride))
    DVShowHideEdgeOverrideType ShowHideEdgeOverride[];
    __declspec(property(get=GetModelWelds))
    ModelWeldsPtr ModelWelds;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFrameworkSupport::Relationships2dPtr GetRelationships ( );
    TGFramework::ApplicationPtr GetApplication ( );
    _bstr_t GetName (
        const _variant_t & Recurse );
    DrawingViewPtr GetDrawingView ( );
    ModelMemberPtr GetModelMember ( );
    enum GraphicMemberEdgeTypeConstants GetEdgeType ( );
    TGFramework::ReferencePtr GetReference ( );
    HRESULT GetReferenceKey (
        BSTR * FullName,
        SAFEARRAY * * ReferenceKey,
        long * KeySize );
    DVShowHideEdgeOverrideType GetShowHideEdgeOverride (
        const _variant_t & segmentIndex = vtMissing );
    void PutShowHideEdgeOverride (
        const _variant_t & segmentIndex,
        DVShowHideEdgeOverrideType _arg2 );
    enum TGFramework::ObjectType GetType ( );
    _bstr_t GetKey (
        const _variant_t & Recurse = vtMissing );
    IDispatchPtr GetDocument ( );
    HRESULT Range (
        double * XMinimum,
        double * YMinimum,
        double * XMaximum,
        double * YMaximum );
    double GetLength ( );
    double GetAngle ( );
    HRESULT GetStartPoint (
        double * x,
        double * y );
    HRESULT GetEndPoint (
        double * x,
        double * y );
    long GetKeyPointCount ( );
    HRESULT GetKeyPoint (
        long Index,
        double * x,
        double * y,
        double * z,
        enum TGFramework::KeyPointType * KeypointType,
        long * HandleType );
    long GetSegmentedStyleCount ( );
    HRESULT GetSegmentedStyle (
        long Index,
        double * x1,
        double * y1,
        double * x2,
        double * y2,
        IDispatch * * style );
    double GetBendAngle ( );
    double GetBendRadius ( );
    ModelWeldsPtr GetModelWelds ( );
    int GetBendQuantity ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
};

struct __declspec(uuid("22be9170-2c2a-11d4-ab5c-00c04f72e275"))
_IDVLines2dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    DVLine2dPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct DVLine2d * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Enum ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * App ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
};

enum GraphicMemberEdgeTypeConstants
{
    seUnknownEdgeType = 0,
    seModelEdgeType = 1,
    seSilhouetteEdgeType = 2,
    seSectionEdgeType = 3,
    seSnapshotEdgeType = 4,
    seThreadEdgeType = 5,
    seBendCenterlineEdgeType = 6,
    seCoordinateSystemType = 7
};

enum __MIDL___MIDL_itf_draft_0002_0027_0001
{
    DVShowHideEdgeOverrideNone = 0,
    DVShowHideEdgeOverrideShow = 1,
    DVShowHideEdgeOverrideHide = 2,
    DVShowHideEdgeOverrideIndeterminant = -1
};

struct __declspec(uuid("128dad0b-94a6-11d4-a517-0004ac9695cb"))
ModelWelds : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    ModelWeldPtr Item (
        const _variant_t & Index );
};

struct __declspec(uuid("345186d6-2c2a-11d4-ab5c-00c04f72e275"))
_IDVLine2dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetLength))
    double Length;
    __declspec(property(get=GetAngle))
    double Angle;
    __declspec(property(get=GetRelationships))
    TGFrameworkSupport::Relationships2dPtr Relationships;
    __declspec(property(get=GetKeyPointCount))
    long KeyPointCount;
    __declspec(property(get=GetSegmentedStyleCount))
    long SegmentedStyleCount;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetName))
    _bstr_t Name[][];
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetKey))
    _bstr_t Key[];
    __declspec(property(get=GetDocument))
    IDispatchPtr Document;
    __declspec(property(get=GetBendAngle))
    double BendAngle;
    __declspec(property(get=GetBendRadius))
    double BendRadius;
    __declspec(property(get=GetDrawingView))
    DrawingViewPtr DrawingView;
    __declspec(property(get=GetModelMember))
    ModelMemberPtr ModelMember;
    __declspec(property(get=GetEdgeType))
    enum GraphicMemberEdgeTypeConstants EdgeType;
    __declspec(property(get=GetReference))
    TGFramework::ReferencePtr Reference;
    __declspec(property(get=GetBendQuantity))
    int BendQuantity;
    __declspec(property(get=GetShowHideEdgeOverride,put=PutShowHideEdgeOverride))
    DVShowHideEdgeOverrideType ShowHideEdgeOverride[];
    __declspec(property(get=GetModelWelds))
    ModelWeldsPtr ModelWelds;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    TGFrameworkSupport::Relationships2dPtr GetRelationships ( );
    TGFramework::ApplicationPtr GetApplication ( );
    _bstr_t GetName (
        const _variant_t & Recurse,
        long Lcid = 0 );
    DrawingViewPtr GetDrawingView ( );
    ModelMemberPtr GetModelMember ( );
    enum GraphicMemberEdgeTypeConstants GetEdgeType ( );
    TGFramework::ReferencePtr GetReference ( );
    HRESULT GetReferenceKey (
        BSTR * FullName,
        SAFEARRAY * * ReferenceKey,
        long * KeySize );
    DVShowHideEdgeOverrideType GetShowHideEdgeOverride (
        const _variant_t & segmentIndex = vtMissing );
    void PutShowHideEdgeOverride (
        const _variant_t & segmentIndex,
        DVShowHideEdgeOverrideType overrideType );
    enum TGFramework::ObjectType GetType ( );
    _bstr_t GetKey (
        const _variant_t & Recurse = vtMissing );
    IDispatchPtr GetDocument ( );
    HRESULT Range (
        double * XMinimum,
        double * YMinimum,
        double * XMaximum,
        double * YMaximum );
    double GetLength ( );
    double GetAngle ( );
    HRESULT GetStartPoint (
        double * x,
        double * y );
    HRESULT GetEndPoint (
        double * x,
        double * y );
    long GetKeyPointCount ( );
    HRESULT GetKeyPoint (
        long Index,
        double * x,
        double * y,
        double * z,
        enum TGFramework::KeyPointType * KeypointType,
        long * HandleType );
    long GetSegmentedStyleCount ( );
    HRESULT GetSegmentedStyle (
        long Index,
        double * x1,
        double * y1,
        double * x2,
        double * y2,
        IDispatch * * style );
    double GetBendAngle ( );
    double GetBendRadius ( );
    ModelWeldsPtr GetModelWelds ( );
    int GetBendQuantity ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Relationships (
        /*[out,retval]*/ struct TGFrameworkSupport::Relationships2d * * Relationships2d ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[in]*/ VARIANT Recurse,
        /*[in,lcid]*/ long Lcid,
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_DrawingView (
        /*[out,retval]*/ struct DrawingView * * DrawingView ) = 0;
      virtual HRESULT __stdcall get_ModelMember (
        /*[out,retval]*/ struct ModelMember * * ModelMember ) = 0;
      virtual HRESULT __stdcall get_EdgeType (
        /*[out,retval]*/ enum GraphicMemberEdgeTypeConstants * EdgeType ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct TGFramework::Reference * * Reference ) = 0;
      virtual HRESULT __stdcall raw_GetReferenceKey (
        /*[out]*/ BSTR * FullName,
        /*[out]*/ SAFEARRAY * * ReferenceKey,
        /*[out]*/ long * KeySize ) = 0;
      virtual HRESULT __stdcall get_ShowHideEdgeOverride (
        /*[in]*/ VARIANT segmentIndex,
        /*[out,retval]*/ DVShowHideEdgeOverrideType * overrideType ) = 0;
      virtual HRESULT __stdcall put_ShowHideEdgeOverride (
        /*[in]*/ VARIANT segmentIndex,
        /*[in]*/ DVShowHideEdgeOverrideType overrideType ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall get_Key (
        /*[in]*/ VARIANT Recurse,
        /*[out,retval]*/ BSTR * Key ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ IDispatch * * Document ) = 0;
      virtual HRESULT __stdcall raw_Range (
        /*[out]*/ double * XMinimum,
        /*[out]*/ double * YMinimum,
        /*[out]*/ double * XMaximum,
        /*[out]*/ double * YMaximum ) = 0;
      virtual HRESULT __stdcall get_Length (
        /*[out,retval]*/ double * Length ) = 0;
      virtual HRESULT __stdcall get_Angle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall raw_GetStartPoint (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall raw_GetEndPoint (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall get_KeyPointCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_GetKeyPoint (
        /*[in]*/ long Index,
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z,
        /*[out]*/ enum TGFramework::KeyPointType * KeypointType,
        /*[out]*/ long * HandleType ) = 0;
      virtual HRESULT __stdcall get_SegmentedStyleCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_GetSegmentedStyle (
        /*[in]*/ long Index,
        /*[out]*/ double * x1,
        /*[out]*/ double * y1,
        /*[out]*/ double * x2,
        /*[out]*/ double * y2,
        /*[out]*/ IDispatch * * style ) = 0;
      virtual HRESULT __stdcall get_BendAngle (
        /*[out,retval]*/ double * BendAngle ) = 0;
      virtual HRESULT __stdcall get_BendRadius (
        /*[out,retval]*/ double * BendRadius ) = 0;
      virtual HRESULT __stdcall get_ModelWelds (
        /*[out,retval]*/ struct ModelWelds * * ModelWelds ) = 0;
      virtual HRESULT __stdcall get_BendQuantity (
        /*[out,retval]*/ int * BendRadius ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
};

struct __declspec(uuid("128dad0a-94a6-11d4-a517-0004ac9695cb"))
ModelWeld : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetBottomNote1))
    _bstr_t BottomNote1;
    __declspec(property(get=GetBottomNote2))
    _bstr_t BottomNote2;
    __declspec(property(get=GetBottomNote3))
    _bstr_t BottomNote3;
    __declspec(property(get=GetBottomNoteZ))
    _bstr_t BottomNoteZ;
    __declspec(property(get=GetBottomTreatmentType))
    enum TGFrameworkSupport::DimWeldTreatmentTypeConstants BottomTreatmentType;
    __declspec(property(get=GetBottomType))
    enum TGFrameworkSupport::DimWeldTypeConstants BottomType;
    __declspec(property(get=GetCenterType))
    enum TGFrameworkSupport::DimWeldTypeConstants CenterType;
    __declspec(property(get=GetCrossSectionArea))
    double CrossSectionArea;
    __declspec(property(get=GetDashLine))
    enum TGFrameworkSupport::DimWeldDashLineTypeConstants DashLine;
    __declspec(property(get=GetLength))
    double Length;
    __declspec(property(get=GetOffsetTopBottom))
    VARIANT_BOOL OffsetTopBottom;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetSymmetrical))
    VARIANT_BOOL Symmetrical;
    __declspec(property(get=GetTail))
    enum TGFrameworkSupport::DimWeldTailTypeConstants Tail;
    __declspec(property(get=GetTailNote))
    _bstr_t TailNote;
    __declspec(property(get=GetTailNote2))
    _bstr_t TailNote2;
    __declspec(property(get=GetTopNote1))
    _bstr_t TopNote1;
    __declspec(property(get=GetTopNote2))
    _bstr_t TopNote2;
    __declspec(property(get=GetTopNote3))
    _bstr_t TopNote3;
    __declspec(property(get=GetTopNoteZ))
    _bstr_t TopNoteZ;
    __declspec(property(get=GetTopTreatmentType))
    enum TGFrameworkSupport::DimWeldTreatmentTypeConstants TopTreatmentType;
    __declspec(property(get=GetTopType))
    enum TGFrameworkSupport::DimWeldTypeConstants TopType;
    __declspec(property(get=GetWeldAllAround))
    VARIANT_BOOL WeldAllAround;
    __declspec(property(get=GetWeldInField))
    VARIANT_BOOL WeldInField;
    __declspec(property(get=GetZSymbol))
    VARIANT_BOOL ZSymbol;
    __declspec(property(get=GetWeldLabelImport))
    enum DimWeldLabelImportConstants WeldLabelImport;
    __declspec(property(get=GetTopNoteCSize))
    _bstr_t TopNoteCSize;
    __declspec(property(get=GetBottomNoteCSize))
    _bstr_t BottomNoteCSize;
    __declspec(property(get=GetTopNoteAngle))
    _bstr_t TopNoteAngle;
    __declspec(property(get=GetBottomNoteAngle))
    _bstr_t BottomNoteAngle;
    __declspec(property(get=GetTopNoteDepth))
    _bstr_t TopNoteDepth;
    __declspec(property(get=GetBottomNoteDepth))
    _bstr_t BottomNoteDepth;
    __declspec(property(get=GetTopPosOffset))
    int TopPosOffset;
    __declspec(property(get=GetBottomPosOffset))
    int BottomPosOffset;
    __declspec(property(get=GetWeldBeadWeldmentType))
    enum DimWeldBeadWeldmentTypeConstants WeldBeadWeldmentType;
    __declspec(property(get=GetWeldBeadWeldmentShape))
    enum DimWeldBeadWeldmentShapeConstants WeldBeadWeldmentShape;
    __declspec(property(get=GetWeldBeadWeldType))
    enum DimWeldBeadWeldTypeConstants WeldBeadWeldType;
    __declspec(property(get=GetWeldBeadWeldStandard))
    enum DimWeldBeadWeldStandardConstants WeldBeadWeldStandard;
    __declspec(property(get=GetWeldBeadWeldImport))
    enum DimWeldBeadWeldImportConstants WeldBeadWeldImport;
    __declspec(property(get=GetTopTypeCompound))
    enum TGFrameworkSupport::DimWeldTypeConstants TopTypeCompound;
    __declspec(property(get=GetBottomTypeCompound))
    enum TGFrameworkSupport::DimWeldTypeConstants BottomTypeCompound;
    __declspec(property(get=GetWeldInFieldFlagDirection))
    enum TGFrameworkSupport::WeldSymbolFlagDirectionConstants WeldInFieldFlagDirection;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    _bstr_t GetBottomNote1 ( );
    _bstr_t GetBottomNote2 ( );
    _bstr_t GetBottomNote3 ( );
    _bstr_t GetBottomNoteZ ( );
    enum TGFrameworkSupport::DimWeldTreatmentTypeConstants GetBottomTreatmentType ( );
    enum TGFrameworkSupport::DimWeldTypeConstants GetBottomType ( );
    enum TGFrameworkSupport::DimWeldTypeConstants GetCenterType ( );
    double GetCrossSectionArea ( );
    enum TGFrameworkSupport::DimWeldDashLineTypeConstants GetDashLine ( );
    double GetLength ( );
    VARIANT_BOOL GetOffsetTopBottom ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetSymmetrical ( );
    enum TGFrameworkSupport::DimWeldTailTypeConstants GetTail ( );
    _bstr_t GetTailNote ( );
    _bstr_t GetTailNote2 ( );
    _bstr_t GetTopNote1 ( );
    _bstr_t GetTopNote2 ( );
    _bstr_t GetTopNote3 ( );
    _bstr_t GetTopNoteZ ( );
    enum TGFrameworkSupport::DimWeldTreatmentTypeConstants GetTopTreatmentType ( );
    enum TGFrameworkSupport::DimWeldTypeConstants GetTopType ( );
    VARIANT_BOOL GetWeldAllAround ( );
    VARIANT_BOOL GetWeldInField ( );
    VARIANT_BOOL GetZSymbol ( );
    enum DimWeldLabelImportConstants GetWeldLabelImport ( );
    enum DimWeldBeadWeldmentTypeConstants GetWeldBeadWeldmentType ( );
    enum DimWeldBeadWeldmentShapeConstants GetWeldBeadWeldmentShape ( );
    enum DimWeldBeadWeldTypeConstants GetWeldBeadWeldType ( );
    enum DimWeldBeadWeldStandardConstants GetWeldBeadWeldStandard ( );
    enum DimWeldBeadWeldImportConstants GetWeldBeadWeldImport ( );
    enum TGFrameworkSupport::DimWeldTypeConstants GetTopTypeCompound ( );
    enum TGFrameworkSupport::DimWeldTypeConstants GetBottomTypeCompound ( );
    _bstr_t GetTopNoteCSize ( );
    _bstr_t GetBottomNoteCSize ( );
    _bstr_t GetTopNoteAngle ( );
    _bstr_t GetBottomNoteAngle ( );
    _bstr_t GetTopNoteDepth ( );
    _bstr_t GetBottomNoteDepth ( );
    int GetTopPosOffset ( );
    int GetBottomPosOffset ( );
    enum TGFrameworkSupport::WeldSymbolFlagDirectionConstants GetWeldInFieldFlagDirection ( );
};

struct __declspec(uuid("128dad09-94a6-11d4-a517-0004ac9695cb"))
_IModelWeldsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    ModelWeldPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * ppApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * ppParent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pCount ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct ModelWeld * * ppItem ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pUnknown ) = 0;
};

enum DimWeldLabelImportConstants
{
    igDimWeldLabelImportUnknown = 0,
    igDimWeldLabelLocal = 1,
    igDimWeldLabelImported = 2
};

enum DimWeldBeadWeldmentTypeConstants
{
    igDimWeldBeadWeldmentTypeUnknown = 0,
    igDimWeldBeadWeldmentTypeFillet = 1,
    igDimWeldBeadWeldmentTypeFill = 2,
    igDimWeldBeadWeldmentTypeLabel = 3
};

enum DimWeldBeadWeldmentShapeConstants
{
    igDimWeldBeadWeldmentShapeUnknown = 0,
    igDimWeldBeadWeldmentShapeFill = 1,
    igDimWeldBeadWeldmentShapeConcave = 2,
    igDimWeldBeadWeldmentShapeConvex = 3
};

enum DimWeldBeadWeldTypeConstants
{
    igDimWeldBeadWeldTypeUnknown = 0,
    igDimWeldBeadWeldTypeContinuous = 1,
    igDimWeldBeadWeldTypeStitch = 2
};

enum DimWeldBeadWeldStandardConstants
{
    igDimWeldBeadWeldStandardUnknown = 0,
    igDimWeldBeadWeldStandardANSI = 1,
    igDimWeldBeadWeldStandardISO = 2,
    igDimWeldBeadWeldStandardDIN = 3
};

enum DimWeldBeadWeldImportConstants
{
    igDimWeldBeadWeldImportUnknown = 0,
    igDimWeldBeadWeldImportLocal = 1,
    igDimWeldBeadWeldImportImported = 2
};

struct __declspec(uuid("128dad08-94a6-11d4-a517-0004ac9695cb"))
_IModelWeldAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetBottomNote1))
    _bstr_t BottomNote1;
    __declspec(property(get=GetBottomNote2))
    _bstr_t BottomNote2;
    __declspec(property(get=GetBottomNote3))
    _bstr_t BottomNote3;
    __declspec(property(get=GetBottomNoteZ))
    _bstr_t BottomNoteZ;
    __declspec(property(get=GetBottomTreatmentType))
    enum TGFrameworkSupport::DimWeldTreatmentTypeConstants BottomTreatmentType;
    __declspec(property(get=GetBottomType))
    enum TGFrameworkSupport::DimWeldTypeConstants BottomType;
    __declspec(property(get=GetCenterType))
    enum TGFrameworkSupport::DimWeldTypeConstants CenterType;
    __declspec(property(get=GetCrossSectionArea))
    double CrossSectionArea;
    __declspec(property(get=GetDashLine))
    enum TGFrameworkSupport::DimWeldDashLineTypeConstants DashLine;
    __declspec(property(get=GetLength))
    double Length;
    __declspec(property(get=GetOffsetTopBottom))
    VARIANT_BOOL OffsetTopBottom;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetSymmetrical))
    VARIANT_BOOL Symmetrical;
    __declspec(property(get=GetTail))
    enum TGFrameworkSupport::DimWeldTailTypeConstants Tail;
    __declspec(property(get=GetTailNote))
    _bstr_t TailNote;
    __declspec(property(get=GetTailNote2))
    _bstr_t TailNote2;
    __declspec(property(get=GetTopNote1))
    _bstr_t TopNote1;
    __declspec(property(get=GetTopNote2))
    _bstr_t TopNote2;
    __declspec(property(get=GetTopNote3))
    _bstr_t TopNote3;
    __declspec(property(get=GetTopNoteZ))
    _bstr_t TopNoteZ;
    __declspec(property(get=GetTopTreatmentType))
    enum TGFrameworkSupport::DimWeldTreatmentTypeConstants TopTreatmentType;
    __declspec(property(get=GetTopType))
    enum TGFrameworkSupport::DimWeldTypeConstants TopType;
    __declspec(property(get=GetWeldAllAround))
    VARIANT_BOOL WeldAllAround;
    __declspec(property(get=GetWeldInField))
    VARIANT_BOOL WeldInField;
    __declspec(property(get=GetZSymbol))
    VARIANT_BOOL ZSymbol;
    __declspec(property(get=GetWeldLabelImport))
    enum DimWeldLabelImportConstants WeldLabelImport;
    __declspec(property(get=GetTopNoteCSize))
    _bstr_t TopNoteCSize;
    __declspec(property(get=GetBottomNoteCSize))
    _bstr_t BottomNoteCSize;
    __declspec(property(get=GetTopNoteAngle))
    _bstr_t TopNoteAngle;
    __declspec(property(get=GetBottomNoteAngle))
    _bstr_t BottomNoteAngle;
    __declspec(property(get=GetTopNoteDepth))
    _bstr_t TopNoteDepth;
    __declspec(property(get=GetBottomNoteDepth))
    _bstr_t BottomNoteDepth;
    __declspec(property(get=GetTopPosOffset))
    int TopPosOffset;
    __declspec(property(get=GetBottomPosOffset))
    int BottomPosOffset;
    __declspec(property(get=GetWeldBeadWeldmentType))
    enum DimWeldBeadWeldmentTypeConstants WeldBeadWeldmentType;
    __declspec(property(get=GetWeldBeadWeldmentShape))
    enum DimWeldBeadWeldmentShapeConstants WeldBeadWeldmentShape;
    __declspec(property(get=GetWeldBeadWeldType))
    enum DimWeldBeadWeldTypeConstants WeldBeadWeldType;
    __declspec(property(get=GetWeldBeadWeldStandard))
    enum DimWeldBeadWeldStandardConstants WeldBeadWeldStandard;
    __declspec(property(get=GetWeldBeadWeldImport))
    enum DimWeldBeadWeldImportConstants WeldBeadWeldImport;
    __declspec(property(get=GetTopTypeCompound))
    enum TGFrameworkSupport::DimWeldTypeConstants TopTypeCompound;
    __declspec(property(get=GetBottomTypeCompound))
    enum TGFrameworkSupport::DimWeldTypeConstants BottomTypeCompound;
    __declspec(property(get=GetWeldInFieldFlagDirection))
    enum TGFrameworkSupport::WeldSymbolFlagDirectionConstants WeldInFieldFlagDirection;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    _bstr_t GetBottomNote1 ( );
    _bstr_t GetBottomNote2 ( );
    _bstr_t GetBottomNote3 ( );
    _bstr_t GetBottomNoteZ ( );
    enum TGFrameworkSupport::DimWeldTreatmentTypeConstants GetBottomTreatmentType ( );
    enum TGFrameworkSupport::DimWeldTypeConstants GetBottomType ( );
    enum TGFrameworkSupport::DimWeldTypeConstants GetCenterType ( );
    double GetCrossSectionArea ( );
    enum TGFrameworkSupport::DimWeldDashLineTypeConstants GetDashLine ( );
    double GetLength ( );
    VARIANT_BOOL GetOffsetTopBottom ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetSymmetrical ( );
    enum TGFrameworkSupport::DimWeldTailTypeConstants GetTail ( );
    _bstr_t GetTailNote ( );
    _bstr_t GetTailNote2 ( );
    _bstr_t GetTopNote1 ( );
    _bstr_t GetTopNote2 ( );
    _bstr_t GetTopNote3 ( );
    _bstr_t GetTopNoteZ ( );
    enum TGFrameworkSupport::DimWeldTreatmentTypeConstants GetTopTreatmentType ( );
    enum TGFrameworkSupport::DimWeldTypeConstants GetTopType ( );
    VARIANT_BOOL GetWeldAllAround ( );
    VARIANT_BOOL GetWeldInField ( );
    VARIANT_BOOL GetZSymbol ( );
    enum DimWeldLabelImportConstants GetWeldLabelImport ( );
    enum DimWeldBeadWeldmentTypeConstants GetWeldBeadWeldmentType ( );
    enum DimWeldBeadWeldmentShapeConstants GetWeldBeadWeldmentShape ( );
    enum DimWeldBeadWeldTypeConstants GetWeldBeadWeldType ( );
    enum DimWeldBeadWeldStandardConstants GetWeldBeadWeldStandard ( );
    enum DimWeldBeadWeldImportConstants GetWeldBeadWeldImport ( );
    enum TGFrameworkSupport::DimWeldTypeConstants GetTopTypeCompound ( );
    enum TGFrameworkSupport::DimWeldTypeConstants GetBottomTypeCompound ( );
    _bstr_t GetTopNoteCSize ( );
    _bstr_t GetBottomNoteCSize ( );
    _bstr_t GetTopNoteAngle ( );
    _bstr_t GetBottomNoteAngle ( );
    _bstr_t GetTopNoteDepth ( );
    _bstr_t GetBottomNoteDepth ( );
    int GetTopPosOffset ( );
    int GetBottomPosOffset ( );
    enum TGFrameworkSupport::WeldSymbolFlagDirectionConstants GetWeldInFieldFlagDirection ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * ppApplication ) = 0;
      virtual HRESULT __stdcall get_BottomNote1 (
        /*[out,retval]*/ BSTR * pBottomNote1 ) = 0;
      virtual HRESULT __stdcall get_BottomNote2 (
        /*[out,retval]*/ BSTR * pBottomNote2 ) = 0;
      virtual HRESULT __stdcall get_BottomNote3 (
        /*[out,retval]*/ BSTR * pBottomNote3 ) = 0;
      virtual HRESULT __stdcall get_BottomNoteZ (
        /*[out,retval]*/ BSTR * pBottomNoteZ ) = 0;
      virtual HRESULT __stdcall get_BottomTreatmentType (
        /*[out,retval]*/ enum TGFrameworkSupport::DimWeldTreatmentTypeConstants * pType ) = 0;
      virtual HRESULT __stdcall get_BottomType (
        /*[out,retval]*/ enum TGFrameworkSupport::DimWeldTypeConstants * pType ) = 0;
      virtual HRESULT __stdcall get_CenterType (
        /*[out,retval]*/ enum TGFrameworkSupport::DimWeldTypeConstants * pType ) = 0;
      virtual HRESULT __stdcall get_CrossSectionArea (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_DashLine (
        /*[out,retval]*/ enum TGFrameworkSupport::DimWeldDashLineTypeConstants * pVal ) = 0;
      virtual HRESULT __stdcall get_Length (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_OffsetTopBottom (
        /*[out,retval]*/ VARIANT_BOOL * pFlag ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * ppParent ) = 0;
      virtual HRESULT __stdcall get_Symmetrical (
        /*[out,retval]*/ VARIANT_BOOL * pFlag ) = 0;
      virtual HRESULT __stdcall get_Tail (
        /*[out,retval]*/ enum TGFrameworkSupport::DimWeldTailTypeConstants * pVal ) = 0;
      virtual HRESULT __stdcall get_TailNote (
        /*[out,retval]*/ BSTR * pTailNote ) = 0;
      virtual HRESULT __stdcall get_TailNote2 (
        /*[out,retval]*/ BSTR * pTailNote2 ) = 0;
      virtual HRESULT __stdcall get_TopNote1 (
        /*[out,retval]*/ BSTR * pTopNote1 ) = 0;
      virtual HRESULT __stdcall get_TopNote2 (
        /*[out,retval]*/ BSTR * pTopNote2 ) = 0;
      virtual HRESULT __stdcall get_TopNote3 (
        /*[out,retval]*/ BSTR * pTopNote3 ) = 0;
      virtual HRESULT __stdcall get_TopNoteZ (
        /*[out,retval]*/ BSTR * pTopNoteZ ) = 0;
      virtual HRESULT __stdcall get_TopTreatmentType (
        /*[out,retval]*/ enum TGFrameworkSupport::DimWeldTreatmentTypeConstants * pType ) = 0;
      virtual HRESULT __stdcall get_TopType (
        /*[out,retval]*/ enum TGFrameworkSupport::DimWeldTypeConstants * pType ) = 0;
      virtual HRESULT __stdcall get_WeldAllAround (
        /*[out,retval]*/ VARIANT_BOOL * pFlag ) = 0;
      virtual HRESULT __stdcall get_WeldInField (
        /*[out,retval]*/ VARIANT_BOOL * pFlag ) = 0;
      virtual HRESULT __stdcall get_ZSymbol (
        /*[out,retval]*/ VARIANT_BOOL * pFlag ) = 0;
      virtual HRESULT __stdcall get_WeldLabelImport (
        /*[out,retval]*/ enum DimWeldLabelImportConstants * pType ) = 0;
      virtual HRESULT __stdcall get_WeldBeadWeldmentType (
        /*[out,retval]*/ enum DimWeldBeadWeldmentTypeConstants * pType ) = 0;
      virtual HRESULT __stdcall get_WeldBeadWeldmentShape (
        /*[out,retval]*/ enum DimWeldBeadWeldmentShapeConstants * pShape ) = 0;
      virtual HRESULT __stdcall get_WeldBeadWeldType (
        /*[out,retval]*/ enum DimWeldBeadWeldTypeConstants * pType ) = 0;
      virtual HRESULT __stdcall get_WeldBeadWeldStandard (
        /*[out,retval]*/ enum DimWeldBeadWeldStandardConstants * pStandard ) = 0;
      virtual HRESULT __stdcall get_WeldBeadWeldImport (
        /*[out,retval]*/ enum DimWeldBeadWeldImportConstants * pImport ) = 0;
      virtual HRESULT __stdcall get_TopTypeCompound (
        /*[out,retval]*/ enum TGFrameworkSupport::DimWeldTypeConstants * pType ) = 0;
      virtual HRESULT __stdcall get_BottomTypeCompound (
        /*[out,retval]*/ enum TGFrameworkSupport::DimWeldTypeConstants * pType ) = 0;
      virtual HRESULT __stdcall get_TopNoteCSize (
        /*[out,retval]*/ BSTR * text ) = 0;
      virtual HRESULT __stdcall get_BottomNoteCSize (
        /*[out,retval]*/ BSTR * text ) = 0;
      virtual HRESULT __stdcall get_TopNoteAngle (
        /*[out,retval]*/ BSTR * text ) = 0;
      virtual HRESULT __stdcall get_BottomNoteAngle (
        /*[out,retval]*/ BSTR * text ) = 0;
      virtual HRESULT __stdcall get_TopNoteDepth (
        /*[out,retval]*/ BSTR * text ) = 0;
      virtual HRESULT __stdcall get_BottomNoteDepth (
        /*[out,retval]*/ BSTR * text ) = 0;
      virtual HRESULT __stdcall get_TopPosOffset (
        /*[out,retval]*/ int * offset ) = 0;
      virtual HRESULT __stdcall get_BottomPosOffset (
        /*[out,retval]*/ int * offset ) = 0;
      virtual HRESULT __stdcall get_WeldInFieldFlagDirection (
        /*[out,retval]*/ enum TGFrameworkSupport::WeldSymbolFlagDirectionConstants * pFSValue ) = 0;
};

struct __declspec(uuid("bbbeb3dc-30e9-11d4-ab5d-00c04f72e275"))
DVArcs2d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    DVArc2dPtr Item (
        const _variant_t & Index );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
};

struct __declspec(uuid("325840ec-3024-11d4-ab5c-00c04f72e275"))
DVArc2d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetKey))
    _bstr_t Key[];
    __declspec(property(get=GetDocument))
    IDispatchPtr Document;
    __declspec(property(get=GetRelationships))
    TGFrameworkSupport::Relationships2dPtr Relationships;
    __declspec(property(get=GetBendAngle))
    double BendAngle;
    __declspec(property(get=GetBendRadius))
    double BendRadius;
    __declspec(property(get=GetDrawingView))
    DrawingViewPtr DrawingView;
    __declspec(property(get=GetModelMember))
    ModelMemberPtr ModelMember;
    __declspec(property(get=GetEdgeType))
    enum GraphicMemberEdgeTypeConstants EdgeType;
    __declspec(property(get=GetReference))
    TGFramework::ReferencePtr Reference;
    __declspec(property(get=GetShowHideEdgeOverride,put=PutShowHideEdgeOverride))
    DVShowHideEdgeOverrideType ShowHideEdgeOverride[];
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];
    __declspec(property(get=GetModelWelds))
    ModelWeldsPtr ModelWelds;
    __declspec(property(get=GetRadius))
    double Radius;
    __declspec(property(get=GetStartAngle))
    double StartAngle;
    __declspec(property(get=GetSweepAngle))
    double SweepAngle;
    __declspec(property(get=GetOrientation))
    enum TGFrameworkSupport::Geom2dOrientationConstants Orientation;
    __declspec(property(get=GetKeyPointCount))
    long KeyPointCount;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetSegmentedStyleCount))
    long SegmentedStyleCount;
    __declspec(property(get=GetName))
    _bstr_t Name[];
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFrameworkSupport::Relationships2dPtr GetRelationships ( );
    TGFramework::ApplicationPtr GetApplication ( );
    _bstr_t GetName (
        const _variant_t & Recurse );
    DrawingViewPtr GetDrawingView ( );
    ModelMemberPtr GetModelMember ( );
    enum GraphicMemberEdgeTypeConstants GetEdgeType ( );
    TGFramework::ReferencePtr GetReference ( );
    HRESULT GetReferenceKey (
        BSTR * FullName,
        SAFEARRAY * * ReferenceKey,
        long * KeySize );
    DVShowHideEdgeOverrideType GetShowHideEdgeOverride (
        const _variant_t & segmentIndex = vtMissing );
    void PutShowHideEdgeOverride (
        const _variant_t & segmentIndex,
        DVShowHideEdgeOverrideType _arg2 );
    enum TGFramework::ObjectType GetType ( );
    _bstr_t GetKey (
        const _variant_t & Recurse = vtMissing );
    IDispatchPtr GetDocument ( );
    HRESULT Range (
        double * XMinimum,
        double * YMinimum,
        double * XMaximum,
        double * YMaximum );
    double GetRadius ( );
    double GetStartAngle ( );
    double GetSweepAngle ( );
    enum TGFrameworkSupport::Geom2dOrientationConstants GetOrientation ( );
    HRESULT GetStartPoint (
        double * x,
        double * y );
    HRESULT GetEndPoint (
        double * x,
        double * y );
    HRESULT GetCenterPoint (
        double * x,
        double * y );
    HRESULT GetMajorAxis (
        double * x,
        double * y );
    long GetKeyPointCount ( );
    HRESULT GetKeyPoint (
        long Index,
        double * x,
        double * y,
        double * z,
        enum TGFramework::KeyPointType * KeypointType,
        long * HandleType );
    long GetSegmentedStyleCount ( );
    HRESULT GetSegmentedStyle (
        long Index,
        double * x1,
        double * y1,
        double * x2,
        double * y2,
        IDispatch * * style );
    ModelWeldsPtr GetModelWelds ( );
    double GetBendAngle ( );
    double GetBendRadius ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
};

struct __declspec(uuid("3888f644-30ad-11d4-ab5d-00c04f72e275"))
_IDVArcs2dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    DVArc2dPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct DVArc2d * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Enum ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * App ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
};

struct __declspec(uuid("9476c272-3000-11d4-ab5c-00c04f72e275"))
_IDVArc2dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetKey))
    _bstr_t Key[];
    __declspec(property(get=GetDocument))
    IDispatchPtr Document;
    __declspec(property(get=GetRelationships))
    TGFrameworkSupport::Relationships2dPtr Relationships;
    __declspec(property(get=GetBendAngle))
    double BendAngle;
    __declspec(property(get=GetBendRadius))
    double BendRadius;
    __declspec(property(get=GetDrawingView))
    DrawingViewPtr DrawingView;
    __declspec(property(get=GetModelMember))
    ModelMemberPtr ModelMember;
    __declspec(property(get=GetEdgeType))
    enum GraphicMemberEdgeTypeConstants EdgeType;
    __declspec(property(get=GetReference))
    TGFramework::ReferencePtr Reference;
    __declspec(property(get=GetShowHideEdgeOverride,put=PutShowHideEdgeOverride))
    DVShowHideEdgeOverrideType ShowHideEdgeOverride[];
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];
    __declspec(property(get=GetModelWelds))
    ModelWeldsPtr ModelWelds;
    __declspec(property(get=GetRadius))
    double Radius;
    __declspec(property(get=GetStartAngle))
    double StartAngle;
    __declspec(property(get=GetSweepAngle))
    double SweepAngle;
    __declspec(property(get=GetOrientation))
    enum TGFrameworkSupport::Geom2dOrientationConstants Orientation;
    __declspec(property(get=GetKeyPointCount))
    long KeyPointCount;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetSegmentedStyleCount))
    long SegmentedStyleCount;
    __declspec(property(get=GetName))
    _bstr_t Name[][];
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;

    //
    // Wrapper methods for error-handling
    //

    TGFrameworkSupport::Relationships2dPtr GetRelationships ( );
    TGFramework::ApplicationPtr GetApplication ( );
    _bstr_t GetName (
        const _variant_t & Recurse,
        long Lcid = 0 );
    DrawingViewPtr GetDrawingView ( );
    ModelMemberPtr GetModelMember ( );
    enum GraphicMemberEdgeTypeConstants GetEdgeType ( );
    TGFramework::ReferencePtr GetReference ( );
    HRESULT GetReferenceKey (
        BSTR * FullName,
        SAFEARRAY * * ReferenceKey,
        long * KeySize );
    DVShowHideEdgeOverrideType GetShowHideEdgeOverride (
        const _variant_t & segmentIndex = vtMissing );
    void PutShowHideEdgeOverride (
        const _variant_t & segmentIndex,
        DVShowHideEdgeOverrideType overrideType );
    enum TGFramework::ObjectType GetType ( );
    _bstr_t GetKey (
        const _variant_t & Recurse = vtMissing );
    IDispatchPtr GetDocument ( );
    HRESULT Range (
        double * XMinimum,
        double * YMinimum,
        double * XMaximum,
        double * YMaximum );
    double GetRadius ( );
    double GetStartAngle ( );
    double GetSweepAngle ( );
    enum TGFrameworkSupport::Geom2dOrientationConstants GetOrientation ( );
    HRESULT GetStartPoint (
        double * x,
        double * y );
    HRESULT GetEndPoint (
        double * x,
        double * y );
    HRESULT GetCenterPoint (
        double * x,
        double * y );
    HRESULT GetMajorAxis (
        double * x,
        double * y );
    long GetKeyPointCount ( );
    HRESULT GetKeyPoint (
        long Index,
        double * x,
        double * y,
        double * z,
        enum TGFramework::KeyPointType * KeypointType,
        long * HandleType );
    long GetSegmentedStyleCount ( );
    HRESULT GetSegmentedStyle (
        long Index,
        double * x1,
        double * y1,
        double * x2,
        double * y2,
        IDispatch * * style );
    ModelWeldsPtr GetModelWelds ( );
    double GetBendAngle ( );
    double GetBendRadius ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Relationships (
        /*[out,retval]*/ struct TGFrameworkSupport::Relationships2d * * Relationships2d ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[in]*/ VARIANT Recurse,
        /*[in,lcid]*/ long Lcid,
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_DrawingView (
        /*[out,retval]*/ struct DrawingView * * Parent ) = 0;
      virtual HRESULT __stdcall get_ModelMember (
        /*[out,retval]*/ struct ModelMember * * ModelMember ) = 0;
      virtual HRESULT __stdcall get_EdgeType (
        /*[out,retval]*/ enum GraphicMemberEdgeTypeConstants * EdgeType ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct TGFramework::Reference * * Reference ) = 0;
      virtual HRESULT __stdcall raw_GetReferenceKey (
        /*[out]*/ BSTR * FullName,
        /*[out]*/ SAFEARRAY * * ReferenceKey,
        /*[out]*/ long * KeySize ) = 0;
      virtual HRESULT __stdcall get_ShowHideEdgeOverride (
        /*[in]*/ VARIANT segmentIndex,
        /*[out,retval]*/ DVShowHideEdgeOverrideType * overrideType ) = 0;
      virtual HRESULT __stdcall put_ShowHideEdgeOverride (
        /*[in]*/ VARIANT segmentIndex,
        /*[in]*/ DVShowHideEdgeOverrideType overrideType ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall get_Key (
        /*[in]*/ VARIANT Recurse,
        /*[out,retval]*/ BSTR * Key ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ IDispatch * * Document ) = 0;
      virtual HRESULT __stdcall raw_Range (
        /*[out]*/ double * XMinimum,
        /*[out]*/ double * YMinimum,
        /*[out]*/ double * XMaximum,
        /*[out]*/ double * YMaximum ) = 0;
      virtual HRESULT __stdcall get_Radius (
        /*[out,retval]*/ double * Radius ) = 0;
      virtual HRESULT __stdcall get_StartAngle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall get_SweepAngle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ enum TGFrameworkSupport::Geom2dOrientationConstants * Orientation ) = 0;
      virtual HRESULT __stdcall raw_GetStartPoint (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall raw_GetEndPoint (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall raw_GetCenterPoint (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall raw_GetMajorAxis (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall get_KeyPointCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_GetKeyPoint (
        /*[in]*/ long Index,
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z,
        /*[out]*/ enum TGFramework::KeyPointType * KeypointType,
        /*[out]*/ long * HandleType ) = 0;
      virtual HRESULT __stdcall get_SegmentedStyleCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_GetSegmentedStyle (
        /*[in]*/ long Index,
        /*[out]*/ double * x1,
        /*[out]*/ double * y1,
        /*[out]*/ double * x2,
        /*[out]*/ double * y2,
        /*[out]*/ IDispatch * * style ) = 0;
      virtual HRESULT __stdcall get_ModelWelds (
        /*[out,retval]*/ struct ModelWelds * * ModelWelds ) = 0;
      virtual HRESULT __stdcall get_BendAngle (
        /*[out,retval]*/ double * BendAngle ) = 0;
      virtual HRESULT __stdcall get_BendRadius (
        /*[out,retval]*/ double * BendRadius ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
};

struct __declspec(uuid("da3ee93a-30e9-11d4-ab5d-00c04f72e275"))
DVBSplineCurves2d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    DVBSplineCurve2dPtr Item (
        const _variant_t & Index );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
};

struct __declspec(uuid("7a0e7bf4-3024-11d4-ab5c-00c04f72e275"))
DVBSplineCurve2d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetKey))
    _bstr_t Key[];
    __declspec(property(get=GetDocument))
    IDispatchPtr Document;
    __declspec(property(get=GetRelationships))
    TGFrameworkSupport::Relationships2dPtr Relationships;
    __declspec(property(get=GetBendAngle))
    double BendAngle;
    __declspec(property(get=GetBendRadius))
    double BendRadius;
    __declspec(property(get=GetDrawingView))
    DrawingViewPtr DrawingView;
    __declspec(property(get=GetModelMember))
    ModelMemberPtr ModelMember;
    __declspec(property(get=GetEdgeType))
    enum GraphicMemberEdgeTypeConstants EdgeType;
    __declspec(property(get=GetReference))
    TGFramework::ReferencePtr Reference;
    __declspec(property(get=GetShowHideEdgeOverride,put=PutShowHideEdgeOverride))
    DVShowHideEdgeOverrideType ShowHideEdgeOverride[];
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];
    __declspec(property(get=GetModelWelds))
    ModelWeldsPtr ModelWelds;
    __declspec(property(get=GetOrder))
    long Order;
    __declspec(property(get=GetLength))
    double Length;
    __declspec(property(get=GetForm))
    enum TGFrameworkSupport::Geom2dFormConstants Form;
    __declspec(property(get=GetScope))
    enum TGFrameworkSupport::Geom2dScopeConstants Scope;
    __declspec(property(get=GetPoleCount))
    long PoleCount;
    __declspec(property(get=GetNodeCount))
    long NodeCount;
    __declspec(property(get=GetArea))
    double Area;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetKeyPointCount))
    long KeyPointCount;
    __declspec(property(get=GetName))
    _bstr_t Name[];
    __declspec(property(get=GetSegmentedStyleCount))
    long SegmentedStyleCount;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFrameworkSupport::Relationships2dPtr GetRelationships ( );
    TGFramework::ApplicationPtr GetApplication ( );
    _bstr_t GetName (
        const _variant_t & Recurse );
    DrawingViewPtr GetDrawingView ( );
    ModelMemberPtr GetModelMember ( );
    enum GraphicMemberEdgeTypeConstants GetEdgeType ( );
    TGFramework::ReferencePtr GetReference ( );
    HRESULT GetReferenceKey (
        BSTR * FullName,
        SAFEARRAY * * ReferenceKey,
        long * KeySize );
    DVShowHideEdgeOverrideType GetShowHideEdgeOverride (
        const _variant_t & segmentIndex = vtMissing );
    void PutShowHideEdgeOverride (
        const _variant_t & segmentIndex,
        DVShowHideEdgeOverrideType _arg2 );
    enum TGFramework::ObjectType GetType ( );
    _bstr_t GetKey (
        const _variant_t & Recurse = vtMissing );
    IDispatchPtr GetDocument ( );
    HRESULT Range (
        double * XMinimum,
        double * YMinimum,
        double * XMaximum,
        double * YMaximum );
    long GetOrder ( );
    double GetLength ( );
    enum TGFrameworkSupport::Geom2dFormConstants GetForm ( );
    enum TGFrameworkSupport::Geom2dScopeConstants GetScope ( );
    long GetPoleCount ( );
    long GetNodeCount ( );
    double GetArea ( );
    HRESULT GetPole (
        long Index,
        double * x,
        double * y );
    HRESULT GetNode (
        long Index,
        double * x,
        double * y );
    long GetNearestNode (
        double x,
        double y );
    HRESULT GetCentroid (
        double * x,
        double * y );
    long GetKeyPointCount ( );
    HRESULT GetKeyPoint (
        long Index,
        double * x,
        double * y,
        double * z,
        enum TGFramework::KeyPointType * KeypointType,
        long * HandleType );
    long GetSegmentedStyleCount ( );
    HRESULT GetSegmentedStyle (
        long Index,
        double * x1,
        double * y1,
        double * x2,
        double * y2,
        IDispatch * * style );
    ModelWeldsPtr GetModelWelds ( );
    double GetBendAngle ( );
    double GetBendRadius ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
};

struct __declspec(uuid("e164a272-30ad-11d4-ab5d-00c04f72e275"))
_IDVBSplineCurves2dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    DVBSplineCurve2dPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct DVBSplineCurve2d * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Enum ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * App ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
};

struct __declspec(uuid("5c6f8db0-3018-11d4-ab5c-00c04f72e275"))
_IDVBSplineCurve2dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetKey))
    _bstr_t Key[];
    __declspec(property(get=GetDocument))
    IDispatchPtr Document;
    __declspec(property(get=GetRelationships))
    TGFrameworkSupport::Relationships2dPtr Relationships;
    __declspec(property(get=GetBendAngle))
    double BendAngle;
    __declspec(property(get=GetBendRadius))
    double BendRadius;
    __declspec(property(get=GetDrawingView))
    DrawingViewPtr DrawingView;
    __declspec(property(get=GetModelMember))
    ModelMemberPtr ModelMember;
    __declspec(property(get=GetEdgeType))
    enum GraphicMemberEdgeTypeConstants EdgeType;
    __declspec(property(get=GetReference))
    TGFramework::ReferencePtr Reference;
    __declspec(property(get=GetShowHideEdgeOverride,put=PutShowHideEdgeOverride))
    DVShowHideEdgeOverrideType ShowHideEdgeOverride[];
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];
    __declspec(property(get=GetModelWelds))
    ModelWeldsPtr ModelWelds;
    __declspec(property(get=GetOrder))
    long Order;
    __declspec(property(get=GetLength))
    double Length;
    __declspec(property(get=GetForm))
    enum TGFrameworkSupport::Geom2dFormConstants Form;
    __declspec(property(get=GetScope))
    enum TGFrameworkSupport::Geom2dScopeConstants Scope;
    __declspec(property(get=GetPoleCount))
    long PoleCount;
    __declspec(property(get=GetNodeCount))
    long NodeCount;
    __declspec(property(get=GetArea))
    double Area;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetKeyPointCount))
    long KeyPointCount;
    __declspec(property(get=GetName))
    _bstr_t Name[][];
    __declspec(property(get=GetSegmentedStyleCount))
    long SegmentedStyleCount;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;

    //
    // Wrapper methods for error-handling
    //

    TGFrameworkSupport::Relationships2dPtr GetRelationships ( );
    TGFramework::ApplicationPtr GetApplication ( );
    _bstr_t GetName (
        const _variant_t & Recurse,
        long Lcid = 0 );
    DrawingViewPtr GetDrawingView ( );
    ModelMemberPtr GetModelMember ( );
    enum GraphicMemberEdgeTypeConstants GetEdgeType ( );
    TGFramework::ReferencePtr GetReference ( );
    HRESULT GetReferenceKey (
        BSTR * FullName,
        SAFEARRAY * * ReferenceKey,
        long * KeySize );
    DVShowHideEdgeOverrideType GetShowHideEdgeOverride (
        const _variant_t & segmentIndex = vtMissing );
    void PutShowHideEdgeOverride (
        const _variant_t & segmentIndex,
        DVShowHideEdgeOverrideType overrideType );
    enum TGFramework::ObjectType GetType ( );
    _bstr_t GetKey (
        const _variant_t & Recurse = vtMissing );
    IDispatchPtr GetDocument ( );
    HRESULT Range (
        double * XMinimum,
        double * YMinimum,
        double * XMaximum,
        double * YMaximum );
    long GetOrder ( );
    double GetLength ( );
    enum TGFrameworkSupport::Geom2dFormConstants GetForm ( );
    enum TGFrameworkSupport::Geom2dScopeConstants GetScope ( );
    long GetPoleCount ( );
    long GetNodeCount ( );
    double GetArea ( );
    HRESULT GetPole (
        long Index,
        double * x,
        double * y );
    HRESULT GetNode (
        long Index,
        double * x,
        double * y );
    long GetNearestNode (
        double x,
        double y );
    HRESULT GetCentroid (
        double * x,
        double * y );
    long GetKeyPointCount ( );
    HRESULT GetKeyPoint (
        long Index,
        double * x,
        double * y,
        double * z,
        enum TGFramework::KeyPointType * KeypointType,
        long * HandleType );
    long GetSegmentedStyleCount ( );
    HRESULT GetSegmentedStyle (
        long Index,
        double * x1,
        double * y1,
        double * x2,
        double * y2,
        IDispatch * * style );
    ModelWeldsPtr GetModelWelds ( );
    double GetBendAngle ( );
    double GetBendRadius ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Relationships (
        /*[out,retval]*/ struct TGFrameworkSupport::Relationships2d * * Relationships2d ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[in]*/ VARIANT Recurse,
        /*[in,lcid]*/ long Lcid,
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_DrawingView (
        /*[out,retval]*/ struct DrawingView * * DrawingView ) = 0;
      virtual HRESULT __stdcall get_ModelMember (
        /*[out,retval]*/ struct ModelMember * * ModelMember ) = 0;
      virtual HRESULT __stdcall get_EdgeType (
        /*[out,retval]*/ enum GraphicMemberEdgeTypeConstants * EdgeType ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct TGFramework::Reference * * Reference ) = 0;
      virtual HRESULT __stdcall raw_GetReferenceKey (
        /*[out]*/ BSTR * FullName,
        /*[out]*/ SAFEARRAY * * ReferenceKey,
        /*[out]*/ long * KeySize ) = 0;
      virtual HRESULT __stdcall get_ShowHideEdgeOverride (
        /*[in]*/ VARIANT segmentIndex,
        /*[out,retval]*/ DVShowHideEdgeOverrideType * overrideType ) = 0;
      virtual HRESULT __stdcall put_ShowHideEdgeOverride (
        /*[in]*/ VARIANT segmentIndex,
        /*[in]*/ DVShowHideEdgeOverrideType overrideType ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall get_Key (
        /*[in]*/ VARIANT Recurse,
        /*[out,retval]*/ BSTR * Key ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ IDispatch * * Document ) = 0;
      virtual HRESULT __stdcall raw_Range (
        /*[out]*/ double * XMinimum,
        /*[out]*/ double * YMinimum,
        /*[out]*/ double * XMaximum,
        /*[out]*/ double * YMaximum ) = 0;
      virtual HRESULT __stdcall get_Order (
        /*[out,retval]*/ long * Order ) = 0;
      virtual HRESULT __stdcall get_Length (
        /*[out,retval]*/ double * Length ) = 0;
      virtual HRESULT __stdcall get_Form (
        /*[out,retval]*/ enum TGFrameworkSupport::Geom2dFormConstants * Form ) = 0;
      virtual HRESULT __stdcall get_Scope (
        /*[out,retval]*/ enum TGFrameworkSupport::Geom2dScopeConstants * Scope ) = 0;
      virtual HRESULT __stdcall get_PoleCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_NodeCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Area (
        /*[out,retval]*/ double * Area ) = 0;
      virtual HRESULT __stdcall raw_GetPole (
        /*[in]*/ long Index,
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall raw_GetNode (
        /*[in]*/ long Index,
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall raw_GetNearestNode (
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall raw_GetCentroid (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall get_KeyPointCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_GetKeyPoint (
        /*[in]*/ long Index,
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z,
        /*[out]*/ enum TGFramework::KeyPointType * KeypointType,
        /*[out]*/ long * HandleType ) = 0;
      virtual HRESULT __stdcall get_SegmentedStyleCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_GetSegmentedStyle (
        /*[in]*/ long Index,
        /*[out]*/ double * x1,
        /*[out]*/ double * y1,
        /*[out]*/ double * x2,
        /*[out]*/ double * y2,
        /*[out]*/ IDispatch * * style ) = 0;
      virtual HRESULT __stdcall get_ModelWelds (
        /*[out,retval]*/ struct ModelWelds * * ModelWelds ) = 0;
      virtual HRESULT __stdcall get_BendAngle (
        /*[out,retval]*/ double * BendAngle ) = 0;
      virtual HRESULT __stdcall get_BendRadius (
        /*[out,retval]*/ double * BendRadius ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
};

struct __declspec(uuid("fddc099a-30e9-11d4-ab5d-00c04f72e275"))
DVCircles2d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    DVCircle2dPtr Item (
        const _variant_t & Index );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
};

struct __declspec(uuid("91b3ee92-3024-11d4-ab5c-00c04f72e275"))
DVCircle2d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetRelationships))
    TGFrameworkSupport::Relationships2dPtr Relationships;
    __declspec(property(get=GetBendAngle))
    double BendAngle;
    __declspec(property(get=GetBendRadius))
    double BendRadius;
    __declspec(property(get=GetDrawingView))
    DrawingViewPtr DrawingView;
    __declspec(property(get=GetModelMember))
    ModelMemberPtr ModelMember;
    __declspec(property(get=GetEdgeType))
    enum GraphicMemberEdgeTypeConstants EdgeType;
    __declspec(property(get=GetReference))
    TGFramework::ReferencePtr Reference;
    __declspec(property(get=GetShowHideEdgeOverride,put=PutShowHideEdgeOverride))
    DVShowHideEdgeOverrideType ShowHideEdgeOverride[];
    __declspec(property(get=GetRadius))
    double Radius;
    __declspec(property(get=GetDiameter))
    double Diameter;
    __declspec(property(get=GetCircumference))
    double Circumference;
    __declspec(property(get=GetArea))
    double Area;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];
    __declspec(property(get=GetName))
    _bstr_t Name[];
    __declspec(property(get=GetKeyPointCount))
    long KeyPointCount;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetModelWelds))
    ModelWeldsPtr ModelWelds;
    __declspec(property(get=GetKey))
    _bstr_t Key[];
    __declspec(property(get=GetSegmentedStyleCount))
    long SegmentedStyleCount;
    __declspec(property(get=GetDocument))
    IDispatchPtr Document;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFrameworkSupport::Relationships2dPtr GetRelationships ( );
    TGFramework::ApplicationPtr GetApplication ( );
    _bstr_t GetName (
        const _variant_t & Recurse );
    DrawingViewPtr GetDrawingView ( );
    ModelMemberPtr GetModelMember ( );
    enum GraphicMemberEdgeTypeConstants GetEdgeType ( );
    TGFramework::ReferencePtr GetReference ( );
    HRESULT GetReferenceKey (
        BSTR * FullName,
        SAFEARRAY * * ReferenceKey,
        long * KeySize );
    DVShowHideEdgeOverrideType GetShowHideEdgeOverride (
        const _variant_t & segmentIndex = vtMissing );
    void PutShowHideEdgeOverride (
        const _variant_t & segmentIndex,
        DVShowHideEdgeOverrideType _arg2 );
    enum TGFramework::ObjectType GetType ( );
    _bstr_t GetKey (
        const _variant_t & Recurse = vtMissing );
    IDispatchPtr GetDocument ( );
    HRESULT Range (
        double * XMinimum,
        double * YMinimum,
        double * XMaximum,
        double * YMaximum );
    double GetRadius ( );
    double GetDiameter ( );
    double GetCircumference ( );
    double GetArea ( );
    HRESULT GetCenterPoint (
        double * x,
        double * y );
    HRESULT GetMajorAxis (
        double * x,
        double * y );
    long GetKeyPointCount ( );
    HRESULT GetKeyPoint (
        long Index,
        double * x,
        double * y,
        double * z,
        enum TGFramework::KeyPointType * KeypointType,
        long * HandleType );
    long GetSegmentedStyleCount ( );
    HRESULT GetSegmentedStyle (
        long Index,
        double * x1,
        double * y1,
        double * x2,
        double * y2,
        IDispatch * * style );
    ModelWeldsPtr GetModelWelds ( );
    double GetBendAngle ( );
    double GetBendRadius ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
};

struct __declspec(uuid("04b31538-30ae-11d4-ab5d-00c04f72e275"))
_IDVCircles2dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    DVCircle2dPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct DVCircle2d * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Enum ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * App ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
};

struct __declspec(uuid("845d8e56-301a-11d4-ab5c-00c04f72e275"))
_IDVCircle2dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetRelationships))
    TGFrameworkSupport::Relationships2dPtr Relationships;
    __declspec(property(get=GetBendAngle))
    double BendAngle;
    __declspec(property(get=GetBendRadius))
    double BendRadius;
    __declspec(property(get=GetDrawingView))
    DrawingViewPtr DrawingView;
    __declspec(property(get=GetModelMember))
    ModelMemberPtr ModelMember;
    __declspec(property(get=GetEdgeType))
    enum GraphicMemberEdgeTypeConstants EdgeType;
    __declspec(property(get=GetReference))
    TGFramework::ReferencePtr Reference;
    __declspec(property(get=GetShowHideEdgeOverride,put=PutShowHideEdgeOverride))
    DVShowHideEdgeOverrideType ShowHideEdgeOverride[];
    __declspec(property(get=GetRadius))
    double Radius;
    __declspec(property(get=GetDiameter))
    double Diameter;
    __declspec(property(get=GetCircumference))
    double Circumference;
    __declspec(property(get=GetArea))
    double Area;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];
    __declspec(property(get=GetName))
    _bstr_t Name[][];
    __declspec(property(get=GetKeyPointCount))
    long KeyPointCount;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetModelWelds))
    ModelWeldsPtr ModelWelds;
    __declspec(property(get=GetKey))
    _bstr_t Key[];
    __declspec(property(get=GetSegmentedStyleCount))
    long SegmentedStyleCount;
    __declspec(property(get=GetDocument))
    IDispatchPtr Document;

    //
    // Wrapper methods for error-handling
    //

    TGFrameworkSupport::Relationships2dPtr GetRelationships ( );
    TGFramework::ApplicationPtr GetApplication ( );
    _bstr_t GetName (
        const _variant_t & Recurse,
        long Lcid = 0 );
    DrawingViewPtr GetDrawingView ( );
    ModelMemberPtr GetModelMember ( );
    enum GraphicMemberEdgeTypeConstants GetEdgeType ( );
    TGFramework::ReferencePtr GetReference ( );
    HRESULT GetReferenceKey (
        BSTR * FullName,
        SAFEARRAY * * ReferenceKey,
        long * KeySize );
    DVShowHideEdgeOverrideType GetShowHideEdgeOverride (
        const _variant_t & segmentIndex = vtMissing );
    void PutShowHideEdgeOverride (
        const _variant_t & segmentIndex,
        DVShowHideEdgeOverrideType overrideType );
    enum TGFramework::ObjectType GetType ( );
    _bstr_t GetKey (
        const _variant_t & Recurse = vtMissing );
    IDispatchPtr GetDocument ( );
    HRESULT Range (
        double * XMinimum,
        double * YMinimum,
        double * XMaximum,
        double * YMaximum );
    double GetRadius ( );
    double GetDiameter ( );
    double GetCircumference ( );
    double GetArea ( );
    HRESULT GetCenterPoint (
        double * x,
        double * y );
    HRESULT GetMajorAxis (
        double * x,
        double * y );
    long GetKeyPointCount ( );
    HRESULT GetKeyPoint (
        long Index,
        double * x,
        double * y,
        double * z,
        enum TGFramework::KeyPointType * KeypointType,
        long * HandleType );
    long GetSegmentedStyleCount ( );
    HRESULT GetSegmentedStyle (
        long Index,
        double * x1,
        double * y1,
        double * x2,
        double * y2,
        IDispatch * * style );
    ModelWeldsPtr GetModelWelds ( );
    double GetBendAngle ( );
    double GetBendRadius ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Relationships (
        /*[out,retval]*/ struct TGFrameworkSupport::Relationships2d * * Relationships2d ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[in]*/ VARIANT Recurse,
        /*[in,lcid]*/ long Lcid,
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_DrawingView (
        /*[out,retval]*/ struct DrawingView * * DrawingView ) = 0;
      virtual HRESULT __stdcall get_ModelMember (
        /*[out,retval]*/ struct ModelMember * * ModelMember ) = 0;
      virtual HRESULT __stdcall get_EdgeType (
        /*[out,retval]*/ enum GraphicMemberEdgeTypeConstants * EdgeType ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct TGFramework::Reference * * Reference ) = 0;
      virtual HRESULT __stdcall raw_GetReferenceKey (
        /*[out]*/ BSTR * FullName,
        /*[out]*/ SAFEARRAY * * ReferenceKey,
        /*[out]*/ long * KeySize ) = 0;
      virtual HRESULT __stdcall get_ShowHideEdgeOverride (
        /*[in]*/ VARIANT segmentIndex,
        /*[out,retval]*/ DVShowHideEdgeOverrideType * overrideType ) = 0;
      virtual HRESULT __stdcall put_ShowHideEdgeOverride (
        /*[in]*/ VARIANT segmentIndex,
        /*[in]*/ DVShowHideEdgeOverrideType overrideType ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall get_Key (
        /*[in]*/ VARIANT Recurse,
        /*[out,retval]*/ BSTR * Key ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ IDispatch * * Document ) = 0;
      virtual HRESULT __stdcall raw_Range (
        /*[out]*/ double * XMinimum,
        /*[out]*/ double * YMinimum,
        /*[out]*/ double * XMaximum,
        /*[out]*/ double * YMaximum ) = 0;
      virtual HRESULT __stdcall get_Radius (
        /*[out,retval]*/ double * Radius ) = 0;
      virtual HRESULT __stdcall get_Diameter (
        /*[out,retval]*/ double * Diameter ) = 0;
      virtual HRESULT __stdcall get_Circumference (
        /*[out,retval]*/ double * Circumference ) = 0;
      virtual HRESULT __stdcall get_Area (
        /*[out,retval]*/ double * Area ) = 0;
      virtual HRESULT __stdcall raw_GetCenterPoint (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall raw_GetMajorAxis (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall get_KeyPointCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_GetKeyPoint (
        /*[in]*/ long Index,
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z,
        /*[out]*/ enum TGFramework::KeyPointType * KeypointType,
        /*[out]*/ long * HandleType ) = 0;
      virtual HRESULT __stdcall get_SegmentedStyleCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_GetSegmentedStyle (
        /*[in]*/ long Index,
        /*[out]*/ double * x1,
        /*[out]*/ double * y1,
        /*[out]*/ double * x2,
        /*[out]*/ double * y2,
        /*[out]*/ IDispatch * * style ) = 0;
      virtual HRESULT __stdcall get_ModelWelds (
        /*[out,retval]*/ struct ModelWelds * * ModelWelds ) = 0;
      virtual HRESULT __stdcall get_BendAngle (
        /*[out,retval]*/ double * BendAngle ) = 0;
      virtual HRESULT __stdcall get_BendRadius (
        /*[out,retval]*/ double * BendRadius ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
};

struct __declspec(uuid("1ca1632a-30ea-11d4-ab5d-00c04f72e275"))
DVEllipses2d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    DVEllipse2dPtr Item (
        const _variant_t & Index );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
};

struct __declspec(uuid("ba0c398a-3024-11d4-ab5c-00c04f72e275"))
DVEllipse2d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetRelationships))
    TGFrameworkSupport::Relationships2dPtr Relationships;
    __declspec(property(get=GetBendAngle))
    double BendAngle;
    __declspec(property(get=GetBendRadius))
    double BendRadius;
    __declspec(property(get=GetDrawingView))
    DrawingViewPtr DrawingView;
    __declspec(property(get=GetModelMember))
    ModelMemberPtr ModelMember;
    __declspec(property(get=GetEdgeType))
    enum GraphicMemberEdgeTypeConstants EdgeType;
    __declspec(property(get=GetReference))
    TGFramework::ReferencePtr Reference;
    __declspec(property(get=GetShowHideEdgeOverride,put=PutShowHideEdgeOverride))
    DVShowHideEdgeOverrideType ShowHideEdgeOverride[];
    __declspec(property(get=GetMajorRadius))
    double MajorRadius;
    __declspec(property(get=GetMinorRadius))
    double MinorRadius;
    __declspec(property(get=GetOrientation))
    enum TGFrameworkSupport::Geom2dOrientationConstants Orientation;
    __declspec(property(get=GetRotationAngle))
    double RotationAngle;
    __declspec(property(get=GetMinorMajorRatio))
    double MinorMajorRatio;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetCircumference))
    double Circumference;
    __declspec(property(get=GetName))
    _bstr_t Name[];
    __declspec(property(get=GetArea))
    double Area;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetKeyPointCount))
    long KeyPointCount;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetKey))
    _bstr_t Key[];
    __declspec(property(get=GetDocument))
    IDispatchPtr Document;
    __declspec(property(get=GetSegmentedStyleCount))
    long SegmentedStyleCount;
    __declspec(property(get=GetModelWelds))
    ModelWeldsPtr ModelWelds;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFrameworkSupport::Relationships2dPtr GetRelationships ( );
    TGFramework::ApplicationPtr GetApplication ( );
    _bstr_t GetName (
        const _variant_t & Recurse );
    DrawingViewPtr GetDrawingView ( );
    ModelMemberPtr GetModelMember ( );
    enum GraphicMemberEdgeTypeConstants GetEdgeType ( );
    TGFramework::ReferencePtr GetReference ( );
    HRESULT GetReferenceKey (
        BSTR * FullName,
        SAFEARRAY * * ReferenceKey,
        long * KeySize );
    DVShowHideEdgeOverrideType GetShowHideEdgeOverride (
        const _variant_t & segmentIndex = vtMissing );
    void PutShowHideEdgeOverride (
        const _variant_t & segmentIndex,
        DVShowHideEdgeOverrideType _arg2 );
    enum TGFramework::ObjectType GetType ( );
    _bstr_t GetKey (
        const _variant_t & Recurse = vtMissing );
    IDispatchPtr GetDocument ( );
    HRESULT Range (
        double * XMinimum,
        double * YMinimum,
        double * XMaximum,
        double * YMaximum );
    double GetMajorRadius ( );
    double GetMinorRadius ( );
    enum TGFrameworkSupport::Geom2dOrientationConstants GetOrientation ( );
    double GetRotationAngle ( );
    double GetMinorMajorRatio ( );
    double GetCircumference ( );
    double GetArea ( );
    HRESULT GetCenterPoint (
        double * x,
        double * y );
    HRESULT GetMajorAxis (
        double * x,
        double * y );
    HRESULT GetMinorAxis (
        double * x,
        double * y );
    long GetKeyPointCount ( );
    HRESULT GetKeyPoint (
        long Index,
        double * x,
        double * y,
        double * z,
        enum TGFramework::KeyPointType * KeypointType,
        long * HandleType );
    long GetSegmentedStyleCount ( );
    HRESULT GetSegmentedStyle (
        long Index,
        double * x1,
        double * y1,
        double * x2,
        double * y2,
        IDispatch * * style );
    ModelWeldsPtr GetModelWelds ( );
    double GetBendAngle ( );
    double GetBendRadius ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
};

struct __declspec(uuid("39a79034-30ae-11d4-ab5d-00c04f72e275"))
_IDVEllipses2dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    DVEllipse2dPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct DVEllipse2d * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Enum ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * App ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
};

struct __declspec(uuid("e66056d4-301e-11d4-ab5c-00c04f72e275"))
_IDVEllipse2dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetRelationships))
    TGFrameworkSupport::Relationships2dPtr Relationships;
    __declspec(property(get=GetBendAngle))
    double BendAngle;
    __declspec(property(get=GetBendRadius))
    double BendRadius;
    __declspec(property(get=GetDrawingView))
    DrawingViewPtr DrawingView;
    __declspec(property(get=GetModelMember))
    ModelMemberPtr ModelMember;
    __declspec(property(get=GetEdgeType))
    enum GraphicMemberEdgeTypeConstants EdgeType;
    __declspec(property(get=GetReference))
    TGFramework::ReferencePtr Reference;
    __declspec(property(get=GetShowHideEdgeOverride,put=PutShowHideEdgeOverride))
    DVShowHideEdgeOverrideType ShowHideEdgeOverride[];
    __declspec(property(get=GetMajorRadius))
    double MajorRadius;
    __declspec(property(get=GetMinorRadius))
    double MinorRadius;
    __declspec(property(get=GetOrientation))
    enum TGFrameworkSupport::Geom2dOrientationConstants Orientation;
    __declspec(property(get=GetRotationAngle))
    double RotationAngle;
    __declspec(property(get=GetMinorMajorRatio))
    double MinorMajorRatio;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetCircumference))
    double Circumference;
    __declspec(property(get=GetName))
    _bstr_t Name[][];
    __declspec(property(get=GetArea))
    double Area;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetKeyPointCount))
    long KeyPointCount;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetKey))
    _bstr_t Key[];
    __declspec(property(get=GetDocument))
    IDispatchPtr Document;
    __declspec(property(get=GetSegmentedStyleCount))
    long SegmentedStyleCount;
    __declspec(property(get=GetModelWelds))
    ModelWeldsPtr ModelWelds;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    TGFrameworkSupport::Relationships2dPtr GetRelationships ( );
    TGFramework::ApplicationPtr GetApplication ( );
    _bstr_t GetName (
        const _variant_t & Recurse,
        long Lcid = 0 );
    DrawingViewPtr GetDrawingView ( );
    ModelMemberPtr GetModelMember ( );
    enum GraphicMemberEdgeTypeConstants GetEdgeType ( );
    TGFramework::ReferencePtr GetReference ( );
    HRESULT GetReferenceKey (
        BSTR * FullName,
        SAFEARRAY * * ReferenceKey,
        long * KeySize );
    DVShowHideEdgeOverrideType GetShowHideEdgeOverride (
        const _variant_t & segmentIndex = vtMissing );
    void PutShowHideEdgeOverride (
        const _variant_t & segmentIndex,
        DVShowHideEdgeOverrideType overrideType );
    enum TGFramework::ObjectType GetType ( );
    _bstr_t GetKey (
        const _variant_t & Recurse = vtMissing );
    IDispatchPtr GetDocument ( );
    HRESULT Range (
        double * XMinimum,
        double * YMinimum,
        double * XMaximum,
        double * YMaximum );
    double GetMajorRadius ( );
    double GetMinorRadius ( );
    enum TGFrameworkSupport::Geom2dOrientationConstants GetOrientation ( );
    double GetRotationAngle ( );
    double GetMinorMajorRatio ( );
    double GetCircumference ( );
    double GetArea ( );
    HRESULT GetCenterPoint (
        double * x,
        double * y );
    HRESULT GetMajorAxis (
        double * x,
        double * y );
    HRESULT GetMinorAxis (
        double * x,
        double * y );
    long GetKeyPointCount ( );
    HRESULT GetKeyPoint (
        long Index,
        double * x,
        double * y,
        double * z,
        enum TGFramework::KeyPointType * KeypointType,
        long * HandleType );
    long GetSegmentedStyleCount ( );
    HRESULT GetSegmentedStyle (
        long Index,
        double * x1,
        double * y1,
        double * x2,
        double * y2,
        IDispatch * * style );
    ModelWeldsPtr GetModelWelds ( );
    double GetBendAngle ( );
    double GetBendRadius ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Relationships (
        /*[out,retval]*/ struct TGFrameworkSupport::Relationships2d * * Relationships2d ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[in]*/ VARIANT Recurse,
        /*[in,lcid]*/ long Lcid,
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_DrawingView (
        /*[out,retval]*/ struct DrawingView * * DrawingView ) = 0;
      virtual HRESULT __stdcall get_ModelMember (
        /*[out,retval]*/ struct ModelMember * * ModelMember ) = 0;
      virtual HRESULT __stdcall get_EdgeType (
        /*[out,retval]*/ enum GraphicMemberEdgeTypeConstants * EdgeType ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct TGFramework::Reference * * Reference ) = 0;
      virtual HRESULT __stdcall raw_GetReferenceKey (
        /*[out]*/ BSTR * FullName,
        /*[out]*/ SAFEARRAY * * ReferenceKey,
        /*[out]*/ long * KeySize ) = 0;
      virtual HRESULT __stdcall get_ShowHideEdgeOverride (
        /*[in]*/ VARIANT segmentIndex,
        /*[out,retval]*/ DVShowHideEdgeOverrideType * overrideType ) = 0;
      virtual HRESULT __stdcall put_ShowHideEdgeOverride (
        /*[in]*/ VARIANT segmentIndex,
        /*[in]*/ DVShowHideEdgeOverrideType overrideType ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall get_Key (
        /*[in]*/ VARIANT Recurse,
        /*[out,retval]*/ BSTR * Key ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ IDispatch * * Document ) = 0;
      virtual HRESULT __stdcall raw_Range (
        /*[out]*/ double * XMinimum,
        /*[out]*/ double * YMinimum,
        /*[out]*/ double * XMaximum,
        /*[out]*/ double * YMaximum ) = 0;
      virtual HRESULT __stdcall get_MajorRadius (
        /*[out,retval]*/ double * MajorRadius ) = 0;
      virtual HRESULT __stdcall get_MinorRadius (
        /*[out,retval]*/ double * MinorRadius ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ enum TGFrameworkSupport::Geom2dOrientationConstants * Orientation ) = 0;
      virtual HRESULT __stdcall get_RotationAngle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall get_MinorMajorRatio (
        /*[out,retval]*/ double * Ratio ) = 0;
      virtual HRESULT __stdcall get_Circumference (
        /*[out,retval]*/ double * Circumference ) = 0;
      virtual HRESULT __stdcall get_Area (
        /*[out,retval]*/ double * Area ) = 0;
      virtual HRESULT __stdcall raw_GetCenterPoint (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall raw_GetMajorAxis (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall raw_GetMinorAxis (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall get_KeyPointCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_GetKeyPoint (
        /*[in]*/ long Index,
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z,
        /*[out]*/ enum TGFramework::KeyPointType * KeypointType,
        /*[out]*/ long * HandleType ) = 0;
      virtual HRESULT __stdcall get_SegmentedStyleCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_GetSegmentedStyle (
        /*[in]*/ long Index,
        /*[out]*/ double * x1,
        /*[out]*/ double * y1,
        /*[out]*/ double * x2,
        /*[out]*/ double * y2,
        /*[out]*/ IDispatch * * style ) = 0;
      virtual HRESULT __stdcall get_ModelWelds (
        /*[out,retval]*/ struct ModelWelds * * ModelWelds ) = 0;
      virtual HRESULT __stdcall get_BendAngle (
        /*[out,retval]*/ double * BendAngle ) = 0;
      virtual HRESULT __stdcall get_BendRadius (
        /*[out,retval]*/ double * BendRadius ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
};

struct __declspec(uuid("5de0fe36-30ea-11d4-ab5d-00c04f72e275"))
DVLineStrings2d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    DVLineString2dPtr Item (
        const _variant_t & Index );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
};

struct __declspec(uuid("09b1c81a-3025-11d4-ab5c-00c04f72e275"))
DVLineString2d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetLength))
    double Length;
    __declspec(property(get=GetKeyPointCount))
    long KeyPointCount;
    __declspec(property(get=GetVertexCount))
    long VertexCount;
    __declspec(property(get=GetClosed))
    VARIANT_BOOL Closed;
    __declspec(property(get=GetArea))
    double Area;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetSegmentedStyleCount))
    long SegmentedStyleCount;
    __declspec(property(get=GetName))
    _bstr_t Name[];
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetKey))
    _bstr_t Key[];
    __declspec(property(get=GetDocument))
    IDispatchPtr Document;
    __declspec(property(get=GetDrawingView))
    DrawingViewPtr DrawingView;
    __declspec(property(get=GetModelMember))
    ModelMemberPtr ModelMember;
    __declspec(property(get=GetEdgeType))
    enum GraphicMemberEdgeTypeConstants EdgeType;
    __declspec(property(get=GetReference))
    TGFramework::ReferencePtr Reference;
    __declspec(property(get=GetModelWelds))
    ModelWeldsPtr ModelWelds;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    _bstr_t GetName (
        const _variant_t & Recurse );
    DrawingViewPtr GetDrawingView ( );
    ModelMemberPtr GetModelMember ( );
    enum GraphicMemberEdgeTypeConstants GetEdgeType ( );
    TGFramework::ReferencePtr GetReference ( );
    HRESULT GetReferenceKey (
        BSTR * FullName,
        SAFEARRAY * * ReferenceKey,
        long * KeySize );
    enum TGFramework::ObjectType GetType ( );
    _bstr_t GetKey (
        const _variant_t & Recurse = vtMissing );
    IDispatchPtr GetDocument ( );
    HRESULT Range (
        double * XMinimum,
        double * YMinimum,
        double * XMaximum,
        double * YMaximum );
    double GetLength ( );
    long GetVertexCount ( );
    VARIANT_BOOL GetClosed ( );
    double GetArea ( );
    HRESULT GetVertices (
        long * VertexCount,
        SAFEARRAY * * Vertices );
    HRESULT GetVertex (
        long Index,
        double * x,
        double * y );
    HRESULT GetCentroid (
        double * x,
        double * y );
    long GetKeyPointCount ( );
    HRESULT GetKeyPoint (
        long Index,
        double * x,
        double * y,
        double * z,
        enum TGFramework::KeyPointType * KeypointType,
        long * HandleType );
    long GetSegmentedStyleCount ( );
    HRESULT GetSegmentedStyle (
        long Index,
        double * x1,
        double * y1,
        double * x2,
        double * y2,
        IDispatch * * style );
    ModelWeldsPtr GetModelWelds ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
};

struct __declspec(uuid("8437da90-30af-11d4-ab5d-00c04f72e275"))
_IDVLineStrings2dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    DVLineString2dPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct DVLineString2d * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Enum ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * App ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
};

struct __declspec(uuid("94b94b94-3021-11d4-ab5c-00c04f72e275"))
_IDVLineString2dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetLength))
    double Length;
    __declspec(property(get=GetKeyPointCount))
    long KeyPointCount;
    __declspec(property(get=GetVertexCount))
    long VertexCount;
    __declspec(property(get=GetClosed))
    VARIANT_BOOL Closed;
    __declspec(property(get=GetArea))
    double Area;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetSegmentedStyleCount))
    long SegmentedStyleCount;
    __declspec(property(get=GetName))
    _bstr_t Name[][];
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetKey))
    _bstr_t Key[];
    __declspec(property(get=GetDocument))
    IDispatchPtr Document;
    __declspec(property(get=GetDrawingView))
    DrawingViewPtr DrawingView;
    __declspec(property(get=GetModelMember))
    ModelMemberPtr ModelMember;
    __declspec(property(get=GetEdgeType))
    enum GraphicMemberEdgeTypeConstants EdgeType;
    __declspec(property(get=GetReference))
    TGFramework::ReferencePtr Reference;
    __declspec(property(get=GetModelWelds))
    ModelWeldsPtr ModelWelds;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    _bstr_t GetName (
        const _variant_t & Recurse,
        long Lcid = 0 );
    DrawingViewPtr GetDrawingView ( );
    ModelMemberPtr GetModelMember ( );
    enum GraphicMemberEdgeTypeConstants GetEdgeType ( );
    TGFramework::ReferencePtr GetReference ( );
    HRESULT GetReferenceKey (
        BSTR * FullName,
        SAFEARRAY * * ReferenceKey,
        long * KeySize );
    enum TGFramework::ObjectType GetType ( );
    _bstr_t GetKey (
        const _variant_t & Recurse = vtMissing );
    IDispatchPtr GetDocument ( );
    HRESULT Range (
        double * XMinimum,
        double * YMinimum,
        double * XMaximum,
        double * YMaximum );
    double GetLength ( );
    long GetVertexCount ( );
    VARIANT_BOOL GetClosed ( );
    double GetArea ( );
    HRESULT GetVertices (
        long * VertexCount,
        SAFEARRAY * * Vertices );
    HRESULT GetVertex (
        long Index,
        double * x,
        double * y );
    HRESULT GetCentroid (
        double * x,
        double * y );
    long GetKeyPointCount ( );
    HRESULT GetKeyPoint (
        long Index,
        double * x,
        double * y,
        double * z,
        enum TGFramework::KeyPointType * KeypointType,
        long * HandleType );
    long GetSegmentedStyleCount ( );
    HRESULT GetSegmentedStyle (
        long Index,
        double * x1,
        double * y1,
        double * x2,
        double * y2,
        IDispatch * * style );
    ModelWeldsPtr GetModelWelds ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[in]*/ VARIANT Recurse,
        /*[in,lcid]*/ long Lcid,
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_DrawingView (
        /*[out,retval]*/ struct DrawingView * * DrawingView ) = 0;
      virtual HRESULT __stdcall get_ModelMember (
        /*[out,retval]*/ struct ModelMember * * ModelMember ) = 0;
      virtual HRESULT __stdcall get_EdgeType (
        /*[out,retval]*/ enum GraphicMemberEdgeTypeConstants * EdgeType ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct TGFramework::Reference * * Reference ) = 0;
      virtual HRESULT __stdcall raw_GetReferenceKey (
        /*[out]*/ BSTR * FullName,
        /*[out]*/ SAFEARRAY * * ReferenceKey,
        /*[out]*/ long * KeySize ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall get_Key (
        /*[in]*/ VARIANT Recurse,
        /*[out,retval]*/ BSTR * Key ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ IDispatch * * Document ) = 0;
      virtual HRESULT __stdcall raw_Range (
        /*[out]*/ double * XMinimum,
        /*[out]*/ double * YMinimum,
        /*[out]*/ double * XMaximum,
        /*[out]*/ double * YMaximum ) = 0;
      virtual HRESULT __stdcall get_Length (
        /*[out,retval]*/ double * Length ) = 0;
      virtual HRESULT __stdcall get_VertexCount (
        /*[out,retval]*/ long * VertexCount ) = 0;
      virtual HRESULT __stdcall get_Closed (
        /*[out,retval]*/ VARIANT_BOOL * Closed ) = 0;
      virtual HRESULT __stdcall get_Area (
        /*[out,retval]*/ double * Area ) = 0;
      virtual HRESULT __stdcall raw_GetVertices (
        /*[out]*/ long * VertexCount,
        /*[in,out]*/ SAFEARRAY * * Vertices ) = 0;
      virtual HRESULT __stdcall raw_GetVertex (
        /*[in]*/ long Index,
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall raw_GetCentroid (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall get_KeyPointCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_GetKeyPoint (
        /*[in]*/ long Index,
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z,
        /*[out]*/ enum TGFramework::KeyPointType * KeypointType,
        /*[out]*/ long * HandleType ) = 0;
      virtual HRESULT __stdcall get_SegmentedStyleCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_GetSegmentedStyle (
        /*[in]*/ long Index,
        /*[out]*/ double * x1,
        /*[out]*/ double * y1,
        /*[out]*/ double * x2,
        /*[out]*/ double * y2,
        /*[out]*/ IDispatch * * style ) = 0;
      virtual HRESULT __stdcall get_ModelWelds (
        /*[out,retval]*/ struct ModelWelds * * ModelWelds ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
};

struct __declspec(uuid("4007ad74-30ea-11d4-ab5d-00c04f72e275"))
DVEllipticalArcs2d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    DVEllipticalArc2dPtr Item (
        const _variant_t & Index );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
};

struct __declspec(uuid("dc605566-3024-11d4-ab5c-00c04f72e275"))
DVEllipticalArc2d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetKey))
    _bstr_t Key[];
    __declspec(property(get=GetDocument))
    IDispatchPtr Document;
    __declspec(property(get=GetRelationships))
    TGFrameworkSupport::Relationships2dPtr Relationships;
    __declspec(property(get=GetBendAngle))
    double BendAngle;
    __declspec(property(get=GetBendRadius))
    double BendRadius;
    __declspec(property(get=GetDrawingView))
    DrawingViewPtr DrawingView;
    __declspec(property(get=GetModelMember))
    ModelMemberPtr ModelMember;
    __declspec(property(get=GetEdgeType))
    enum GraphicMemberEdgeTypeConstants EdgeType;
    __declspec(property(get=GetReference))
    TGFramework::ReferencePtr Reference;
    __declspec(property(get=GetShowHideEdgeOverride,put=PutShowHideEdgeOverride))
    DVShowHideEdgeOverrideType ShowHideEdgeOverride[];
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];
    __declspec(property(get=GetModelWelds))
    ModelWeldsPtr ModelWelds;
    __declspec(property(get=GetMajorRadius))
    double MajorRadius;
    __declspec(property(get=GetMinorRadius))
    double MinorRadius;
    __declspec(property(get=GetOrientation))
    enum TGFrameworkSupport::Geom2dOrientationConstants Orientation;
    __declspec(property(get=GetStartAngle))
    double StartAngle;
    __declspec(property(get=GetSweepAngle))
    double SweepAngle;
    __declspec(property(get=GetRotationAngle))
    double RotationAngle;
    __declspec(property(get=GetKeyPointCount))
    long KeyPointCount;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetSegmentedStyleCount))
    long SegmentedStyleCount;
    __declspec(property(get=GetName))
    _bstr_t Name[];
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFrameworkSupport::Relationships2dPtr GetRelationships ( );
    TGFramework::ApplicationPtr GetApplication ( );
    _bstr_t GetName (
        const _variant_t & Recurse );
    DrawingViewPtr GetDrawingView ( );
    ModelMemberPtr GetModelMember ( );
    enum GraphicMemberEdgeTypeConstants GetEdgeType ( );
    TGFramework::ReferencePtr GetReference ( );
    HRESULT GetReferenceKey (
        BSTR * FullName,
        SAFEARRAY * * ReferenceKey,
        long * KeySize );
    DVShowHideEdgeOverrideType GetShowHideEdgeOverride (
        const _variant_t & segmentIndex = vtMissing );
    void PutShowHideEdgeOverride (
        const _variant_t & segmentIndex,
        DVShowHideEdgeOverrideType _arg2 );
    enum TGFramework::ObjectType GetType ( );
    _bstr_t GetKey (
        const _variant_t & Recurse = vtMissing );
    IDispatchPtr GetDocument ( );
    HRESULT Range (
        double * XMinimum,
        double * YMinimum,
        double * XMaximum,
        double * YMaximum );
    double GetMajorRadius ( );
    double GetMinorRadius ( );
    enum TGFrameworkSupport::Geom2dOrientationConstants GetOrientation ( );
    double GetStartAngle ( );
    double GetSweepAngle ( );
    double GetRotationAngle ( );
    HRESULT GetStartPoint (
        double * x,
        double * y );
    HRESULT GetEndPoint (
        double * x,
        double * y );
    HRESULT GetCenterPoint (
        double * x,
        double * y );
    HRESULT GetMajorAxis (
        double * x,
        double * y );
    HRESULT GetMinorAxis (
        double * x,
        double * y );
    long GetKeyPointCount ( );
    HRESULT GetKeyPoint (
        long Index,
        double * x,
        double * y,
        double * z,
        enum TGFramework::KeyPointType * KeypointType,
        long * HandleType );
    long GetSegmentedStyleCount ( );
    HRESULT GetSegmentedStyle (
        long Index,
        double * x1,
        double * y1,
        double * x2,
        double * y2,
        IDispatch * * style );
    ModelWeldsPtr GetModelWelds ( );
    double GetBendAngle ( );
    double GetBendRadius ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
};

struct __declspec(uuid("74a4ff00-30ae-11d4-ab5d-00c04f72e275"))
_IDVEllipArcs2dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    DVEllipticalArc2dPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct DVEllipticalArc2d * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Enum ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * App ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
};

struct __declspec(uuid("6687bbd4-3021-11d4-ab5c-00c04f72e275"))
_IDVEllipArc2dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetKey))
    _bstr_t Key[];
    __declspec(property(get=GetDocument))
    IDispatchPtr Document;
    __declspec(property(get=GetRelationships))
    TGFrameworkSupport::Relationships2dPtr Relationships;
    __declspec(property(get=GetBendAngle))
    double BendAngle;
    __declspec(property(get=GetBendRadius))
    double BendRadius;
    __declspec(property(get=GetDrawingView))
    DrawingViewPtr DrawingView;
    __declspec(property(get=GetModelMember))
    ModelMemberPtr ModelMember;
    __declspec(property(get=GetEdgeType))
    enum GraphicMemberEdgeTypeConstants EdgeType;
    __declspec(property(get=GetReference))
    TGFramework::ReferencePtr Reference;
    __declspec(property(get=GetShowHideEdgeOverride,put=PutShowHideEdgeOverride))
    DVShowHideEdgeOverrideType ShowHideEdgeOverride[];
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];
    __declspec(property(get=GetModelWelds))
    ModelWeldsPtr ModelWelds;
    __declspec(property(get=GetMajorRadius))
    double MajorRadius;
    __declspec(property(get=GetMinorRadius))
    double MinorRadius;
    __declspec(property(get=GetOrientation))
    enum TGFrameworkSupport::Geom2dOrientationConstants Orientation;
    __declspec(property(get=GetStartAngle))
    double StartAngle;
    __declspec(property(get=GetSweepAngle))
    double SweepAngle;
    __declspec(property(get=GetRotationAngle))
    double RotationAngle;
    __declspec(property(get=GetKeyPointCount))
    long KeyPointCount;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetSegmentedStyleCount))
    long SegmentedStyleCount;
    __declspec(property(get=GetName))
    _bstr_t Name[][];
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;

    //
    // Wrapper methods for error-handling
    //

    TGFrameworkSupport::Relationships2dPtr GetRelationships ( );
    TGFramework::ApplicationPtr GetApplication ( );
    _bstr_t GetName (
        const _variant_t & Recurse,
        long Lcid = 0 );
    DrawingViewPtr GetDrawingView ( );
    ModelMemberPtr GetModelMember ( );
    enum GraphicMemberEdgeTypeConstants GetEdgeType ( );
    TGFramework::ReferencePtr GetReference ( );
    HRESULT GetReferenceKey (
        BSTR * FullName,
        SAFEARRAY * * ReferenceKey,
        long * KeySize );
    DVShowHideEdgeOverrideType GetShowHideEdgeOverride (
        const _variant_t & segmentIndex = vtMissing );
    void PutShowHideEdgeOverride (
        const _variant_t & segmentIndex,
        DVShowHideEdgeOverrideType overrideType );
    enum TGFramework::ObjectType GetType ( );
    _bstr_t GetKey (
        const _variant_t & Recurse = vtMissing );
    IDispatchPtr GetDocument ( );
    HRESULT Range (
        double * XMinimum,
        double * YMinimum,
        double * XMaximum,
        double * YMaximum );
    double GetMajorRadius ( );
    double GetMinorRadius ( );
    enum TGFrameworkSupport::Geom2dOrientationConstants GetOrientation ( );
    double GetStartAngle ( );
    double GetSweepAngle ( );
    double GetRotationAngle ( );
    HRESULT GetStartPoint (
        double * x,
        double * y );
    HRESULT GetEndPoint (
        double * x,
        double * y );
    HRESULT GetCenterPoint (
        double * x,
        double * y );
    HRESULT GetMajorAxis (
        double * x,
        double * y );
    HRESULT GetMinorAxis (
        double * x,
        double * y );
    long GetKeyPointCount ( );
    HRESULT GetKeyPoint (
        long Index,
        double * x,
        double * y,
        double * z,
        enum TGFramework::KeyPointType * KeypointType,
        long * HandleType );
    long GetSegmentedStyleCount ( );
    HRESULT GetSegmentedStyle (
        long Index,
        double * x1,
        double * y1,
        double * x2,
        double * y2,
        IDispatch * * style );
    ModelWeldsPtr GetModelWelds ( );
    double GetBendAngle ( );
    double GetBendRadius ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Relationships (
        /*[out,retval]*/ struct TGFrameworkSupport::Relationships2d * * Relationships2d ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[in]*/ VARIANT Recurse,
        /*[in,lcid]*/ long Lcid,
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_DrawingView (
        /*[out,retval]*/ struct DrawingView * * DrawingView ) = 0;
      virtual HRESULT __stdcall get_ModelMember (
        /*[out,retval]*/ struct ModelMember * * ModelMember ) = 0;
      virtual HRESULT __stdcall get_EdgeType (
        /*[out,retval]*/ enum GraphicMemberEdgeTypeConstants * EdgeType ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct TGFramework::Reference * * Reference ) = 0;
      virtual HRESULT __stdcall raw_GetReferenceKey (
        /*[out]*/ BSTR * FullName,
        /*[out]*/ SAFEARRAY * * ReferenceKey,
        /*[out]*/ long * KeySize ) = 0;
      virtual HRESULT __stdcall get_ShowHideEdgeOverride (
        /*[in]*/ VARIANT segmentIndex,
        /*[out,retval]*/ DVShowHideEdgeOverrideType * overrideType ) = 0;
      virtual HRESULT __stdcall put_ShowHideEdgeOverride (
        /*[in]*/ VARIANT segmentIndex,
        /*[in]*/ DVShowHideEdgeOverrideType overrideType ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall get_Key (
        /*[in]*/ VARIANT Recurse,
        /*[out,retval]*/ BSTR * Key ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ IDispatch * * Document ) = 0;
      virtual HRESULT __stdcall raw_Range (
        /*[out]*/ double * XMinimum,
        /*[out]*/ double * YMinimum,
        /*[out]*/ double * XMaximum,
        /*[out]*/ double * YMaximum ) = 0;
      virtual HRESULT __stdcall get_MajorRadius (
        /*[out,retval]*/ double * Radius ) = 0;
      virtual HRESULT __stdcall get_MinorRadius (
        /*[out,retval]*/ double * Radius ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ enum TGFrameworkSupport::Geom2dOrientationConstants * Orientation ) = 0;
      virtual HRESULT __stdcall get_StartAngle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall get_SweepAngle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall get_RotationAngle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall raw_GetStartPoint (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall raw_GetEndPoint (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall raw_GetCenterPoint (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall raw_GetMajorAxis (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall raw_GetMinorAxis (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall get_KeyPointCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_GetKeyPoint (
        /*[in]*/ long Index,
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z,
        /*[out]*/ enum TGFramework::KeyPointType * KeypointType,
        /*[out]*/ long * HandleType ) = 0;
      virtual HRESULT __stdcall get_SegmentedStyleCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_GetSegmentedStyle (
        /*[in]*/ long Index,
        /*[out]*/ double * x1,
        /*[out]*/ double * y1,
        /*[out]*/ double * x2,
        /*[out]*/ double * y2,
        /*[out]*/ IDispatch * * style ) = 0;
      virtual HRESULT __stdcall get_ModelWelds (
        /*[out,retval]*/ struct ModelWelds * * ModelWelds ) = 0;
      virtual HRESULT __stdcall get_BendAngle (
        /*[out,retval]*/ double * BendAngle ) = 0;
      virtual HRESULT __stdcall get_BendRadius (
        /*[out,retval]*/ double * BendRadius ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
};

struct __declspec(uuid("5cd42230-048a-428d-8d72-c1b8c99f12d6"))
DVPoints2d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    DVPoint2dPtr Item (
        const _variant_t & Index );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
};

struct __declspec(uuid("295fc019-9748-4764-8d0a-f7bf9210f43d"))
DVPoint2d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=Getx))
    double x;
    __declspec(property(get=Gety))
    double y;
    __declspec(property(get=GetRelationships))
    TGFrameworkSupport::Relationships2dPtr Relationships;
    __declspec(property(get=GetSegmentedStyleCount))
    long SegmentedStyleCount;
    __declspec(property(get=GetKeyPointCount))
    long KeyPointCount;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetName))
    _bstr_t Name[];
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetKey))
    _bstr_t Key[];
    __declspec(property(get=GetDocument))
    IDispatchPtr Document;
    __declspec(property(get=GetDrawingView))
    DrawingViewPtr DrawingView;
    __declspec(property(get=GetModelMember))
    ModelMemberPtr ModelMember;
    __declspec(property(get=GetEdgeType))
    enum GraphicMemberEdgeTypeConstants EdgeType;
    __declspec(property(get=GetReference))
    TGFramework::ReferencePtr Reference;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFrameworkSupport::Relationships2dPtr GetRelationships ( );
    TGFramework::ApplicationPtr GetApplication ( );
    _bstr_t GetName (
        const _variant_t & Recurse );
    DrawingViewPtr GetDrawingView ( );
    ModelMemberPtr GetModelMember ( );
    enum GraphicMemberEdgeTypeConstants GetEdgeType ( );
    TGFramework::ReferencePtr GetReference ( );
    HRESULT GetReferenceKey (
        BSTR * FullName,
        SAFEARRAY * * ReferenceKey,
        long * KeySize );
    enum TGFramework::ObjectType GetType ( );
    _bstr_t GetKey (
        const _variant_t & Recurse = vtMissing );
    IDispatchPtr GetDocument ( );
    HRESULT Range (
        double * XMinimum,
        double * YMinimum,
        double * XMaximum,
        double * YMaximum );
    double Getx ( );
    double Gety ( );
    HRESULT GetPoint (
        double * x,
        double * y );
    long GetSegmentedStyleCount ( );
    HRESULT GetSegmentedStyle (
        long Index,
        double * x1,
        double * y1,
        double * x2,
        double * y2,
        IDispatch * * style );
    long GetKeyPointCount ( );
    HRESULT GetKeyPoint (
        long Index,
        double * x,
        double * y,
        double * z,
        enum TGFramework::KeyPointType * KeypointType,
        long * HandleType );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
};

struct __declspec(uuid("862ae00c-0048-4987-b6f4-e47df1abf928"))
_IDVPoints2dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    DVPoint2dPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct DVPoint2d * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Enum ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * App ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
};

struct __declspec(uuid("0c545328-76fb-4ff0-bcfc-41ff1ac8f848"))
_IDVPoint2dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=Getx))
    double x;
    __declspec(property(get=Gety))
    double y;
    __declspec(property(get=GetRelationships))
    TGFrameworkSupport::Relationships2dPtr Relationships;
    __declspec(property(get=GetSegmentedStyleCount))
    long SegmentedStyleCount;
    __declspec(property(get=GetKeyPointCount))
    long KeyPointCount;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetName))
    _bstr_t Name[][];
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetKey))
    _bstr_t Key[];
    __declspec(property(get=GetDocument))
    IDispatchPtr Document;
    __declspec(property(get=GetDrawingView))
    DrawingViewPtr DrawingView;
    __declspec(property(get=GetModelMember))
    ModelMemberPtr ModelMember;
    __declspec(property(get=GetEdgeType))
    enum GraphicMemberEdgeTypeConstants EdgeType;
    __declspec(property(get=GetReference))
    TGFramework::ReferencePtr Reference;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    TGFrameworkSupport::Relationships2dPtr GetRelationships ( );
    TGFramework::ApplicationPtr GetApplication ( );
    _bstr_t GetName (
        const _variant_t & Recurse,
        long Lcid = 0 );
    DrawingViewPtr GetDrawingView ( );
    ModelMemberPtr GetModelMember ( );
    enum GraphicMemberEdgeTypeConstants GetEdgeType ( );
    TGFramework::ReferencePtr GetReference ( );
    HRESULT GetReferenceKey (
        BSTR * FullName,
        SAFEARRAY * * ReferenceKey,
        long * KeySize );
    enum TGFramework::ObjectType GetType ( );
    _bstr_t GetKey (
        const _variant_t & Recurse = vtMissing );
    IDispatchPtr GetDocument ( );
    HRESULT Range (
        double * XMinimum,
        double * YMinimum,
        double * XMaximum,
        double * YMaximum );
    double Getx ( );
    double Gety ( );
    HRESULT GetPoint (
        double * x,
        double * y );
    long GetSegmentedStyleCount ( );
    HRESULT GetSegmentedStyle (
        long Index,
        double * x1,
        double * y1,
        double * x2,
        double * y2,
        IDispatch * * style );
    long GetKeyPointCount ( );
    HRESULT GetKeyPoint (
        long Index,
        double * x,
        double * y,
        double * z,
        enum TGFramework::KeyPointType * KeypointType,
        long * HandleType );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Relationships (
        /*[out,retval]*/ struct TGFrameworkSupport::Relationships2d * * Relationships2d ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[in]*/ VARIANT Recurse,
        /*[in,lcid]*/ long Lcid,
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_DrawingView (
        /*[out,retval]*/ struct DrawingView * * DrawingView ) = 0;
      virtual HRESULT __stdcall get_ModelMember (
        /*[out,retval]*/ struct ModelMember * * ModelMember ) = 0;
      virtual HRESULT __stdcall get_EdgeType (
        /*[out,retval]*/ enum GraphicMemberEdgeTypeConstants * EdgeType ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct TGFramework::Reference * * Reference ) = 0;
      virtual HRESULT __stdcall raw_GetReferenceKey (
        /*[out]*/ BSTR * FullName,
        /*[out]*/ SAFEARRAY * * ReferenceKey,
        /*[out]*/ long * KeySize ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall get_Key (
        /*[in]*/ VARIANT Recurse,
        /*[out,retval]*/ BSTR * Key ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ IDispatch * * Document ) = 0;
      virtual HRESULT __stdcall raw_Range (
        /*[out]*/ double * XMinimum,
        /*[out]*/ double * YMinimum,
        /*[out]*/ double * XMaximum,
        /*[out]*/ double * YMaximum ) = 0;
      virtual HRESULT __stdcall get_x (
        /*[out,retval]*/ double * x ) = 0;
      virtual HRESULT __stdcall get_y (
        /*[out,retval]*/ double * y ) = 0;
      virtual HRESULT __stdcall raw_GetPoint (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall get_SegmentedStyleCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_GetSegmentedStyle (
        /*[in]*/ long Index,
        /*[out]*/ double * x1,
        /*[out]*/ double * y1,
        /*[out]*/ double * x2,
        /*[out]*/ double * y2,
        /*[out]*/ IDispatch * * style ) = 0;
      virtual HRESULT __stdcall get_KeyPointCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_GetKeyPoint (
        /*[in]*/ long Index,
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z,
        /*[out]*/ enum TGFramework::KeyPointType * KeypointType,
        /*[out]*/ long * HandleType ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
};

struct __declspec(uuid("50e8a417-2a6d-11d4-a4c3-0004ac9695cb"))
ModelNode : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetFileName))
    _bstr_t FileName;
    __declspec(property(get=GetIncludeInPartsList,put=PutIncludeInPartsList))
    VARIANT_BOOL IncludeInPartsList;
    __declspec(property(get=GetIsBallooned))
    VARIANT_BOOL IsBallooned;
    __declspec(property(get=GetItemNumber,put=PutItemNumber))
    long ItemNumber;
    __declspec(property(get=GetModelNodes))
    ModelNodesPtr ModelNodes;
    __declspec(property(get=GetModelType))
    enum ModelNodeTypeConstants ModelType;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetComponentName))
    _bstr_t ComponentName;
    __declspec(property(get=GetCutLength))
    double CutLength;
    __declspec(property(get=GetIsAssemblyContainedPart))
    VARIANT_BOOL IsAssemblyContainedPart;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetFileName ( );
    enum ModelNodeTypeConstants GetModelType ( );
    VARIANT_BOOL GetVisible ( );
    void PutItemNumber (
        long _arg1 );
    long GetItemNumber ( );
    void PutIncludeInPartsList (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetIncludeInPartsList ( );
    VARIANT_BOOL GetIsBallooned ( );
    ModelNodesPtr GetModelNodes ( );
    _bstr_t GetComponentName ( );
    double GetCutLength ( );
    HRESULT GetAssemblyReferenceKey (
        SAFEARRAY * * ReferenceKey,
        VARIANT * KeySize = &vtMissing );
    VARIANT_BOOL GetIsAssemblyContainedPart ( );
};

enum ModelNodeTypeConstants
{
    igPartNode = 0,
    igAssemblyNode = 1
};

struct __declspec(uuid("50e8a416-2a6d-11d4-a4c3-0004ac9695cb"))
ModelNodes : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    ModelNodePtr Item (
        const _variant_t & Index );
};

struct __declspec(uuid("50e8a415-2a6d-11d4-a4c3-0004ac9695cb"))
_IModelNodeAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetFileName))
    _bstr_t FileName;
    __declspec(property(get=GetIncludeInPartsList,put=PutIncludeInPartsList))
    VARIANT_BOOL IncludeInPartsList;
    __declspec(property(get=GetIsBallooned))
    VARIANT_BOOL IsBallooned;
    __declspec(property(get=GetItemNumber,put=PutItemNumber))
    long ItemNumber;
    __declspec(property(get=GetModelNodes))
    ModelNodesPtr ModelNodes;
    __declspec(property(get=GetModelType))
    enum ModelNodeTypeConstants ModelType;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetComponentName))
    _bstr_t ComponentName;
    __declspec(property(get=GetCutLength))
    double CutLength;
    __declspec(property(get=GetIsAssemblyContainedPart))
    VARIANT_BOOL IsAssemblyContainedPart;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetFileName ( );
    enum ModelNodeTypeConstants GetModelType ( );
    VARIANT_BOOL GetVisible ( );
    void PutItemNumber (
        long ItemNumber );
    long GetItemNumber ( );
    void PutIncludeInPartsList (
        VARIANT_BOOL IncludeInPartsList );
    VARIANT_BOOL GetIncludeInPartsList ( );
    VARIANT_BOOL GetIsBallooned ( );
    ModelNodesPtr GetModelNodes ( );
    _bstr_t GetComponentName ( );
    double GetCutLength ( );
    HRESULT GetAssemblyReferenceKey (
        SAFEARRAY * * ReferenceKey,
        VARIANT * KeySize );
    VARIANT_BOOL GetIsAssemblyContainedPart ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_FileName (
        /*[out,retval]*/ BSTR * FileName ) = 0;
      virtual HRESULT __stdcall get_ModelType (
        /*[out,retval]*/ enum ModelNodeTypeConstants * ModelNodeType ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_ItemNumber (
        /*[in]*/ long ItemNumber ) = 0;
      virtual HRESULT __stdcall get_ItemNumber (
        /*[out,retval]*/ long * ItemNumber ) = 0;
      virtual HRESULT __stdcall put_IncludeInPartsList (
        /*[in]*/ VARIANT_BOOL IncludeInPartsList ) = 0;
      virtual HRESULT __stdcall get_IncludeInPartsList (
        /*[out,retval]*/ VARIANT_BOOL * IncludeInPartsList ) = 0;
      virtual HRESULT __stdcall get_IsBallooned (
        /*[out,retval]*/ VARIANT_BOOL * IsBallooned ) = 0;
      virtual HRESULT __stdcall get_ModelNodes (
        /*[out,retval]*/ struct ModelNodes * * ModelNodes ) = 0;
      virtual HRESULT __stdcall get_ComponentName (
        /*[out,retval]*/ BSTR * ComponentName ) = 0;
      virtual HRESULT __stdcall get_CutLength (
        /*[out,retval]*/ double * CutLength ) = 0;
      virtual HRESULT __stdcall raw_GetAssemblyReferenceKey (
        /*[in,out]*/ SAFEARRAY * * ReferenceKey,
        /*[out]*/ VARIANT * KeySize ) = 0;
      virtual HRESULT __stdcall get_IsAssemblyContainedPart (
        /*[out,retval]*/ VARIANT_BOOL * IsAssemblyContainedPart ) = 0;
};

struct __declspec(uuid("50e8a414-2a6d-11d4-a4c3-0004ac9695cb"))
_IModelNodesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    ModelNodePtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct ModelNode * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Unknown ) = 0;
};

struct __declspec(uuid("3534e85c-1d65-4dea-9f9c-6be027eb2831"))
SectionBoundaries2d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFrameworkSupport::Boundary2dPtr Item (
        const _variant_t & Index );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
};

struct __declspec(uuid("4108d6ce-163e-11d4-ab46-00c04f72e275"))
_IModelMemberAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetImmediateParent))
    ModelMemberPtr ImmediateParent;
    __declspec(property(get=GetFileName))
    _bstr_t FileName;
    __declspec(property(get=GetDisplayType,put=PutDisplayType))
    enum ModelMemberDisplayTypeConstants DisplayType;
    __declspec(property(get=GetShowHiddenEdges,put=PutShowHiddenEdges))
    VARIANT_BOOL ShowHiddenEdges;
    __declspec(property(get=GetShowTangentEdges,put=PutShowTangentEdges))
    VARIANT_BOOL ShowTangentEdges;
    __declspec(property(get=GetShowSectionHatch,put=PutShowSectionHatch))
    VARIANT_BOOL ShowSectionHatch;
    __declspec(property(get=GetVisibleEdgeStyleName,put=PutVisibleEdgeStyleName))
    _bstr_t VisibleEdgeStyleName;
    __declspec(property(get=GetHiddenEdgeStyleName,put=PutHiddenEdgeStyleName))
    _bstr_t HiddenEdgeStyleName;
    __declspec(property(get=GetTangentEdgeStyleName,put=PutTangentEdgeStyleName))
    _bstr_t TangentEdgeStyleName;
    __declspec(property(get=GetModelMembers))
    ModelMembersPtr ModelMembers;
    __declspec(property(get=GetGraphicMembers))
    GraphicMembersPtr GraphicMembers;
    __declspec(property(get=GetDVLines2d))
    DVLines2dPtr DVLines2d;
    __declspec(property(get=GetDVArcs2d))
    DVArcs2dPtr DVArcs2d;
    __declspec(property(get=GetDVBSplineCurves2d))
    DVBSplineCurves2dPtr DVBSplineCurves2d;
    __declspec(property(get=GetDVCircles2d))
    DVCircles2dPtr DVCircles2d;
    __declspec(property(get=GetDVEllipses2d))
    DVEllipses2dPtr DVEllipses2d;
    __declspec(property(get=GetDVLineStrings2d))
    DVLineStrings2dPtr DVLineStrings2d;
    __declspec(property(get=GetDVEllipticalArcs2d))
    DVEllipticalArcs2dPtr DVEllipticalArcs2d;
    __declspec(property(get=GetType))
    enum ModelMemberTypeConstants Type;
    __declspec(property(get=GetIsSimplified))
    VARIANT_BOOL IsSimplified;
    __declspec(property(get=GetIsFlat))
    VARIANT_BOOL IsFlat;
    __declspec(property(get=GetRoadMap))
    _bstr_t RoadMap;
    __declspec(property(get=GetComponentType))
    enum ModelMemberComponentTypeConstants ComponentType;
    __declspec(property(get=GetDisplayAsReference,put=PutDisplayAsReference))
    VARIANT_BOOL DisplayAsReference;
    __declspec(property(get=GetDVPoints2d))
    DVPoints2dPtr DVPoints2d;
    __declspec(property(get=GetComponentName))
    _bstr_t ComponentName;
    __declspec(property(get=GetShowEdgesHiddenByOtherParts,put=PutShowEdgesHiddenByOtherParts))
    VARIANT_BOOL ShowEdgesHiddenByOtherParts;
    __declspec(property(get=GetShowEdgesHiddenTangentEdgesSelfHidden,put=PutShowEdgesHiddenTangentEdgesSelfHidden))
    VARIANT_BOOL ShowEdgesHiddenTangentEdgesSelfHidden;
    __declspec(property(get=GetShowEdgesHiddenTangentEdgesHiddenByOtherParts,put=PutShowEdgesHiddenTangentEdgesHiddenByOtherParts))
    VARIANT_BOOL ShowEdgesHiddenTangentEdgesHiddenByOtherParts;
    __declspec(property(get=GetShowFill,put=PutShowFill))
    VARIANT_BOOL ShowFill;
    __declspec(property(get=GetFillStyleName,put=PutFillStyleName))
    _bstr_t FillStyleName;
    __declspec(property(get=GetDeriveFillStyleFromPart,put=PutDeriveFillStyleFromPart))
    VARIANT_BOOL DeriveFillStyleFromPart;
    __declspec(property(get=GetDVBoundaries2d))
    SectionBoundaries2dPtr DVBoundaries2d;
    __declspec(property(get=GetModelNode))
    ModelNodePtr ModelNode;
    __declspec(property(get=GetHatchSpacing,put=PutHatchSpacing))
    double HatchSpacing;
    __declspec(property(get=GetHatchAngle,put=PutHatchAngle))
    double HatchAngle;
    __declspec(property(get=GetIsPrimaryAlternatePosition))
    VARIANT_BOOL IsPrimaryAlternatePosition;
    __declspec(property(get=GetIsAlternatePosition))
    VARIANT_BOOL IsAlternatePosition;
    __declspec(property(get=GetAlternatePositionMemberName))
    _bstr_t AlternatePositionMemberName;
    __declspec(property(get=GetCutHardware,put=PutCutHardware))
    VARIANT_BOOL CutHardware;
    __declspec(property(get=GetDisplaySection,put=PutDisplaySection))
    VARIANT_BOOL DisplaySection;
    __declspec(property(get=GetDisplayPart,put=PutDisplayPart))
    VARIANT_BOOL DisplayPart;
    __declspec(property(get=GetDeriveDisplayAsReferenceFromAsm,put=PutDeriveDisplayAsReferenceFromAsm))
    VARIANT_BOOL DeriveDisplayAsReferenceFromAsm;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    ModelMemberPtr GetImmediateParent ( );
    _bstr_t GetFileName ( );
    enum ModelMemberDisplayTypeConstants GetDisplayType ( );
    void PutDisplayType (
        enum ModelMemberDisplayTypeConstants DisplayType );
    enum ModelMemberTypeConstants GetType ( );
    enum ModelMemberComponentTypeConstants GetComponentType ( );
    VARIANT_BOOL GetShowHiddenEdges ( );
    void PutShowHiddenEdges (
        VARIANT_BOOL value );
    VARIANT_BOOL GetShowTangentEdges ( );
    void PutShowTangentEdges (
        VARIANT_BOOL value );
    VARIANT_BOOL GetShowSectionHatch ( );
    void PutShowSectionHatch (
        VARIANT_BOOL value );
    _bstr_t GetVisibleEdgeStyleName ( );
    void PutVisibleEdgeStyleName (
        _bstr_t StyleName );
    _bstr_t GetHiddenEdgeStyleName ( );
    void PutHiddenEdgeStyleName (
        _bstr_t StyleName );
    _bstr_t GetTangentEdgeStyleName ( );
    void PutTangentEdgeStyleName (
        _bstr_t StyleName );
    ModelMembersPtr GetModelMembers ( );
    GraphicMembersPtr GetGraphicMembers ( );
    DVLines2dPtr GetDVLines2d ( );
    DVArcs2dPtr GetDVArcs2d ( );
    DVBSplineCurves2dPtr GetDVBSplineCurves2d ( );
    DVCircles2dPtr GetDVCircles2d ( );
    DVEllipses2dPtr GetDVEllipses2d ( );
    DVLineStrings2dPtr GetDVLineStrings2d ( );
    DVEllipticalArcs2dPtr GetDVEllipticalArcs2d ( );
    DVPoints2dPtr GetDVPoints2d ( );
    VARIANT_BOOL GetIsSimplified ( );
    VARIANT_BOOL GetIsFlat ( );
    _bstr_t GetRoadMap ( );
    VARIANT_BOOL GetDisplayAsReference ( );
    void PutDisplayAsReference (
        VARIANT_BOOL value );
    HRESULT GetRange2d (
        double * XMin,
        double * YMin,
        double * XMax,
        double * YMax );
    HRESULT GetRange3d (
        double * XMin,
        double * YMin,
        double * ZMin,
        double * XMax,
        double * YMax,
        double * ZMax );
    _bstr_t GetComponentName ( );
    VARIANT_BOOL GetShowEdgesHiddenByOtherParts ( );
    void PutShowEdgesHiddenByOtherParts (
        VARIANT_BOOL value );
    VARIANT_BOOL GetShowEdgesHiddenTangentEdgesSelfHidden ( );
    void PutShowEdgesHiddenTangentEdgesSelfHidden (
        VARIANT_BOOL value );
    VARIANT_BOOL GetShowEdgesHiddenTangentEdgesHiddenByOtherParts ( );
    void PutShowEdgesHiddenTangentEdgesHiddenByOtherParts (
        VARIANT_BOOL value );
    ModelNodePtr GetModelNode ( );
    VARIANT_BOOL GetShowFill ( );
    void PutShowFill (
        VARIANT_BOOL value );
    _bstr_t GetFillStyleName ( );
    void PutFillStyleName (
        _bstr_t StyleName );
    VARIANT_BOOL GetDeriveFillStyleFromPart ( );
    void PutDeriveFillStyleFromPart (
        VARIANT_BOOL value );
    SectionBoundaries2dPtr GetDVBoundaries2d ( );
    double GetHatchSpacing ( );
    void PutHatchSpacing (
        double dSpacing );
    double GetHatchAngle ( );
    void PutHatchAngle (
        double dAngle );
    VARIANT_BOOL GetIsPrimaryAlternatePosition ( );
    VARIANT_BOOL GetIsAlternatePosition ( );
    _bstr_t GetAlternatePositionMemberName ( );
    VARIANT_BOOL GetCutHardware ( );
    void PutCutHardware (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDisplaySection ( );
    void PutDisplaySection (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDisplayPart ( );
    void PutDisplayPart (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDeriveDisplayAsReferenceFromAsm ( );
    void PutDeriveDisplayAsReferenceFromAsm (
        VARIANT_BOOL value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_ImmediateParent (
        /*[out,retval]*/ struct ModelMember * * Parent ) = 0;
      virtual HRESULT __stdcall get_FileName (
        /*[out,retval]*/ BSTR * FileName ) = 0;
      virtual HRESULT __stdcall get_DisplayType (
        /*[out,retval]*/ enum ModelMemberDisplayTypeConstants * DisplayType ) = 0;
      virtual HRESULT __stdcall put_DisplayType (
        /*[in]*/ enum ModelMemberDisplayTypeConstants DisplayType ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum ModelMemberTypeConstants * Type ) = 0;
      virtual HRESULT __stdcall get_ComponentType (
        /*[out,retval]*/ enum ModelMemberComponentTypeConstants * Type ) = 0;
      virtual HRESULT __stdcall get_ShowHiddenEdges (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_ShowHiddenEdges (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_ShowTangentEdges (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_ShowTangentEdges (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_ShowSectionHatch (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_ShowSectionHatch (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_VisibleEdgeStyleName (
        /*[out,retval]*/ BSTR * StyleName ) = 0;
      virtual HRESULT __stdcall put_VisibleEdgeStyleName (
        /*[in]*/ BSTR StyleName ) = 0;
      virtual HRESULT __stdcall get_HiddenEdgeStyleName (
        /*[out,retval]*/ BSTR * StyleName ) = 0;
      virtual HRESULT __stdcall put_HiddenEdgeStyleName (
        /*[in]*/ BSTR StyleName ) = 0;
      virtual HRESULT __stdcall get_TangentEdgeStyleName (
        /*[out,retval]*/ BSTR * StyleName ) = 0;
      virtual HRESULT __stdcall put_TangentEdgeStyleName (
        /*[in]*/ BSTR StyleName ) = 0;
      virtual HRESULT __stdcall get_ModelMembers (
        /*[out,retval]*/ struct ModelMembers * * ModelMembers ) = 0;
      virtual HRESULT __stdcall get_GraphicMembers (
        /*[out,retval]*/ struct GraphicMembers * * GraphicMembers ) = 0;
      virtual HRESULT __stdcall get_DVLines2d (
        /*[out,retval]*/ struct DVLines2d * * DVLines2d ) = 0;
      virtual HRESULT __stdcall get_DVArcs2d (
        /*[out,retval]*/ struct DVArcs2d * * DVArcs2d ) = 0;
      virtual HRESULT __stdcall get_DVBSplineCurves2d (
        /*[out,retval]*/ struct DVBSplineCurves2d * * DVBSplineCurves2d ) = 0;
      virtual HRESULT __stdcall get_DVCircles2d (
        /*[out,retval]*/ struct DVCircles2d * * DVCircles2d ) = 0;
      virtual HRESULT __stdcall get_DVEllipses2d (
        /*[out,retval]*/ struct DVEllipses2d * * DVEllipses2d ) = 0;
      virtual HRESULT __stdcall get_DVLineStrings2d (
        /*[out,retval]*/ struct DVLineStrings2d * * DVLineStrings2d ) = 0;
      virtual HRESULT __stdcall get_DVEllipticalArcs2d (
        /*[out,retval]*/ struct DVEllipticalArcs2d * * DVEllipticalArcs2d ) = 0;
      virtual HRESULT __stdcall get_DVPoints2d (
        /*[out,retval]*/ struct DVPoints2d * * DVPoints2d ) = 0;
      virtual HRESULT __stdcall get_IsSimplified (
        /*[out,retval]*/ VARIANT_BOOL * IsSimplified ) = 0;
      virtual HRESULT __stdcall get_IsFlat (
        /*[out,retval]*/ VARIANT_BOOL * IsFlat ) = 0;
      virtual HRESULT __stdcall get_RoadMap (
        /*[out,retval]*/ BSTR * RoadMap ) = 0;
      virtual HRESULT __stdcall get_DisplayAsReference (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DisplayAsReference (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall raw_GetRange2d (
        /*[out]*/ double * XMin,
        /*[out]*/ double * YMin,
        /*[out]*/ double * XMax,
        /*[out]*/ double * YMax ) = 0;
      virtual HRESULT __stdcall raw_GetRange3d (
        /*[out]*/ double * XMin,
        /*[out]*/ double * YMin,
        /*[out]*/ double * ZMin,
        /*[out]*/ double * XMax,
        /*[out]*/ double * YMax,
        /*[out]*/ double * ZMax ) = 0;
      virtual HRESULT __stdcall get_ComponentName (
        /*[out,retval]*/ BSTR * FileName ) = 0;
      virtual HRESULT __stdcall get_ShowEdgesHiddenByOtherParts (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_ShowEdgesHiddenByOtherParts (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_ShowEdgesHiddenTangentEdgesSelfHidden (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_ShowEdgesHiddenTangentEdgesSelfHidden (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_ShowEdgesHiddenTangentEdgesHiddenByOtherParts (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_ShowEdgesHiddenTangentEdgesHiddenByOtherParts (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_ModelNode (
        /*[out,retval]*/ struct ModelNode * * ModelNode ) = 0;
      virtual HRESULT __stdcall get_ShowFill (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_ShowFill (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_FillStyleName (
        /*[out,retval]*/ BSTR * StyleName ) = 0;
      virtual HRESULT __stdcall put_FillStyleName (
        /*[in]*/ BSTR StyleName ) = 0;
      virtual HRESULT __stdcall get_DeriveFillStyleFromPart (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DeriveFillStyleFromPart (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVBoundaries2d (
        /*[out,retval]*/ struct SectionBoundaries2d * * Boundaries2d ) = 0;
      virtual HRESULT __stdcall get_HatchSpacing (
        /*[out,retval]*/ double * dSpacing ) = 0;
      virtual HRESULT __stdcall put_HatchSpacing (
        /*[in]*/ double dSpacing ) = 0;
      virtual HRESULT __stdcall get_HatchAngle (
        /*[out,retval]*/ double * dAngle ) = 0;
      virtual HRESULT __stdcall put_HatchAngle (
        /*[in]*/ double dAngle ) = 0;
      virtual HRESULT __stdcall get_IsPrimaryAlternatePosition (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall get_IsAlternatePosition (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall get_AlternatePositionMemberName (
        /*[out,retval]*/ BSTR * FileName ) = 0;
      virtual HRESULT __stdcall get_CutHardware (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_CutHardware (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DisplaySection (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DisplaySection (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DisplayPart (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DisplayPart (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DeriveDisplayAsReferenceFromAsm (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DeriveDisplayAsReferenceFromAsm (
        /*[in]*/ VARIANT_BOOL value ) = 0;
};

struct __declspec(uuid("b2d7974c-9930-4873-87c6-9fcb1aa1dcd1"))
_ISectionBoundaries2dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFrameworkSupport::Boundary2dPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct TGFrameworkSupport::Boundary2d * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Enum ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * App ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
};

enum DrawingViewShadingQualityConstants
{
    igShadingQualityLevel1 = 1,
    igShadingQualityLevel2 = 2,
    igShadingQualityLevel3 = 3,
    igShadingQualityLevel4 = 4
};

enum DrawingViewSnapShotQualityConstants
{
    igViewIsNotSnapShot = -1,
    igSnapShotQualityLevel1 = 1,
    igSnapShotQualityLevel2 = 2,
    igSnapShotQualityLevel3 = 3,
    igSnapShotQualityLevel4 = 4,
    igSnapShotQualityLevel5 = 5
};

enum DrawingViewVHL_ToleranceOverrideQualityConstants
{
    igViewNotVHL = -1,
    igVHL_Tolerance_Use_SE_Default = 0,
    igVHL_ToleranceOverrideQualityLevel1 = 1,
    igVHL_ToleranceOverrideQualityLevel2 = 2,
    igVHL_ToleranceOverrideQualityLevel3 = 3,
    igVHL_ToleranceOverrideQualityLevel4 = 4,
    igVHL_ToleranceOverrideQualityLevel5 = 5
};

enum ViewOrientationConstants
{
    igTopView = 1,
    igRightView = 2,
    igLeftView = 3,
    igFrontView = 4,
    igBottomView = 5,
    igBackView = 6,
    igTopBackLeftView = 7,
    igTopFrontLeftView = 8,
    igTopFrontRightView = 9,
    igTopBackRightView = 10,
    igBottomBackLeftView = 11,
    igBottomFrontLeftView = 12,
    igBottomFrontRightView = 13,
    igBottomBackRightView = 14,
    igDimetricTopBackLeftView = 15,
    igDimetricTopFrontLeftView = 16,
    igDimetricTopFrontRightView = 17,
    igDimetricTopBackRightView = 18,
    igDimetricBottomBackLeftView = 19,
    igDimetricBottomFrontLeftView = 20,
    igDimetricBottomFrontRightView = 21,
    igDimetricBottomBackRightView = 22,
    igTrimetricTopBackLeftView = 23,
    igTrimetricTopFrontLeftView = 24,
    igTrimetricTopFrontRightView = 25,
    igTrimetricTopBackRightView = 26,
    igTrimetricBottomBackLeftView = 27,
    igTrimetricBottomFrontLeftView = 28,
    igTrimetricBottomFrontRightView = 29,
    igTrimetricBottomBackRightView = 30
};

enum DrawingViewBsplineSimplificationConstants
{
    igAlwaysSimplify = 0,
    igSimplifyNonPlanarOnly = 1,
    igNeverSimplify = 2
};

enum DrawingViewIntersectionProcessingConstants
{
    igNoIntersectionProcessing = 0,
    igNoInterferenceEdges = 1,
    igInterferenceEdgesThreadedPartsOnly = 2,
    igInterferenceEdgesAllParts = 3
};

enum DrawingViewSimplifiedAssemblyOptionConstants
{
    seDrawingViewSimplifiedAssemblyOptionNone = 0,
    seDrawingViewSimplifiedAssemblyOptionAllSubassemblies = 1,
    seDrawingViewSimplifiedAssemblyOptionByConfiguration = 2,
    seDrawingViewSimplifiedAssemblyOptionTopAssembly = 3
};

enum DrawingViewSimplifiedPartOptionConstants
{
    seDrawingViewSimplifiedPartOptionNone = 0,
    seDrawingViewSimplifiedPartOptionAllParts = 1,
    seDrawingViewSimplifiedPartOptionByConfiguration = 2
};

struct __declspec(uuid("fecbeb70-894d-11ce-acbe-08003601eb9a"))
CuttingPlanes : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    CuttingPlanePtr Item (
        const _variant_t & Index );
    IDispatchPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
    CuttingPlanePtr Add ( );
};

struct __declspec(uuid("4bb99f75-67f5-4374-bf75-c264b8832bb5"))
CuttingPlane : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetLayer,put=PutLayer))
    _bstr_t Layer;
    __declspec(property(get=GetAuto,put=PutAuto))
    VARIANT_BOOL Auto;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetDisplayCaption,put=PutDisplayCaption))
    VARIANT_BOOL DisplayCaption;
    __declspec(property(get=GetCaption,put=PutCaption))
    _bstr_t Caption;
    __declspec(property(get=GetDisplayType,put=PutDisplayType))
    enum TGFrameworkSupport::DimViewCuttingPlaneDisplayTypeConstants DisplayType;
    __declspec(property(get=GetTextFont,put=PutTextFont))
    _bstr_t TextFont;
    __declspec(property(get=GetTextFontStyle,put=PutTextFontStyle))
    enum TGFrameworkSupport::DimTextFontStyleConstants TextFontStyle;
    __declspec(property(get=GetTextHeight,put=PutTextHeight))
    double TextHeight;
    __declspec(property(get=GetTextRatio,put=PutTextRatio))
    double TextRatio;
    __declspec(property(get=GetTextColor,put=PutTextColor))
    long TextColor;
    __declspec(property(get=GetStyleName,put=PutStyleName))
    _bstr_t StyleName;
    __declspec(property(get=GetTerminatorType,put=PutTerminatorType))
    enum TGFrameworkSupport::DimTermTypeConstants TerminatorType;
    __declspec(property(get=GetTerminatorRatio,put=PutTerminatorRatio))
    double TerminatorRatio;
    __declspec(property(get=GetLineWidth,put=PutLineWidth))
    double LineWidth;
    __declspec(property(get=GetLineType,put=PutLineType))
    _bstr_t LineType;
    __declspec(property(get=GetCaptionDefinitionText,put=PutCaptionDefinitionText))
    _bstr_t CaptionDefinitionText;
    __declspec(property(get=GetCaptionDisplayedText))
    _bstr_t CaptionDisplayedText;
    __declspec(property(get=GetSourceDrawingView))
    DrawingViewPtr SourceDrawingView;
    __declspec(property(get=GetViewSheetNumberDefinitionText,put=PutViewSheetNumberDefinitionText))
    _bstr_t ViewSheetNumberDefinitionText;
    __declspec(property(get=GetDisplayViewSheetNumber,put=PutDisplayViewSheetNumber))
    VARIANT_BOOL DisplayViewSheetNumber;
    __declspec(property(get=GetViewSheetNumberLocation,put=PutViewSheetNumberLocation))
    enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants ViewSheetNumberLocation;
    __declspec(property(get=GetLineDisplayStyle,put=PutLineDisplayStyle))
    enum TGFrameworkSupport::CuttingPlaneLineDisplayStyleConstants LineDisplayStyle;
    __declspec(property(get=GetThickLineLengthRatio,put=PutThickLineLengthRatio))
    double ThickLineLengthRatio;
    __declspec(property(get=GetThickLineArrowOffset,put=PutThickLineArrowOffset))
    double ThickLineArrowOffset;
    __declspec(property(get=GetProfile))
    DraftProfilePtr Profile;
    __declspec(property(get=GetViewSide,put=PutViewSide))
    enum TGFramework::SectionViewProfileSide ViewSide;
    __declspec(property(get=GetSectionView))
    DrawingViewPtr SectionView;
    __declspec(property(get=GetFoldSegment,put=PutFoldSegment))
    long FoldSegment;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    VARIANT_BOOL GetDisplayCaption ( );
    void PutDisplayCaption (
        VARIANT_BOOL _arg1 );
    _bstr_t GetCaption ( );
    void PutCaption (
        _bstr_t _arg1 );
    enum TGFrameworkSupport::DimViewCuttingPlaneDisplayTypeConstants GetDisplayType ( );
    void PutDisplayType (
        enum TGFrameworkSupport::DimViewCuttingPlaneDisplayTypeConstants _arg1 );
    _bstr_t GetTextFont ( );
    void PutTextFont (
        _bstr_t _arg1 );
    enum TGFrameworkSupport::DimTextFontStyleConstants GetTextFontStyle ( );
    void PutTextFontStyle (
        enum TGFrameworkSupport::DimTextFontStyleConstants _arg1 );
    double GetTextHeight ( );
    void PutTextHeight (
        double _arg1 );
    double GetTextRatio ( );
    void PutTextRatio (
        double _arg1 );
    long GetTextColor ( );
    void PutTextColor (
        long _arg1 );
    _bstr_t GetStyleName ( );
    void PutStyleName (
        _bstr_t _arg1 );
    enum TGFrameworkSupport::DimTermTypeConstants GetTerminatorType ( );
    void PutTerminatorType (
        enum TGFrameworkSupport::DimTermTypeConstants _arg1 );
    double GetTerminatorRatio ( );
    void PutTerminatorRatio (
        double _arg1 );
    double GetLineWidth ( );
    void PutLineWidth (
        double _arg1 );
    _bstr_t GetLineType ( );
    void PutLineType (
        _bstr_t _arg1 );
    _bstr_t GetCaptionDefinitionText ( );
    void PutCaptionDefinitionText (
        _bstr_t _arg1 );
    _bstr_t GetCaptionDisplayedText ( );
    DrawingViewPtr GetSourceDrawingView ( );
    HRESULT GetFoldLineWithViewDirection (
        double * LineStartX,
        double * LineStartY,
        double * LineEndX,
        double * LineEndY,
        double * ViewDirectionX,
        double * ViewDirectionY );
    _bstr_t GetViewSheetNumberDefinitionText ( );
    void PutViewSheetNumberDefinitionText (
        _bstr_t _arg1 );
    VARIANT_BOOL GetDisplayViewSheetNumber ( );
    void PutDisplayViewSheetNumber (
        VARIANT_BOOL _arg1 );
    enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants GetViewSheetNumberLocation ( );
    void PutViewSheetNumberLocation (
        enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants _arg1 );
    enum TGFrameworkSupport::CuttingPlaneLineDisplayStyleConstants GetLineDisplayStyle ( );
    void PutLineDisplayStyle (
        enum TGFrameworkSupport::CuttingPlaneLineDisplayStyleConstants _arg1 );
    double GetThickLineLengthRatio ( );
    void PutThickLineLengthRatio (
        double _arg1 );
    double GetThickLineArrowOffset ( );
    void PutThickLineArrowOffset (
        double _arg1 );
    HRESULT GetCaptionPosition (
        VARIANT_BOOL CaptionAtStartOfLine,
        double * x,
        double * y );
    HRESULT SetCaptionPosition (
        VARIANT_BOOL CaptionAtStartOfLine,
        double x,
        double y );
    void PutLayer (
        _bstr_t _arg1 );
    _bstr_t GetLayer ( );
    void PutViewSide (
        enum TGFramework::SectionViewProfileSide _arg1 );
    enum TGFramework::SectionViewProfileSide GetViewSide ( );
    void PutFoldSegment (
        long _arg1 );
    long GetFoldSegment ( );
    DrawingViewPtr GetSectionView ( );
    DrawingViewPtr CreateView (
        enum DraftSectionViewType SectionType );
    DraftProfilePtr GetProfile ( );
    void PutAuto (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetAuto ( );
};

struct __declspec(uuid("e631c020-894d-11ce-acbe-08003601eb9a"))
_ICuttingPlanesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    CuttingPlanePtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    IDispatchPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
    CuttingPlanePtr Add ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct CuttingPlane * * CuttingPlane ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ IDispatch * * pApp ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * pParent ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[out,retval]*/ struct CuttingPlane * * CuttingPlane ) = 0;
};

enum DraftSectionViewType
{
    seDraftSectionViewTypeStandard = 0,
    seDraftSectionViewTypeRevolved = 1
};

struct __declspec(uuid("2189b19a-4a41-42ba-b3e0-73e89d481399"))
DraftProfile : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetLines2d))
    TGFrameworkSupport::Lines2dPtr Lines2d;
    __declspec(property(get=GetCircles2d))
    TGFrameworkSupport::Circles2dPtr Circles2d;
    __declspec(property(get=GetArcs2d))
    TGFrameworkSupport::Arcs2dPtr Arcs2d;
    __declspec(property(get=GetEllipses2d))
    TGFrameworkSupport::Ellipses2dPtr Ellipses2d;
    __declspec(property(get=GetBsplineCurves2d))
    TGFrameworkSupport::BSplineCurves2dPtr BsplineCurves2d;
    __declspec(property(get=GetEllipticalArcs2d))
    TGFrameworkSupport::EllipticalArcs2dPtr EllipticalArcs2d;
    __declspec(property(get=GetDimensions))
    TGFrameworkSupport::DimensionsPtr Dimensions;
    __declspec(property(get=GetRelations2d))
    TGFrameworkSupport::Relations2dPtr Relations2d;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    enum ProfileValidationStatus Validate ( );
    HRESULT BeginEdit ( );
    HRESULT EndEdit ( );
    TGFrameworkSupport::Lines2dPtr GetLines2d ( );
    TGFrameworkSupport::Circles2dPtr GetCircles2d ( );
    TGFrameworkSupport::Arcs2dPtr GetArcs2d ( );
    TGFrameworkSupport::Ellipses2dPtr GetEllipses2d ( );
    TGFrameworkSupport::BSplineCurves2dPtr GetBsplineCurves2d ( );
    TGFrameworkSupport::EllipticalArcs2dPtr GetEllipticalArcs2d ( );
    TGFrameworkSupport::DimensionsPtr GetDimensions ( );
    TGFrameworkSupport::Relations2dPtr GetRelations2d ( );
};

struct __declspec(uuid("406e53b3-9a8e-4011-be05-82aac2250055"))
_ICuttingPlaneAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetLayer,put=PutLayer))
    _bstr_t Layer;
    __declspec(property(get=GetAuto,put=PutAuto))
    VARIANT_BOOL Auto;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetDisplayCaption,put=PutDisplayCaption))
    VARIANT_BOOL DisplayCaption;
    __declspec(property(get=GetCaption,put=PutCaption))
    _bstr_t Caption;
    __declspec(property(get=GetDisplayType,put=PutDisplayType))
    enum TGFrameworkSupport::DimViewCuttingPlaneDisplayTypeConstants DisplayType;
    __declspec(property(get=GetTextFont,put=PutTextFont))
    _bstr_t TextFont;
    __declspec(property(get=GetTextFontStyle,put=PutTextFontStyle))
    enum TGFrameworkSupport::DimTextFontStyleConstants TextFontStyle;
    __declspec(property(get=GetTextHeight,put=PutTextHeight))
    double TextHeight;
    __declspec(property(get=GetTextRatio,put=PutTextRatio))
    double TextRatio;
    __declspec(property(get=GetTextColor,put=PutTextColor))
    long TextColor;
    __declspec(property(get=GetStyleName,put=PutStyleName))
    _bstr_t StyleName;
    __declspec(property(get=GetTerminatorType,put=PutTerminatorType))
    enum TGFrameworkSupport::DimTermTypeConstants TerminatorType;
    __declspec(property(get=GetTerminatorRatio,put=PutTerminatorRatio))
    double TerminatorRatio;
    __declspec(property(get=GetLineWidth,put=PutLineWidth))
    double LineWidth;
    __declspec(property(get=GetLineType,put=PutLineType))
    _bstr_t LineType;
    __declspec(property(get=GetCaptionDefinitionText,put=PutCaptionDefinitionText))
    _bstr_t CaptionDefinitionText;
    __declspec(property(get=GetCaptionDisplayedText))
    _bstr_t CaptionDisplayedText;
    __declspec(property(get=GetSourceDrawingView))
    DrawingViewPtr SourceDrawingView;
    __declspec(property(get=GetViewSheetNumberDefinitionText,put=PutViewSheetNumberDefinitionText))
    _bstr_t ViewSheetNumberDefinitionText;
    __declspec(property(get=GetDisplayViewSheetNumber,put=PutDisplayViewSheetNumber))
    VARIANT_BOOL DisplayViewSheetNumber;
    __declspec(property(get=GetViewSheetNumberLocation,put=PutViewSheetNumberLocation))
    enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants ViewSheetNumberLocation;
    __declspec(property(get=GetLineDisplayStyle,put=PutLineDisplayStyle))
    enum TGFrameworkSupport::CuttingPlaneLineDisplayStyleConstants LineDisplayStyle;
    __declspec(property(get=GetThickLineLengthRatio,put=PutThickLineLengthRatio))
    double ThickLineLengthRatio;
    __declspec(property(get=GetThickLineArrowOffset,put=PutThickLineArrowOffset))
    double ThickLineArrowOffset;
    __declspec(property(get=GetProfile))
    DraftProfilePtr Profile;
    __declspec(property(get=GetViewSide,put=PutViewSide))
    enum TGFramework::SectionViewProfileSide ViewSide;
    __declspec(property(get=GetSectionView))
    DrawingViewPtr SectionView;
    __declspec(property(get=GetFoldSegment,put=PutFoldSegment))
    long FoldSegment;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    VARIANT_BOOL GetDisplayCaption ( );
    void PutDisplayCaption (
        VARIANT_BOOL pDisplayCaption );
    _bstr_t GetCaption ( );
    void PutCaption (
        _bstr_t pCaption );
    enum TGFrameworkSupport::DimViewCuttingPlaneDisplayTypeConstants GetDisplayType ( );
    void PutDisplayType (
        enum TGFrameworkSupport::DimViewCuttingPlaneDisplayTypeConstants DisplayType );
    _bstr_t GetTextFont ( );
    void PutTextFont (
        _bstr_t TextFont );
    enum TGFrameworkSupport::DimTextFontStyleConstants GetTextFontStyle ( );
    void PutTextFontStyle (
        enum TGFrameworkSupport::DimTextFontStyleConstants TextFontStyle );
    double GetTextHeight ( );
    void PutTextHeight (
        double TextHeight );
    double GetTextRatio ( );
    void PutTextRatio (
        double TextRatio );
    long GetTextColor ( );
    void PutTextColor (
        long TextColor );
    _bstr_t GetStyleName ( );
    void PutStyleName (
        _bstr_t StyleName );
    enum TGFrameworkSupport::DimTermTypeConstants GetTerminatorType ( );
    void PutTerminatorType (
        enum TGFrameworkSupport::DimTermTypeConstants TerminatorType );
    double GetTerminatorRatio ( );
    void PutTerminatorRatio (
        double TerminatorRatio );
    double GetLineWidth ( );
    void PutLineWidth (
        double LineWidth );
    _bstr_t GetLineType ( );
    void PutLineType (
        _bstr_t LineType );
    _bstr_t GetCaptionDefinitionText ( );
    void PutCaptionDefinitionText (
        _bstr_t CaptionDefinitionText );
    _bstr_t GetCaptionDisplayedText ( );
    DrawingViewPtr GetSourceDrawingView ( );
    HRESULT GetFoldLineWithViewDirection (
        double * LineStartX,
        double * LineStartY,
        double * LineEndX,
        double * LineEndY,
        double * ViewDirectionX,
        double * ViewDirectionY );
    _bstr_t GetViewSheetNumberDefinitionText ( );
    void PutViewSheetNumberDefinitionText (
        _bstr_t ViewSheetNumberDefinitionText );
    VARIANT_BOOL GetDisplayViewSheetNumber ( );
    void PutDisplayViewSheetNumber (
        VARIANT_BOOL DisplayViewSheetNumber );
    enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants GetViewSheetNumberLocation ( );
    void PutViewSheetNumberLocation (
        enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants ViewSheetNumberLocation );
    enum TGFrameworkSupport::CuttingPlaneLineDisplayStyleConstants GetLineDisplayStyle ( );
    void PutLineDisplayStyle (
        enum TGFrameworkSupport::CuttingPlaneLineDisplayStyleConstants LineDisplayStyle );
    double GetThickLineLengthRatio ( );
    void PutThickLineLengthRatio (
        double ThickLineLengthRatio );
    double GetThickLineArrowOffset ( );
    void PutThickLineArrowOffset (
        double ThickLineArrowOffset );
    HRESULT GetCaptionPosition (
        VARIANT_BOOL CaptionAtStartOfLine,
        double * x,
        double * y );
    HRESULT SetCaptionPosition (
        VARIANT_BOOL CaptionAtStartOfLine,
        double x,
        double y );
    void PutLayer (
        _bstr_t Layer );
    _bstr_t GetLayer ( );
    void PutViewSide (
        enum TGFramework::SectionViewProfileSide Side );
    enum TGFramework::SectionViewProfileSide GetViewSide ( );
    void PutFoldSegment (
        long Segment );
    long GetFoldSegment ( );
    DrawingViewPtr GetSectionView ( );
    DrawingViewPtr CreateView (
        enum DraftSectionViewType SectionType );
    DraftProfilePtr GetProfile ( );
    void PutAuto (
        VARIANT_BOOL value );
    VARIANT_BOOL GetAuto ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_DisplayCaption (
        /*[out,retval]*/ VARIANT_BOOL * pDisplayCaption ) = 0;
      virtual HRESULT __stdcall put_DisplayCaption (
        /*[in]*/ VARIANT_BOOL pDisplayCaption ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * pCaption ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR pCaption ) = 0;
      virtual HRESULT __stdcall get_DisplayType (
        /*[out,retval]*/ enum TGFrameworkSupport::DimViewCuttingPlaneDisplayTypeConstants * DisplayType ) = 0;
      virtual HRESULT __stdcall put_DisplayType (
        /*[in]*/ enum TGFrameworkSupport::DimViewCuttingPlaneDisplayTypeConstants DisplayType ) = 0;
      virtual HRESULT __stdcall get_TextFont (
        /*[out,retval]*/ BSTR * TextFont ) = 0;
      virtual HRESULT __stdcall put_TextFont (
        /*[in]*/ BSTR TextFont ) = 0;
      virtual HRESULT __stdcall get_TextFontStyle (
        /*[out,retval]*/ enum TGFrameworkSupport::DimTextFontStyleConstants * TextFontStyle ) = 0;
      virtual HRESULT __stdcall put_TextFontStyle (
        /*[in]*/ enum TGFrameworkSupport::DimTextFontStyleConstants TextFontStyle ) = 0;
      virtual HRESULT __stdcall get_TextHeight (
        /*[out,retval]*/ double * TextHeight ) = 0;
      virtual HRESULT __stdcall put_TextHeight (
        /*[in]*/ double TextHeight ) = 0;
      virtual HRESULT __stdcall get_TextRatio (
        /*[out,retval]*/ double * TextRatio ) = 0;
      virtual HRESULT __stdcall put_TextRatio (
        /*[in]*/ double TextRatio ) = 0;
      virtual HRESULT __stdcall get_TextColor (
        /*[out,retval]*/ long * TextColor ) = 0;
      virtual HRESULT __stdcall put_TextColor (
        /*[in]*/ long TextColor ) = 0;
      virtual HRESULT __stdcall get_StyleName (
        /*[out,retval]*/ BSTR * StyleName ) = 0;
      virtual HRESULT __stdcall put_StyleName (
        /*[in]*/ BSTR StyleName ) = 0;
      virtual HRESULT __stdcall get_TerminatorType (
        /*[out,retval]*/ enum TGFrameworkSupport::DimTermTypeConstants * TerminatorType ) = 0;
      virtual HRESULT __stdcall put_TerminatorType (
        /*[in]*/ enum TGFrameworkSupport::DimTermTypeConstants TerminatorType ) = 0;
      virtual HRESULT __stdcall get_TerminatorRatio (
        /*[out,retval]*/ double * TerminatorRatio ) = 0;
      virtual HRESULT __stdcall put_TerminatorRatio (
        /*[in]*/ double TerminatorRatio ) = 0;
      virtual HRESULT __stdcall get_LineWidth (
        /*[out,retval]*/ double * LineWidth ) = 0;
      virtual HRESULT __stdcall put_LineWidth (
        /*[in]*/ double LineWidth ) = 0;
      virtual HRESULT __stdcall get_LineType (
        /*[out,retval]*/ BSTR * LineType ) = 0;
      virtual HRESULT __stdcall put_LineType (
        /*[in]*/ BSTR LineType ) = 0;
      virtual HRESULT __stdcall get_CaptionDefinitionText (
        /*[out,retval]*/ BSTR * CaptionDefinitionText ) = 0;
      virtual HRESULT __stdcall put_CaptionDefinitionText (
        /*[in]*/ BSTR CaptionDefinitionText ) = 0;
      virtual HRESULT __stdcall get_CaptionDisplayedText (
        /*[out,retval]*/ BSTR * CaptionDisplayedText ) = 0;
      virtual HRESULT __stdcall get_SourceDrawingView (
        /*[out,retval]*/ struct DrawingView * * DrawingView ) = 0;
      virtual HRESULT __stdcall raw_GetFoldLineWithViewDirection (
        /*[out]*/ double * LineStartX,
        /*[out]*/ double * LineStartY,
        /*[out]*/ double * LineEndX,
        /*[out]*/ double * LineEndY,
        /*[out]*/ double * ViewDirectionX,
        /*[out]*/ double * ViewDirectionY ) = 0;
      virtual HRESULT __stdcall get_ViewSheetNumberDefinitionText (
        /*[out,retval]*/ BSTR * ViewSheetNumberDefinitionText ) = 0;
      virtual HRESULT __stdcall put_ViewSheetNumberDefinitionText (
        /*[in]*/ BSTR ViewSheetNumberDefinitionText ) = 0;
      virtual HRESULT __stdcall get_DisplayViewSheetNumber (
        /*[out,retval]*/ VARIANT_BOOL * DisplayViewSheetNumber ) = 0;
      virtual HRESULT __stdcall put_DisplayViewSheetNumber (
        /*[in]*/ VARIANT_BOOL DisplayViewSheetNumber ) = 0;
      virtual HRESULT __stdcall get_ViewSheetNumberLocation (
        /*[out,retval]*/ enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants * ViewSheetNumberLocation ) = 0;
      virtual HRESULT __stdcall put_ViewSheetNumberLocation (
        /*[in]*/ enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants ViewSheetNumberLocation ) = 0;
      virtual HRESULT __stdcall get_LineDisplayStyle (
        /*[out,retval]*/ enum TGFrameworkSupport::CuttingPlaneLineDisplayStyleConstants * LineDisplayStyle ) = 0;
      virtual HRESULT __stdcall put_LineDisplayStyle (
        /*[in]*/ enum TGFrameworkSupport::CuttingPlaneLineDisplayStyleConstants LineDisplayStyle ) = 0;
      virtual HRESULT __stdcall get_ThickLineLengthRatio (
        /*[out,retval]*/ double * ThickLineLengthRatio ) = 0;
      virtual HRESULT __stdcall put_ThickLineLengthRatio (
        /*[in]*/ double ThickLineLengthRatio ) = 0;
      virtual HRESULT __stdcall get_ThickLineArrowOffset (
        /*[out,retval]*/ double * ThickLineArrowOffset ) = 0;
      virtual HRESULT __stdcall put_ThickLineArrowOffset (
        /*[in]*/ double ThickLineArrowOffset ) = 0;
      virtual HRESULT __stdcall raw_GetCaptionPosition (
        /*[in]*/ VARIANT_BOOL CaptionAtStartOfLine,
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall raw_SetCaptionPosition (
        /*[in]*/ VARIANT_BOOL CaptionAtStartOfLine,
        /*[in]*/ double x,
        /*[in]*/ double y ) = 0;
      virtual HRESULT __stdcall put_Layer (
        /*[in]*/ BSTR Layer ) = 0;
      virtual HRESULT __stdcall get_Layer (
        /*[out,retval]*/ BSTR * Layer ) = 0;
      virtual HRESULT __stdcall put_ViewSide (
        /*[in]*/ enum TGFramework::SectionViewProfileSide Side ) = 0;
      virtual HRESULT __stdcall get_ViewSide (
        /*[out,retval]*/ enum TGFramework::SectionViewProfileSide * Side ) = 0;
      virtual HRESULT __stdcall put_FoldSegment (
        /*[in]*/ long Segment ) = 0;
      virtual HRESULT __stdcall get_FoldSegment (
        /*[out,retval]*/ long * Segment ) = 0;
      virtual HRESULT __stdcall get_SectionView (
        /*[out,retval]*/ struct DrawingView * * DrawingView ) = 0;
      virtual HRESULT __stdcall raw_CreateView (
        /*[in]*/ enum DraftSectionViewType SectionType,
        /*[out,retval]*/ struct DrawingView * * DrawingView ) = 0;
      virtual HRESULT __stdcall get_Profile (
        /*[out,retval]*/ struct DraftProfile * * Profile ) = 0;
      virtual HRESULT __stdcall put_Auto (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_Auto (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
};

enum ProfileValidationStatus
{
    igProfileStatusValid = 0,
    igProfileStatusInvalid = -1
};

struct __declspec(uuid("41435b59-152a-4265-8b34-c7793feed7cb"))
_IDraftProfileAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetLines2d))
    TGFrameworkSupport::Lines2dPtr Lines2d;
    __declspec(property(get=GetCircles2d))
    TGFrameworkSupport::Circles2dPtr Circles2d;
    __declspec(property(get=GetArcs2d))
    TGFrameworkSupport::Arcs2dPtr Arcs2d;
    __declspec(property(get=GetEllipses2d))
    TGFrameworkSupport::Ellipses2dPtr Ellipses2d;
    __declspec(property(get=GetBsplineCurves2d))
    TGFrameworkSupport::BSplineCurves2dPtr BsplineCurves2d;
    __declspec(property(get=GetEllipticalArcs2d))
    TGFrameworkSupport::EllipticalArcs2dPtr EllipticalArcs2d;
    __declspec(property(get=GetDimensions))
    TGFrameworkSupport::DimensionsPtr Dimensions;
    __declspec(property(get=GetRelations2d))
    TGFrameworkSupport::Relations2dPtr Relations2d;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    enum ProfileValidationStatus Validate ( );
    HRESULT BeginEdit ( );
    HRESULT EndEdit ( );
    TGFrameworkSupport::Lines2dPtr GetLines2d ( );
    TGFrameworkSupport::Circles2dPtr GetCircles2d ( );
    TGFrameworkSupport::Arcs2dPtr GetArcs2d ( );
    TGFrameworkSupport::Ellipses2dPtr GetEllipses2d ( );
    TGFrameworkSupport::BSplineCurves2dPtr GetBsplineCurves2d ( );
    TGFrameworkSupport::EllipticalArcs2dPtr GetEllipticalArcs2d ( );
    TGFrameworkSupport::DimensionsPtr GetDimensions ( );
    TGFrameworkSupport::Relations2dPtr GetRelations2d ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Validate (
        /*[out,retval]*/ enum ProfileValidationStatus * Status ) = 0;
      virtual HRESULT __stdcall raw_BeginEdit ( ) = 0;
      virtual HRESULT __stdcall raw_EndEdit ( ) = 0;
      virtual HRESULT __stdcall get_Lines2d (
        /*[out,retval]*/ struct TGFrameworkSupport::Lines2d * * Lines2d ) = 0;
      virtual HRESULT __stdcall get_Circles2d (
        /*[out,retval]*/ struct TGFrameworkSupport::Circles2d * * Circles2d ) = 0;
      virtual HRESULT __stdcall get_Arcs2d (
        /*[out,retval]*/ struct TGFrameworkSupport::Arcs2d * * Arcs2d ) = 0;
      virtual HRESULT __stdcall get_Ellipses2d (
        /*[out,retval]*/ struct TGFrameworkSupport::Ellipses2d * * Ellipses2d ) = 0;
      virtual HRESULT __stdcall get_BsplineCurves2d (
        /*[out,retval]*/ struct TGFrameworkSupport::BSplineCurves2d * * Bsplines2d ) = 0;
      virtual HRESULT __stdcall get_EllipticalArcs2d (
        /*[out,retval]*/ struct TGFrameworkSupport::EllipticalArcs2d * * EllipArcs2d ) = 0;
      virtual HRESULT __stdcall get_Dimensions (
        /*[out,retval]*/ struct TGFrameworkSupport::Dimensions * * Dimensions ) = 0;
      virtual HRESULT __stdcall get_Relations2d (
        /*[out,retval]*/ struct TGFrameworkSupport::Relations2d * * pRelations ) = 0;
};

struct __declspec(uuid("73688157-01d1-47f4-b122-5f68950dd39b"))
BrokenOutSectionProfiles : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    BrokenOutSectionProfilePtr Item (
        const _variant_t & Index );
    IDispatchPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
    BrokenOutSectionProfilePtr Add (
        struct DrawingView * TargetView );
};

struct __declspec(uuid("481e02b1-f278-4eb9-bfc6-7200a1e5a1ad"))
BrokenOutSectionProfile : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetLayer,put=PutLayer))
    _bstr_t Layer;
    __declspec(property(get=GetProfile))
    DraftProfilePtr Profile;
    __declspec(property(get=GetDepth,put=PutDepth))
    double Depth;
    __declspec(property(get=GetTargetView,put=PutTargetView))
    DrawingViewPtr TargetView;
    __declspec(property(get=GetDepthPlaneOffset,put=PutDepthPlaneOffset))
    double DepthPlaneOffset;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    void PutLayer (
        _bstr_t _arg1 );
    _bstr_t GetLayer ( );
    DraftProfilePtr GetProfile ( );
    DrawingViewPtr GetTargetView ( );
    void PutTargetView (
        struct DrawingView * _arg1 );
    double GetDepth ( );
    void PutDepth (
        double _arg1 );
    double GetDepthPlaneOffset ( );
    void PutDepthPlaneOffset (
        double _arg1 );
};

struct __declspec(uuid("c6929ce1-515c-4f4a-be4b-fe54f75918aa"))
_IBrokenOutSectionProfilesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    BrokenOutSectionProfilePtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    IDispatchPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
    BrokenOutSectionProfilePtr Add (
        struct DrawingView * TargetView );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct BrokenOutSectionProfile * * BrokenOutSectionProfile ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ IDispatch * * pApp ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * pParent ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ struct DrawingView * TargetView,
        /*[out,retval]*/ struct BrokenOutSectionProfile * * BrokenOutSectionProfile ) = 0;
};

struct __declspec(uuid("8ad7a363-3da2-483a-a091-0f43462f6544"))
_IBrokenOutSectionProfileAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetLayer,put=PutLayer))
    _bstr_t Layer;
    __declspec(property(get=GetProfile))
    DraftProfilePtr Profile;
    __declspec(property(get=GetDepth,put=PutDepth))
    double Depth;
    __declspec(property(get=GetTargetView,put=PutTargetView))
    DrawingViewPtr TargetView;
    __declspec(property(get=GetDepthPlaneOffset,put=PutDepthPlaneOffset))
    double DepthPlaneOffset;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    void PutLayer (
        _bstr_t Layer );
    _bstr_t GetLayer ( );
    DraftProfilePtr GetProfile ( );
    DrawingViewPtr GetTargetView ( );
    void PutTargetView (
        struct DrawingView * TargetView );
    double GetDepth ( );
    void PutDepth (
        double RelativeDepth );
    double GetDepthPlaneOffset ( );
    void PutDepthPlaneOffset (
        double offset );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall put_Layer (
        /*[in]*/ BSTR Layer ) = 0;
      virtual HRESULT __stdcall get_Layer (
        /*[out,retval]*/ BSTR * Layer ) = 0;
      virtual HRESULT __stdcall get_Profile (
        /*[out,retval]*/ struct DraftProfile * * Profile ) = 0;
      virtual HRESULT __stdcall get_TargetView (
        /*[out,retval]*/ struct DrawingView * * TargetView ) = 0;
      virtual HRESULT __stdcall put_TargetView (
        /*[in]*/ struct DrawingView * TargetView ) = 0;
      virtual HRESULT __stdcall get_Depth (
        /*[out,retval]*/ double * RelativeDepth ) = 0;
      virtual HRESULT __stdcall put_Depth (
        /*[in]*/ double RelativeDepth ) = 0;
      virtual HRESULT __stdcall get_DepthPlaneOffset (
        /*[out,retval]*/ double * offset ) = 0;
      virtual HRESULT __stdcall put_DepthPlaneOffset (
        /*[in]*/ double offset ) = 0;
};

struct __declspec(uuid("ee600ec8-bd5e-4a32-ae58-ae1265e6aaac"))
DetailEnvelopes : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    DetailEnvelopePtr Item (
        const _variant_t & Index );
    IDispatchPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
};

struct __declspec(uuid("d2baa3a0-e799-11ce-90af-08003601eb9a"))
DetailEnvelope : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDisplayCaption,put=PutDisplayCaption))
    VARIANT_BOOL DisplayCaption;
    __declspec(property(get=GetSourceDrawingView))
    DrawingViewPtr SourceDrawingView;
    __declspec(property(get=GetCaption,put=PutCaption))
    _bstr_t Caption;
    __declspec(property(get=GetDiameter,put=PutDiameter))
    double Diameter;
    __declspec(property(get=GetTextFont,put=PutTextFont))
    _bstr_t TextFont;
    __declspec(property(get=GetTextFontStyle,put=PutTextFontStyle))
    enum TGFrameworkSupport::DimTextFontStyleConstants TextFontStyle;
    __declspec(property(get=GetTextHeight,put=PutTextHeight))
    double TextHeight;
    __declspec(property(get=GetTextRatio,put=PutTextRatio))
    double TextRatio;
    __declspec(property(get=GetTextColor,put=PutTextColor))
    long TextColor;
    __declspec(property(get=GetStyleName,put=PutStyleName))
    _bstr_t StyleName;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];
    __declspec(property(get=GetLineWidth,put=PutLineWidth))
    double LineWidth;
    __declspec(property(get=GetLineType,put=PutLineType))
    _bstr_t LineType;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetName))
    _bstr_t Name[];
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetType))
    long Type;
    __declspec(property(get=GetZOrder))
    long ZOrder;
    __declspec(property(get=GetKey))
    _bstr_t Key[];
    __declspec(property(get=GetDocument))
    IDispatchPtr Document;
    __declspec(property(get=GetDisplayStandard,put=PutDisplayStandard))
    enum DetailEnvelopeStandardConstants DisplayStandard;
    __declspec(property(get=GetDisplayAsCircle,put=PutDisplayAsCircle))
    VARIANT_BOOL DisplayAsCircle;
    __declspec(property(get=GetCaptionDefinitionText,put=PutCaptionDefinitionText))
    _bstr_t CaptionDefinitionText;
    __declspec(property(get=GetCaptionDisplayedText))
    _bstr_t CaptionDisplayedText;
    __declspec(property(get=GetViewSheetNumberDefinitionText,put=PutViewSheetNumberDefinitionText))
    _bstr_t ViewSheetNumberDefinitionText;
    __declspec(property(get=GetDisplayViewSheetNumber,put=PutDisplayViewSheetNumber))
    VARIANT_BOOL DisplayViewSheetNumber;
    __declspec(property(get=GetLayer,put=PutLayer))
    _bstr_t Layer;
    __declspec(property(get=GetDetailView))
    DrawingViewPtr DetailView;
    __declspec(property(get=GetProfile))
    DraftProfilePtr Profile;
    __declspec(property(get=GetAuto,put=PutAuto))
    VARIANT_BOOL Auto;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    VARIANT_BOOL GetDisplayCaption ( );
    void PutDisplayCaption (
        VARIANT_BOOL _arg1 );
    DrawingViewPtr GetSourceDrawingView ( );
    _bstr_t GetCaption ( );
    void PutCaption (
        _bstr_t _arg1 );
    double GetDiameter ( );
    void PutDiameter (
        double _arg1 );
    HRESULT GetCenterPoint (
        double * x,
        double * y );
    HRESULT SetCenterPoint (
        double x,
        double y );
    double GetLineWidth ( );
    void PutLineWidth (
        double _arg1 );
    _bstr_t GetLineType ( );
    void PutLineType (
        _bstr_t _arg1 );
    _bstr_t GetTextFont ( );
    void PutTextFont (
        _bstr_t _arg1 );
    enum TGFrameworkSupport::DimTextFontStyleConstants GetTextFontStyle ( );
    void PutTextFontStyle (
        enum TGFrameworkSupport::DimTextFontStyleConstants _arg1 );
    double GetTextHeight ( );
    void PutTextHeight (
        double _arg1 );
    double GetTextRatio ( );
    void PutTextRatio (
        double _arg1 );
    long GetTextColor ( );
    void PutTextColor (
        long _arg1 );
    _bstr_t GetStyleName ( );
    void PutStyleName (
        _bstr_t _arg1 );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetIndex ( );
    _bstr_t GetName (
        const _variant_t & Recurse );
    IDispatchPtr GetParent ( );
    long GetType ( );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL * _arg1 );
    long GetZOrder ( );
    _bstr_t GetKey (
        const _variant_t & Recurse = vtMissing );
    IDispatchPtr GetDocument ( );
    HRESULT Copy ( );
    HRESULT Cut ( );
    HRESULT Delete ( );
    HRESULT BringToFront ( );
    HRESULT BringForward ( );
    HRESULT SendToBack ( );
    HRESULT SendBackward ( );
    HRESULT Select ( );
    HRESULT Range (
        double * min_x,
        double * min_y,
        double * max_x,
        double * max_y );
    enum DetailEnvelopeStandardConstants GetDisplayStandard ( );
    void PutDisplayStandard (
        enum DetailEnvelopeStandardConstants _arg1 );
    VARIANT_BOOL GetDisplayAsCircle ( );
    void PutDisplayAsCircle (
        VARIANT_BOOL _arg1 );
    _bstr_t GetCaptionDefinitionText ( );
    void PutCaptionDefinitionText (
        _bstr_t _arg1 );
    _bstr_t GetCaptionDisplayedText ( );
    _bstr_t GetViewSheetNumberDefinitionText ( );
    void PutViewSheetNumberDefinitionText (
        _bstr_t _arg1 );
    VARIANT_BOOL GetDisplayViewSheetNumber ( );
    void PutDisplayViewSheetNumber (
        VARIANT_BOOL _arg1 );
    HRESULT GetCaptionPosition (
        double * x,
        double * y );
    HRESULT SetCaptionPosition (
        double x,
        double y );
    void PutLayer (
        _bstr_t _arg1 );
    _bstr_t GetLayer ( );
    DrawingViewPtr GetDetailView ( );
    DraftProfilePtr GetProfile ( );
    void PutAuto (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetAuto ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
};

struct __declspec(uuid("7fc045f7-bf3a-4fdb-9a8d-f3241dc2a8f2"))
_IDetailEnvelopesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    DetailEnvelopePtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    IDispatchPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct DetailEnvelope * * DetailEnvelope ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ IDispatch * * pApp ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * pParent ) = 0;
};

enum DetailEnvelopeStandardConstants
{
    seDetailEnvelopeANSI = 0,
    seDetailEnvelopeISO = 1,
    seDetailEnvelopeESKD = 2
};

struct __declspec(uuid("a1dc4790-e799-11ce-90af-08003601eb9a"))
_IDetailEnvelopeAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetDisplayCaption,put=PutDisplayCaption))
    VARIANT_BOOL DisplayCaption;
    __declspec(property(get=GetSourceDrawingView))
    DrawingViewPtr SourceDrawingView;
    __declspec(property(get=GetCaption,put=PutCaption))
    _bstr_t Caption;
    __declspec(property(get=GetDiameter,put=PutDiameter))
    double Diameter;
    __declspec(property(get=GetTextFont,put=PutTextFont))
    _bstr_t TextFont;
    __declspec(property(get=GetTextFontStyle,put=PutTextFontStyle))
    enum TGFrameworkSupport::DimTextFontStyleConstants TextFontStyle;
    __declspec(property(get=GetTextHeight,put=PutTextHeight))
    double TextHeight;
    __declspec(property(get=GetTextRatio,put=PutTextRatio))
    double TextRatio;
    __declspec(property(get=GetTextColor,put=PutTextColor))
    long TextColor;
    __declspec(property(get=GetStyleName,put=PutStyleName))
    _bstr_t StyleName;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];
    __declspec(property(get=GetLineWidth,put=PutLineWidth))
    double LineWidth;
    __declspec(property(get=GetLineType,put=PutLineType))
    _bstr_t LineType;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetName))
    _bstr_t Name[][];
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetType))
    long Type;
    __declspec(property(get=GetZOrder))
    long ZOrder;
    __declspec(property(get=GetKey))
    _bstr_t Key[];
    __declspec(property(get=GetDocument))
    IDispatchPtr Document;
    __declspec(property(get=GetDisplayStandard,put=PutDisplayStandard))
    enum DetailEnvelopeStandardConstants DisplayStandard;
    __declspec(property(get=GetDisplayAsCircle,put=PutDisplayAsCircle))
    VARIANT_BOOL DisplayAsCircle;
    __declspec(property(get=GetCaptionDefinitionText,put=PutCaptionDefinitionText))
    _bstr_t CaptionDefinitionText;
    __declspec(property(get=GetCaptionDisplayedText))
    _bstr_t CaptionDisplayedText;
    __declspec(property(get=GetViewSheetNumberDefinitionText,put=PutViewSheetNumberDefinitionText))
    _bstr_t ViewSheetNumberDefinitionText;
    __declspec(property(get=GetDisplayViewSheetNumber,put=PutDisplayViewSheetNumber))
    VARIANT_BOOL DisplayViewSheetNumber;
    __declspec(property(get=GetLayer,put=PutLayer))
    _bstr_t Layer;
    __declspec(property(get=GetDetailView))
    DrawingViewPtr DetailView;
    __declspec(property(get=GetProfile))
    DraftProfilePtr Profile;
    __declspec(property(get=GetAuto,put=PutAuto))
    VARIANT_BOOL Auto;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetDisplayCaption ( );
    void PutDisplayCaption (
        VARIANT_BOOL pDisplayCaption );
    DrawingViewPtr GetSourceDrawingView ( );
    _bstr_t GetCaption ( );
    void PutCaption (
        _bstr_t Caption );
    double GetDiameter ( );
    void PutDiameter (
        double Diameter );
    HRESULT GetCenterPoint (
        double * x,
        double * y );
    HRESULT SetCenterPoint (
        double x,
        double y );
    double GetLineWidth ( );
    void PutLineWidth (
        double LineWidth );
    _bstr_t GetLineType ( );
    void PutLineType (
        _bstr_t LineType );
    _bstr_t GetTextFont ( );
    void PutTextFont (
        _bstr_t TextFont );
    enum TGFrameworkSupport::DimTextFontStyleConstants GetTextFontStyle ( );
    void PutTextFontStyle (
        enum TGFrameworkSupport::DimTextFontStyleConstants TextFontStyle );
    double GetTextHeight ( );
    void PutTextHeight (
        double TextHeight );
    double GetTextRatio ( );
    void PutTextRatio (
        double TextRatio );
    long GetTextColor ( );
    void PutTextColor (
        long TextColor );
    _bstr_t GetStyleName ( );
    void PutStyleName (
        _bstr_t StyleName );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetIndex ( );
    _bstr_t GetName (
        const _variant_t & Recurse,
        long Lcid = 0 );
    IDispatchPtr GetParent ( );
    long GetType ( );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL * Toggle );
    long GetZOrder ( );
    _bstr_t GetKey (
        const _variant_t & Recurse = vtMissing );
    IDispatchPtr GetDocument ( );
    HRESULT Copy ( );
    HRESULT Cut ( );
    HRESULT Delete ( );
    HRESULT BringToFront ( );
    HRESULT BringForward ( );
    HRESULT SendToBack ( );
    HRESULT SendBackward ( );
    HRESULT Select ( );
    HRESULT Range (
        double * min_x,
        double * min_y,
        double * max_x,
        double * max_y );
    enum DetailEnvelopeStandardConstants GetDisplayStandard ( );
    void PutDisplayStandard (
        enum DetailEnvelopeStandardConstants value );
    VARIANT_BOOL GetDisplayAsCircle ( );
    void PutDisplayAsCircle (
        VARIANT_BOOL value );
    _bstr_t GetCaptionDefinitionText ( );
    void PutCaptionDefinitionText (
        _bstr_t CaptionDefinitionText );
    _bstr_t GetCaptionDisplayedText ( );
    _bstr_t GetViewSheetNumberDefinitionText ( );
    void PutViewSheetNumberDefinitionText (
        _bstr_t ViewSheetNumberDefinitionText );
    VARIANT_BOOL GetDisplayViewSheetNumber ( );
    void PutDisplayViewSheetNumber (
        VARIANT_BOOL DisplayViewSheetNumber );
    HRESULT GetCaptionPosition (
        double * x,
        double * y );
    HRESULT SetCaptionPosition (
        double x,
        double y );
    void PutLayer (
        _bstr_t Layer );
    _bstr_t GetLayer ( );
    DrawingViewPtr GetDetailView ( );
    DraftProfilePtr GetProfile ( );
    void PutAuto (
        VARIANT_BOOL value );
    VARIANT_BOOL GetAuto ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DisplayCaption (
        /*[out,retval]*/ VARIANT_BOOL * pDisplayCaption ) = 0;
      virtual HRESULT __stdcall put_DisplayCaption (
        /*[in]*/ VARIANT_BOOL pDisplayCaption ) = 0;
      virtual HRESULT __stdcall get_SourceDrawingView (
        /*[out,retval]*/ struct DrawingView * * ppView ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * Caption ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR Caption ) = 0;
      virtual HRESULT __stdcall get_Diameter (
        /*[out,retval]*/ double * Diameter ) = 0;
      virtual HRESULT __stdcall put_Diameter (
        /*[in]*/ double Diameter ) = 0;
      virtual HRESULT __stdcall raw_GetCenterPoint (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall raw_SetCenterPoint (
        /*[in]*/ double x,
        /*[in]*/ double y ) = 0;
      virtual HRESULT __stdcall get_LineWidth (
        /*[out,retval]*/ double * LineWidth ) = 0;
      virtual HRESULT __stdcall put_LineWidth (
        /*[in]*/ double LineWidth ) = 0;
      virtual HRESULT __stdcall get_LineType (
        /*[out,retval]*/ BSTR * LineType ) = 0;
      virtual HRESULT __stdcall put_LineType (
        /*[in]*/ BSTR LineType ) = 0;
      virtual HRESULT __stdcall get_TextFont (
        /*[out,retval]*/ BSTR * TextFont ) = 0;
      virtual HRESULT __stdcall put_TextFont (
        /*[in]*/ BSTR TextFont ) = 0;
      virtual HRESULT __stdcall get_TextFontStyle (
        /*[out,retval]*/ enum TGFrameworkSupport::DimTextFontStyleConstants * TextFontStyle ) = 0;
      virtual HRESULT __stdcall put_TextFontStyle (
        /*[in]*/ enum TGFrameworkSupport::DimTextFontStyleConstants TextFontStyle ) = 0;
      virtual HRESULT __stdcall get_TextHeight (
        /*[out,retval]*/ double * TextHeight ) = 0;
      virtual HRESULT __stdcall put_TextHeight (
        /*[in]*/ double TextHeight ) = 0;
      virtual HRESULT __stdcall get_TextRatio (
        /*[out,retval]*/ double * TextRatio ) = 0;
      virtual HRESULT __stdcall put_TextRatio (
        /*[in]*/ double TextRatio ) = 0;
      virtual HRESULT __stdcall get_TextColor (
        /*[out,retval]*/ long * TextColor ) = 0;
      virtual HRESULT __stdcall put_TextColor (
        /*[in]*/ long TextColor ) = 0;
      virtual HRESULT __stdcall get_StyleName (
        /*[out,retval]*/ BSTR * StyleName ) = 0;
      virtual HRESULT __stdcall put_StyleName (
        /*[in]*/ BSTR StyleName ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[in]*/ VARIANT Recurse,
        /*[in,lcid]*/ long Lcid,
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Toggle ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL * Toggle ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * ZOrder ) = 0;
      virtual HRESULT __stdcall get_Key (
        /*[in]*/ VARIANT Recurse,
        /*[out,retval]*/ BSTR * Key ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ IDispatch * * Document ) = 0;
      virtual HRESULT __stdcall raw_Copy ( ) = 0;
      virtual HRESULT __stdcall raw_Cut ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_BringToFront ( ) = 0;
      virtual HRESULT __stdcall raw_BringForward ( ) = 0;
      virtual HRESULT __stdcall raw_SendToBack ( ) = 0;
      virtual HRESULT __stdcall raw_SendBackward ( ) = 0;
      virtual HRESULT __stdcall raw_Select ( ) = 0;
      virtual HRESULT __stdcall raw_Range (
        /*[out]*/ double * min_x,
        /*[out]*/ double * min_y,
        /*[out]*/ double * max_x,
        /*[out]*/ double * max_y ) = 0;
      virtual HRESULT __stdcall get_DisplayStandard (
        /*[out,retval]*/ enum DetailEnvelopeStandardConstants * value ) = 0;
      virtual HRESULT __stdcall put_DisplayStandard (
        /*[in]*/ enum DetailEnvelopeStandardConstants value ) = 0;
      virtual HRESULT __stdcall get_DisplayAsCircle (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DisplayAsCircle (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_CaptionDefinitionText (
        /*[out,retval]*/ BSTR * CaptionDefinitionText ) = 0;
      virtual HRESULT __stdcall put_CaptionDefinitionText (
        /*[in]*/ BSTR CaptionDefinitionText ) = 0;
      virtual HRESULT __stdcall get_CaptionDisplayedText (
        /*[out,retval]*/ BSTR * CaptionDisplayedText ) = 0;
      virtual HRESULT __stdcall get_ViewSheetNumberDefinitionText (
        /*[out,retval]*/ BSTR * ViewSheetNumberDefinitionText ) = 0;
      virtual HRESULT __stdcall put_ViewSheetNumberDefinitionText (
        /*[in]*/ BSTR ViewSheetNumberDefinitionText ) = 0;
      virtual HRESULT __stdcall get_DisplayViewSheetNumber (
        /*[out,retval]*/ VARIANT_BOOL * DisplayViewSheetNumber ) = 0;
      virtual HRESULT __stdcall put_DisplayViewSheetNumber (
        /*[in]*/ VARIANT_BOOL DisplayViewSheetNumber ) = 0;
      virtual HRESULT __stdcall raw_GetCaptionPosition (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall raw_SetCaptionPosition (
        /*[in]*/ double x,
        /*[in]*/ double y ) = 0;
      virtual HRESULT __stdcall put_Layer (
        /*[in]*/ BSTR Layer ) = 0;
      virtual HRESULT __stdcall get_Layer (
        /*[out,retval]*/ BSTR * Layer ) = 0;
      virtual HRESULT __stdcall get_DetailView (
        /*[out,retval]*/ struct DrawingView * * DrawingView ) = 0;
      virtual HRESULT __stdcall get_Profile (
        /*[out,retval]*/ struct DraftProfile * * Profile ) = 0;
      virtual HRESULT __stdcall put_Auto (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_Auto (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
};

struct __declspec(uuid("809175b9-9bde-4c8f-9fc2-9598f6b6e779"))
HighlightDrawingViewMembers : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT AddModelMember (
        struct ModelMember * ModelMember );
    HRESULT RemoveModelMember (
        struct ModelMember * ModelMember );
};

struct __declspec(uuid("e0a8e0b2-12a1-4e35-ac4a-53ccaa6413d0"))
_IHighlightDrawingViewMembersAuto : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT AddModelMember (
        struct ModelMember * ModelMember );
    HRESULT RemoveModelMember (
        struct ModelMember * ModelMember );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_AddModelMember (
        /*[in]*/ struct ModelMember * ModelMember ) = 0;
      virtual HRESULT __stdcall raw_RemoveModelMember (
        /*[in]*/ struct ModelMember * ModelMember ) = 0;
};

struct __declspec(uuid("ca10e8ff-87b4-4b29-b116-629f79c7c53e"))
BreakLinePairs : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    BreakLinePairPtr Item (
        const _variant_t & Index );
    IDispatchPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
    BreakLinePairPtr Add (
        enum BreakLinePairDirConstants BreakLinePairDir,
        double xy1,
        double xy2,
        VARIANT_BOOL AddRecursivelyToInheritedViews );
    BreakLinePairPtr AddWithBreakAxis (
        enum BreakLinePairDirConstants BreakLinePairDir,
        enum BreakLinePairOrientConstants BreakLinePairOrient,
        double xy1,
        double xy2 );
};

struct __declspec(uuid("a6c7276a-39a5-4f8f-9311-bfa057de538e"))
BreakLinePair : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetDirection))
    enum BreakLinePairDirConstants Direction;
    __declspec(property(get=Getxy1))
    double xy1;
    __declspec(property(get=Getxy2))
    double xy2;
    __declspec(property(get=GetGap,put=PutGap))
    double Gap;
    __declspec(property(get=GetType,put=PutType))
    enum BreakLinePairTypeConstants Type;
    __declspec(property(get=GetHeightRatio,put=PutHeightRatio))
    double HeightRatio;
    __declspec(property(get=GetPitch,put=PutPitch))
    double Pitch;
    __declspec(property(get=GetSymbols,put=PutSymbols))
    int Symbols;
    __declspec(property(get=Getstyle,put=Putstyle))
    _bstr_t style;
    __declspec(property(get=GetOrientation))
    enum BreakLinePairOrientConstants Orientation;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    enum BreakLinePairDirConstants GetDirection ( );
    double Getxy1 ( );
    double Getxy2 ( );
    double GetGap ( );
    void PutGap (
        double _arg1 );
    enum BreakLinePairTypeConstants GetType ( );
    void PutType (
        enum BreakLinePairTypeConstants _arg1 );
    double GetHeightRatio ( );
    void PutHeightRatio (
        double _arg1 );
    double GetPitch ( );
    void PutPitch (
        double _arg1 );
    int GetSymbols ( );
    void PutSymbols (
        int _arg1 );
    _bstr_t Getstyle ( );
    void Putstyle (
        _bstr_t _arg1 );
    HRESULT Delete ( );
    HRESULT GetBreakLines (
        struct TGFrameworkSupport::Line2d * * Line1,
        struct TGFrameworkSupport::Line2d * * Line2 );
    enum BreakLinePairOrientConstants GetOrientation ( );
};

enum BreakLinePairDirConstants
{
    igBreakLinePairDirConstants_Vertical = 0,
    igBreakLinePairDirConstants_Horizontal = 1
};

enum BreakLinePairTypeConstants
{
    igBreakLinePairTypeConstants_Straight = 0,
    igBreakLinePairTypeConstants_Cylindrical = 1,
    igBreakLinePairTypeConstants_ShortBreak = 2,
    igBreakLinePairTypeConstants_LongBreak = 3,
    igBreakLinePairTypeConstants_ShortCurvedBreak = 4
};

enum BreakLinePairOrientConstants
{
    igBreakLinePairOrientConstants_Default = 0,
    igBreakLinePairOrientConstants_Explicit = 1
};

struct __declspec(uuid("26b54af8-af79-4ca4-870c-14f600d20dd7"))
_IBreakLinePairsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    BreakLinePairPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    IDispatchPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
    BreakLinePairPtr Add (
        enum BreakLinePairDirConstants BreakLinePairDir,
        double xy1,
        double xy2,
        VARIANT_BOOL AddRecursivelyToInheritedViews );
    BreakLinePairPtr AddWithBreakAxis (
        enum BreakLinePairDirConstants BreakLinePairDir,
        enum BreakLinePairOrientConstants BreakLinePairOrient,
        double xy1,
        double xy2 );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct BreakLinePair * * BreakLinePair ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ IDispatch * * pApp ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * pParent ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ enum BreakLinePairDirConstants BreakLinePairDir,
        /*[in]*/ double xy1,
        /*[in]*/ double xy2,
        /*[in]*/ VARIANT_BOOL AddRecursivelyToInheritedViews,
        /*[out,retval]*/ struct BreakLinePair * * BreakLinePair ) = 0;
      virtual HRESULT __stdcall raw_AddWithBreakAxis (
        /*[in]*/ enum BreakLinePairDirConstants BreakLinePairDir,
        /*[in]*/ enum BreakLinePairOrientConstants BreakLinePairOrient,
        /*[in]*/ double xy1,
        /*[in]*/ double xy2,
        /*[out,retval]*/ struct BreakLinePair * * BreakLinePair ) = 0;
};

struct __declspec(uuid("a126955b-5693-4e12-933d-14c85c538070"))
_IBreakLinePairAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetDirection))
    enum BreakLinePairDirConstants Direction;
    __declspec(property(get=Getxy1))
    double xy1;
    __declspec(property(get=Getxy2))
    double xy2;
    __declspec(property(get=GetGap,put=PutGap))
    double Gap;
    __declspec(property(get=GetType,put=PutType))
    enum BreakLinePairTypeConstants Type;
    __declspec(property(get=GetHeightRatio,put=PutHeightRatio))
    double HeightRatio;
    __declspec(property(get=GetPitch,put=PutPitch))
    double Pitch;
    __declspec(property(get=GetSymbols,put=PutSymbols))
    int Symbols;
    __declspec(property(get=Getstyle,put=Putstyle))
    _bstr_t style;
    __declspec(property(get=GetOrientation))
    enum BreakLinePairOrientConstants Orientation;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    enum BreakLinePairDirConstants GetDirection ( );
    double Getxy1 ( );
    double Getxy2 ( );
    double GetGap ( );
    void PutGap (
        double Gap );
    enum BreakLinePairTypeConstants GetType ( );
    void PutType (
        enum BreakLinePairTypeConstants Type );
    double GetHeightRatio ( );
    void PutHeightRatio (
        double HeightRatio );
    double GetPitch ( );
    void PutPitch (
        double Pitch );
    int GetSymbols ( );
    void PutSymbols (
        int Symbols );
    _bstr_t Getstyle ( );
    void Putstyle (
        _bstr_t style );
    HRESULT Delete ( );
    HRESULT GetBreakLines (
        struct TGFrameworkSupport::Line2d * * Line1,
        struct TGFrameworkSupport::Line2d * * Line2 );
    enum BreakLinePairOrientConstants GetOrientation ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Direction (
        /*[out,retval]*/ enum BreakLinePairDirConstants * Dir ) = 0;
      virtual HRESULT __stdcall get_xy1 (
        /*[out,retval]*/ double * xy1 ) = 0;
      virtual HRESULT __stdcall get_xy2 (
        /*[out,retval]*/ double * xy2 ) = 0;
      virtual HRESULT __stdcall get_Gap (
        /*[out,retval]*/ double * Gap ) = 0;
      virtual HRESULT __stdcall put_Gap (
        /*[in]*/ double Gap ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum BreakLinePairTypeConstants * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum BreakLinePairTypeConstants Type ) = 0;
      virtual HRESULT __stdcall get_HeightRatio (
        /*[out,retval]*/ double * HeightRatio ) = 0;
      virtual HRESULT __stdcall put_HeightRatio (
        /*[in]*/ double HeightRatio ) = 0;
      virtual HRESULT __stdcall get_Pitch (
        /*[out,retval]*/ double * Pitch ) = 0;
      virtual HRESULT __stdcall put_Pitch (
        /*[in]*/ double Pitch ) = 0;
      virtual HRESULT __stdcall get_Symbols (
        /*[out,retval]*/ int * Symbols ) = 0;
      virtual HRESULT __stdcall put_Symbols (
        /*[in]*/ int Symbols ) = 0;
      virtual HRESULT __stdcall get_style (
        /*[out,retval]*/ BSTR * style ) = 0;
      virtual HRESULT __stdcall put_style (
        /*[in]*/ BSTR style ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_GetBreakLines (
        /*[out]*/ struct TGFrameworkSupport::Line2d * * Line1,
        /*[out]*/ struct TGFrameworkSupport::Line2d * * Line2 ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ enum BreakLinePairOrientConstants * Orient ) = 0;
};

enum KeypointIndexConstants
{
    igArcCenter = 0,
    igArcStart = 1,
    igArcEnd = 2,
    igArcMiddle = 3,
    igArcBottomSilhouettePoint = 4,
    igArcTopSilhouettePoint = 5,
    igArcLeftSilhouettePoint = 6,
    igArcRightSilhouettePoint = 7,
    igCircleCenter = 0,
    igCircleMajorAxis = 1,
    igCircleBottomSilhouettePoint = 2,
    igCircleTopSilhouettePoint = 3,
    igCircleLeftSilhouettePoint = 4,
    igCircleRightSilhouettePoint = 5,
    igEllipseArcCenter = 0,
    igEllipseArcStart = 1,
    igEllipseArcEnd = 2,
    igEllipseArcMajor = 4,
    igEllipseArcMinor = 5,
    igEllipseArcBottomSilhouettePoint = 6,
    igEllipseArcTopSilhouettePoint = 7,
    igEllipseArcLeftSilhouettePoint = 8,
    igEllipseArcRightSilhouettePoint = 9,
    igEllipseArcMajorReverse = 10,
    igEllipseArcMinorReverse = 11,
    igEllipseCenter = 0,
    igEllipseMajor = 1,
    igEllipseMinor = 2,
    igEllipseMajorReverse = 3,
    igEllipseMinorReverse = 4,
    igEllipseBottomSilhouettePoint = 6,
    igEllipseTopSilhouettePoint = 7,
    igEllipseLeftSilhouettePoint = 8,
    igEllipseRightSilhouettePoint = 9,
    igLineStart = 0,
    igLineEnd = 1,
    igLineMiddle = 2,
    igBsplineCurveStart = 0,
    igBsplineCurveEnd = 1
};

enum StyleConstants
{
    seStyleConstantsVisibleReference = 1,
    seStyleConstantsCenter = 2,
    seStyleConstantsCuttingPlane = 3,
    seStyleConstantsDotted = 4,
    seStyleConstantsHidden = 5,
    seStyleConstantsHiddenReference = 6,
    seStyleConstantsNormal = 7,
    seStyleConstantsPhantom = 8,
    seStyleConstantsTangent = 9,
    seStyleConstantsTangentReference = 10,
    seStyleConstantsVisible = 11
};

struct __declspec(uuid("61f55451-5269-11ce-9cfe-08003637fb01"))
_IDrawingViewAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetDefaults_ShowTangentEdges,put=PutDefaults_ShowTangentEdges))
    VARIANT_BOOL Defaults_ShowTangentEdges;
    __declspec(property(get=GetScaleFactor,put=PutScaleFactor))
    double ScaleFactor;
    __declspec(property(get=GetDefaults_TangentEdgeStyleName,put=PutDefaults_TangentEdgeStyleName))
    _bstr_t Defaults_TangentEdgeStyleName;
    __declspec(property(get=GetDefaults_ShowTubeCenterlines,put=PutDefaults_ShowTubeCenterlines))
    VARIANT_BOOL Defaults_ShowTubeCenterlines;
    __declspec(property(get=GetDrawingViewType))
    enum DrawingViewTypeConstants DrawingViewType;
    __declspec(property(get=GetDefaults_TubeCenterlineStyleName,put=PutDefaults_TubeCenterlineStyleName))
    _bstr_t Defaults_TubeCenterlineStyleName;
    __declspec(property(get=GetCropLeft,put=PutCropLeft))
    double CropLeft;
    __declspec(property(get=GetCropRight,put=PutCropRight))
    double CropRight;
    __declspec(property(get=GetCropTop,put=PutCropTop))
    double CropTop;
    __declspec(property(get=GetCropBottom,put=PutCropBottom))
    double CropBottom;
    __declspec(property(get=GetCrop,put=PutCrop))
    VARIANT_BOOL Crop;
    __declspec(property(get=GetCaption,put=PutCaption))
    _bstr_t Caption;
    __declspec(property(get=GetCroppedBoundaryStyle,put=PutCroppedBoundaryStyle))
    _bstr_t CroppedBoundaryStyle;
    __declspec(property(get=GetDisplayCroppedBoundary,put=PutDisplayCroppedBoundary))
    VARIANT_BOOL DisplayCroppedBoundary;
    __declspec(property(get=GetDisplayBorder,put=PutDisplayBorder))
    VARIANT_BOOL DisplayBorder;
    __declspec(property(get=GetSuffix))
    _bstr_t Suffix;
    __declspec(property(get=GetDefaults_ShowEdgesHiddenTangentEdgesSelfHidden,put=PutDefaults_ShowEdgesHiddenTangentEdgesSelfHidden))
    VARIANT_BOOL Defaults_ShowEdgesHiddenTangentEdgesSelfHidden;
    __declspec(property(get=GetDescription,put=PutDescription))
    _bstr_t Description;
    __declspec(property(get=GetDisplayCaption,put=PutDisplayCaption))
    VARIANT_BOOL DisplayCaption;
    __declspec(property(get=GetDisplaySuffix,put=PutDisplaySuffix))
    VARIANT_BOOL DisplaySuffix;
    __declspec(property(get=GetDisplayScale,put=PutDisplayScale))
    VARIANT_BOOL DisplayScale;
    __declspec(property(get=GetDisplayAnnotation,put=PutDisplayAnnotation))
    VARIANT_BOOL DisplayAnnotation;
    __declspec(property(get=GetDefaults_ShowEdgesHiddenTangentEdgesHiddenByOtherParts,put=PutDefaults_ShowEdgesHiddenTangentEdgesHiddenByOtherParts))
    VARIANT_BOOL Defaults_ShowEdgesHiddenTangentEdgesHiddenByOtherParts;
    __declspec(property(get=GetIncludePMIAnnotations,put=PutIncludePMIAnnotations))
    VARIANT_BOOL IncludePMIAnnotations;
    __declspec(property(get=GetEdgesUseModelColor,put=PutEdgesUseModelColor))
    VARIANT_BOOL EdgesUseModelColor;
    __declspec(property(get=GetEdgesUsePartBaseColor,put=PutEdgesUsePartBaseColor))
    VARIANT_BOOL EdgesUsePartBaseColor;
    __declspec(property(get=GetEdgesUseAssemblyOverrideColor,put=PutEdgesUseAssemblyOverrideColor))
    VARIANT_BOOL EdgesUseAssemblyOverrideColor;
    __declspec(property(get=GetSectionHatchUseModelColor,put=PutSectionHatchUseModelColor))
    VARIANT_BOOL SectionHatchUseModelColor;
    __declspec(property(get=GetAnnotation))
    IDispatchPtr Annotation;
    __declspec(property(get=GetSheet,put=PutSheet))
    IDispatchPtr Sheet;
    __declspec(property(get=GetDisplayWindow,put=PutDisplayWindow))
    VARIANT_BOOL DisplayWindow;
    __declspec(property(get=GetModelLink))
    IDispatchPtr ModelLink;
    __declspec(property(get=GetIsUpToDate))
    VARIANT_BOOL IsUpToDate;
    __declspec(property(get=GetIsPerspective))
    VARIANT_BOOL IsPerspective;
    __declspec(property(get=GetIsBrokenOutSectionTarget))
    VARIANT_BOOL IsBrokenOutSectionTarget;
    __declspec(property(get=GetIsCut))
    VARIANT_BOOL IsCut;
    __declspec(property(get=GetLockView,put=PutLockView))
    VARIANT_BOOL LockView;
    __declspec(property(get=GetHatchRibsInSectionViews,put=PutHatchRibsInSectionViews))
    VARIANT_BOOL HatchRibsInSectionViews;
    __declspec(property(get=GetDisplayBreakLinesInBrokenState,put=PutDisplayBreakLinesInBrokenState))
    VARIANT_BOOL DisplayBreakLinesInBrokenState;
    __declspec(property(get=GetCaptionDefinitionTextPrimary,put=PutCaptionDefinitionTextPrimary))
    _bstr_t CaptionDefinitionTextPrimary;
    __declspec(property(get=GetCaptionDisplayedTextPrimary))
    _bstr_t CaptionDisplayedTextPrimary;
    __declspec(property(get=GetDisplayCaptionPrimary,put=PutDisplayCaptionPrimary))
    VARIANT_BOOL DisplayCaptionPrimary;
    __declspec(property(get=GetCaptionDefinitionTextSecondary,put=PutCaptionDefinitionTextSecondary))
    _bstr_t CaptionDefinitionTextSecondary;
    __declspec(property(get=GetCaptionDisplayedTextSecondary))
    _bstr_t CaptionDisplayedTextSecondary;
    __declspec(property(get=GetDisplayCaptionSecondary,put=PutDisplayCaptionSecondary))
    VARIANT_BOOL DisplayCaptionSecondary;
    __declspec(property(get=GetSuffixDefinitionText,put=PutSuffixDefinitionText))
    _bstr_t SuffixDefinitionText;
    __declspec(property(get=GetScaleDefinitionText,put=PutScaleDefinitionText))
    _bstr_t ScaleDefinitionText;
    __declspec(property(get=GetSourceDrawingView))
    DrawingViewPtr SourceDrawingView;
    __declspec(property(get=GetZone,put=PutZone))
    _bstr_t Zone;
    __declspec(property(get=GetAnnotationSheetNumberDefinitionText,put=PutAnnotationSheetNumberDefinitionText))
    _bstr_t AnnotationSheetNumberDefinitionText;
    __declspec(property(get=GetDisplayAnnotationSheetNumber,put=PutDisplayAnnotationSheetNumber))
    VARIANT_BOOL DisplayAnnotationSheetNumber;
    __declspec(property(get=GetRotationAngleDefinitionText,put=PutRotationAngleDefinitionText))
    _bstr_t RotationAngleDefinitionText;
    __declspec(property(get=GetDisplayRotationAngle,put=PutDisplayRotationAngle))
    VARIANT_BOOL DisplayRotationAngle;
    __declspec(property(get=GetCaptionLocation,put=PutCaptionLocation))
    enum TGFrameworkSupport::DimViewCaptionLocationConstants CaptionLocation;
    __declspec(property(get=GetPrimaryCaptionColor,put=PutPrimaryCaptionColor))
    long PrimaryCaptionColor;
    __declspec(property(get=GetIsBroken))
    VARIANT_BOOL IsBroken;
    __declspec(property(get=GetPrimaryCaptionFont,put=PutPrimaryCaptionFont))
    _bstr_t PrimaryCaptionFont;
    __declspec(property(get=GetPrimaryCaptionFontStyle,put=PutPrimaryCaptionFontStyle))
    enum TGFrameworkSupport::DimTextFontStyleConstants PrimaryCaptionFontStyle;
    __declspec(property(get=GetPrimaryCaptionTextAlignment,put=PutPrimaryCaptionTextAlignment))
    enum TGFrameworkSupport::DrawingViewCaptionTextAlignment PrimaryCaptionTextAlignment;
    __declspec(property(get=GetCroppedVHL,put=PutCroppedVHL))
    VARIANT_BOOL CroppedVHL;
    __declspec(property(get=GetPrimaryCaptionTextSize,put=PutPrimaryCaptionTextSize))
    double PrimaryCaptionTextSize;
    __declspec(property(get=GetSecondaryCaptionColor,put=PutSecondaryCaptionColor))
    long SecondaryCaptionColor;
    __declspec(property(get=GetSecondaryCaptionFont,put=PutSecondaryCaptionFont))
    _bstr_t SecondaryCaptionFont;
    __declspec(property(get=GetSecondaryCaptionFontStyle,put=PutSecondaryCaptionFontStyle))
    enum TGFrameworkSupport::DimTextFontStyleConstants SecondaryCaptionFontStyle;
    __declspec(property(get=GetSecondaryCaptionTextAlignment,put=PutSecondaryCaptionTextAlignment))
    enum TGFrameworkSupport::DrawingViewCaptionTextAlignment SecondaryCaptionTextAlignment;
    __declspec(property(get=GetGetReferenceToGraphicMember2))
    TGFramework::ReferencePtr GetReferenceToGraphicMember2[];
    __declspec(property(get=GetSecondaryCaptionTextSize,put=PutSecondaryCaptionTextSize))
    double SecondaryCaptionTextSize;
    __declspec(property(get=GetShowPrimarySecondayCaptionSeparator,put=PutShowPrimarySecondayCaptionSeparator))
    VARIANT_BOOL ShowPrimarySecondayCaptionSeparator;
    __declspec(property(get=GetSimplifiedAssemblyOption,put=PutSimplifiedAssemblyOption))
    enum DrawingViewSimplifiedAssemblyOptionConstants SimplifiedAssemblyOption;
    __declspec(property(get=GetSimplifiedPartOption,put=PutSimplifiedPartOption))
    enum DrawingViewSimplifiedPartOptionConstants SimplifiedPartOption;
    __declspec(property(get=GetPMIModelView,put=PutPMIModelView))
    _bstr_t PMIModelView;
    __declspec(property(get=GetReferenceComponentsByConfigurations,put=PutReferenceComponentsByConfigurations))
    VARIANT_BOOL ReferenceComponentsByConfigurations;
    __declspec(property(get=GetDefaults_SolidFillSectionWeldBeads,put=PutDefaults_SolidFillSectionWeldBeads))
    VARIANT_BOOL Defaults_SolidFillSectionWeldBeads;
    __declspec(property(get=GetDefaults_EnableAlternatingHatchSpacing,put=PutDefaults_EnableAlternatingHatchSpacing))
    VARIANT_BOOL Defaults_EnableAlternatingHatchSpacing;
    __declspec(property(get=GetIncludePMIDimensions,put=PutIncludePMIDimensions))
    VARIANT_BOOL IncludePMIDimensions;
    __declspec(property(get=GetDefaults_EnableAlternatingHatchAngle,put=PutDefaults_EnableAlternatingHatchAngle))
    VARIANT_BOOL Defaults_EnableAlternatingHatchAngle;
    __declspec(property(get=GetPrimaryMember,put=PutPrimaryMember))
    _bstr_t PrimaryMember;
    __declspec(property(get=GetCuttingPlanes))
    CuttingPlanesPtr CuttingPlanes;
    __declspec(property(get=GetBrokenOutSectionProfiles))
    BrokenOutSectionProfilesPtr BrokenOutSectionProfiles;
    __declspec(property(get=GetDetailEnvelopes))
    DetailEnvelopesPtr DetailEnvelopes;
    __declspec(property(get=GetCroppingBoundaryProfile))
    DraftProfilePtr CroppingBoundaryProfile;
    __declspec(property(get=GetSectionOnly,put=PutSectionOnly))
    VARIANT_BOOL SectionOnly;
    __declspec(property(get=GetLayer,put=PutLayer))
    _bstr_t Layer;
    __declspec(property(get=GetHighlightDrawingViewMembers))
    HighlightDrawingViewMembersPtr HighlightDrawingViewMembers;
    __declspec(property(get=GetLastUpdateSEVersion))
    _bstr_t LastUpdateSEVersion;
    __declspec(property(get=GetLastUpdateDate))
    _variant_t LastUpdateDate;
    __declspec(property(get=GetLastUpdateUsername))
    _bstr_t LastUpdateUsername;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetLastUpdateTimeToUpdate))
    double LastUpdateTimeToUpdate;
    __declspec(property(get=GetDefaults_CoordinateSystemEdgeStyleName,put=PutDefaults_CoordinateSystemEdgeStyleName))
    _bstr_t Defaults_CoordinateSystemEdgeStyleName;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];
    __declspec(property(get=GetIsReferencePartTransparent,put=PutIsReferencePartTransparent))
    VARIANT_BOOL IsReferencePartTransparent;
    __declspec(property(get=GetBreakLinePairs))
    BreakLinePairsPtr BreakLinePairs;
    __declspec(property(get=GetDepthPlaneOffset,put=PutDepthPlaneOffset))
    double DepthPlaneOffset;
    __declspec(property(get=GetRetrieveDimOnUpdate,put=PutRetrieveDimOnUpdate))
    VARIANT_BOOL RetrieveDimOnUpdate;
    __declspec(property(get=GetCoordinateSystems2d))
    CoordinateSystems2dPtr CoordinateSystems2d;
    __declspec(property(get=GetSectionFullModel,put=PutSectionFullModel))
    VARIANT_BOOL SectionFullModel;
    __declspec(property(get=GetRevolvedSection,put=PutRevolvedSection))
    VARIANT_BOOL RevolvedSection;
    __declspec(property(get=GetShowNewComponentsAddedtoAssembly,put=PutShowNewComponentsAddedtoAssembly))
    VARIANT_BOOL ShowNewComponentsAddedtoAssembly;
    __declspec(property(get=GetTextFont,put=PutTextFont))
    _bstr_t TextFont;
    __declspec(property(get=GetTextFontStyle,put=PutTextFontStyle))
    enum TGFrameworkSupport::DimTextFontStyleConstants TextFontStyle;
    __declspec(property(get=GetTextHeight,put=PutTextHeight))
    double TextHeight;
    __declspec(property(get=GetTextRatio,put=PutTextRatio))
    double TextRatio;
    __declspec(property(get=GetTextColor,put=PutTextColor))
    long TextColor;
    __declspec(property(get=GetStyleName,put=PutStyleName))
    _bstr_t StyleName;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetName))
    _bstr_t Name[][];
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetType))
    long Type;
    __declspec(property(get=GetZOrder))
    long ZOrder;
    __declspec(property(get=GetKey))
    _bstr_t Key[];
    __declspec(property(get=GetDocument))
    IDispatchPtr Document;
    __declspec(property(get=GetModelMembers))
    ModelMembersPtr ModelMembers;
    __declspec(property(get=GetGraphicMembers))
    GraphicMembersPtr GraphicMembers;
    __declspec(property(get=GetShowEdgesHiddenByOtherParts,put=PutShowEdgesHiddenByOtherParts))
    VARIANT_BOOL ShowEdgesHiddenByOtherParts;
    __declspec(property(get=GetProcessPartIntersections,put=PutProcessPartIntersections))
    VARIANT_BOOL ProcessPartIntersections;
    __declspec(property(get=GetDVLines2d))
    DVLines2dPtr DVLines2d;
    __declspec(property(get=GetDVArcs2d))
    DVArcs2dPtr DVArcs2d;
    __declspec(property(get=GetDVBSplineCurves2d))
    DVBSplineCurves2dPtr DVBSplineCurves2d;
    __declspec(property(get=GetDVCircles2d))
    DVCircles2dPtr DVCircles2d;
    __declspec(property(get=GetDVEllipses2d))
    DVEllipses2dPtr DVEllipses2d;
    __declspec(property(get=GetDVLineStrings2d))
    DVLineStrings2dPtr DVLineStrings2d;
    __declspec(property(get=GetDVEllipticalArcs2d))
    DVEllipticalArcs2dPtr DVEllipticalArcs2d;
    __declspec(property(get=GetConfiguration,put=PutConfiguration))
    _bstr_t Configuration;
    __declspec(property(get=GetViewType))
    long ViewType;
    __declspec(property(get=GetMatchConfiguration,put=PutMatchConfiguration))
    VARIANT_BOOL MatchConfiguration;
    __declspec(property(get=GetScaleDimensionsAndAnnotations,put=PutScaleDimensionsAndAnnotations))
    VARIANT_BOOL ScaleDimensionsAndAnnotations;
    __declspec(property(get=GetShading,put=PutShading))
    VARIANT_BOOL Shading;
    __declspec(property(get=GetShadingQuality,put=PutShadingQuality))
    enum DrawingViewShadingQualityConstants ShadingQuality;
    __declspec(property(get=GetShadingAllowAssemblyOverrides,put=PutShadingAllowAssemblyOverrides))
    VARIANT_BOOL ShadingAllowAssemblyOverrides;
    __declspec(property(get=GetShadingAllowPartFaceColors,put=PutShadingAllowPartFaceColors))
    VARIANT_BOOL ShadingAllowPartFaceColors;
    __declspec(property(get=GetShadingShowVisibleEdges,put=PutShadingShowVisibleEdges))
    VARIANT_BOOL ShadingShowVisibleEdges;
    __declspec(property(get=GetShadingGrayscale,put=PutShadingGrayscale))
    VARIANT_BOOL ShadingGrayscale;
    __declspec(property(get=GetShadingFlat,put=PutShadingFlat))
    VARIANT_BOOL ShadingFlat;
    __declspec(property(get=GetShadingTextures,put=PutShadingTextures))
    VARIANT_BOOL ShadingTextures;
    __declspec(property(get=GetShadingReflections,put=PutShadingReflections))
    VARIANT_BOOL ShadingReflections;
    __declspec(property(get=GetSnapShotQuality,put=PutSnapShotQuality))
    enum DrawingViewSnapShotQualityConstants SnapShotQuality;
    __declspec(property(get=GetVHL_ToleranceOverrideQuality,put=PutVHL_ToleranceOverrideQuality))
    enum DrawingViewVHL_ToleranceOverrideQualityConstants VHL_ToleranceOverrideQuality;
    __declspec(property(get=GetIsSnapShot,put=PutIsSnapShot))
    VARIANT_BOOL IsSnapShot;
    __declspec(property(get=GetDVPoints2d))
    DVPoints2dPtr DVPoints2d;
    __declspec(property(get=GetSnapshot,put=PutSnapshot))
    VARIANT_BOOL Snapshot;
    __declspec(property(get=GetTangencyTolerance,put=PutTangencyTolerance))
    double TangencyTolerance;
    __declspec(property(get=GetThreadAxisTolerance,put=PutThreadAxisTolerance))
    double ThreadAxisTolerance;
    __declspec(property(get=GetBsplineSimplification,put=PutBsplineSimplification))
    enum DrawingViewBsplineSimplificationConstants BsplineSimplification;
    __declspec(property(get=GetIntersectionProcessing,put=PutIntersectionProcessing))
    enum DrawingViewIntersectionProcessingConstants IntersectionProcessing;
    __declspec(property(get=GetDefaults_ShowSectionHatch,put=PutDefaults_ShowSectionHatch))
    VARIANT_BOOL Defaults_ShowSectionHatch;
    __declspec(property(get=GetDefaults_DeriveSectionHatchStyleNameFromPart,put=PutDefaults_DeriveSectionHatchStyleNameFromPart))
    VARIANT_BOOL Defaults_DeriveSectionHatchStyleNameFromPart;
    __declspec(property(get=GetDefaults_SectionHatchStyleName,put=PutDefaults_SectionHatchStyleName))
    _bstr_t Defaults_SectionHatchStyleName;
    __declspec(property(get=GetDefaults_VisibleEdgeStyleName,put=PutDefaults_VisibleEdgeStyleName))
    _bstr_t Defaults_VisibleEdgeStyleName;
    __declspec(property(get=GetDefaults_ShowHiddenEdges,put=PutDefaults_ShowHiddenEdges))
    VARIANT_BOOL Defaults_ShowHiddenEdges;
    __declspec(property(get=GetDefaults_HiddenEdgeStyleName,put=PutDefaults_HiddenEdgeStyleName))
    _bstr_t Defaults_HiddenEdgeStyleName;
    __declspec(property(get=GetDefaults_ShowEdgesHiddenByOtherParts,put=PutDefaults_ShowEdgesHiddenByOtherParts))
    VARIANT_BOOL Defaults_ShowEdgesHiddenByOtherParts;

    //
    // Wrapper methods for error-handling
    //

    double GetScaleFactor ( );
    void PutScaleFactor (
        double Scale );
    HRESULT GetOrigin (
        double * x,
        double * y );
    HRESULT SetOrigin (
        double x,
        double y );
    enum DrawingViewTypeConstants GetDrawingViewType ( );
    double GetCropLeft ( );
    void PutCropLeft (
        double offset );
    double GetCropRight ( );
    void PutCropRight (
        double offset );
    double GetCropTop ( );
    void PutCropTop (
        double offset );
    double GetCropBottom ( );
    void PutCropBottom (
        double offset );
    VARIANT_BOOL GetCrop ( );
    void PutCrop (
        VARIANT_BOOL value );
    _bstr_t GetCaption ( );
    void PutCaption (
        _bstr_t Caption );
    _bstr_t GetSuffix ( );
    _bstr_t GetDescription ( );
    void PutDescription (
        _bstr_t Description );
    VARIANT_BOOL GetDisplayCaption ( );
    void PutDisplayCaption (
        VARIANT_BOOL DisplayCaption );
    VARIANT_BOOL GetDisplaySuffix ( );
    void PutDisplaySuffix (
        VARIANT_BOOL DisplaySuffix );
    VARIANT_BOOL GetDisplayScale ( );
    void PutDisplayScale (
        VARIANT_BOOL DisplayScale );
    VARIANT_BOOL GetDisplayAnnotation ( );
    void PutDisplayAnnotation (
        VARIANT_BOOL DisplayAnnotation );
    IDispatchPtr GetAnnotation ( );
    IDispatchPtr GetSheet ( );
    void PutSheet (
        IDispatch * Sheet );
    VARIANT_BOOL GetDisplayWindow ( );
    void PutDisplayWindow (
        VARIANT_BOOL DisplayWindow );
    IDispatchPtr GetModelLink ( );
    VARIANT_BOOL GetIsUpToDate ( );
    HRESULT SheetToView (
        double xSheet,
        double ySheet,
        double * xView,
        double * yView );
    HRESULT ViewToSheet (
        double xView,
        double yView,
        double * xSheet,
        double * ySheet );
    IDispatchPtr Drop ( );
    HRESULT Update ( );
    _bstr_t GetTextFont ( );
    void PutTextFont (
        _bstr_t TextFont );
    enum TGFrameworkSupport::DimTextFontStyleConstants GetTextFontStyle ( );
    void PutTextFontStyle (
        enum TGFrameworkSupport::DimTextFontStyleConstants TextFontStyle );
    double GetTextHeight ( );
    void PutTextHeight (
        double TextHeight );
    double GetTextRatio ( );
    void PutTextRatio (
        double TextRatio );
    long GetTextColor ( );
    void PutTextColor (
        long TextColor );
    _bstr_t GetStyleName ( );
    void PutStyleName (
        _bstr_t StyleName );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetIndex ( );
    _bstr_t GetName (
        const _variant_t & Recurse,
        long Lcid = 0 );
    IDispatchPtr GetParent ( );
    long GetType ( );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL * Toggle );
    long GetZOrder ( );
    _bstr_t GetKey (
        const _variant_t & Recurse = vtMissing );
    IDispatchPtr GetDocument ( );
    HRESULT Copy ( );
    HRESULT Cut ( );
    HRESULT Delete ( );
    HRESULT BringToFront ( );
    HRESULT BringForward ( );
    HRESULT SendToBack ( );
    HRESULT SendBackward ( );
    HRESULT Select ( );
    HRESULT Range (
        double * min_x,
        double * min_y,
        double * max_x,
        double * max_y );
    CoordinateSystems2dPtr GetCoordinateSystems2d ( );
    HRESULT GetActiveCoordinateSystem (
        VARIANT * CoordinateSystem2d,
        VARIANT * AlignmentAxis );
    HRESULT SetActiveCoordinateSystem (
        const _variant_t & CoordinateSystem2d = vtMissing,
        const _variant_t & AlignmentAxis = vtMissing );
    ModelMembersPtr GetModelMembers ( );
    GraphicMembersPtr GetGraphicMembers ( );
    VARIANT_BOOL GetShowEdgesHiddenByOtherParts ( );
    void PutShowEdgesHiddenByOtherParts (
        VARIANT_BOOL value );
    VARIANT_BOOL GetProcessPartIntersections ( );
    void PutProcessPartIntersections (
        VARIANT_BOOL value );
    DVLines2dPtr GetDVLines2d ( );
    DVArcs2dPtr GetDVArcs2d ( );
    DVBSplineCurves2dPtr GetDVBSplineCurves2d ( );
    DVCircles2dPtr GetDVCircles2d ( );
    DVEllipses2dPtr GetDVEllipses2d ( );
    DVLineStrings2dPtr GetDVLineStrings2d ( );
    DVEllipticalArcs2dPtr GetDVEllipticalArcs2d ( );
    DVPoints2dPtr GetDVPoints2d ( );
    _bstr_t GetConfiguration ( );
    void PutConfiguration (
        _bstr_t Configuration );
    HRESULT CheckConfiguration (
        VARIANT_BOOL * UpToDate );
    long GetViewType ( );
    VARIANT_BOOL GetMatchConfiguration ( );
    void PutMatchConfiguration (
        VARIANT_BOOL value );
    VARIANT_BOOL GetScaleDimensionsAndAnnotations ( );
    void PutScaleDimensionsAndAnnotations (
        VARIANT_BOOL value );
    HRESULT GetReferenceToGraphicMember (
        IDispatch * GraphicMember,
        struct TGFramework::Reference * * Reference );
    TGFramework::ReferencePtr GetGetReferenceToGraphicMember2 (
        IDispatch * GraphicMember );
    HRESULT GetRotationAngle (
        double * dRotAngle );
    HRESULT SetRotationAngle (
        double dRotAngle );
    HRESULT GetListOfHiddenLayers (
        long * NumLayers,
        SAFEARRAY * * HiddenLayers );
    HRESULT HideLayer (
        _bstr_t LayerName );
    HRESULT ShowLayer (
        _bstr_t LayerName );
    VARIANT_BOOL IsLayerHidden (
        _bstr_t LayerName );
    HRESULT RetrieveDimensions (
        VARIANT_BOOL IsRetrieve,
        _bstr_t DimensionStyleName,
        VARIANT_BOOL TypeLinear,
        VARIANT_BOOL TypeRadial,
        VARIANT_BOOL TypeAngular,
        VARIANT_BOOL TypeAnnotation,
        VARIANT_BOOL TypeCenterMark,
        VARIANT_BOOL GetDuplicatedRadial,
        VARIANT_BOOL GetDimensionToHiddenLines,
        VARIANT_BOOL ProjectCenterMark,
        VARIANT_BOOL ConnectCenters,
        VARIANT_BOOL GetCenterMarkToCircle,
        VARIANT_BOOL GetCenterMarkToArc );
    HRESULT RetrieveCenterLinesCenterMarks (
        VARIANT_BOOL IsRetrieve,
        _bstr_t DimensionStyleName,
        VARIANT_BOOL TypeCenterLine,
        VARIANT_BOOL TypeCenterMark,
        VARIANT_BOOL ProjectCenterMark,
        VARIANT_BOOL ConnectCenters,
        VARIANT_BOOL GetCenterLineToFullCylinder,
        VARIANT_BOOL GetCenterLineToPartialCylinder,
        VARIANT_BOOL GetCenterMarkToCircle,
        VARIANT_BOOL GetCenterMarkToArc,
        VARIANT_BOOL GetCenterMarkToEllipse,
        VARIANT_BOOL GetCenterMarkToPartialEllipse,
        VARIANT_BOOL EnableCenterMarkRangeCheck,
        VARIANT_BOOL EnableCenterLineRangeCheck,
        double dCenterLineMinRadius,
        double dCenterLineMaxRadius,
        double dCenterMarkMinRadius,
        double dCenterMarkMaxRadius );
    VARIANT_BOOL GetShading ( );
    void PutShading (
        VARIANT_BOOL Shading );
    enum DrawingViewShadingQualityConstants GetShadingQuality ( );
    void PutShadingQuality (
        enum DrawingViewShadingQualityConstants ShadingQuality );
    VARIANT_BOOL GetShadingAllowAssemblyOverrides ( );
    void PutShadingAllowAssemblyOverrides (
        VARIANT_BOOL ShadingAllowAssemblyOverrides );
    VARIANT_BOOL GetShadingAllowPartFaceColors ( );
    void PutShadingAllowPartFaceColors (
        VARIANT_BOOL ShadingAllowPartFaceColors );
    VARIANT_BOOL GetShadingShowVisibleEdges ( );
    void PutShadingShowVisibleEdges (
        VARIANT_BOOL ShadingShowVisibleEdges );
    VARIANT_BOOL GetShadingGrayscale ( );
    void PutShadingGrayscale (
        VARIANT_BOOL ShadingGrayscale );
    VARIANT_BOOL GetShadingFlat ( );
    void PutShadingFlat (
        VARIANT_BOOL ShadingFlat );
    VARIANT_BOOL GetShadingTextures ( );
    void PutShadingTextures (
        VARIANT_BOOL ShadingTextures );
    VARIANT_BOOL GetShadingReflections ( );
    void PutShadingReflections (
        VARIANT_BOOL ShadingReflections );
    VARIANT_BOOL GetIsSnapShot ( );
    enum DrawingViewSnapShotQualityConstants GetSnapShotQuality ( );
    void PutSnapShotQuality (
        enum DrawingViewSnapShotQualityConstants SnapShotQuality );
    enum DrawingViewVHL_ToleranceOverrideQualityConstants GetVHL_ToleranceOverrideQuality ( );
    void PutVHL_ToleranceOverrideQuality (
        enum DrawingViewVHL_ToleranceOverrideQualityConstants VHL_ToleranceOverrideQuality );
    VARIANT_BOOL GetIsBroken ( );
    HRESULT ModelToView (
        double xModel,
        double yModel,
        double zModel,
        double * xView,
        double * yView );
    HRESULT ViewOrientation (
        double * ViewVector_X,
        double * ViewVector_Y,
        double * ViewVector_Z,
        double * LocalXVector_X,
        double * LocalXVector_Y,
        double * LocalXVector_Z,
        enum ViewOrientationConstants * Orientation );
    VARIANT_BOOL GetSnapshot ( );
    void PutSnapshot (
        VARIANT_BOOL Snapshot );
    double GetTangencyTolerance ( );
    void PutTangencyTolerance (
        double dTangencyTolInDegrees );
    double GetThreadAxisTolerance ( );
    void PutThreadAxisTolerance (
        double dThreadAxisTolInDegrees );
    enum DrawingViewBsplineSimplificationConstants GetBsplineSimplification ( );
    void PutBsplineSimplification (
        enum DrawingViewBsplineSimplificationConstants BsplineSimplification );
    enum DrawingViewIntersectionProcessingConstants GetIntersectionProcessing ( );
    void PutIntersectionProcessing (
        enum DrawingViewIntersectionProcessingConstants IntersectionProcessing );
    VARIANT_BOOL GetDefaults_ShowSectionHatch ( );
    void PutDefaults_ShowSectionHatch (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDefaults_DeriveSectionHatchStyleNameFromPart ( );
    void PutDefaults_DeriveSectionHatchStyleNameFromPart (
        VARIANT_BOOL value );
    _bstr_t GetDefaults_SectionHatchStyleName ( );
    void PutDefaults_SectionHatchStyleName (
        _bstr_t StyleName );
    _bstr_t GetDefaults_VisibleEdgeStyleName ( );
    void PutDefaults_VisibleEdgeStyleName (
        _bstr_t StyleName );
    VARIANT_BOOL GetDefaults_ShowHiddenEdges ( );
    void PutDefaults_ShowHiddenEdges (
        VARIANT_BOOL value );
    _bstr_t GetDefaults_HiddenEdgeStyleName ( );
    void PutDefaults_HiddenEdgeStyleName (
        _bstr_t StyleName );
    VARIANT_BOOL GetDefaults_ShowEdgesHiddenByOtherParts ( );
    void PutDefaults_ShowEdgesHiddenByOtherParts (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDefaults_ShowTangentEdges ( );
    void PutDefaults_ShowTangentEdges (
        VARIANT_BOOL value );
    _bstr_t GetDefaults_TangentEdgeStyleName ( );
    void PutDefaults_TangentEdgeStyleName (
        _bstr_t StyleName );
    VARIANT_BOOL GetDefaults_ShowTubeCenterlines ( );
    void PutDefaults_ShowTubeCenterlines (
        VARIANT_BOOL value );
    _bstr_t GetDefaults_TubeCenterlineStyleName ( );
    void PutDefaults_TubeCenterlineStyleName (
        _bstr_t StyleName );
    VARIANT_BOOL GetDefaults_ShowEdgesHiddenTangentEdgesSelfHidden ( );
    void PutDefaults_ShowEdgesHiddenTangentEdgesSelfHidden (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDefaults_ShowEdgesHiddenTangentEdgesHiddenByOtherParts ( );
    void PutDefaults_ShowEdgesHiddenTangentEdgesHiddenByOtherParts (
        VARIANT_BOOL value );
    VARIANT_BOOL GetCroppedVHL ( );
    void PutCroppedVHL (
        VARIANT_BOOL value );
    HRESULT ConvertToIndependentDetailView ( );
    _bstr_t GetPMIModelView ( );
    void PutPMIModelView (
        _bstr_t PMIModelViewName );
    VARIANT_BOOL GetIncludePMIDimensions ( );
    void PutIncludePMIDimensions (
        VARIANT_BOOL value );
    void PutCroppedBoundaryStyle (
        _bstr_t StyleName );
    _bstr_t GetCroppedBoundaryStyle ( );
    void PutDisplayCroppedBoundary (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDisplayCroppedBoundary ( );
    void PutDisplayBorder (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDisplayBorder ( );
    VARIANT_BOOL GetIncludePMIAnnotations ( );
    void PutIncludePMIAnnotations (
        VARIANT_BOOL value );
    VARIANT_BOOL GetEdgesUseModelColor ( );
    void PutEdgesUseModelColor (
        VARIANT_BOOL useModelColor );
    VARIANT_BOOL GetEdgesUsePartBaseColor ( );
    void PutEdgesUsePartBaseColor (
        VARIANT_BOOL useBaseColor );
    VARIANT_BOOL GetEdgesUseAssemblyOverrideColor ( );
    void PutEdgesUseAssemblyOverrideColor (
        VARIANT_BOOL useAssemblyOverrideColor );
    VARIANT_BOOL GetSectionHatchUseModelColor ( );
    void PutSectionHatchUseModelColor (
        VARIANT_BOOL useModelColor );
    VARIANT_BOOL GetIsPerspective ( );
    HRESULT SetPerspectiveOn (
        double FocalLength );
    HRESULT SetPerspectiveOff ( );
    HRESULT SetPerspectiveFromNamedView (
        _bstr_t ViewName );
    VARIANT_BOOL GetIsBrokenOutSectionTarget ( );
    VARIANT_BOOL GetIsCut ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    void PutLockView (
        VARIANT_BOOL value );
    VARIANT_BOOL GetLockView ( );
    void PutHatchRibsInSectionViews (
        VARIANT_BOOL value );
    VARIANT_BOOL GetHatchRibsInSectionViews ( );
    VARIANT_BOOL GetDisplayBreakLinesInBrokenState ( );
    void PutDisplayBreakLinesInBrokenState (
        VARIANT_BOOL DisplayBreakLinesInBrokenState );
    _bstr_t GetCaptionDefinitionTextPrimary ( );
    void PutCaptionDefinitionTextPrimary (
        _bstr_t CaptionDefinitionTextPrimary );
    _bstr_t GetCaptionDisplayedTextPrimary ( );
    VARIANT_BOOL GetDisplayCaptionPrimary ( );
    void PutDisplayCaptionPrimary (
        VARIANT_BOOL DisplayCaptionPrimary );
    _bstr_t GetCaptionDefinitionTextSecondary ( );
    void PutCaptionDefinitionTextSecondary (
        _bstr_t CaptionDefinitionTextSecondary );
    _bstr_t GetCaptionDisplayedTextSecondary ( );
    VARIANT_BOOL GetDisplayCaptionSecondary ( );
    void PutDisplayCaptionSecondary (
        VARIANT_BOOL DisplayCaptionSecondary );
    _bstr_t GetSuffixDefinitionText ( );
    void PutSuffixDefinitionText (
        _bstr_t SuffixDefinitionText );
    _bstr_t GetScaleDefinitionText ( );
    void PutScaleDefinitionText (
        _bstr_t ScaleDefinitionText );
    HRESULT SetViewOrientation (
        double ViewVector_X,
        double ViewVector_Y,
        double ViewVector_Z,
        double LocalXVector_X,
        double LocalXVector_Y,
        double LocalXVector_Z );
    HRESULT SetViewOrientationStandard (
        enum ViewOrientationConstants Orientation );
    HRESULT SetViewOrientationFromNamedView (
        _bstr_t NamedView,
        VARIANT_BOOL UsePerspective );
    HRESULT ForceUpdate ( );
    DrawingViewPtr GetSourceDrawingView ( );
    HRESULT GetCaptionPosition (
        double * x,
        double * y );
    HRESULT SetCaptionPosition (
        double x,
        double y );
    _bstr_t GetZone ( );
    void PutZone (
        _bstr_t Zone );
    void PutIsSnapShot (
        VARIANT_BOOL bIsSnapShot );
    enum DrawingViewSimplifiedAssemblyOptionConstants GetSimplifiedAssemblyOption ( );
    void PutSimplifiedAssemblyOption (
        enum DrawingViewSimplifiedAssemblyOptionConstants SimplifiedAssemblyOption );
    enum DrawingViewSimplifiedPartOptionConstants GetSimplifiedPartOption ( );
    void PutSimplifiedPartOption (
        enum DrawingViewSimplifiedPartOptionConstants SimplifiedPartOption );
    _bstr_t GetAnnotationSheetNumberDefinitionText ( );
    void PutAnnotationSheetNumberDefinitionText (
        _bstr_t AnnotationSheetNumberDefinitionText );
    VARIANT_BOOL GetDisplayAnnotationSheetNumber ( );
    void PutDisplayAnnotationSheetNumber (
        VARIANT_BOOL DisplayAnnotationSheetNumber );
    _bstr_t GetRotationAngleDefinitionText ( );
    void PutRotationAngleDefinitionText (
        _bstr_t RotationAngleDefinitionText );
    VARIANT_BOOL GetDisplayRotationAngle ( );
    void PutDisplayRotationAngle (
        VARIANT_BOOL DisplayRotationAngle );
    _bstr_t GetPrimaryCaptionFont ( );
    void PutPrimaryCaptionFont (
        _bstr_t PrimaryCaptionFont );
    enum TGFrameworkSupport::DimTextFontStyleConstants GetPrimaryCaptionFontStyle ( );
    void PutPrimaryCaptionFontStyle (
        enum TGFrameworkSupport::DimTextFontStyleConstants PrimaryCaptionFontStyle );
    long GetPrimaryCaptionColor ( );
    void PutPrimaryCaptionColor (
        long PrimaryCaptionColor );
    double GetPrimaryCaptionTextSize ( );
    void PutPrimaryCaptionTextSize (
        double PrimaryCaptionTextSize );
    enum TGFrameworkSupport::DrawingViewCaptionTextAlignment GetPrimaryCaptionTextAlignment ( );
    void PutPrimaryCaptionTextAlignment (
        enum TGFrameworkSupport::DrawingViewCaptionTextAlignment PrimaryCaptionTextAlignment );
    _bstr_t GetSecondaryCaptionFont ( );
    void PutSecondaryCaptionFont (
        _bstr_t SecondaryCaptionFont );
    enum TGFrameworkSupport::DimTextFontStyleConstants GetSecondaryCaptionFontStyle ( );
    void PutSecondaryCaptionFontStyle (
        enum TGFrameworkSupport::DimTextFontStyleConstants SecondaryCaptionFontStyle );
    long GetSecondaryCaptionColor ( );
    void PutSecondaryCaptionColor (
        long SecondaryCaptionColor );
    double GetSecondaryCaptionTextSize ( );
    void PutSecondaryCaptionTextSize (
        double SecondaryCaptionTextSize );
    enum TGFrameworkSupport::DrawingViewCaptionTextAlignment GetSecondaryCaptionTextAlignment ( );
    void PutSecondaryCaptionTextAlignment (
        enum TGFrameworkSupport::DrawingViewCaptionTextAlignment SecondaryCaptionTextAlignment );
    VARIANT_BOOL GetShowPrimarySecondayCaptionSeparator ( );
    void PutShowPrimarySecondayCaptionSeparator (
        VARIANT_BOOL ShowPrimarySecondayCaptionSeparator );
    enum TGFrameworkSupport::DimViewCaptionLocationConstants GetCaptionLocation ( );
    void PutCaptionLocation (
        enum TGFrameworkSupport::DimViewCaptionLocationConstants CaptionLocation );
    ModelMembersPtr ExecuteQuery (
        _bstr_t QueryName );
    VARIANT_BOOL GetReferenceComponentsByConfigurations ( );
    void PutReferenceComponentsByConfigurations (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDefaults_SolidFillSectionWeldBeads ( );
    void PutDefaults_SolidFillSectionWeldBeads (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDefaults_EnableAlternatingHatchSpacing ( );
    void PutDefaults_EnableAlternatingHatchSpacing (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDefaults_EnableAlternatingHatchAngle ( );
    void PutDefaults_EnableAlternatingHatchAngle (
        VARIANT_BOOL value );
    _bstr_t GetPrimaryMember ( );
    void PutPrimaryMember (
        _bstr_t PrimaryMember );
    HRESULT GetAlternateMembers (
        long * NumMembers,
        SAFEARRAY * * Members );
    HRESULT GetAlternatePositionMemberCandidates (
        long * NumMembers,
        SAFEARRAY * * Members );
    HRESULT AddAlternateMember (
        _bstr_t Member );
    HRESULT RemoveAlternateMember (
        _bstr_t Member );
    void PutLayer (
        _bstr_t Layer );
    _bstr_t GetLayer ( );
    VARIANT_BOOL GetSectionOnly ( );
    void PutSectionOnly (
        VARIANT_BOOL SectionOnly );
    CuttingPlanesPtr GetCuttingPlanes ( );
    BrokenOutSectionProfilesPtr GetBrokenOutSectionProfiles ( );
    DetailEnvelopesPtr GetDetailEnvelopes ( );
    DraftProfilePtr GetCroppingBoundaryProfile ( );
    HighlightDrawingViewMembersPtr GetHighlightDrawingViewMembers ( );
    HRESULT AddConnectedDimensionsToSelectSet ( );
    HRESULT AddConnectedAnnotationsToSelectSet ( );
    _bstr_t GetLastUpdateSEVersion ( );
    _variant_t GetLastUpdateDate ( );
    _bstr_t GetLastUpdateUsername ( );
    double GetLastUpdateTimeToUpdate ( );
    _bstr_t GetDefaults_CoordinateSystemEdgeStyleName ( );
    void PutDefaults_CoordinateSystemEdgeStyleName (
        _bstr_t StyleName );
    HRESULT ClearEdgeOverrides ( );
    void PutIsReferencePartTransparent (
        VARIANT_BOOL bTrans );
    VARIANT_BOOL GetIsReferencePartTransparent ( );
    void PutRetrieveDimOnUpdate (
        VARIANT_BOOL value );
    VARIANT_BOOL GetRetrieveDimOnUpdate ( );
    BreakLinePairsPtr GetBreakLinePairs ( );
    HRESULT SetBrokenState ( );
    HRESULT SetUnBrokenState ( );
    void PutDepthPlaneOffset (
        double depthOffset );
    double GetDepthPlaneOffset ( );
    HRESULT RemoveDepthPlane ( );
    void PutSectionFullModel (
        VARIANT_BOOL value );
    VARIANT_BOOL GetSectionFullModel ( );
    void PutRevolvedSection (
        VARIANT_BOOL value );
    VARIANT_BOOL GetRevolvedSection ( );
    HRESULT AddBreakAxisForBreakLines (
        IUnknown * pElement1,
        enum KeypointIndexConstants KeyPointIndex1,
        IUnknown * pElement2,
        enum KeypointIndexConstants KeyPointIndex2 );
    HRESULT SetCenterForDetailView (
        double x,
        double y );
    HRESULT GetCenterForDetailView (
        double * x,
        double * y );
    HRESULT RetrieveSlotCenterLinesCenterMarks (
        VARIANT_BOOL IsRetrieve,
        _bstr_t DimensionStyleName,
        VARIANT_BOOL TypeCenterLine,
        VARIANT_BOOL TypeCenterMark,
        VARIANT_BOOL ProjectCenterMark,
        VARIANT_BOOL GetSlotCenterLines,
        VARIANT_BOOL GetStrikePointCenterMarks,
        VARIANT_BOOL GetEndPointCenterMarks,
        VARIANT_BOOL GetCenterofArcProjectionLines,
        VARIANT_BOOL EnableCenterMarkRangeCheck,
        VARIANT_BOOL EnableCenterLineRangeCheck,
        double dCenterLineMinRadius,
        double dCenterLineMaxRadius,
        double dCenterMarkMinRadius,
        double dCenterMarkMaxRadius );
    void PutShowNewComponentsAddedtoAssembly (
        VARIANT_BOOL value );
    VARIANT_BOOL GetShowNewComponentsAddedtoAssembly ( );
    HRESULT GetEdgeOrFaceID (
        IDispatch * pGraphicDVObj,
        long * pEntityId,
        VARIANT_BOOL * pIsEdge );
    HRESULT SetBendCenterlineStyleAndDisplay (
        enum StyleConstants bendUpCenterlineStyle,
        enum StyleConstants bendDownCenterlineStyle );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ScaleFactor (
        /*[out,retval]*/ double * Scale ) = 0;
      virtual HRESULT __stdcall put_ScaleFactor (
        /*[in]*/ double Scale ) = 0;
      virtual HRESULT __stdcall raw_GetOrigin (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall raw_SetOrigin (
        /*[in]*/ double x,
        /*[in]*/ double y ) = 0;
      virtual HRESULT __stdcall get_DrawingViewType (
        /*[out,retval]*/ enum DrawingViewTypeConstants * DrawingViewType ) = 0;
      virtual HRESULT __stdcall get_CropLeft (
        /*[out,retval]*/ double * offset ) = 0;
      virtual HRESULT __stdcall put_CropLeft (
        /*[in]*/ double offset ) = 0;
      virtual HRESULT __stdcall get_CropRight (
        /*[out,retval]*/ double * offset ) = 0;
      virtual HRESULT __stdcall put_CropRight (
        /*[in]*/ double offset ) = 0;
      virtual HRESULT __stdcall get_CropTop (
        /*[out,retval]*/ double * offset ) = 0;
      virtual HRESULT __stdcall put_CropTop (
        /*[in]*/ double offset ) = 0;
      virtual HRESULT __stdcall get_CropBottom (
        /*[out,retval]*/ double * offset ) = 0;
      virtual HRESULT __stdcall put_CropBottom (
        /*[in]*/ double offset ) = 0;
      virtual HRESULT __stdcall get_Crop (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_Crop (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * Caption ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR Caption ) = 0;
      virtual HRESULT __stdcall get_Suffix (
        /*[out,retval]*/ BSTR * Suffix ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * Description ) = 0;
      virtual HRESULT __stdcall put_Description (
        /*[in]*/ BSTR Description ) = 0;
      virtual HRESULT __stdcall get_DisplayCaption (
        /*[out,retval]*/ VARIANT_BOOL * DisplayCaption ) = 0;
      virtual HRESULT __stdcall put_DisplayCaption (
        /*[in]*/ VARIANT_BOOL DisplayCaption ) = 0;
      virtual HRESULT __stdcall get_DisplaySuffix (
        /*[out,retval]*/ VARIANT_BOOL * DisplaySuffix ) = 0;
      virtual HRESULT __stdcall put_DisplaySuffix (
        /*[in]*/ VARIANT_BOOL DisplaySuffix ) = 0;
      virtual HRESULT __stdcall get_DisplayScale (
        /*[out,retval]*/ VARIANT_BOOL * DisplayScale ) = 0;
      virtual HRESULT __stdcall put_DisplayScale (
        /*[in]*/ VARIANT_BOOL DisplayScale ) = 0;
      virtual HRESULT __stdcall get_DisplayAnnotation (
        /*[out,retval]*/ VARIANT_BOOL * DisplayAnnotation ) = 0;
      virtual HRESULT __stdcall put_DisplayAnnotation (
        /*[in]*/ VARIANT_BOOL DisplayAnnotation ) = 0;
      virtual HRESULT __stdcall get_Annotation (
        /*[out,retval]*/ IDispatch * * Annotation ) = 0;
      virtual HRESULT __stdcall get_Sheet (
        /*[out,retval]*/ IDispatch * * Sheet ) = 0;
      virtual HRESULT __stdcall put_Sheet (
        /*[in]*/ IDispatch * Sheet ) = 0;
      virtual HRESULT __stdcall get_DisplayWindow (
        /*[out,retval]*/ VARIANT_BOOL * DisplayWindow ) = 0;
      virtual HRESULT __stdcall put_DisplayWindow (
        /*[in]*/ VARIANT_BOOL DisplayWindow ) = 0;
      virtual HRESULT __stdcall get_ModelLink (
        /*[out,retval]*/ IDispatch * * ModelLink ) = 0;
      virtual HRESULT __stdcall get_IsUpToDate (
        /*[out,retval]*/ VARIANT_BOOL * UpToDate ) = 0;
      virtual HRESULT __stdcall raw_SheetToView (
        /*[in]*/ double xSheet,
        /*[in]*/ double ySheet,
        /*[out]*/ double * xView,
        /*[out]*/ double * yView ) = 0;
      virtual HRESULT __stdcall raw_ViewToSheet (
        /*[in]*/ double xView,
        /*[in]*/ double yView,
        /*[out]*/ double * xSheet,
        /*[out]*/ double * ySheet ) = 0;
      virtual HRESULT __stdcall raw_Drop (
        /*[out,retval]*/ IDispatch * * ppObj ) = 0;
      virtual HRESULT __stdcall raw_Update ( ) = 0;
      virtual HRESULT __stdcall get_TextFont (
        /*[out,retval]*/ BSTR * TextFont ) = 0;
      virtual HRESULT __stdcall put_TextFont (
        /*[in]*/ BSTR TextFont ) = 0;
      virtual HRESULT __stdcall get_TextFontStyle (
        /*[out,retval]*/ enum TGFrameworkSupport::DimTextFontStyleConstants * TextFontStyle ) = 0;
      virtual HRESULT __stdcall put_TextFontStyle (
        /*[in]*/ enum TGFrameworkSupport::DimTextFontStyleConstants TextFontStyle ) = 0;
      virtual HRESULT __stdcall get_TextHeight (
        /*[out,retval]*/ double * TextHeight ) = 0;
      virtual HRESULT __stdcall put_TextHeight (
        /*[in]*/ double TextHeight ) = 0;
      virtual HRESULT __stdcall get_TextRatio (
        /*[out,retval]*/ double * TextRatio ) = 0;
      virtual HRESULT __stdcall put_TextRatio (
        /*[in]*/ double TextRatio ) = 0;
      virtual HRESULT __stdcall get_TextColor (
        /*[out,retval]*/ long * TextColor ) = 0;
      virtual HRESULT __stdcall put_TextColor (
        /*[in]*/ long TextColor ) = 0;
      virtual HRESULT __stdcall get_StyleName (
        /*[out,retval]*/ BSTR * StyleName ) = 0;
      virtual HRESULT __stdcall put_StyleName (
        /*[in]*/ BSTR StyleName ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[in]*/ VARIANT Recurse,
        /*[in,lcid]*/ long Lcid,
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Toggle ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL * Toggle ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * ZOrder ) = 0;
      virtual HRESULT __stdcall get_Key (
        /*[in]*/ VARIANT Recurse,
        /*[out,retval]*/ BSTR * Key ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ IDispatch * * Document ) = 0;
      virtual HRESULT __stdcall raw_Copy ( ) = 0;
      virtual HRESULT __stdcall raw_Cut ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_BringToFront ( ) = 0;
      virtual HRESULT __stdcall raw_BringForward ( ) = 0;
      virtual HRESULT __stdcall raw_SendToBack ( ) = 0;
      virtual HRESULT __stdcall raw_SendBackward ( ) = 0;
      virtual HRESULT __stdcall raw_Select ( ) = 0;
      virtual HRESULT __stdcall raw_Range (
        /*[out]*/ double * min_x,
        /*[out]*/ double * min_y,
        /*[out]*/ double * max_x,
        /*[out]*/ double * max_y ) = 0;
      virtual HRESULT __stdcall get_CoordinateSystems2d (
        /*[out,retval]*/ struct CoordinateSystems2d * * CoordinateSystems2d ) = 0;
      virtual HRESULT __stdcall raw_GetActiveCoordinateSystem (
        /*[out]*/ VARIANT * CoordinateSystem2d,
        /*[out]*/ VARIANT * AlignmentAxis ) = 0;
      virtual HRESULT __stdcall raw_SetActiveCoordinateSystem (
        /*[in]*/ VARIANT CoordinateSystem2d = vtMissing,
        /*[in]*/ VARIANT AlignmentAxis = vtMissing ) = 0;
      virtual HRESULT __stdcall get_ModelMembers (
        /*[out,retval]*/ struct ModelMembers * * ModelMembers ) = 0;
      virtual HRESULT __stdcall get_GraphicMembers (
        /*[out,retval]*/ struct GraphicMembers * * GraphicMembers ) = 0;
      virtual HRESULT __stdcall get_ShowEdgesHiddenByOtherParts (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_ShowEdgesHiddenByOtherParts (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_ProcessPartIntersections (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_ProcessPartIntersections (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVLines2d (
        /*[out,retval]*/ struct DVLines2d * * DVLines2d ) = 0;
      virtual HRESULT __stdcall get_DVArcs2d (
        /*[out,retval]*/ struct DVArcs2d * * DVArcs2d ) = 0;
      virtual HRESULT __stdcall get_DVBSplineCurves2d (
        /*[out,retval]*/ struct DVBSplineCurves2d * * DVBSplineCurves2d ) = 0;
      virtual HRESULT __stdcall get_DVCircles2d (
        /*[out,retval]*/ struct DVCircles2d * * DVCircles2d ) = 0;
      virtual HRESULT __stdcall get_DVEllipses2d (
        /*[out,retval]*/ struct DVEllipses2d * * DVEllipses2d ) = 0;
      virtual HRESULT __stdcall get_DVLineStrings2d (
        /*[out,retval]*/ struct DVLineStrings2d * * DVLineStrings2d ) = 0;
      virtual HRESULT __stdcall get_DVEllipticalArcs2d (
        /*[out,retval]*/ struct DVEllipticalArcs2d * * DVEllipticalArcs2d ) = 0;
      virtual HRESULT __stdcall get_DVPoints2d (
        /*[out,retval]*/ struct DVPoints2d * * DVPoints2d ) = 0;
      virtual HRESULT __stdcall get_Configuration (
        /*[out,retval]*/ BSTR * Configuration ) = 0;
      virtual HRESULT __stdcall put_Configuration (
        /*[in]*/ BSTR Configuration ) = 0;
      virtual HRESULT __stdcall raw_CheckConfiguration (
        /*[out]*/ VARIANT_BOOL * UpToDate ) = 0;
      virtual HRESULT __stdcall get_ViewType (
        /*[out,retval]*/ long * ViewType ) = 0;
      virtual HRESULT __stdcall get_MatchConfiguration (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_MatchConfiguration (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_ScaleDimensionsAndAnnotations (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_ScaleDimensionsAndAnnotations (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall raw_GetReferenceToGraphicMember (
        /*[in]*/ IDispatch * GraphicMember,
        /*[out]*/ struct TGFramework::Reference * * Reference ) = 0;
      virtual HRESULT __stdcall get_GetReferenceToGraphicMember2 (
        /*[in]*/ IDispatch * GraphicMember,
        /*[out,retval]*/ struct TGFramework::Reference * * Reference ) = 0;
      virtual HRESULT __stdcall raw_GetRotationAngle (
        /*[out]*/ double * dRotAngle ) = 0;
      virtual HRESULT __stdcall raw_SetRotationAngle (
        /*[in]*/ double dRotAngle ) = 0;
      virtual HRESULT __stdcall raw_GetListOfHiddenLayers (
        /*[out]*/ long * NumLayers,
        /*[in,out]*/ SAFEARRAY * * HiddenLayers ) = 0;
      virtual HRESULT __stdcall raw_HideLayer (
        /*[in]*/ BSTR LayerName ) = 0;
      virtual HRESULT __stdcall raw_ShowLayer (
        /*[in]*/ BSTR LayerName ) = 0;
      virtual HRESULT __stdcall raw_IsLayerHidden (
        /*[in]*/ BSTR LayerName,
        /*[out,retval]*/ VARIANT_BOOL * IsHidden ) = 0;
      virtual HRESULT __stdcall raw_RetrieveDimensions (
        /*[in]*/ VARIANT_BOOL IsRetrieve,
        /*[in]*/ BSTR DimensionStyleName,
        /*[in]*/ VARIANT_BOOL TypeLinear,
        /*[in]*/ VARIANT_BOOL TypeRadial,
        /*[in]*/ VARIANT_BOOL TypeAngular,
        /*[in]*/ VARIANT_BOOL TypeAnnotation,
        /*[in]*/ VARIANT_BOOL TypeCenterMark,
        /*[in]*/ VARIANT_BOOL GetDuplicatedRadial,
        /*[in]*/ VARIANT_BOOL GetDimensionToHiddenLines,
        /*[in]*/ VARIANT_BOOL ProjectCenterMark,
        /*[in]*/ VARIANT_BOOL ConnectCenters,
        /*[in]*/ VARIANT_BOOL GetCenterMarkToCircle,
        /*[in]*/ VARIANT_BOOL GetCenterMarkToArc ) = 0;
      virtual HRESULT __stdcall raw_RetrieveCenterLinesCenterMarks (
        /*[in]*/ VARIANT_BOOL IsRetrieve,
        /*[in]*/ BSTR DimensionStyleName,
        /*[in]*/ VARIANT_BOOL TypeCenterLine,
        /*[in]*/ VARIANT_BOOL TypeCenterMark,
        /*[in]*/ VARIANT_BOOL ProjectCenterMark,
        /*[in]*/ VARIANT_BOOL ConnectCenters,
        /*[in]*/ VARIANT_BOOL GetCenterLineToFullCylinder,
        /*[in]*/ VARIANT_BOOL GetCenterLineToPartialCylinder,
        /*[in]*/ VARIANT_BOOL GetCenterMarkToCircle,
        /*[in]*/ VARIANT_BOOL GetCenterMarkToArc,
        /*[in]*/ VARIANT_BOOL GetCenterMarkToEllipse,
        /*[in]*/ VARIANT_BOOL GetCenterMarkToPartialEllipse,
        /*[in]*/ VARIANT_BOOL EnableCenterMarkRangeCheck,
        /*[in]*/ VARIANT_BOOL EnableCenterLineRangeCheck,
        /*[in]*/ double dCenterLineMinRadius,
        /*[in]*/ double dCenterLineMaxRadius,
        /*[in]*/ double dCenterMarkMinRadius,
        /*[in]*/ double dCenterMarkMaxRadius ) = 0;
      virtual HRESULT __stdcall get_Shading (
        /*[out,retval]*/ VARIANT_BOOL * Shading ) = 0;
      virtual HRESULT __stdcall put_Shading (
        /*[in]*/ VARIANT_BOOL Shading ) = 0;
      virtual HRESULT __stdcall get_ShadingQuality (
        /*[out,retval]*/ enum DrawingViewShadingQualityConstants * ShadingQuality ) = 0;
      virtual HRESULT __stdcall put_ShadingQuality (
        /*[in]*/ enum DrawingViewShadingQualityConstants ShadingQuality ) = 0;
      virtual HRESULT __stdcall get_ShadingAllowAssemblyOverrides (
        /*[out,retval]*/ VARIANT_BOOL * ShadingAllowAssemblyOverrides ) = 0;
      virtual HRESULT __stdcall put_ShadingAllowAssemblyOverrides (
        /*[in]*/ VARIANT_BOOL ShadingAllowAssemblyOverrides ) = 0;
      virtual HRESULT __stdcall get_ShadingAllowPartFaceColors (
        /*[out,retval]*/ VARIANT_BOOL * ShadingAllowPartFaceColors ) = 0;
      virtual HRESULT __stdcall put_ShadingAllowPartFaceColors (
        /*[in]*/ VARIANT_BOOL ShadingAllowPartFaceColors ) = 0;
      virtual HRESULT __stdcall get_ShadingShowVisibleEdges (
        /*[out,retval]*/ VARIANT_BOOL * ShadingShowVisibleEdges ) = 0;
      virtual HRESULT __stdcall put_ShadingShowVisibleEdges (
        /*[in]*/ VARIANT_BOOL ShadingShowVisibleEdges ) = 0;
      virtual HRESULT __stdcall get_ShadingGrayscale (
        /*[out,retval]*/ VARIANT_BOOL * ShadingGrayscale ) = 0;
      virtual HRESULT __stdcall put_ShadingGrayscale (
        /*[in]*/ VARIANT_BOOL ShadingGrayscale ) = 0;
      virtual HRESULT __stdcall get_ShadingFlat (
        /*[out,retval]*/ VARIANT_BOOL * ShadingFlat ) = 0;
      virtual HRESULT __stdcall put_ShadingFlat (
        /*[in]*/ VARIANT_BOOL ShadingFlat ) = 0;
      virtual HRESULT __stdcall get_ShadingTextures (
        /*[out,retval]*/ VARIANT_BOOL * ShadingTextures ) = 0;
      virtual HRESULT __stdcall put_ShadingTextures (
        /*[in]*/ VARIANT_BOOL ShadingTextures ) = 0;
      virtual HRESULT __stdcall get_ShadingReflections (
        /*[out,retval]*/ VARIANT_BOOL * ShadingReflections ) = 0;
      virtual HRESULT __stdcall put_ShadingReflections (
        /*[in]*/ VARIANT_BOOL ShadingReflections ) = 0;
      virtual HRESULT __stdcall get_IsSnapShot (
        /*[out,retval]*/ VARIANT_BOOL * bIsSnapShot ) = 0;
      virtual HRESULT __stdcall get_SnapShotQuality (
        /*[out,retval]*/ enum DrawingViewSnapShotQualityConstants * SnapShotQuality ) = 0;
      virtual HRESULT __stdcall put_SnapShotQuality (
        /*[in]*/ enum DrawingViewSnapShotQualityConstants SnapShotQuality ) = 0;
      virtual HRESULT __stdcall get_VHL_ToleranceOverrideQuality (
        /*[out,retval]*/ enum DrawingViewVHL_ToleranceOverrideQualityConstants * VHL_ToleranceOverrideQuality ) = 0;
      virtual HRESULT __stdcall put_VHL_ToleranceOverrideQuality (
        /*[in]*/ enum DrawingViewVHL_ToleranceOverrideQualityConstants VHL_ToleranceOverrideQuality ) = 0;
      virtual HRESULT __stdcall get_IsBroken (
        /*[out,retval]*/ VARIANT_BOOL * bIsBroken ) = 0;
      virtual HRESULT __stdcall raw_ModelToView (
        /*[in]*/ double xModel,
        /*[in]*/ double yModel,
        /*[in]*/ double zModel,
        /*[out]*/ double * xView,
        /*[out]*/ double * yView ) = 0;
      virtual HRESULT __stdcall raw_ViewOrientation (
        /*[out]*/ double * ViewVector_X,
        /*[out]*/ double * ViewVector_Y,
        /*[out]*/ double * ViewVector_Z,
        /*[out]*/ double * LocalXVector_X,
        /*[out]*/ double * LocalXVector_Y,
        /*[out]*/ double * LocalXVector_Z,
        /*[out]*/ enum ViewOrientationConstants * Orientation ) = 0;
      virtual HRESULT __stdcall get_Snapshot (
        /*[out,retval]*/ VARIANT_BOOL * Snapshot ) = 0;
      virtual HRESULT __stdcall put_Snapshot (
        /*[in]*/ VARIANT_BOOL Snapshot ) = 0;
      virtual HRESULT __stdcall get_TangencyTolerance (
        /*[out,retval]*/ double * dTangencyTolInDegrees ) = 0;
      virtual HRESULT __stdcall put_TangencyTolerance (
        /*[in]*/ double dTangencyTolInDegrees ) = 0;
      virtual HRESULT __stdcall get_ThreadAxisTolerance (
        /*[out,retval]*/ double * dThreadAxisTolInDegrees ) = 0;
      virtual HRESULT __stdcall put_ThreadAxisTolerance (
        /*[in]*/ double dThreadAxisTolInDegrees ) = 0;
      virtual HRESULT __stdcall get_BsplineSimplification (
        /*[out,retval]*/ enum DrawingViewBsplineSimplificationConstants * BsplineSimplification ) = 0;
      virtual HRESULT __stdcall put_BsplineSimplification (
        /*[in]*/ enum DrawingViewBsplineSimplificationConstants BsplineSimplification ) = 0;
      virtual HRESULT __stdcall get_IntersectionProcessing (
        /*[out,retval]*/ enum DrawingViewIntersectionProcessingConstants * IntersectionProcessing ) = 0;
      virtual HRESULT __stdcall put_IntersectionProcessing (
        /*[in]*/ enum DrawingViewIntersectionProcessingConstants IntersectionProcessing ) = 0;
      virtual HRESULT __stdcall get_Defaults_ShowSectionHatch (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_Defaults_ShowSectionHatch (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_Defaults_DeriveSectionHatchStyleNameFromPart (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_Defaults_DeriveSectionHatchStyleNameFromPart (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_Defaults_SectionHatchStyleName (
        /*[out,retval]*/ BSTR * StyleName ) = 0;
      virtual HRESULT __stdcall put_Defaults_SectionHatchStyleName (
        /*[in]*/ BSTR StyleName ) = 0;
      virtual HRESULT __stdcall get_Defaults_VisibleEdgeStyleName (
        /*[out,retval]*/ BSTR * StyleName ) = 0;
      virtual HRESULT __stdcall put_Defaults_VisibleEdgeStyleName (
        /*[in]*/ BSTR StyleName ) = 0;
      virtual HRESULT __stdcall get_Defaults_ShowHiddenEdges (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_Defaults_ShowHiddenEdges (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_Defaults_HiddenEdgeStyleName (
        /*[out,retval]*/ BSTR * StyleName ) = 0;
      virtual HRESULT __stdcall put_Defaults_HiddenEdgeStyleName (
        /*[in]*/ BSTR StyleName ) = 0;
      virtual HRESULT __stdcall get_Defaults_ShowEdgesHiddenByOtherParts (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_Defaults_ShowEdgesHiddenByOtherParts (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_Defaults_ShowTangentEdges (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_Defaults_ShowTangentEdges (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_Defaults_TangentEdgeStyleName (
        /*[out,retval]*/ BSTR * StyleName ) = 0;
      virtual HRESULT __stdcall put_Defaults_TangentEdgeStyleName (
        /*[in]*/ BSTR StyleName ) = 0;
      virtual HRESULT __stdcall get_Defaults_ShowTubeCenterlines (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_Defaults_ShowTubeCenterlines (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_Defaults_TubeCenterlineStyleName (
        /*[out,retval]*/ BSTR * StyleName ) = 0;
      virtual HRESULT __stdcall put_Defaults_TubeCenterlineStyleName (
        /*[in]*/ BSTR StyleName ) = 0;
      virtual HRESULT __stdcall get_Defaults_ShowEdgesHiddenTangentEdgesSelfHidden (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_Defaults_ShowEdgesHiddenTangentEdgesSelfHidden (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_Defaults_ShowEdgesHiddenTangentEdgesHiddenByOtherParts (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_Defaults_ShowEdgesHiddenTangentEdgesHiddenByOtherParts (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_CroppedVHL (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_CroppedVHL (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall raw_ConvertToIndependentDetailView ( ) = 0;
      virtual HRESULT __stdcall get_PMIModelView (
        /*[out,retval]*/ BSTR * PMIModelViewName ) = 0;
      virtual HRESULT __stdcall put_PMIModelView (
        /*[in]*/ BSTR PMIModelViewName ) = 0;
      virtual HRESULT __stdcall get_IncludePMIDimensions (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_IncludePMIDimensions (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall put_CroppedBoundaryStyle (
        /*[in]*/ BSTR StyleName ) = 0;
      virtual HRESULT __stdcall get_CroppedBoundaryStyle (
        /*[out,retval]*/ BSTR * StyleName ) = 0;
      virtual HRESULT __stdcall put_DisplayCroppedBoundary (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DisplayCroppedBoundary (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DisplayBorder (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DisplayBorder (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall get_IncludePMIAnnotations (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_IncludePMIAnnotations (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_EdgesUseModelColor (
        /*[out,retval]*/ VARIANT_BOOL * useModelColor ) = 0;
      virtual HRESULT __stdcall put_EdgesUseModelColor (
        /*[in]*/ VARIANT_BOOL useModelColor ) = 0;
      virtual HRESULT __stdcall get_EdgesUsePartBaseColor (
        /*[out,retval]*/ VARIANT_BOOL * useBaseColor ) = 0;
      virtual HRESULT __stdcall put_EdgesUsePartBaseColor (
        /*[in]*/ VARIANT_BOOL useBaseColor ) = 0;
      virtual HRESULT __stdcall get_EdgesUseAssemblyOverrideColor (
        /*[out,retval]*/ VARIANT_BOOL * useAssemblyOverrideColor ) = 0;
      virtual HRESULT __stdcall put_EdgesUseAssemblyOverrideColor (
        /*[in]*/ VARIANT_BOOL useAssemblyOverrideColor ) = 0;
      virtual HRESULT __stdcall get_SectionHatchUseModelColor (
        /*[out,retval]*/ VARIANT_BOOL * useModelColor ) = 0;
      virtual HRESULT __stdcall put_SectionHatchUseModelColor (
        /*[in]*/ VARIANT_BOOL useModelColor ) = 0;
      virtual HRESULT __stdcall get_IsPerspective (
        /*[out,retval]*/ VARIANT_BOOL * bPerspective ) = 0;
      virtual HRESULT __stdcall raw_SetPerspectiveOn (
        /*[in]*/ double FocalLength ) = 0;
      virtual HRESULT __stdcall raw_SetPerspectiveOff ( ) = 0;
      virtual HRESULT __stdcall raw_SetPerspectiveFromNamedView (
        /*[in]*/ BSTR ViewName ) = 0;
      virtual HRESULT __stdcall get_IsBrokenOutSectionTarget (
        /*[out,retval]*/ VARIANT_BOOL * bIsBrokenOutSectionTarget ) = 0;
      virtual HRESULT __stdcall get_IsCut (
        /*[out,retval]*/ VARIANT_BOOL * bIsCut ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall put_LockView (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_LockView (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_HatchRibsInSectionViews (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_HatchRibsInSectionViews (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall get_DisplayBreakLinesInBrokenState (
        /*[out,retval]*/ VARIANT_BOOL * DisplayBreakLinesInBrokenState ) = 0;
      virtual HRESULT __stdcall put_DisplayBreakLinesInBrokenState (
        /*[in]*/ VARIANT_BOOL DisplayBreakLinesInBrokenState ) = 0;
      virtual HRESULT __stdcall get_CaptionDefinitionTextPrimary (
        /*[out,retval]*/ BSTR * CaptionDefinitionTextPrimary ) = 0;
      virtual HRESULT __stdcall put_CaptionDefinitionTextPrimary (
        /*[in]*/ BSTR CaptionDefinitionTextPrimary ) = 0;
      virtual HRESULT __stdcall get_CaptionDisplayedTextPrimary (
        /*[out,retval]*/ BSTR * CaptionDisplayedTextPrimary ) = 0;
      virtual HRESULT __stdcall get_DisplayCaptionPrimary (
        /*[out,retval]*/ VARIANT_BOOL * DisplayCaptionPrimary ) = 0;
      virtual HRESULT __stdcall put_DisplayCaptionPrimary (
        /*[in]*/ VARIANT_BOOL DisplayCaptionPrimary ) = 0;
      virtual HRESULT __stdcall get_CaptionDefinitionTextSecondary (
        /*[out,retval]*/ BSTR * CaptionDefinitionTextSecondary ) = 0;
      virtual HRESULT __stdcall put_CaptionDefinitionTextSecondary (
        /*[in]*/ BSTR CaptionDefinitionTextSecondary ) = 0;
      virtual HRESULT __stdcall get_CaptionDisplayedTextSecondary (
        /*[out,retval]*/ BSTR * CaptionDisplayedTextSecondary ) = 0;
      virtual HRESULT __stdcall get_DisplayCaptionSecondary (
        /*[out,retval]*/ VARIANT_BOOL * DisplayCaptionSecondary ) = 0;
      virtual HRESULT __stdcall put_DisplayCaptionSecondary (
        /*[in]*/ VARIANT_BOOL DisplayCaptionSecondary ) = 0;
      virtual HRESULT __stdcall get_SuffixDefinitionText (
        /*[out,retval]*/ BSTR * SuffixDefinitionText ) = 0;
      virtual HRESULT __stdcall put_SuffixDefinitionText (
        /*[in]*/ BSTR SuffixDefinitionText ) = 0;
      virtual HRESULT __stdcall get_ScaleDefinitionText (
        /*[out,retval]*/ BSTR * ScaleDefinitionText ) = 0;
      virtual HRESULT __stdcall put_ScaleDefinitionText (
        /*[in]*/ BSTR ScaleDefinitionText ) = 0;
      virtual HRESULT __stdcall raw_SetViewOrientation (
        /*[in]*/ double ViewVector_X,
        /*[in]*/ double ViewVector_Y,
        /*[in]*/ double ViewVector_Z,
        /*[in]*/ double LocalXVector_X,
        /*[in]*/ double LocalXVector_Y,
        /*[in]*/ double LocalXVector_Z ) = 0;
      virtual HRESULT __stdcall raw_SetViewOrientationStandard (
        /*[in]*/ enum ViewOrientationConstants Orientation ) = 0;
      virtual HRESULT __stdcall raw_SetViewOrientationFromNamedView (
        /*[in]*/ BSTR NamedView,
        /*[in]*/ VARIANT_BOOL UsePerspective ) = 0;
      virtual HRESULT __stdcall raw_ForceUpdate ( ) = 0;
      virtual HRESULT __stdcall get_SourceDrawingView (
        /*[out,retval]*/ struct DrawingView * * DrawingView ) = 0;
      virtual HRESULT __stdcall raw_GetCaptionPosition (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall raw_SetCaptionPosition (
        /*[in]*/ double x,
        /*[in]*/ double y ) = 0;
      virtual HRESULT __stdcall get_Zone (
        /*[out,retval]*/ BSTR * Zone ) = 0;
      virtual HRESULT __stdcall put_Zone (
        /*[in]*/ BSTR Zone ) = 0;
      virtual HRESULT __stdcall put_IsSnapShot (
        /*[in]*/ VARIANT_BOOL bIsSnapShot ) = 0;
      virtual HRESULT __stdcall get_SimplifiedAssemblyOption (
        /*[out,retval]*/ enum DrawingViewSimplifiedAssemblyOptionConstants * SimplifiedAssemblyOption ) = 0;
      virtual HRESULT __stdcall put_SimplifiedAssemblyOption (
        /*[in]*/ enum DrawingViewSimplifiedAssemblyOptionConstants SimplifiedAssemblyOption ) = 0;
      virtual HRESULT __stdcall get_SimplifiedPartOption (
        /*[out,retval]*/ enum DrawingViewSimplifiedPartOptionConstants * SimplifiedPartOption ) = 0;
      virtual HRESULT __stdcall put_SimplifiedPartOption (
        /*[in]*/ enum DrawingViewSimplifiedPartOptionConstants SimplifiedPartOption ) = 0;
      virtual HRESULT __stdcall get_AnnotationSheetNumberDefinitionText (
        /*[out,retval]*/ BSTR * AnnotationSheetNumberDefinitionText ) = 0;
      virtual HRESULT __stdcall put_AnnotationSheetNumberDefinitionText (
        /*[in]*/ BSTR AnnotationSheetNumberDefinitionText ) = 0;
      virtual HRESULT __stdcall get_DisplayAnnotationSheetNumber (
        /*[out,retval]*/ VARIANT_BOOL * DisplayAnnotationSheetNumber ) = 0;
      virtual HRESULT __stdcall put_DisplayAnnotationSheetNumber (
        /*[in]*/ VARIANT_BOOL DisplayAnnotationSheetNumber ) = 0;
      virtual HRESULT __stdcall get_RotationAngleDefinitionText (
        /*[out,retval]*/ BSTR * RotationAngleDefinitionText ) = 0;
      virtual HRESULT __stdcall put_RotationAngleDefinitionText (
        /*[in]*/ BSTR RotationAngleDefinitionText ) = 0;
      virtual HRESULT __stdcall get_DisplayRotationAngle (
        /*[out,retval]*/ VARIANT_BOOL * DisplayRotationAngle ) = 0;
      virtual HRESULT __stdcall put_DisplayRotationAngle (
        /*[in]*/ VARIANT_BOOL DisplayRotationAngle ) = 0;
      virtual HRESULT __stdcall get_PrimaryCaptionFont (
        /*[out,retval]*/ BSTR * PrimaryCaptionFont ) = 0;
      virtual HRESULT __stdcall put_PrimaryCaptionFont (
        /*[in]*/ BSTR PrimaryCaptionFont ) = 0;
      virtual HRESULT __stdcall get_PrimaryCaptionFontStyle (
        /*[out,retval]*/ enum TGFrameworkSupport::DimTextFontStyleConstants * PrimaryCaptionFontStyle ) = 0;
      virtual HRESULT __stdcall put_PrimaryCaptionFontStyle (
        /*[in]*/ enum TGFrameworkSupport::DimTextFontStyleConstants PrimaryCaptionFontStyle ) = 0;
      virtual HRESULT __stdcall get_PrimaryCaptionColor (
        /*[out,retval]*/ long * PrimaryCaptionColor ) = 0;
      virtual HRESULT __stdcall put_PrimaryCaptionColor (
        /*[in]*/ long PrimaryCaptionColor ) = 0;
      virtual HRESULT __stdcall get_PrimaryCaptionTextSize (
        /*[out,retval]*/ double * PrimaryCaptionTextSize ) = 0;
      virtual HRESULT __stdcall put_PrimaryCaptionTextSize (
        /*[in]*/ double PrimaryCaptionTextSize ) = 0;
      virtual HRESULT __stdcall get_PrimaryCaptionTextAlignment (
        /*[out,retval]*/ enum TGFrameworkSupport::DrawingViewCaptionTextAlignment * PrimaryCaptionTextAlignment ) = 0;
      virtual HRESULT __stdcall put_PrimaryCaptionTextAlignment (
        /*[in]*/ enum TGFrameworkSupport::DrawingViewCaptionTextAlignment PrimaryCaptionTextAlignment ) = 0;
      virtual HRESULT __stdcall get_SecondaryCaptionFont (
        /*[out,retval]*/ BSTR * SecondaryCaptionFont ) = 0;
      virtual HRESULT __stdcall put_SecondaryCaptionFont (
        /*[in]*/ BSTR SecondaryCaptionFont ) = 0;
      virtual HRESULT __stdcall get_SecondaryCaptionFontStyle (
        /*[out,retval]*/ enum TGFrameworkSupport::DimTextFontStyleConstants * SecondaryCaptionFontStyle ) = 0;
      virtual HRESULT __stdcall put_SecondaryCaptionFontStyle (
        /*[in]*/ enum TGFrameworkSupport::DimTextFontStyleConstants SecondaryCaptionFontStyle ) = 0;
      virtual HRESULT __stdcall get_SecondaryCaptionColor (
        /*[out,retval]*/ long * SecondaryCaptionColor ) = 0;
      virtual HRESULT __stdcall put_SecondaryCaptionColor (
        /*[in]*/ long SecondaryCaptionColor ) = 0;
      virtual HRESULT __stdcall get_SecondaryCaptionTextSize (
        /*[out,retval]*/ double * SecondaryCaptionTextSize ) = 0;
      virtual HRESULT __stdcall put_SecondaryCaptionTextSize (
        /*[in]*/ double SecondaryCaptionTextSize ) = 0;
      virtual HRESULT __stdcall get_SecondaryCaptionTextAlignment (
        /*[out,retval]*/ enum TGFrameworkSupport::DrawingViewCaptionTextAlignment * SecondaryCaptionTextAlignment ) = 0;
      virtual HRESULT __stdcall put_SecondaryCaptionTextAlignment (
        /*[in]*/ enum TGFrameworkSupport::DrawingViewCaptionTextAlignment SecondaryCaptionTextAlignment ) = 0;
      virtual HRESULT __stdcall get_ShowPrimarySecondayCaptionSeparator (
        /*[out,retval]*/ VARIANT_BOOL * ShowPrimarySecondayCaptionSeparator ) = 0;
      virtual HRESULT __stdcall put_ShowPrimarySecondayCaptionSeparator (
        /*[in]*/ VARIANT_BOOL ShowPrimarySecondayCaptionSeparator ) = 0;
      virtual HRESULT __stdcall get_CaptionLocation (
        /*[out,retval]*/ enum TGFrameworkSupport::DimViewCaptionLocationConstants * CaptionLocation ) = 0;
      virtual HRESULT __stdcall put_CaptionLocation (
        /*[in]*/ enum TGFrameworkSupport::DimViewCaptionLocationConstants CaptionLocation ) = 0;
      virtual HRESULT __stdcall raw_ExecuteQuery (
        /*[in]*/ BSTR QueryName,
        /*[out,retval]*/ struct ModelMembers * * ModelMembers ) = 0;
      virtual HRESULT __stdcall get_ReferenceComponentsByConfigurations (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_ReferenceComponentsByConfigurations (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_Defaults_SolidFillSectionWeldBeads (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_Defaults_SolidFillSectionWeldBeads (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_Defaults_EnableAlternatingHatchSpacing (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_Defaults_EnableAlternatingHatchSpacing (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_Defaults_EnableAlternatingHatchAngle (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_Defaults_EnableAlternatingHatchAngle (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_PrimaryMember (
        /*[out,retval]*/ BSTR * PrimaryMember ) = 0;
      virtual HRESULT __stdcall put_PrimaryMember (
        /*[in]*/ BSTR PrimaryMember ) = 0;
      virtual HRESULT __stdcall raw_GetAlternateMembers (
        /*[out]*/ long * NumMembers,
        /*[in,out]*/ SAFEARRAY * * Members ) = 0;
      virtual HRESULT __stdcall raw_GetAlternatePositionMemberCandidates (
        /*[out]*/ long * NumMembers,
        /*[in,out]*/ SAFEARRAY * * Members ) = 0;
      virtual HRESULT __stdcall raw_AddAlternateMember (
        /*[in]*/ BSTR Member ) = 0;
      virtual HRESULT __stdcall raw_RemoveAlternateMember (
        /*[in]*/ BSTR Member ) = 0;
      virtual HRESULT __stdcall put_Layer (
        /*[in]*/ BSTR Layer ) = 0;
      virtual HRESULT __stdcall get_Layer (
        /*[out,retval]*/ BSTR * Layer ) = 0;
      virtual HRESULT __stdcall get_SectionOnly (
        /*[out,retval]*/ VARIANT_BOOL * SectionOnly ) = 0;
      virtual HRESULT __stdcall put_SectionOnly (
        /*[in]*/ VARIANT_BOOL SectionOnly ) = 0;
      virtual HRESULT __stdcall get_CuttingPlanes (
        /*[out,retval]*/ struct CuttingPlanes * * CuttingPlanes ) = 0;
      virtual HRESULT __stdcall get_BrokenOutSectionProfiles (
        /*[out,retval]*/ struct BrokenOutSectionProfiles * * BrokenOutSectionProfiles ) = 0;
      virtual HRESULT __stdcall get_DetailEnvelopes (
        /*[out,retval]*/ struct DetailEnvelopes * * DetailEnvelopes ) = 0;
      virtual HRESULT __stdcall get_CroppingBoundaryProfile (
        /*[out,retval]*/ struct DraftProfile * * Profile ) = 0;
      virtual HRESULT __stdcall get_HighlightDrawingViewMembers (
        /*[out,retval]*/ struct HighlightDrawingViewMembers * * HighlightDrawingViewMembers ) = 0;
      virtual HRESULT __stdcall raw_AddConnectedDimensionsToSelectSet ( ) = 0;
      virtual HRESULT __stdcall raw_AddConnectedAnnotationsToSelectSet ( ) = 0;
      virtual HRESULT __stdcall get_LastUpdateSEVersion (
        /*[out,retval]*/ BSTR * pLastUpdateSEVersion ) = 0;
      virtual HRESULT __stdcall get_LastUpdateDate (
        /*[out,retval]*/ VARIANT * pLastUpdateDate ) = 0;
      virtual HRESULT __stdcall get_LastUpdateUsername (
        /*[out,retval]*/ BSTR * pLastUpdateUsername ) = 0;
      virtual HRESULT __stdcall get_LastUpdateTimeToUpdate (
        /*[out,retval]*/ double * pLastUpdateTimeToUpdate ) = 0;
      virtual HRESULT __stdcall get_Defaults_CoordinateSystemEdgeStyleName (
        /*[out,retval]*/ BSTR * StyleName ) = 0;
      virtual HRESULT __stdcall put_Defaults_CoordinateSystemEdgeStyleName (
        /*[in]*/ BSTR StyleName ) = 0;
      virtual HRESULT __stdcall raw_ClearEdgeOverrides ( ) = 0;
      virtual HRESULT __stdcall put_IsReferencePartTransparent (
        /*[in]*/ VARIANT_BOOL bTrans ) = 0;
      virtual HRESULT __stdcall get_IsReferencePartTransparent (
        /*[out,retval]*/ VARIANT_BOOL * bTrans ) = 0;
      virtual HRESULT __stdcall put_RetrieveDimOnUpdate (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_RetrieveDimOnUpdate (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall get_BreakLinePairs (
        /*[out,retval]*/ struct BreakLinePairs * * Rows ) = 0;
      virtual HRESULT __stdcall raw_SetBrokenState ( ) = 0;
      virtual HRESULT __stdcall raw_SetUnBrokenState ( ) = 0;
      virtual HRESULT __stdcall put_DepthPlaneOffset (
        /*[in]*/ double depthOffset ) = 0;
      virtual HRESULT __stdcall get_DepthPlaneOffset (
        /*[out,retval]*/ double * depthOffset ) = 0;
      virtual HRESULT __stdcall raw_RemoveDepthPlane ( ) = 0;
      virtual HRESULT __stdcall put_SectionFullModel (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_SectionFullModel (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_RevolvedSection (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_RevolvedSection (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall raw_AddBreakAxisForBreakLines (
        /*[in]*/ IUnknown * pElement1,
        /*[in]*/ enum KeypointIndexConstants KeyPointIndex1,
        /*[in]*/ IUnknown * pElement2,
        /*[in]*/ enum KeypointIndexConstants KeyPointIndex2 ) = 0;
      virtual HRESULT __stdcall raw_SetCenterForDetailView (
        /*[in]*/ double x,
        /*[in]*/ double y ) = 0;
      virtual HRESULT __stdcall raw_GetCenterForDetailView (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall raw_RetrieveSlotCenterLinesCenterMarks (
        /*[in]*/ VARIANT_BOOL IsRetrieve,
        /*[in]*/ BSTR DimensionStyleName,
        /*[in]*/ VARIANT_BOOL TypeCenterLine,
        /*[in]*/ VARIANT_BOOL TypeCenterMark,
        /*[in]*/ VARIANT_BOOL ProjectCenterMark,
        /*[in]*/ VARIANT_BOOL GetSlotCenterLines,
        /*[in]*/ VARIANT_BOOL GetStrikePointCenterMarks,
        /*[in]*/ VARIANT_BOOL GetEndPointCenterMarks,
        /*[in]*/ VARIANT_BOOL GetCenterofArcProjectionLines,
        /*[in]*/ VARIANT_BOOL EnableCenterMarkRangeCheck,
        /*[in]*/ VARIANT_BOOL EnableCenterLineRangeCheck,
        /*[in]*/ double dCenterLineMinRadius,
        /*[in]*/ double dCenterLineMaxRadius,
        /*[in]*/ double dCenterMarkMinRadius,
        /*[in]*/ double dCenterMarkMaxRadius ) = 0;
      virtual HRESULT __stdcall put_ShowNewComponentsAddedtoAssembly (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_ShowNewComponentsAddedtoAssembly (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall raw_GetEdgeOrFaceID (
        /*[in]*/ IDispatch * pGraphicDVObj,
        /*[out]*/ long * pEntityId,
        /*[out]*/ VARIANT_BOOL * pIsEdge ) = 0;
      virtual HRESULT __stdcall raw_SetBendCenterlineStyleAndDisplay (
        /*[in]*/ enum StyleConstants bendUpCenterlineStyle,
        /*[in]*/ enum StyleConstants bendDownCenterlineStyle ) = 0;
};

struct __declspec(uuid("a32fc151-10c7-11d0-a1c3-08003627cf02"))
ModelLink : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetFileName))
    _bstr_t FileName;
    __declspec(property(get=GetModelType))
    enum ModelLinkTypeConstants ModelType;
    __declspec(property(get=GetModelDocument))
    IDispatchPtr ModelDocument;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetModelNodes))
    ModelNodesPtr ModelNodes;
    __declspec(property(get=GetGeometricVersion))
    long GeometricVersion;
    __declspec(property(get=GetModelWelds))
    ModelWeldsPtr ModelWelds;
    __declspec(property(get=GetIsAssemblyFamilyMember))
    VARIANT_BOOL IsAssemblyFamilyMember;
    __declspec(property(get=GetAssemblyFamilyMemberName))
    _bstr_t AssemblyFamilyMemberName;
    __declspec(property(get=GetModelOutOfDate))
    VARIANT_BOOL ModelOutOfDate;
    __declspec(property(get=GetIndexReference))
    long IndexReference;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    _bstr_t GetFileName ( );
    enum ModelLinkTypeConstants GetModelType ( );
    IDispatchPtr GetModelDocument ( );
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Range2d (
        enum ViewOrientationConstants view,
        double * lowX,
        double * lowY,
        double * highX,
        double * highY,
        const _variant_t & ConfigFileName = vtMissing,
        const _variant_t & ConfigurationName = vtMissing );
    HRESULT Range3d (
        double * lowX,
        double * lowY,
        double * lowZ,
        double * highX,
        double * highY,
        double * highZ,
        const _variant_t & ConfigFileName = vtMissing,
        const _variant_t & ConfigurationName = vtMissing );
    HRESULT UpdateViews ( );
    HRESULT Delete ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    ModelNodesPtr GetModelNodes ( );
    long GetGeometricVersion ( );
    ModelWeldsPtr GetModelWelds ( );
    VARIANT_BOOL GetIsAssemblyFamilyMember ( );
    _bstr_t GetAssemblyFamilyMemberName ( );
    HRESULT GetFilesToUpdate (
        long * NumFiles,
        SAFEARRAY * * FilesToUpdate );
    HRESULT ChangeSource (
        _bstr_t FullPath,
        const _variant_t & Member = vtMissing );
    HRESULT ForceUpdateViews ( );
    VARIANT_BOOL GetModelOutOfDate ( );
    long GetIndexReference ( );
};

enum ModelLinkTypeConstants
{
    igPartLink = 0,
    igAssemblyLink = 1,
    igWeldmentLink = 2
};

struct __declspec(uuid("a32fc150-10c7-11d0-a1c3-08003627cf02"))
_IModelLinkAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetFileName))
    _bstr_t FileName;
    __declspec(property(get=GetModelType))
    enum ModelLinkTypeConstants ModelType;
    __declspec(property(get=GetModelDocument))
    IDispatchPtr ModelDocument;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetModelNodes))
    ModelNodesPtr ModelNodes;
    __declspec(property(get=GetGeometricVersion))
    long GeometricVersion;
    __declspec(property(get=GetModelWelds))
    ModelWeldsPtr ModelWelds;
    __declspec(property(get=GetIsAssemblyFamilyMember))
    VARIANT_BOOL IsAssemblyFamilyMember;
    __declspec(property(get=GetAssemblyFamilyMemberName))
    _bstr_t AssemblyFamilyMemberName;
    __declspec(property(get=GetModelOutOfDate))
    VARIANT_BOOL ModelOutOfDate;
    __declspec(property(get=GetIndexReference))
    long IndexReference;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetFileName ( );
    enum ModelLinkTypeConstants GetModelType ( );
    IDispatchPtr GetModelDocument ( );
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Range2d (
        enum ViewOrientationConstants view,
        double * lowX,
        double * lowY,
        double * highX,
        double * highY,
        const _variant_t & ConfigFileName = vtMissing,
        const _variant_t & ConfigurationName = vtMissing );
    HRESULT Range3d (
        double * lowX,
        double * lowY,
        double * lowZ,
        double * highX,
        double * highY,
        double * highZ,
        const _variant_t & ConfigFileName = vtMissing,
        const _variant_t & ConfigurationName = vtMissing );
    HRESULT UpdateViews ( );
    HRESULT Delete ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    ModelNodesPtr GetModelNodes ( );
    long GetGeometricVersion ( );
    ModelWeldsPtr GetModelWelds ( );
    VARIANT_BOOL GetIsAssemblyFamilyMember ( );
    _bstr_t GetAssemblyFamilyMemberName ( );
    HRESULT GetFilesToUpdate (
        long * NumFiles,
        SAFEARRAY * * FilesToUpdate );
    HRESULT ChangeSource (
        _bstr_t FullPath,
        const _variant_t & Member = vtMissing );
    HRESULT ForceUpdateViews ( );
    VARIANT_BOOL GetModelOutOfDate ( );
    long GetIndexReference ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_FileName (
        /*[out,retval]*/ BSTR * FileName ) = 0;
      virtual HRESULT __stdcall get_ModelType (
        /*[out,retval]*/ enum ModelLinkTypeConstants * ModelLinkType ) = 0;
      virtual HRESULT __stdcall get_ModelDocument (
        /*[out,retval]*/ IDispatch * * ModelDocument ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Range2d (
        /*[in]*/ enum ViewOrientationConstants view,
        /*[out]*/ double * lowX,
        /*[out]*/ double * lowY,
        /*[out]*/ double * highX,
        /*[out]*/ double * highY,
        /*[in]*/ VARIANT ConfigFileName = vtMissing,
        /*[in]*/ VARIANT ConfigurationName = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Range3d (
        /*[out]*/ double * lowX,
        /*[out]*/ double * lowY,
        /*[out]*/ double * lowZ,
        /*[out]*/ double * highX,
        /*[out]*/ double * highY,
        /*[out]*/ double * highZ,
        /*[in]*/ VARIANT ConfigFileName = vtMissing,
        /*[in]*/ VARIANT ConfigurationName = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_UpdateViews ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall get_ModelNodes (
        /*[out,retval]*/ struct ModelNodes * * ModelNodes ) = 0;
      virtual HRESULT __stdcall get_GeometricVersion (
        /*[out,retval]*/ long * GeometricVersion ) = 0;
      virtual HRESULT __stdcall get_ModelWelds (
        /*[out,retval]*/ struct ModelWelds * * ModelWelds ) = 0;
      virtual HRESULT __stdcall get_IsAssemblyFamilyMember (
        /*[out,retval]*/ VARIANT_BOOL * IsAssemblyFamilyMember ) = 0;
      virtual HRESULT __stdcall get_AssemblyFamilyMemberName (
        /*[out,retval]*/ BSTR * AssemblyFamilyMemberName ) = 0;
      virtual HRESULT __stdcall raw_GetFilesToUpdate (
        /*[out]*/ long * NumFiles,
        /*[in,out]*/ SAFEARRAY * * FilesToUpdate ) = 0;
      virtual HRESULT __stdcall raw_ChangeSource (
        /*[in]*/ BSTR FullPath,
        /*[in]*/ VARIANT Member = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_ForceUpdateViews ( ) = 0;
      virtual HRESULT __stdcall get_ModelOutOfDate (
        /*[out,retval]*/ VARIANT_BOOL * OutOfDate ) = 0;
      virtual HRESULT __stdcall get_IndexReference (
        /*[out,retval]*/ long * Index ) = 0;
};

enum FoldTypeConstants
{
    igNullFold = 0,
    igFoldUp = 1,
    igFoldDown = 2,
    igFoldRight = 3,
    igFoldLeft = 4,
    igFoldUpRight = 5,
    igFoldUpLeft = 6,
    igFoldDownRight = 7,
    igFoldDownLeft = 8
};

enum AssemblyDrawingViewTypeConstants
{
    seAssemblyDesignedView = 0,
    seAssemblySimplifiedView = 1,
    seAssemblyConfigurationSimplifiedView = 2
};

enum PartDrawingViewTypeConstants
{
    sePartDesignedView = 0,
    sePartSimplifiedView = 1
};

enum SheetMetalDrawingViewTypeConstants
{
    seSheetMetalDesignedView = 0,
    seSheetMetalSimplifiedView = 1,
    seSheetMetalFlatView = 2
};

enum WeldmentDrawingViewTypeConstants
{
    seWeldmentMachinedView = 0,
    seWeldmentWeldedView = 1,
    seWeldmentAssembledView = 2
};

enum DrawingViewDefaultsConstants
{
    seDrawingViewDefaultsPrincipal = 0,
    seDrawingViewDefaultsPictorial = 1
};

struct __declspec(uuid("61f55455-5269-11ce-9cfe-08003637fb01"))
_IDrawingViewsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
    DrawingViewPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    DrawingViewPtr Add (
        struct ModelLink * From,
        enum ViewOrientationConstants Orientation,
        double Scale,
        double x,
        double y );
    DrawingViewPtr AddWithConfiguration (
        struct ModelLink * From,
        enum ViewOrientationConstants Orientation,
        double Scale,
        double x,
        double y,
        _bstr_t ConfigFileName,
        _bstr_t ConfigurationName );
    DrawingViewPtr AddByFold (
        struct DrawingView * From,
        enum FoldTypeConstants foldDir,
        double x,
        double y );
    DrawingViewPtr AddByAuxiliaryFold (
        struct DrawingView * From,
        double x1,
        double y1,
        double x2,
        double y2,
        double x3,
        double y3 );
    DrawingViewPtr AddByDetailEnvelope (
        struct DrawingView * From,
        double x1,
        double y1,
        double Radius,
        double Scale,
        double x2,
        double y2 );
    DrawingViewPtr AddDraftView (
        double Scale,
        double x1,
        double y1 );
    DrawingViewPtr AddByDraftView (
        struct DrawingView * From,
        double Scale,
        double x1,
        double y1 );
    HRESULT Align ( );
    HRESULT Unalign ( );
    DrawingViewPtr AddAssemblyView (
        struct ModelLink * From,
        enum ViewOrientationConstants Orientation,
        double Scale,
        double x,
        double y,
        enum AssemblyDrawingViewTypeConstants ViewType,
        _bstr_t ConfigurationName,
        VARIANT_BOOL Snapshot,
        long SnapShotQuality );
    DrawingViewPtr AddPartView (
        struct ModelLink * From,
        enum ViewOrientationConstants Orientation,
        double Scale,
        double x,
        double y,
        enum PartDrawingViewTypeConstants ViewType );
    DrawingViewPtr AddSheetMetalView (
        struct ModelLink * From,
        enum ViewOrientationConstants Orientation,
        double Scale,
        double x,
        double y,
        enum SheetMetalDrawingViewTypeConstants ViewType );
    DrawingViewPtr AddWeldmentView (
        struct ModelLink * From,
        enum ViewOrientationConstants Orientation,
        double Scale,
        double x,
        double y,
        enum WeldmentDrawingViewTypeConstants ViewType );
    DrawingViewPtr AddDetailView (
        struct DrawingView * From,
        double x1,
        double y1,
        double Radius,
        double Scale,
        double x2,
        double y2,
        VARIANT_BOOL Independent );
    DrawingViewPtr Add2dModelView (
        double Scale,
        double x1,
        double y1 );
    DrawingViewPtr AddPMIModelView (
        struct ModelLink * From,
        _bstr_t ModelViewName,
        double Scale,
        double x,
        double y,
        VARIANT_BOOL IncludePMIDimensions,
        VARIANT_BOOL UseDraftQuality,
        long DraftQuality );
    DrawingViewPtr AddEmptyView (
        struct ModelLink * From,
        enum DrawingViewDefaultsConstants CreationDefaults );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * pApp ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * pParent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct DrawingView * * pItem ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ struct ModelLink * From,
        /*[in]*/ enum ViewOrientationConstants Orientation,
        /*[in]*/ double Scale,
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[out,retval]*/ struct DrawingView * * ppObj ) = 0;
      virtual HRESULT __stdcall raw_AddWithConfiguration (
        /*[in]*/ struct ModelLink * From,
        /*[in]*/ enum ViewOrientationConstants Orientation,
        /*[in]*/ double Scale,
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ BSTR ConfigFileName,
        /*[in]*/ BSTR ConfigurationName,
        /*[out,retval]*/ struct DrawingView * * ppObj ) = 0;
      virtual HRESULT __stdcall raw_AddByFold (
        /*[in]*/ struct DrawingView * From,
        /*[in]*/ enum FoldTypeConstants foldDir,
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[out,retval]*/ struct DrawingView * * ppObj ) = 0;
      virtual HRESULT __stdcall raw_AddByAuxiliaryFold (
        /*[in]*/ struct DrawingView * From,
        /*[in]*/ double x1,
        /*[in]*/ double y1,
        /*[in]*/ double x2,
        /*[in]*/ double y2,
        /*[in]*/ double x3,
        /*[in]*/ double y3,
        /*[out,retval]*/ struct DrawingView * * ppObj ) = 0;
      virtual HRESULT __stdcall raw_AddByDetailEnvelope (
        /*[in]*/ struct DrawingView * From,
        /*[in]*/ double x1,
        /*[in]*/ double y1,
        /*[in]*/ double Radius,
        /*[in]*/ double Scale,
        /*[in]*/ double x2,
        /*[in]*/ double y2,
        /*[out,retval]*/ struct DrawingView * * ppObj ) = 0;
      virtual HRESULT __stdcall raw_AddDraftView (
        /*[in]*/ double Scale,
        /*[in]*/ double x1,
        /*[in]*/ double y1,
        /*[out,retval]*/ struct DrawingView * * ppObj ) = 0;
      virtual HRESULT __stdcall raw_AddByDraftView (
        /*[in]*/ struct DrawingView * From,
        /*[in]*/ double Scale,
        /*[in]*/ double x1,
        /*[in]*/ double y1,
        /*[out,retval]*/ struct DrawingView * * ppObj ) = 0;
      virtual HRESULT __stdcall raw_Align ( ) = 0;
      virtual HRESULT __stdcall raw_Unalign ( ) = 0;
      virtual HRESULT __stdcall raw_AddAssemblyView (
        /*[in]*/ struct ModelLink * From,
        /*[in]*/ enum ViewOrientationConstants Orientation,
        /*[in]*/ double Scale,
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ enum AssemblyDrawingViewTypeConstants ViewType,
        /*[in]*/ BSTR ConfigurationName,
        /*[in]*/ VARIANT_BOOL Snapshot,
        /*[in]*/ long SnapShotQuality,
        /*[out,retval]*/ struct DrawingView * * ppObj ) = 0;
      virtual HRESULT __stdcall raw_AddPartView (
        /*[in]*/ struct ModelLink * From,
        /*[in]*/ enum ViewOrientationConstants Orientation,
        /*[in]*/ double Scale,
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ enum PartDrawingViewTypeConstants ViewType,
        /*[out,retval]*/ struct DrawingView * * ppObj ) = 0;
      virtual HRESULT __stdcall raw_AddSheetMetalView (
        /*[in]*/ struct ModelLink * From,
        /*[in]*/ enum ViewOrientationConstants Orientation,
        /*[in]*/ double Scale,
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ enum SheetMetalDrawingViewTypeConstants ViewType,
        /*[out,retval]*/ struct DrawingView * * ppObj ) = 0;
      virtual HRESULT __stdcall raw_AddWeldmentView (
        /*[in]*/ struct ModelLink * From,
        /*[in]*/ enum ViewOrientationConstants Orientation,
        /*[in]*/ double Scale,
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ enum WeldmentDrawingViewTypeConstants ViewType,
        /*[out,retval]*/ struct DrawingView * * ppObj ) = 0;
      virtual HRESULT __stdcall raw_AddDetailView (
        /*[in]*/ struct DrawingView * From,
        /*[in]*/ double x1,
        /*[in]*/ double y1,
        /*[in]*/ double Radius,
        /*[in]*/ double Scale,
        /*[in]*/ double x2,
        /*[in]*/ double y2,
        /*[in]*/ VARIANT_BOOL Independent,
        /*[out,retval]*/ struct DrawingView * * ppObj ) = 0;
      virtual HRESULT __stdcall raw_Add2dModelView (
        /*[in]*/ double Scale,
        /*[in]*/ double x1,
        /*[in]*/ double y1,
        /*[out,retval]*/ struct DrawingView * * ppObj ) = 0;
      virtual HRESULT __stdcall raw_AddPMIModelView (
        /*[in]*/ struct ModelLink * From,
        /*[in]*/ BSTR ModelViewName,
        /*[in]*/ double Scale,
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ VARIANT_BOOL IncludePMIDimensions,
        /*[in]*/ VARIANT_BOOL UseDraftQuality,
        /*[in]*/ long DraftQuality,
        /*[out,retval]*/ struct DrawingView * * ppObj ) = 0;
      virtual HRESULT __stdcall raw_AddEmptyView (
        /*[in]*/ struct ModelLink * From,
        /*[in]*/ enum DrawingViewDefaultsConstants CreationDefaults,
        /*[out,retval]*/ struct DrawingView * * ppObj ) = 0;
};

struct __declspec(uuid("cd8078b1-bb16-41ad-8bd9-7bddfbb37d8d"))
BlockOccurrences : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    BlockOccurrencePtr Item (
        const _variant_t & Index );
    BlockOccurrencePtr Add (
        _bstr_t BlockName,
        double XOrigin,
        double YOrigin,
        const _variant_t & BlockViewName = vtMissing,
        const _variant_t & Scale = vtMissing,
        const _variant_t & Rotation = vtMissing );
};

struct __declspec(uuid("cd8078b0-bb16-41ad-8bd9-7bddfbb37d8d"))
BlockOccurrence : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBlockLabelOccurrences))
    BlockLabelOccurrencesPtr BlockLabelOccurrences;
    __declspec(property(get=GetOriginReference))
    TGFramework::ReferencePtr OriginReference;
    __declspec(property(get=GetScaleFactor))
    double ScaleFactor;
    __declspec(property(get=GetRotationAngle))
    double RotationAngle;
    __declspec(property(get=GetBlock,put=PutBlock))
    BlockPtr Block;
    __declspec(property(get=GetBlockView,put=PutBlockView))
    BlockViewPtr BlockView;
    __declspec(property(get=GetLayer,put=PutLayer))
    _bstr_t Layer;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetName))
    _bstr_t Name[];
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetType))
    long Type;
    __declspec(property(get=GetZOrder))
    long ZOrder;
    __declspec(property(get=GetKey))
    _bstr_t Key[];
    __declspec(property(get=GetDocument))
    IDispatchPtr Document;
    __declspec(property(get=GetLineColor,put=PutLineColor))
    long LineColor;
    __declspec(property(get=GetMemberReference))
    TGFramework::ReferencePtr MemberReference[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT Unblock ( );
    TGFramework::ReferencePtr GetMemberReference (
        IDispatch * Member );
    void PutLayer (
        _bstr_t _arg1 );
    _bstr_t GetLayer ( );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetIndex ( );
    _bstr_t GetName (
        const _variant_t & Recurse );
    IDispatchPtr GetParent ( );
    long GetType ( );
    long GetZOrder ( );
    _bstr_t GetKey (
        const _variant_t & Recurse = vtMissing );
    IDispatchPtr GetDocument ( );
    HRESULT Copy ( );
    HRESULT Cut ( );
    HRESULT Delete ( );
    HRESULT Move (
        double XFrom,
        double YFrom,
        double XTo,
        double YTo );
    HRESULT Scale (
        double Factor );
    HRESULT Rotate (
        double Angle,
        double x,
        double y );
    HRESULT Range (
        double * XMinimum,
        double * YMinimum,
        double * XMaximum,
        double * YMaximum );
    IDispatchPtr Duplicate (
        const _variant_t & XDistance = vtMissing,
        const _variant_t & YDistance = vtMissing );
    IDispatchPtr Mirror (
        double x1,
        double y1,
        double x2,
        double y2,
        const _variant_t & BooleanCopyFlag = vtMissing );
    HRESULT BringToFront ( );
    HRESULT BringForward ( );
    HRESULT SendToBack ( );
    HRESULT SendBackward ( );
    HRESULT Select ( );
    TGFramework::ReferencePtr GetOriginReference ( );
    HRESULT SetOrigin (
        double x,
        double y );
    HRESULT GetOrigin (
        double * x,
        double * y );
    double GetScaleFactor ( );
    double GetRotationAngle ( );
    void PutLineColor (
        long _arg1 );
    long GetLineColor ( );
    BlockPtr GetBlock ( );
    void PutBlock (
        struct Block * _arg1 );
    BlockViewPtr GetBlockView ( );
    void PutBlockView (
        struct BlockView * _arg1 );
    BlockLabelOccurrencesPtr GetBlockLabelOccurrences ( );
    HRESULT OccurrenceToBlockView (
        double xOccurrence,
        double yOccurrence,
        double * xBlockView,
        double * yBlockView );
    HRESULT BlockViewToOccurrence (
        double xBlockView,
        double yBlockView,
        double * xOccurrence,
        double * yOccurrence );
};

struct __declspec(uuid("016532b9-e7a9-41e4-967d-81296f37cdeb"))
_IBlockOccurrencesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    BlockOccurrencePtr Item (
        const _variant_t & Index );
    BlockOccurrencePtr Add (
        _bstr_t BlockName,
        double XOrigin,
        double YOrigin,
        const _variant_t & BlockViewName = vtMissing,
        const _variant_t & Scale = vtMissing,
        const _variant_t & Rotation = vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Unknown ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct BlockOccurrence * * Item ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR BlockName,
        /*[in]*/ double XOrigin,
        /*[in]*/ double YOrigin,
        /*[in]*/ VARIANT BlockViewName,
        /*[in]*/ VARIANT Scale,
        /*[in]*/ VARIANT Rotation,
        /*[out,retval]*/ struct BlockOccurrence * * NewBlockOccurrence ) = 0;
};

struct __declspec(uuid("cd8078ac-bb16-41ad-8bd9-7bddfbb37d8d"))
Block : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDefaultView,put=PutDefaultView))
    BlockViewPtr DefaultView;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetOccurrenceCount))
    long OccurrenceCount;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetScaleDimAndAnnot,put=PutScaleDimAndAnnot))
    VARIANT_BOOL ScaleDimAndAnnot;
    __declspec(property(get=GetViews))
    BlockViewsPtr Views;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetOccurrenceCount ( );
    void PutName (
        _bstr_t _arg1 );
    _bstr_t GetName ( );
    void PutScaleDimAndAnnot (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetScaleDimAndAnnot ( );
    HRESULT Delete ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    BlockViewsPtr GetViews ( );
    BlockViewPtr GetDefaultView ( );
    void PutDefaultView (
        struct BlockView * _arg1 );
};

struct __declspec(uuid("cd8078af-bb16-41ad-8bd9-7bddfbb37d8d"))
BlockViews : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetBlock))
    BlockPtr Block;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    BlockPtr GetBlock ( );
    BlockViewPtr Item (
        const _variant_t & Index );
    BlockViewPtr Add (
        _bstr_t Name,
        double XOrigin,
        double YOrigin,
        const _variant_t & DeleteSelectedGraphics = vtMissing );
};

struct __declspec(uuid("57e69f66-314c-4cd7-a850-b96352004fb3"))
_IBlockAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetDefaultView,put=PutDefaultView))
    BlockViewPtr DefaultView;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetOccurrenceCount))
    long OccurrenceCount;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetScaleDimAndAnnot,put=PutScaleDimAndAnnot))
    VARIANT_BOOL ScaleDimAndAnnot;
    __declspec(property(get=GetViews))
    BlockViewsPtr Views;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetOccurrenceCount ( );
    void PutName (
        _bstr_t Name );
    _bstr_t GetName ( );
    void PutScaleDimAndAnnot (
        VARIANT_BOOL ScaleDimAndAnnot );
    VARIANT_BOOL GetScaleDimAndAnnot ( );
    HRESULT Delete ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    BlockViewsPtr GetViews ( );
    BlockViewPtr GetDefaultView ( );
    void PutDefaultView (
        struct BlockView * BlockView );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_OccurrenceCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_ScaleDimAndAnnot (
        /*[in]*/ VARIANT_BOOL ScaleDimAndAnnot ) = 0;
      virtual HRESULT __stdcall get_ScaleDimAndAnnot (
        /*[out,retval]*/ VARIANT_BOOL * ScaleDimAndAnnot ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall get_Views (
        /*[out,retval]*/ struct BlockViews * * BlockViews ) = 0;
      virtual HRESULT __stdcall get_DefaultView (
        /*[out,retval]*/ struct BlockView * * BlockView ) = 0;
      virtual HRESULT __stdcall put_DefaultView (
        /*[in]*/ struct BlockView * BlockView ) = 0;
};

struct __declspec(uuid("dab679a2-e1fe-43b9-9873-af8631922c14"))
_IBlockViewsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetBlock))
    BlockPtr Block;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    BlockPtr GetBlock ( );
    BlockViewPtr Item (
        const _variant_t & Index );
    BlockViewPtr Add (
        _bstr_t Name,
        double XOrigin,
        double YOrigin,
        const _variant_t & DeleteSelectedGraphics = vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Unknown ) = 0;
      virtual HRESULT __stdcall get_Block (
        /*[out,retval]*/ struct Block * * Block ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct BlockView * * Item ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ double XOrigin,
        /*[in]*/ double YOrigin,
        /*[in]*/ VARIANT DeleteSelectedGraphics,
        /*[out,retval]*/ struct BlockView * * NewBlockView ) = 0;
};

struct __declspec(uuid("3fefc410-bc0f-471d-a1e2-444e214ad825"))
BlockLabelOccurrences : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    BlockLabelOccurrencePtr Item (
        const _variant_t & Index );
};

struct __declspec(uuid("e30c2c4f-2995-4c15-810e-ed3a4bbd2a69"))
_IBlockOccurrenceAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetBlockLabelOccurrences))
    BlockLabelOccurrencesPtr BlockLabelOccurrences;
    __declspec(property(get=GetOriginReference))
    TGFramework::ReferencePtr OriginReference;
    __declspec(property(get=GetScaleFactor))
    double ScaleFactor;
    __declspec(property(get=GetRotationAngle))
    double RotationAngle;
    __declspec(property(get=GetBlock,put=PutBlock))
    BlockPtr Block;
    __declspec(property(get=GetBlockView,put=PutBlockView))
    BlockViewPtr BlockView;
    __declspec(property(get=GetLayer,put=PutLayer))
    _bstr_t Layer;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetName))
    _bstr_t Name[][];
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetType))
    long Type;
    __declspec(property(get=GetZOrder))
    long ZOrder;
    __declspec(property(get=GetKey))
    _bstr_t Key[];
    __declspec(property(get=GetDocument))
    IDispatchPtr Document;
    __declspec(property(get=GetLineColor,put=PutLineColor))
    long LineColor;
    __declspec(property(get=GetMemberReference))
    TGFramework::ReferencePtr MemberReference[];

    //
    // Wrapper methods for error-handling
    //

    HRESULT Unblock ( );
    TGFramework::ReferencePtr GetMemberReference (
        IDispatch * Member );
    void PutLayer (
        _bstr_t Layer );
    _bstr_t GetLayer ( );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetIndex ( );
    _bstr_t GetName (
        const _variant_t & Recurse,
        long Lcid = 0 );
    IDispatchPtr GetParent ( );
    long GetType ( );
    long GetZOrder ( );
    _bstr_t GetKey (
        const _variant_t & Recurse = vtMissing );
    IDispatchPtr GetDocument ( );
    HRESULT Copy ( );
    HRESULT Cut ( );
    HRESULT Delete ( );
    HRESULT Move (
        double XFrom,
        double YFrom,
        double XTo,
        double YTo );
    HRESULT Scale (
        double Factor );
    HRESULT Rotate (
        double Angle,
        double x,
        double y );
    HRESULT Range (
        double * XMinimum,
        double * YMinimum,
        double * XMaximum,
        double * YMaximum );
    IDispatchPtr Duplicate (
        const _variant_t & XDistance = vtMissing,
        const _variant_t & YDistance = vtMissing );
    IDispatchPtr Mirror (
        double x1,
        double y1,
        double x2,
        double y2,
        const _variant_t & BooleanCopyFlag = vtMissing );
    HRESULT BringToFront ( );
    HRESULT BringForward ( );
    HRESULT SendToBack ( );
    HRESULT SendBackward ( );
    HRESULT Select ( );
    TGFramework::ReferencePtr GetOriginReference ( );
    HRESULT SetOrigin (
        double x,
        double y );
    HRESULT GetOrigin (
        double * x,
        double * y );
    double GetScaleFactor ( );
    double GetRotationAngle ( );
    void PutLineColor (
        long value );
    long GetLineColor ( );
    BlockPtr GetBlock ( );
    void PutBlock (
        struct Block * Block );
    BlockViewPtr GetBlockView ( );
    void PutBlockView (
        struct BlockView * BlockView );
    BlockLabelOccurrencesPtr GetBlockLabelOccurrences ( );
    HRESULT OccurrenceToBlockView (
        double xOccurrence,
        double yOccurrence,
        double * xBlockView,
        double * yBlockView );
    HRESULT BlockViewToOccurrence (
        double xBlockView,
        double yBlockView,
        double * xOccurrence,
        double * yOccurrence );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Unblock ( ) = 0;
      virtual HRESULT __stdcall get_MemberReference (
        /*[in]*/ IDispatch * Member,
        /*[out,retval]*/ struct TGFramework::Reference * * Reference ) = 0;
      virtual HRESULT __stdcall put_Layer (
        /*[in]*/ BSTR Layer ) = 0;
      virtual HRESULT __stdcall get_Layer (
        /*[out,retval]*/ BSTR * Layer ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[in]*/ VARIANT Recurse,
        /*[in,lcid]*/ long Lcid,
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * ZOrder ) = 0;
      virtual HRESULT __stdcall get_Key (
        /*[in]*/ VARIANT Recurse,
        /*[out,retval]*/ BSTR * Key ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ IDispatch * * Document ) = 0;
      virtual HRESULT __stdcall raw_Copy ( ) = 0;
      virtual HRESULT __stdcall raw_Cut ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Move (
        /*[in]*/ double XFrom,
        /*[in]*/ double YFrom,
        /*[in]*/ double XTo,
        /*[in]*/ double YTo ) = 0;
      virtual HRESULT __stdcall raw_Scale (
        /*[in]*/ double Factor ) = 0;
      virtual HRESULT __stdcall raw_Rotate (
        /*[in]*/ double Angle,
        /*[in]*/ double x,
        /*[in]*/ double y ) = 0;
      virtual HRESULT __stdcall raw_Range (
        /*[out]*/ double * XMinimum,
        /*[out]*/ double * YMinimum,
        /*[out]*/ double * XMaximum,
        /*[out]*/ double * YMaximum ) = 0;
      virtual HRESULT __stdcall raw_Duplicate (
        /*[in]*/ VARIANT XDistance,
        /*[in]*/ VARIANT YDistance,
        /*[out,retval]*/ IDispatch * * NewObject ) = 0;
      virtual HRESULT __stdcall raw_Mirror (
        /*[in]*/ double x1,
        /*[in]*/ double y1,
        /*[in]*/ double x2,
        /*[in]*/ double y2,
        /*[in]*/ VARIANT BooleanCopyFlag,
        /*[out,retval]*/ IDispatch * * Object ) = 0;
      virtual HRESULT __stdcall raw_BringToFront ( ) = 0;
      virtual HRESULT __stdcall raw_BringForward ( ) = 0;
      virtual HRESULT __stdcall raw_SendToBack ( ) = 0;
      virtual HRESULT __stdcall raw_SendBackward ( ) = 0;
      virtual HRESULT __stdcall raw_Select ( ) = 0;
      virtual HRESULT __stdcall get_OriginReference (
        /*[out,retval]*/ struct TGFramework::Reference * * Reference ) = 0;
      virtual HRESULT __stdcall raw_SetOrigin (
        /*[in]*/ double x,
        /*[in]*/ double y ) = 0;
      virtual HRESULT __stdcall raw_GetOrigin (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall get_ScaleFactor (
        /*[out,retval]*/ double * dScale ) = 0;
      virtual HRESULT __stdcall get_RotationAngle (
        /*[out,retval]*/ double * dAngle ) = 0;
      virtual HRESULT __stdcall put_LineColor (
        /*[in]*/ long value ) = 0;
      virtual HRESULT __stdcall get_LineColor (
        /*[out,retval]*/ long * value ) = 0;
      virtual HRESULT __stdcall get_Block (
        /*[out,retval]*/ struct Block * * Block ) = 0;
      virtual HRESULT __stdcall put_Block (
        /*[in]*/ struct Block * Block ) = 0;
      virtual HRESULT __stdcall get_BlockView (
        /*[out,retval]*/ struct BlockView * * BlockView ) = 0;
      virtual HRESULT __stdcall put_BlockView (
        /*[in]*/ struct BlockView * BlockView ) = 0;
      virtual HRESULT __stdcall get_BlockLabelOccurrences (
        /*[out,retval]*/ struct BlockLabelOccurrences * * BlockLabelOccurrences ) = 0;
      virtual HRESULT __stdcall raw_OccurrenceToBlockView (
        /*[in]*/ double xOccurrence,
        /*[in]*/ double yOccurrence,
        /*[out]*/ double * xBlockView,
        /*[out]*/ double * yBlockView ) = 0;
      virtual HRESULT __stdcall raw_BlockViewToOccurrence (
        /*[in]*/ double xBlockView,
        /*[in]*/ double yBlockView,
        /*[out]*/ double * xOccurrence,
        /*[out]*/ double * yOccurrence ) = 0;
};

struct __declspec(uuid("91f00328-101c-428b-a695-9d157b50849d"))
BlockLabelOccurrence : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=Getvalue,put=Putvalue))
    _bstr_t value;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetAngle,put=PutAngle))
    double Angle;
    __declspec(property(get=GetPrompt))
    VARIANT_BOOL Prompt;
    __declspec(property(get=GetOriginLocation,put=PutOriginLocation))
    enum BlockLabelOriginLocationConstants OriginLocation;
    __declspec(property(get=GetVisibleInOccurrence))
    VARIANT_BOOL VisibleInOccurrence;
    __declspec(property(get=GetGlobal))
    VARIANT_BOOL Global;
    __declspec(property(get=GetPositionLocked))
    VARIANT_BOOL PositionLocked;
    __declspec(property(get=Getstyle))
    TGFrameworkSupport::DimStylePtr style;
    __declspec(property(get=GetLayer,put=PutLayer))
    _bstr_t Layer;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetBlockLabel))
    BlockLabelPtr BlockLabel;
    __declspec(property(get=GetDisplayedText))
    _bstr_t DisplayedText;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    void Putvalue (
        _bstr_t _arg1 );
    _bstr_t Getvalue ( );
    _bstr_t GetDescription ( );
    void PutAngle (
        double _arg1 );
    double GetAngle ( );
    HRESULT SetOrigin (
        double x,
        double y );
    HRESULT GetOrigin (
        double * x,
        double * y );
    VARIANT_BOOL GetPrompt ( );
    void PutOriginLocation (
        enum BlockLabelOriginLocationConstants _arg1 );
    enum BlockLabelOriginLocationConstants GetOriginLocation ( );
    VARIANT_BOOL GetVisibleInOccurrence ( );
    VARIANT_BOOL GetGlobal ( );
    VARIANT_BOOL GetPositionLocked ( );
    TGFrameworkSupport::DimStylePtr Getstyle ( );
    void PutLayer (
        _bstr_t _arg1 );
    _bstr_t GetLayer ( );
    _bstr_t GetDisplayedText ( );
    BlockLabelPtr GetBlockLabel ( );
};

struct __declspec(uuid("f6ddd962-ea51-447e-a3ed-63719ac988ec"))
_IBlockLabelOccurrencesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    BlockLabelOccurrencePtr Item (
        const _variant_t & Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Unknown ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct BlockLabelOccurrence * * Item ) = 0;
};

enum BlockLabelOriginLocationConstants
{
    igBlockLabelTopLeft = 0,
    igBlockLabelTopCenter = 1,
    igBlockLabelTopRight = 2,
    igBlockLabelMiddleLeft = 3,
    igBlockLabelMiddleCenter = 4,
    igBlockLabelMiddleRight = 5,
    igBlockLabelBottomLeft = 6,
    igBlockLabelBottomCenter = 7,
    igBlockLabelBottomRight = 8,
    igBlockLabelUnderLeft = 9,
    igBlockLabelUnderCenter = 10,
    igBlockLabelUnderRight = 11
};

struct __declspec(uuid("b52b0e3f-6287-4993-9aac-64ab57b8bdd5"))
BlockLabel : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=Getvalue,put=Putvalue))
    _bstr_t value;
    __declspec(property(get=GetDescription,put=PutDescription))
    _bstr_t Description;
    __declspec(property(get=GetAngle,put=PutAngle))
    double Angle;
    __declspec(property(get=GetPrompt,put=PutPrompt))
    VARIANT_BOOL Prompt;
    __declspec(property(get=GetOriginLocation,put=PutOriginLocation))
    enum BlockLabelOriginLocationConstants OriginLocation;
    __declspec(property(get=GetVisibleInOccurrence,put=PutVisibleInOccurrence))
    VARIANT_BOOL VisibleInOccurrence;
    __declspec(property(get=GetGlobal,put=PutGlobal))
    VARIANT_BOOL Global;
    __declspec(property(get=GetPositionLocked,put=PutPositionLocked))
    VARIANT_BOOL PositionLocked;
    __declspec(property(get=Getstyle))
    TGFrameworkSupport::DimStylePtr style;
    __declspec(property(get=GetLayer,put=PutLayer))
    _bstr_t Layer;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetType))
    long Type;
    __declspec(property(get=GetZOrder))
    long ZOrder;
    __declspec(property(get=GetKey))
    _bstr_t Key[];
    __declspec(property(get=GetDocument))
    IDispatchPtr Document;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    void PutName (
        _bstr_t _arg1 );
    _bstr_t GetName ( );
    void Putvalue (
        _bstr_t _arg1 );
    _bstr_t Getvalue ( );
    void PutDescription (
        _bstr_t _arg1 );
    _bstr_t GetDescription ( );
    void PutAngle (
        double _arg1 );
    double GetAngle ( );
    HRESULT SetOrigin (
        double x,
        double y );
    HRESULT GetOrigin (
        double * x,
        double * y );
    void PutPrompt (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetPrompt ( );
    void PutOriginLocation (
        enum BlockLabelOriginLocationConstants _arg1 );
    enum BlockLabelOriginLocationConstants GetOriginLocation ( );
    void PutVisibleInOccurrence (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetVisibleInOccurrence ( );
    void PutGlobal (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetGlobal ( );
    void PutPositionLocked (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetPositionLocked ( );
    TGFrameworkSupport::DimStylePtr Getstyle ( );
    void PutLayer (
        _bstr_t _arg1 );
    _bstr_t GetLayer ( );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetIndex ( );
    IDispatchPtr GetParent ( );
    long GetType ( );
    long GetZOrder ( );
    _bstr_t GetKey (
        const _variant_t & Recurse = vtMissing );
    IDispatchPtr GetDocument ( );
    HRESULT Copy ( );
    HRESULT Cut ( );
    HRESULT Delete ( );
    HRESULT Move (
        double XFrom,
        double YFrom,
        double XTo,
        double YTo );
    HRESULT Scale (
        double Factor );
    HRESULT Rotate (
        double Angle,
        double x,
        double y );
    HRESULT Range (
        double * XMinimum,
        double * YMinimum,
        double * XMaximum,
        double * YMaximum );
    IDispatchPtr Duplicate (
        const _variant_t & XDistance = vtMissing,
        const _variant_t & YDistance = vtMissing );
    IDispatchPtr Mirror (
        double x1,
        double y1,
        double x2,
        double y2,
        const _variant_t & BooleanCopyFlag = vtMissing );
    HRESULT BringToFront ( );
    HRESULT BringForward ( );
    HRESULT SendToBack ( );
    HRESULT SendBackward ( );
    HRESULT Select ( );
};

struct __declspec(uuid("19985ab2-1db6-4180-a26a-0b54f2a6377e"))
_IBlockLabelOccurrenceAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=Getvalue,put=Putvalue))
    _bstr_t value;
    __declspec(property(get=GetDescription))
    _bstr_t Description;
    __declspec(property(get=GetAngle,put=PutAngle))
    double Angle;
    __declspec(property(get=GetPrompt))
    VARIANT_BOOL Prompt;
    __declspec(property(get=GetOriginLocation,put=PutOriginLocation))
    enum BlockLabelOriginLocationConstants OriginLocation;
    __declspec(property(get=GetVisibleInOccurrence))
    VARIANT_BOOL VisibleInOccurrence;
    __declspec(property(get=GetGlobal))
    VARIANT_BOOL Global;
    __declspec(property(get=GetPositionLocked))
    VARIANT_BOOL PositionLocked;
    __declspec(property(get=Getstyle))
    TGFrameworkSupport::DimStylePtr style;
    __declspec(property(get=GetLayer,put=PutLayer))
    _bstr_t Layer;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetBlockLabel))
    BlockLabelPtr BlockLabel;
    __declspec(property(get=GetDisplayedText))
    _bstr_t DisplayedText;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    void Putvalue (
        _bstr_t value );
    _bstr_t Getvalue ( );
    _bstr_t GetDescription ( );
    void PutAngle (
        double Angle );
    double GetAngle ( );
    HRESULT SetOrigin (
        double x,
        double y );
    HRESULT GetOrigin (
        double * x,
        double * y );
    VARIANT_BOOL GetPrompt ( );
    void PutOriginLocation (
        enum BlockLabelOriginLocationConstants OriginLocation );
    enum BlockLabelOriginLocationConstants GetOriginLocation ( );
    VARIANT_BOOL GetVisibleInOccurrence ( );
    VARIANT_BOOL GetGlobal ( );
    VARIANT_BOOL GetPositionLocked ( );
    TGFrameworkSupport::DimStylePtr Getstyle ( );
    void PutLayer (
        _bstr_t Layer );
    _bstr_t GetLayer ( );
    _bstr_t GetDisplayedText ( );
    BlockLabelPtr GetBlockLabel ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_value (
        /*[in]*/ BSTR value ) = 0;
      virtual HRESULT __stdcall get_value (
        /*[out,retval]*/ BSTR * value ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * Description ) = 0;
      virtual HRESULT __stdcall put_Angle (
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall get_Angle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall raw_SetOrigin (
        /*[in]*/ double x,
        /*[in]*/ double y ) = 0;
      virtual HRESULT __stdcall raw_GetOrigin (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall get_Prompt (
        /*[out,retval]*/ VARIANT_BOOL * Prompt ) = 0;
      virtual HRESULT __stdcall put_OriginLocation (
        /*[in]*/ enum BlockLabelOriginLocationConstants OriginLocation ) = 0;
      virtual HRESULT __stdcall get_OriginLocation (
        /*[out,retval]*/ enum BlockLabelOriginLocationConstants * OriginLocation ) = 0;
      virtual HRESULT __stdcall get_VisibleInOccurrence (
        /*[out,retval]*/ VARIANT_BOOL * VisibleInOccurrence ) = 0;
      virtual HRESULT __stdcall get_Global (
        /*[out,retval]*/ VARIANT_BOOL * Global ) = 0;
      virtual HRESULT __stdcall get_PositionLocked (
        /*[out,retval]*/ VARIANT_BOOL * PositionLocked ) = 0;
      virtual HRESULT __stdcall get_style (
        /*[out,retval]*/ struct TGFrameworkSupport::DimStyle * * style ) = 0;
      virtual HRESULT __stdcall put_Layer (
        /*[in]*/ BSTR Layer ) = 0;
      virtual HRESULT __stdcall get_Layer (
        /*[out,retval]*/ BSTR * Layer ) = 0;
      virtual HRESULT __stdcall get_DisplayedText (
        /*[out,retval]*/ BSTR * DisplayedText ) = 0;
      virtual HRESULT __stdcall get_BlockLabel (
        /*[out,retval]*/ struct BlockLabel * * Label ) = 0;
};

struct __declspec(uuid("099e1a88-9415-4ba9-98cb-3c806d4b2674"))
_IBlockLabelAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=Getvalue,put=Putvalue))
    _bstr_t value;
    __declspec(property(get=GetDescription,put=PutDescription))
    _bstr_t Description;
    __declspec(property(get=GetAngle,put=PutAngle))
    double Angle;
    __declspec(property(get=GetPrompt,put=PutPrompt))
    VARIANT_BOOL Prompt;
    __declspec(property(get=GetOriginLocation,put=PutOriginLocation))
    enum BlockLabelOriginLocationConstants OriginLocation;
    __declspec(property(get=GetVisibleInOccurrence,put=PutVisibleInOccurrence))
    VARIANT_BOOL VisibleInOccurrence;
    __declspec(property(get=GetGlobal,put=PutGlobal))
    VARIANT_BOOL Global;
    __declspec(property(get=GetPositionLocked,put=PutPositionLocked))
    VARIANT_BOOL PositionLocked;
    __declspec(property(get=Getstyle))
    TGFrameworkSupport::DimStylePtr style;
    __declspec(property(get=GetLayer,put=PutLayer))
    _bstr_t Layer;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetType))
    long Type;
    __declspec(property(get=GetZOrder))
    long ZOrder;
    __declspec(property(get=GetKey))
    _bstr_t Key[];
    __declspec(property(get=GetDocument))
    IDispatchPtr Document;

    //
    // Wrapper methods for error-handling
    //

    void PutName (
        _bstr_t Name );
    _bstr_t GetName ( );
    void Putvalue (
        _bstr_t value );
    _bstr_t Getvalue ( );
    void PutDescription (
        _bstr_t Description );
    _bstr_t GetDescription ( );
    void PutAngle (
        double Angle );
    double GetAngle ( );
    HRESULT SetOrigin (
        double x,
        double y );
    HRESULT GetOrigin (
        double * x,
        double * y );
    void PutPrompt (
        VARIANT_BOOL Prompt );
    VARIANT_BOOL GetPrompt ( );
    void PutOriginLocation (
        enum BlockLabelOriginLocationConstants OriginLocation );
    enum BlockLabelOriginLocationConstants GetOriginLocation ( );
    void PutVisibleInOccurrence (
        VARIANT_BOOL VisibleInOccurrence );
    VARIANT_BOOL GetVisibleInOccurrence ( );
    void PutGlobal (
        VARIANT_BOOL Global );
    VARIANT_BOOL GetGlobal ( );
    void PutPositionLocked (
        VARIANT_BOOL PositionLocked );
    VARIANT_BOOL GetPositionLocked ( );
    TGFrameworkSupport::DimStylePtr Getstyle ( );
    void PutLayer (
        _bstr_t Layer );
    _bstr_t GetLayer ( );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetIndex ( );
    IDispatchPtr GetParent ( );
    long GetType ( );
    long GetZOrder ( );
    _bstr_t GetKey (
        const _variant_t & Recurse = vtMissing );
    IDispatchPtr GetDocument ( );
    HRESULT Copy ( );
    HRESULT Cut ( );
    HRESULT Delete ( );
    HRESULT Move (
        double XFrom,
        double YFrom,
        double XTo,
        double YTo );
    HRESULT Scale (
        double Factor );
    HRESULT Rotate (
        double Angle,
        double x,
        double y );
    HRESULT Range (
        double * XMinimum,
        double * YMinimum,
        double * XMaximum,
        double * YMaximum );
    IDispatchPtr Duplicate (
        const _variant_t & XDistance = vtMissing,
        const _variant_t & YDistance = vtMissing );
    IDispatchPtr Mirror (
        double x1,
        double y1,
        double x2,
        double y2,
        const _variant_t & BooleanCopyFlag = vtMissing );
    HRESULT BringToFront ( );
    HRESULT BringForward ( );
    HRESULT SendToBack ( );
    HRESULT SendBackward ( );
    HRESULT Select ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_value (
        /*[in]*/ BSTR value ) = 0;
      virtual HRESULT __stdcall get_value (
        /*[out,retval]*/ BSTR * value ) = 0;
      virtual HRESULT __stdcall put_Description (
        /*[in]*/ BSTR Description ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * Description ) = 0;
      virtual HRESULT __stdcall put_Angle (
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall get_Angle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall raw_SetOrigin (
        /*[in]*/ double x,
        /*[in]*/ double y ) = 0;
      virtual HRESULT __stdcall raw_GetOrigin (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall put_Prompt (
        /*[in]*/ VARIANT_BOOL Prompt ) = 0;
      virtual HRESULT __stdcall get_Prompt (
        /*[out,retval]*/ VARIANT_BOOL * Prompt ) = 0;
      virtual HRESULT __stdcall put_OriginLocation (
        /*[in]*/ enum BlockLabelOriginLocationConstants OriginLocation ) = 0;
      virtual HRESULT __stdcall get_OriginLocation (
        /*[out,retval]*/ enum BlockLabelOriginLocationConstants * OriginLocation ) = 0;
      virtual HRESULT __stdcall put_VisibleInOccurrence (
        /*[in]*/ VARIANT_BOOL VisibleInOccurrence ) = 0;
      virtual HRESULT __stdcall get_VisibleInOccurrence (
        /*[out,retval]*/ VARIANT_BOOL * VisibleInOccurrence ) = 0;
      virtual HRESULT __stdcall put_Global (
        /*[in]*/ VARIANT_BOOL Global ) = 0;
      virtual HRESULT __stdcall get_Global (
        /*[out,retval]*/ VARIANT_BOOL * Global ) = 0;
      virtual HRESULT __stdcall put_PositionLocked (
        /*[in]*/ VARIANT_BOOL PositionLocked ) = 0;
      virtual HRESULT __stdcall get_PositionLocked (
        /*[out,retval]*/ VARIANT_BOOL * PositionLocked ) = 0;
      virtual HRESULT __stdcall get_style (
        /*[out,retval]*/ struct TGFrameworkSupport::DimStyle * * style ) = 0;
      virtual HRESULT __stdcall put_Layer (
        /*[in]*/ BSTR Layer ) = 0;
      virtual HRESULT __stdcall get_Layer (
        /*[out,retval]*/ BSTR * Layer ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * ZOrder ) = 0;
      virtual HRESULT __stdcall get_Key (
        /*[in]*/ VARIANT Recurse,
        /*[out,retval]*/ BSTR * Key ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ IDispatch * * Document ) = 0;
      virtual HRESULT __stdcall raw_Copy ( ) = 0;
      virtual HRESULT __stdcall raw_Cut ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Move (
        /*[in]*/ double XFrom,
        /*[in]*/ double YFrom,
        /*[in]*/ double XTo,
        /*[in]*/ double YTo ) = 0;
      virtual HRESULT __stdcall raw_Scale (
        /*[in]*/ double Factor ) = 0;
      virtual HRESULT __stdcall raw_Rotate (
        /*[in]*/ double Angle,
        /*[in]*/ double x,
        /*[in]*/ double y ) = 0;
      virtual HRESULT __stdcall raw_Range (
        /*[out]*/ double * XMinimum,
        /*[out]*/ double * YMinimum,
        /*[out]*/ double * XMaximum,
        /*[out]*/ double * YMaximum ) = 0;
      virtual HRESULT __stdcall raw_Duplicate (
        /*[in]*/ VARIANT XDistance,
        /*[in]*/ VARIANT YDistance,
        /*[out,retval]*/ IDispatch * * NewObject ) = 0;
      virtual HRESULT __stdcall raw_Mirror (
        /*[in]*/ double x1,
        /*[in]*/ double y1,
        /*[in]*/ double x2,
        /*[in]*/ double y2,
        /*[in]*/ VARIANT BooleanCopyFlag,
        /*[out,retval]*/ IDispatch * * Object ) = 0;
      virtual HRESULT __stdcall raw_BringToFront ( ) = 0;
      virtual HRESULT __stdcall raw_BringForward ( ) = 0;
      virtual HRESULT __stdcall raw_SendToBack ( ) = 0;
      virtual HRESULT __stdcall raw_SendBackward ( ) = 0;
      virtual HRESULT __stdcall raw_Select ( ) = 0;
};

struct __declspec(uuid("68ecd1d3-f0d4-488d-8359-b358e8d91524"))
BlockLabels : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    BlockLabelPtr Item (
        const _variant_t & Index );
    BlockLabelPtr Add (
        _bstr_t Name,
        _bstr_t value,
        _bstr_t Description,
        double XOrigin,
        double YOrigin,
        enum BlockLabelOriginLocationConstants OriginLoc,
        VARIANT_BOOL VisibleInOccurrence,
        VARIANT_BOOL Global,
        VARIANT_BOOL Prompt,
        VARIANT_BOOL PositionLocked,
        double dAngle );
};

struct __declspec(uuid("954a7da3-336b-4cee-a6cb-c476dba30a1c"))
_IBlockViewAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetDimensions))
    TGFrameworkSupport::DimensionsPtr Dimensions;
    __declspec(property(get=GetLeaders))
    TGFrameworkSupport::LeadersPtr Leaders;
    __declspec(property(get=GetBalloons))
    TGFrameworkSupport::BalloonsPtr Balloons;
    __declspec(property(get=GetTextBoxes))
    TGFrameworkSupport::TextBoxesPtr TextBoxes;
    __declspec(property(get=GetRelations2d))
    TGFrameworkSupport::Relations2dPtr Relations2d;
    __declspec(property(get=GetSmartFrames2d))
    TGFrameworkSupport::SmartFrames2dPtr SmartFrames2d;
    __declspec(property(get=GetPinSymbols))
    TGFrameworkSupport::PinSymbolsPtr PinSymbols;
    __declspec(property(get=GetDrawingViews))
    DrawingViewsPtr DrawingViews;
    __declspec(property(get=GetDatumFrames))
    TGFrameworkSupport::DatumFramesPtr DatumFrames;
    __declspec(property(get=GetFeatureControlFrames))
    TGFrameworkSupport::FeatureControlFramesPtr FeatureControlFrames;
    __declspec(property(get=GetSurfaceFinishSymbols))
    TGFrameworkSupport::SurfaceFinishSymbolsPtr SurfaceFinishSymbols;
    __declspec(property(get=GetWeldSymbols))
    TGFrameworkSupport::WeldSymbolsPtr WeldSymbols;
    __declspec(property(get=GetCenterMarks))
    TGFrameworkSupport::CenterMarksPtr CenterMarks;
    __declspec(property(get=GetCenterLines))
    TGFrameworkSupport::CenterLinesPtr CenterLines;
    __declspec(property(get=GetDatumTargets))
    TGFrameworkSupport::DatumTargetsPtr DatumTargets;
    __declspec(property(get=GetDatumPoints))
    TGFrameworkSupport::DatumPointsPtr DatumPoints;
    __declspec(property(get=GetCornerAnnotations))
    TGFrameworkSupport::CornerAnnotationsPtr CornerAnnotations;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];
    __declspec(property(get=GetBoltHoleCircles))
    TGFrameworkSupport::BoltHoleCirclesPtr BoltHoleCircles;
    __declspec(property(get=GetConnectors))
    TGFrameworkSupport::ConnectorsPtr Connectors;
    __declspec(property(get=GetBlockOccurrences))
    BlockOccurrencesPtr BlockOccurrences;
    __declspec(property(get=GetBlockLabels))
    BlockLabelsPtr BlockLabels;
    __declspec(property(get=GetImages2d))
    TGFrameworkSupport::Images2dPtr Images2d;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetDocument))
    IDispatchPtr Document;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetLines2d))
    TGFrameworkSupport::Lines2dPtr Lines2d;
    __declspec(property(get=GetCircles2d))
    TGFrameworkSupport::Circles2dPtr Circles2d;
    __declspec(property(get=GetArcs2d))
    TGFrameworkSupport::Arcs2dPtr Arcs2d;
    __declspec(property(get=GetEllipses2d))
    TGFrameworkSupport::Ellipses2dPtr Ellipses2d;
    __declspec(property(get=GetBsplineCurves2d))
    TGFrameworkSupport::BSplineCurves2dPtr BsplineCurves2d;
    __declspec(property(get=GetPoints2d))
    TGFrameworkSupport::Points2dPtr Points2d;
    __declspec(property(get=GetEllipticalArcs2d))
    TGFrameworkSupport::EllipticalArcs2dPtr EllipticalArcs2d;
    __declspec(property(get=GetCurves2d))
    TGFrameworkSupport::Curves2dPtr Curves2d;
    __declspec(property(get=GetLineStrings2d))
    TGFrameworkSupport::LineStrings2dPtr LineStrings2d;
    __declspec(property(get=GetComplexStrings2d))
    TGFrameworkSupport::ComplexStrings2dPtr ComplexStrings2d;
    __declspec(property(get=GetBoundaries2d))
    TGFrameworkSupport::Boundaries2dPtr Boundaries2d;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetDocument ( );
    long GetIndex ( );
    void PutName (
        _bstr_t Name );
    _bstr_t GetName ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    TGFrameworkSupport::Lines2dPtr GetLines2d ( );
    TGFrameworkSupport::Circles2dPtr GetCircles2d ( );
    TGFrameworkSupport::Arcs2dPtr GetArcs2d ( );
    TGFrameworkSupport::Ellipses2dPtr GetEllipses2d ( );
    TGFrameworkSupport::BSplineCurves2dPtr GetBsplineCurves2d ( );
    TGFrameworkSupport::Points2dPtr GetPoints2d ( );
    TGFrameworkSupport::EllipticalArcs2dPtr GetEllipticalArcs2d ( );
    TGFrameworkSupport::Curves2dPtr GetCurves2d ( );
    TGFrameworkSupport::LineStrings2dPtr GetLineStrings2d ( );
    TGFrameworkSupport::ComplexStrings2dPtr GetComplexStrings2d ( );
    TGFrameworkSupport::Boundaries2dPtr GetBoundaries2d ( );
    TGFrameworkSupport::DimensionsPtr GetDimensions ( );
    TGFrameworkSupport::LeadersPtr GetLeaders ( );
    TGFrameworkSupport::BalloonsPtr GetBalloons ( );
    TGFrameworkSupport::TextBoxesPtr GetTextBoxes ( );
    TGFrameworkSupport::Relations2dPtr GetRelations2d ( );
    TGFrameworkSupport::SmartFrames2dPtr GetSmartFrames2d ( );
    TGFrameworkSupport::DatumFramesPtr GetDatumFrames ( );
    TGFrameworkSupport::FeatureControlFramesPtr GetFeatureControlFrames ( );
    TGFrameworkSupport::SurfaceFinishSymbolsPtr GetSurfaceFinishSymbols ( );
    TGFrameworkSupport::WeldSymbolsPtr GetWeldSymbols ( );
    TGFrameworkSupport::CenterMarksPtr GetCenterMarks ( );
    TGFrameworkSupport::CenterLinesPtr GetCenterLines ( );
    TGFrameworkSupport::DatumTargetsPtr GetDatumTargets ( );
    TGFrameworkSupport::PinSymbolsPtr GetPinSymbols ( );
    TGFrameworkSupport::DatumPointsPtr GetDatumPoints ( );
    TGFrameworkSupport::CornerAnnotationsPtr GetCornerAnnotations ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    TGFrameworkSupport::BoltHoleCirclesPtr GetBoltHoleCircles ( );
    TGFrameworkSupport::ConnectorsPtr GetConnectors ( );
    HRESULT SetOrigin (
        double x,
        double y );
    HRESULT GetOrigin (
        double * x,
        double * y );
    HRESULT ReplaceGraphics (
        const _variant_t & DeleteSelectedGraphics = vtMissing );
    HRESULT UpdatePreview ( );
    DrawingViewsPtr GetDrawingViews ( );
    BlockOccurrencesPtr GetBlockOccurrences ( );
    BlockLabelsPtr GetBlockLabels ( );
    TGFrameworkSupport::Images2dPtr GetImages2d ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ IDispatch * * Book ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Lines2d (
        /*[out,retval]*/ struct TGFrameworkSupport::Lines2d * * Lines2d ) = 0;
      virtual HRESULT __stdcall get_Circles2d (
        /*[out,retval]*/ struct TGFrameworkSupport::Circles2d * * Circles2d ) = 0;
      virtual HRESULT __stdcall get_Arcs2d (
        /*[out,retval]*/ struct TGFrameworkSupport::Arcs2d * * Arcs2d ) = 0;
      virtual HRESULT __stdcall get_Ellipses2d (
        /*[out,retval]*/ struct TGFrameworkSupport::Ellipses2d * * Ellipses2d ) = 0;
      virtual HRESULT __stdcall get_BsplineCurves2d (
        /*[out,retval]*/ struct TGFrameworkSupport::BSplineCurves2d * * Bsplines2d ) = 0;
      virtual HRESULT __stdcall get_Points2d (
        /*[out,retval]*/ struct TGFrameworkSupport::Points2d * * Points2d ) = 0;
      virtual HRESULT __stdcall get_EllipticalArcs2d (
        /*[out,retval]*/ struct TGFrameworkSupport::EllipticalArcs2d * * EllipArcs2d ) = 0;
      virtual HRESULT __stdcall get_Curves2d (
        /*[out,retval]*/ struct TGFrameworkSupport::Curves2d * * Curves2d ) = 0;
      virtual HRESULT __stdcall get_LineStrings2d (
        /*[out,retval]*/ struct TGFrameworkSupport::LineStrings2d * * LineStrings2d ) = 0;
      virtual HRESULT __stdcall get_ComplexStrings2d (
        /*[out,retval]*/ struct TGFrameworkSupport::ComplexStrings2d * * ComplexStrings2d ) = 0;
      virtual HRESULT __stdcall get_Boundaries2d (
        /*[out,retval]*/ struct TGFrameworkSupport::Boundaries2d * * Boundaries2d ) = 0;
      virtual HRESULT __stdcall get_Dimensions (
        /*[out,retval]*/ struct TGFrameworkSupport::Dimensions * * Dimensions ) = 0;
      virtual HRESULT __stdcall get_Leaders (
        /*[out,retval]*/ struct TGFrameworkSupport::Leaders * * Leaders ) = 0;
      virtual HRESULT __stdcall get_Balloons (
        /*[out,retval]*/ struct TGFrameworkSupport::Balloons * * Balloons ) = 0;
      virtual HRESULT __stdcall get_TextBoxes (
        /*[out,retval]*/ struct TGFrameworkSupport::TextBoxes * * pTextBoxes ) = 0;
      virtual HRESULT __stdcall get_Relations2d (
        /*[out,retval]*/ struct TGFrameworkSupport::Relations2d * * pRelations ) = 0;
      virtual HRESULT __stdcall get_SmartFrames2d (
        /*[out,retval]*/ struct TGFrameworkSupport::SmartFrames2d * * pSmartFrames2d ) = 0;
      virtual HRESULT __stdcall get_DatumFrames (
        /*[out,retval]*/ struct TGFrameworkSupport::DatumFrames * * DatumFrames ) = 0;
      virtual HRESULT __stdcall get_FeatureControlFrames (
        /*[out,retval]*/ struct TGFrameworkSupport::FeatureControlFrames * * FeatureControlFrames ) = 0;
      virtual HRESULT __stdcall get_SurfaceFinishSymbols (
        /*[out,retval]*/ struct TGFrameworkSupport::SurfaceFinishSymbols * * SurfaceFinishSymbols ) = 0;
      virtual HRESULT __stdcall get_WeldSymbols (
        /*[out,retval]*/ struct TGFrameworkSupport::WeldSymbols * * WeldSymbols ) = 0;
      virtual HRESULT __stdcall get_CenterMarks (
        /*[out,retval]*/ struct TGFrameworkSupport::CenterMarks * * CenterMarks ) = 0;
      virtual HRESULT __stdcall get_CenterLines (
        /*[out,retval]*/ struct TGFrameworkSupport::CenterLines * * CenterLines ) = 0;
      virtual HRESULT __stdcall get_DatumTargets (
        /*[out,retval]*/ struct TGFrameworkSupport::DatumTargets * * DatumTargets ) = 0;
      virtual HRESULT __stdcall get_PinSymbols (
        /*[out,retval]*/ struct TGFrameworkSupport::PinSymbols * * PinSymbols ) = 0;
      virtual HRESULT __stdcall get_DatumPoints (
        /*[out,retval]*/ struct TGFrameworkSupport::DatumPoints * * DatumPoints ) = 0;
      virtual HRESULT __stdcall get_CornerAnnotations (
        /*[out,retval]*/ struct TGFrameworkSupport::CornerAnnotations * * CornerAnnotations ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall get_BoltHoleCircles (
        /*[out,retval]*/ struct TGFrameworkSupport::BoltHoleCircles * * BoltHoleCircles ) = 0;
      virtual HRESULT __stdcall get_Connectors (
        /*[out,retval]*/ struct TGFrameworkSupport::Connectors * * Connectors ) = 0;
      virtual HRESULT __stdcall raw_SetOrigin (
        /*[in]*/ double x,
        /*[in]*/ double y ) = 0;
      virtual HRESULT __stdcall raw_GetOrigin (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall raw_ReplaceGraphics (
        /*[in]*/ VARIANT DeleteSelectedGraphics = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_UpdatePreview ( ) = 0;
      virtual HRESULT __stdcall get_DrawingViews (
        /*[out,retval]*/ struct DrawingViews * * ppDrawingView ) = 0;
      virtual HRESULT __stdcall get_BlockOccurrences (
        /*[out,retval]*/ struct BlockOccurrences * * BlockOccurrences ) = 0;
      virtual HRESULT __stdcall get_BlockLabels (
        /*[out,retval]*/ struct BlockLabels * * BlockLabels ) = 0;
      virtual HRESULT __stdcall get_Images2d (
        /*[out,retval]*/ struct TGFrameworkSupport::Images2d * * Images2d ) = 0;
};

struct __declspec(uuid("875413cc-0dc7-4ac6-ab16-c947f5379ce7"))
_IBlockLabelsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    BlockLabelPtr Item (
        const _variant_t & Index );
    BlockLabelPtr Add (
        _bstr_t Name,
        _bstr_t value,
        _bstr_t Description,
        double XOrigin,
        double YOrigin,
        enum BlockLabelOriginLocationConstants OriginLoc,
        VARIANT_BOOL VisibleInOccurrence,
        VARIANT_BOOL Global,
        VARIANT_BOOL Prompt,
        VARIANT_BOOL PositionLocked,
        double dAngle );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Unknown ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct BlockLabel * * Item ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ BSTR value,
        /*[in]*/ BSTR Description,
        /*[in]*/ double XOrigin,
        /*[in]*/ double YOrigin,
        /*[in]*/ enum BlockLabelOriginLocationConstants OriginLoc,
        /*[in]*/ VARIANT_BOOL VisibleInOccurrence,
        /*[in]*/ VARIANT_BOOL Global,
        /*[in]*/ VARIANT_BOOL Prompt,
        /*[in]*/ VARIANT_BOOL PositionLocked,
        /*[in]*/ double dAngle,
        /*[out,retval]*/ struct BlockLabel * * NewBlockLabel ) = 0;
};

struct __declspec(uuid("cd8078ad-bb16-41ad-8bd9-7bddfbb37d8d"))
Blocks : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    BlockPtr Item (
        const _variant_t & Index );
    BlockPtr Add (
        _bstr_t Name,
        double XOrigin,
        double YOrigin,
        const _variant_t & ScaleDimsAndAnnot = vtMissing,
        const _variant_t & DeleteSelectedGraphics = vtMissing );
    BlockPtr CopyBlock (
        struct Block * BlockToCopy );
    BlockPtr AddBlockByFile (
        _bstr_t FileName );
    BlockPtr ReplaceBlock (
        struct Block * BlockToCopy );
};

struct __declspec(uuid("6cba07d6-d066-4e56-a107-02a41f449544"))
_IBlocksAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    BlockPtr Item (
        const _variant_t & Index );
    BlockPtr Add (
        _bstr_t Name,
        double XOrigin,
        double YOrigin,
        const _variant_t & ScaleDimsAndAnnot = vtMissing,
        const _variant_t & DeleteSelectedGraphics = vtMissing );
    BlockPtr CopyBlock (
        struct Block * BlockToCopy );
    BlockPtr AddBlockByFile (
        _bstr_t FileName );
    BlockPtr ReplaceBlock (
        struct Block * BlockToCopy );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Unknown ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Block * * Item ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ double XOrigin,
        /*[in]*/ double YOrigin,
        /*[in]*/ VARIANT ScaleDimsAndAnnot,
        /*[in]*/ VARIANT DeleteSelectedGraphics,
        /*[out,retval]*/ struct Block * * NewBlock ) = 0;
      virtual HRESULT __stdcall raw_CopyBlock (
        /*[in]*/ struct Block * BlockToCopy,
        /*[out,retval]*/ struct Block * * NewBlock ) = 0;
      virtual HRESULT __stdcall raw_AddBlockByFile (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ struct Block * * NewBlock ) = 0;
      virtual HRESULT __stdcall raw_ReplaceBlock (
        /*[in]*/ struct Block * BlockToCopy,
        /*[out,retval]*/ struct Block * * NewBlock ) = 0;
};

struct __declspec(uuid("61bbf651-53f0-4d0a-ac29-545eecf6fa8d"))
DraftFilePreferences : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDVShowHiddenTangentEdges,put=PutDVShowHiddenTangentEdges))
    VARIANT_BOOL DVShowHiddenTangentEdges;
    __declspec(property(get=GetDVShowHiddenOtherTangentEdges,put=PutDVShowHiddenOtherTangentEdges))
    VARIANT_BOOL DVShowHiddenOtherTangentEdges;
    __declspec(property(get=GetDVShowThreadsInSectionOnlyViews,put=PutDVShowThreadsInSectionOnlyViews))
    VARIANT_BOOL DVShowThreadsInSectionOnlyViews;
    __declspec(property(get=GetDVHatchRibsInSectionViews,put=PutDVHatchRibsInSectionViews))
    VARIANT_BOOL DVHatchRibsInSectionViews;
    __declspec(property(get=GetDVShowCenterlines,put=PutDVShowCenterlines))
    VARIANT_BOOL DVShowCenterlines;
    __declspec(property(get=GetDVShowFlowlines,put=PutDVShowFlowlines))
    VARIANT_BOOL DVShowFlowlines;
    __declspec(property(get=GetDVShowDetailViewBorders,put=PutDVShowDetailViewBorders))
    VARIANT_BOOL DVShowDetailViewBorders;
    __declspec(property(get=GetDVRetrieveDimensionsOnViewCreation,put=PutDVRetrieveDimensionsOnViewCreation))
    VARIANT_BOOL DVRetrieveDimensionsOnViewCreation;
    __declspec(property(get=GetDVShowTubeCenterlines,put=PutDVShowTubeCenterlines))
    VARIANT_BOOL DVShowTubeCenterlines;
    __declspec(property(get=GetDVShowFillStyleInSectionViews,put=PutDVShowFillStyleInSectionViews))
    VARIANT_BOOL DVShowFillStyleInSectionViews;
    __declspec(property(get=GetDVDeriveFillStyleFromPart,put=PutDVDeriveFillStyleFromPart))
    VARIANT_BOOL DVDeriveFillStyleFromPart;
    __declspec(property(get=GetDVCroppedEdgeProcessing,put=PutDVCroppedEdgeProcessing))
    VARIANT_BOOL DVCroppedEdgeProcessing;
    __declspec(property(get=GetDVConfigChangesMakeViewsOutOfDate,put=PutDVConfigChangesMakeViewsOutOfDate))
    VARIANT_BOOL DVConfigChangesMakeViewsOutOfDate;
    __declspec(property(get=GetDVDeriveReferenceFromAssembly,put=PutDVDeriveReferenceFromAssembly))
    VARIANT_BOOL DVDeriveReferenceFromAssembly;
    __declspec(property(get=GetDVShowEdgesOfCuttingPlaneVertices,put=PutDVShowEdgesOfCuttingPlaneVertices))
    VARIANT_BOOL DVShowEdgesOfCuttingPlaneVertices;
    __declspec(property(get=GetDVIncludePMIDimensions,put=PutDVIncludePMIDimensions))
    VARIANT_BOOL DVIncludePMIDimensions;
    __declspec(property(get=GetDVIncludePMIAnnotations,put=PutDVIncludePMIAnnotations))
    VARIANT_BOOL DVIncludePMIAnnotations;
    __declspec(property(get=GetDVShowBoundaryEdges,put=PutDVShowBoundaryEdges))
    VARIANT_BOOL DVShowBoundaryEdges;
    __declspec(property(get=GetDVDetailEnvelopeDisplayAsCircle,put=PutDVDetailEnvelopeDisplayAsCircle))
    VARIANT_BOOL DVDetailEnvelopeDisplayAsCircle;
    __declspec(property(get=GetDVShowDeformationFeatureProfiles,put=PutDVShowDeformationFeatureProfiles))
    VARIANT_BOOL DVShowDeformationFeatureProfiles;
    __declspec(property(get=GetDVShowDeformationFeatureOrigins,put=PutDVShowDeformationFeatureOrigins))
    VARIANT_BOOL DVShowDeformationFeatureOrigins;
    __declspec(property(get=GetDVDeriveBendDirectionFromView,put=PutDVDeriveBendDirectionFromView))
    VARIANT_BOOL DVDeriveBendDirectionFromView;
    __declspec(property(get=GetDVProjectionAngle,put=PutDVProjectionAngle))
    enum DrawingViewProjectionAngleConstants DVProjectionAngle;
    __declspec(property(get=GetDVThreadDisplayMode,put=PutDVThreadDisplayMode))
    enum DVThreadDisplayModeConstants DVThreadDisplayMode;
    __declspec(property(get=GetViewerDataIncludeWorkingSheets,put=PutViewerDataIncludeWorkingSheets))
    VARIANT_BOOL ViewerDataIncludeWorkingSheets;
    __declspec(property(get=GetViewerDataInclude2DModelSheet,put=PutViewerDataInclude2DModelSheet))
    VARIANT_BOOL ViewerDataInclude2DModelSheet;
    __declspec(property(get=GetViewerDataIncludeBackgroundSheets,put=PutViewerDataIncludeBackgroundSheets))
    VARIANT_BOOL ViewerDataIncludeBackgroundSheets;
    __declspec(property(get=GetDVReferenceComponentsByConfigurations,put=PutDVReferenceComponentsByConfigurations))
    VARIANT_BOOL DVReferenceComponentsByConfigurations;
    __declspec(property(get=GetDVShowFillStyleInSectionWeldBeads,put=PutDVShowFillStyleInSectionWeldBeads))
    VARIANT_BOOL DVShowFillStyleInSectionWeldBeads;
    __declspec(property(get=GetDVSolidFillSectionWeldBeads,put=PutDVSolidFillSectionWeldBeads))
    VARIANT_BOOL DVSolidFillSectionWeldBeads;
    __declspec(property(get=GetDVEnableAlternatingHatchSpacing,put=PutDVEnableAlternatingHatchSpacing))
    VARIANT_BOOL DVEnableAlternatingHatchSpacing;
    __declspec(property(get=GetDVEnableAlternatingHatchAngle,put=PutDVEnableAlternatingHatchAngle))
    VARIANT_BOOL DVEnableAlternatingHatchAngle;
    __declspec(property(get=GetDVShowHiddenEdgesInConnectorViews,put=PutDVShowHiddenEdgesInConnectorViews))
    VARIANT_BOOL DVShowHiddenEdgesInConnectorViews;
    __declspec(property(get=GetDVNailboardSetDisplayWhiteWiresAs,put=PutDVNailboardSetDisplayWhiteWiresAs))
    int DVNailboardSetDisplayWhiteWiresAs;
    __declspec(property(get=GetDVStyleNameFromTable,put=PutDVStyleNameFromTable))
    _bstr_t DVStyleNameFromTable[];
    __declspec(property(get=GetNumberSheetGroupsSeparately,put=PutNumberSheetGroupsSeparately))
    VARIANT_BOOL NumberSheetGroupsSeparately;
    __declspec(property(get=GetGRIDDisplayGridMode,put=PutGRIDDisplayGridMode))
    enum GridDisplayOptionsConstants GRIDDisplayGridMode;
    __declspec(property(get=GetGRIDSnapToGridMode,put=PutGRIDSnapToGridMode))
    enum GridSnapOptionsConstants GRIDSnapToGridMode;
    __declspec(property(get=GetGRIDAngle,put=PutGRIDAngle))
    double GRIDAngle;
    __declspec(property(get=GetGRIDMajorLine,put=PutGRIDMajorLine))
    double GRIDMajorLine;
    __declspec(property(get=GetGRIDMinorSpaces,put=PutGRIDMinorSpaces))
    int GRIDMinorSpaces;
    __declspec(property(get=GetDVEdgeStyleName,put=PutDVEdgeStyleName))
    _bstr_t DVEdgeStyleName[];
    __declspec(property(get=GetCenterOfMassBlockName,put=PutCenterOfMassBlockName))
    _bstr_t CenterOfMassBlockName;
    __declspec(property(get=GetCoordinateSystemBlockName,put=PutCoordinateSystemBlockName))
    _bstr_t CoordinateSystemBlockName;
    __declspec(property(get=GetBendUpString,put=PutBendUpString))
    _bstr_t BendUpString;
    __declspec(property(get=GetBendDownString,put=PutBendDownString))
    _bstr_t BendDownString;
    __declspec(property(get=GetDVEnableMultiCoreDrawingViewProcessing,put=PutDVEnableMultiCoreDrawingViewProcessing))
    VARIANT_BOOL DVEnableMultiCoreDrawingViewProcessing;
    __declspec(property(get=GetMaintainAssociativityForRetrievedDimensions,put=PutMaintainAssociativityForRetrievedDimensions))
    VARIANT_BOOL MaintainAssociativityForRetrievedDimensions;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetDVShowHiddenEdgesInOrthographicViews,put=PutDVShowHiddenEdgesInOrthographicViews))
    VARIANT_BOOL DVShowHiddenEdgesInOrthographicViews;
    __declspec(property(get=GetDVShowHiddenEdgesInPictorialViews,put=PutDVShowHiddenEdgesInPictorialViews))
    VARIANT_BOOL DVShowHiddenEdgesInPictorialViews;
    __declspec(property(get=GetDVShowTangentEdgesInOrthographicViews,put=PutDVShowTangentEdgesInOrthographicViews))
    VARIANT_BOOL DVShowTangentEdgesInOrthographicViews;
    __declspec(property(get=GetDVShowTangentEdgesInPictorialViews,put=PutDVShowTangentEdgesInPictorialViews))
    VARIANT_BOOL DVShowTangentEdgesInPictorialViews;
    __declspec(property(get=GetDVShowHiddenOtherEdgesInOrthographicViews,put=PutDVShowHiddenOtherEdgesInOrthographicViews))
    VARIANT_BOOL DVShowHiddenOtherEdgesInOrthographicViews;
    __declspec(property(get=GetDVShowHiddenOtherEdgesInPictorialViews,put=PutDVShowHiddenOtherEdgesInPictorialViews))
    VARIANT_BOOL DVShowHiddenOtherEdgesInPictorialViews;
    __declspec(property(get=GetDVShowHiddenEdgesInSectionViews,put=PutDVShowHiddenEdgesInSectionViews))
    VARIANT_BOOL DVShowHiddenEdgesInSectionViews;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetDVShowHiddenEdgesInOrthographicViews ( );
    void PutDVShowHiddenEdgesInOrthographicViews (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDVShowHiddenEdgesInPictorialViews ( );
    void PutDVShowHiddenEdgesInPictorialViews (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDVShowTangentEdgesInOrthographicViews ( );
    void PutDVShowTangentEdgesInOrthographicViews (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDVShowTangentEdgesInPictorialViews ( );
    void PutDVShowTangentEdgesInPictorialViews (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDVShowHiddenOtherEdgesInOrthographicViews ( );
    void PutDVShowHiddenOtherEdgesInOrthographicViews (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDVShowHiddenOtherEdgesInPictorialViews ( );
    void PutDVShowHiddenOtherEdgesInPictorialViews (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDVShowHiddenEdgesInSectionViews ( );
    void PutDVShowHiddenEdgesInSectionViews (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDVShowHiddenTangentEdges ( );
    void PutDVShowHiddenTangentEdges (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDVShowHiddenOtherTangentEdges ( );
    void PutDVShowHiddenOtherTangentEdges (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDVShowThreadsInSectionOnlyViews ( );
    void PutDVShowThreadsInSectionOnlyViews (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDVHatchRibsInSectionViews ( );
    void PutDVHatchRibsInSectionViews (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDVShowCenterlines ( );
    void PutDVShowCenterlines (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDVShowFlowlines ( );
    void PutDVShowFlowlines (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDVShowDetailViewBorders ( );
    void PutDVShowDetailViewBorders (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDVRetrieveDimensionsOnViewCreation ( );
    void PutDVRetrieveDimensionsOnViewCreation (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDVShowTubeCenterlines ( );
    void PutDVShowTubeCenterlines (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDVShowFillStyleInSectionViews ( );
    void PutDVShowFillStyleInSectionViews (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDVDeriveFillStyleFromPart ( );
    void PutDVDeriveFillStyleFromPart (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDVCroppedEdgeProcessing ( );
    void PutDVCroppedEdgeProcessing (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDVConfigChangesMakeViewsOutOfDate ( );
    void PutDVConfigChangesMakeViewsOutOfDate (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDVDeriveReferenceFromAssembly ( );
    void PutDVDeriveReferenceFromAssembly (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDVShowEdgesOfCuttingPlaneVertices ( );
    void PutDVShowEdgesOfCuttingPlaneVertices (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDVIncludePMIDimensions ( );
    void PutDVIncludePMIDimensions (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDVIncludePMIAnnotations ( );
    void PutDVIncludePMIAnnotations (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDVShowBoundaryEdges ( );
    void PutDVShowBoundaryEdges (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDVDetailEnvelopeDisplayAsCircle ( );
    void PutDVDetailEnvelopeDisplayAsCircle (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDVShowDeformationFeatureProfiles ( );
    void PutDVShowDeformationFeatureProfiles (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDVShowDeformationFeatureOrigins ( );
    void PutDVShowDeformationFeatureOrigins (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDVDeriveBendDirectionFromView ( );
    void PutDVDeriveBendDirectionFromView (
        VARIANT_BOOL _arg1 );
    enum DrawingViewProjectionAngleConstants GetDVProjectionAngle ( );
    void PutDVProjectionAngle (
        enum DrawingViewProjectionAngleConstants _arg1 );
    enum DVThreadDisplayModeConstants GetDVThreadDisplayMode ( );
    void PutDVThreadDisplayMode (
        enum DVThreadDisplayModeConstants _arg1 );
    VARIANT_BOOL GetViewerDataIncludeWorkingSheets ( );
    void PutViewerDataIncludeWorkingSheets (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetViewerDataInclude2DModelSheet ( );
    void PutViewerDataInclude2DModelSheet (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetViewerDataIncludeBackgroundSheets ( );
    void PutViewerDataIncludeBackgroundSheets (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDVReferenceComponentsByConfigurations ( );
    void PutDVReferenceComponentsByConfigurations (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDVShowFillStyleInSectionWeldBeads ( );
    void PutDVShowFillStyleInSectionWeldBeads (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDVSolidFillSectionWeldBeads ( );
    void PutDVSolidFillSectionWeldBeads (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDVEnableAlternatingHatchSpacing ( );
    void PutDVEnableAlternatingHatchSpacing (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDVEnableAlternatingHatchAngle ( );
    void PutDVEnableAlternatingHatchAngle (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDVShowHiddenEdgesInConnectorViews ( );
    void PutDVShowHiddenEdgesInConnectorViews (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDVEnableMultiCoreDrawingViewProcessing ( );
    void PutDVEnableMultiCoreDrawingViewProcessing (
        VARIANT_BOOL _arg1 );
    int GetDVNailboardSetDisplayWhiteWiresAs ( );
    void PutDVNailboardSetDisplayWhiteWiresAs (
        int _arg1 );
    _bstr_t GetDVStyleNameFromTable (
        enum DrawingViewStyleMappingElementType Element );
    void PutDVStyleNameFromTable (
        enum DrawingViewStyleMappingElementType Element,
        _bstr_t _arg2 );
    VARIANT_BOOL GetNumberSheetGroupsSeparately ( );
    void PutNumberSheetGroupsSeparately (
        VARIANT_BOOL _arg1 );
    enum GridDisplayOptionsConstants GetGRIDDisplayGridMode ( );
    void PutGRIDDisplayGridMode (
        enum GridDisplayOptionsConstants _arg1 );
    enum GridSnapOptionsConstants GetGRIDSnapToGridMode ( );
    void PutGRIDSnapToGridMode (
        enum GridSnapOptionsConstants _arg1 );
    double GetGRIDAngle ( );
    void PutGRIDAngle (
        double _arg1 );
    double GetGRIDMajorLine ( );
    void PutGRIDMajorLine (
        double _arg1 );
    int GetGRIDMinorSpaces ( );
    void PutGRIDMinorSpaces (
        int _arg1 );
    _bstr_t GetDVEdgeStyleName (
        enum DrawingViewEdgeStyleMappingEdgeType Element );
    void PutDVEdgeStyleName (
        enum DrawingViewEdgeStyleMappingEdgeType Element,
        _bstr_t _arg2 );
    _bstr_t GetCenterOfMassBlockName ( );
    void PutCenterOfMassBlockName (
        _bstr_t _arg1 );
    _bstr_t GetCoordinateSystemBlockName ( );
    void PutCoordinateSystemBlockName (
        _bstr_t _arg1 );
    _bstr_t GetBendUpString ( );
    void PutBendUpString (
        _bstr_t _arg1 );
    _bstr_t GetBendDownString ( );
    void PutBendDownString (
        _bstr_t _arg1 );
    VARIANT_BOOL GetMaintainAssociativityForRetrievedDimensions ( );
    void PutMaintainAssociativityForRetrievedDimensions (
        VARIANT_BOOL _arg1 );
};

enum DrawingViewProjectionAngleConstants
{
    ProjectionAngleFirst = 0,
    ProjectionAngleThird = 1
};

enum DVThreadDisplayModeConstants
{
    seDVThreadDisplayModeANSI = 0,
    seDVThreadDisplayModeISO = 1,
    seDVThreadDisplayModeJIS = 2,
    seDVThreadDisplayModeJISISO = 3,
    seDVThreadDisplayModeESKD = 4
};

enum DrawingViewStyleMappingElementType
{
    seDVStyleMapping_PrincipalAndPictorialViews = 0,
    seDVStyleMapping_2DmodelViews = 1,
    seDVStyleMapping_SectionViews = 2,
    seDVStyleMapping_AuxiliaryViews = 3,
    seDVStyleMapping_DetailViews = 4,
    seDVStyleMapping_CuttingPlane = 5,
    seDVStyleMapping_ViewingPlane = 6,
    seDVStyleMapping_DetailEnvelope = 7,
    seDVStyleMapping_NailboardView = 8,
    seDVStyleMapping_ConnectorView = 9
};

enum GridDisplayOptionsConstants
{
    igGridDisplayedAsLines = 0,
    igGridDisplayedAsPoints = 1
};

enum GridSnapOptionsConstants
{
    igGridSnapUsingLines = 0,
    igGridSnapUsingPoints = 1
};

enum DrawingViewEdgeStyleMappingEdgeType
{
    seDVEdgeStyleMapping_VisibleEdge = 0,
    seDVEdgeStyleMapping_HiddenEdge = 1,
    seDVEdgeStyleMapping_TangentEdge = 2,
    seDVEdgeStyleMapping_CoordinateSystemEdge = 3,
    seDVEdgeStyleMapping_ReferenceVisibleEdge = 4,
    seDVEdgeStyleMapping_ReferenceHiddenEdge = 5,
    seDVEdgeStyleMapping_ReferenceTangentEdge = 6
};

struct __declspec(uuid("e1b3ee37-bbbd-4c24-bf2b-a0d6e91d4016"))
_IDraftFilePreferencesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetDVShowHiddenTangentEdges,put=PutDVShowHiddenTangentEdges))
    VARIANT_BOOL DVShowHiddenTangentEdges;
    __declspec(property(get=GetDVShowHiddenOtherTangentEdges,put=PutDVShowHiddenOtherTangentEdges))
    VARIANT_BOOL DVShowHiddenOtherTangentEdges;
    __declspec(property(get=GetDVShowThreadsInSectionOnlyViews,put=PutDVShowThreadsInSectionOnlyViews))
    VARIANT_BOOL DVShowThreadsInSectionOnlyViews;
    __declspec(property(get=GetDVHatchRibsInSectionViews,put=PutDVHatchRibsInSectionViews))
    VARIANT_BOOL DVHatchRibsInSectionViews;
    __declspec(property(get=GetDVShowCenterlines,put=PutDVShowCenterlines))
    VARIANT_BOOL DVShowCenterlines;
    __declspec(property(get=GetDVShowFlowlines,put=PutDVShowFlowlines))
    VARIANT_BOOL DVShowFlowlines;
    __declspec(property(get=GetDVShowDetailViewBorders,put=PutDVShowDetailViewBorders))
    VARIANT_BOOL DVShowDetailViewBorders;
    __declspec(property(get=GetDVRetrieveDimensionsOnViewCreation,put=PutDVRetrieveDimensionsOnViewCreation))
    VARIANT_BOOL DVRetrieveDimensionsOnViewCreation;
    __declspec(property(get=GetDVShowTubeCenterlines,put=PutDVShowTubeCenterlines))
    VARIANT_BOOL DVShowTubeCenterlines;
    __declspec(property(get=GetDVShowFillStyleInSectionViews,put=PutDVShowFillStyleInSectionViews))
    VARIANT_BOOL DVShowFillStyleInSectionViews;
    __declspec(property(get=GetDVDeriveFillStyleFromPart,put=PutDVDeriveFillStyleFromPart))
    VARIANT_BOOL DVDeriveFillStyleFromPart;
    __declspec(property(get=GetDVCroppedEdgeProcessing,put=PutDVCroppedEdgeProcessing))
    VARIANT_BOOL DVCroppedEdgeProcessing;
    __declspec(property(get=GetDVConfigChangesMakeViewsOutOfDate,put=PutDVConfigChangesMakeViewsOutOfDate))
    VARIANT_BOOL DVConfigChangesMakeViewsOutOfDate;
    __declspec(property(get=GetDVDeriveReferenceFromAssembly,put=PutDVDeriveReferenceFromAssembly))
    VARIANT_BOOL DVDeriveReferenceFromAssembly;
    __declspec(property(get=GetDVShowEdgesOfCuttingPlaneVertices,put=PutDVShowEdgesOfCuttingPlaneVertices))
    VARIANT_BOOL DVShowEdgesOfCuttingPlaneVertices;
    __declspec(property(get=GetDVIncludePMIDimensions,put=PutDVIncludePMIDimensions))
    VARIANT_BOOL DVIncludePMIDimensions;
    __declspec(property(get=GetDVIncludePMIAnnotations,put=PutDVIncludePMIAnnotations))
    VARIANT_BOOL DVIncludePMIAnnotations;
    __declspec(property(get=GetDVShowBoundaryEdges,put=PutDVShowBoundaryEdges))
    VARIANT_BOOL DVShowBoundaryEdges;
    __declspec(property(get=GetDVDetailEnvelopeDisplayAsCircle,put=PutDVDetailEnvelopeDisplayAsCircle))
    VARIANT_BOOL DVDetailEnvelopeDisplayAsCircle;
    __declspec(property(get=GetDVShowDeformationFeatureProfiles,put=PutDVShowDeformationFeatureProfiles))
    VARIANT_BOOL DVShowDeformationFeatureProfiles;
    __declspec(property(get=GetDVShowDeformationFeatureOrigins,put=PutDVShowDeformationFeatureOrigins))
    VARIANT_BOOL DVShowDeformationFeatureOrigins;
    __declspec(property(get=GetDVDeriveBendDirectionFromView,put=PutDVDeriveBendDirectionFromView))
    VARIANT_BOOL DVDeriveBendDirectionFromView;
    __declspec(property(get=GetDVProjectionAngle,put=PutDVProjectionAngle))
    enum DrawingViewProjectionAngleConstants DVProjectionAngle;
    __declspec(property(get=GetDVThreadDisplayMode,put=PutDVThreadDisplayMode))
    enum DVThreadDisplayModeConstants DVThreadDisplayMode;
    __declspec(property(get=GetViewerDataIncludeWorkingSheets,put=PutViewerDataIncludeWorkingSheets))
    VARIANT_BOOL ViewerDataIncludeWorkingSheets;
    __declspec(property(get=GetViewerDataInclude2DModelSheet,put=PutViewerDataInclude2DModelSheet))
    VARIANT_BOOL ViewerDataInclude2DModelSheet;
    __declspec(property(get=GetViewerDataIncludeBackgroundSheets,put=PutViewerDataIncludeBackgroundSheets))
    VARIANT_BOOL ViewerDataIncludeBackgroundSheets;
    __declspec(property(get=GetDVReferenceComponentsByConfigurations,put=PutDVReferenceComponentsByConfigurations))
    VARIANT_BOOL DVReferenceComponentsByConfigurations;
    __declspec(property(get=GetDVShowFillStyleInSectionWeldBeads,put=PutDVShowFillStyleInSectionWeldBeads))
    VARIANT_BOOL DVShowFillStyleInSectionWeldBeads;
    __declspec(property(get=GetDVSolidFillSectionWeldBeads,put=PutDVSolidFillSectionWeldBeads))
    VARIANT_BOOL DVSolidFillSectionWeldBeads;
    __declspec(property(get=GetDVEnableAlternatingHatchSpacing,put=PutDVEnableAlternatingHatchSpacing))
    VARIANT_BOOL DVEnableAlternatingHatchSpacing;
    __declspec(property(get=GetDVEnableAlternatingHatchAngle,put=PutDVEnableAlternatingHatchAngle))
    VARIANT_BOOL DVEnableAlternatingHatchAngle;
    __declspec(property(get=GetDVShowHiddenEdgesInConnectorViews,put=PutDVShowHiddenEdgesInConnectorViews))
    VARIANT_BOOL DVShowHiddenEdgesInConnectorViews;
    __declspec(property(get=GetDVNailboardSetDisplayWhiteWiresAs,put=PutDVNailboardSetDisplayWhiteWiresAs))
    int DVNailboardSetDisplayWhiteWiresAs;
    __declspec(property(get=GetDVStyleNameFromTable,put=PutDVStyleNameFromTable))
    _bstr_t DVStyleNameFromTable[];
    __declspec(property(get=GetNumberSheetGroupsSeparately,put=PutNumberSheetGroupsSeparately))
    VARIANT_BOOL NumberSheetGroupsSeparately;
    __declspec(property(get=GetGRIDDisplayGridMode,put=PutGRIDDisplayGridMode))
    enum GridDisplayOptionsConstants GRIDDisplayGridMode;
    __declspec(property(get=GetGRIDSnapToGridMode,put=PutGRIDSnapToGridMode))
    enum GridSnapOptionsConstants GRIDSnapToGridMode;
    __declspec(property(get=GetGRIDAngle,put=PutGRIDAngle))
    double GRIDAngle;
    __declspec(property(get=GetGRIDMajorLine,put=PutGRIDMajorLine))
    double GRIDMajorLine;
    __declspec(property(get=GetGRIDMinorSpaces,put=PutGRIDMinorSpaces))
    int GRIDMinorSpaces;
    __declspec(property(get=GetDVEdgeStyleName,put=PutDVEdgeStyleName))
    _bstr_t DVEdgeStyleName[];
    __declspec(property(get=GetCenterOfMassBlockName,put=PutCenterOfMassBlockName))
    _bstr_t CenterOfMassBlockName;
    __declspec(property(get=GetCoordinateSystemBlockName,put=PutCoordinateSystemBlockName))
    _bstr_t CoordinateSystemBlockName;
    __declspec(property(get=GetBendUpString,put=PutBendUpString))
    _bstr_t BendUpString;
    __declspec(property(get=GetBendDownString,put=PutBendDownString))
    _bstr_t BendDownString;
    __declspec(property(get=GetDVEnableMultiCoreDrawingViewProcessing,put=PutDVEnableMultiCoreDrawingViewProcessing))
    VARIANT_BOOL DVEnableMultiCoreDrawingViewProcessing;
    __declspec(property(get=GetMaintainAssociativityForRetrievedDimensions,put=PutMaintainAssociativityForRetrievedDimensions))
    VARIANT_BOOL MaintainAssociativityForRetrievedDimensions;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetDVShowHiddenEdgesInOrthographicViews,put=PutDVShowHiddenEdgesInOrthographicViews))
    VARIANT_BOOL DVShowHiddenEdgesInOrthographicViews;
    __declspec(property(get=GetDVShowHiddenEdgesInPictorialViews,put=PutDVShowHiddenEdgesInPictorialViews))
    VARIANT_BOOL DVShowHiddenEdgesInPictorialViews;
    __declspec(property(get=GetDVShowTangentEdgesInOrthographicViews,put=PutDVShowTangentEdgesInOrthographicViews))
    VARIANT_BOOL DVShowTangentEdgesInOrthographicViews;
    __declspec(property(get=GetDVShowTangentEdgesInPictorialViews,put=PutDVShowTangentEdgesInPictorialViews))
    VARIANT_BOOL DVShowTangentEdgesInPictorialViews;
    __declspec(property(get=GetDVShowHiddenOtherEdgesInOrthographicViews,put=PutDVShowHiddenOtherEdgesInOrthographicViews))
    VARIANT_BOOL DVShowHiddenOtherEdgesInOrthographicViews;
    __declspec(property(get=GetDVShowHiddenOtherEdgesInPictorialViews,put=PutDVShowHiddenOtherEdgesInPictorialViews))
    VARIANT_BOOL DVShowHiddenOtherEdgesInPictorialViews;
    __declspec(property(get=GetDVShowHiddenEdgesInSectionViews,put=PutDVShowHiddenEdgesInSectionViews))
    VARIANT_BOOL DVShowHiddenEdgesInSectionViews;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetDVShowHiddenEdgesInOrthographicViews ( );
    void PutDVShowHiddenEdgesInOrthographicViews (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDVShowHiddenEdgesInPictorialViews ( );
    void PutDVShowHiddenEdgesInPictorialViews (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDVShowTangentEdgesInOrthographicViews ( );
    void PutDVShowTangentEdgesInOrthographicViews (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDVShowTangentEdgesInPictorialViews ( );
    void PutDVShowTangentEdgesInPictorialViews (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDVShowHiddenOtherEdgesInOrthographicViews ( );
    void PutDVShowHiddenOtherEdgesInOrthographicViews (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDVShowHiddenOtherEdgesInPictorialViews ( );
    void PutDVShowHiddenOtherEdgesInPictorialViews (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDVShowHiddenEdgesInSectionViews ( );
    void PutDVShowHiddenEdgesInSectionViews (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDVShowHiddenTangentEdges ( );
    void PutDVShowHiddenTangentEdges (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDVShowHiddenOtherTangentEdges ( );
    void PutDVShowHiddenOtherTangentEdges (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDVShowThreadsInSectionOnlyViews ( );
    void PutDVShowThreadsInSectionOnlyViews (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDVHatchRibsInSectionViews ( );
    void PutDVHatchRibsInSectionViews (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDVShowCenterlines ( );
    void PutDVShowCenterlines (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDVShowFlowlines ( );
    void PutDVShowFlowlines (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDVShowDetailViewBorders ( );
    void PutDVShowDetailViewBorders (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDVRetrieveDimensionsOnViewCreation ( );
    void PutDVRetrieveDimensionsOnViewCreation (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDVShowTubeCenterlines ( );
    void PutDVShowTubeCenterlines (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDVShowFillStyleInSectionViews ( );
    void PutDVShowFillStyleInSectionViews (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDVDeriveFillStyleFromPart ( );
    void PutDVDeriveFillStyleFromPart (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDVCroppedEdgeProcessing ( );
    void PutDVCroppedEdgeProcessing (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDVConfigChangesMakeViewsOutOfDate ( );
    void PutDVConfigChangesMakeViewsOutOfDate (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDVDeriveReferenceFromAssembly ( );
    void PutDVDeriveReferenceFromAssembly (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDVShowEdgesOfCuttingPlaneVertices ( );
    void PutDVShowEdgesOfCuttingPlaneVertices (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDVIncludePMIDimensions ( );
    void PutDVIncludePMIDimensions (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDVIncludePMIAnnotations ( );
    void PutDVIncludePMIAnnotations (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDVShowBoundaryEdges ( );
    void PutDVShowBoundaryEdges (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDVDetailEnvelopeDisplayAsCircle ( );
    void PutDVDetailEnvelopeDisplayAsCircle (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDVShowDeformationFeatureProfiles ( );
    void PutDVShowDeformationFeatureProfiles (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDVShowDeformationFeatureOrigins ( );
    void PutDVShowDeformationFeatureOrigins (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDVDeriveBendDirectionFromView ( );
    void PutDVDeriveBendDirectionFromView (
        VARIANT_BOOL value );
    enum DrawingViewProjectionAngleConstants GetDVProjectionAngle ( );
    void PutDVProjectionAngle (
        enum DrawingViewProjectionAngleConstants value );
    enum DVThreadDisplayModeConstants GetDVThreadDisplayMode ( );
    void PutDVThreadDisplayMode (
        enum DVThreadDisplayModeConstants value );
    VARIANT_BOOL GetViewerDataIncludeWorkingSheets ( );
    void PutViewerDataIncludeWorkingSheets (
        VARIANT_BOOL value );
    VARIANT_BOOL GetViewerDataInclude2DModelSheet ( );
    void PutViewerDataInclude2DModelSheet (
        VARIANT_BOOL value );
    VARIANT_BOOL GetViewerDataIncludeBackgroundSheets ( );
    void PutViewerDataIncludeBackgroundSheets (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDVReferenceComponentsByConfigurations ( );
    void PutDVReferenceComponentsByConfigurations (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDVShowFillStyleInSectionWeldBeads ( );
    void PutDVShowFillStyleInSectionWeldBeads (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDVSolidFillSectionWeldBeads ( );
    void PutDVSolidFillSectionWeldBeads (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDVEnableAlternatingHatchSpacing ( );
    void PutDVEnableAlternatingHatchSpacing (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDVEnableAlternatingHatchAngle ( );
    void PutDVEnableAlternatingHatchAngle (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDVShowHiddenEdgesInConnectorViews ( );
    void PutDVShowHiddenEdgesInConnectorViews (
        VARIANT_BOOL value );
    VARIANT_BOOL GetDVEnableMultiCoreDrawingViewProcessing ( );
    void PutDVEnableMultiCoreDrawingViewProcessing (
        VARIANT_BOOL value );
    int GetDVNailboardSetDisplayWhiteWiresAs ( );
    void PutDVNailboardSetDisplayWhiteWiresAs (
        int value );
    _bstr_t GetDVStyleNameFromTable (
        enum DrawingViewStyleMappingElementType Element );
    void PutDVStyleNameFromTable (
        enum DrawingViewStyleMappingElementType Element,
        _bstr_t StyleName );
    VARIANT_BOOL GetNumberSheetGroupsSeparately ( );
    void PutNumberSheetGroupsSeparately (
        VARIANT_BOOL value );
    enum GridDisplayOptionsConstants GetGRIDDisplayGridMode ( );
    void PutGRIDDisplayGridMode (
        enum GridDisplayOptionsConstants value );
    enum GridSnapOptionsConstants GetGRIDSnapToGridMode ( );
    void PutGRIDSnapToGridMode (
        enum GridSnapOptionsConstants value );
    double GetGRIDAngle ( );
    void PutGRIDAngle (
        double value );
    double GetGRIDMajorLine ( );
    void PutGRIDMajorLine (
        double value );
    int GetGRIDMinorSpaces ( );
    void PutGRIDMinorSpaces (
        int value );
    _bstr_t GetDVEdgeStyleName (
        enum DrawingViewEdgeStyleMappingEdgeType Element );
    void PutDVEdgeStyleName (
        enum DrawingViewEdgeStyleMappingEdgeType Element,
        _bstr_t StyleName );
    _bstr_t GetCenterOfMassBlockName ( );
    void PutCenterOfMassBlockName (
        _bstr_t value );
    _bstr_t GetCoordinateSystemBlockName ( );
    void PutCoordinateSystemBlockName (
        _bstr_t value );
    _bstr_t GetBendUpString ( );
    void PutBendUpString (
        _bstr_t value );
    _bstr_t GetBendDownString ( );
    void PutBendDownString (
        _bstr_t value );
    VARIANT_BOOL GetMaintainAssociativityForRetrievedDimensions ( );
    void PutMaintainAssociativityForRetrievedDimensions (
        VARIANT_BOOL value );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_DVShowHiddenEdgesInOrthographicViews (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVShowHiddenEdgesInOrthographicViews (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVShowHiddenEdgesInPictorialViews (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVShowHiddenEdgesInPictorialViews (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVShowTangentEdgesInOrthographicViews (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVShowTangentEdgesInOrthographicViews (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVShowTangentEdgesInPictorialViews (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVShowTangentEdgesInPictorialViews (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVShowHiddenOtherEdgesInOrthographicViews (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVShowHiddenOtherEdgesInOrthographicViews (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVShowHiddenOtherEdgesInPictorialViews (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVShowHiddenOtherEdgesInPictorialViews (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVShowHiddenEdgesInSectionViews (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVShowHiddenEdgesInSectionViews (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVShowHiddenTangentEdges (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVShowHiddenTangentEdges (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVShowHiddenOtherTangentEdges (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVShowHiddenOtherTangentEdges (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVShowThreadsInSectionOnlyViews (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVShowThreadsInSectionOnlyViews (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVHatchRibsInSectionViews (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVHatchRibsInSectionViews (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVShowCenterlines (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVShowCenterlines (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVShowFlowlines (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVShowFlowlines (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVShowDetailViewBorders (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVShowDetailViewBorders (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVRetrieveDimensionsOnViewCreation (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVRetrieveDimensionsOnViewCreation (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVShowTubeCenterlines (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVShowTubeCenterlines (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVShowFillStyleInSectionViews (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVShowFillStyleInSectionViews (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVDeriveFillStyleFromPart (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVDeriveFillStyleFromPart (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVCroppedEdgeProcessing (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVCroppedEdgeProcessing (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVConfigChangesMakeViewsOutOfDate (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVConfigChangesMakeViewsOutOfDate (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVDeriveReferenceFromAssembly (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVDeriveReferenceFromAssembly (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVShowEdgesOfCuttingPlaneVertices (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVShowEdgesOfCuttingPlaneVertices (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVIncludePMIDimensions (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVIncludePMIDimensions (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVIncludePMIAnnotations (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVIncludePMIAnnotations (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVShowBoundaryEdges (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVShowBoundaryEdges (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVDetailEnvelopeDisplayAsCircle (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVDetailEnvelopeDisplayAsCircle (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVShowDeformationFeatureProfiles (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVShowDeformationFeatureProfiles (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVShowDeformationFeatureOrigins (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVShowDeformationFeatureOrigins (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVDeriveBendDirectionFromView (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVDeriveBendDirectionFromView (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVProjectionAngle (
        /*[out,retval]*/ enum DrawingViewProjectionAngleConstants * value ) = 0;
      virtual HRESULT __stdcall put_DVProjectionAngle (
        /*[in]*/ enum DrawingViewProjectionAngleConstants value ) = 0;
      virtual HRESULT __stdcall get_DVThreadDisplayMode (
        /*[out,retval]*/ enum DVThreadDisplayModeConstants * value ) = 0;
      virtual HRESULT __stdcall put_DVThreadDisplayMode (
        /*[in]*/ enum DVThreadDisplayModeConstants value ) = 0;
      virtual HRESULT __stdcall get_ViewerDataIncludeWorkingSheets (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_ViewerDataIncludeWorkingSheets (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_ViewerDataInclude2DModelSheet (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_ViewerDataInclude2DModelSheet (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_ViewerDataIncludeBackgroundSheets (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_ViewerDataIncludeBackgroundSheets (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVReferenceComponentsByConfigurations (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVReferenceComponentsByConfigurations (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVShowFillStyleInSectionWeldBeads (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVShowFillStyleInSectionWeldBeads (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVSolidFillSectionWeldBeads (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVSolidFillSectionWeldBeads (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVEnableAlternatingHatchSpacing (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVEnableAlternatingHatchSpacing (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVEnableAlternatingHatchAngle (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVEnableAlternatingHatchAngle (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVShowHiddenEdgesInConnectorViews (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVShowHiddenEdgesInConnectorViews (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVEnableMultiCoreDrawingViewProcessing (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_DVEnableMultiCoreDrawingViewProcessing (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_DVNailboardSetDisplayWhiteWiresAs (
        /*[out,retval]*/ int * value ) = 0;
      virtual HRESULT __stdcall put_DVNailboardSetDisplayWhiteWiresAs (
        /*[in]*/ int value ) = 0;
      virtual HRESULT __stdcall get_DVStyleNameFromTable (
        /*[in]*/ enum DrawingViewStyleMappingElementType Element,
        /*[out,retval]*/ BSTR * StyleName ) = 0;
      virtual HRESULT __stdcall put_DVStyleNameFromTable (
        /*[in]*/ enum DrawingViewStyleMappingElementType Element,
        /*[in]*/ BSTR StyleName ) = 0;
      virtual HRESULT __stdcall get_NumberSheetGroupsSeparately (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_NumberSheetGroupsSeparately (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_GRIDDisplayGridMode (
        /*[out,retval]*/ enum GridDisplayOptionsConstants * value ) = 0;
      virtual HRESULT __stdcall put_GRIDDisplayGridMode (
        /*[in]*/ enum GridDisplayOptionsConstants value ) = 0;
      virtual HRESULT __stdcall get_GRIDSnapToGridMode (
        /*[out,retval]*/ enum GridSnapOptionsConstants * value ) = 0;
      virtual HRESULT __stdcall put_GRIDSnapToGridMode (
        /*[in]*/ enum GridSnapOptionsConstants value ) = 0;
      virtual HRESULT __stdcall get_GRIDAngle (
        /*[out,retval]*/ double * value ) = 0;
      virtual HRESULT __stdcall put_GRIDAngle (
        /*[in]*/ double value ) = 0;
      virtual HRESULT __stdcall get_GRIDMajorLine (
        /*[out,retval]*/ double * value ) = 0;
      virtual HRESULT __stdcall put_GRIDMajorLine (
        /*[in]*/ double value ) = 0;
      virtual HRESULT __stdcall get_GRIDMinorSpaces (
        /*[out,retval]*/ int * value ) = 0;
      virtual HRESULT __stdcall put_GRIDMinorSpaces (
        /*[in]*/ int value ) = 0;
      virtual HRESULT __stdcall get_DVEdgeStyleName (
        /*[in]*/ enum DrawingViewEdgeStyleMappingEdgeType Element,
        /*[out,retval]*/ BSTR * StyleName ) = 0;
      virtual HRESULT __stdcall put_DVEdgeStyleName (
        /*[in]*/ enum DrawingViewEdgeStyleMappingEdgeType Element,
        /*[in]*/ BSTR StyleName ) = 0;
      virtual HRESULT __stdcall get_CenterOfMassBlockName (
        /*[out,retval]*/ BSTR * value ) = 0;
      virtual HRESULT __stdcall put_CenterOfMassBlockName (
        /*[in]*/ BSTR value ) = 0;
      virtual HRESULT __stdcall get_CoordinateSystemBlockName (
        /*[out,retval]*/ BSTR * value ) = 0;
      virtual HRESULT __stdcall put_CoordinateSystemBlockName (
        /*[in]*/ BSTR value ) = 0;
      virtual HRESULT __stdcall get_BendUpString (
        /*[out,retval]*/ BSTR * value ) = 0;
      virtual HRESULT __stdcall put_BendUpString (
        /*[in]*/ BSTR value ) = 0;
      virtual HRESULT __stdcall get_BendDownString (
        /*[out,retval]*/ BSTR * value ) = 0;
      virtual HRESULT __stdcall put_BendDownString (
        /*[in]*/ BSTR value ) = 0;
      virtual HRESULT __stdcall get_MaintainAssociativityForRetrievedDimensions (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_MaintainAssociativityForRetrievedDimensions (
        /*[in]*/ VARIANT_BOOL value ) = 0;
};

struct __declspec(uuid("c8d3c856-0f7d-4375-9002-671ee363082a"))
SheetGroups : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    SheetGroupPtr Item (
        const _variant_t & Index );
};

struct __declspec(uuid("741593ae-a753-49ae-8c92-99315d899a80"))
SheetGroup : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetDocument))
    IDispatchPtr Document;
    __declspec(property(get=GetKey))
    _bstr_t Key;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetSheets))
    SheetGroupSheetsPtr Sheets;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetDocument ( );
    _bstr_t GetKey ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    SheetGroupSheetsPtr GetSheets ( );
};

struct __declspec(uuid("10ddea76-77aa-40ce-8a43-196d8ce9a9f1"))
_ISheetGroupsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    SheetGroupPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct SheetGroup * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Unknown ) = 0;
};

struct __declspec(uuid("04848584-d011-4411-8ad5-ff51d41c72e3"))
SheetGroupSheets : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    SheetPtr Item (
        const _variant_t & Index );
};

struct __declspec(uuid("7443c8ce-d8f2-44f8-951b-f3d11a4fb070"))
_ISheetGroupAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetDocument))
    IDispatchPtr Document;
    __declspec(property(get=GetKey))
    _bstr_t Key;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetSheets))
    SheetGroupSheetsPtr Sheets;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetDocument ( );
    _bstr_t GetKey ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    SheetGroupSheetsPtr GetSheets ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ IDispatch * * Book ) = 0;
      virtual HRESULT __stdcall get_Key (
        /*[out,retval]*/ BSTR * Key ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Sheets (
        /*[out,retval]*/ struct SheetGroupSheets * * Sheets ) = 0;
};

struct __declspec(uuid("ffb20fa0-339b-11ce-956a-08003601dfe5"))
Sheet : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDrawingObjects))
    TGFrameworkSupport::DrawingObjectsPtr DrawingObjects;
    __declspec(property(get=GetLayers))
    TGFramework::LayersPtr Layers;
    __declspec(property(get=GetDatumPoints))
    IDispatchPtr DatumPoints;
    __declspec(property(get=GetDimensions))
    IDispatchPtr Dimensions;
    __declspec(property(get=GetSectionBoundaries2d))
    SectionBoundaries2dPtr SectionBoundaries2d;
    __declspec(property(get=GetBlockOccurrences))
    BlockOccurrencesPtr BlockOccurrences;
    __declspec(property(get=GetBlockLabels))
    BlockLabelsPtr BlockLabels;
    __declspec(property(get=GetGostWeldSymbols))
    IDispatchPtr GostWeldSymbols;
    __declspec(property(get=GetNumber,put=PutNumber))
    long Number;
    __declspec(property(get=GetRelations2d))
    TGFrameworkSupport::Relations2dPtr Relations2d;
    __declspec(property(get=GetSheetGroup))
    IDispatchPtr SheetGroup;
    __declspec(property(get=GetSheetSetup))
    SheetSetupPtr SheetSetup;
    __declspec(property(get=GetKey))
    _bstr_t Key;
    __declspec(property(get=GetSection))
    SectionPtr Section;
    __declspec(property(get=GetBackground,put=PutBackground))
    SheetPtr Background;
    __declspec(property(get=GetBackgroundVisible,put=PutBackgroundVisible))
    VARIANT_BOOL BackgroundVisible;
    __declspec(property(get=GetSectionType))
    enum SheetSectionTypeConstants SectionType;
    __declspec(property(get=GetDrawingViews))
    DrawingViewsPtr DrawingViews;
    __declspec(property(get=GetTextProfiles))
    TGFrameworkSupport::TextProfilesPtr TextProfiles;
    __declspec(property(get=GetCuttingPlanes))
    IDispatchPtr CuttingPlanes;
    __declspec(property(get=GetAnnotAlignmentShapes))
    IDispatchPtr AnnotAlignmentShapes;
    __declspec(property(get=GetTechnicalRequirements))
    IDispatchPtr TechnicalRequirements;
    __declspec(property(get=GetLines2d))
    TGFrameworkSupport::Lines2dPtr Lines2d;
    __declspec(property(get=GetCircles2d))
    TGFrameworkSupport::Circles2dPtr Circles2d;
    __declspec(property(get=GetArcs2d))
    TGFrameworkSupport::Arcs2dPtr Arcs2d;
    __declspec(property(get=GetEllipses2d))
    TGFrameworkSupport::Ellipses2dPtr Ellipses2d;
    __declspec(property(get=GetBsplineCurves2d))
    TGFrameworkSupport::BSplineCurves2dPtr BsplineCurves2d;
    __declspec(property(get=GetPoints2d))
    TGFrameworkSupport::Points2dPtr Points2d;
    __declspec(property(get=GetConics2d))
    TGFrameworkSupport::Conics2dPtr Conics2d;
    __declspec(property(get=GetEllipticalArcs2d))
    TGFrameworkSupport::EllipticalArcs2dPtr EllipticalArcs2d;
    __declspec(property(get=GetCurves2d))
    TGFrameworkSupport::Curves2dPtr Curves2d;
    __declspec(property(get=GetLineStrings2d))
    TGFrameworkSupport::LineStrings2dPtr LineStrings2d;
    __declspec(property(get=GetComplexStrings2d))
    TGFrameworkSupport::ComplexStrings2dPtr ComplexStrings2d;
    __declspec(property(get=GetBoundaries2d))
    TGFrameworkSupport::Boundaries2dPtr Boundaries2d;
    __declspec(property(get=GetImages2d))
    TGFrameworkSupport::Images2dPtr Images2d;
    __declspec(property(get=GetSmartFrames2d))
    IDispatchPtr SmartFrames2d;
    __declspec(property(get=GetAreaPropertiesCollection))
    TGFrameworkSupport::AreaPropertiesCollectionPtr AreaPropertiesCollection;
    __declspec(property(get=GetTextBoxes))
    IDispatchPtr TextBoxes;
    __declspec(property(get=GetVFS))
    IDispatchPtr VFS[];
    __declspec(property(get=GetGroups))
    IDispatchPtr Groups;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetSymbols))
    IDispatchPtr Symbols;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];
    __declspec(property(get=GetDatumFrames))
    IDispatchPtr DatumFrames;
    __declspec(property(get=GetFeatureControlFrames))
    IDispatchPtr FeatureControlFrames;
    __declspec(property(get=GetSurfaceFinishSymbols))
    IDispatchPtr SurfaceFinishSymbols;
    __declspec(property(get=GetWeldSymbols))
    IDispatchPtr WeldSymbols;
    __declspec(property(get=GetCenterMarks))
    IDispatchPtr CenterMarks;
    __declspec(property(get=GetCenterLines))
    IDispatchPtr CenterLines;
    __declspec(property(get=GetDatumTargets))
    IDispatchPtr DatumTargets;
    __declspec(property(get=GetLeaders))
    IDispatchPtr Leaders;
    __declspec(property(get=GetBalloons))
    IDispatchPtr Balloons;
    __declspec(property(get=GetCornerAnnotations))
    IDispatchPtr CornerAnnotations;
    __declspec(property(get=GetBoltHoleCircles))
    IDispatchPtr BoltHoleCircles;
    __declspec(property(get=GetConnectors))
    IDispatchPtr Connectors;
    __declspec(property(get=GetDefaultTextScale,put=PutDefaultTextScale))
    double DefaultTextScale;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetDocument))
    IDispatchPtr Document;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetPinSymbols))
    IDispatchPtr PinSymbols;
    __declspec(property(get=GetType))
    long Type;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetDocument ( );
    TGFrameworkSupport::DrawingObjectsPtr GetDrawingObjects ( );
    long GetIndex ( );
    _bstr_t GetKey ( );
    void PutName (
        _bstr_t _arg1 );
    _bstr_t GetName ( );
    IDispatchPtr GetParent ( );
    SectionPtr GetSection ( );
    enum SheetSectionTypeConstants GetSectionType ( );
    SheetSetupPtr GetSheetSetup ( );
    long GetType ( );
    void PutVisible (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetVisible ( );
    SheetPtr GetBackground ( );
    void PutBackground (
        struct Sheet * _arg1 );
    void PutBackgroundVisible (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetBackgroundVisible ( );
    HRESULT Activate ( );
    HRESULT Delete ( );
    TGFrameworkSupport::Lines2dPtr GetLines2d ( );
    TGFrameworkSupport::Circles2dPtr GetCircles2d ( );
    TGFrameworkSupport::Arcs2dPtr GetArcs2d ( );
    TGFrameworkSupport::Ellipses2dPtr GetEllipses2d ( );
    TGFrameworkSupport::BSplineCurves2dPtr GetBsplineCurves2d ( );
    TGFrameworkSupport::Points2dPtr GetPoints2d ( );
    TGFrameworkSupport::EllipticalArcs2dPtr GetEllipticalArcs2d ( );
    TGFrameworkSupport::Curves2dPtr GetCurves2d ( );
    TGFrameworkSupport::LineStrings2dPtr GetLineStrings2d ( );
    TGFrameworkSupport::ComplexStrings2dPtr GetComplexStrings2d ( );
    TGFrameworkSupport::Boundaries2dPtr GetBoundaries2d ( );
    TGFrameworkSupport::Images2dPtr GetImages2d ( );
    IDispatchPtr GetDimensions ( );
    IDispatchPtr GetLeaders ( );
    IDispatchPtr GetBalloons ( );
    IDispatchPtr GetTextBoxes ( );
    TGFrameworkSupport::TextProfilesPtr GetTextProfiles ( );
    TGFrameworkSupport::Relations2dPtr GetRelations2d ( );
    IDispatchPtr GetSymbols ( );
    IDispatchPtr GetSmartFrames2d ( );
    TGFramework::LayersPtr GetLayers ( );
    IDispatchPtr GetVFS (
        IDispatch * Path );
    HRESULT CreateVFS (
        IDispatch * Path,
        IDispatch * * VFS );
    HRESULT DeleteVFS (
        IDispatch * VFS );
    DrawingViewsPtr GetDrawingViews ( );
    IDispatchPtr GetCuttingPlanes ( );
    IDispatchPtr GetDatumFrames ( );
    IDispatchPtr GetFeatureControlFrames ( );
    IDispatchPtr GetSurfaceFinishSymbols ( );
    IDispatchPtr GetWeldSymbols ( );
    IDispatchPtr GetCenterMarks ( );
    IDispatchPtr GetCenterLines ( );
    IDispatchPtr GetDatumTargets ( );
    IDispatchPtr GetPinSymbols ( );
    IDispatchPtr GetDatumPoints ( );
    IDispatchPtr GetCornerAnnotations ( );
    IDispatchPtr GetGroups ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    HRESULT CopyEMFToClipboard ( );
    HRESULT GetAreaProperties (
        SAFEARRAY * * AreaPointXArray,
        SAFEARRAY * * AreaPointYArray,
        long NumPoints,
        const _variant_t & LineStyle = vtMissing,
        const _variant_t & TextStyle = vtMissing,
        const _variant_t & DisplayResults = vtMissing,
        const _variant_t & CopyToClipboard = vtMissing,
        VARIANT * Area = &vtMissing,
        VARIANT * Center = &vtMissing,
        VARIANT * GlobalMomentsOfInertia = &vtMissing,
        VARIANT * PrincipalAngle = &vtMissing,
        VARIANT * PrincipalXOrientation = &vtMissing,
        VARIANT * PrincipalYOrientation = &vtMissing,
        VARIANT * PrincipalMomentsOfInertia = &vtMissing );
    HRESULT ConvertToCurve (
        long NumberOfElements,
        SAFEARRAY * * ElementArray,
        VARIANT * NumConvertedElements = &vtMissing,
        VARIANT * ConvertedElements = &vtMissing );
    IDispatchPtr GetBoltHoleCircles ( );
    IDispatchPtr GetConnectors ( );
    void PutDefaultTextScale (
        double _arg1 );
    double GetDefaultTextScale ( );
    BlockOccurrencesPtr GetBlockOccurrences ( );
    BlockLabelsPtr GetBlockLabels ( );
    TGFrameworkSupport::AreaPropertiesCollectionPtr GetAreaPropertiesCollection ( );
    IDispatchPtr GetGostWeldSymbols ( );
    SectionBoundaries2dPtr GetSectionBoundaries2d ( );
    void PutNumber (
        long _arg1 );
    long GetNumber ( );
    TGFramework::SelectSetPtr SmartSelect (
        IDispatch * pSourceObject,
        VARIANT_BOOL vbColor,
        VARIANT_BOOL vbType,
        VARIANT_BOOL vbLayer,
        VARIANT_BOOL vbLineType,
        VARIANT_BOOL vbLineWidth );
    HRESULT CleanGeometry2d (
        long nElements,
        SAFEARRAY * * pElementArray,
        enum CleanProfileOptions options,
        VARIANT_BOOL bCleanPoints,
        VARIANT_BOOL bCleanBSplines,
        VARIANT_BOOL bCleanIdentical,
        VARIANT_BOOL bCleanSmall,
        const _variant_t & vLayer,
        const _variant_t & vSmallTolerance );
    IDispatchPtr GetSheetGroup ( );
    HRESULT ChainLocate (
        double x,
        double y );
    HRESULT Offset2d (
        double offsetSideX,
        double offsetSideY,
        double offsetDistance );
    HRESULT FenceLocate (
        double dLeft,
        double dTop,
        double dRight,
        double dBottom );
    IDispatchPtr GetAnnotAlignmentShapes ( );
    HRESULT ArrangeDimensionsInSelectSet (
        double iStackPitchMultiplier,
        VARIANT_BOOL bAssociative );
    HRESULT ScaleSelectSet (
        double dScale,
        double AboutPt_x,
        double AboutPt_y );
    HRESULT MoveSelectSet (
        double FromPt_x,
        double FromPt_y,
        double ToPt_x,
        double ToPt_y );
    HRESULT RotateSelectSet (
        double dAngle,
        double AboutPt_x,
        double AboutPt_y );
    HRESULT PrintArea (
        double LowerLeftX,
        double LowerLeftY,
        double UpperRightX,
        double UpperRightY,
        const _variant_t & Printer = vtMissing,
        const _variant_t & NumCopies = vtMissing,
        const _variant_t & Orientation = vtMissing,
        const _variant_t & PaperSize = vtMissing,
        const _variant_t & Scale = vtMissing,
        const _variant_t & PrintToFile = vtMissing,
        const _variant_t & OutputFileName = vtMissing,
        const _variant_t & ColorAsBlack = vtMissing,
        const _variant_t & Collate = vtMissing,
        const _variant_t & ScaleLineWidths = vtMissing,
        const _variant_t & ScaleLineTypes = vtMissing,
        const _variant_t & UsePrinterClipping = vtMissing );
    HRESULT PrintSheet (
        const _variant_t & Printer = vtMissing,
        const _variant_t & NumCopies = vtMissing,
        const _variant_t & Orientation = vtMissing,
        const _variant_t & PaperSize = vtMissing,
        const _variant_t & Scale = vtMissing,
        const _variant_t & PrintToFile = vtMissing,
        const _variant_t & OutputFileName = vtMissing,
        const _variant_t & ColorAsBlack = vtMissing,
        const _variant_t & Collate = vtMissing,
        const _variant_t & ScaleLineWidths = vtMissing,
        const _variant_t & ScaleLineTypes = vtMissing,
        const _variant_t & UsePrinterClipping = vtMissing );
    IDispatchPtr GetTechnicalRequirements ( );
    HRESULT ReplaceBackground (
        _bstr_t DraftFileName,
        _bstr_t BackgroundSheetName );
    HRESULT LineupText (
        IDispatch * Source,
        SAFEARRAY * * Target,
        enum LineupTextAlignOptionConstants AlignOption,
        long OffsetGap );
    HRESULT LineupTextEx (
        IDispatch * Source,
        SAFEARRAY * * Target,
        enum LineupTextAlignOptionConstants AlignOption,
        double OffsetGap );
    TGFrameworkSupport::Conics2dPtr GetConics2d ( );
    HRESULT ReplaceBackgroundEx (
        _bstr_t DraftFileName,
        _bstr_t BackgroundSheetName,
        VARIANT_BOOL bReplaceBlocksOfSameName );
};

struct __declspec(uuid("401d8cd3-813d-4c27-990d-9761bbae1d0f"))
_ISheetGroupSheetsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    SheetPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Sheet * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Unknown ) = 0;
};

struct __declspec(uuid("2f364920-5eb1-11ce-956a-08003601dfe5"))
Section : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetSheets))
    SectionSheetsPtr Sheets;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum SheetSectionTypeConstants Type;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    long GetIndex ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t _arg1 );
    IDispatchPtr GetParent ( );
    SectionSheetsPtr GetSheets ( );
    HRESULT Activate ( );
    HRESULT Move (
        const _variant_t & InsertBefore = vtMissing,
        const _variant_t & InsertAfter = vtMissing );
    enum SheetSectionTypeConstants GetType ( );
    HRESULT Deactivate ( );
};

struct __declspec(uuid("c39cae50-5fb0-11ce-956a-08003601dfe5"))
SectionSheets : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    SheetPtr Item (
        const _variant_t & Index );
};

struct __declspec(uuid("9a09a160-5fb0-11ce-956a-08003601dfe5"))
_ISectionSheetsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    SheetPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Sheet * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Unknown ) = 0;
};

enum SheetSectionTypeConstants
{
    igUnknownSection = -1,
    igWorkingSection = 0,
    igBackgroundSection = 1,
    igDrawingViewSection = 2,
    ig2dModelSection = 3,
    igBlockViewSection = 4
};

struct __declspec(uuid("0e78c9b0-5eb1-11ce-956a-08003601dfe5"))
_ISectionAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetSheets))
    SectionSheetsPtr Sheets;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum SheetSectionTypeConstants Type;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    long GetIndex ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    IDispatchPtr GetParent ( );
    SectionSheetsPtr GetSheets ( );
    HRESULT Activate ( );
    HRESULT Move (
        const _variant_t & InsertBefore = vtMissing,
        const _variant_t & InsertAfter = vtMissing );
    enum SheetSectionTypeConstants GetType ( );
    HRESULT Deactivate ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Sheets (
        /*[out,retval]*/ struct SectionSheets * * Sheets ) = 0;
      virtual HRESULT __stdcall raw_Activate ( ) = 0;
      virtual HRESULT __stdcall raw_Move (
        /*[in]*/ VARIANT InsertBefore = vtMissing,
        /*[in]*/ VARIANT InsertAfter = vtMissing ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum SheetSectionTypeConstants * Type ) = 0;
      virtual HRESULT __stdcall raw_Deactivate ( ) = 0;
};

struct __declspec(uuid("a1ba2bc0-41ea-11ce-bb8e-08003601bb4e"))
SheetSetup : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetBottomMargin,put=PutBottomMargin))
    double BottomMargin;
    __declspec(property(get=GetFirstPageNumber,put=PutFirstPageNumber))
    long FirstPageNumber;
    __declspec(property(get=GetLeftMargin,put=PutLeftMargin))
    double LeftMargin;
    __declspec(property(get=GetPaperUnits,put=PutPaperUnits))
    enum PaperUnitConstants PaperUnits;
    __declspec(property(get=GetPaperUnitsPrecision,put=PutPaperUnitsPrecision))
    enum PrecisionConstants PaperUnitsPrecision;
    __declspec(property(get=GetParent))
    SheetPtr Parent;
    __declspec(property(get=GetRightMargin,put=PutRightMargin))
    double RightMargin;
    __declspec(property(get=GetScaleOption,put=PutScaleOption))
    enum PaperToModelScaleConstants ScaleOption;
    __declspec(property(get=GetSheetHeight,put=PutSheetHeight))
    double SheetHeight;
    __declspec(property(get=GetSheetSizeOption,put=PutSheetSizeOption))
    enum PaperSizeConstants SheetSizeOption;
    __declspec(property(get=GetSheetWidth,put=PutSheetWidth))
    double SheetWidth;
    __declspec(property(get=GetTopMargin,put=PutTopMargin))
    double TopMargin;
    __declspec(property(get=GetDefaultDrawingViewScaleOption,put=PutDefaultDrawingViewScaleOption))
    enum PaperToModelScaleConstants DefaultDrawingViewScaleOption;
    __declspec(property(get=GetDrawingViewForSheetScale,put=PutDrawingViewForSheetScale))
    IDispatchPtr DrawingViewForSheetScale;
    __declspec(property(get=GetIsManualSheetScale))
    VARIANT_BOOL IsManualSheetScale;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    SheetPtr GetParent ( );
    void PutBottomMargin (
        double _arg1 );
    double GetBottomMargin ( );
    void PutFirstPageNumber (
        long _arg1 );
    long GetFirstPageNumber ( );
    double GetLeftMargin ( );
    void PutLeftMargin (
        double _arg1 );
    enum PaperUnitConstants GetPaperUnits ( );
    void PutPaperUnits (
        enum PaperUnitConstants _arg1 );
    void PutPaperUnitsPrecision (
        enum PrecisionConstants _arg1 );
    enum PrecisionConstants GetPaperUnitsPrecision ( );
    double GetRightMargin ( );
    void PutRightMargin (
        double _arg1 );
    enum PaperToModelScaleConstants GetScaleOption ( );
    void PutScaleOption (
        enum PaperToModelScaleConstants _arg1 );
    void PutSheetHeight (
        double _arg1 );
    double GetSheetHeight ( );
    void PutSheetSizeOption (
        enum PaperSizeConstants _arg1 );
    enum PaperSizeConstants GetSheetSizeOption ( );
    double GetSheetWidth ( );
    void PutSheetWidth (
        double _arg1 );
    void PutTopMargin (
        double _arg1 );
    double GetTopMargin ( );
    HRESULT SetScale (
        double PaperRatioComponent,
        double ModelRatioComponent );
    HRESULT GetScale (
        double * PaperRatioComponent,
        double * ModelRatioComponent );
    double GetScaleFactor ( );
    HRESULT SetDefaultDrawingViewScale (
        double PaperRatioComponent,
        double ModelRatioComponent );
    HRESULT GetDefaultDrawingViewScale (
        double * PaperRatioComponent,
        double * ModelRatioComponent );
    double GetDefaultDrawingViewScaleFactor ( );
    enum PaperToModelScaleConstants GetDefaultDrawingViewScaleOption ( );
    void PutDefaultDrawingViewScaleOption (
        enum PaperToModelScaleConstants _arg1 );
    IDispatchPtr GetDrawingViewForSheetScale ( );
    void PutDrawingViewForSheetScale (
        IDispatch * _arg1 );
    VARIANT_BOOL GetIsManualSheetScale ( );
    HRESULT ClearDrawingViewForSheetScale ( );
};

enum PaperUnitConstants
{
    igUnitInches = 0,
    igUnitMillimeters = 1,
    igUnitCentimeters = 2
};

enum PrecisionConstants
{
    igPrecisionOnes = 0,
    igPrecisionTenths = 1,
    igPrecisionHundredths = 2,
    igPrecisionThousandths = 3,
    igPrecisionTenThousandths = 4,
    igPrecisionHalves = 5,
    igPrecisionQuarters = 6,
    igPrecisionEighths = 7,
    igPrecisionSixteenths = 8,
    igPrecisionThirtySecondths = 9
};

enum PaperToModelScaleConstants
{
    igDefault1To1 = -1,
    igCustomScale = 0,
    igMetric50To1 = 1,
    igMetric20To1 = 2,
    igMetric10To1 = 3,
    igMetric5To1 = 4,
    igMetric2To1 = 5,
    igMetric1To1 = 6,
    igMetric1To2 = 7,
    igMetric1To5 = 8,
    igMetric1To10 = 9,
    igMetric1To20 = 10,
    igMetric1To50 = 11,
    igMetric1To100 = 12,
    igMetric1To200 = 13,
    igMetric1To500 = 14,
    igMetric1To1000 = 15,
    igMetric1To2000 = 16,
    igMetric1To5000 = 17,
    igMetric1To10000 = 18,
    igEng40To1 = 19,
    igEng20To1 = 20,
    igEng10To1 = 21,
    igEng8To1 = 22,
    igEng4To1 = 23,
    igEng2To1 = 24,
    igEng1To1 = 25,
    igEng1To2 = 26,
    igEng1To4 = 27,
    igEng1To8 = 28,
    igEng1To10 = 29,
    igEng1To20 = 30,
    igEng1To40 = 31,
    igEng1To80 = 32,
    igEng1To100 = 33,
    igArch_1_64thInTo1Ft = 34,
    igArch_3_32ndsInTo1Ft = 35,
    igArch_1_8thInTo1Ft = 36,
    igArch_3_16thsInTo1Ft = 37,
    igArch_1_4thInTo1Ft = 38,
    igArch_3_8thsInTo1Ft = 39,
    igArch_1_HalfInTo1Ft = 40,
    igArch_3_4thsInTo1Ft = 41,
    igArch_1InTo1Ft = 42,
    igArch_3_HalvesInTo1Ft = 43,
    igArch_2InTo1Ft = 44,
    igArch_3InTo1Ft = 45
};

enum PaperSizeConstants
{
    igCustomSheetSize = -2,
    igSameAsPrintSetup = -1,
    igEngFolioTall = 0,
    igEngFolioWide = 1,
    igEngLegalTall = 2,
    igEngLegalWide = 3,
    igEngExecutiveTall = 4,
    igEngExecutiveWide = 5,
    igEngStatementTall = 6,
    igEngStatementWide = 7,
    igEngCom10Tall = 8,
    igEngCom10Wide = 9,
    igEngMonarchTall = 10,
    igEngMonarchWide = 11,
    igAnsiATall = 12,
    igAnsiAWide = 13,
    igAnsiBTall = 14,
    igAnsiBWide = 15,
    igAnsiCTall = 16,
    igAnsiCWide = 17,
    igAnsiDTall = 18,
    igAnsiDWide = 19,
    igAnsiETall = 20,
    igAnsiEWide = 21,
    igAnsiArchDTall = 22,
    igAnsiArchDWide = 23,
    igAnsiArchETall = 24,
    igAnsiArchEWide = 25,
    igIsoA5Tall = 26,
    igIsoA5Wide = 27,
    igIsoA4Tall = 28,
    igIsoA4Wide = 29,
    igIsoA3Tall = 30,
    igIsoA3Wide = 31,
    igIsoA2Tall = 32,
    igIsoA2Wide = 33,
    igIsoA1Tall = 34,
    igIsoA1Wide = 35,
    igIsoA0Tall = 36,
    igIsoA0Wide = 37,
    igIsoB5Tall = 38,
    igIsoB5Wide = 39,
    igIsoB4Tall = 40,
    igIsoB4Wide = 41,
    igIsoC5Tall = 42,
    igIsoC5Wide = 43,
    igIsoDLTall = 44,
    igIsoDLWide = 45,
    igIsoQuatroTall = 46,
    igIsoQuatroWide = 47
};

struct __declspec(uuid("0b154580-41d0-11ce-bb8e-08003601bb4e"))
_ISheetSetupAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetBottomMargin,put=PutBottomMargin))
    double BottomMargin;
    __declspec(property(get=GetFirstPageNumber,put=PutFirstPageNumber))
    long FirstPageNumber;
    __declspec(property(get=GetLeftMargin,put=PutLeftMargin))
    double LeftMargin;
    __declspec(property(get=GetPaperUnits,put=PutPaperUnits))
    enum PaperUnitConstants PaperUnits;
    __declspec(property(get=GetPaperUnitsPrecision,put=PutPaperUnitsPrecision))
    enum PrecisionConstants PaperUnitsPrecision;
    __declspec(property(get=GetParent))
    SheetPtr Parent;
    __declspec(property(get=GetRightMargin,put=PutRightMargin))
    double RightMargin;
    __declspec(property(get=GetScaleOption,put=PutScaleOption))
    enum PaperToModelScaleConstants ScaleOption;
    __declspec(property(get=GetSheetHeight,put=PutSheetHeight))
    double SheetHeight;
    __declspec(property(get=GetSheetSizeOption,put=PutSheetSizeOption))
    enum PaperSizeConstants SheetSizeOption;
    __declspec(property(get=GetSheetWidth,put=PutSheetWidth))
    double SheetWidth;
    __declspec(property(get=GetTopMargin,put=PutTopMargin))
    double TopMargin;
    __declspec(property(get=GetDefaultDrawingViewScaleOption,put=PutDefaultDrawingViewScaleOption))
    enum PaperToModelScaleConstants DefaultDrawingViewScaleOption;
    __declspec(property(get=GetDrawingViewForSheetScale,put=PutDrawingViewForSheetScale))
    IDispatchPtr DrawingViewForSheetScale;
    __declspec(property(get=GetIsManualSheetScale))
    VARIANT_BOOL IsManualSheetScale;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    SheetPtr GetParent ( );
    void PutBottomMargin (
        double BottomMargin );
    double GetBottomMargin ( );
    void PutFirstPageNumber (
        long PageNumber );
    long GetFirstPageNumber ( );
    double GetLeftMargin ( );
    void PutLeftMargin (
        double LeftMargin );
    enum PaperUnitConstants GetPaperUnits ( );
    void PutPaperUnits (
        enum PaperUnitConstants UnitType );
    void PutPaperUnitsPrecision (
        enum PrecisionConstants Precision );
    enum PrecisionConstants GetPaperUnitsPrecision ( );
    double GetRightMargin ( );
    void PutRightMargin (
        double RightMargin );
    enum PaperToModelScaleConstants GetScaleOption ( );
    void PutScaleOption (
        enum PaperToModelScaleConstants Option );
    void PutSheetHeight (
        double Height );
    double GetSheetHeight ( );
    void PutSheetSizeOption (
        enum PaperSizeConstants Option );
    enum PaperSizeConstants GetSheetSizeOption ( );
    double GetSheetWidth ( );
    void PutSheetWidth (
        double Width );
    void PutTopMargin (
        double TopMargin );
    double GetTopMargin ( );
    HRESULT SetScale (
        double PaperRatioComponent,
        double ModelRatioComponent );
    HRESULT GetScale (
        double * PaperRatioComponent,
        double * ModelRatioComponent );
    double GetScaleFactor ( );
    HRESULT SetDefaultDrawingViewScale (
        double PaperRatioComponent,
        double ModelRatioComponent );
    HRESULT GetDefaultDrawingViewScale (
        double * PaperRatioComponent,
        double * ModelRatioComponent );
    double GetDefaultDrawingViewScaleFactor ( );
    enum PaperToModelScaleConstants GetDefaultDrawingViewScaleOption ( );
    void PutDefaultDrawingViewScaleOption (
        enum PaperToModelScaleConstants Option );
    IDispatchPtr GetDrawingViewForSheetScale ( );
    void PutDrawingViewForSheetScale (
        IDispatch * ppDrawingView );
    VARIANT_BOOL GetIsManualSheetScale ( );
    HRESULT ClearDrawingViewForSheetScale ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * pApp ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct Sheet * * pParent ) = 0;
      virtual HRESULT __stdcall put_BottomMargin (
        /*[in]*/ double BottomMargin ) = 0;
      virtual HRESULT __stdcall get_BottomMargin (
        /*[out,retval]*/ double * BottomMargin ) = 0;
      virtual HRESULT __stdcall put_FirstPageNumber (
        /*[in]*/ long PageNumber ) = 0;
      virtual HRESULT __stdcall get_FirstPageNumber (
        /*[out,retval]*/ long * PageNumber ) = 0;
      virtual HRESULT __stdcall get_LeftMargin (
        /*[out,retval]*/ double * LeftMargin ) = 0;
      virtual HRESULT __stdcall put_LeftMargin (
        /*[in]*/ double LeftMargin ) = 0;
      virtual HRESULT __stdcall get_PaperUnits (
        /*[out,retval]*/ enum PaperUnitConstants * UnitType ) = 0;
      virtual HRESULT __stdcall put_PaperUnits (
        /*[in]*/ enum PaperUnitConstants UnitType ) = 0;
      virtual HRESULT __stdcall put_PaperUnitsPrecision (
        /*[in]*/ enum PrecisionConstants Precision ) = 0;
      virtual HRESULT __stdcall get_PaperUnitsPrecision (
        /*[out,retval]*/ enum PrecisionConstants * Precision ) = 0;
      virtual HRESULT __stdcall get_RightMargin (
        /*[out,retval]*/ double * RightMargin ) = 0;
      virtual HRESULT __stdcall put_RightMargin (
        /*[in]*/ double RightMargin ) = 0;
      virtual HRESULT __stdcall get_ScaleOption (
        /*[out,retval]*/ enum PaperToModelScaleConstants * Option ) = 0;
      virtual HRESULT __stdcall put_ScaleOption (
        /*[in]*/ enum PaperToModelScaleConstants Option ) = 0;
      virtual HRESULT __stdcall put_SheetHeight (
        /*[in]*/ double Height ) = 0;
      virtual HRESULT __stdcall get_SheetHeight (
        /*[out,retval]*/ double * Height ) = 0;
      virtual HRESULT __stdcall put_SheetSizeOption (
        /*[in]*/ enum PaperSizeConstants Option ) = 0;
      virtual HRESULT __stdcall get_SheetSizeOption (
        /*[out,retval]*/ enum PaperSizeConstants * Option ) = 0;
      virtual HRESULT __stdcall get_SheetWidth (
        /*[out,retval]*/ double * Width ) = 0;
      virtual HRESULT __stdcall put_SheetWidth (
        /*[in]*/ double Width ) = 0;
      virtual HRESULT __stdcall put_TopMargin (
        /*[in]*/ double TopMargin ) = 0;
      virtual HRESULT __stdcall get_TopMargin (
        /*[out,retval]*/ double * TopMargin ) = 0;
      virtual HRESULT __stdcall raw_SetScale (
        /*[in]*/ double PaperRatioComponent,
        /*[in]*/ double ModelRatioComponent ) = 0;
      virtual HRESULT __stdcall raw_GetScale (
        /*[out]*/ double * PaperRatioComponent,
        /*[out]*/ double * ModelRatioComponent ) = 0;
      virtual HRESULT __stdcall raw_GetScaleFactor (
        /*[out,retval]*/ double * Factor ) = 0;
      virtual HRESULT __stdcall raw_SetDefaultDrawingViewScale (
        /*[in]*/ double PaperRatioComponent,
        /*[in]*/ double ModelRatioComponent ) = 0;
      virtual HRESULT __stdcall raw_GetDefaultDrawingViewScale (
        /*[out]*/ double * PaperRatioComponent,
        /*[out]*/ double * ModelRatioComponent ) = 0;
      virtual HRESULT __stdcall raw_GetDefaultDrawingViewScaleFactor (
        /*[out,retval]*/ double * Factor ) = 0;
      virtual HRESULT __stdcall get_DefaultDrawingViewScaleOption (
        /*[out,retval]*/ enum PaperToModelScaleConstants * Option ) = 0;
      virtual HRESULT __stdcall put_DefaultDrawingViewScaleOption (
        /*[in]*/ enum PaperToModelScaleConstants Option ) = 0;
      virtual HRESULT __stdcall get_DrawingViewForSheetScale (
        /*[out,retval]*/ IDispatch * * ppDrawingView ) = 0;
      virtual HRESULT __stdcall put_DrawingViewForSheetScale (
        /*[in]*/ IDispatch * ppDrawingView ) = 0;
      virtual HRESULT __stdcall get_IsManualSheetScale (
        /*[out,retval]*/ VARIANT_BOOL * pvbIsManualSheetScale ) = 0;
      virtual HRESULT __stdcall raw_ClearDrawingViewForSheetScale ( ) = 0;
};

enum CleanProfileOptions
{
    igCleanProfileDelete = 1,
    igCleanProfileMove = 2
};

enum LineupTextAlignOptionConstants
{
    igAlignLeft = 0,
    igAlignRight = 1,
    igAlignCenter = 2,
    igAlignBottom = 3,
    igAlignTop = 4,
    igAlignMiddle = 5,
    igAlignBreakLineHorizontal = 6,
    igAlignBreakLineVertical = 7
};

struct __declspec(uuid("06ece4d0-0229-11d2-be0d-080036b4d502"))
_ISheetAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetDrawingObjects))
    TGFrameworkSupport::DrawingObjectsPtr DrawingObjects;
    __declspec(property(get=GetLayers))
    TGFramework::LayersPtr Layers;
    __declspec(property(get=GetDatumPoints))
    IDispatchPtr DatumPoints;
    __declspec(property(get=GetDimensions))
    IDispatchPtr Dimensions;
    __declspec(property(get=GetSectionBoundaries2d))
    SectionBoundaries2dPtr SectionBoundaries2d;
    __declspec(property(get=GetBlockOccurrences))
    BlockOccurrencesPtr BlockOccurrences;
    __declspec(property(get=GetBlockLabels))
    BlockLabelsPtr BlockLabels;
    __declspec(property(get=GetGostWeldSymbols))
    IDispatchPtr GostWeldSymbols;
    __declspec(property(get=GetNumber,put=PutNumber))
    long Number;
    __declspec(property(get=GetRelations2d))
    TGFrameworkSupport::Relations2dPtr Relations2d;
    __declspec(property(get=GetSheetGroup))
    IDispatchPtr SheetGroup;
    __declspec(property(get=GetSheetSetup))
    SheetSetupPtr SheetSetup;
    __declspec(property(get=GetKey))
    _bstr_t Key;
    __declspec(property(get=GetSection))
    SectionPtr Section;
    __declspec(property(get=GetBackground,put=PutBackground))
    SheetPtr Background;
    __declspec(property(get=GetBackgroundVisible,put=PutBackgroundVisible))
    VARIANT_BOOL BackgroundVisible;
    __declspec(property(get=GetSectionType))
    enum SheetSectionTypeConstants SectionType;
    __declspec(property(get=GetDrawingViews))
    DrawingViewsPtr DrawingViews;
    __declspec(property(get=GetTextProfiles))
    TGFrameworkSupport::TextProfilesPtr TextProfiles;
    __declspec(property(get=GetCuttingPlanes))
    IDispatchPtr CuttingPlanes;
    __declspec(property(get=GetAnnotAlignmentShapes))
    IDispatchPtr AnnotAlignmentShapes;
    __declspec(property(get=GetTechnicalRequirements))
    IDispatchPtr TechnicalRequirements;
    __declspec(property(get=GetLines2d))
    TGFrameworkSupport::Lines2dPtr Lines2d;
    __declspec(property(get=GetCircles2d))
    TGFrameworkSupport::Circles2dPtr Circles2d;
    __declspec(property(get=GetArcs2d))
    TGFrameworkSupport::Arcs2dPtr Arcs2d;
    __declspec(property(get=GetEllipses2d))
    TGFrameworkSupport::Ellipses2dPtr Ellipses2d;
    __declspec(property(get=GetBsplineCurves2d))
    TGFrameworkSupport::BSplineCurves2dPtr BsplineCurves2d;
    __declspec(property(get=GetPoints2d))
    TGFrameworkSupport::Points2dPtr Points2d;
    __declspec(property(get=GetConics2d))
    TGFrameworkSupport::Conics2dPtr Conics2d;
    __declspec(property(get=GetEllipticalArcs2d))
    TGFrameworkSupport::EllipticalArcs2dPtr EllipticalArcs2d;
    __declspec(property(get=GetCurves2d))
    TGFrameworkSupport::Curves2dPtr Curves2d;
    __declspec(property(get=GetLineStrings2d))
    TGFrameworkSupport::LineStrings2dPtr LineStrings2d;
    __declspec(property(get=GetComplexStrings2d))
    TGFrameworkSupport::ComplexStrings2dPtr ComplexStrings2d;
    __declspec(property(get=GetBoundaries2d))
    TGFrameworkSupport::Boundaries2dPtr Boundaries2d;
    __declspec(property(get=GetImages2d))
    TGFrameworkSupport::Images2dPtr Images2d;
    __declspec(property(get=GetSmartFrames2d))
    IDispatchPtr SmartFrames2d;
    __declspec(property(get=GetAreaPropertiesCollection))
    TGFrameworkSupport::AreaPropertiesCollectionPtr AreaPropertiesCollection;
    __declspec(property(get=GetTextBoxes))
    IDispatchPtr TextBoxes;
    __declspec(property(get=GetVFS))
    IDispatchPtr VFS[];
    __declspec(property(get=GetGroups))
    IDispatchPtr Groups;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetSymbols))
    IDispatchPtr Symbols;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];
    __declspec(property(get=GetDatumFrames))
    IDispatchPtr DatumFrames;
    __declspec(property(get=GetFeatureControlFrames))
    IDispatchPtr FeatureControlFrames;
    __declspec(property(get=GetSurfaceFinishSymbols))
    IDispatchPtr SurfaceFinishSymbols;
    __declspec(property(get=GetWeldSymbols))
    IDispatchPtr WeldSymbols;
    __declspec(property(get=GetCenterMarks))
    IDispatchPtr CenterMarks;
    __declspec(property(get=GetCenterLines))
    IDispatchPtr CenterLines;
    __declspec(property(get=GetDatumTargets))
    IDispatchPtr DatumTargets;
    __declspec(property(get=GetLeaders))
    IDispatchPtr Leaders;
    __declspec(property(get=GetBalloons))
    IDispatchPtr Balloons;
    __declspec(property(get=GetCornerAnnotations))
    IDispatchPtr CornerAnnotations;
    __declspec(property(get=GetBoltHoleCircles))
    IDispatchPtr BoltHoleCircles;
    __declspec(property(get=GetConnectors))
    IDispatchPtr Connectors;
    __declspec(property(get=GetDefaultTextScale,put=PutDefaultTextScale))
    double DefaultTextScale;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetDocument))
    IDispatchPtr Document;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetPinSymbols))
    IDispatchPtr PinSymbols;
    __declspec(property(get=GetType))
    long Type;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetDocument ( );
    TGFrameworkSupport::DrawingObjectsPtr GetDrawingObjects ( );
    long GetIndex ( );
    _bstr_t GetKey ( );
    void PutName (
        _bstr_t Name );
    _bstr_t GetName ( );
    IDispatchPtr GetParent ( );
    SectionPtr GetSection ( );
    enum SheetSectionTypeConstants GetSectionType ( );
    SheetSetupPtr GetSheetSetup ( );
    long GetType ( );
    void PutVisible (
        VARIANT_BOOL IsVisible );
    VARIANT_BOOL GetVisible ( );
    SheetPtr GetBackground ( );
    void PutBackground (
        struct Sheet * BackgroundSheet );
    void PutBackgroundVisible (
        VARIANT_BOOL IsVisible );
    VARIANT_BOOL GetBackgroundVisible ( );
    HRESULT Activate ( );
    HRESULT Delete ( );
    TGFrameworkSupport::Lines2dPtr GetLines2d ( );
    TGFrameworkSupport::Circles2dPtr GetCircles2d ( );
    TGFrameworkSupport::Arcs2dPtr GetArcs2d ( );
    TGFrameworkSupport::Ellipses2dPtr GetEllipses2d ( );
    TGFrameworkSupport::BSplineCurves2dPtr GetBsplineCurves2d ( );
    TGFrameworkSupport::Points2dPtr GetPoints2d ( );
    TGFrameworkSupport::EllipticalArcs2dPtr GetEllipticalArcs2d ( );
    TGFrameworkSupport::Curves2dPtr GetCurves2d ( );
    TGFrameworkSupport::LineStrings2dPtr GetLineStrings2d ( );
    TGFrameworkSupport::ComplexStrings2dPtr GetComplexStrings2d ( );
    TGFrameworkSupport::Boundaries2dPtr GetBoundaries2d ( );
    TGFrameworkSupport::Images2dPtr GetImages2d ( );
    IDispatchPtr GetDimensions ( );
    IDispatchPtr GetLeaders ( );
    IDispatchPtr GetBalloons ( );
    IDispatchPtr GetTextBoxes ( );
    TGFrameworkSupport::TextProfilesPtr GetTextProfiles ( );
    TGFrameworkSupport::Relations2dPtr GetRelations2d ( );
    IDispatchPtr GetSymbols ( );
    IDispatchPtr GetSmartFrames2d ( );
    TGFramework::LayersPtr GetLayers ( );
    IDispatchPtr GetVFS (
        IDispatch * Path );
    HRESULT CreateVFS (
        IDispatch * Path,
        IDispatch * * VFS );
    HRESULT DeleteVFS (
        IDispatch * VFS );
    DrawingViewsPtr GetDrawingViews ( );
    IDispatchPtr GetCuttingPlanes ( );
    IDispatchPtr GetDatumFrames ( );
    IDispatchPtr GetFeatureControlFrames ( );
    IDispatchPtr GetSurfaceFinishSymbols ( );
    IDispatchPtr GetWeldSymbols ( );
    IDispatchPtr GetCenterMarks ( );
    IDispatchPtr GetCenterLines ( );
    IDispatchPtr GetDatumTargets ( );
    IDispatchPtr GetPinSymbols ( );
    IDispatchPtr GetDatumPoints ( );
    IDispatchPtr GetCornerAnnotations ( );
    IDispatchPtr GetGroups ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    HRESULT CopyEMFToClipboard ( );
    HRESULT GetAreaProperties (
        SAFEARRAY * * AreaPointXArray,
        SAFEARRAY * * AreaPointYArray,
        long NumPoints,
        const _variant_t & LineStyle,
        const _variant_t & TextStyle,
        const _variant_t & DisplayResults,
        const _variant_t & CopyToClipboard,
        VARIANT * Area,
        VARIANT * Center,
        VARIANT * GlobalMomentsOfInertia,
        VARIANT * PrincipalAngle,
        VARIANT * PrincipalXOrientation,
        VARIANT * PrincipalYOrientation,
        VARIANT * PrincipalMomentsOfInertia );
    HRESULT ConvertToCurve (
        long NumberOfElements,
        SAFEARRAY * * ElementArray,
        VARIANT * NumConvertedElements,
        VARIANT * ConvertedElements );
    IDispatchPtr GetBoltHoleCircles ( );
    IDispatchPtr GetConnectors ( );
    void PutDefaultTextScale (
        double Scale );
    double GetDefaultTextScale ( );
    BlockOccurrencesPtr GetBlockOccurrences ( );
    BlockLabelsPtr GetBlockLabels ( );
    TGFrameworkSupport::AreaPropertiesCollectionPtr GetAreaPropertiesCollection ( );
    IDispatchPtr GetGostWeldSymbols ( );
    SectionBoundaries2dPtr GetSectionBoundaries2d ( );
    void PutNumber (
        long pNumber );
    long GetNumber ( );
    TGFramework::SelectSetPtr SmartSelect (
        IDispatch * pSourceObject,
        VARIANT_BOOL vbColor,
        VARIANT_BOOL vbType,
        VARIANT_BOOL vbLayer,
        VARIANT_BOOL vbLineType,
        VARIANT_BOOL vbLineWidth );
    HRESULT CleanGeometry2d (
        long nElements,
        SAFEARRAY * * pElementArray,
        enum CleanProfileOptions options,
        VARIANT_BOOL bCleanPoints,
        VARIANT_BOOL bCleanBSplines,
        VARIANT_BOOL bCleanIdentical,
        VARIANT_BOOL bCleanSmall,
        const _variant_t & vLayer,
        const _variant_t & vSmallTolerance );
    IDispatchPtr GetSheetGroup ( );
    HRESULT ChainLocate (
        double x,
        double y );
    HRESULT Offset2d (
        double offsetSideX,
        double offsetSideY,
        double offsetDistance );
    HRESULT FenceLocate (
        double dLeft,
        double dTop,
        double dRight,
        double dBottom );
    IDispatchPtr GetAnnotAlignmentShapes ( );
    HRESULT ArrangeDimensionsInSelectSet (
        double iStackPitchMultiplier,
        VARIANT_BOOL bAssociative );
    HRESULT ScaleSelectSet (
        double dScale,
        double AboutPt_x,
        double AboutPt_y );
    HRESULT MoveSelectSet (
        double FromPt_x,
        double FromPt_y,
        double ToPt_x,
        double ToPt_y );
    HRESULT RotateSelectSet (
        double dAngle,
        double AboutPt_x,
        double AboutPt_y );
    HRESULT PrintArea (
        double LowerLeftX,
        double LowerLeftY,
        double UpperRightX,
        double UpperRightY,
        const _variant_t & Printer = vtMissing,
        const _variant_t & NumCopies = vtMissing,
        const _variant_t & Orientation = vtMissing,
        const _variant_t & PaperSize = vtMissing,
        const _variant_t & Scale = vtMissing,
        const _variant_t & PrintToFile = vtMissing,
        const _variant_t & OutputFileName = vtMissing,
        const _variant_t & ColorAsBlack = vtMissing,
        const _variant_t & Collate = vtMissing,
        const _variant_t & ScaleLineWidths = vtMissing,
        const _variant_t & ScaleLineTypes = vtMissing,
        const _variant_t & UsePrinterClipping = vtMissing );
    HRESULT PrintSheet (
        const _variant_t & Printer = vtMissing,
        const _variant_t & NumCopies = vtMissing,
        const _variant_t & Orientation = vtMissing,
        const _variant_t & PaperSize = vtMissing,
        const _variant_t & Scale = vtMissing,
        const _variant_t & PrintToFile = vtMissing,
        const _variant_t & OutputFileName = vtMissing,
        const _variant_t & ColorAsBlack = vtMissing,
        const _variant_t & Collate = vtMissing,
        const _variant_t & ScaleLineWidths = vtMissing,
        const _variant_t & ScaleLineTypes = vtMissing,
        const _variant_t & UsePrinterClipping = vtMissing );
    IDispatchPtr GetTechnicalRequirements ( );
    HRESULT ReplaceBackground (
        _bstr_t DraftFileName,
        _bstr_t BackgroundSheetName );
    HRESULT LineupText (
        IDispatch * Source,
        SAFEARRAY * * Target,
        enum LineupTextAlignOptionConstants AlignOption,
        long OffsetGap );
    HRESULT LineupTextEx (
        IDispatch * Source,
        SAFEARRAY * * Target,
        enum LineupTextAlignOptionConstants AlignOption,
        double OffsetGap );
    TGFrameworkSupport::Conics2dPtr GetConics2d ( );
    HRESULT ReplaceBackgroundEx (
        _bstr_t DraftFileName,
        _bstr_t BackgroundSheetName,
        VARIANT_BOOL bReplaceBlocksOfSameName );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ IDispatch * * Book ) = 0;
      virtual HRESULT __stdcall get_DrawingObjects (
        /*[out,retval]*/ struct TGFrameworkSupport::DrawingObjects * * DrawingObjects ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_Key (
        /*[out,retval]*/ BSTR * Key ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Section (
        /*[out,retval]*/ struct Section * * Section ) = 0;
      virtual HRESULT __stdcall get_SectionType (
        /*[out,retval]*/ enum SheetSectionTypeConstants * Section ) = 0;
      virtual HRESULT __stdcall get_SheetSetup (
        /*[out,retval]*/ struct SheetSetup * * SheetSetup ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL IsVisible ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * IsVisible ) = 0;
      virtual HRESULT __stdcall get_Background (
        /*[out,retval]*/ struct Sheet * * BackgroundSheet ) = 0;
      virtual HRESULT __stdcall put_Background (
        /*[in]*/ struct Sheet * BackgroundSheet ) = 0;
      virtual HRESULT __stdcall put_BackgroundVisible (
        /*[in]*/ VARIANT_BOOL IsVisible ) = 0;
      virtual HRESULT __stdcall get_BackgroundVisible (
        /*[out,retval]*/ VARIANT_BOOL * IsVisible ) = 0;
      virtual HRESULT __stdcall raw_Activate ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Lines2d (
        /*[out,retval]*/ struct TGFrameworkSupport::Lines2d * * Lines2d ) = 0;
      virtual HRESULT __stdcall get_Circles2d (
        /*[out,retval]*/ struct TGFrameworkSupport::Circles2d * * Circles2d ) = 0;
      virtual HRESULT __stdcall get_Arcs2d (
        /*[out,retval]*/ struct TGFrameworkSupport::Arcs2d * * Arcs2d ) = 0;
      virtual HRESULT __stdcall get_Ellipses2d (
        /*[out,retval]*/ struct TGFrameworkSupport::Ellipses2d * * Ellipses2d ) = 0;
      virtual HRESULT __stdcall get_BsplineCurves2d (
        /*[out,retval]*/ struct TGFrameworkSupport::BSplineCurves2d * * Bsplines2d ) = 0;
      virtual HRESULT __stdcall get_Points2d (
        /*[out,retval]*/ struct TGFrameworkSupport::Points2d * * Points2d ) = 0;
      virtual HRESULT __stdcall get_EllipticalArcs2d (
        /*[out,retval]*/ struct TGFrameworkSupport::EllipticalArcs2d * * EllipArcs2d ) = 0;
      virtual HRESULT __stdcall get_Curves2d (
        /*[out,retval]*/ struct TGFrameworkSupport::Curves2d * * Curves2d ) = 0;
      virtual HRESULT __stdcall get_LineStrings2d (
        /*[out,retval]*/ struct TGFrameworkSupport::LineStrings2d * * LineStrings2d ) = 0;
      virtual HRESULT __stdcall get_ComplexStrings2d (
        /*[out,retval]*/ struct TGFrameworkSupport::ComplexStrings2d * * ComplexStrings2d ) = 0;
      virtual HRESULT __stdcall get_Boundaries2d (
        /*[out,retval]*/ struct TGFrameworkSupport::Boundaries2d * * Boundaries2d ) = 0;
      virtual HRESULT __stdcall get_Images2d (
        /*[out,retval]*/ struct TGFrameworkSupport::Images2d * * Images2d ) = 0;
      virtual HRESULT __stdcall get_Dimensions (
        /*[out,retval]*/ IDispatch * * Dimensions ) = 0;
      virtual HRESULT __stdcall get_Leaders (
        /*[out,retval]*/ IDispatch * * Leaders ) = 0;
      virtual HRESULT __stdcall get_Balloons (
        /*[out,retval]*/ IDispatch * * Balloons ) = 0;
      virtual HRESULT __stdcall get_TextBoxes (
        /*[out,retval]*/ IDispatch * * pTextBoxes ) = 0;
      virtual HRESULT __stdcall get_TextProfiles (
        /*[out,retval]*/ struct TGFrameworkSupport::TextProfiles * * pTextProfiles ) = 0;
      virtual HRESULT __stdcall get_Relations2d (
        /*[out,retval]*/ struct TGFrameworkSupport::Relations2d * * pRelations ) = 0;
      virtual HRESULT __stdcall get_Symbols (
        /*[out,retval]*/ IDispatch * * ppSymbols ) = 0;
      virtual HRESULT __stdcall get_SmartFrames2d (
        /*[out,retval]*/ IDispatch * * pSmartFrames2d ) = 0;
      virtual HRESULT __stdcall get_Layers (
        /*[out,retval]*/ struct TGFramework::Layers * * pLayers ) = 0;
      virtual HRESULT __stdcall get_VFS (
        /*[in]*/ IDispatch * Path,
        /*[out,retval]*/ IDispatch * * VFS ) = 0;
      virtual HRESULT __stdcall raw_CreateVFS (
        /*[in]*/ IDispatch * Path,
        /*[out]*/ IDispatch * * VFS ) = 0;
      virtual HRESULT __stdcall raw_DeleteVFS (
        /*[in]*/ IDispatch * VFS ) = 0;
      virtual HRESULT __stdcall get_DrawingViews (
        /*[out,retval]*/ struct DrawingViews * * ppDrawingView ) = 0;
      virtual HRESULT __stdcall get_CuttingPlanes (
        /*[out,retval]*/ IDispatch * * pCuttingPlane ) = 0;
      virtual HRESULT __stdcall get_DatumFrames (
        /*[out,retval]*/ IDispatch * * DatumFrames ) = 0;
      virtual HRESULT __stdcall get_FeatureControlFrames (
        /*[out,retval]*/ IDispatch * * FeatureControlFrames ) = 0;
      virtual HRESULT __stdcall get_SurfaceFinishSymbols (
        /*[out,retval]*/ IDispatch * * SurfaceFinishSymbols ) = 0;
      virtual HRESULT __stdcall get_WeldSymbols (
        /*[out,retval]*/ IDispatch * * WeldSymbols ) = 0;
      virtual HRESULT __stdcall get_CenterMarks (
        /*[out,retval]*/ IDispatch * * CenterMarks ) = 0;
      virtual HRESULT __stdcall get_CenterLines (
        /*[out,retval]*/ IDispatch * * CenterLines ) = 0;
      virtual HRESULT __stdcall get_DatumTargets (
        /*[out,retval]*/ IDispatch * * DatumTargets ) = 0;
      virtual HRESULT __stdcall get_PinSymbols (
        /*[out,retval]*/ IDispatch * * PinSymbols ) = 0;
      virtual HRESULT __stdcall get_DatumPoints (
        /*[out,retval]*/ IDispatch * * DatumPoints ) = 0;
      virtual HRESULT __stdcall get_CornerAnnotations (
        /*[out,retval]*/ IDispatch * * CornerAnnotations ) = 0;
      virtual HRESULT __stdcall get_Groups (
        /*[out,retval]*/ IDispatch * * Groups ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall raw_CopyEMFToClipboard ( ) = 0;
      virtual HRESULT __stdcall raw_GetAreaProperties (
        /*[in]*/ SAFEARRAY * * AreaPointXArray,
        /*[in]*/ SAFEARRAY * * AreaPointYArray,
        /*[in]*/ long NumPoints,
        /*[in]*/ VARIANT LineStyle,
        /*[in]*/ VARIANT TextStyle,
        /*[in]*/ VARIANT DisplayResults,
        /*[in]*/ VARIANT CopyToClipboard,
        /*[out]*/ VARIANT * Area,
        /*[out]*/ VARIANT * Center,
        /*[out]*/ VARIANT * GlobalMomentsOfInertia,
        /*[out]*/ VARIANT * PrincipalAngle,
        /*[out]*/ VARIANT * PrincipalXOrientation,
        /*[out]*/ VARIANT * PrincipalYOrientation,
        /*[out]*/ VARIANT * PrincipalMomentsOfInertia ) = 0;
      virtual HRESULT __stdcall raw_ConvertToCurve (
        /*[in]*/ long NumberOfElements,
        /*[in]*/ SAFEARRAY * * ElementArray,
        /*[out]*/ VARIANT * NumConvertedElements,
        /*[in,out]*/ VARIANT * ConvertedElements ) = 0;
      virtual HRESULT __stdcall get_BoltHoleCircles (
        /*[out,retval]*/ IDispatch * * BoltHoleCircles ) = 0;
      virtual HRESULT __stdcall get_Connectors (
        /*[out,retval]*/ IDispatch * * Connectors ) = 0;
      virtual HRESULT __stdcall put_DefaultTextScale (
        /*[in]*/ double Scale ) = 0;
      virtual HRESULT __stdcall get_DefaultTextScale (
        /*[out,retval]*/ double * Scale ) = 0;
      virtual HRESULT __stdcall get_BlockOccurrences (
        /*[out,retval]*/ struct BlockOccurrences * * BlockOccurrences ) = 0;
      virtual HRESULT __stdcall get_BlockLabels (
        /*[out,retval]*/ struct BlockLabels * * BlockLabels ) = 0;
      virtual HRESULT __stdcall get_AreaPropertiesCollection (
        /*[out,retval]*/ struct TGFrameworkSupport::AreaPropertiesCollection * * AreaPropertiesCollection ) = 0;
      virtual HRESULT __stdcall get_GostWeldSymbols (
        /*[out,retval]*/ IDispatch * * GostWeldSymbols ) = 0;
      virtual HRESULT __stdcall get_SectionBoundaries2d (
        /*[out,retval]*/ struct SectionBoundaries2d * * SectionBoundaries2d ) = 0;
      virtual HRESULT __stdcall put_Number (
        /*[in]*/ long pNumber ) = 0;
      virtual HRESULT __stdcall get_Number (
        /*[out,retval]*/ long * pNumber ) = 0;
      virtual HRESULT __stdcall raw_SmartSelect (
        /*[in]*/ IDispatch * pSourceObject,
        /*[in]*/ VARIANT_BOOL vbColor,
        /*[in]*/ VARIANT_BOOL vbType,
        /*[in]*/ VARIANT_BOOL vbLayer,
        /*[in]*/ VARIANT_BOOL vbLineType,
        /*[in]*/ VARIANT_BOOL vbLineWidth,
        /*[out,retval]*/ struct TGFramework::SelectSet * * pSelectSet ) = 0;
      virtual HRESULT __stdcall raw_CleanGeometry2d (
        /*[in]*/ long nElements,
        /*[in]*/ SAFEARRAY * * pElementArray,
        /*[in]*/ enum CleanProfileOptions options,
        /*[in]*/ VARIANT_BOOL bCleanPoints,
        /*[in]*/ VARIANT_BOOL bCleanBSplines,
        /*[in]*/ VARIANT_BOOL bCleanIdentical,
        /*[in]*/ VARIANT_BOOL bCleanSmall,
        /*[in]*/ VARIANT vLayer,
        /*[in]*/ VARIANT vSmallTolerance ) = 0;
      virtual HRESULT __stdcall get_SheetGroup (
        /*[out,retval]*/ IDispatch * * ppSheetGroup ) = 0;
      virtual HRESULT __stdcall raw_ChainLocate (
        /*[in]*/ double x,
        /*[in]*/ double y ) = 0;
      virtual HRESULT __stdcall raw_Offset2d (
        /*[in]*/ double offsetSideX,
        /*[in]*/ double offsetSideY,
        /*[in]*/ double offsetDistance ) = 0;
      virtual HRESULT __stdcall raw_FenceLocate (
        /*[in]*/ double dLeft,
        /*[in]*/ double dTop,
        /*[in]*/ double dRight,
        /*[in]*/ double dBottom ) = 0;
      virtual HRESULT __stdcall get_AnnotAlignmentShapes (
        /*[out,retval]*/ IDispatch * * AnnotAlignmentShapes ) = 0;
      virtual HRESULT __stdcall raw_ArrangeDimensionsInSelectSet (
        /*[in]*/ double iStackPitchMultiplier,
        /*[in]*/ VARIANT_BOOL bAssociative ) = 0;
      virtual HRESULT __stdcall raw_ScaleSelectSet (
        /*[in]*/ double dScale,
        /*[in]*/ double AboutPt_x,
        /*[in]*/ double AboutPt_y ) = 0;
      virtual HRESULT __stdcall raw_MoveSelectSet (
        /*[in]*/ double FromPt_x,
        /*[in]*/ double FromPt_y,
        /*[in]*/ double ToPt_x,
        /*[in]*/ double ToPt_y ) = 0;
      virtual HRESULT __stdcall raw_RotateSelectSet (
        /*[in]*/ double dAngle,
        /*[in]*/ double AboutPt_x,
        /*[in]*/ double AboutPt_y ) = 0;
      virtual HRESULT __stdcall raw_PrintArea (
        /*[in]*/ double LowerLeftX,
        /*[in]*/ double LowerLeftY,
        /*[in]*/ double UpperRightX,
        /*[in]*/ double UpperRightY,
        /*[in]*/ VARIANT Printer = vtMissing,
        /*[in]*/ VARIANT NumCopies = vtMissing,
        /*[in]*/ VARIANT Orientation = vtMissing,
        /*[in]*/ VARIANT PaperSize = vtMissing,
        /*[in]*/ VARIANT Scale = vtMissing,
        /*[in]*/ VARIANT PrintToFile = vtMissing,
        /*[in]*/ VARIANT OutputFileName = vtMissing,
        /*[in]*/ VARIANT ColorAsBlack = vtMissing,
        /*[in]*/ VARIANT Collate = vtMissing,
        /*[in]*/ VARIANT ScaleLineWidths = vtMissing,
        /*[in]*/ VARIANT ScaleLineTypes = vtMissing,
        /*[in]*/ VARIANT UsePrinterClipping = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_PrintSheet (
        /*[in]*/ VARIANT Printer = vtMissing,
        /*[in]*/ VARIANT NumCopies = vtMissing,
        /*[in]*/ VARIANT Orientation = vtMissing,
        /*[in]*/ VARIANT PaperSize = vtMissing,
        /*[in]*/ VARIANT Scale = vtMissing,
        /*[in]*/ VARIANT PrintToFile = vtMissing,
        /*[in]*/ VARIANT OutputFileName = vtMissing,
        /*[in]*/ VARIANT ColorAsBlack = vtMissing,
        /*[in]*/ VARIANT Collate = vtMissing,
        /*[in]*/ VARIANT ScaleLineWidths = vtMissing,
        /*[in]*/ VARIANT ScaleLineTypes = vtMissing,
        /*[in]*/ VARIANT UsePrinterClipping = vtMissing ) = 0;
      virtual HRESULT __stdcall get_TechnicalRequirements (
        /*[out,retval]*/ IDispatch * * pTechnicalRequirements ) = 0;
      virtual HRESULT __stdcall raw_ReplaceBackground (
        /*[in]*/ BSTR DraftFileName,
        /*[in]*/ BSTR BackgroundSheetName ) = 0;
      virtual HRESULT __stdcall raw_LineupText (
        /*[in]*/ IDispatch * Source,
        /*[in]*/ SAFEARRAY * * Target,
        /*[in]*/ enum LineupTextAlignOptionConstants AlignOption,
        /*[in]*/ long OffsetGap ) = 0;
      virtual HRESULT __stdcall raw_LineupTextEx (
        /*[in]*/ IDispatch * Source,
        /*[in]*/ SAFEARRAY * * Target,
        /*[in]*/ enum LineupTextAlignOptionConstants AlignOption,
        /*[in]*/ double OffsetGap ) = 0;
      virtual HRESULT __stdcall get_Conics2d (
        /*[out,retval]*/ struct TGFrameworkSupport::Conics2d * * Conics2d ) = 0;
      virtual HRESULT __stdcall raw_ReplaceBackgroundEx (
        /*[in]*/ BSTR DraftFileName,
        /*[in]*/ BSTR BackgroundSheetName,
        /*[in]*/ VARIANT_BOOL bReplaceBlocksOfSameName ) = 0;
};

struct __declspec(uuid("9a318380-3398-11ce-956a-08003601dfe5"))
Sheets : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetGet2DModelSheet))
    SheetPtr Get2DModelSheet;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    SheetPtr Item (
        const _variant_t & Index );
    SheetPtr Add (
        const _variant_t & Name = vtMissing,
        const _variant_t & SectionName = vtMissing,
        const _variant_t & InsertBefore = vtMissing,
        const _variant_t & InsertAfter = vtMissing );
    SheetPtr AddSheet (
        const _variant_t & Name,
        enum SheetSectionTypeConstants SectionType,
        const _variant_t & InsertBefore = vtMissing,
        const _variant_t & InsertAfter = vtMissing );
    HRESULT Rename (
        _bstr_t OldName,
        _bstr_t NewName );
    SheetPtr GetGet2DModelSheet ( );
};

struct __declspec(uuid("99a96250-3397-11ce-956a-08003601dfe5"))
_ISheetsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetGet2DModelSheet))
    SheetPtr Get2DModelSheet;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    SheetPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    SheetPtr Add (
        const _variant_t & Name = vtMissing,
        const _variant_t & SectionName = vtMissing,
        const _variant_t & InsertBefore = vtMissing,
        const _variant_t & InsertAfter = vtMissing );
    SheetPtr AddSheet (
        const _variant_t & Name,
        enum SheetSectionTypeConstants SectionType,
        const _variant_t & InsertBefore = vtMissing,
        const _variant_t & InsertAfter = vtMissing );
    HRESULT Rename (
        _bstr_t OldName,
        _bstr_t NewName );
    SheetPtr GetGet2DModelSheet ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Sheet * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Unknown ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ VARIANT Name,
        /*[in]*/ VARIANT SectionName,
        /*[in]*/ VARIANT InsertBefore,
        /*[in]*/ VARIANT InsertAfter,
        /*[out,retval]*/ struct Sheet * * NewSheet ) = 0;
      virtual HRESULT __stdcall raw_AddSheet (
        /*[in]*/ VARIANT Name,
        /*[in]*/ enum SheetSectionTypeConstants SectionType,
        /*[in]*/ VARIANT InsertBefore,
        /*[in]*/ VARIANT InsertAfter,
        /*[out,retval]*/ struct Sheet * * NewSheet ) = 0;
      virtual HRESULT __stdcall raw_Rename (
        /*[in]*/ BSTR OldName,
        /*[in]*/ BSTR NewName ) = 0;
      virtual HRESULT __stdcall get_Get2DModelSheet (
        /*[out,retval]*/ struct Sheet * * p2DModelSheet ) = 0;
};

struct __declspec(uuid("823e92a0-5eb1-11ce-956a-08003601dfe5"))
Sections : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetWorkingSection))
    SectionPtr WorkingSection;
    __declspec(property(get=GetBackgroundSection))
    SectionPtr BackgroundSection;
    __declspec(property(get=GetGet2DModelSheet))
    SheetPtr Get2DModelSheet;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    SectionPtr Add (
        const _variant_t & Name = vtMissing );
    SectionPtr Item (
        const _variant_t & Index );
    SectionPtr GetWorkingSection ( );
    SectionPtr GetBackgroundSection ( );
    SheetPtr GetGet2DModelSheet ( );
};

struct __declspec(uuid("5ae33810-5eb1-11ce-956a-08003601dfe5"))
_ISectionsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetWorkingSection))
    SectionPtr WorkingSection;
    __declspec(property(get=GetBackgroundSection))
    SectionPtr BackgroundSection;
    __declspec(property(get=GetGet2DModelSheet))
    SheetPtr Get2DModelSheet;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    SectionPtr Add (
        const _variant_t & Name = vtMissing );
    SectionPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    SectionPtr GetWorkingSection ( );
    SectionPtr GetBackgroundSection ( );
    SheetPtr GetGet2DModelSheet ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * pParent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ VARIANT Name,
        /*[out,retval]*/ struct Section * * NewSection ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Section * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Unknown ) = 0;
      virtual HRESULT __stdcall get_WorkingSection (
        /*[out,retval]*/ struct Section * * Section ) = 0;
      virtual HRESULT __stdcall get_BackgroundSection (
        /*[out,retval]*/ struct Section * * Section ) = 0;
      virtual HRESULT __stdcall get_Get2DModelSheet (
        /*[out,retval]*/ struct Sheet * * p2DModelSheet ) = 0;
};

struct __declspec(uuid("a32fc155-10c7-11d0-a1c3-08003627cf02"))
ModelLinks : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
    ModelLinkPtr Item (
        const _variant_t & Index );
    ModelLinkPtr Add (
        _bstr_t FileName );
    HRESULT ReduceFile ( );
};

struct __declspec(uuid("a32fc153-10c7-11d0-a1c3-08003627cf02"))
_IModelLinksAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
    ModelLinkPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    ModelLinkPtr Add (
        _bstr_t FileName );
    HRESULT ReduceFile ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * pApp ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * pParent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct ModelLink * * pItem ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR FileName,
        /*[out,retval]*/ struct ModelLink * * ppObj ) = 0;
      virtual HRESULT __stdcall raw_ReduceFile ( ) = 0;
};

struct __declspec(uuid("86f045db-ad81-11d3-a431-0004ac9695cb"))
PartsLists : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    PartsListPtr Item (
        const _variant_t & Index );
    PartsListPtr Add (
        struct DrawingView * DrawingView,
        _bstr_t SavedSettings,
        long AutoBalloon,
        long CreatePartsList );
    PartsListPtr AddEx (
        struct DrawingView * DrawingView,
        long LinkToActive,
        _bstr_t SavedSettings,
        long AutoBalloon,
        long CreatePartsList );
    PartsListPtr AddFamilyOfAssemblyPartsList (
        struct DrawingView * DrawingView,
        long LinkToActive,
        _bstr_t SavedSettings,
        long AutoBalloon,
        long CreatePartsList );
    PartsListPtr AddFromExistingPartsList (
        struct PartsList * pExistingPartsList,
        _bstr_t AssemblyFileFullPath );
};

struct __declspec(uuid("86f045dd-ad81-11d3-a431-0004ac9695cb"))
PartsList : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetIsUpToDate))
    VARIANT_BOOL IsUpToDate;
    __declspec(property(get=GetAnchorPoint,put=PutAnchorPoint))
    enum TableAnchorPoint AnchorPoint;
    __declspec(property(get=GetCell))
    TableCellPtr Cell[][];
    __declspec(property(get=GetColumnHeaderPosition,put=PutColumnHeaderPosition))
    enum TitlePosition ColumnHeaderPosition;
    __declspec(property(get=GetColumns))
    TableColumnsPtr Columns;
    __declspec(property(get=GetDataFixedRowHeight,put=PutDataFixedRowHeight))
    double DataFixedRowHeight;
    __declspec(property(get=GetHeaderFixedRowHeight,put=PutHeaderFixedRowHeight))
    double HeaderFixedRowHeight;
    __declspec(property(get=GetMargin,put=PutMargin))
    double Margin;
    __declspec(property(get=GetMaximumHeight,put=PutMaximumHeight))
    double MaximumHeight;
    __declspec(property(get=GetMaximumRows,put=PutMaximumRows))
    long MaximumRows;
    __declspec(property(get=GetPageGap,put=PutPageGap))
    double PageGap;
    __declspec(property(get=GetPages))
    TablePagesPtr Pages;
    __declspec(property(get=GetReverseDisplayOrder,put=PutReverseDisplayOrder))
    VARIANT_BOOL ReverseDisplayOrder;
    __declspec(property(get=GetRows))
    TableRowsPtr Rows;
    __declspec(property(get=GetShowColumnHeader,put=PutShowColumnHeader))
    VARIANT_BOOL ShowColumnHeader;
    __declspec(property(get=GetTableStyle,put=PutTableStyle))
    _bstr_t TableStyle;
    __declspec(property(get=GetTitles))
    TableTitlesPtr Titles;
    __declspec(property(get=GetListType,put=PutListType))
    enum PartsListType ListType;
    __declspec(property(get=GetUseAssemblyItemNumbers,put=PutUseAssemblyItemNumbers))
    VARIANT_BOOL UseAssemblyItemNumbers;
    __declspec(property(get=GetShowTopAssembly,put=PutShowTopAssembly))
    VARIANT_BOOL ShowTopAssembly;
    __declspec(property(get=GetUseLevelBasedItemNumbers,put=PutUseLevelBasedItemNumbers))
    VARIANT_BOOL UseLevelBasedItemNumbers;
    __declspec(property(get=GetNumberOfHeaderRows,put=PutNumberOfHeaderRows))
    long NumberOfHeaderRows;
    __declspec(property(get=GetMaximumRowsFirstPage,put=PutMaximumRowsFirstPage))
    long MaximumRowsFirstPage;
    __declspec(property(get=GetMaximumRowsAdditionalPages,put=PutMaximumRowsAdditionalPages))
    long MaximumRowsAdditionalPages;
    __declspec(property(get=GetMaximumHeightFirstPage,put=PutMaximumHeightFirstPage))
    double MaximumHeightFirstPage;
    __declspec(property(get=GetMaximumHeightAdditionalPages,put=PutMaximumHeightAdditionalPages))
    double MaximumHeightAdditionalPages;
    __declspec(property(get=GetCreateNewSheetsForTable,put=PutCreateNewSheetsForTable))
    VARIANT_BOOL CreateNewSheetsForTable;
    __declspec(property(get=GetFirstSheetBackgroundName,put=PutFirstSheetBackgroundName))
    _bstr_t FirstSheetBackgroundName;
    __declspec(property(get=GetAdditionalSheetsBackgroundName,put=PutAdditionalSheetsBackgroundName))
    _bstr_t AdditionalSheetsBackgroundName;
    __declspec(property(get=GetShowSheetBackground,put=PutShowSheetBackground))
    VARIANT_BOOL ShowSheetBackground;
    __declspec(property(get=GetMaintainSheetsWithTableSize,put=PutMaintainSheetsWithTableSize))
    VARIANT_BOOL MaintainSheetsWithTableSize;
    __declspec(property(get=GetEnableGroups,put=PutEnableGroups))
    VARIANT_BOOL EnableGroups;
    __declspec(property(get=GetGroups))
    TableGroupsPtr Groups;
    __declspec(property(get=GetWrapDataCellsToNewRow,put=PutWrapDataCellsToNewRow))
    VARIANT_BOOL WrapDataCellsToNewRow;
    __declspec(property(get=GetFillEndOfTableWithBlankRows,put=PutFillEndOfTableWithBlankRows))
    VARIANT_BOOL FillEndOfTableWithBlankRows;
    __declspec(property(get=GetGroupByColumn,put=PutGroupByColumn))
    long GroupByColumn;
    __declspec(property(get=GetConfiguration,put=PutConfiguration))
    _bstr_t Configuration;
    __declspec(property(get=GetConvertDeletedPartsIntoUserDefinedRows,put=PutConvertDeletedPartsIntoUserDefinedRows))
    VARIANT_BOOL ConvertDeletedPartsIntoUserDefinedRows;
    __declspec(property(get=GetExpandWeldmentSubAssemblies,put=PutExpandWeldmentSubAssemblies))
    VARIANT_BOOL ExpandWeldmentSubAssemblies;
    __declspec(property(get=GetFrameRoughCutEndClearance,put=PutFrameRoughCutEndClearance))
    double FrameRoughCutEndClearance;
    __declspec(property(get=GetItemNumberIncrement,put=PutItemNumberIncrement))
    long ItemNumberIncrement;
    __declspec(property(get=GetItemNumberStart,put=PutItemNumberStart))
    long ItemNumberStart;
    __declspec(property(get=GetActive,put=PutActive))
    VARIANT_BOOL Active;
    __declspec(property(get=GetMarkAmbiguousValues,put=PutMarkAmbiguousValues))
    VARIANT_BOOL MarkAmbiguousValues;
    __declspec(property(get=GetMarkAmbiguousValuesString,put=PutMarkAmbiguousValuesString))
    _bstr_t MarkAmbiguousValuesString;
    __declspec(property(get=GetMarkUnballoonedItems,put=PutMarkUnballoonedItems))
    VARIANT_BOOL MarkUnballoonedItems;
    __declspec(property(get=GetMarkUnballoonedItemsString,put=PutMarkUnballoonedItemsString))
    _bstr_t MarkUnballoonedItemsString;
    __declspec(property(get=GetPipeRoughCutEndClearance,put=PutPipeRoughCutEndClearance))
    double PipeRoughCutEndClearance;
    __declspec(property(get=GetRenumberAccordingToSortOrder,put=PutRenumberAccordingToSortOrder))
    VARIANT_BOOL RenumberAccordingToSortOrder;
    __declspec(property(get=GetTotalLengthPartsList,put=PutTotalLengthPartsList))
    VARIANT_BOOL TotalLengthPartsList;
    __declspec(property(get=GetTotalLengthPartsList_ItemNumberSeparator,put=PutTotalLengthPartsList_ItemNumberSeparator))
    _bstr_t TotalLengthPartsList_ItemNumberSeparator;
    __declspec(property(get=GetUseUniquenessCriteria_CutLength,put=PutUseUniquenessCriteria_CutLength))
    VARIANT_BOOL UseUniquenessCriteria_CutLength;
    __declspec(property(get=GetUseUniquenessCriteria_Mass,put=PutUseUniquenessCriteria_Mass))
    VARIANT_BOOL UseUniquenessCriteria_Mass;
    __declspec(property(get=GetUseUniquenessCriteria_Miter,put=PutUseUniquenessCriteria_Miter))
    VARIANT_BOOL UseUniquenessCriteria_Miter;
    __declspec(property(get=GetTitleFixedRowHeight,put=PutTitleFixedRowHeight))
    double TitleFixedRowHeight;
    __declspec(property(get=GetMarginHorizontal,put=PutMarginHorizontal))
    double MarginHorizontal;
    __declspec(property(get=GetMarginVertical,put=PutMarginVertical))
    double MarginVertical;
    __declspec(property(get=GetUseUniquenessCriteria_TubeFlatLength,put=PutUseUniquenessCriteria_TubeFlatLength))
    VARIANT_BOOL UseUniquenessCriteria_TubeFlatLength;
    __declspec(property(get=GetUseUniquenessCriteria_TubeMass,put=PutUseUniquenessCriteria_TubeMass))
    VARIANT_BOOL UseUniquenessCriteria_TubeMass;
    __declspec(property(get=GetMarkAmbiguousValuesForTube,put=PutMarkAmbiguousValuesForTube))
    VARIANT_BOOL MarkAmbiguousValuesForTube;
    __declspec(property(get=GetMarkAmbiguousValuesStringForTube,put=PutMarkAmbiguousValuesStringForTube))
    _bstr_t MarkAmbiguousValuesStringForTube;
    __declspec(property(get=GetNonPlanerValues,put=PutNonPlanerValues))
    VARIANT_BOOL NonPlanerValues;
    __declspec(property(get=GetNonPlanerValuesString,put=PutNonPlanerValuesString))
    _bstr_t NonPlanerValuesString;
    __declspec(property(get=GetEndAngleRepresentation,put=PutEndAngleRepresentation))
    enum PartListEndAngleRepresentationType EndAngleRepresentation;
    __declspec(property(get=GetUseUniquenessCriteria_AngleOrientation,put=PutUseUniquenessCriteria_AngleOrientation))
    VARIANT_BOOL UseUniquenessCriteria_AngleOrientation;
    __declspec(property(get=GetZeroQuantity,put=PutZeroQuantity))
    VARIANT_BOOL ZeroQuantity;
    __declspec(property(get=GetZeroQuantityString,put=PutZeroQuantityString))
    _bstr_t ZeroQuantityString;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetAssemblyFileName))
    _bstr_t AssemblyFileName;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetModelLink))
    ModelLinkPtr ModelLink;
    __declspec(property(put=PutSavedSettings))
    _bstr_t SavedSettings;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    _bstr_t GetAssemblyFileName ( );
    IDispatchPtr GetParent ( );
    HRESULT Update ( );
    HRESULT CopyToClipboard ( );
    ModelLinkPtr GetModelLink ( );
    HRESULT Delete ( );
    void PutSavedSettings (
        _bstr_t _arg1 );
    HRESULT SetOrigin (
        double x,
        double y );
    HRESULT GetOrigin (
        double * x,
        double * y );
    HRESULT GetListOfSavedSettings (
        long * NumSavedSettings,
        SAFEARRAY * * ListOfSavedSettings );
    VARIANT_BOOL GetIsUpToDate ( );
    TableCellPtr GetCell (
        const _variant_t & RowIndex,
        const _variant_t & ColumnIndex );
    enum TitlePosition GetColumnHeaderPosition ( );
    void PutColumnHeaderPosition (
        enum TitlePosition _arg1 );
    TableColumnsPtr GetColumns ( );
    double GetMargin ( );
    void PutMargin (
        double _arg1 );
    long GetMaximumRows ( );
    void PutMaximumRows (
        long _arg1 );
    double GetPageGap ( );
    void PutPageGap (
        double _arg1 );
    VARIANT_BOOL GetReverseDisplayOrder ( );
    void PutReverseDisplayOrder (
        VARIANT_BOOL _arg1 );
    TableRowsPtr GetRows ( );
    VARIANT_BOOL GetShowColumnHeader ( );
    void PutShowColumnHeader (
        VARIANT_BOOL _arg1 );
    _bstr_t GetTableStyle ( );
    void PutTableStyle (
        _bstr_t _arg1 );
    TableTitlesPtr GetTitles ( );
    enum TableAnchorPoint GetAnchorPoint ( );
    void PutAnchorPoint (
        enum TableAnchorPoint _arg1 );
    TablePagesPtr GetPages ( );
    double GetHeaderFixedRowHeight ( );
    void PutHeaderFixedRowHeight (
        double _arg1 );
    double GetDataFixedRowHeight ( );
    void PutDataFixedRowHeight (
        double _arg1 );
    double GetMaximumHeight ( );
    void PutMaximumHeight (
        double _arg1 );
    HRESULT ConvertToTable ( );
    enum PartsListType GetListType ( );
    void PutListType (
        enum PartsListType _arg1 );
    VARIANT_BOOL GetUseAssemblyItemNumbers ( );
    void PutUseAssemblyItemNumbers (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetShowTopAssembly ( );
    void PutShowTopAssembly (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetUseLevelBasedItemNumbers ( );
    void PutUseLevelBasedItemNumbers (
        VARIANT_BOOL _arg1 );
    long GetNumberOfHeaderRows ( );
    void PutNumberOfHeaderRows (
        long _arg1 );
    long GetMaximumRowsFirstPage ( );
    void PutMaximumRowsFirstPage (
        long _arg1 );
    long GetMaximumRowsAdditionalPages ( );
    void PutMaximumRowsAdditionalPages (
        long _arg1 );
    double GetMaximumHeightFirstPage ( );
    void PutMaximumHeightFirstPage (
        double _arg1 );
    double GetMaximumHeightAdditionalPages ( );
    void PutMaximumHeightAdditionalPages (
        double _arg1 );
    VARIANT_BOOL GetCreateNewSheetsForTable ( );
    void PutCreateNewSheetsForTable (
        VARIANT_BOOL _arg1 );
    _bstr_t GetFirstSheetBackgroundName ( );
    void PutFirstSheetBackgroundName (
        _bstr_t _arg1 );
    _bstr_t GetAdditionalSheetsBackgroundName ( );
    void PutAdditionalSheetsBackgroundName (
        _bstr_t _arg1 );
    VARIANT_BOOL GetShowSheetBackground ( );
    void PutShowSheetBackground (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetMaintainSheetsWithTableSize ( );
    void PutMaintainSheetsWithTableSize (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetEnableGroups ( );
    void PutEnableGroups (
        VARIANT_BOOL _arg1 );
    TableGroupsPtr GetGroups ( );
    VARIANT_BOOL GetWrapDataCellsToNewRow ( );
    void PutWrapDataCellsToNewRow (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetFillEndOfTableWithBlankRows ( );
    void PutFillEndOfTableWithBlankRows (
        VARIANT_BOOL _arg1 );
    long GetGroupByColumn ( );
    void PutGroupByColumn (
        long _arg1 );
    VARIANT_BOOL GetActive ( );
    void PutActive (
        VARIANT_BOOL _arg1 );
    long GetItemNumberStart ( );
    void PutItemNumberStart (
        long _arg1 );
    long GetItemNumberIncrement ( );
    void PutItemNumberIncrement (
        long _arg1 );
    VARIANT_BOOL GetMarkUnballoonedItems ( );
    void PutMarkUnballoonedItems (
        VARIANT_BOOL _arg1 );
    _bstr_t GetMarkUnballoonedItemsString ( );
    void PutMarkUnballoonedItemsString (
        _bstr_t _arg1 );
    VARIANT_BOOL GetRenumberAccordingToSortOrder ( );
    void PutRenumberAccordingToSortOrder (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetConvertDeletedPartsIntoUserDefinedRows ( );
    void PutConvertDeletedPartsIntoUserDefinedRows (
        VARIANT_BOOL _arg1 );
    _bstr_t GetConfiguration ( );
    void PutConfiguration (
        _bstr_t _arg1 );
    VARIANT_BOOL GetExpandWeldmentSubAssemblies ( );
    void PutExpandWeldmentSubAssemblies (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetUseUniquenessCriteria_CutLength ( );
    void PutUseUniquenessCriteria_CutLength (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetUseUniquenessCriteria_Mass ( );
    void PutUseUniquenessCriteria_Mass (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetUseUniquenessCriteria_Miter ( );
    void PutUseUniquenessCriteria_Miter (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetMarkAmbiguousValues ( );
    void PutMarkAmbiguousValues (
        VARIANT_BOOL _arg1 );
    _bstr_t GetMarkAmbiguousValuesString ( );
    void PutMarkAmbiguousValuesString (
        _bstr_t _arg1 );
    VARIANT_BOOL GetNonPlanerValues ( );
    void PutNonPlanerValues (
        VARIANT_BOOL _arg1 );
    _bstr_t GetNonPlanerValuesString ( );
    void PutNonPlanerValuesString (
        _bstr_t _arg1 );
    enum PartListEndAngleRepresentationType GetEndAngleRepresentation ( );
    void PutEndAngleRepresentation (
        enum PartListEndAngleRepresentationType _arg1 );
    VARIANT_BOOL GetUseUniquenessCriteria_AngleOrientation ( );
    void PutUseUniquenessCriteria_AngleOrientation (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetTotalLengthPartsList ( );
    void PutTotalLengthPartsList (
        VARIANT_BOOL _arg1 );
    _bstr_t GetTotalLengthPartsList_ItemNumberSeparator ( );
    void PutTotalLengthPartsList_ItemNumberSeparator (
        _bstr_t _arg1 );
    HRESULT SetShowComponent (
        enum PartsListComponentType ComponentType,
        VARIANT_BOOL ShowComponent );
    HRESULT SetComponentSortPriority (
        enum PartsListComponentType ComponentType,
        long ComponentSortPriority );
    double GetPipeRoughCutEndClearance ( );
    void PutPipeRoughCutEndClearance (
        double _arg1 );
    double GetFrameRoughCutEndClearance ( );
    void PutFrameRoughCutEndClearance (
        double _arg1 );
    double GetTitleFixedRowHeight ( );
    void PutTitleFixedRowHeight (
        double _arg1 );
    double GetMarginHorizontal ( );
    void PutMarginHorizontal (
        double _arg1 );
    double GetMarginVertical ( );
    void PutMarginVertical (
        double _arg1 );
    VARIANT_BOOL GetUseUniquenessCriteria_TubeFlatLength ( );
    void PutUseUniquenessCriteria_TubeFlatLength (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetUseUniquenessCriteria_TubeMass ( );
    void PutUseUniquenessCriteria_TubeMass (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetMarkAmbiguousValuesForTube ( );
    void PutMarkAmbiguousValuesForTube (
        VARIANT_BOOL _arg1 );
    _bstr_t GetMarkAmbiguousValuesStringForTube ( );
    void PutMarkAmbiguousValuesStringForTube (
        _bstr_t _arg1 );
    VARIANT_BOOL GetZeroQuantity ( );
    void PutZeroQuantity (
        VARIANT_BOOL _arg1 );
    _bstr_t GetZeroQuantityString ( );
    void PutZeroQuantityString (
        _bstr_t _arg1 );
    VARIANT_BOOL IsFamilyOfAssemblyPartsList ( );
    HRESULT GetAllFamilyOfAssemblyPartsListMembers (
        struct DrawingView * DrawingView,
        long * NumOfMembers,
        SAFEARRAY * * ListOfMembers );
    HRESULT GetSelectedFamilyOfAssemblyPartsListMembers (
        long * NumOfMembers,
        SAFEARRAY * * ListOfMembers );
    HRESULT SetSelectedFamilyOfAssemblyPartsListMembers (
        long * NumOfMembers,
        SAFEARRAY * * ListOfMembers );
    _bstr_t GetName ( );
    HRESULT GetUniquenessCriteria_Gusset (
        VARIANT_BOOL * UseGussetMass,
        enum GussetPlateUniquenessCriteria * GussetPlateUniquenessCriteriaType );
    HRESULT SetUniquenessCriteria_Gusset (
        VARIANT_BOOL UseGussetMass,
        enum GussetPlateUniquenessCriteria GussetPlateUniquenessCriteriaType );
    HRESULT GetGussetPlateNamingFormat (
        BSTR * Name,
        enum GussetPlateNamingFormat * GussetPlateNamingFormat_Param1,
        enum GussetPlateNamingFormat * GussetPlateNamingFormat_Param2,
        enum GussetPlateNamingFormat * GussetPlateNamingFormat_Param3 );
    HRESULT SetGussetPlateNamingFormat (
        _bstr_t Name,
        enum GussetPlateNamingFormat GussetPlateNamingFormat_Param1,
        enum GussetPlateNamingFormat GussetPlateNamingFormat_Param2,
        enum GussetPlateNamingFormat GussetPlateNamingFormat_Param3 );
    VARIANT_BOOL IsTableSpecifiedByHeight ( );
};

struct __declspec(uuid("86f045da-ad81-11d3-a431-0004ac9695cb"))
_IPartsListsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    PartsListPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    PartsListPtr Add (
        struct DrawingView * DrawingView,
        _bstr_t SavedSettings,
        long AutoBalloon,
        long CreatePartsList );
    PartsListPtr AddEx (
        struct DrawingView * DrawingView,
        long LinkToActive,
        _bstr_t SavedSettings,
        long AutoBalloon,
        long CreatePartsList );
    PartsListPtr AddFamilyOfAssemblyPartsList (
        struct DrawingView * DrawingView,
        long LinkToActive,
        _bstr_t SavedSettings,
        long AutoBalloon,
        long CreatePartsList );
    PartsListPtr AddFromExistingPartsList (
        struct PartsList * pExistingPartsList,
        _bstr_t AssemblyFileFullPath );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct PartsList * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Unknown ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ struct DrawingView * DrawingView,
        /*[in]*/ BSTR SavedSettings,
        /*[in]*/ long AutoBalloon,
        /*[in]*/ long CreatePartsList,
        /*[out,retval]*/ struct PartsList * * ppObj ) = 0;
      virtual HRESULT __stdcall raw_AddEx (
        /*[in]*/ struct DrawingView * DrawingView,
        /*[in]*/ long LinkToActive,
        /*[in]*/ BSTR SavedSettings,
        /*[in]*/ long AutoBalloon,
        /*[in]*/ long CreatePartsList,
        /*[out,retval]*/ struct PartsList * * ppObj ) = 0;
      virtual HRESULT __stdcall raw_AddFamilyOfAssemblyPartsList (
        /*[in]*/ struct DrawingView * DrawingView,
        /*[in]*/ long LinkToActive,
        /*[in]*/ BSTR SavedSettings,
        /*[in]*/ long AutoBalloon,
        /*[in]*/ long CreatePartsList,
        /*[out,retval]*/ struct PartsList * * ppObj ) = 0;
      virtual HRESULT __stdcall raw_AddFromExistingPartsList (
        /*[in]*/ struct PartsList * pExistingPartsList,
        /*[in]*/ BSTR AssemblyFileFullPath,
        /*[out,retval]*/ struct PartsList * * ppObj ) = 0;
};

struct __declspec(uuid("5b0c45c9-7e64-43b6-822f-195024dd7c2d"))
TableCell : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Getvalue,put=Putvalue))
    _bstr_t value;
    __declspec(property(get=GetFontName,put=PutFontName))
    _bstr_t FontName;
    __declspec(property(get=GetFontStyle,put=PutFontStyle))
    enum TGFrameworkSupport::DimTextFontStyleConstants FontStyle;
    __declspec(property(get=GetUnderline,put=PutUnderline))
    VARIANT_BOOL Underline;
    __declspec(property(get=GetHorizontalAlignment,put=PutHorizontalAlignment))
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants HorizontalAlignment;
    __declspec(property(get=GetVerticalAlignment,put=PutVerticalAlignment))
    enum TGFrameworkSupport::TextVerticalAlignmentConstants VerticalAlignment;
    __declspec(property(get=GetAllowCellOverrides,put=PutAllowCellOverrides))
    VARIANT_BOOL AllowCellOverrides;
    __declspec(property(get=GetFontSize))
    double FontSize;
    __declspec(property(get=GetPropertyText))
    _bstr_t PropertyText;
    __declspec(property(get=GetIsOverridden))
    VARIANT_BOOL IsOverridden;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    _bstr_t Getvalue ( );
    void Putvalue (
        _bstr_t _arg1 );
    _bstr_t GetFontName ( );
    void PutFontName (
        _bstr_t _arg1 );
    enum TGFrameworkSupport::DimTextFontStyleConstants GetFontStyle ( );
    void PutFontStyle (
        enum TGFrameworkSupport::DimTextFontStyleConstants _arg1 );
    VARIANT_BOOL GetUnderline ( );
    void PutUnderline (
        VARIANT_BOOL _arg1 );
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants GetHorizontalAlignment ( );
    void PutHorizontalAlignment (
        enum TGFrameworkSupport::TextHorizontalAlignmentConstants _arg1 );
    enum TGFrameworkSupport::TextVerticalAlignmentConstants GetVerticalAlignment ( );
    void PutVerticalAlignment (
        enum TGFrameworkSupport::TextVerticalAlignmentConstants _arg1 );
    VARIANT_BOOL GetAllowCellOverrides ( );
    void PutAllowCellOverrides (
        VARIANT_BOOL _arg1 );
    double GetFontSize ( );
    _bstr_t GetPropertyText ( );
    VARIANT_BOOL GetIsOverridden ( );
};

struct __declspec(uuid("dda40fc7-58b1-4495-a767-e306ac407165"))
_ITableCellAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Getvalue,put=Putvalue))
    _bstr_t value;
    __declspec(property(get=GetFontName,put=PutFontName))
    _bstr_t FontName;
    __declspec(property(get=GetFontStyle,put=PutFontStyle))
    enum TGFrameworkSupport::DimTextFontStyleConstants FontStyle;
    __declspec(property(get=GetUnderline,put=PutUnderline))
    VARIANT_BOOL Underline;
    __declspec(property(get=GetHorizontalAlignment,put=PutHorizontalAlignment))
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants HorizontalAlignment;
    __declspec(property(get=GetVerticalAlignment,put=PutVerticalAlignment))
    enum TGFrameworkSupport::TextVerticalAlignmentConstants VerticalAlignment;
    __declspec(property(get=GetAllowCellOverrides,put=PutAllowCellOverrides))
    VARIANT_BOOL AllowCellOverrides;
    __declspec(property(get=GetFontSize))
    double FontSize;
    __declspec(property(get=GetPropertyText))
    _bstr_t PropertyText;
    __declspec(property(get=GetIsOverridden))
    VARIANT_BOOL IsOverridden;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    _bstr_t Getvalue ( );
    void Putvalue (
        _bstr_t value );
    _bstr_t GetFontName ( );
    void PutFontName (
        _bstr_t FontName );
    enum TGFrameworkSupport::DimTextFontStyleConstants GetFontStyle ( );
    void PutFontStyle (
        enum TGFrameworkSupport::DimTextFontStyleConstants FontStyle );
    VARIANT_BOOL GetUnderline ( );
    void PutUnderline (
        VARIANT_BOOL Underline );
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants GetHorizontalAlignment ( );
    void PutHorizontalAlignment (
        enum TGFrameworkSupport::TextHorizontalAlignmentConstants HorizontalAlignment );
    enum TGFrameworkSupport::TextVerticalAlignmentConstants GetVerticalAlignment ( );
    void PutVerticalAlignment (
        enum TGFrameworkSupport::TextVerticalAlignmentConstants VerticalAlignment );
    VARIANT_BOOL GetAllowCellOverrides ( );
    void PutAllowCellOverrides (
        VARIANT_BOOL AllowCellOverrides );
    double GetFontSize ( );
    _bstr_t GetPropertyText ( );
    VARIANT_BOOL GetIsOverridden ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_value (
        /*[out,retval]*/ BSTR * value ) = 0;
      virtual HRESULT __stdcall put_value (
        /*[in]*/ BSTR value ) = 0;
      virtual HRESULT __stdcall get_FontName (
        /*[out,retval]*/ BSTR * FontName ) = 0;
      virtual HRESULT __stdcall put_FontName (
        /*[in]*/ BSTR FontName ) = 0;
      virtual HRESULT __stdcall get_FontStyle (
        /*[out,retval]*/ enum TGFrameworkSupport::DimTextFontStyleConstants * FontStyle ) = 0;
      virtual HRESULT __stdcall put_FontStyle (
        /*[in]*/ enum TGFrameworkSupport::DimTextFontStyleConstants FontStyle ) = 0;
      virtual HRESULT __stdcall get_Underline (
        /*[out,retval]*/ VARIANT_BOOL * Underline ) = 0;
      virtual HRESULT __stdcall put_Underline (
        /*[in]*/ VARIANT_BOOL Underline ) = 0;
      virtual HRESULT __stdcall get_HorizontalAlignment (
        /*[out,retval]*/ enum TGFrameworkSupport::TextHorizontalAlignmentConstants * HorizontalAlignment ) = 0;
      virtual HRESULT __stdcall put_HorizontalAlignment (
        /*[in]*/ enum TGFrameworkSupport::TextHorizontalAlignmentConstants HorizontalAlignment ) = 0;
      virtual HRESULT __stdcall get_VerticalAlignment (
        /*[out,retval]*/ enum TGFrameworkSupport::TextVerticalAlignmentConstants * VerticalAlignment ) = 0;
      virtual HRESULT __stdcall put_VerticalAlignment (
        /*[in]*/ enum TGFrameworkSupport::TextVerticalAlignmentConstants VerticalAlignment ) = 0;
      virtual HRESULT __stdcall get_AllowCellOverrides (
        /*[out,retval]*/ VARIANT_BOOL * AllowCellOverrides ) = 0;
      virtual HRESULT __stdcall put_AllowCellOverrides (
        /*[in]*/ VARIANT_BOOL AllowCellOverrides ) = 0;
      virtual HRESULT __stdcall get_FontSize (
        /*[out,retval]*/ double * FontSize ) = 0;
      virtual HRESULT __stdcall get_PropertyText (
        /*[out,retval]*/ BSTR * bstrPropertyText ) = 0;
      virtual HRESULT __stdcall get_IsOverridden (
        /*[out,retval]*/ VARIANT_BOOL * pvbIsCellOverridden ) = 0;
};

enum TitlePosition
{
    igHeader = 0,
    igFooter = 1,
    igFooterAndHeader = 2,
    igNeither = 3
};

struct __declspec(uuid("36444aa2-b43c-4cd5-8528-49e7b4ed064c"))
TableColumns : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    TableColumnPtr Item (
        const _variant_t & Index );
    TableColumnPtr Add (
        const _variant_t & Index,
        VARIANT_BOOL after );
};

struct __declspec(uuid("159efe68-473c-4434-b795-a44be29f7d12"))
TableColumn : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetHeaderRowOrientation,put=PutHeaderRowOrientation))
    enum TableTextOrientation HeaderRowOrientation;
    __declspec(property(get=GetHeaderRowVerticalAlignment,put=PutHeaderRowVerticalAlignment))
    enum TGFrameworkSupport::TextVerticalAlignmentConstants HeaderRowVerticalAlignment;
    __declspec(property(get=GetPropertyText,put=PutPropertyText))
    _bstr_t PropertyText;
    __declspec(property(get=GetDataMergeCellsWithSameValue,put=PutDataMergeCellsWithSameValue))
    VARIANT_BOOL DataMergeCellsWithSameValue;
    __declspec(property(get=GetHeaderRowFontName,put=PutHeaderRowFontName))
    _bstr_t HeaderRowFontName;
    __declspec(property(get=GetHeaderRowFontStyle,put=PutHeaderRowFontStyle))
    enum TGFrameworkSupport::DimTextFontStyleConstants HeaderRowFontStyle;
    __declspec(property(get=GetHeaderRowUnderline,put=PutHeaderRowUnderline))
    VARIANT_BOOL HeaderRowUnderline;
    __declspec(property(get=GetDataFontName,put=PutDataFontName))
    _bstr_t DataFontName;
    __declspec(property(get=GetDataFontStyle,put=PutDataFontStyle))
    enum TGFrameworkSupport::DimTextFontStyleConstants DataFontStyle;
    __declspec(property(get=GetDataUnderline,put=PutDataUnderline))
    VARIANT_BOOL DataUnderline;
    __declspec(property(get=GetHeaderRowHeight))
    double HeaderRowHeight;
    __declspec(property(get=GetHeaderRowFontSize))
    double HeaderRowFontSize;
    __declspec(property(get=GetHeaderRowMergeWithNextVerticalCell,put=PutHeaderRowMergeWithNextVerticalCell))
    VARIANT_BOOL HeaderRowMergeWithNextVerticalCell;
    __declspec(property(get=GetDataFontSize))
    double DataFontSize;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetDataAlignment,put=PutDataAlignment))
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants DataAlignment;
    __declspec(property(get=GetHeader,put=PutHeader))
    _bstr_t Header;
    __declspec(property(get=GetHeaderAlignment,put=PutHeaderAlignment))
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants HeaderAlignment;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetShow,put=PutShow))
    VARIANT_BOOL Show;
    __declspec(property(get=GetSortAscending,put=PutSortAscending))
    VARIANT_BOOL SortAscending;
    __declspec(property(get=GetSortPrecedence,put=PutSortPrecedence))
    long SortPrecedence;
    __declspec(property(get=GetWidth,put=PutWidth))
    double Width;
    __declspec(property(get=GetDataFitToWidth,put=PutDataFitToWidth))
    VARIANT_BOOL DataFitToWidth;
    __declspec(property(get=GetDataHorizontalAlignment,put=PutDataHorizontalAlignment))
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants DataHorizontalAlignment;
    __declspec(property(get=GetDataVerticalAlignment,put=PutDataVerticalAlignment))
    enum TGFrameworkSupport::TextVerticalAlignmentConstants DataVerticalAlignment;
    __declspec(property(put=PutCurrentHeaderRow))
    long CurrentHeaderRow;
    __declspec(property(get=GetHeaderRowValue,put=PutHeaderRowValue))
    _bstr_t HeaderRowValue;
    __declspec(property(get=GetHeaderRowFitToWidth,put=PutHeaderRowFitToWidth))
    VARIANT_BOOL HeaderRowFitToWidth;
    __declspec(property(get=GetHeaderRowHorizontalAlignment,put=PutHeaderRowHorizontalAlignment))
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants HeaderRowHorizontalAlignment;
    __declspec(property(get=GetHeaderRowMergeWithNext,put=PutHeaderRowMergeWithNext))
    VARIANT_BOOL HeaderRowMergeWithNext;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants GetDataAlignment ( );
    void PutDataAlignment (
        enum TGFrameworkSupport::TextHorizontalAlignmentConstants _arg1 );
    _bstr_t GetHeader ( );
    void PutHeader (
        _bstr_t _arg1 );
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants GetHeaderAlignment ( );
    void PutHeaderAlignment (
        enum TGFrameworkSupport::TextHorizontalAlignmentConstants _arg1 );
    long GetIndex ( );
    VARIANT_BOOL GetShow ( );
    void PutShow (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetSortAscending ( );
    void PutSortAscending (
        VARIANT_BOOL _arg1 );
    long GetSortPrecedence ( );
    void PutSortPrecedence (
        long _arg1 );
    double GetWidth ( );
    void PutWidth (
        double _arg1 );
    void PutCurrentHeaderRow (
        long _arg1 );
    _bstr_t GetHeaderRowValue ( );
    void PutHeaderRowValue (
        _bstr_t _arg1 );
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants GetHeaderRowHorizontalAlignment ( );
    void PutHeaderRowHorizontalAlignment (
        enum TGFrameworkSupport::TextHorizontalAlignmentConstants _arg1 );
    enum TGFrameworkSupport::TextVerticalAlignmentConstants GetHeaderRowVerticalAlignment ( );
    void PutHeaderRowVerticalAlignment (
        enum TGFrameworkSupport::TextVerticalAlignmentConstants _arg1 );
    enum TableTextOrientation GetHeaderRowOrientation ( );
    void PutHeaderRowOrientation (
        enum TableTextOrientation _arg1 );
    VARIANT_BOOL GetHeaderRowFitToWidth ( );
    void PutHeaderRowFitToWidth (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetHeaderRowMergeWithNext ( );
    void PutHeaderRowMergeWithNext (
        VARIANT_BOOL _arg1 );
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants GetDataHorizontalAlignment ( );
    void PutDataHorizontalAlignment (
        enum TGFrameworkSupport::TextHorizontalAlignmentConstants _arg1 );
    enum TGFrameworkSupport::TextVerticalAlignmentConstants GetDataVerticalAlignment ( );
    void PutDataVerticalAlignment (
        enum TGFrameworkSupport::TextVerticalAlignmentConstants _arg1 );
    VARIANT_BOOL GetDataFitToWidth ( );
    void PutDataFitToWidth (
        VARIANT_BOOL _arg1 );
    _bstr_t GetPropertyText ( );
    void PutPropertyText (
        _bstr_t _arg1 );
    VARIANT_BOOL GetDataMergeCellsWithSameValue ( );
    void PutDataMergeCellsWithSameValue (
        VARIANT_BOOL _arg1 );
    _bstr_t GetHeaderRowFontName ( );
    void PutHeaderRowFontName (
        _bstr_t _arg1 );
    enum TGFrameworkSupport::DimTextFontStyleConstants GetHeaderRowFontStyle ( );
    void PutHeaderRowFontStyle (
        enum TGFrameworkSupport::DimTextFontStyleConstants _arg1 );
    VARIANT_BOOL GetHeaderRowUnderline ( );
    void PutHeaderRowUnderline (
        VARIANT_BOOL _arg1 );
    _bstr_t GetDataFontName ( );
    void PutDataFontName (
        _bstr_t _arg1 );
    enum TGFrameworkSupport::DimTextFontStyleConstants GetDataFontStyle ( );
    void PutDataFontStyle (
        enum TGFrameworkSupport::DimTextFontStyleConstants _arg1 );
    VARIANT_BOOL GetDataUnderline ( );
    void PutDataUnderline (
        VARIANT_BOOL _arg1 );
    double GetHeaderRowHeight ( );
    double GetHeaderRowFontSize ( );
    VARIANT_BOOL GetHeaderRowMergeWithNextVerticalCell ( );
    void PutHeaderRowMergeWithNextVerticalCell (
        VARIANT_BOOL _arg1 );
    double GetDataFontSize ( );
};

struct __declspec(uuid("8676a3cd-4292-4fc1-9b39-c59b27e43093"))
_ITableColumnsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    TableColumnPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    TableColumnPtr Add (
        const _variant_t & Index,
        VARIANT_BOOL after );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct TableColumn * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Unknown ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ VARIANT Index,
        /*[in]*/ VARIANT_BOOL after,
        /*[out,retval]*/ struct TableColumn * * ppObj ) = 0;
};

enum TableTextOrientation
{
    igHorizontal = 0,
    igRotated = 1,
    igVertical = 2
};

struct __declspec(uuid("f3d33e80-cd5c-440c-95e3-11be1bb77de9"))
_ITableColumnAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetHeaderRowOrientation,put=PutHeaderRowOrientation))
    enum TableTextOrientation HeaderRowOrientation;
    __declspec(property(get=GetHeaderRowVerticalAlignment,put=PutHeaderRowVerticalAlignment))
    enum TGFrameworkSupport::TextVerticalAlignmentConstants HeaderRowVerticalAlignment;
    __declspec(property(get=GetPropertyText,put=PutPropertyText))
    _bstr_t PropertyText;
    __declspec(property(get=GetDataMergeCellsWithSameValue,put=PutDataMergeCellsWithSameValue))
    VARIANT_BOOL DataMergeCellsWithSameValue;
    __declspec(property(get=GetHeaderRowFontName,put=PutHeaderRowFontName))
    _bstr_t HeaderRowFontName;
    __declspec(property(get=GetHeaderRowFontStyle,put=PutHeaderRowFontStyle))
    enum TGFrameworkSupport::DimTextFontStyleConstants HeaderRowFontStyle;
    __declspec(property(get=GetHeaderRowUnderline,put=PutHeaderRowUnderline))
    VARIANT_BOOL HeaderRowUnderline;
    __declspec(property(get=GetDataFontName,put=PutDataFontName))
    _bstr_t DataFontName;
    __declspec(property(get=GetDataFontStyle,put=PutDataFontStyle))
    enum TGFrameworkSupport::DimTextFontStyleConstants DataFontStyle;
    __declspec(property(get=GetDataUnderline,put=PutDataUnderline))
    VARIANT_BOOL DataUnderline;
    __declspec(property(get=GetHeaderRowHeight))
    double HeaderRowHeight;
    __declspec(property(get=GetHeaderRowFontSize))
    double HeaderRowFontSize;
    __declspec(property(get=GetHeaderRowMergeWithNextVerticalCell,put=PutHeaderRowMergeWithNextVerticalCell))
    VARIANT_BOOL HeaderRowMergeWithNextVerticalCell;
    __declspec(property(get=GetDataFontSize))
    double DataFontSize;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetDataAlignment,put=PutDataAlignment))
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants DataAlignment;
    __declspec(property(get=GetHeader,put=PutHeader))
    _bstr_t Header;
    __declspec(property(get=GetHeaderAlignment,put=PutHeaderAlignment))
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants HeaderAlignment;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetShow,put=PutShow))
    VARIANT_BOOL Show;
    __declspec(property(get=GetSortAscending,put=PutSortAscending))
    VARIANT_BOOL SortAscending;
    __declspec(property(get=GetSortPrecedence,put=PutSortPrecedence))
    long SortPrecedence;
    __declspec(property(get=GetWidth,put=PutWidth))
    double Width;
    __declspec(property(get=GetDataFitToWidth,put=PutDataFitToWidth))
    VARIANT_BOOL DataFitToWidth;
    __declspec(property(get=GetDataHorizontalAlignment,put=PutDataHorizontalAlignment))
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants DataHorizontalAlignment;
    __declspec(property(get=GetDataVerticalAlignment,put=PutDataVerticalAlignment))
    enum TGFrameworkSupport::TextVerticalAlignmentConstants DataVerticalAlignment;
    __declspec(property(put=PutCurrentHeaderRow))
    long CurrentHeaderRow;
    __declspec(property(get=GetHeaderRowValue,put=PutHeaderRowValue))
    _bstr_t HeaderRowValue;
    __declspec(property(get=GetHeaderRowFitToWidth,put=PutHeaderRowFitToWidth))
    VARIANT_BOOL HeaderRowFitToWidth;
    __declspec(property(get=GetHeaderRowHorizontalAlignment,put=PutHeaderRowHorizontalAlignment))
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants HeaderRowHorizontalAlignment;
    __declspec(property(get=GetHeaderRowMergeWithNext,put=PutHeaderRowMergeWithNext))
    VARIANT_BOOL HeaderRowMergeWithNext;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants GetDataAlignment ( );
    void PutDataAlignment (
        enum TGFrameworkSupport::TextHorizontalAlignmentConstants DataAlignment );
    _bstr_t GetHeader ( );
    void PutHeader (
        _bstr_t Header );
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants GetHeaderAlignment ( );
    void PutHeaderAlignment (
        enum TGFrameworkSupport::TextHorizontalAlignmentConstants HeaderAlignment );
    long GetIndex ( );
    VARIANT_BOOL GetShow ( );
    void PutShow (
        VARIANT_BOOL Show );
    VARIANT_BOOL GetSortAscending ( );
    void PutSortAscending (
        VARIANT_BOOL SortAscending );
    long GetSortPrecedence ( );
    void PutSortPrecedence (
        long SortPrecedence );
    double GetWidth ( );
    void PutWidth (
        double Width );
    void PutCurrentHeaderRow (
        long _arg1 );
    _bstr_t GetHeaderRowValue ( );
    void PutHeaderRowValue (
        _bstr_t HeaderRowValue );
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants GetHeaderRowHorizontalAlignment ( );
    void PutHeaderRowHorizontalAlignment (
        enum TGFrameworkSupport::TextHorizontalAlignmentConstants HeaderRowHorizontalAlignment );
    enum TGFrameworkSupport::TextVerticalAlignmentConstants GetHeaderRowVerticalAlignment ( );
    void PutHeaderRowVerticalAlignment (
        enum TGFrameworkSupport::TextVerticalAlignmentConstants HeaderRowVerticalAlignment );
    enum TableTextOrientation GetHeaderRowOrientation ( );
    void PutHeaderRowOrientation (
        enum TableTextOrientation HeaderRowOrientation );
    VARIANT_BOOL GetHeaderRowFitToWidth ( );
    void PutHeaderRowFitToWidth (
        VARIANT_BOOL HeaderRowFitToWidth );
    VARIANT_BOOL GetHeaderRowMergeWithNext ( );
    void PutHeaderRowMergeWithNext (
        VARIANT_BOOL HeaderRowMergeWithNext );
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants GetDataHorizontalAlignment ( );
    void PutDataHorizontalAlignment (
        enum TGFrameworkSupport::TextHorizontalAlignmentConstants DataHorizontalAlignment );
    enum TGFrameworkSupport::TextVerticalAlignmentConstants GetDataVerticalAlignment ( );
    void PutDataVerticalAlignment (
        enum TGFrameworkSupport::TextVerticalAlignmentConstants DataVerticalAlignment );
    VARIANT_BOOL GetDataFitToWidth ( );
    void PutDataFitToWidth (
        VARIANT_BOOL DataFitToWidth );
    _bstr_t GetPropertyText ( );
    void PutPropertyText (
        _bstr_t PropertyText );
    VARIANT_BOOL GetDataMergeCellsWithSameValue ( );
    void PutDataMergeCellsWithSameValue (
        VARIANT_BOOL DataMergeCellsWithSameValue );
    _bstr_t GetHeaderRowFontName ( );
    void PutHeaderRowFontName (
        _bstr_t FontName );
    enum TGFrameworkSupport::DimTextFontStyleConstants GetHeaderRowFontStyle ( );
    void PutHeaderRowFontStyle (
        enum TGFrameworkSupport::DimTextFontStyleConstants FontStyle );
    VARIANT_BOOL GetHeaderRowUnderline ( );
    void PutHeaderRowUnderline (
        VARIANT_BOOL Underline );
    _bstr_t GetDataFontName ( );
    void PutDataFontName (
        _bstr_t FontName );
    enum TGFrameworkSupport::DimTextFontStyleConstants GetDataFontStyle ( );
    void PutDataFontStyle (
        enum TGFrameworkSupport::DimTextFontStyleConstants FontStyle );
    VARIANT_BOOL GetDataUnderline ( );
    void PutDataUnderline (
        VARIANT_BOOL Underline );
    double GetHeaderRowHeight ( );
    double GetHeaderRowFontSize ( );
    VARIANT_BOOL GetHeaderRowMergeWithNextVerticalCell ( );
    void PutHeaderRowMergeWithNextVerticalCell (
        VARIANT_BOOL HeaderRowMergeWithNextVerticalCell );
    double GetDataFontSize ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_DataAlignment (
        /*[out,retval]*/ enum TGFrameworkSupport::TextHorizontalAlignmentConstants * DataAlignment ) = 0;
      virtual HRESULT __stdcall put_DataAlignment (
        /*[in]*/ enum TGFrameworkSupport::TextHorizontalAlignmentConstants DataAlignment ) = 0;
      virtual HRESULT __stdcall get_Header (
        /*[out,retval]*/ BSTR * Header ) = 0;
      virtual HRESULT __stdcall put_Header (
        /*[in]*/ BSTR Header ) = 0;
      virtual HRESULT __stdcall get_HeaderAlignment (
        /*[out,retval]*/ enum TGFrameworkSupport::TextHorizontalAlignmentConstants * HeaderAlignment ) = 0;
      virtual HRESULT __stdcall put_HeaderAlignment (
        /*[in]*/ enum TGFrameworkSupport::TextHorizontalAlignmentConstants HeaderAlignment ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_Show (
        /*[out,retval]*/ VARIANT_BOOL * Show ) = 0;
      virtual HRESULT __stdcall put_Show (
        /*[in]*/ VARIANT_BOOL Show ) = 0;
      virtual HRESULT __stdcall get_SortAscending (
        /*[out,retval]*/ VARIANT_BOOL * SortAscending ) = 0;
      virtual HRESULT __stdcall put_SortAscending (
        /*[in]*/ VARIANT_BOOL SortAscending ) = 0;
      virtual HRESULT __stdcall get_SortPrecedence (
        /*[out,retval]*/ long * SortPrecedence ) = 0;
      virtual HRESULT __stdcall put_SortPrecedence (
        /*[in]*/ long SortPrecedence ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * Width ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ double Width ) = 0;
      virtual HRESULT __stdcall put_CurrentHeaderRow (
        /*[in]*/ long _arg1 ) = 0;
      virtual HRESULT __stdcall get_HeaderRowValue (
        /*[out,retval]*/ BSTR * HeaderRowValue ) = 0;
      virtual HRESULT __stdcall put_HeaderRowValue (
        /*[in]*/ BSTR HeaderRowValue ) = 0;
      virtual HRESULT __stdcall get_HeaderRowHorizontalAlignment (
        /*[out,retval]*/ enum TGFrameworkSupport::TextHorizontalAlignmentConstants * HeaderRowHorizontalAlignment ) = 0;
      virtual HRESULT __stdcall put_HeaderRowHorizontalAlignment (
        /*[in]*/ enum TGFrameworkSupport::TextHorizontalAlignmentConstants HeaderRowHorizontalAlignment ) = 0;
      virtual HRESULT __stdcall get_HeaderRowVerticalAlignment (
        /*[out,retval]*/ enum TGFrameworkSupport::TextVerticalAlignmentConstants * HeaderRowVerticalAlignment ) = 0;
      virtual HRESULT __stdcall put_HeaderRowVerticalAlignment (
        /*[in]*/ enum TGFrameworkSupport::TextVerticalAlignmentConstants HeaderRowVerticalAlignment ) = 0;
      virtual HRESULT __stdcall get_HeaderRowOrientation (
        /*[out,retval]*/ enum TableTextOrientation * HeaderRowOrientation ) = 0;
      virtual HRESULT __stdcall put_HeaderRowOrientation (
        /*[in]*/ enum TableTextOrientation HeaderRowOrientation ) = 0;
      virtual HRESULT __stdcall get_HeaderRowFitToWidth (
        /*[out,retval]*/ VARIANT_BOOL * HeaderRowFitToWidth ) = 0;
      virtual HRESULT __stdcall put_HeaderRowFitToWidth (
        /*[in]*/ VARIANT_BOOL HeaderRowFitToWidth ) = 0;
      virtual HRESULT __stdcall get_HeaderRowMergeWithNext (
        /*[out,retval]*/ VARIANT_BOOL * HeaderRowMergeWithNext ) = 0;
      virtual HRESULT __stdcall put_HeaderRowMergeWithNext (
        /*[in]*/ VARIANT_BOOL HeaderRowMergeWithNext ) = 0;
      virtual HRESULT __stdcall get_DataHorizontalAlignment (
        /*[out,retval]*/ enum TGFrameworkSupport::TextHorizontalAlignmentConstants * DataHorizontalAlignment ) = 0;
      virtual HRESULT __stdcall put_DataHorizontalAlignment (
        /*[in]*/ enum TGFrameworkSupport::TextHorizontalAlignmentConstants DataHorizontalAlignment ) = 0;
      virtual HRESULT __stdcall get_DataVerticalAlignment (
        /*[out,retval]*/ enum TGFrameworkSupport::TextVerticalAlignmentConstants * DataVerticalAlignment ) = 0;
      virtual HRESULT __stdcall put_DataVerticalAlignment (
        /*[in]*/ enum TGFrameworkSupport::TextVerticalAlignmentConstants DataVerticalAlignment ) = 0;
      virtual HRESULT __stdcall get_DataFitToWidth (
        /*[out,retval]*/ VARIANT_BOOL * DataFitToWidth ) = 0;
      virtual HRESULT __stdcall put_DataFitToWidth (
        /*[in]*/ VARIANT_BOOL DataFitToWidth ) = 0;
      virtual HRESULT __stdcall get_PropertyText (
        /*[out,retval]*/ BSTR * PropertyText ) = 0;
      virtual HRESULT __stdcall put_PropertyText (
        /*[in]*/ BSTR PropertyText ) = 0;
      virtual HRESULT __stdcall get_DataMergeCellsWithSameValue (
        /*[out,retval]*/ VARIANT_BOOL * DataMergeCellsWithSameValue ) = 0;
      virtual HRESULT __stdcall put_DataMergeCellsWithSameValue (
        /*[in]*/ VARIANT_BOOL DataMergeCellsWithSameValue ) = 0;
      virtual HRESULT __stdcall get_HeaderRowFontName (
        /*[out,retval]*/ BSTR * FontName ) = 0;
      virtual HRESULT __stdcall put_HeaderRowFontName (
        /*[in]*/ BSTR FontName ) = 0;
      virtual HRESULT __stdcall get_HeaderRowFontStyle (
        /*[out,retval]*/ enum TGFrameworkSupport::DimTextFontStyleConstants * FontStyle ) = 0;
      virtual HRESULT __stdcall put_HeaderRowFontStyle (
        /*[in]*/ enum TGFrameworkSupport::DimTextFontStyleConstants FontStyle ) = 0;
      virtual HRESULT __stdcall get_HeaderRowUnderline (
        /*[out,retval]*/ VARIANT_BOOL * Underline ) = 0;
      virtual HRESULT __stdcall put_HeaderRowUnderline (
        /*[in]*/ VARIANT_BOOL Underline ) = 0;
      virtual HRESULT __stdcall get_DataFontName (
        /*[out,retval]*/ BSTR * FontName ) = 0;
      virtual HRESULT __stdcall put_DataFontName (
        /*[in]*/ BSTR FontName ) = 0;
      virtual HRESULT __stdcall get_DataFontStyle (
        /*[out,retval]*/ enum TGFrameworkSupport::DimTextFontStyleConstants * FontStyle ) = 0;
      virtual HRESULT __stdcall put_DataFontStyle (
        /*[in]*/ enum TGFrameworkSupport::DimTextFontStyleConstants FontStyle ) = 0;
      virtual HRESULT __stdcall get_DataUnderline (
        /*[out,retval]*/ VARIANT_BOOL * Underline ) = 0;
      virtual HRESULT __stdcall put_DataUnderline (
        /*[in]*/ VARIANT_BOOL Underline ) = 0;
      virtual HRESULT __stdcall get_HeaderRowHeight (
        /*[out,retval]*/ double * RowHeight ) = 0;
      virtual HRESULT __stdcall get_HeaderRowFontSize (
        /*[out,retval]*/ double * FontSize ) = 0;
      virtual HRESULT __stdcall get_HeaderRowMergeWithNextVerticalCell (
        /*[out,retval]*/ VARIANT_BOOL * HeaderRowMergeWithNextVerticalCell ) = 0;
      virtual HRESULT __stdcall put_HeaderRowMergeWithNextVerticalCell (
        /*[in]*/ VARIANT_BOOL HeaderRowMergeWithNextVerticalCell ) = 0;
      virtual HRESULT __stdcall get_DataFontSize (
        /*[out,retval]*/ double * FontSize ) = 0;
};

struct __declspec(uuid("897097cc-09aa-4f6a-9dc4-1e6bb2bf1cb8"))
TableRows : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    TableRowPtr Item (
        const _variant_t & Index );
    TableRowPtr Add (
        const _variant_t & Index,
        VARIANT_BOOL after );
};

struct __declspec(uuid("9ae1bd4d-03ad-40b4-a464-70ee247ea86a"))
TableRow : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetModelNode))
    ModelNodePtr ModelNode;
    __declspec(property(get=GetHideRow,put=PutHideRow))
    VARIANT_BOOL HideRow;
    __declspec(property(get=GetRowHeight))
    double RowHeight;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    ModelNodePtr GetModelNode ( );
    VARIANT_BOOL GetHideRow ( );
    void PutHideRow (
        VARIANT_BOOL _arg1 );
    double GetRowHeight ( );
};

struct __declspec(uuid("804712b7-2929-402a-a3bd-a60b36958be4"))
_ITableRowsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    TableRowPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    TableRowPtr Add (
        const _variant_t & Index,
        VARIANT_BOOL after );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct TableRow * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Unknown ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ VARIANT Index,
        /*[in]*/ VARIANT_BOOL after,
        /*[out,retval]*/ struct TableRow * * ppObj ) = 0;
};

struct __declspec(uuid("1099a363-b37e-4bba-9bb2-439381391c61"))
_ITableRowAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetModelNode))
    ModelNodePtr ModelNode;
    __declspec(property(get=GetHideRow,put=PutHideRow))
    VARIANT_BOOL HideRow;
    __declspec(property(get=GetRowHeight))
    double RowHeight;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    ModelNodePtr GetModelNode ( );
    VARIANT_BOOL GetHideRow ( );
    void PutHideRow (
        VARIANT_BOOL HideRow );
    double GetRowHeight ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_ModelNode (
        /*[out,retval]*/ struct ModelNode * * ppModelNode ) = 0;
      virtual HRESULT __stdcall get_HideRow (
        /*[out,retval]*/ VARIANT_BOOL * HideRow ) = 0;
      virtual HRESULT __stdcall put_HideRow (
        /*[in]*/ VARIANT_BOOL HideRow ) = 0;
      virtual HRESULT __stdcall get_RowHeight (
        /*[out,retval]*/ double * RowHeight ) = 0;
};

struct __declspec(uuid("c1555ce6-61d0-40b0-b141-c88689fea532"))
TableTitles : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    TableTitlePtr Item (
        const _variant_t & Index );
    TableTitlePtr Add ( );
};

struct __declspec(uuid("9fcf811c-b8bf-4e36-b045-24b6e3f017fe"))
TableTitle : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetPosition,put=PutPosition))
    enum TitlePosition Position;
    __declspec(property(get=Getvalue,put=Putvalue))
    _bstr_t value;
    __declspec(property(get=GetAlignment,put=PutAlignment))
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants Alignment;
    __declspec(property(get=GetFitToWidth,put=PutFitToWidth))
    VARIANT_BOOL FitToWidth;
    __declspec(property(get=GetFontName,put=PutFontName))
    _bstr_t FontName;
    __declspec(property(get=GetFontStyle,put=PutFontStyle))
    enum TGFrameworkSupport::DimTextFontStyleConstants FontStyle;
    __declspec(property(get=GetFontSize,put=PutFontSize))
    double FontSize;
    __declspec(property(get=GetRowHeight))
    double RowHeight;
    __declspec(property(get=GetUnderline))
    VARIANT_BOOL Underline;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TitlePosition GetPosition ( );
    void PutPosition (
        enum TitlePosition _arg1 );
    _bstr_t Getvalue ( );
    void Putvalue (
        _bstr_t _arg1 );
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants GetAlignment ( );
    void PutAlignment (
        enum TGFrameworkSupport::TextHorizontalAlignmentConstants _arg1 );
    VARIANT_BOOL GetFitToWidth ( );
    void PutFitToWidth (
        VARIANT_BOOL _arg1 );
    _bstr_t GetFontName ( );
    void PutFontName (
        _bstr_t _arg1 );
    enum TGFrameworkSupport::DimTextFontStyleConstants GetFontStyle ( );
    void PutFontStyle (
        enum TGFrameworkSupport::DimTextFontStyleConstants _arg1 );
    double GetFontSize ( );
    void PutFontSize (
        double _arg1 );
    double GetRowHeight ( );
    VARIANT_BOOL GetUnderline ( );
};

struct __declspec(uuid("0c696886-9fe6-4704-bd16-3b1b292a5371"))
_ITableTitlesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    TableTitlePtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    TableTitlePtr Add ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct TableTitle * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Unknown ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[out,retval]*/ struct TableTitle * * ppObj ) = 0;
};

struct __declspec(uuid("55f0cb78-b6cf-4426-9449-5f591aede982"))
_ITableTitleAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetPosition,put=PutPosition))
    enum TitlePosition Position;
    __declspec(property(get=Getvalue,put=Putvalue))
    _bstr_t value;
    __declspec(property(get=GetAlignment,put=PutAlignment))
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants Alignment;
    __declspec(property(get=GetFitToWidth,put=PutFitToWidth))
    VARIANT_BOOL FitToWidth;
    __declspec(property(get=GetFontName,put=PutFontName))
    _bstr_t FontName;
    __declspec(property(get=GetFontStyle,put=PutFontStyle))
    enum TGFrameworkSupport::DimTextFontStyleConstants FontStyle;
    __declspec(property(get=GetFontSize,put=PutFontSize))
    double FontSize;
    __declspec(property(get=GetRowHeight))
    double RowHeight;
    __declspec(property(get=GetUnderline))
    VARIANT_BOOL Underline;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TitlePosition GetPosition ( );
    void PutPosition (
        enum TitlePosition Position );
    _bstr_t Getvalue ( );
    void Putvalue (
        _bstr_t value );
    enum TGFrameworkSupport::TextHorizontalAlignmentConstants GetAlignment ( );
    void PutAlignment (
        enum TGFrameworkSupport::TextHorizontalAlignmentConstants Alignment );
    VARIANT_BOOL GetFitToWidth ( );
    void PutFitToWidth (
        VARIANT_BOOL FitToWidth );
    _bstr_t GetFontName ( );
    void PutFontName (
        _bstr_t FontName );
    enum TGFrameworkSupport::DimTextFontStyleConstants GetFontStyle ( );
    void PutFontStyle (
        enum TGFrameworkSupport::DimTextFontStyleConstants FontStyle );
    double GetFontSize ( );
    void PutFontSize (
        double FontSize );
    double GetRowHeight ( );
    VARIANT_BOOL GetUnderline ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ enum TitlePosition * Position ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ enum TitlePosition Position ) = 0;
      virtual HRESULT __stdcall get_value (
        /*[out,retval]*/ BSTR * value ) = 0;
      virtual HRESULT __stdcall put_value (
        /*[in]*/ BSTR value ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ enum TGFrameworkSupport::TextHorizontalAlignmentConstants * Alignment ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ enum TGFrameworkSupport::TextHorizontalAlignmentConstants Alignment ) = 0;
      virtual HRESULT __stdcall get_FitToWidth (
        /*[out,retval]*/ VARIANT_BOOL * FitToWidth ) = 0;
      virtual HRESULT __stdcall put_FitToWidth (
        /*[in]*/ VARIANT_BOOL FitToWidth ) = 0;
      virtual HRESULT __stdcall get_FontName (
        /*[out,retval]*/ BSTR * FontName ) = 0;
      virtual HRESULT __stdcall put_FontName (
        /*[in]*/ BSTR FontName ) = 0;
      virtual HRESULT __stdcall get_FontStyle (
        /*[out,retval]*/ enum TGFrameworkSupport::DimTextFontStyleConstants * FontStyle ) = 0;
      virtual HRESULT __stdcall put_FontStyle (
        /*[in]*/ enum TGFrameworkSupport::DimTextFontStyleConstants FontStyle ) = 0;
      virtual HRESULT __stdcall get_FontSize (
        /*[out,retval]*/ double * FontSize ) = 0;
      virtual HRESULT __stdcall put_FontSize (
        /*[in]*/ double FontSize ) = 0;
      virtual HRESULT __stdcall get_RowHeight (
        /*[out,retval]*/ double * RowHeight ) = 0;
      virtual HRESULT __stdcall get_Underline (
        /*[out,retval]*/ VARIANT_BOOL * Underline ) = 0;
};

enum TableAnchorPoint
{
    igUpperLeft = 0,
    igUpperRight = 1,
    igLowerLeft = 2,
    igLowerRight = 3
};

struct __declspec(uuid("c4793541-1f40-4918-beca-49eb32c5b329"))
TablePages : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    TablePagePtr Item (
        const _variant_t & Index );
};

struct __declspec(uuid("bccff534-1c09-4ae4-8fd8-bcb3ed787b31"))
TablePage : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetSheet,put=PutSheet))
    _bstr_t Sheet;
    __declspec(property(get=GetHeight))
    double Height;
    __declspec(property(get=GetWidth))
    double Width;
    __declspec(property(get=GetRotationAngle,put=PutRotationAngle))
    double RotationAngle;
    __declspec(property(get=GetLayer,put=PutLayer))
    _bstr_t Layer;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT GetOrigin (
        double * x,
        double * y );
    HRESULT SetOrigin (
        double x,
        double y );
    _bstr_t GetSheet ( );
    void PutSheet (
        _bstr_t _arg1 );
    double GetHeight ( );
    double GetWidth ( );
    double GetRotationAngle ( );
    void PutRotationAngle (
        double _arg1 );
    _bstr_t GetLayer ( );
    void PutLayer (
        _bstr_t _arg1 );
};

struct __declspec(uuid("079f7c5e-4fb0-4ec8-889a-c3d6649bacb4"))
_ITablePagesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    TablePagePtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct TablePage * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Unknown ) = 0;
};

struct __declspec(uuid("627b1a05-a94f-4263-8b5e-2c264f3c57f0"))
_ITablePageAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetSheet,put=PutSheet))
    _bstr_t Sheet;
    __declspec(property(get=GetHeight))
    double Height;
    __declspec(property(get=GetWidth))
    double Width;
    __declspec(property(get=GetRotationAngle,put=PutRotationAngle))
    double RotationAngle;
    __declspec(property(get=GetLayer,put=PutLayer))
    _bstr_t Layer;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT GetOrigin (
        double * x,
        double * y );
    HRESULT SetOrigin (
        double x,
        double y );
    _bstr_t GetSheet ( );
    void PutSheet (
        _bstr_t value );
    double GetHeight ( );
    double GetWidth ( );
    double GetRotationAngle ( );
    void PutRotationAngle (
        double value );
    _bstr_t GetLayer ( );
    void PutLayer (
        _bstr_t Layer );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_GetOrigin (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall raw_SetOrigin (
        /*[in]*/ double x,
        /*[in]*/ double y ) = 0;
      virtual HRESULT __stdcall get_Sheet (
        /*[out,retval]*/ BSTR * value ) = 0;
      virtual HRESULT __stdcall put_Sheet (
        /*[in]*/ BSTR value ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ double * value ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ double * value ) = 0;
      virtual HRESULT __stdcall get_RotationAngle (
        /*[out,retval]*/ double * value ) = 0;
      virtual HRESULT __stdcall put_RotationAngle (
        /*[in]*/ double value ) = 0;
      virtual HRESULT __stdcall get_Layer (
        /*[out,retval]*/ BSTR * Layer ) = 0;
      virtual HRESULT __stdcall put_Layer (
        /*[in]*/ BSTR Layer ) = 0;
};

enum PartsListType
{
    igTopLevel = 0,
    igAtomic = 1,
    igExploded = 2
};

struct __declspec(uuid("e9c25e3b-04bc-403f-9e59-dd72730807bf"))
TableGroups : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    TableGroupPtr Item (
        const _variant_t & Index );
    TableGroupPtr Add ( );
};

struct __declspec(uuid("3f12a8b0-4db7-498c-bb7c-a6542cc91e73"))
TableGroup : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=Getvalue,put=Putvalue))
    _bstr_t value;
    __declspec(property(get=GetSortByColumn,put=PutSortByColumn))
    long SortByColumn;
    __declspec(property(get=GetSortAscending,put=PutSortAscending))
    VARIANT_BOOL SortAscending;
    __declspec(property(get=GetShowHeader,put=PutShowHeader))
    VARIANT_BOOL ShowHeader;
    __declspec(property(get=GetNumberOfHeaderRows,put=PutNumberOfHeaderRows))
    long NumberOfHeaderRows;
    __declspec(property(get=GetHeaderCell))
    TableCellPtr HeaderCell[][];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t _arg1 );
    _bstr_t Getvalue ( );
    void Putvalue (
        _bstr_t _arg1 );
    long GetSortByColumn ( );
    void PutSortByColumn (
        long _arg1 );
    VARIANT_BOOL GetSortAscending ( );
    void PutSortAscending (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetShowHeader ( );
    void PutShowHeader (
        VARIANT_BOOL _arg1 );
    long GetNumberOfHeaderRows ( );
    void PutNumberOfHeaderRows (
        long _arg1 );
    TableCellPtr GetHeaderCell (
        const _variant_t & HeaderRowIndex,
        const _variant_t & ColumnIndex );
};

struct __declspec(uuid("5e7698b0-7f50-4d69-bc98-d09fa9efaf13"))
_ITableGroupsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    TableGroupPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    TableGroupPtr Add ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct TableGroup * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Unknown ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[out,retval]*/ struct TableGroup * * ppObj ) = 0;
};

struct __declspec(uuid("a4e44a44-5828-4486-b9d7-07f0eb83be36"))
_ITableGroupAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=Getvalue,put=Putvalue))
    _bstr_t value;
    __declspec(property(get=GetSortByColumn,put=PutSortByColumn))
    long SortByColumn;
    __declspec(property(get=GetSortAscending,put=PutSortAscending))
    VARIANT_BOOL SortAscending;
    __declspec(property(get=GetShowHeader,put=PutShowHeader))
    VARIANT_BOOL ShowHeader;
    __declspec(property(get=GetNumberOfHeaderRows,put=PutNumberOfHeaderRows))
    long NumberOfHeaderRows;
    __declspec(property(get=GetHeaderCell))
    TableCellPtr HeaderCell[][];

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    _bstr_t Getvalue ( );
    void Putvalue (
        _bstr_t value );
    long GetSortByColumn ( );
    void PutSortByColumn (
        long ColumnIndex );
    VARIANT_BOOL GetSortAscending ( );
    void PutSortAscending (
        VARIANT_BOOL SortAscending );
    VARIANT_BOOL GetShowHeader ( );
    void PutShowHeader (
        VARIANT_BOOL ShowHeader );
    long GetNumberOfHeaderRows ( );
    void PutNumberOfHeaderRows (
        long NumberOfHeaderRows );
    TableCellPtr GetHeaderCell (
        const _variant_t & HeaderRowIndex,
        const _variant_t & ColumnIndex );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_value (
        /*[out,retval]*/ BSTR * value ) = 0;
      virtual HRESULT __stdcall put_value (
        /*[in]*/ BSTR value ) = 0;
      virtual HRESULT __stdcall get_SortByColumn (
        /*[out,retval]*/ long * ColumnIndex ) = 0;
      virtual HRESULT __stdcall put_SortByColumn (
        /*[in]*/ long ColumnIndex ) = 0;
      virtual HRESULT __stdcall get_SortAscending (
        /*[out,retval]*/ VARIANT_BOOL * SortAscending ) = 0;
      virtual HRESULT __stdcall put_SortAscending (
        /*[in]*/ VARIANT_BOOL SortAscending ) = 0;
      virtual HRESULT __stdcall get_ShowHeader (
        /*[out,retval]*/ VARIANT_BOOL * ShowHeader ) = 0;
      virtual HRESULT __stdcall put_ShowHeader (
        /*[in]*/ VARIANT_BOOL ShowHeader ) = 0;
      virtual HRESULT __stdcall get_NumberOfHeaderRows (
        /*[out,retval]*/ long * NumberOfHeaderRows ) = 0;
      virtual HRESULT __stdcall put_NumberOfHeaderRows (
        /*[in]*/ long NumberOfHeaderRows ) = 0;
      virtual HRESULT __stdcall get_HeaderCell (
        /*[in]*/ VARIANT HeaderRowIndex,
        /*[in]*/ VARIANT ColumnIndex,
        /*[out,retval]*/ struct TableCell * * ppCell ) = 0;
};

enum PartListEndAngleRepresentationType
{
    igDefaultRepresentation = 0,
    igSignRepresentation = 1,
    igClockwiseRepresentation = 2
};

enum PartsListComponentType
{
    igPartsListComponentType_Parts = 0,
    igPartsListComponentType_Pipes = 1,
    igPartsListComponentType_PipeFittings = 2,
    igPartsListComponentType_FrameMembers = 3,
    igPartsListComponentType_Tubes = 4
};

enum GussetPlateUniquenessCriteria
{
    igUniquenessCriteriaGussetParameter = 0,
    igUniquenessCriteriaCuttingStock = 1
};

enum GussetPlateNamingFormat
{
    igNamingFormatParameter = 0,
    igNamingFormatThickness = 1,
    igNamingFormatMaterial = 2,
    igNamingFormatNumber = 3,
    igNamingFormatNone = 4
};

struct __declspec(uuid("86f045dc-ad81-11d3-a431-0004ac9695cb"))
_IPartsListAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetIsUpToDate))
    VARIANT_BOOL IsUpToDate;
    __declspec(property(get=GetAnchorPoint,put=PutAnchorPoint))
    enum TableAnchorPoint AnchorPoint;
    __declspec(property(get=GetCell))
    TableCellPtr Cell[][];
    __declspec(property(get=GetColumnHeaderPosition,put=PutColumnHeaderPosition))
    enum TitlePosition ColumnHeaderPosition;
    __declspec(property(get=GetColumns))
    TableColumnsPtr Columns;
    __declspec(property(get=GetDataFixedRowHeight,put=PutDataFixedRowHeight))
    double DataFixedRowHeight;
    __declspec(property(get=GetHeaderFixedRowHeight,put=PutHeaderFixedRowHeight))
    double HeaderFixedRowHeight;
    __declspec(property(get=GetMargin,put=PutMargin))
    double Margin;
    __declspec(property(get=GetMaximumHeight,put=PutMaximumHeight))
    double MaximumHeight;
    __declspec(property(get=GetMaximumRows,put=PutMaximumRows))
    long MaximumRows;
    __declspec(property(get=GetPageGap,put=PutPageGap))
    double PageGap;
    __declspec(property(get=GetPages))
    TablePagesPtr Pages;
    __declspec(property(get=GetReverseDisplayOrder,put=PutReverseDisplayOrder))
    VARIANT_BOOL ReverseDisplayOrder;
    __declspec(property(get=GetRows))
    TableRowsPtr Rows;
    __declspec(property(get=GetShowColumnHeader,put=PutShowColumnHeader))
    VARIANT_BOOL ShowColumnHeader;
    __declspec(property(get=GetTableStyle,put=PutTableStyle))
    _bstr_t TableStyle;
    __declspec(property(get=GetTitles))
    TableTitlesPtr Titles;
    __declspec(property(get=GetListType,put=PutListType))
    enum PartsListType ListType;
    __declspec(property(get=GetUseAssemblyItemNumbers,put=PutUseAssemblyItemNumbers))
    VARIANT_BOOL UseAssemblyItemNumbers;
    __declspec(property(get=GetShowTopAssembly,put=PutShowTopAssembly))
    VARIANT_BOOL ShowTopAssembly;
    __declspec(property(get=GetUseLevelBasedItemNumbers,put=PutUseLevelBasedItemNumbers))
    VARIANT_BOOL UseLevelBasedItemNumbers;
    __declspec(property(get=GetNumberOfHeaderRows,put=PutNumberOfHeaderRows))
    long NumberOfHeaderRows;
    __declspec(property(get=GetMaximumRowsFirstPage,put=PutMaximumRowsFirstPage))
    long MaximumRowsFirstPage;
    __declspec(property(get=GetMaximumRowsAdditionalPages,put=PutMaximumRowsAdditionalPages))
    long MaximumRowsAdditionalPages;
    __declspec(property(get=GetMaximumHeightFirstPage,put=PutMaximumHeightFirstPage))
    double MaximumHeightFirstPage;
    __declspec(property(get=GetMaximumHeightAdditionalPages,put=PutMaximumHeightAdditionalPages))
    double MaximumHeightAdditionalPages;
    __declspec(property(get=GetCreateNewSheetsForTable,put=PutCreateNewSheetsForTable))
    VARIANT_BOOL CreateNewSheetsForTable;
    __declspec(property(get=GetFirstSheetBackgroundName,put=PutFirstSheetBackgroundName))
    _bstr_t FirstSheetBackgroundName;
    __declspec(property(get=GetAdditionalSheetsBackgroundName,put=PutAdditionalSheetsBackgroundName))
    _bstr_t AdditionalSheetsBackgroundName;
    __declspec(property(get=GetShowSheetBackground,put=PutShowSheetBackground))
    VARIANT_BOOL ShowSheetBackground;
    __declspec(property(get=GetMaintainSheetsWithTableSize,put=PutMaintainSheetsWithTableSize))
    VARIANT_BOOL MaintainSheetsWithTableSize;
    __declspec(property(get=GetEnableGroups,put=PutEnableGroups))
    VARIANT_BOOL EnableGroups;
    __declspec(property(get=GetGroups))
    TableGroupsPtr Groups;
    __declspec(property(get=GetWrapDataCellsToNewRow,put=PutWrapDataCellsToNewRow))
    VARIANT_BOOL WrapDataCellsToNewRow;
    __declspec(property(get=GetFillEndOfTableWithBlankRows,put=PutFillEndOfTableWithBlankRows))
    VARIANT_BOOL FillEndOfTableWithBlankRows;
    __declspec(property(get=GetGroupByColumn,put=PutGroupByColumn))
    long GroupByColumn;
    __declspec(property(get=GetConfiguration,put=PutConfiguration))
    _bstr_t Configuration;
    __declspec(property(get=GetConvertDeletedPartsIntoUserDefinedRows,put=PutConvertDeletedPartsIntoUserDefinedRows))
    VARIANT_BOOL ConvertDeletedPartsIntoUserDefinedRows;
    __declspec(property(get=GetExpandWeldmentSubAssemblies,put=PutExpandWeldmentSubAssemblies))
    VARIANT_BOOL ExpandWeldmentSubAssemblies;
    __declspec(property(get=GetFrameRoughCutEndClearance,put=PutFrameRoughCutEndClearance))
    double FrameRoughCutEndClearance;
    __declspec(property(get=GetItemNumberIncrement,put=PutItemNumberIncrement))
    long ItemNumberIncrement;
    __declspec(property(get=GetItemNumberStart,put=PutItemNumberStart))
    long ItemNumberStart;
    __declspec(property(get=GetActive,put=PutActive))
    VARIANT_BOOL Active;
    __declspec(property(get=GetMarkAmbiguousValues,put=PutMarkAmbiguousValues))
    VARIANT_BOOL MarkAmbiguousValues;
    __declspec(property(get=GetMarkAmbiguousValuesString,put=PutMarkAmbiguousValuesString))
    _bstr_t MarkAmbiguousValuesString;
    __declspec(property(get=GetMarkUnballoonedItems,put=PutMarkUnballoonedItems))
    VARIANT_BOOL MarkUnballoonedItems;
    __declspec(property(get=GetMarkUnballoonedItemsString,put=PutMarkUnballoonedItemsString))
    _bstr_t MarkUnballoonedItemsString;
    __declspec(property(get=GetPipeRoughCutEndClearance,put=PutPipeRoughCutEndClearance))
    double PipeRoughCutEndClearance;
    __declspec(property(get=GetRenumberAccordingToSortOrder,put=PutRenumberAccordingToSortOrder))
    VARIANT_BOOL RenumberAccordingToSortOrder;
    __declspec(property(get=GetTotalLengthPartsList,put=PutTotalLengthPartsList))
    VARIANT_BOOL TotalLengthPartsList;
    __declspec(property(get=GetTotalLengthPartsList_ItemNumberSeparator,put=PutTotalLengthPartsList_ItemNumberSeparator))
    _bstr_t TotalLengthPartsList_ItemNumberSeparator;
    __declspec(property(get=GetUseUniquenessCriteria_CutLength,put=PutUseUniquenessCriteria_CutLength))
    VARIANT_BOOL UseUniquenessCriteria_CutLength;
    __declspec(property(get=GetUseUniquenessCriteria_Mass,put=PutUseUniquenessCriteria_Mass))
    VARIANT_BOOL UseUniquenessCriteria_Mass;
    __declspec(property(get=GetUseUniquenessCriteria_Miter,put=PutUseUniquenessCriteria_Miter))
    VARIANT_BOOL UseUniquenessCriteria_Miter;
    __declspec(property(get=GetTitleFixedRowHeight,put=PutTitleFixedRowHeight))
    double TitleFixedRowHeight;
    __declspec(property(get=GetMarginHorizontal,put=PutMarginHorizontal))
    double MarginHorizontal;
    __declspec(property(get=GetMarginVertical,put=PutMarginVertical))
    double MarginVertical;
    __declspec(property(get=GetUseUniquenessCriteria_TubeFlatLength,put=PutUseUniquenessCriteria_TubeFlatLength))
    VARIANT_BOOL UseUniquenessCriteria_TubeFlatLength;
    __declspec(property(get=GetUseUniquenessCriteria_TubeMass,put=PutUseUniquenessCriteria_TubeMass))
    VARIANT_BOOL UseUniquenessCriteria_TubeMass;
    __declspec(property(get=GetMarkAmbiguousValuesForTube,put=PutMarkAmbiguousValuesForTube))
    VARIANT_BOOL MarkAmbiguousValuesForTube;
    __declspec(property(get=GetMarkAmbiguousValuesStringForTube,put=PutMarkAmbiguousValuesStringForTube))
    _bstr_t MarkAmbiguousValuesStringForTube;
    __declspec(property(get=GetNonPlanerValues,put=PutNonPlanerValues))
    VARIANT_BOOL NonPlanerValues;
    __declspec(property(get=GetNonPlanerValuesString,put=PutNonPlanerValuesString))
    _bstr_t NonPlanerValuesString;
    __declspec(property(get=GetEndAngleRepresentation,put=PutEndAngleRepresentation))
    enum PartListEndAngleRepresentationType EndAngleRepresentation;
    __declspec(property(get=GetUseUniquenessCriteria_AngleOrientation,put=PutUseUniquenessCriteria_AngleOrientation))
    VARIANT_BOOL UseUniquenessCriteria_AngleOrientation;
    __declspec(property(get=GetZeroQuantity,put=PutZeroQuantity))
    VARIANT_BOOL ZeroQuantity;
    __declspec(property(get=GetZeroQuantityString,put=PutZeroQuantityString))
    _bstr_t ZeroQuantityString;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetAssemblyFileName))
    _bstr_t AssemblyFileName;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetModelLink))
    ModelLinkPtr ModelLink;
    __declspec(property(put=PutSavedSettings))
    _bstr_t SavedSettings;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    _bstr_t GetAssemblyFileName ( );
    IDispatchPtr GetParent ( );
    HRESULT Update ( );
    HRESULT CopyToClipboard ( );
    ModelLinkPtr GetModelLink ( );
    HRESULT Delete ( );
    void PutSavedSettings (
        _bstr_t _arg1 );
    HRESULT SetOrigin (
        double x,
        double y );
    HRESULT GetOrigin (
        double * x,
        double * y );
    HRESULT GetListOfSavedSettings (
        long * NumSavedSettings,
        SAFEARRAY * * ListOfSavedSettings );
    VARIANT_BOOL GetIsUpToDate ( );
    TableCellPtr GetCell (
        const _variant_t & RowIndex,
        const _variant_t & ColumnIndex );
    enum TitlePosition GetColumnHeaderPosition ( );
    void PutColumnHeaderPosition (
        enum TitlePosition ColumnHeaderPosition );
    TableColumnsPtr GetColumns ( );
    double GetMargin ( );
    void PutMargin (
        double Margin );
    long GetMaximumRows ( );
    void PutMaximumRows (
        long MaximumRows );
    double GetPageGap ( );
    void PutPageGap (
        double PageGap );
    VARIANT_BOOL GetReverseDisplayOrder ( );
    void PutReverseDisplayOrder (
        VARIANT_BOOL ReverseDisplayOrder );
    TableRowsPtr GetRows ( );
    VARIANT_BOOL GetShowColumnHeader ( );
    void PutShowColumnHeader (
        VARIANT_BOOL ShowColumnHeader );
    _bstr_t GetTableStyle ( );
    void PutTableStyle (
        _bstr_t TableStyle );
    TableTitlesPtr GetTitles ( );
    enum TableAnchorPoint GetAnchorPoint ( );
    void PutAnchorPoint (
        enum TableAnchorPoint AnchorPoint );
    TablePagesPtr GetPages ( );
    double GetHeaderFixedRowHeight ( );
    void PutHeaderFixedRowHeight (
        double HeaderFixedRowHeight );
    double GetDataFixedRowHeight ( );
    void PutDataFixedRowHeight (
        double DataFixedRowHeight );
    double GetMaximumHeight ( );
    void PutMaximumHeight (
        double MaximumHeight );
    HRESULT ConvertToTable ( );
    enum PartsListType GetListType ( );
    void PutListType (
        enum PartsListType ListType );
    VARIANT_BOOL GetUseAssemblyItemNumbers ( );
    void PutUseAssemblyItemNumbers (
        VARIANT_BOOL UseAssemblyItemNumbers );
    VARIANT_BOOL GetShowTopAssembly ( );
    void PutShowTopAssembly (
        VARIANT_BOOL ShowTopAssembly );
    VARIANT_BOOL GetUseLevelBasedItemNumbers ( );
    void PutUseLevelBasedItemNumbers (
        VARIANT_BOOL UseLevelBasedItemNumbers );
    long GetNumberOfHeaderRows ( );
    void PutNumberOfHeaderRows (
        long NumberOfHeaderRows );
    long GetMaximumRowsFirstPage ( );
    void PutMaximumRowsFirstPage (
        long MaximumRowsFirstPage );
    long GetMaximumRowsAdditionalPages ( );
    void PutMaximumRowsAdditionalPages (
        long MaximumRowsAdditionalPages );
    double GetMaximumHeightFirstPage ( );
    void PutMaximumHeightFirstPage (
        double MaximumHeightFirstPage );
    double GetMaximumHeightAdditionalPages ( );
    void PutMaximumHeightAdditionalPages (
        double MaximumHeightAdditionalPages );
    VARIANT_BOOL GetCreateNewSheetsForTable ( );
    void PutCreateNewSheetsForTable (
        VARIANT_BOOL CreateNewSheetsForTable );
    _bstr_t GetFirstSheetBackgroundName ( );
    void PutFirstSheetBackgroundName (
        _bstr_t FirstSheetBackgroundName );
    _bstr_t GetAdditionalSheetsBackgroundName ( );
    void PutAdditionalSheetsBackgroundName (
        _bstr_t AdditionalSheetsBackgroundName );
    VARIANT_BOOL GetShowSheetBackground ( );
    void PutShowSheetBackground (
        VARIANT_BOOL ShowSheetBackground );
    VARIANT_BOOL GetMaintainSheetsWithTableSize ( );
    void PutMaintainSheetsWithTableSize (
        VARIANT_BOOL MaintainSheetsWithTableSize );
    VARIANT_BOOL GetEnableGroups ( );
    void PutEnableGroups (
        VARIANT_BOOL EnableGroups );
    TableGroupsPtr GetGroups ( );
    VARIANT_BOOL GetWrapDataCellsToNewRow ( );
    void PutWrapDataCellsToNewRow (
        VARIANT_BOOL WrapDataCellsToNewRow );
    VARIANT_BOOL GetFillEndOfTableWithBlankRows ( );
    void PutFillEndOfTableWithBlankRows (
        VARIANT_BOOL FillEndOfTableWithBlankRows );
    long GetGroupByColumn ( );
    void PutGroupByColumn (
        long ColumnIndex );
    VARIANT_BOOL GetActive ( );
    void PutActive (
        VARIANT_BOOL Active );
    long GetItemNumberStart ( );
    void PutItemNumberStart (
        long ItemNumberStart );
    long GetItemNumberIncrement ( );
    void PutItemNumberIncrement (
        long ItemNumberIncrement );
    VARIANT_BOOL GetMarkUnballoonedItems ( );
    void PutMarkUnballoonedItems (
        VARIANT_BOOL MarkUnballoonedItems );
    _bstr_t GetMarkUnballoonedItemsString ( );
    void PutMarkUnballoonedItemsString (
        _bstr_t MarkUnballoonedItemsString );
    VARIANT_BOOL GetRenumberAccordingToSortOrder ( );
    void PutRenumberAccordingToSortOrder (
        VARIANT_BOOL RenumberAccordingToSortOrder );
    VARIANT_BOOL GetConvertDeletedPartsIntoUserDefinedRows ( );
    void PutConvertDeletedPartsIntoUserDefinedRows (
        VARIANT_BOOL ConvertDeletedPartsIntoUserDefinedRows );
    _bstr_t GetConfiguration ( );
    void PutConfiguration (
        _bstr_t Configuration );
    VARIANT_BOOL GetExpandWeldmentSubAssemblies ( );
    void PutExpandWeldmentSubAssemblies (
        VARIANT_BOOL ExpandWeldmentSubAssemblies );
    VARIANT_BOOL GetUseUniquenessCriteria_CutLength ( );
    void PutUseUniquenessCriteria_CutLength (
        VARIANT_BOOL UseUniquenessCriteria_CutLength );
    VARIANT_BOOL GetUseUniquenessCriteria_Mass ( );
    void PutUseUniquenessCriteria_Mass (
        VARIANT_BOOL UseUniquenessCriteria_Mass );
    VARIANT_BOOL GetUseUniquenessCriteria_Miter ( );
    void PutUseUniquenessCriteria_Miter (
        VARIANT_BOOL UseUniquenessCriteria_Miter );
    VARIANT_BOOL GetMarkAmbiguousValues ( );
    void PutMarkAmbiguousValues (
        VARIANT_BOOL MarkAmbiguousValues );
    _bstr_t GetMarkAmbiguousValuesString ( );
    void PutMarkAmbiguousValuesString (
        _bstr_t MarkAmbiguousValuesString );
    VARIANT_BOOL GetNonPlanerValues ( );
    void PutNonPlanerValues (
        VARIANT_BOOL NonPlanerValues );
    _bstr_t GetNonPlanerValuesString ( );
    void PutNonPlanerValuesString (
        _bstr_t NonPlanerValuesString );
    enum PartListEndAngleRepresentationType GetEndAngleRepresentation ( );
    void PutEndAngleRepresentation (
        enum PartListEndAngleRepresentationType EndAngleRepresentation );
    VARIANT_BOOL GetUseUniquenessCriteria_AngleOrientation ( );
    void PutUseUniquenessCriteria_AngleOrientation (
        VARIANT_BOOL UseUniquenessCriteria_AngleOrientation );
    VARIANT_BOOL GetTotalLengthPartsList ( );
    void PutTotalLengthPartsList (
        VARIANT_BOOL TotalLengthPartsList );
    _bstr_t GetTotalLengthPartsList_ItemNumberSeparator ( );
    void PutTotalLengthPartsList_ItemNumberSeparator (
        _bstr_t TotalLengthPartsList_ItemNumberSeparator );
    HRESULT SetShowComponent (
        enum PartsListComponentType ComponentType,
        VARIANT_BOOL ShowComponent );
    HRESULT SetComponentSortPriority (
        enum PartsListComponentType ComponentType,
        long ComponentSortPriority );
    double GetPipeRoughCutEndClearance ( );
    void PutPipeRoughCutEndClearance (
        double PipeRoughCutEndClearance );
    double GetFrameRoughCutEndClearance ( );
    void PutFrameRoughCutEndClearance (
        double FrameRoughCutEndClearance );
    double GetTitleFixedRowHeight ( );
    void PutTitleFixedRowHeight (
        double TitleFixedRowHeight );
    double GetMarginHorizontal ( );
    void PutMarginHorizontal (
        double MarginHorizontal );
    double GetMarginVertical ( );
    void PutMarginVertical (
        double MarginVertical );
    VARIANT_BOOL GetUseUniquenessCriteria_TubeFlatLength ( );
    void PutUseUniquenessCriteria_TubeFlatLength (
        VARIANT_BOOL UseUniquenessCriteria_TubeFlatLength );
    VARIANT_BOOL GetUseUniquenessCriteria_TubeMass ( );
    void PutUseUniquenessCriteria_TubeMass (
        VARIANT_BOOL UseUniquenessCriteria_TubeMass );
    VARIANT_BOOL GetMarkAmbiguousValuesForTube ( );
    void PutMarkAmbiguousValuesForTube (
        VARIANT_BOOL MarkAmbiguousValuesForTube );
    _bstr_t GetMarkAmbiguousValuesStringForTube ( );
    void PutMarkAmbiguousValuesStringForTube (
        _bstr_t MarkAmbiguousValuesStringForTube );
    VARIANT_BOOL GetZeroQuantity ( );
    void PutZeroQuantity (
        VARIANT_BOOL ZeroQuantityValues );
    _bstr_t GetZeroQuantityString ( );
    void PutZeroQuantityString (
        _bstr_t ZeroQuantityString );
    VARIANT_BOOL IsFamilyOfAssemblyPartsList ( );
    HRESULT GetAllFamilyOfAssemblyPartsListMembers (
        struct DrawingView * DrawingView,
        long * NumOfMembers,
        SAFEARRAY * * ListOfMembers );
    HRESULT GetSelectedFamilyOfAssemblyPartsListMembers (
        long * NumOfMembers,
        SAFEARRAY * * ListOfMembers );
    HRESULT SetSelectedFamilyOfAssemblyPartsListMembers (
        long * NumOfMembers,
        SAFEARRAY * * ListOfMembers );
    _bstr_t GetName ( );
    HRESULT GetUniquenessCriteria_Gusset (
        VARIANT_BOOL * UseGussetMass,
        enum GussetPlateUniquenessCriteria * GussetPlateUniquenessCriteriaType );
    HRESULT SetUniquenessCriteria_Gusset (
        VARIANT_BOOL UseGussetMass,
        enum GussetPlateUniquenessCriteria GussetPlateUniquenessCriteriaType );
    HRESULT GetGussetPlateNamingFormat (
        BSTR * Name,
        enum GussetPlateNamingFormat * GussetPlateNamingFormat_Param1,
        enum GussetPlateNamingFormat * GussetPlateNamingFormat_Param2,
        enum GussetPlateNamingFormat * GussetPlateNamingFormat_Param3 );
    HRESULT SetGussetPlateNamingFormat (
        _bstr_t Name,
        enum GussetPlateNamingFormat GussetPlateNamingFormat_Param1,
        enum GussetPlateNamingFormat GussetPlateNamingFormat_Param2,
        enum GussetPlateNamingFormat GussetPlateNamingFormat_Param3 );
    VARIANT_BOOL IsTableSpecifiedByHeight ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_AssemblyFileName (
        /*[out,retval]*/ BSTR * AssemblyFileName ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Update ( ) = 0;
      virtual HRESULT __stdcall raw_CopyToClipboard ( ) = 0;
      virtual HRESULT __stdcall get_ModelLink (
        /*[out,retval]*/ struct ModelLink * * ppModelLink ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall put_SavedSettings (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall raw_SetOrigin (
        /*[in]*/ double x,
        /*[in]*/ double y ) = 0;
      virtual HRESULT __stdcall raw_GetOrigin (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall raw_GetListOfSavedSettings (
        /*[out]*/ long * NumSavedSettings,
        /*[in,out]*/ SAFEARRAY * * ListOfSavedSettings ) = 0;
      virtual HRESULT __stdcall get_IsUpToDate (
        /*[out,retval]*/ VARIANT_BOOL * UpToDate ) = 0;
      virtual HRESULT __stdcall get_Cell (
        /*[in]*/ VARIANT RowIndex,
        /*[in]*/ VARIANT ColumnIndex,
        /*[out,retval]*/ struct TableCell * * ppCell ) = 0;
      virtual HRESULT __stdcall get_ColumnHeaderPosition (
        /*[out,retval]*/ enum TitlePosition * ColumnHeaderPosition ) = 0;
      virtual HRESULT __stdcall put_ColumnHeaderPosition (
        /*[in]*/ enum TitlePosition ColumnHeaderPosition ) = 0;
      virtual HRESULT __stdcall get_Columns (
        /*[out,retval]*/ struct TableColumns * * Columns ) = 0;
      virtual HRESULT __stdcall get_Margin (
        /*[out,retval]*/ double * Margin ) = 0;
      virtual HRESULT __stdcall put_Margin (
        /*[in]*/ double Margin ) = 0;
      virtual HRESULT __stdcall get_MaximumRows (
        /*[out,retval]*/ long * MaximumRows ) = 0;
      virtual HRESULT __stdcall put_MaximumRows (
        /*[in]*/ long MaximumRows ) = 0;
      virtual HRESULT __stdcall get_PageGap (
        /*[out,retval]*/ double * PageGap ) = 0;
      virtual HRESULT __stdcall put_PageGap (
        /*[in]*/ double PageGap ) = 0;
      virtual HRESULT __stdcall get_ReverseDisplayOrder (
        /*[out,retval]*/ VARIANT_BOOL * ReverseDisplayOrder ) = 0;
      virtual HRESULT __stdcall put_ReverseDisplayOrder (
        /*[in]*/ VARIANT_BOOL ReverseDisplayOrder ) = 0;
      virtual HRESULT __stdcall get_Rows (
        /*[out,retval]*/ struct TableRows * * Rows ) = 0;
      virtual HRESULT __stdcall get_ShowColumnHeader (
        /*[out,retval]*/ VARIANT_BOOL * ShowColumnHeader ) = 0;
      virtual HRESULT __stdcall put_ShowColumnHeader (
        /*[in]*/ VARIANT_BOOL ShowColumnHeader ) = 0;
      virtual HRESULT __stdcall get_TableStyle (
        /*[out,retval]*/ BSTR * TableStyle ) = 0;
      virtual HRESULT __stdcall put_TableStyle (
        /*[in]*/ BSTR TableStyle ) = 0;
      virtual HRESULT __stdcall get_Titles (
        /*[out,retval]*/ struct TableTitles * * Titles ) = 0;
      virtual HRESULT __stdcall get_AnchorPoint (
        /*[out,retval]*/ enum TableAnchorPoint * AnchorPoint ) = 0;
      virtual HRESULT __stdcall put_AnchorPoint (
        /*[in]*/ enum TableAnchorPoint AnchorPoint ) = 0;
      virtual HRESULT __stdcall get_Pages (
        /*[out,retval]*/ struct TablePages * * Rows ) = 0;
      virtual HRESULT __stdcall get_HeaderFixedRowHeight (
        /*[out,retval]*/ double * HeaderFixedRowHeight ) = 0;
      virtual HRESULT __stdcall put_HeaderFixedRowHeight (
        /*[in]*/ double HeaderFixedRowHeight ) = 0;
      virtual HRESULT __stdcall get_DataFixedRowHeight (
        /*[out,retval]*/ double * DataFixedRowHeight ) = 0;
      virtual HRESULT __stdcall put_DataFixedRowHeight (
        /*[in]*/ double DataFixedRowHeight ) = 0;
      virtual HRESULT __stdcall get_MaximumHeight (
        /*[out,retval]*/ double * MaximumHeight ) = 0;
      virtual HRESULT __stdcall put_MaximumHeight (
        /*[in]*/ double MaximumHeight ) = 0;
      virtual HRESULT __stdcall raw_ConvertToTable ( ) = 0;
      virtual HRESULT __stdcall get_ListType (
        /*[out,retval]*/ enum PartsListType * ListType ) = 0;
      virtual HRESULT __stdcall put_ListType (
        /*[in]*/ enum PartsListType ListType ) = 0;
      virtual HRESULT __stdcall get_UseAssemblyItemNumbers (
        /*[out,retval]*/ VARIANT_BOOL * UseAssemblyItemNumbers ) = 0;
      virtual HRESULT __stdcall put_UseAssemblyItemNumbers (
        /*[in]*/ VARIANT_BOOL UseAssemblyItemNumbers ) = 0;
      virtual HRESULT __stdcall get_ShowTopAssembly (
        /*[out,retval]*/ VARIANT_BOOL * ShowTopAssembly ) = 0;
      virtual HRESULT __stdcall put_ShowTopAssembly (
        /*[in]*/ VARIANT_BOOL ShowTopAssembly ) = 0;
      virtual HRESULT __stdcall get_UseLevelBasedItemNumbers (
        /*[out,retval]*/ VARIANT_BOOL * UseLevelBasedItemNumbers ) = 0;
      virtual HRESULT __stdcall put_UseLevelBasedItemNumbers (
        /*[in]*/ VARIANT_BOOL UseLevelBasedItemNumbers ) = 0;
      virtual HRESULT __stdcall get_NumberOfHeaderRows (
        /*[out,retval]*/ long * NumberOfHeaderRows ) = 0;
      virtual HRESULT __stdcall put_NumberOfHeaderRows (
        /*[in]*/ long NumberOfHeaderRows ) = 0;
      virtual HRESULT __stdcall get_MaximumRowsFirstPage (
        /*[out,retval]*/ long * MaximumRowsFirstPage ) = 0;
      virtual HRESULT __stdcall put_MaximumRowsFirstPage (
        /*[in]*/ long MaximumRowsFirstPage ) = 0;
      virtual HRESULT __stdcall get_MaximumRowsAdditionalPages (
        /*[out,retval]*/ long * MaximumRowsAdditionalPages ) = 0;
      virtual HRESULT __stdcall put_MaximumRowsAdditionalPages (
        /*[in]*/ long MaximumRowsAdditionalPages ) = 0;
      virtual HRESULT __stdcall get_MaximumHeightFirstPage (
        /*[out,retval]*/ double * MaximumHeightFirstPage ) = 0;
      virtual HRESULT __stdcall put_MaximumHeightFirstPage (
        /*[in]*/ double MaximumHeightFirstPage ) = 0;
      virtual HRESULT __stdcall get_MaximumHeightAdditionalPages (
        /*[out,retval]*/ double * MaximumHeightAdditionalPages ) = 0;
      virtual HRESULT __stdcall put_MaximumHeightAdditionalPages (
        /*[in]*/ double MaximumHeightAdditionalPages ) = 0;
      virtual HRESULT __stdcall get_CreateNewSheetsForTable (
        /*[out,retval]*/ VARIANT_BOOL * CreateNewSheetsForTable ) = 0;
      virtual HRESULT __stdcall put_CreateNewSheetsForTable (
        /*[in]*/ VARIANT_BOOL CreateNewSheetsForTable ) = 0;
      virtual HRESULT __stdcall get_FirstSheetBackgroundName (
        /*[out,retval]*/ BSTR * FirstSheetBackgroundName ) = 0;
      virtual HRESULT __stdcall put_FirstSheetBackgroundName (
        /*[in]*/ BSTR FirstSheetBackgroundName ) = 0;
      virtual HRESULT __stdcall get_AdditionalSheetsBackgroundName (
        /*[out,retval]*/ BSTR * AdditionalSheetsBackgroundName ) = 0;
      virtual HRESULT __stdcall put_AdditionalSheetsBackgroundName (
        /*[in]*/ BSTR AdditionalSheetsBackgroundName ) = 0;
      virtual HRESULT __stdcall get_ShowSheetBackground (
        /*[out,retval]*/ VARIANT_BOOL * ShowSheetBackground ) = 0;
      virtual HRESULT __stdcall put_ShowSheetBackground (
        /*[in]*/ VARIANT_BOOL ShowSheetBackground ) = 0;
      virtual HRESULT __stdcall get_MaintainSheetsWithTableSize (
        /*[out,retval]*/ VARIANT_BOOL * MaintainSheetsWithTableSize ) = 0;
      virtual HRESULT __stdcall put_MaintainSheetsWithTableSize (
        /*[in]*/ VARIANT_BOOL MaintainSheetsWithTableSize ) = 0;
      virtual HRESULT __stdcall get_EnableGroups (
        /*[out,retval]*/ VARIANT_BOOL * EnableGroups ) = 0;
      virtual HRESULT __stdcall put_EnableGroups (
        /*[in]*/ VARIANT_BOOL EnableGroups ) = 0;
      virtual HRESULT __stdcall get_Groups (
        /*[out,retval]*/ struct TableGroups * * Groups ) = 0;
      virtual HRESULT __stdcall get_WrapDataCellsToNewRow (
        /*[out,retval]*/ VARIANT_BOOL * WrapDataCellsToNewRow ) = 0;
      virtual HRESULT __stdcall put_WrapDataCellsToNewRow (
        /*[in]*/ VARIANT_BOOL WrapDataCellsToNewRow ) = 0;
      virtual HRESULT __stdcall get_FillEndOfTableWithBlankRows (
        /*[out,retval]*/ VARIANT_BOOL * FillEndOfTableWithBlankRows ) = 0;
      virtual HRESULT __stdcall put_FillEndOfTableWithBlankRows (
        /*[in]*/ VARIANT_BOOL FillEndOfTableWithBlankRows ) = 0;
      virtual HRESULT __stdcall get_GroupByColumn (
        /*[out,retval]*/ long * ColumnIndex ) = 0;
      virtual HRESULT __stdcall put_GroupByColumn (
        /*[in]*/ long ColumnIndex ) = 0;
      virtual HRESULT __stdcall get_Active (
        /*[out,retval]*/ VARIANT_BOOL * Active ) = 0;
      virtual HRESULT __stdcall put_Active (
        /*[in]*/ VARIANT_BOOL Active ) = 0;
      virtual HRESULT __stdcall get_ItemNumberStart (
        /*[out,retval]*/ long * ItemNumberStart ) = 0;
      virtual HRESULT __stdcall put_ItemNumberStart (
        /*[in]*/ long ItemNumberStart ) = 0;
      virtual HRESULT __stdcall get_ItemNumberIncrement (
        /*[out,retval]*/ long * ItemNumberIncrement ) = 0;
      virtual HRESULT __stdcall put_ItemNumberIncrement (
        /*[in]*/ long ItemNumberIncrement ) = 0;
      virtual HRESULT __stdcall get_MarkUnballoonedItems (
        /*[out,retval]*/ VARIANT_BOOL * MarkUnballoonedItems ) = 0;
      virtual HRESULT __stdcall put_MarkUnballoonedItems (
        /*[in]*/ VARIANT_BOOL MarkUnballoonedItems ) = 0;
      virtual HRESULT __stdcall get_MarkUnballoonedItemsString (
        /*[out,retval]*/ BSTR * MarkUnballoonedItemsString ) = 0;
      virtual HRESULT __stdcall put_MarkUnballoonedItemsString (
        /*[in]*/ BSTR MarkUnballoonedItemsString ) = 0;
      virtual HRESULT __stdcall get_RenumberAccordingToSortOrder (
        /*[out,retval]*/ VARIANT_BOOL * RenumberAccordingToSortOrder ) = 0;
      virtual HRESULT __stdcall put_RenumberAccordingToSortOrder (
        /*[in]*/ VARIANT_BOOL RenumberAccordingToSortOrder ) = 0;
      virtual HRESULT __stdcall get_ConvertDeletedPartsIntoUserDefinedRows (
        /*[out,retval]*/ VARIANT_BOOL * ConvertDeletedPartsIntoUserDefinedRows ) = 0;
      virtual HRESULT __stdcall put_ConvertDeletedPartsIntoUserDefinedRows (
        /*[in]*/ VARIANT_BOOL ConvertDeletedPartsIntoUserDefinedRows ) = 0;
      virtual HRESULT __stdcall get_Configuration (
        /*[out,retval]*/ BSTR * Configuration ) = 0;
      virtual HRESULT __stdcall put_Configuration (
        /*[in]*/ BSTR Configuration ) = 0;
      virtual HRESULT __stdcall get_ExpandWeldmentSubAssemblies (
        /*[out,retval]*/ VARIANT_BOOL * ExpandWeldmentSubAssemblies ) = 0;
      virtual HRESULT __stdcall put_ExpandWeldmentSubAssemblies (
        /*[in]*/ VARIANT_BOOL ExpandWeldmentSubAssemblies ) = 0;
      virtual HRESULT __stdcall get_UseUniquenessCriteria_CutLength (
        /*[out,retval]*/ VARIANT_BOOL * UseUniquenessCriteria_CutLength ) = 0;
      virtual HRESULT __stdcall put_UseUniquenessCriteria_CutLength (
        /*[in]*/ VARIANT_BOOL UseUniquenessCriteria_CutLength ) = 0;
      virtual HRESULT __stdcall get_UseUniquenessCriteria_Mass (
        /*[out,retval]*/ VARIANT_BOOL * UseUniquenessCriteria_Mass ) = 0;
      virtual HRESULT __stdcall put_UseUniquenessCriteria_Mass (
        /*[in]*/ VARIANT_BOOL UseUniquenessCriteria_Mass ) = 0;
      virtual HRESULT __stdcall get_UseUniquenessCriteria_Miter (
        /*[out,retval]*/ VARIANT_BOOL * UseUniquenessCriteria_Miter ) = 0;
      virtual HRESULT __stdcall put_UseUniquenessCriteria_Miter (
        /*[in]*/ VARIANT_BOOL UseUniquenessCriteria_Miter ) = 0;
      virtual HRESULT __stdcall get_MarkAmbiguousValues (
        /*[out,retval]*/ VARIANT_BOOL * MarkAmbiguousValues ) = 0;
      virtual HRESULT __stdcall put_MarkAmbiguousValues (
        /*[in]*/ VARIANT_BOOL MarkAmbiguousValues ) = 0;
      virtual HRESULT __stdcall get_MarkAmbiguousValuesString (
        /*[out,retval]*/ BSTR * MarkAmbiguousValuesString ) = 0;
      virtual HRESULT __stdcall put_MarkAmbiguousValuesString (
        /*[in]*/ BSTR MarkAmbiguousValuesString ) = 0;
      virtual HRESULT __stdcall get_NonPlanerValues (
        /*[out,retval]*/ VARIANT_BOOL * NonPlanerValues ) = 0;
      virtual HRESULT __stdcall put_NonPlanerValues (
        /*[in]*/ VARIANT_BOOL NonPlanerValues ) = 0;
      virtual HRESULT __stdcall get_NonPlanerValuesString (
        /*[out,retval]*/ BSTR * NonPlanerValuesString ) = 0;
      virtual HRESULT __stdcall put_NonPlanerValuesString (
        /*[in]*/ BSTR NonPlanerValuesString ) = 0;
      virtual HRESULT __stdcall get_EndAngleRepresentation (
        /*[out,retval]*/ enum PartListEndAngleRepresentationType * EndAngleRepresentation ) = 0;
      virtual HRESULT __stdcall put_EndAngleRepresentation (
        /*[in]*/ enum PartListEndAngleRepresentationType EndAngleRepresentation ) = 0;
      virtual HRESULT __stdcall get_UseUniquenessCriteria_AngleOrientation (
        /*[out,retval]*/ VARIANT_BOOL * UseUniquenessCriteria_AngleOrientation ) = 0;
      virtual HRESULT __stdcall put_UseUniquenessCriteria_AngleOrientation (
        /*[in]*/ VARIANT_BOOL UseUniquenessCriteria_AngleOrientation ) = 0;
      virtual HRESULT __stdcall get_TotalLengthPartsList (
        /*[out,retval]*/ VARIANT_BOOL * TotalLengthPartsList ) = 0;
      virtual HRESULT __stdcall put_TotalLengthPartsList (
        /*[in]*/ VARIANT_BOOL TotalLengthPartsList ) = 0;
      virtual HRESULT __stdcall get_TotalLengthPartsList_ItemNumberSeparator (
        /*[out,retval]*/ BSTR * TotalLengthPartsList_ItemNumberSeparator ) = 0;
      virtual HRESULT __stdcall put_TotalLengthPartsList_ItemNumberSeparator (
        /*[in]*/ BSTR TotalLengthPartsList_ItemNumberSeparator ) = 0;
      virtual HRESULT __stdcall raw_SetShowComponent (
        /*[in]*/ enum PartsListComponentType ComponentType,
        /*[in]*/ VARIANT_BOOL ShowComponent ) = 0;
      virtual HRESULT __stdcall raw_SetComponentSortPriority (
        /*[in]*/ enum PartsListComponentType ComponentType,
        /*[in]*/ long ComponentSortPriority ) = 0;
      virtual HRESULT __stdcall get_PipeRoughCutEndClearance (
        /*[out,retval]*/ double * PipeRoughCutEndClearance ) = 0;
      virtual HRESULT __stdcall put_PipeRoughCutEndClearance (
        /*[in]*/ double PipeRoughCutEndClearance ) = 0;
      virtual HRESULT __stdcall get_FrameRoughCutEndClearance (
        /*[out,retval]*/ double * FrameRoughCutEndClearance ) = 0;
      virtual HRESULT __stdcall put_FrameRoughCutEndClearance (
        /*[in]*/ double FrameRoughCutEndClearance ) = 0;
      virtual HRESULT __stdcall get_TitleFixedRowHeight (
        /*[out,retval]*/ double * TitleFixedRowHeight ) = 0;
      virtual HRESULT __stdcall put_TitleFixedRowHeight (
        /*[in]*/ double TitleFixedRowHeight ) = 0;
      virtual HRESULT __stdcall get_MarginHorizontal (
        /*[out,retval]*/ double * MarginHorizontal ) = 0;
      virtual HRESULT __stdcall put_MarginHorizontal (
        /*[in]*/ double MarginHorizontal ) = 0;
      virtual HRESULT __stdcall get_MarginVertical (
        /*[out,retval]*/ double * MarginVertical ) = 0;
      virtual HRESULT __stdcall put_MarginVertical (
        /*[in]*/ double MarginVertical ) = 0;
      virtual HRESULT __stdcall get_UseUniquenessCriteria_TubeFlatLength (
        /*[out,retval]*/ VARIANT_BOOL * UseUniquenessCriteria_TubeFlatLength ) = 0;
      virtual HRESULT __stdcall put_UseUniquenessCriteria_TubeFlatLength (
        /*[in]*/ VARIANT_BOOL UseUniquenessCriteria_TubeFlatLength ) = 0;
      virtual HRESULT __stdcall get_UseUniquenessCriteria_TubeMass (
        /*[out,retval]*/ VARIANT_BOOL * UseUniquenessCriteria_TubeMass ) = 0;
      virtual HRESULT __stdcall put_UseUniquenessCriteria_TubeMass (
        /*[in]*/ VARIANT_BOOL UseUniquenessCriteria_TubeMass ) = 0;
      virtual HRESULT __stdcall get_MarkAmbiguousValuesForTube (
        /*[out,retval]*/ VARIANT_BOOL * MarkAmbiguousValuesForTube ) = 0;
      virtual HRESULT __stdcall put_MarkAmbiguousValuesForTube (
        /*[in]*/ VARIANT_BOOL MarkAmbiguousValuesForTube ) = 0;
      virtual HRESULT __stdcall get_MarkAmbiguousValuesStringForTube (
        /*[out,retval]*/ BSTR * MarkAmbiguousValuesStringForTube ) = 0;
      virtual HRESULT __stdcall put_MarkAmbiguousValuesStringForTube (
        /*[in]*/ BSTR MarkAmbiguousValuesStringForTube ) = 0;
      virtual HRESULT __stdcall get_ZeroQuantity (
        /*[out,retval]*/ VARIANT_BOOL * ZeroQuantityValues ) = 0;
      virtual HRESULT __stdcall put_ZeroQuantity (
        /*[in]*/ VARIANT_BOOL ZeroQuantityValues ) = 0;
      virtual HRESULT __stdcall get_ZeroQuantityString (
        /*[out,retval]*/ BSTR * ZeroQuantityString ) = 0;
      virtual HRESULT __stdcall put_ZeroQuantityString (
        /*[in]*/ BSTR ZeroQuantityString ) = 0;
      virtual HRESULT __stdcall raw_IsFamilyOfAssemblyPartsList (
        /*[out,retval]*/ VARIANT_BOOL * IsFamilyOfAssemblyPartsList ) = 0;
      virtual HRESULT __stdcall raw_GetAllFamilyOfAssemblyPartsListMembers (
        /*[in]*/ struct DrawingView * DrawingView,
        /*[out]*/ long * NumOfMembers,
        /*[in,out]*/ SAFEARRAY * * ListOfMembers ) = 0;
      virtual HRESULT __stdcall raw_GetSelectedFamilyOfAssemblyPartsListMembers (
        /*[out]*/ long * NumOfMembers,
        /*[in,out]*/ SAFEARRAY * * ListOfMembers ) = 0;
      virtual HRESULT __stdcall raw_SetSelectedFamilyOfAssemblyPartsListMembers (
        /*[in]*/ long * NumOfMembers,
        /*[in]*/ SAFEARRAY * * ListOfMembers ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall raw_GetUniquenessCriteria_Gusset (
        /*[out]*/ VARIANT_BOOL * UseGussetMass,
        /*[out]*/ enum GussetPlateUniquenessCriteria * GussetPlateUniquenessCriteriaType ) = 0;
      virtual HRESULT __stdcall raw_SetUniquenessCriteria_Gusset (
        /*[in]*/ VARIANT_BOOL UseGussetMass,
        /*[in]*/ enum GussetPlateUniquenessCriteria GussetPlateUniquenessCriteriaType ) = 0;
      virtual HRESULT __stdcall raw_GetGussetPlateNamingFormat (
        /*[out]*/ BSTR * Name,
        /*[out]*/ enum GussetPlateNamingFormat * GussetPlateNamingFormat_Param1,
        /*[out]*/ enum GussetPlateNamingFormat * GussetPlateNamingFormat_Param2,
        /*[out]*/ enum GussetPlateNamingFormat * GussetPlateNamingFormat_Param3 ) = 0;
      virtual HRESULT __stdcall raw_SetGussetPlateNamingFormat (
        /*[in]*/ BSTR Name,
        /*[in]*/ enum GussetPlateNamingFormat GussetPlateNamingFormat_Param1,
        /*[in]*/ enum GussetPlateNamingFormat GussetPlateNamingFormat_Param2,
        /*[in]*/ enum GussetPlateNamingFormat GussetPlateNamingFormat_Param3 ) = 0;
      virtual HRESULT __stdcall raw_IsTableSpecifiedByHeight (
        /*[out,retval]*/ VARIANT_BOOL * pvbIsTableSpecifiedByHeight ) = 0;
};

enum DraftGlobalConstants
{
    seDraftSelectToolWireFrameFilter = 1,
    seDraftSelectToolRelationHandleFilter = 2,
    seDraftSelectToolDimensionAnnotationFilter = 3,
    seDraftSelectToolTextFilter = 4,
    seDraftSelectToolDrawingViewFilter = 5,
    seDraftSelectToolActiveLayerFilter = 6,
    seDraftTableShowPropertyText = 7
};

struct __declspec(uuid("4ccc6304-ee3b-11d4-a556-0004ac9695cb"))
HoleTables : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    HoleTablePtr Item (
        const _variant_t & Index );
};

struct __declspec(uuid("4ccc6305-ee3b-11d4-a556-0004ac9695cb"))
HoleTable : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetHoles))
    HTHolesPtr Holes;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(put=PutSavedSettings))
    _bstr_t SavedSettings;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HTHolesPtr GetHoles ( );
    HRESULT Update ( );
    HRESULT Delete ( );
    void PutSavedSettings (
        _bstr_t _arg1 );
};

struct __declspec(uuid("4ccc6300-ee3b-11d4-a556-0004ac9695cb"))
_IHoleTablesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    HoleTablePtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * ppApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * ppParent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pCount ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct HoleTable * * ppItem ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pUnknown ) = 0;
};

struct __declspec(uuid("4ccc6306-ee3b-11d4-a556-0004ac9695cb"))
HTHoles : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    HTHolePtr Item (
        const _variant_t & Index );
};

struct __declspec(uuid("4ccc6301-ee3b-11d4-a556-0004ac9695cb"))
_IHoleTableAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetHoles))
    HTHolesPtr Holes;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(put=PutSavedSettings))
    _bstr_t SavedSettings;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HTHolesPtr GetHoles ( );
    HRESULT Update ( );
    HRESULT Delete ( );
    void PutSavedSettings (
        _bstr_t _arg1 );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * ppApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * ppParent ) = 0;
      virtual HRESULT __stdcall get_Holes (
        /*[out,retval]*/ struct HTHoles * * Holes ) = 0;
      virtual HRESULT __stdcall raw_Update ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall put_SavedSettings (
        /*[in]*/ BSTR _arg1 ) = 0;
};

struct __declspec(uuid("4ccc6307-ee3b-11d4-a556-0004ac9695cb"))
HTHole : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAngularLocation))
    double AngularLocation;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetCounterboreDepth))
    double CounterboreDepth;
    __declspec(property(get=GetCounterboreSize))
    double CounterboreSize;
    __declspec(property(get=GetCountersinkAngle))
    double CountersinkAngle;
    __declspec(property(get=GetCountersinkSize))
    double CountersinkSize;
    __declspec(property(get=GetDepth))
    double Depth;
    __declspec(property(get=GetLabel))
    _bstr_t Label;
    __declspec(property(get=GetNotes1,put=PutNotes1))
    _bstr_t Notes1;
    __declspec(property(get=GetNotes2,put=PutNotes2))
    _bstr_t Notes2;
    __declspec(property(get=GetNotes3,put=PutNotes3))
    _bstr_t Notes3;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetPrefix,put=PutPrefix))
    _bstr_t Prefix;
    __declspec(property(get=GetRadialLocation))
    double RadialLocation;
    __declspec(property(get=GetSize))
    double Size;
    __declspec(property(get=GetSuffix,put=PutSuffix))
    _bstr_t Suffix;
    __declspec(property(get=GetThreadSize))
    _bstr_t ThreadSize;
    __declspec(property(get=GetType))
    enum HTHoleTypeConstants Type;
    __declspec(property(get=GetXLocation))
    double XLocation;
    __declspec(property(get=GetYLocation))
    double YLocation;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    double GetXLocation ( );
    double GetYLocation ( );
    double GetRadialLocation ( );
    double GetAngularLocation ( );
    double GetSize ( );
    double GetDepth ( );
    double GetCounterboreSize ( );
    double GetCounterboreDepth ( );
    double GetCountersinkSize ( );
    double GetCountersinkAngle ( );
    _bstr_t GetLabel ( );
    enum HTHoleTypeConstants GetType ( );
    _bstr_t GetThreadSize ( );
    void PutNotes1 (
        _bstr_t _arg1 );
    _bstr_t GetNotes1 ( );
    void PutNotes2 (
        _bstr_t _arg1 );
    _bstr_t GetNotes2 ( );
    void PutNotes3 (
        _bstr_t _arg1 );
    _bstr_t GetNotes3 ( );
    void PutSuffix (
        _bstr_t _arg1 );
    _bstr_t GetSuffix ( );
    void PutPrefix (
        _bstr_t _arg1 );
    _bstr_t GetPrefix ( );
};

struct __declspec(uuid("4ccc6302-ee3b-11d4-a556-0004ac9695cb"))
_IHTHolesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    HTHolePtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * ppApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * ppParent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pCount ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct HTHole * * ppItem ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pUnknown ) = 0;
};

enum HTHoleTypeConstants
{
    seHTOther = 0,
    seHTSimple = 1,
    seHTCounterbore = 2,
    seHTCountersink = 3,
    seHTSimpleThreaded = 4,
    seHTCounterboreThreaded = 5,
    seHTCountersinkThreaded = 6,
    seHTCounterdrill = 7,
    seHTCounterdrillThreaded = 8
};

struct __declspec(uuid("4ccc6303-ee3b-11d4-a556-0004ac9695cb"))
_IHTHoleAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetAngularLocation))
    double AngularLocation;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetCounterboreDepth))
    double CounterboreDepth;
    __declspec(property(get=GetCounterboreSize))
    double CounterboreSize;
    __declspec(property(get=GetCountersinkAngle))
    double CountersinkAngle;
    __declspec(property(get=GetCountersinkSize))
    double CountersinkSize;
    __declspec(property(get=GetDepth))
    double Depth;
    __declspec(property(get=GetLabel))
    _bstr_t Label;
    __declspec(property(get=GetNotes1,put=PutNotes1))
    _bstr_t Notes1;
    __declspec(property(get=GetNotes2,put=PutNotes2))
    _bstr_t Notes2;
    __declspec(property(get=GetNotes3,put=PutNotes3))
    _bstr_t Notes3;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetPrefix,put=PutPrefix))
    _bstr_t Prefix;
    __declspec(property(get=GetRadialLocation))
    double RadialLocation;
    __declspec(property(get=GetSize))
    double Size;
    __declspec(property(get=GetSuffix,put=PutSuffix))
    _bstr_t Suffix;
    __declspec(property(get=GetThreadSize))
    _bstr_t ThreadSize;
    __declspec(property(get=GetType))
    enum HTHoleTypeConstants Type;
    __declspec(property(get=GetXLocation))
    double XLocation;
    __declspec(property(get=GetYLocation))
    double YLocation;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    double GetXLocation ( );
    double GetYLocation ( );
    double GetRadialLocation ( );
    double GetAngularLocation ( );
    double GetSize ( );
    double GetDepth ( );
    double GetCounterboreSize ( );
    double GetCounterboreDepth ( );
    double GetCountersinkSize ( );
    double GetCountersinkAngle ( );
    _bstr_t GetLabel ( );
    enum HTHoleTypeConstants GetType ( );
    _bstr_t GetThreadSize ( );
    void PutNotes1 (
        _bstr_t pNotes1 );
    _bstr_t GetNotes1 ( );
    void PutNotes2 (
        _bstr_t pNotes2 );
    _bstr_t GetNotes2 ( );
    void PutNotes3 (
        _bstr_t pNotes3 );
    _bstr_t GetNotes3 ( );
    void PutSuffix (
        _bstr_t pSuffix );
    _bstr_t GetSuffix ( );
    void PutPrefix (
        _bstr_t pPrefix );
    _bstr_t GetPrefix ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * ppApplication ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * ppParent ) = 0;
      virtual HRESULT __stdcall get_XLocation (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_YLocation (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_RadialLocation (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_AngularLocation (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_Size (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_Depth (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_CounterboreSize (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_CounterboreDepth (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_CountersinkSize (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_CountersinkAngle (
        /*[out,retval]*/ double * pVal ) = 0;
      virtual HRESULT __stdcall get_Label (
        /*[out,retval]*/ BSTR * pLabel ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum HTHoleTypeConstants * pType ) = 0;
      virtual HRESULT __stdcall get_ThreadSize (
        /*[out,retval]*/ BSTR * pThreadSize ) = 0;
      virtual HRESULT __stdcall put_Notes1 (
        /*[in]*/ BSTR pNotes1 ) = 0;
      virtual HRESULT __stdcall get_Notes1 (
        /*[out,retval]*/ BSTR * pNotes1 ) = 0;
      virtual HRESULT __stdcall put_Notes2 (
        /*[in]*/ BSTR pNotes2 ) = 0;
      virtual HRESULT __stdcall get_Notes2 (
        /*[out,retval]*/ BSTR * pNotes2 ) = 0;
      virtual HRESULT __stdcall put_Notes3 (
        /*[in]*/ BSTR pNotes3 ) = 0;
      virtual HRESULT __stdcall get_Notes3 (
        /*[out,retval]*/ BSTR * pNotes3 ) = 0;
      virtual HRESULT __stdcall put_Suffix (
        /*[in]*/ BSTR pSuffix ) = 0;
      virtual HRESULT __stdcall get_Suffix (
        /*[out,retval]*/ BSTR * pSuffix ) = 0;
      virtual HRESULT __stdcall put_Prefix (
        /*[in]*/ BSTR pPrefix ) = 0;
      virtual HRESULT __stdcall get_Prefix (
        /*[out,retval]*/ BSTR * pPrefix ) = 0;
};

struct __declspec(uuid("e4a4ad23-0349-42e8-826a-ad0ee7ecc46c"))
Tables : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    TablePtr Item (
        const _variant_t & Index );
    TablePtr Add ( );
};

struct __declspec(uuid("a3e06cfc-a7a5-43ea-aa39-0d8fc56aed7f"))
Table : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDataFixedRowHeight,put=PutDataFixedRowHeight))
    double DataFixedRowHeight;
    __declspec(property(get=GetMaximumHeight,put=PutMaximumHeight))
    double MaximumHeight;
    __declspec(property(get=GetNumberOfHeaderRows,put=PutNumberOfHeaderRows))
    long NumberOfHeaderRows;
    __declspec(property(get=GetMaximumRowsFirstPage,put=PutMaximumRowsFirstPage))
    long MaximumRowsFirstPage;
    __declspec(property(get=GetMaximumRowsAdditionalPages,put=PutMaximumRowsAdditionalPages))
    long MaximumRowsAdditionalPages;
    __declspec(property(get=GetMaximumHeightFirstPage,put=PutMaximumHeightFirstPage))
    double MaximumHeightFirstPage;
    __declspec(property(get=GetMaximumHeightAdditionalPages,put=PutMaximumHeightAdditionalPages))
    double MaximumHeightAdditionalPages;
    __declspec(property(get=GetCreateNewSheetsForTable,put=PutCreateNewSheetsForTable))
    VARIANT_BOOL CreateNewSheetsForTable;
    __declspec(property(get=GetFirstSheetBackgroundName,put=PutFirstSheetBackgroundName))
    _bstr_t FirstSheetBackgroundName;
    __declspec(property(get=GetAdditionalSheetsBackgroundName,put=PutAdditionalSheetsBackgroundName))
    _bstr_t AdditionalSheetsBackgroundName;
    __declspec(property(get=GetShowSheetBackground,put=PutShowSheetBackground))
    VARIANT_BOOL ShowSheetBackground;
    __declspec(property(get=GetMaintainSheetsWithTableSize,put=PutMaintainSheetsWithTableSize))
    VARIANT_BOOL MaintainSheetsWithTableSize;
    __declspec(property(get=GetEnableGroups,put=PutEnableGroups))
    VARIANT_BOOL EnableGroups;
    __declspec(property(get=GetGroups))
    TableGroupsPtr Groups;
    __declspec(property(get=GetWrapDataCellsToNewRow,put=PutWrapDataCellsToNewRow))
    VARIANT_BOOL WrapDataCellsToNewRow;
    __declspec(property(get=GetFillEndOfTableWithBlankRows,put=PutFillEndOfTableWithBlankRows))
    VARIANT_BOOL FillEndOfTableWithBlankRows;
    __declspec(property(get=GetGroupByColumn,put=PutGroupByColumn))
    long GroupByColumn;
    __declspec(property(get=GetTitleFixedRowHeight,put=PutTitleFixedRowHeight))
    double TitleFixedRowHeight;
    __declspec(property(get=GetMarginHorizontal,put=PutMarginHorizontal))
    double MarginHorizontal;
    __declspec(property(get=GetMarginVertical,put=PutMarginVertical))
    double MarginVertical;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCell))
    TableCellPtr Cell[][];
    __declspec(property(get=GetColumnHeaderPosition,put=PutColumnHeaderPosition))
    enum TitlePosition ColumnHeaderPosition;
    __declspec(property(get=GetColumns))
    TableColumnsPtr Columns;
    __declspec(property(get=GetMargin,put=PutMargin))
    double Margin;
    __declspec(property(get=GetMaximumRows,put=PutMaximumRows))
    long MaximumRows;
    __declspec(property(get=GetPageGap,put=PutPageGap))
    double PageGap;
    __declspec(property(get=GetReverseDisplayOrder,put=PutReverseDisplayOrder))
    VARIANT_BOOL ReverseDisplayOrder;
    __declspec(property(get=GetRows))
    TableRowsPtr Rows;
    __declspec(property(get=GetShowColumnHeader,put=PutShowColumnHeader))
    VARIANT_BOOL ShowColumnHeader;
    __declspec(property(get=GetTableStyle,put=PutTableStyle))
    _bstr_t TableStyle;
    __declspec(property(get=GetTitles))
    TableTitlesPtr Titles;
    __declspec(property(get=GetAnchorPoint,put=PutAnchorPoint))
    enum TableAnchorPoint AnchorPoint;
    __declspec(property(get=GetPages))
    TablePagesPtr Pages;
    __declspec(property(get=GetHeaderFixedRowHeight,put=PutHeaderFixedRowHeight))
    double HeaderFixedRowHeight;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    TableCellPtr GetCell (
        const _variant_t & RowIndex,
        const _variant_t & ColumnIndex );
    enum TitlePosition GetColumnHeaderPosition ( );
    void PutColumnHeaderPosition (
        enum TitlePosition _arg1 );
    TableColumnsPtr GetColumns ( );
    HRESULT Delete ( );
    double GetMargin ( );
    void PutMargin (
        double _arg1 );
    long GetMaximumRows ( );
    void PutMaximumRows (
        long _arg1 );
    double GetPageGap ( );
    void PutPageGap (
        double _arg1 );
    VARIANT_BOOL GetReverseDisplayOrder ( );
    void PutReverseDisplayOrder (
        VARIANT_BOOL _arg1 );
    TableRowsPtr GetRows ( );
    HRESULT SetOrigin (
        double x,
        double y );
    VARIANT_BOOL GetShowColumnHeader ( );
    void PutShowColumnHeader (
        VARIANT_BOOL _arg1 );
    _bstr_t GetTableStyle ( );
    void PutTableStyle (
        _bstr_t _arg1 );
    TableTitlesPtr GetTitles ( );
    HRESULT Update ( );
    enum TableAnchorPoint GetAnchorPoint ( );
    void PutAnchorPoint (
        enum TableAnchorPoint _arg1 );
    TablePagesPtr GetPages ( );
    double GetHeaderFixedRowHeight ( );
    void PutHeaderFixedRowHeight (
        double _arg1 );
    double GetDataFixedRowHeight ( );
    void PutDataFixedRowHeight (
        double _arg1 );
    double GetMaximumHeight ( );
    void PutMaximumHeight (
        double _arg1 );
    long GetNumberOfHeaderRows ( );
    void PutNumberOfHeaderRows (
        long _arg1 );
    long GetMaximumRowsFirstPage ( );
    void PutMaximumRowsFirstPage (
        long _arg1 );
    long GetMaximumRowsAdditionalPages ( );
    void PutMaximumRowsAdditionalPages (
        long _arg1 );
    double GetMaximumHeightFirstPage ( );
    void PutMaximumHeightFirstPage (
        double _arg1 );
    double GetMaximumHeightAdditionalPages ( );
    void PutMaximumHeightAdditionalPages (
        double _arg1 );
    VARIANT_BOOL GetCreateNewSheetsForTable ( );
    void PutCreateNewSheetsForTable (
        VARIANT_BOOL _arg1 );
    _bstr_t GetFirstSheetBackgroundName ( );
    void PutFirstSheetBackgroundName (
        _bstr_t _arg1 );
    _bstr_t GetAdditionalSheetsBackgroundName ( );
    void PutAdditionalSheetsBackgroundName (
        _bstr_t _arg1 );
    VARIANT_BOOL GetShowSheetBackground ( );
    void PutShowSheetBackground (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetMaintainSheetsWithTableSize ( );
    void PutMaintainSheetsWithTableSize (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetEnableGroups ( );
    void PutEnableGroups (
        VARIANT_BOOL _arg1 );
    TableGroupsPtr GetGroups ( );
    VARIANT_BOOL GetWrapDataCellsToNewRow ( );
    void PutWrapDataCellsToNewRow (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetFillEndOfTableWithBlankRows ( );
    void PutFillEndOfTableWithBlankRows (
        VARIANT_BOOL _arg1 );
    long GetGroupByColumn ( );
    void PutGroupByColumn (
        long _arg1 );
    double GetTitleFixedRowHeight ( );
    void PutTitleFixedRowHeight (
        double _arg1 );
    double GetMarginHorizontal ( );
    void PutMarginHorizontal (
        double _arg1 );
    double GetMarginVertical ( );
    void PutMarginVertical (
        double _arg1 );
    _bstr_t GetName ( );
};

struct __declspec(uuid("56cd0aee-bebb-49e4-8772-524a1ee3e95a"))
_ITablesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    TablePtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    TablePtr Add ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Table * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Unknown ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[out,retval]*/ struct Table * * ppObj ) = 0;
};

struct __declspec(uuid("4fea2508-4900-4836-b86a-b9fe65b17845"))
_ITableAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetDataFixedRowHeight,put=PutDataFixedRowHeight))
    double DataFixedRowHeight;
    __declspec(property(get=GetMaximumHeight,put=PutMaximumHeight))
    double MaximumHeight;
    __declspec(property(get=GetNumberOfHeaderRows,put=PutNumberOfHeaderRows))
    long NumberOfHeaderRows;
    __declspec(property(get=GetMaximumRowsFirstPage,put=PutMaximumRowsFirstPage))
    long MaximumRowsFirstPage;
    __declspec(property(get=GetMaximumRowsAdditionalPages,put=PutMaximumRowsAdditionalPages))
    long MaximumRowsAdditionalPages;
    __declspec(property(get=GetMaximumHeightFirstPage,put=PutMaximumHeightFirstPage))
    double MaximumHeightFirstPage;
    __declspec(property(get=GetMaximumHeightAdditionalPages,put=PutMaximumHeightAdditionalPages))
    double MaximumHeightAdditionalPages;
    __declspec(property(get=GetCreateNewSheetsForTable,put=PutCreateNewSheetsForTable))
    VARIANT_BOOL CreateNewSheetsForTable;
    __declspec(property(get=GetFirstSheetBackgroundName,put=PutFirstSheetBackgroundName))
    _bstr_t FirstSheetBackgroundName;
    __declspec(property(get=GetAdditionalSheetsBackgroundName,put=PutAdditionalSheetsBackgroundName))
    _bstr_t AdditionalSheetsBackgroundName;
    __declspec(property(get=GetShowSheetBackground,put=PutShowSheetBackground))
    VARIANT_BOOL ShowSheetBackground;
    __declspec(property(get=GetMaintainSheetsWithTableSize,put=PutMaintainSheetsWithTableSize))
    VARIANT_BOOL MaintainSheetsWithTableSize;
    __declspec(property(get=GetEnableGroups,put=PutEnableGroups))
    VARIANT_BOOL EnableGroups;
    __declspec(property(get=GetGroups))
    TableGroupsPtr Groups;
    __declspec(property(get=GetWrapDataCellsToNewRow,put=PutWrapDataCellsToNewRow))
    VARIANT_BOOL WrapDataCellsToNewRow;
    __declspec(property(get=GetFillEndOfTableWithBlankRows,put=PutFillEndOfTableWithBlankRows))
    VARIANT_BOOL FillEndOfTableWithBlankRows;
    __declspec(property(get=GetGroupByColumn,put=PutGroupByColumn))
    long GroupByColumn;
    __declspec(property(get=GetTitleFixedRowHeight,put=PutTitleFixedRowHeight))
    double TitleFixedRowHeight;
    __declspec(property(get=GetMarginHorizontal,put=PutMarginHorizontal))
    double MarginHorizontal;
    __declspec(property(get=GetMarginVertical,put=PutMarginVertical))
    double MarginVertical;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCell))
    TableCellPtr Cell[][];
    __declspec(property(get=GetColumnHeaderPosition,put=PutColumnHeaderPosition))
    enum TitlePosition ColumnHeaderPosition;
    __declspec(property(get=GetColumns))
    TableColumnsPtr Columns;
    __declspec(property(get=GetMargin,put=PutMargin))
    double Margin;
    __declspec(property(get=GetMaximumRows,put=PutMaximumRows))
    long MaximumRows;
    __declspec(property(get=GetPageGap,put=PutPageGap))
    double PageGap;
    __declspec(property(get=GetReverseDisplayOrder,put=PutReverseDisplayOrder))
    VARIANT_BOOL ReverseDisplayOrder;
    __declspec(property(get=GetRows))
    TableRowsPtr Rows;
    __declspec(property(get=GetShowColumnHeader,put=PutShowColumnHeader))
    VARIANT_BOOL ShowColumnHeader;
    __declspec(property(get=GetTableStyle,put=PutTableStyle))
    _bstr_t TableStyle;
    __declspec(property(get=GetTitles))
    TableTitlesPtr Titles;
    __declspec(property(get=GetAnchorPoint,put=PutAnchorPoint))
    enum TableAnchorPoint AnchorPoint;
    __declspec(property(get=GetPages))
    TablePagesPtr Pages;
    __declspec(property(get=GetHeaderFixedRowHeight,put=PutHeaderFixedRowHeight))
    double HeaderFixedRowHeight;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    TableCellPtr GetCell (
        const _variant_t & RowIndex,
        const _variant_t & ColumnIndex );
    enum TitlePosition GetColumnHeaderPosition ( );
    void PutColumnHeaderPosition (
        enum TitlePosition ColumnHeaderPosition );
    TableColumnsPtr GetColumns ( );
    HRESULT Delete ( );
    double GetMargin ( );
    void PutMargin (
        double Margin );
    long GetMaximumRows ( );
    void PutMaximumRows (
        long MaximumRows );
    double GetPageGap ( );
    void PutPageGap (
        double PageGap );
    VARIANT_BOOL GetReverseDisplayOrder ( );
    void PutReverseDisplayOrder (
        VARIANT_BOOL ReverseDisplayOrder );
    TableRowsPtr GetRows ( );
    HRESULT SetOrigin (
        double x,
        double y );
    VARIANT_BOOL GetShowColumnHeader ( );
    void PutShowColumnHeader (
        VARIANT_BOOL ShowColumnHeader );
    _bstr_t GetTableStyle ( );
    void PutTableStyle (
        _bstr_t TableStyle );
    TableTitlesPtr GetTitles ( );
    HRESULT Update ( );
    enum TableAnchorPoint GetAnchorPoint ( );
    void PutAnchorPoint (
        enum TableAnchorPoint AnchorPoint );
    TablePagesPtr GetPages ( );
    double GetHeaderFixedRowHeight ( );
    void PutHeaderFixedRowHeight (
        double HeaderFixedRowHeight );
    double GetDataFixedRowHeight ( );
    void PutDataFixedRowHeight (
        double DataFixedRowHeight );
    double GetMaximumHeight ( );
    void PutMaximumHeight (
        double MaximumHeight );
    long GetNumberOfHeaderRows ( );
    void PutNumberOfHeaderRows (
        long NumberOfHeaderRows );
    long GetMaximumRowsFirstPage ( );
    void PutMaximumRowsFirstPage (
        long MaximumRowsFirstPage );
    long GetMaximumRowsAdditionalPages ( );
    void PutMaximumRowsAdditionalPages (
        long MaximumRowsAdditionalPages );
    double GetMaximumHeightFirstPage ( );
    void PutMaximumHeightFirstPage (
        double MaximumHeightFirstPage );
    double GetMaximumHeightAdditionalPages ( );
    void PutMaximumHeightAdditionalPages (
        double MaximumHeightAdditionalPages );
    VARIANT_BOOL GetCreateNewSheetsForTable ( );
    void PutCreateNewSheetsForTable (
        VARIANT_BOOL CreateNewSheetsForTable );
    _bstr_t GetFirstSheetBackgroundName ( );
    void PutFirstSheetBackgroundName (
        _bstr_t FirstSheetBackgroundName );
    _bstr_t GetAdditionalSheetsBackgroundName ( );
    void PutAdditionalSheetsBackgroundName (
        _bstr_t AdditionalSheetsBackgroundName );
    VARIANT_BOOL GetShowSheetBackground ( );
    void PutShowSheetBackground (
        VARIANT_BOOL ShowSheetBackground );
    VARIANT_BOOL GetMaintainSheetsWithTableSize ( );
    void PutMaintainSheetsWithTableSize (
        VARIANT_BOOL MaintainSheetsWithTableSize );
    VARIANT_BOOL GetEnableGroups ( );
    void PutEnableGroups (
        VARIANT_BOOL EnableGroups );
    TableGroupsPtr GetGroups ( );
    VARIANT_BOOL GetWrapDataCellsToNewRow ( );
    void PutWrapDataCellsToNewRow (
        VARIANT_BOOL WrapDataCellsToNewRow );
    VARIANT_BOOL GetFillEndOfTableWithBlankRows ( );
    void PutFillEndOfTableWithBlankRows (
        VARIANT_BOOL FillEndOfTableWithBlankRows );
    long GetGroupByColumn ( );
    void PutGroupByColumn (
        long ColumnIndex );
    double GetTitleFixedRowHeight ( );
    void PutTitleFixedRowHeight (
        double TitleFixedRowHeight );
    double GetMarginHorizontal ( );
    void PutMarginHorizontal (
        double MarginHorizontal );
    double GetMarginVertical ( );
    void PutMarginVertical (
        double MarginVertical );
    _bstr_t GetName ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Cell (
        /*[in]*/ VARIANT RowIndex,
        /*[in]*/ VARIANT ColumnIndex,
        /*[out,retval]*/ struct TableCell * * ppCell ) = 0;
      virtual HRESULT __stdcall get_ColumnHeaderPosition (
        /*[out,retval]*/ enum TitlePosition * ColumnHeaderPosition ) = 0;
      virtual HRESULT __stdcall put_ColumnHeaderPosition (
        /*[in]*/ enum TitlePosition ColumnHeaderPosition ) = 0;
      virtual HRESULT __stdcall get_Columns (
        /*[out,retval]*/ struct TableColumns * * Columns ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Margin (
        /*[out,retval]*/ double * Margin ) = 0;
      virtual HRESULT __stdcall put_Margin (
        /*[in]*/ double Margin ) = 0;
      virtual HRESULT __stdcall get_MaximumRows (
        /*[out,retval]*/ long * MaximumRows ) = 0;
      virtual HRESULT __stdcall put_MaximumRows (
        /*[in]*/ long MaximumRows ) = 0;
      virtual HRESULT __stdcall get_PageGap (
        /*[out,retval]*/ double * PageGap ) = 0;
      virtual HRESULT __stdcall put_PageGap (
        /*[in]*/ double PageGap ) = 0;
      virtual HRESULT __stdcall get_ReverseDisplayOrder (
        /*[out,retval]*/ VARIANT_BOOL * ReverseDisplayOrder ) = 0;
      virtual HRESULT __stdcall put_ReverseDisplayOrder (
        /*[in]*/ VARIANT_BOOL ReverseDisplayOrder ) = 0;
      virtual HRESULT __stdcall get_Rows (
        /*[out,retval]*/ struct TableRows * * Rows ) = 0;
      virtual HRESULT __stdcall raw_SetOrigin (
        /*[in]*/ double x,
        /*[in]*/ double y ) = 0;
      virtual HRESULT __stdcall get_ShowColumnHeader (
        /*[out,retval]*/ VARIANT_BOOL * ShowColumnHeader ) = 0;
      virtual HRESULT __stdcall put_ShowColumnHeader (
        /*[in]*/ VARIANT_BOOL ShowColumnHeader ) = 0;
      virtual HRESULT __stdcall get_TableStyle (
        /*[out,retval]*/ BSTR * TableStyle ) = 0;
      virtual HRESULT __stdcall put_TableStyle (
        /*[in]*/ BSTR TableStyle ) = 0;
      virtual HRESULT __stdcall get_Titles (
        /*[out,retval]*/ struct TableTitles * * Titles ) = 0;
      virtual HRESULT __stdcall raw_Update ( ) = 0;
      virtual HRESULT __stdcall get_AnchorPoint (
        /*[out,retval]*/ enum TableAnchorPoint * AnchorPoint ) = 0;
      virtual HRESULT __stdcall put_AnchorPoint (
        /*[in]*/ enum TableAnchorPoint AnchorPoint ) = 0;
      virtual HRESULT __stdcall get_Pages (
        /*[out,retval]*/ struct TablePages * * Rows ) = 0;
      virtual HRESULT __stdcall get_HeaderFixedRowHeight (
        /*[out,retval]*/ double * HeaderFixedRowHeight ) = 0;
      virtual HRESULT __stdcall put_HeaderFixedRowHeight (
        /*[in]*/ double HeaderFixedRowHeight ) = 0;
      virtual HRESULT __stdcall get_DataFixedRowHeight (
        /*[out,retval]*/ double * DataFixedRowHeight ) = 0;
      virtual HRESULT __stdcall put_DataFixedRowHeight (
        /*[in]*/ double DataFixedRowHeight ) = 0;
      virtual HRESULT __stdcall get_MaximumHeight (
        /*[out,retval]*/ double * MaximumHeight ) = 0;
      virtual HRESULT __stdcall put_MaximumHeight (
        /*[in]*/ double MaximumHeight ) = 0;
      virtual HRESULT __stdcall get_NumberOfHeaderRows (
        /*[out,retval]*/ long * NumberOfHeaderRows ) = 0;
      virtual HRESULT __stdcall put_NumberOfHeaderRows (
        /*[in]*/ long NumberOfHeaderRows ) = 0;
      virtual HRESULT __stdcall get_MaximumRowsFirstPage (
        /*[out,retval]*/ long * MaximumRowsFirstPage ) = 0;
      virtual HRESULT __stdcall put_MaximumRowsFirstPage (
        /*[in]*/ long MaximumRowsFirstPage ) = 0;
      virtual HRESULT __stdcall get_MaximumRowsAdditionalPages (
        /*[out,retval]*/ long * MaximumRowsAdditionalPages ) = 0;
      virtual HRESULT __stdcall put_MaximumRowsAdditionalPages (
        /*[in]*/ long MaximumRowsAdditionalPages ) = 0;
      virtual HRESULT __stdcall get_MaximumHeightFirstPage (
        /*[out,retval]*/ double * MaximumHeightFirstPage ) = 0;
      virtual HRESULT __stdcall put_MaximumHeightFirstPage (
        /*[in]*/ double MaximumHeightFirstPage ) = 0;
      virtual HRESULT __stdcall get_MaximumHeightAdditionalPages (
        /*[out,retval]*/ double * MaximumHeightAdditionalPages ) = 0;
      virtual HRESULT __stdcall put_MaximumHeightAdditionalPages (
        /*[in]*/ double MaximumHeightAdditionalPages ) = 0;
      virtual HRESULT __stdcall get_CreateNewSheetsForTable (
        /*[out,retval]*/ VARIANT_BOOL * CreateNewSheetsForTable ) = 0;
      virtual HRESULT __stdcall put_CreateNewSheetsForTable (
        /*[in]*/ VARIANT_BOOL CreateNewSheetsForTable ) = 0;
      virtual HRESULT __stdcall get_FirstSheetBackgroundName (
        /*[out,retval]*/ BSTR * FirstSheetBackgroundName ) = 0;
      virtual HRESULT __stdcall put_FirstSheetBackgroundName (
        /*[in]*/ BSTR FirstSheetBackgroundName ) = 0;
      virtual HRESULT __stdcall get_AdditionalSheetsBackgroundName (
        /*[out,retval]*/ BSTR * AdditionalSheetsBackgroundName ) = 0;
      virtual HRESULT __stdcall put_AdditionalSheetsBackgroundName (
        /*[in]*/ BSTR AdditionalSheetsBackgroundName ) = 0;
      virtual HRESULT __stdcall get_ShowSheetBackground (
        /*[out,retval]*/ VARIANT_BOOL * ShowSheetBackground ) = 0;
      virtual HRESULT __stdcall put_ShowSheetBackground (
        /*[in]*/ VARIANT_BOOL ShowSheetBackground ) = 0;
      virtual HRESULT __stdcall get_MaintainSheetsWithTableSize (
        /*[out,retval]*/ VARIANT_BOOL * MaintainSheetsWithTableSize ) = 0;
      virtual HRESULT __stdcall put_MaintainSheetsWithTableSize (
        /*[in]*/ VARIANT_BOOL MaintainSheetsWithTableSize ) = 0;
      virtual HRESULT __stdcall get_EnableGroups (
        /*[out,retval]*/ VARIANT_BOOL * EnableGroups ) = 0;
      virtual HRESULT __stdcall put_EnableGroups (
        /*[in]*/ VARIANT_BOOL EnableGroups ) = 0;
      virtual HRESULT __stdcall get_Groups (
        /*[out,retval]*/ struct TableGroups * * Groups ) = 0;
      virtual HRESULT __stdcall get_WrapDataCellsToNewRow (
        /*[out,retval]*/ VARIANT_BOOL * WrapDataCellsToNewRow ) = 0;
      virtual HRESULT __stdcall put_WrapDataCellsToNewRow (
        /*[in]*/ VARIANT_BOOL WrapDataCellsToNewRow ) = 0;
      virtual HRESULT __stdcall get_FillEndOfTableWithBlankRows (
        /*[out,retval]*/ VARIANT_BOOL * FillEndOfTableWithBlankRows ) = 0;
      virtual HRESULT __stdcall put_FillEndOfTableWithBlankRows (
        /*[in]*/ VARIANT_BOOL FillEndOfTableWithBlankRows ) = 0;
      virtual HRESULT __stdcall get_GroupByColumn (
        /*[out,retval]*/ long * ColumnIndex ) = 0;
      virtual HRESULT __stdcall put_GroupByColumn (
        /*[in]*/ long ColumnIndex ) = 0;
      virtual HRESULT __stdcall get_TitleFixedRowHeight (
        /*[out,retval]*/ double * TitleFixedRowHeight ) = 0;
      virtual HRESULT __stdcall put_TitleFixedRowHeight (
        /*[in]*/ double TitleFixedRowHeight ) = 0;
      virtual HRESULT __stdcall get_MarginHorizontal (
        /*[out,retval]*/ double * MarginHorizontal ) = 0;
      virtual HRESULT __stdcall put_MarginHorizontal (
        /*[in]*/ double MarginHorizontal ) = 0;
      virtual HRESULT __stdcall get_MarginVertical (
        /*[out,retval]*/ double * MarginVertical ) = 0;
      virtual HRESULT __stdcall put_MarginVertical (
        /*[in]*/ double MarginVertical ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
};

enum DimensionTrackerReasonCode
{
    igDTRC_Unknown = 0,
    igDTRC_ValueChanged = 1,
    igDTRC_TerminatorMoved = 2,
    igDTRC_DetachedRebindFailure = 3,
    igDTRC_DetachedNoEdgeInformation = 4,
    igDTRC_Deleted = 5,
    igDTRC_ReattachedToAvailableGeometry = 6,
    igDTRC_ContentChanged = 7,
    igDTRC_DetachedAxisRebindFailure = 8,
    igDTRC_DetachedFromBlockTable = 9
};

struct __declspec(uuid("570df120-72db-11df-93f2-0800200c9a66"))
DraftBendTables : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    DraftBendTablePtr Item (
        const _variant_t & Index );
    DraftBendTablePtr Add (
        struct DrawingView * DrawingView,
        _bstr_t SavedSettings,
        long AutoBalloon,
        long CreateDraftBendTable );
    IDispatchPtr GetParent ( );
};

struct __declspec(uuid("3f4cdb50-72db-11df-93f2-0800200c9a66"))
DraftBendTable : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAnchorPoint,put=PutAnchorPoint))
    enum TableAnchorPoint AnchorPoint;
    __declspec(property(get=GetPages))
    TablePagesPtr Pages;
    __declspec(property(get=GetHeaderFixedRowHeight,put=PutHeaderFixedRowHeight))
    double HeaderFixedRowHeight;
    __declspec(property(get=GetDataFixedRowHeight,put=PutDataFixedRowHeight))
    double DataFixedRowHeight;
    __declspec(property(get=GetMaximumHeight,put=PutMaximumHeight))
    double MaximumHeight;
    __declspec(property(get=GetNumberOfHeaderRows,put=PutNumberOfHeaderRows))
    long NumberOfHeaderRows;
    __declspec(property(get=GetMaximumRowsFirstPage,put=PutMaximumRowsFirstPage))
    long MaximumRowsFirstPage;
    __declspec(property(get=GetMaximumRowsAdditionalPages,put=PutMaximumRowsAdditionalPages))
    long MaximumRowsAdditionalPages;
    __declspec(property(get=GetMaximumHeightFirstPage,put=PutMaximumHeightFirstPage))
    double MaximumHeightFirstPage;
    __declspec(property(get=GetMaximumHeightAdditionalPages,put=PutMaximumHeightAdditionalPages))
    double MaximumHeightAdditionalPages;
    __declspec(property(get=GetCreateNewSheetsForTable,put=PutCreateNewSheetsForTable))
    VARIANT_BOOL CreateNewSheetsForTable;
    __declspec(property(get=GetFirstSheetBackgroundName,put=PutFirstSheetBackgroundName))
    _bstr_t FirstSheetBackgroundName;
    __declspec(property(get=GetAdditionalSheetsBackgroundName,put=PutAdditionalSheetsBackgroundName))
    _bstr_t AdditionalSheetsBackgroundName;
    __declspec(property(get=GetShowSheetBackground,put=PutShowSheetBackground))
    VARIANT_BOOL ShowSheetBackground;
    __declspec(property(get=GetMaintainSheetsWithTableSize,put=PutMaintainSheetsWithTableSize))
    VARIANT_BOOL MaintainSheetsWithTableSize;
    __declspec(property(get=GetEnableGroups,put=PutEnableGroups))
    VARIANT_BOOL EnableGroups;
    __declspec(property(get=GetGroups))
    TableGroupsPtr Groups;
    __declspec(property(get=GetWrapDataCellsToNewRow,put=PutWrapDataCellsToNewRow))
    VARIANT_BOOL WrapDataCellsToNewRow;
    __declspec(property(get=GetFillEndOfTableWithBlankRows,put=PutFillEndOfTableWithBlankRows))
    VARIANT_BOOL FillEndOfTableWithBlankRows;
    __declspec(property(get=GetGroupByColumn,put=PutGroupByColumn))
    long GroupByColumn;
    __declspec(property(get=GetTitleFixedRowHeight,put=PutTitleFixedRowHeight))
    double TitleFixedRowHeight;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetMarginHorizontal,put=PutMarginHorizontal))
    double MarginHorizontal;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetMarginVertical,put=PutMarginVertical))
    double MarginVertical;
    __declspec(property(get=GetModelLink))
    ModelLinkPtr ModelLink;
    __declspec(property(put=PutSavedSettings))
    _bstr_t SavedSettings;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCell))
    TableCellPtr Cell[][];
    __declspec(property(get=GetColumnHeaderPosition,put=PutColumnHeaderPosition))
    enum TitlePosition ColumnHeaderPosition;
    __declspec(property(get=GetColumns))
    TableColumnsPtr Columns;
    __declspec(property(get=GetMaximumRows,put=PutMaximumRows))
    long MaximumRows;
    __declspec(property(get=GetPageGap,put=PutPageGap))
    double PageGap;
    __declspec(property(get=GetReverseDisplayOrder,put=PutReverseDisplayOrder))
    VARIANT_BOOL ReverseDisplayOrder;
    __declspec(property(get=GetRows))
    TableRowsPtr Rows;
    __declspec(property(get=GetShowColumnHeader,put=PutShowColumnHeader))
    VARIANT_BOOL ShowColumnHeader;
    __declspec(property(get=GetTableStyle,put=PutTableStyle))
    _bstr_t TableStyle;
    __declspec(property(get=GetTitles))
    TableTitlesPtr Titles;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    HRESULT Update ( );
    HRESULT CopyToClipboard ( );
    ModelLinkPtr GetModelLink ( );
    HRESULT Delete ( );
    void PutSavedSettings (
        _bstr_t _arg1 );
    IDispatchPtr GetParent ( );
    TableCellPtr GetCell (
        const _variant_t & RowIndex,
        const _variant_t & ColumnIndex );
    enum TitlePosition GetColumnHeaderPosition ( );
    void PutColumnHeaderPosition (
        enum TitlePosition _arg1 );
    TableColumnsPtr GetColumns ( );
    double GetMarginHorizontal ( );
    void PutMarginHorizontal (
        double _arg1 );
    double GetMarginVertical ( );
    void PutMarginVertical (
        double _arg1 );
    long GetMaximumRows ( );
    void PutMaximumRows (
        long _arg1 );
    double GetPageGap ( );
    void PutPageGap (
        double _arg1 );
    VARIANT_BOOL GetReverseDisplayOrder ( );
    void PutReverseDisplayOrder (
        VARIANT_BOOL _arg1 );
    TableRowsPtr GetRows ( );
    HRESULT SetOrigin (
        double x,
        double y );
    VARIANT_BOOL GetShowColumnHeader ( );
    void PutShowColumnHeader (
        VARIANT_BOOL _arg1 );
    _bstr_t GetTableStyle ( );
    void PutTableStyle (
        _bstr_t _arg1 );
    TableTitlesPtr GetTitles ( );
    enum TableAnchorPoint GetAnchorPoint ( );
    void PutAnchorPoint (
        enum TableAnchorPoint _arg1 );
    TablePagesPtr GetPages ( );
    double GetHeaderFixedRowHeight ( );
    void PutHeaderFixedRowHeight (
        double _arg1 );
    double GetDataFixedRowHeight ( );
    void PutDataFixedRowHeight (
        double _arg1 );
    double GetMaximumHeight ( );
    void PutMaximumHeight (
        double _arg1 );
    long GetNumberOfHeaderRows ( );
    void PutNumberOfHeaderRows (
        long _arg1 );
    long GetMaximumRowsFirstPage ( );
    void PutMaximumRowsFirstPage (
        long _arg1 );
    long GetMaximumRowsAdditionalPages ( );
    void PutMaximumRowsAdditionalPages (
        long _arg1 );
    double GetMaximumHeightFirstPage ( );
    void PutMaximumHeightFirstPage (
        double _arg1 );
    double GetMaximumHeightAdditionalPages ( );
    void PutMaximumHeightAdditionalPages (
        double _arg1 );
    VARIANT_BOOL GetCreateNewSheetsForTable ( );
    void PutCreateNewSheetsForTable (
        VARIANT_BOOL _arg1 );
    _bstr_t GetFirstSheetBackgroundName ( );
    void PutFirstSheetBackgroundName (
        _bstr_t _arg1 );
    _bstr_t GetAdditionalSheetsBackgroundName ( );
    void PutAdditionalSheetsBackgroundName (
        _bstr_t _arg1 );
    VARIANT_BOOL GetShowSheetBackground ( );
    void PutShowSheetBackground (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetMaintainSheetsWithTableSize ( );
    void PutMaintainSheetsWithTableSize (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetEnableGroups ( );
    void PutEnableGroups (
        VARIANT_BOOL _arg1 );
    TableGroupsPtr GetGroups ( );
    VARIANT_BOOL GetWrapDataCellsToNewRow ( );
    void PutWrapDataCellsToNewRow (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetFillEndOfTableWithBlankRows ( );
    void PutFillEndOfTableWithBlankRows (
        VARIANT_BOOL _arg1 );
    long GetGroupByColumn ( );
    void PutGroupByColumn (
        long _arg1 );
    double GetTitleFixedRowHeight ( );
    void PutTitleFixedRowHeight (
        double _arg1 );
    HRESULT GetListOfSavedSettings (
        long * NumSavedSettings,
        SAFEARRAY * * ListOfSavedSettings );
    _bstr_t GetName ( );
};

struct __declspec(uuid("b8ee8d50-72db-11df-93f2-0800200c9a66"))
_IDraftBendTablesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    DraftBendTablePtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    DraftBendTablePtr Add (
        struct DrawingView * DrawingView,
        _bstr_t SavedSettings,
        long AutoBalloon,
        long CreateDraftBendTable );
    IDispatchPtr GetParent ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct DraftBendTable * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Unknown ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ struct DrawingView * DrawingView,
        /*[in]*/ BSTR SavedSettings,
        /*[in]*/ long AutoBalloon,
        /*[in]*/ long CreateDraftBendTable,
        /*[out,retval]*/ struct DraftBendTable * * ppObj ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
};

struct __declspec(uuid("c51c3a50-72db-11df-93f2-0800200c9a66"))
_IDraftBendTableAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetAnchorPoint,put=PutAnchorPoint))
    enum TableAnchorPoint AnchorPoint;
    __declspec(property(get=GetPages))
    TablePagesPtr Pages;
    __declspec(property(get=GetHeaderFixedRowHeight,put=PutHeaderFixedRowHeight))
    double HeaderFixedRowHeight;
    __declspec(property(get=GetDataFixedRowHeight,put=PutDataFixedRowHeight))
    double DataFixedRowHeight;
    __declspec(property(get=GetMaximumHeight,put=PutMaximumHeight))
    double MaximumHeight;
    __declspec(property(get=GetNumberOfHeaderRows,put=PutNumberOfHeaderRows))
    long NumberOfHeaderRows;
    __declspec(property(get=GetMaximumRowsFirstPage,put=PutMaximumRowsFirstPage))
    long MaximumRowsFirstPage;
    __declspec(property(get=GetMaximumRowsAdditionalPages,put=PutMaximumRowsAdditionalPages))
    long MaximumRowsAdditionalPages;
    __declspec(property(get=GetMaximumHeightFirstPage,put=PutMaximumHeightFirstPage))
    double MaximumHeightFirstPage;
    __declspec(property(get=GetMaximumHeightAdditionalPages,put=PutMaximumHeightAdditionalPages))
    double MaximumHeightAdditionalPages;
    __declspec(property(get=GetCreateNewSheetsForTable,put=PutCreateNewSheetsForTable))
    VARIANT_BOOL CreateNewSheetsForTable;
    __declspec(property(get=GetFirstSheetBackgroundName,put=PutFirstSheetBackgroundName))
    _bstr_t FirstSheetBackgroundName;
    __declspec(property(get=GetAdditionalSheetsBackgroundName,put=PutAdditionalSheetsBackgroundName))
    _bstr_t AdditionalSheetsBackgroundName;
    __declspec(property(get=GetShowSheetBackground,put=PutShowSheetBackground))
    VARIANT_BOOL ShowSheetBackground;
    __declspec(property(get=GetMaintainSheetsWithTableSize,put=PutMaintainSheetsWithTableSize))
    VARIANT_BOOL MaintainSheetsWithTableSize;
    __declspec(property(get=GetEnableGroups,put=PutEnableGroups))
    VARIANT_BOOL EnableGroups;
    __declspec(property(get=GetGroups))
    TableGroupsPtr Groups;
    __declspec(property(get=GetWrapDataCellsToNewRow,put=PutWrapDataCellsToNewRow))
    VARIANT_BOOL WrapDataCellsToNewRow;
    __declspec(property(get=GetFillEndOfTableWithBlankRows,put=PutFillEndOfTableWithBlankRows))
    VARIANT_BOOL FillEndOfTableWithBlankRows;
    __declspec(property(get=GetGroupByColumn,put=PutGroupByColumn))
    long GroupByColumn;
    __declspec(property(get=GetTitleFixedRowHeight,put=PutTitleFixedRowHeight))
    double TitleFixedRowHeight;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetMarginHorizontal,put=PutMarginHorizontal))
    double MarginHorizontal;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetMarginVertical,put=PutMarginVertical))
    double MarginVertical;
    __declspec(property(get=GetModelLink))
    ModelLinkPtr ModelLink;
    __declspec(property(put=PutSavedSettings))
    _bstr_t SavedSettings;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCell))
    TableCellPtr Cell[][];
    __declspec(property(get=GetColumnHeaderPosition,put=PutColumnHeaderPosition))
    enum TitlePosition ColumnHeaderPosition;
    __declspec(property(get=GetColumns))
    TableColumnsPtr Columns;
    __declspec(property(get=GetMaximumRows,put=PutMaximumRows))
    long MaximumRows;
    __declspec(property(get=GetPageGap,put=PutPageGap))
    double PageGap;
    __declspec(property(get=GetReverseDisplayOrder,put=PutReverseDisplayOrder))
    VARIANT_BOOL ReverseDisplayOrder;
    __declspec(property(get=GetRows))
    TableRowsPtr Rows;
    __declspec(property(get=GetShowColumnHeader,put=PutShowColumnHeader))
    VARIANT_BOOL ShowColumnHeader;
    __declspec(property(get=GetTableStyle,put=PutTableStyle))
    _bstr_t TableStyle;
    __declspec(property(get=GetTitles))
    TableTitlesPtr Titles;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    HRESULT Update ( );
    HRESULT CopyToClipboard ( );
    ModelLinkPtr GetModelLink ( );
    HRESULT Delete ( );
    void PutSavedSettings (
        _bstr_t _arg1 );
    IDispatchPtr GetParent ( );
    TableCellPtr GetCell (
        const _variant_t & RowIndex,
        const _variant_t & ColumnIndex );
    enum TitlePosition GetColumnHeaderPosition ( );
    void PutColumnHeaderPosition (
        enum TitlePosition ColumnHeaderPosition );
    TableColumnsPtr GetColumns ( );
    double GetMarginHorizontal ( );
    void PutMarginHorizontal (
        double MarginHorizontal );
    double GetMarginVertical ( );
    void PutMarginVertical (
        double MarginVertical );
    long GetMaximumRows ( );
    void PutMaximumRows (
        long MaximumRows );
    double GetPageGap ( );
    void PutPageGap (
        double PageGap );
    VARIANT_BOOL GetReverseDisplayOrder ( );
    void PutReverseDisplayOrder (
        VARIANT_BOOL ReverseDisplayOrder );
    TableRowsPtr GetRows ( );
    HRESULT SetOrigin (
        double x,
        double y );
    VARIANT_BOOL GetShowColumnHeader ( );
    void PutShowColumnHeader (
        VARIANT_BOOL ShowColumnHeader );
    _bstr_t GetTableStyle ( );
    void PutTableStyle (
        _bstr_t TableStyle );
    TableTitlesPtr GetTitles ( );
    enum TableAnchorPoint GetAnchorPoint ( );
    void PutAnchorPoint (
        enum TableAnchorPoint AnchorPoint );
    TablePagesPtr GetPages ( );
    double GetHeaderFixedRowHeight ( );
    void PutHeaderFixedRowHeight (
        double HeaderFixedRowHeight );
    double GetDataFixedRowHeight ( );
    void PutDataFixedRowHeight (
        double DataFixedRowHeight );
    double GetMaximumHeight ( );
    void PutMaximumHeight (
        double MaximumHeight );
    long GetNumberOfHeaderRows ( );
    void PutNumberOfHeaderRows (
        long NumberOfHeaderRows );
    long GetMaximumRowsFirstPage ( );
    void PutMaximumRowsFirstPage (
        long MaximumRowsFirstPage );
    long GetMaximumRowsAdditionalPages ( );
    void PutMaximumRowsAdditionalPages (
        long MaximumRowsAdditionalPages );
    double GetMaximumHeightFirstPage ( );
    void PutMaximumHeightFirstPage (
        double MaximumHeightFirstPage );
    double GetMaximumHeightAdditionalPages ( );
    void PutMaximumHeightAdditionalPages (
        double MaximumHeightAdditionalPages );
    VARIANT_BOOL GetCreateNewSheetsForTable ( );
    void PutCreateNewSheetsForTable (
        VARIANT_BOOL CreateNewSheetsForTable );
    _bstr_t GetFirstSheetBackgroundName ( );
    void PutFirstSheetBackgroundName (
        _bstr_t FirstSheetBackgroundName );
    _bstr_t GetAdditionalSheetsBackgroundName ( );
    void PutAdditionalSheetsBackgroundName (
        _bstr_t AdditionalSheetsBackgroundName );
    VARIANT_BOOL GetShowSheetBackground ( );
    void PutShowSheetBackground (
        VARIANT_BOOL ShowSheetBackground );
    VARIANT_BOOL GetMaintainSheetsWithTableSize ( );
    void PutMaintainSheetsWithTableSize (
        VARIANT_BOOL MaintainSheetsWithTableSize );
    VARIANT_BOOL GetEnableGroups ( );
    void PutEnableGroups (
        VARIANT_BOOL EnableGroups );
    TableGroupsPtr GetGroups ( );
    VARIANT_BOOL GetWrapDataCellsToNewRow ( );
    void PutWrapDataCellsToNewRow (
        VARIANT_BOOL WrapDataCellsToNewRow );
    VARIANT_BOOL GetFillEndOfTableWithBlankRows ( );
    void PutFillEndOfTableWithBlankRows (
        VARIANT_BOOL FillEndOfTableWithBlankRows );
    long GetGroupByColumn ( );
    void PutGroupByColumn (
        long ColumnIndex );
    double GetTitleFixedRowHeight ( );
    void PutTitleFixedRowHeight (
        double TitleFixedRowHeight );
    HRESULT GetListOfSavedSettings (
        long * NumSavedSettings,
        SAFEARRAY * * ListOfSavedSettings );
    _bstr_t GetName ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall raw_Update ( ) = 0;
      virtual HRESULT __stdcall raw_CopyToClipboard ( ) = 0;
      virtual HRESULT __stdcall get_ModelLink (
        /*[out,retval]*/ struct ModelLink * * ppModelLink ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall put_SavedSettings (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Cell (
        /*[in]*/ VARIANT RowIndex,
        /*[in]*/ VARIANT ColumnIndex,
        /*[out,retval]*/ struct TableCell * * ppCell ) = 0;
      virtual HRESULT __stdcall get_ColumnHeaderPosition (
        /*[out,retval]*/ enum TitlePosition * ColumnHeaderPosition ) = 0;
      virtual HRESULT __stdcall put_ColumnHeaderPosition (
        /*[in]*/ enum TitlePosition ColumnHeaderPosition ) = 0;
      virtual HRESULT __stdcall get_Columns (
        /*[out,retval]*/ struct TableColumns * * Columns ) = 0;
      virtual HRESULT __stdcall get_MarginHorizontal (
        /*[out,retval]*/ double * MarginHorizontal ) = 0;
      virtual HRESULT __stdcall put_MarginHorizontal (
        /*[in]*/ double MarginHorizontal ) = 0;
      virtual HRESULT __stdcall get_MarginVertical (
        /*[out,retval]*/ double * MarginVertical ) = 0;
      virtual HRESULT __stdcall put_MarginVertical (
        /*[in]*/ double MarginVertical ) = 0;
      virtual HRESULT __stdcall get_MaximumRows (
        /*[out,retval]*/ long * MaximumRows ) = 0;
      virtual HRESULT __stdcall put_MaximumRows (
        /*[in]*/ long MaximumRows ) = 0;
      virtual HRESULT __stdcall get_PageGap (
        /*[out,retval]*/ double * PageGap ) = 0;
      virtual HRESULT __stdcall put_PageGap (
        /*[in]*/ double PageGap ) = 0;
      virtual HRESULT __stdcall get_ReverseDisplayOrder (
        /*[out,retval]*/ VARIANT_BOOL * ReverseDisplayOrder ) = 0;
      virtual HRESULT __stdcall put_ReverseDisplayOrder (
        /*[in]*/ VARIANT_BOOL ReverseDisplayOrder ) = 0;
      virtual HRESULT __stdcall get_Rows (
        /*[out,retval]*/ struct TableRows * * Rows ) = 0;
      virtual HRESULT __stdcall raw_SetOrigin (
        /*[in]*/ double x,
        /*[in]*/ double y ) = 0;
      virtual HRESULT __stdcall get_ShowColumnHeader (
        /*[out,retval]*/ VARIANT_BOOL * ShowColumnHeader ) = 0;
      virtual HRESULT __stdcall put_ShowColumnHeader (
        /*[in]*/ VARIANT_BOOL ShowColumnHeader ) = 0;
      virtual HRESULT __stdcall get_TableStyle (
        /*[out,retval]*/ BSTR * TableStyle ) = 0;
      virtual HRESULT __stdcall put_TableStyle (
        /*[in]*/ BSTR TableStyle ) = 0;
      virtual HRESULT __stdcall get_Titles (
        /*[out,retval]*/ struct TableTitles * * Titles ) = 0;
      virtual HRESULT __stdcall get_AnchorPoint (
        /*[out,retval]*/ enum TableAnchorPoint * AnchorPoint ) = 0;
      virtual HRESULT __stdcall put_AnchorPoint (
        /*[in]*/ enum TableAnchorPoint AnchorPoint ) = 0;
      virtual HRESULT __stdcall get_Pages (
        /*[out,retval]*/ struct TablePages * * Rows ) = 0;
      virtual HRESULT __stdcall get_HeaderFixedRowHeight (
        /*[out,retval]*/ double * HeaderFixedRowHeight ) = 0;
      virtual HRESULT __stdcall put_HeaderFixedRowHeight (
        /*[in]*/ double HeaderFixedRowHeight ) = 0;
      virtual HRESULT __stdcall get_DataFixedRowHeight (
        /*[out,retval]*/ double * DataFixedRowHeight ) = 0;
      virtual HRESULT __stdcall put_DataFixedRowHeight (
        /*[in]*/ double DataFixedRowHeight ) = 0;
      virtual HRESULT __stdcall get_MaximumHeight (
        /*[out,retval]*/ double * MaximumHeight ) = 0;
      virtual HRESULT __stdcall put_MaximumHeight (
        /*[in]*/ double MaximumHeight ) = 0;
      virtual HRESULT __stdcall get_NumberOfHeaderRows (
        /*[out,retval]*/ long * NumberOfHeaderRows ) = 0;
      virtual HRESULT __stdcall put_NumberOfHeaderRows (
        /*[in]*/ long NumberOfHeaderRows ) = 0;
      virtual HRESULT __stdcall get_MaximumRowsFirstPage (
        /*[out,retval]*/ long * MaximumRowsFirstPage ) = 0;
      virtual HRESULT __stdcall put_MaximumRowsFirstPage (
        /*[in]*/ long MaximumRowsFirstPage ) = 0;
      virtual HRESULT __stdcall get_MaximumRowsAdditionalPages (
        /*[out,retval]*/ long * MaximumRowsAdditionalPages ) = 0;
      virtual HRESULT __stdcall put_MaximumRowsAdditionalPages (
        /*[in]*/ long MaximumRowsAdditionalPages ) = 0;
      virtual HRESULT __stdcall get_MaximumHeightFirstPage (
        /*[out,retval]*/ double * MaximumHeightFirstPage ) = 0;
      virtual HRESULT __stdcall put_MaximumHeightFirstPage (
        /*[in]*/ double MaximumHeightFirstPage ) = 0;
      virtual HRESULT __stdcall get_MaximumHeightAdditionalPages (
        /*[out,retval]*/ double * MaximumHeightAdditionalPages ) = 0;
      virtual HRESULT __stdcall put_MaximumHeightAdditionalPages (
        /*[in]*/ double MaximumHeightAdditionalPages ) = 0;
      virtual HRESULT __stdcall get_CreateNewSheetsForTable (
        /*[out,retval]*/ VARIANT_BOOL * CreateNewSheetsForTable ) = 0;
      virtual HRESULT __stdcall put_CreateNewSheetsForTable (
        /*[in]*/ VARIANT_BOOL CreateNewSheetsForTable ) = 0;
      virtual HRESULT __stdcall get_FirstSheetBackgroundName (
        /*[out,retval]*/ BSTR * FirstSheetBackgroundName ) = 0;
      virtual HRESULT __stdcall put_FirstSheetBackgroundName (
        /*[in]*/ BSTR FirstSheetBackgroundName ) = 0;
      virtual HRESULT __stdcall get_AdditionalSheetsBackgroundName (
        /*[out,retval]*/ BSTR * AdditionalSheetsBackgroundName ) = 0;
      virtual HRESULT __stdcall put_AdditionalSheetsBackgroundName (
        /*[in]*/ BSTR AdditionalSheetsBackgroundName ) = 0;
      virtual HRESULT __stdcall get_ShowSheetBackground (
        /*[out,retval]*/ VARIANT_BOOL * ShowSheetBackground ) = 0;
      virtual HRESULT __stdcall put_ShowSheetBackground (
        /*[in]*/ VARIANT_BOOL ShowSheetBackground ) = 0;
      virtual HRESULT __stdcall get_MaintainSheetsWithTableSize (
        /*[out,retval]*/ VARIANT_BOOL * MaintainSheetsWithTableSize ) = 0;
      virtual HRESULT __stdcall put_MaintainSheetsWithTableSize (
        /*[in]*/ VARIANT_BOOL MaintainSheetsWithTableSize ) = 0;
      virtual HRESULT __stdcall get_EnableGroups (
        /*[out,retval]*/ VARIANT_BOOL * EnableGroups ) = 0;
      virtual HRESULT __stdcall put_EnableGroups (
        /*[in]*/ VARIANT_BOOL EnableGroups ) = 0;
      virtual HRESULT __stdcall get_Groups (
        /*[out,retval]*/ struct TableGroups * * Groups ) = 0;
      virtual HRESULT __stdcall get_WrapDataCellsToNewRow (
        /*[out,retval]*/ VARIANT_BOOL * WrapDataCellsToNewRow ) = 0;
      virtual HRESULT __stdcall put_WrapDataCellsToNewRow (
        /*[in]*/ VARIANT_BOOL WrapDataCellsToNewRow ) = 0;
      virtual HRESULT __stdcall get_FillEndOfTableWithBlankRows (
        /*[out,retval]*/ VARIANT_BOOL * FillEndOfTableWithBlankRows ) = 0;
      virtual HRESULT __stdcall put_FillEndOfTableWithBlankRows (
        /*[in]*/ VARIANT_BOOL FillEndOfTableWithBlankRows ) = 0;
      virtual HRESULT __stdcall get_GroupByColumn (
        /*[out,retval]*/ long * ColumnIndex ) = 0;
      virtual HRESULT __stdcall put_GroupByColumn (
        /*[in]*/ long ColumnIndex ) = 0;
      virtual HRESULT __stdcall get_TitleFixedRowHeight (
        /*[out,retval]*/ double * TitleFixedRowHeight ) = 0;
      virtual HRESULT __stdcall put_TitleFixedRowHeight (
        /*[in]*/ double TitleFixedRowHeight ) = 0;
      virtual HRESULT __stdcall raw_GetListOfSavedSettings (
        /*[out]*/ long * NumSavedSettings,
        /*[in,out]*/ SAFEARRAY * * ListOfSavedSettings ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
};

struct __declspec(uuid("1db3f5f4-7a93-4706-81ef-75892e647a39"))
ConnectorTables : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    ConnectorTablePtr Item (
        const _variant_t & Index );
    ConnectorTablePtr Add (
        struct DrawingView * DrawingView,
        _bstr_t SavedSettings,
        long AutoBalloon,
        long CreateConnectorTable );
    IDispatchPtr GetParent ( );
};

struct __declspec(uuid("15cb7c8d-72b0-4738-851c-3157df0f75d5"))
ConnectorTable : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetMaximumRows,put=PutMaximumRows))
    long MaximumRows;
    __declspec(property(get=GetPageGap,put=PutPageGap))
    double PageGap;
    __declspec(property(get=GetPages))
    TablePagesPtr Pages;
    __declspec(property(get=GetReverseDisplayOrder,put=PutReverseDisplayOrder))
    VARIANT_BOOL ReverseDisplayOrder;
    __declspec(property(get=GetRows))
    TableRowsPtr Rows;
    __declspec(property(get=GetShowColumnHeader,put=PutShowColumnHeader))
    VARIANT_BOOL ShowColumnHeader;
    __declspec(property(get=GetTableStyle,put=PutTableStyle))
    _bstr_t TableStyle;
    __declspec(property(get=GetTitles))
    TableTitlesPtr Titles;
    __declspec(property(get=GetNumberOfHeaderRows,put=PutNumberOfHeaderRows))
    long NumberOfHeaderRows;
    __declspec(property(get=GetMaximumRowsFirstPage,put=PutMaximumRowsFirstPage))
    long MaximumRowsFirstPage;
    __declspec(property(get=GetMaximumRowsAdditionalPages,put=PutMaximumRowsAdditionalPages))
    long MaximumRowsAdditionalPages;
    __declspec(property(get=GetMaximumHeightFirstPage,put=PutMaximumHeightFirstPage))
    double MaximumHeightFirstPage;
    __declspec(property(get=GetMaximumHeightAdditionalPages,put=PutMaximumHeightAdditionalPages))
    double MaximumHeightAdditionalPages;
    __declspec(property(get=GetCreateNewSheetsForTable,put=PutCreateNewSheetsForTable))
    VARIANT_BOOL CreateNewSheetsForTable;
    __declspec(property(get=GetFirstSheetBackgroundName,put=PutFirstSheetBackgroundName))
    _bstr_t FirstSheetBackgroundName;
    __declspec(property(get=GetAdditionalSheetsBackgroundName,put=PutAdditionalSheetsBackgroundName))
    _bstr_t AdditionalSheetsBackgroundName;
    __declspec(property(get=GetShowSheetBackground,put=PutShowSheetBackground))
    VARIANT_BOOL ShowSheetBackground;
    __declspec(property(get=GetMaintainSheetsWithTableSize,put=PutMaintainSheetsWithTableSize))
    VARIANT_BOOL MaintainSheetsWithTableSize;
    __declspec(property(get=GetEnableGroups,put=PutEnableGroups))
    VARIANT_BOOL EnableGroups;
    __declspec(property(get=GetGroups))
    TableGroupsPtr Groups;
    __declspec(property(get=GetWrapDataCellsToNewRow,put=PutWrapDataCellsToNewRow))
    VARIANT_BOOL WrapDataCellsToNewRow;
    __declspec(property(get=GetFillEndOfTableWithBlankRows,put=PutFillEndOfTableWithBlankRows))
    VARIANT_BOOL FillEndOfTableWithBlankRows;
    __declspec(property(get=GetGroupByColumn,put=PutGroupByColumn))
    long GroupByColumn;
    __declspec(property(get=GetTitleFixedRowHeight,put=PutTitleFixedRowHeight))
    double TitleFixedRowHeight;
    __declspec(property(get=GetMarginHorizontal,put=PutMarginHorizontal))
    double MarginHorizontal;
    __declspec(property(get=GetMarginVertical,put=PutMarginVertical))
    double MarginVertical;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetDrawingView))
    DrawingViewPtr DrawingView;
    __declspec(property(put=PutSavedSettings))
    _bstr_t SavedSettings;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIsUpToDate))
    VARIANT_BOOL IsUpToDate;
    __declspec(property(get=GetAnchorPoint,put=PutAnchorPoint))
    enum TableAnchorPoint AnchorPoint;
    __declspec(property(get=GetCell))
    TableCellPtr Cell[][];
    __declspec(property(get=GetColumnHeaderPosition,put=PutColumnHeaderPosition))
    enum TitlePosition ColumnHeaderPosition;
    __declspec(property(get=GetColumns))
    TableColumnsPtr Columns;
    __declspec(property(get=GetDataFixedRowHeight,put=PutDataFixedRowHeight))
    double DataFixedRowHeight;
    __declspec(property(get=GetHeaderFixedRowHeight,put=PutHeaderFixedRowHeight))
    double HeaderFixedRowHeight;
    __declspec(property(get=GetMargin,put=PutMargin))
    double Margin;
    __declspec(property(get=GetMaximumHeight,put=PutMaximumHeight))
    double MaximumHeight;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    HRESULT Update ( );
    HRESULT CopyToClipboard ( );
    DrawingViewPtr GetDrawingView ( );
    HRESULT Delete ( );
    void PutSavedSettings (
        _bstr_t _arg1 );
    IDispatchPtr GetParent ( );
    HRESULT SetOrigin (
        double x,
        double y );
    HRESULT GetOrigin (
        double * x,
        double * y );
    HRESULT GetListOfSavedSettings (
        long * NumSavedSettings,
        SAFEARRAY * * ListOfSavedSettings );
    VARIANT_BOOL GetIsUpToDate ( );
    HRESULT ConvertToTable ( );
    TableCellPtr GetCell (
        const _variant_t & RowIndex,
        const _variant_t & ColumnIndex );
    enum TitlePosition GetColumnHeaderPosition ( );
    void PutColumnHeaderPosition (
        enum TitlePosition _arg1 );
    TableColumnsPtr GetColumns ( );
    double GetMargin ( );
    void PutMargin (
        double _arg1 );
    long GetMaximumRows ( );
    void PutMaximumRows (
        long _arg1 );
    double GetPageGap ( );
    void PutPageGap (
        double _arg1 );
    VARIANT_BOOL GetReverseDisplayOrder ( );
    void PutReverseDisplayOrder (
        VARIANT_BOOL _arg1 );
    TableRowsPtr GetRows ( );
    VARIANT_BOOL GetShowColumnHeader ( );
    void PutShowColumnHeader (
        VARIANT_BOOL _arg1 );
    _bstr_t GetTableStyle ( );
    void PutTableStyle (
        _bstr_t _arg1 );
    TableTitlesPtr GetTitles ( );
    enum TableAnchorPoint GetAnchorPoint ( );
    void PutAnchorPoint (
        enum TableAnchorPoint _arg1 );
    TablePagesPtr GetPages ( );
    double GetHeaderFixedRowHeight ( );
    void PutHeaderFixedRowHeight (
        double _arg1 );
    double GetDataFixedRowHeight ( );
    void PutDataFixedRowHeight (
        double _arg1 );
    double GetMaximumHeight ( );
    void PutMaximumHeight (
        double _arg1 );
    long GetNumberOfHeaderRows ( );
    void PutNumberOfHeaderRows (
        long _arg1 );
    long GetMaximumRowsFirstPage ( );
    void PutMaximumRowsFirstPage (
        long _arg1 );
    long GetMaximumRowsAdditionalPages ( );
    void PutMaximumRowsAdditionalPages (
        long _arg1 );
    double GetMaximumHeightFirstPage ( );
    void PutMaximumHeightFirstPage (
        double _arg1 );
    double GetMaximumHeightAdditionalPages ( );
    void PutMaximumHeightAdditionalPages (
        double _arg1 );
    VARIANT_BOOL GetCreateNewSheetsForTable ( );
    void PutCreateNewSheetsForTable (
        VARIANT_BOOL _arg1 );
    _bstr_t GetFirstSheetBackgroundName ( );
    void PutFirstSheetBackgroundName (
        _bstr_t _arg1 );
    _bstr_t GetAdditionalSheetsBackgroundName ( );
    void PutAdditionalSheetsBackgroundName (
        _bstr_t _arg1 );
    VARIANT_BOOL GetShowSheetBackground ( );
    void PutShowSheetBackground (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetMaintainSheetsWithTableSize ( );
    void PutMaintainSheetsWithTableSize (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetEnableGroups ( );
    void PutEnableGroups (
        VARIANT_BOOL _arg1 );
    TableGroupsPtr GetGroups ( );
    VARIANT_BOOL GetWrapDataCellsToNewRow ( );
    void PutWrapDataCellsToNewRow (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetFillEndOfTableWithBlankRows ( );
    void PutFillEndOfTableWithBlankRows (
        VARIANT_BOOL _arg1 );
    long GetGroupByColumn ( );
    void PutGroupByColumn (
        long _arg1 );
    double GetTitleFixedRowHeight ( );
    void PutTitleFixedRowHeight (
        double _arg1 );
    double GetMarginHorizontal ( );
    void PutMarginHorizontal (
        double _arg1 );
    double GetMarginVertical ( );
    void PutMarginVertical (
        double _arg1 );
    _bstr_t GetName ( );
};

struct __declspec(uuid("40ad0ef5-5b13-4ad0-93bd-d451d3b7ef83"))
_IConnectorTablesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    ConnectorTablePtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    ConnectorTablePtr Add (
        struct DrawingView * DrawingView,
        _bstr_t SavedSettings,
        long AutoBalloon,
        long CreateConnectorTable );
    IDispatchPtr GetParent ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct ConnectorTable * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Unknown ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ struct DrawingView * DrawingView,
        /*[in]*/ BSTR SavedSettings,
        /*[in]*/ long AutoBalloon,
        /*[in]*/ long CreateConnectorTable,
        /*[out,retval]*/ struct ConnectorTable * * ppObj ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
};

struct __declspec(uuid("af5a9b4f-e67a-41e0-8c82-736d978c8d18"))
_IConnectorTableAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetMaximumRows,put=PutMaximumRows))
    long MaximumRows;
    __declspec(property(get=GetPageGap,put=PutPageGap))
    double PageGap;
    __declspec(property(get=GetPages))
    TablePagesPtr Pages;
    __declspec(property(get=GetReverseDisplayOrder,put=PutReverseDisplayOrder))
    VARIANT_BOOL ReverseDisplayOrder;
    __declspec(property(get=GetRows))
    TableRowsPtr Rows;
    __declspec(property(get=GetShowColumnHeader,put=PutShowColumnHeader))
    VARIANT_BOOL ShowColumnHeader;
    __declspec(property(get=GetTableStyle,put=PutTableStyle))
    _bstr_t TableStyle;
    __declspec(property(get=GetTitles))
    TableTitlesPtr Titles;
    __declspec(property(get=GetNumberOfHeaderRows,put=PutNumberOfHeaderRows))
    long NumberOfHeaderRows;
    __declspec(property(get=GetMaximumRowsFirstPage,put=PutMaximumRowsFirstPage))
    long MaximumRowsFirstPage;
    __declspec(property(get=GetMaximumRowsAdditionalPages,put=PutMaximumRowsAdditionalPages))
    long MaximumRowsAdditionalPages;
    __declspec(property(get=GetMaximumHeightFirstPage,put=PutMaximumHeightFirstPage))
    double MaximumHeightFirstPage;
    __declspec(property(get=GetMaximumHeightAdditionalPages,put=PutMaximumHeightAdditionalPages))
    double MaximumHeightAdditionalPages;
    __declspec(property(get=GetCreateNewSheetsForTable,put=PutCreateNewSheetsForTable))
    VARIANT_BOOL CreateNewSheetsForTable;
    __declspec(property(get=GetFirstSheetBackgroundName,put=PutFirstSheetBackgroundName))
    _bstr_t FirstSheetBackgroundName;
    __declspec(property(get=GetAdditionalSheetsBackgroundName,put=PutAdditionalSheetsBackgroundName))
    _bstr_t AdditionalSheetsBackgroundName;
    __declspec(property(get=GetShowSheetBackground,put=PutShowSheetBackground))
    VARIANT_BOOL ShowSheetBackground;
    __declspec(property(get=GetMaintainSheetsWithTableSize,put=PutMaintainSheetsWithTableSize))
    VARIANT_BOOL MaintainSheetsWithTableSize;
    __declspec(property(get=GetEnableGroups,put=PutEnableGroups))
    VARIANT_BOOL EnableGroups;
    __declspec(property(get=GetGroups))
    TableGroupsPtr Groups;
    __declspec(property(get=GetWrapDataCellsToNewRow,put=PutWrapDataCellsToNewRow))
    VARIANT_BOOL WrapDataCellsToNewRow;
    __declspec(property(get=GetFillEndOfTableWithBlankRows,put=PutFillEndOfTableWithBlankRows))
    VARIANT_BOOL FillEndOfTableWithBlankRows;
    __declspec(property(get=GetGroupByColumn,put=PutGroupByColumn))
    long GroupByColumn;
    __declspec(property(get=GetTitleFixedRowHeight,put=PutTitleFixedRowHeight))
    double TitleFixedRowHeight;
    __declspec(property(get=GetMarginHorizontal,put=PutMarginHorizontal))
    double MarginHorizontal;
    __declspec(property(get=GetMarginVertical,put=PutMarginVertical))
    double MarginVertical;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetDrawingView))
    DrawingViewPtr DrawingView;
    __declspec(property(put=PutSavedSettings))
    _bstr_t SavedSettings;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIsUpToDate))
    VARIANT_BOOL IsUpToDate;
    __declspec(property(get=GetAnchorPoint,put=PutAnchorPoint))
    enum TableAnchorPoint AnchorPoint;
    __declspec(property(get=GetCell))
    TableCellPtr Cell[][];
    __declspec(property(get=GetColumnHeaderPosition,put=PutColumnHeaderPosition))
    enum TitlePosition ColumnHeaderPosition;
    __declspec(property(get=GetColumns))
    TableColumnsPtr Columns;
    __declspec(property(get=GetDataFixedRowHeight,put=PutDataFixedRowHeight))
    double DataFixedRowHeight;
    __declspec(property(get=GetHeaderFixedRowHeight,put=PutHeaderFixedRowHeight))
    double HeaderFixedRowHeight;
    __declspec(property(get=GetMargin,put=PutMargin))
    double Margin;
    __declspec(property(get=GetMaximumHeight,put=PutMaximumHeight))
    double MaximumHeight;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    HRESULT Update ( );
    HRESULT CopyToClipboard ( );
    DrawingViewPtr GetDrawingView ( );
    HRESULT Delete ( );
    void PutSavedSettings (
        _bstr_t _arg1 );
    IDispatchPtr GetParent ( );
    HRESULT SetOrigin (
        double x,
        double y );
    HRESULT GetOrigin (
        double * x,
        double * y );
    HRESULT GetListOfSavedSettings (
        long * NumSavedSettings,
        SAFEARRAY * * ListOfSavedSettings );
    VARIANT_BOOL GetIsUpToDate ( );
    HRESULT ConvertToTable ( );
    TableCellPtr GetCell (
        const _variant_t & RowIndex,
        const _variant_t & ColumnIndex );
    enum TitlePosition GetColumnHeaderPosition ( );
    void PutColumnHeaderPosition (
        enum TitlePosition ColumnHeaderPosition );
    TableColumnsPtr GetColumns ( );
    double GetMargin ( );
    void PutMargin (
        double Margin );
    long GetMaximumRows ( );
    void PutMaximumRows (
        long MaximumRows );
    double GetPageGap ( );
    void PutPageGap (
        double PageGap );
    VARIANT_BOOL GetReverseDisplayOrder ( );
    void PutReverseDisplayOrder (
        VARIANT_BOOL ReverseDisplayOrder );
    TableRowsPtr GetRows ( );
    VARIANT_BOOL GetShowColumnHeader ( );
    void PutShowColumnHeader (
        VARIANT_BOOL ShowColumnHeader );
    _bstr_t GetTableStyle ( );
    void PutTableStyle (
        _bstr_t TableStyle );
    TableTitlesPtr GetTitles ( );
    enum TableAnchorPoint GetAnchorPoint ( );
    void PutAnchorPoint (
        enum TableAnchorPoint AnchorPoint );
    TablePagesPtr GetPages ( );
    double GetHeaderFixedRowHeight ( );
    void PutHeaderFixedRowHeight (
        double HeaderFixedRowHeight );
    double GetDataFixedRowHeight ( );
    void PutDataFixedRowHeight (
        double DataFixedRowHeight );
    double GetMaximumHeight ( );
    void PutMaximumHeight (
        double MaximumHeight );
    long GetNumberOfHeaderRows ( );
    void PutNumberOfHeaderRows (
        long NumberOfHeaderRows );
    long GetMaximumRowsFirstPage ( );
    void PutMaximumRowsFirstPage (
        long MaximumRowsFirstPage );
    long GetMaximumRowsAdditionalPages ( );
    void PutMaximumRowsAdditionalPages (
        long MaximumRowsAdditionalPages );
    double GetMaximumHeightFirstPage ( );
    void PutMaximumHeightFirstPage (
        double MaximumHeightFirstPage );
    double GetMaximumHeightAdditionalPages ( );
    void PutMaximumHeightAdditionalPages (
        double MaximumHeightAdditionalPages );
    VARIANT_BOOL GetCreateNewSheetsForTable ( );
    void PutCreateNewSheetsForTable (
        VARIANT_BOOL CreateNewSheetsForTable );
    _bstr_t GetFirstSheetBackgroundName ( );
    void PutFirstSheetBackgroundName (
        _bstr_t FirstSheetBackgroundName );
    _bstr_t GetAdditionalSheetsBackgroundName ( );
    void PutAdditionalSheetsBackgroundName (
        _bstr_t AdditionalSheetsBackgroundName );
    VARIANT_BOOL GetShowSheetBackground ( );
    void PutShowSheetBackground (
        VARIANT_BOOL ShowSheetBackground );
    VARIANT_BOOL GetMaintainSheetsWithTableSize ( );
    void PutMaintainSheetsWithTableSize (
        VARIANT_BOOL MaintainSheetsWithTableSize );
    VARIANT_BOOL GetEnableGroups ( );
    void PutEnableGroups (
        VARIANT_BOOL EnableGroups );
    TableGroupsPtr GetGroups ( );
    VARIANT_BOOL GetWrapDataCellsToNewRow ( );
    void PutWrapDataCellsToNewRow (
        VARIANT_BOOL WrapDataCellsToNewRow );
    VARIANT_BOOL GetFillEndOfTableWithBlankRows ( );
    void PutFillEndOfTableWithBlankRows (
        VARIANT_BOOL FillEndOfTableWithBlankRows );
    long GetGroupByColumn ( );
    void PutGroupByColumn (
        long ColumnIndex );
    double GetTitleFixedRowHeight ( );
    void PutTitleFixedRowHeight (
        double TitleFixedRowHeight );
    double GetMarginHorizontal ( );
    void PutMarginHorizontal (
        double MarginHorizontal );
    double GetMarginVertical ( );
    void PutMarginVertical (
        double MarginVertical );
    _bstr_t GetName ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall raw_Update ( ) = 0;
      virtual HRESULT __stdcall raw_CopyToClipboard ( ) = 0;
      virtual HRESULT __stdcall get_DrawingView (
        /*[out,retval]*/ struct DrawingView * * ppDrawingView ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall put_SavedSettings (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_SetOrigin (
        /*[in]*/ double x,
        /*[in]*/ double y ) = 0;
      virtual HRESULT __stdcall raw_GetOrigin (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall raw_GetListOfSavedSettings (
        /*[out]*/ long * NumSavedSettings,
        /*[in,out]*/ SAFEARRAY * * ListOfSavedSettings ) = 0;
      virtual HRESULT __stdcall get_IsUpToDate (
        /*[out,retval]*/ VARIANT_BOOL * UpToDate ) = 0;
      virtual HRESULT __stdcall raw_ConvertToTable ( ) = 0;
      virtual HRESULT __stdcall get_Cell (
        /*[in]*/ VARIANT RowIndex,
        /*[in]*/ VARIANT ColumnIndex,
        /*[out,retval]*/ struct TableCell * * ppCell ) = 0;
      virtual HRESULT __stdcall get_ColumnHeaderPosition (
        /*[out,retval]*/ enum TitlePosition * ColumnHeaderPosition ) = 0;
      virtual HRESULT __stdcall put_ColumnHeaderPosition (
        /*[in]*/ enum TitlePosition ColumnHeaderPosition ) = 0;
      virtual HRESULT __stdcall get_Columns (
        /*[out,retval]*/ struct TableColumns * * Columns ) = 0;
      virtual HRESULT __stdcall get_Margin (
        /*[out,retval]*/ double * Margin ) = 0;
      virtual HRESULT __stdcall put_Margin (
        /*[in]*/ double Margin ) = 0;
      virtual HRESULT __stdcall get_MaximumRows (
        /*[out,retval]*/ long * MaximumRows ) = 0;
      virtual HRESULT __stdcall put_MaximumRows (
        /*[in]*/ long MaximumRows ) = 0;
      virtual HRESULT __stdcall get_PageGap (
        /*[out,retval]*/ double * PageGap ) = 0;
      virtual HRESULT __stdcall put_PageGap (
        /*[in]*/ double PageGap ) = 0;
      virtual HRESULT __stdcall get_ReverseDisplayOrder (
        /*[out,retval]*/ VARIANT_BOOL * ReverseDisplayOrder ) = 0;
      virtual HRESULT __stdcall put_ReverseDisplayOrder (
        /*[in]*/ VARIANT_BOOL ReverseDisplayOrder ) = 0;
      virtual HRESULT __stdcall get_Rows (
        /*[out,retval]*/ struct TableRows * * Rows ) = 0;
      virtual HRESULT __stdcall get_ShowColumnHeader (
        /*[out,retval]*/ VARIANT_BOOL * ShowColumnHeader ) = 0;
      virtual HRESULT __stdcall put_ShowColumnHeader (
        /*[in]*/ VARIANT_BOOL ShowColumnHeader ) = 0;
      virtual HRESULT __stdcall get_TableStyle (
        /*[out,retval]*/ BSTR * TableStyle ) = 0;
      virtual HRESULT __stdcall put_TableStyle (
        /*[in]*/ BSTR TableStyle ) = 0;
      virtual HRESULT __stdcall get_Titles (
        /*[out,retval]*/ struct TableTitles * * Titles ) = 0;
      virtual HRESULT __stdcall get_AnchorPoint (
        /*[out,retval]*/ enum TableAnchorPoint * AnchorPoint ) = 0;
      virtual HRESULT __stdcall put_AnchorPoint (
        /*[in]*/ enum TableAnchorPoint AnchorPoint ) = 0;
      virtual HRESULT __stdcall get_Pages (
        /*[out,retval]*/ struct TablePages * * Rows ) = 0;
      virtual HRESULT __stdcall get_HeaderFixedRowHeight (
        /*[out,retval]*/ double * HeaderFixedRowHeight ) = 0;
      virtual HRESULT __stdcall put_HeaderFixedRowHeight (
        /*[in]*/ double HeaderFixedRowHeight ) = 0;
      virtual HRESULT __stdcall get_DataFixedRowHeight (
        /*[out,retval]*/ double * DataFixedRowHeight ) = 0;
      virtual HRESULT __stdcall put_DataFixedRowHeight (
        /*[in]*/ double DataFixedRowHeight ) = 0;
      virtual HRESULT __stdcall get_MaximumHeight (
        /*[out,retval]*/ double * MaximumHeight ) = 0;
      virtual HRESULT __stdcall put_MaximumHeight (
        /*[in]*/ double MaximumHeight ) = 0;
      virtual HRESULT __stdcall get_NumberOfHeaderRows (
        /*[out,retval]*/ long * NumberOfHeaderRows ) = 0;
      virtual HRESULT __stdcall put_NumberOfHeaderRows (
        /*[in]*/ long NumberOfHeaderRows ) = 0;
      virtual HRESULT __stdcall get_MaximumRowsFirstPage (
        /*[out,retval]*/ long * MaximumRowsFirstPage ) = 0;
      virtual HRESULT __stdcall put_MaximumRowsFirstPage (
        /*[in]*/ long MaximumRowsFirstPage ) = 0;
      virtual HRESULT __stdcall get_MaximumRowsAdditionalPages (
        /*[out,retval]*/ long * MaximumRowsAdditionalPages ) = 0;
      virtual HRESULT __stdcall put_MaximumRowsAdditionalPages (
        /*[in]*/ long MaximumRowsAdditionalPages ) = 0;
      virtual HRESULT __stdcall get_MaximumHeightFirstPage (
        /*[out,retval]*/ double * MaximumHeightFirstPage ) = 0;
      virtual HRESULT __stdcall put_MaximumHeightFirstPage (
        /*[in]*/ double MaximumHeightFirstPage ) = 0;
      virtual HRESULT __stdcall get_MaximumHeightAdditionalPages (
        /*[out,retval]*/ double * MaximumHeightAdditionalPages ) = 0;
      virtual HRESULT __stdcall put_MaximumHeightAdditionalPages (
        /*[in]*/ double MaximumHeightAdditionalPages ) = 0;
      virtual HRESULT __stdcall get_CreateNewSheetsForTable (
        /*[out,retval]*/ VARIANT_BOOL * CreateNewSheetsForTable ) = 0;
      virtual HRESULT __stdcall put_CreateNewSheetsForTable (
        /*[in]*/ VARIANT_BOOL CreateNewSheetsForTable ) = 0;
      virtual HRESULT __stdcall get_FirstSheetBackgroundName (
        /*[out,retval]*/ BSTR * FirstSheetBackgroundName ) = 0;
      virtual HRESULT __stdcall put_FirstSheetBackgroundName (
        /*[in]*/ BSTR FirstSheetBackgroundName ) = 0;
      virtual HRESULT __stdcall get_AdditionalSheetsBackgroundName (
        /*[out,retval]*/ BSTR * AdditionalSheetsBackgroundName ) = 0;
      virtual HRESULT __stdcall put_AdditionalSheetsBackgroundName (
        /*[in]*/ BSTR AdditionalSheetsBackgroundName ) = 0;
      virtual HRESULT __stdcall get_ShowSheetBackground (
        /*[out,retval]*/ VARIANT_BOOL * ShowSheetBackground ) = 0;
      virtual HRESULT __stdcall put_ShowSheetBackground (
        /*[in]*/ VARIANT_BOOL ShowSheetBackground ) = 0;
      virtual HRESULT __stdcall get_MaintainSheetsWithTableSize (
        /*[out,retval]*/ VARIANT_BOOL * MaintainSheetsWithTableSize ) = 0;
      virtual HRESULT __stdcall put_MaintainSheetsWithTableSize (
        /*[in]*/ VARIANT_BOOL MaintainSheetsWithTableSize ) = 0;
      virtual HRESULT __stdcall get_EnableGroups (
        /*[out,retval]*/ VARIANT_BOOL * EnableGroups ) = 0;
      virtual HRESULT __stdcall put_EnableGroups (
        /*[in]*/ VARIANT_BOOL EnableGroups ) = 0;
      virtual HRESULT __stdcall get_Groups (
        /*[out,retval]*/ struct TableGroups * * Groups ) = 0;
      virtual HRESULT __stdcall get_WrapDataCellsToNewRow (
        /*[out,retval]*/ VARIANT_BOOL * WrapDataCellsToNewRow ) = 0;
      virtual HRESULT __stdcall put_WrapDataCellsToNewRow (
        /*[in]*/ VARIANT_BOOL WrapDataCellsToNewRow ) = 0;
      virtual HRESULT __stdcall get_FillEndOfTableWithBlankRows (
        /*[out,retval]*/ VARIANT_BOOL * FillEndOfTableWithBlankRows ) = 0;
      virtual HRESULT __stdcall put_FillEndOfTableWithBlankRows (
        /*[in]*/ VARIANT_BOOL FillEndOfTableWithBlankRows ) = 0;
      virtual HRESULT __stdcall get_GroupByColumn (
        /*[out,retval]*/ long * ColumnIndex ) = 0;
      virtual HRESULT __stdcall put_GroupByColumn (
        /*[in]*/ long ColumnIndex ) = 0;
      virtual HRESULT __stdcall get_TitleFixedRowHeight (
        /*[out,retval]*/ double * TitleFixedRowHeight ) = 0;
      virtual HRESULT __stdcall put_TitleFixedRowHeight (
        /*[in]*/ double TitleFixedRowHeight ) = 0;
      virtual HRESULT __stdcall get_MarginHorizontal (
        /*[out,retval]*/ double * MarginHorizontal ) = 0;
      virtual HRESULT __stdcall put_MarginHorizontal (
        /*[in]*/ double MarginHorizontal ) = 0;
      virtual HRESULT __stdcall get_MarginVertical (
        /*[out,retval]*/ double * MarginVertical ) = 0;
      virtual HRESULT __stdcall put_MarginVertical (
        /*[in]*/ double MarginVertical ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
};

struct __declspec(uuid("98975961-4f99-4dc1-b19e-ae7215f061c0"))
BlockTables : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    BlockTablePtr Item (
        const _variant_t & Index );
    BlockTablePtr AddByActiveSheet (
        _bstr_t SavedSettings,
        long AutoBalloon );
    BlockTablePtr AddByDrawingView (
        struct DrawingView * DrawingView,
        _bstr_t SavedSettings,
        long AutoBalloon,
        long BlocksInView );
    BlockTablePtr AddByUserSelection (
        _bstr_t SavedSettings,
        long AutoBalloon );
    IDispatchPtr GetParent ( );
};

struct __declspec(uuid("1a23e531-6f1c-4616-ad40-adbbb03308d1"))
BlockTable : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(put=PutSavedSettings))
    _bstr_t SavedSettings;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIsUpToDate))
    VARIANT_BOOL IsUpToDate;
    __declspec(property(get=GetAnchorPoint,put=PutAnchorPoint))
    enum TableAnchorPoint AnchorPoint;
    __declspec(property(get=GetCell))
    TableCellPtr Cell[][];
    __declspec(property(get=GetColumnHeaderPosition,put=PutColumnHeaderPosition))
    enum TitlePosition ColumnHeaderPosition;
    __declspec(property(get=GetColumns))
    TableColumnsPtr Columns;
    __declspec(property(get=GetDataFixedRowHeight,put=PutDataFixedRowHeight))
    double DataFixedRowHeight;
    __declspec(property(get=GetHeaderFixedRowHeight,put=PutHeaderFixedRowHeight))
    double HeaderFixedRowHeight;
    __declspec(property(get=GetMargin,put=PutMargin))
    double Margin;
    __declspec(property(get=GetMaximumHeight,put=PutMaximumHeight))
    double MaximumHeight;
    __declspec(property(get=GetMaximumRows,put=PutMaximumRows))
    long MaximumRows;
    __declspec(property(get=GetPageGap,put=PutPageGap))
    double PageGap;
    __declspec(property(get=GetPages))
    TablePagesPtr Pages;
    __declspec(property(get=GetReverseDisplayOrder,put=PutReverseDisplayOrder))
    VARIANT_BOOL ReverseDisplayOrder;
    __declspec(property(get=GetRows))
    TableRowsPtr Rows;
    __declspec(property(get=GetShowColumnHeader,put=PutShowColumnHeader))
    VARIANT_BOOL ShowColumnHeader;
    __declspec(property(get=GetTableStyle,put=PutTableStyle))
    _bstr_t TableStyle;
    __declspec(property(get=GetTitles))
    TableTitlesPtr Titles;
    __declspec(property(get=GetNumberOfHeaderRows,put=PutNumberOfHeaderRows))
    long NumberOfHeaderRows;
    __declspec(property(get=GetMaximumRowsFirstPage,put=PutMaximumRowsFirstPage))
    long MaximumRowsFirstPage;
    __declspec(property(get=GetMaximumRowsAdditionalPages,put=PutMaximumRowsAdditionalPages))
    long MaximumRowsAdditionalPages;
    __declspec(property(get=GetMaximumHeightFirstPage,put=PutMaximumHeightFirstPage))
    double MaximumHeightFirstPage;
    __declspec(property(get=GetMaximumHeightAdditionalPages,put=PutMaximumHeightAdditionalPages))
    double MaximumHeightAdditionalPages;
    __declspec(property(get=GetCreateNewSheetsForTable,put=PutCreateNewSheetsForTable))
    VARIANT_BOOL CreateNewSheetsForTable;
    __declspec(property(get=GetFirstSheetBackgroundName,put=PutFirstSheetBackgroundName))
    _bstr_t FirstSheetBackgroundName;
    __declspec(property(get=GetAdditionalSheetsBackgroundName,put=PutAdditionalSheetsBackgroundName))
    _bstr_t AdditionalSheetsBackgroundName;
    __declspec(property(get=GetShowSheetBackground,put=PutShowSheetBackground))
    VARIANT_BOOL ShowSheetBackground;
    __declspec(property(get=GetMaintainSheetsWithTableSize,put=PutMaintainSheetsWithTableSize))
    VARIANT_BOOL MaintainSheetsWithTableSize;
    __declspec(property(get=GetEnableGroups,put=PutEnableGroups))
    VARIANT_BOOL EnableGroups;
    __declspec(property(get=GetGroups))
    TableGroupsPtr Groups;
    __declspec(property(get=GetWrapDataCellsToNewRow,put=PutWrapDataCellsToNewRow))
    VARIANT_BOOL WrapDataCellsToNewRow;
    __declspec(property(get=GetFillEndOfTableWithBlankRows,put=PutFillEndOfTableWithBlankRows))
    VARIANT_BOOL FillEndOfTableWithBlankRows;
    __declspec(property(get=GetGroupByColumn,put=PutGroupByColumn))
    long GroupByColumn;
    __declspec(property(get=GetTitleFixedRowHeight,put=PutTitleFixedRowHeight))
    double TitleFixedRowHeight;
    __declspec(property(get=GetItemNumberStart,put=PutItemNumberStart))
    long ItemNumberStart;
    __declspec(property(get=GetItemNumberIncrement,put=PutItemNumberIncrement))
    long ItemNumberIncrement;
    __declspec(property(get=GetMarkUnballoonedItems,put=PutMarkUnballoonedItems))
    VARIANT_BOOL MarkUnballoonedItems;
    __declspec(property(get=GetMarkUnballoonedItemsString,put=PutMarkUnballoonedItemsString))
    _bstr_t MarkUnballoonedItemsString;
    __declspec(property(get=GetRenumberAccordingToSortOrder,put=PutRenumberAccordingToSortOrder))
    VARIANT_BOOL RenumberAccordingToSortOrder;
    __declspec(property(get=GetConvertDeletedBlocksIntoUserDefinedRows,put=PutConvertDeletedBlocksIntoUserDefinedRows))
    VARIANT_BOOL ConvertDeletedBlocksIntoUserDefinedRows;
    __declspec(property(get=GetListType,put=PutListType))
    enum BlockTableType ListType;
    __declspec(property(get=GetListBlockOnSeparateRow,put=PutListBlockOnSeparateRow))
    VARIANT_BOOL ListBlockOnSeparateRow;
    __declspec(property(get=GetUseSameItemNumberForBlockViews,put=PutUseSameItemNumberForBlockViews))
    VARIANT_BOOL UseSameItemNumberForBlockViews;
    __declspec(property(get=GetListByBlockOccurrence,put=PutListByBlockOccurrence))
    VARIANT_BOOL ListByBlockOccurrence;
    __declspec(property(get=GetListBlockOrBlockViewOnSeparateRow,put=PutListBlockOrBlockViewOnSeparateRow))
    VARIANT_BOOL ListBlockOrBlockViewOnSeparateRow;
    __declspec(property(get=GetListNestedBlocks,put=PutListNestedBlocks))
    VARIANT_BOOL ListNestedBlocks;
    __declspec(property(get=GetListAllNestedBlocksSeparately,put=PutListAllNestedBlocksSeparately))
    VARIANT_BOOL ListAllNestedBlocksSeparately;
    __declspec(property(get=GetListWithNestedStructure,put=PutListWithNestedStructure))
    VARIANT_BOOL ListWithNestedStructure;
    __declspec(property(get=GetUseLevelBasedItemNumbers,put=PutUseLevelBasedItemNumbers))
    VARIANT_BOOL UseLevelBasedItemNumbers;
    __declspec(property(get=GetMarginHorizontal,put=PutMarginHorizontal))
    double MarginHorizontal;
    __declspec(property(get=GetMarginVertical,put=PutMarginVertical))
    double MarginVertical;
    __declspec(property(get=GetName))
    _bstr_t Name;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    HRESULT Update ( );
    HRESULT CopyToClipboard ( );
    HRESULT SourceBlocks (
        SAFEARRAY * * ppBlocks );
    HRESULT Delete ( );
    void PutSavedSettings (
        _bstr_t _arg1 );
    IDispatchPtr GetParent ( );
    HRESULT SetOrigin (
        double x,
        double y );
    HRESULT GetOrigin (
        double * x,
        double * y );
    HRESULT GetListOfSavedSettings (
        long * NumSavedSettings,
        SAFEARRAY * * ListOfSavedSettings );
    VARIANT_BOOL GetIsUpToDate ( );
    HRESULT ConvertToTable ( );
    TableCellPtr GetCell (
        const _variant_t & RowIndex,
        const _variant_t & ColumnIndex );
    enum TitlePosition GetColumnHeaderPosition ( );
    void PutColumnHeaderPosition (
        enum TitlePosition _arg1 );
    TableColumnsPtr GetColumns ( );
    double GetMargin ( );
    void PutMargin (
        double _arg1 );
    long GetMaximumRows ( );
    void PutMaximumRows (
        long _arg1 );
    double GetPageGap ( );
    void PutPageGap (
        double _arg1 );
    VARIANT_BOOL GetReverseDisplayOrder ( );
    void PutReverseDisplayOrder (
        VARIANT_BOOL _arg1 );
    TableRowsPtr GetRows ( );
    VARIANT_BOOL GetShowColumnHeader ( );
    void PutShowColumnHeader (
        VARIANT_BOOL _arg1 );
    _bstr_t GetTableStyle ( );
    void PutTableStyle (
        _bstr_t _arg1 );
    TableTitlesPtr GetTitles ( );
    enum TableAnchorPoint GetAnchorPoint ( );
    void PutAnchorPoint (
        enum TableAnchorPoint _arg1 );
    TablePagesPtr GetPages ( );
    double GetHeaderFixedRowHeight ( );
    void PutHeaderFixedRowHeight (
        double _arg1 );
    double GetDataFixedRowHeight ( );
    void PutDataFixedRowHeight (
        double _arg1 );
    double GetMaximumHeight ( );
    void PutMaximumHeight (
        double _arg1 );
    long GetNumberOfHeaderRows ( );
    void PutNumberOfHeaderRows (
        long _arg1 );
    long GetMaximumRowsFirstPage ( );
    void PutMaximumRowsFirstPage (
        long _arg1 );
    long GetMaximumRowsAdditionalPages ( );
    void PutMaximumRowsAdditionalPages (
        long _arg1 );
    double GetMaximumHeightFirstPage ( );
    void PutMaximumHeightFirstPage (
        double _arg1 );
    double GetMaximumHeightAdditionalPages ( );
    void PutMaximumHeightAdditionalPages (
        double _arg1 );
    VARIANT_BOOL GetCreateNewSheetsForTable ( );
    void PutCreateNewSheetsForTable (
        VARIANT_BOOL _arg1 );
    _bstr_t GetFirstSheetBackgroundName ( );
    void PutFirstSheetBackgroundName (
        _bstr_t _arg1 );
    _bstr_t GetAdditionalSheetsBackgroundName ( );
    void PutAdditionalSheetsBackgroundName (
        _bstr_t _arg1 );
    VARIANT_BOOL GetShowSheetBackground ( );
    void PutShowSheetBackground (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetMaintainSheetsWithTableSize ( );
    void PutMaintainSheetsWithTableSize (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetEnableGroups ( );
    void PutEnableGroups (
        VARIANT_BOOL _arg1 );
    TableGroupsPtr GetGroups ( );
    VARIANT_BOOL GetWrapDataCellsToNewRow ( );
    void PutWrapDataCellsToNewRow (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetFillEndOfTableWithBlankRows ( );
    void PutFillEndOfTableWithBlankRows (
        VARIANT_BOOL _arg1 );
    long GetGroupByColumn ( );
    void PutGroupByColumn (
        long _arg1 );
    double GetTitleFixedRowHeight ( );
    void PutTitleFixedRowHeight (
        double _arg1 );
    long GetItemNumberStart ( );
    void PutItemNumberStart (
        long _arg1 );
    long GetItemNumberIncrement ( );
    void PutItemNumberIncrement (
        long _arg1 );
    VARIANT_BOOL GetMarkUnballoonedItems ( );
    void PutMarkUnballoonedItems (
        VARIANT_BOOL _arg1 );
    _bstr_t GetMarkUnballoonedItemsString ( );
    void PutMarkUnballoonedItemsString (
        _bstr_t _arg1 );
    VARIANT_BOOL GetRenumberAccordingToSortOrder ( );
    void PutRenumberAccordingToSortOrder (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetConvertDeletedBlocksIntoUserDefinedRows ( );
    void PutConvertDeletedBlocksIntoUserDefinedRows (
        VARIANT_BOOL _arg1 );
    enum BlockTableType GetListType ( );
    void PutListType (
        enum BlockTableType _arg1 );
    VARIANT_BOOL GetListBlockOnSeparateRow ( );
    void PutListBlockOnSeparateRow (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetUseSameItemNumberForBlockViews ( );
    void PutUseSameItemNumberForBlockViews (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetListByBlockOccurrence ( );
    void PutListByBlockOccurrence (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetListBlockOrBlockViewOnSeparateRow ( );
    void PutListBlockOrBlockViewOnSeparateRow (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetListNestedBlocks ( );
    void PutListNestedBlocks (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetListAllNestedBlocksSeparately ( );
    void PutListAllNestedBlocksSeparately (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetListWithNestedStructure ( );
    void PutListWithNestedStructure (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetUseLevelBasedItemNumbers ( );
    void PutUseLevelBasedItemNumbers (
        VARIANT_BOOL _arg1 );
    double GetMarginHorizontal ( );
    void PutMarginHorizontal (
        double _arg1 );
    double GetMarginVertical ( );
    void PutMarginVertical (
        double _arg1 );
    _bstr_t GetName ( );
};

struct __declspec(uuid("8f17269d-6154-499b-9127-2153f538c3ba"))
_IBlockTablesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    BlockTablePtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    BlockTablePtr AddByActiveSheet (
        _bstr_t SavedSettings,
        long AutoBalloon );
    BlockTablePtr AddByDrawingView (
        struct DrawingView * DrawingView,
        _bstr_t SavedSettings,
        long AutoBalloon,
        long BlocksInView );
    BlockTablePtr AddByUserSelection (
        _bstr_t SavedSettings,
        long AutoBalloon );
    IDispatchPtr GetParent ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct BlockTable * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Unknown ) = 0;
      virtual HRESULT __stdcall raw_AddByActiveSheet (
        /*[in]*/ BSTR SavedSettings,
        /*[in]*/ long AutoBalloon,
        /*[out,retval]*/ struct BlockTable * * ppObj ) = 0;
      virtual HRESULT __stdcall raw_AddByDrawingView (
        /*[in]*/ struct DrawingView * DrawingView,
        /*[in]*/ BSTR SavedSettings,
        /*[in]*/ long AutoBalloon,
        /*[in]*/ long BlocksInView,
        /*[out,retval]*/ struct BlockTable * * ppObj ) = 0;
      virtual HRESULT __stdcall raw_AddByUserSelection (
        /*[in]*/ BSTR SavedSettings,
        /*[in]*/ long AutoBalloon,
        /*[out,retval]*/ struct BlockTable * * ppObj ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
};

enum BlockTableType
{
    igBlockOnlyList = 0,
    igBlockViewList = 1
};

struct __declspec(uuid("762efabf-e95b-4905-80a5-13d45d49bceb"))
_IBlockTableAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(put=PutSavedSettings))
    _bstr_t SavedSettings;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIsUpToDate))
    VARIANT_BOOL IsUpToDate;
    __declspec(property(get=GetAnchorPoint,put=PutAnchorPoint))
    enum TableAnchorPoint AnchorPoint;
    __declspec(property(get=GetCell))
    TableCellPtr Cell[][];
    __declspec(property(get=GetColumnHeaderPosition,put=PutColumnHeaderPosition))
    enum TitlePosition ColumnHeaderPosition;
    __declspec(property(get=GetColumns))
    TableColumnsPtr Columns;
    __declspec(property(get=GetDataFixedRowHeight,put=PutDataFixedRowHeight))
    double DataFixedRowHeight;
    __declspec(property(get=GetHeaderFixedRowHeight,put=PutHeaderFixedRowHeight))
    double HeaderFixedRowHeight;
    __declspec(property(get=GetMargin,put=PutMargin))
    double Margin;
    __declspec(property(get=GetMaximumHeight,put=PutMaximumHeight))
    double MaximumHeight;
    __declspec(property(get=GetMaximumRows,put=PutMaximumRows))
    long MaximumRows;
    __declspec(property(get=GetPageGap,put=PutPageGap))
    double PageGap;
    __declspec(property(get=GetPages))
    TablePagesPtr Pages;
    __declspec(property(get=GetReverseDisplayOrder,put=PutReverseDisplayOrder))
    VARIANT_BOOL ReverseDisplayOrder;
    __declspec(property(get=GetRows))
    TableRowsPtr Rows;
    __declspec(property(get=GetShowColumnHeader,put=PutShowColumnHeader))
    VARIANT_BOOL ShowColumnHeader;
    __declspec(property(get=GetTableStyle,put=PutTableStyle))
    _bstr_t TableStyle;
    __declspec(property(get=GetTitles))
    TableTitlesPtr Titles;
    __declspec(property(get=GetNumberOfHeaderRows,put=PutNumberOfHeaderRows))
    long NumberOfHeaderRows;
    __declspec(property(get=GetMaximumRowsFirstPage,put=PutMaximumRowsFirstPage))
    long MaximumRowsFirstPage;
    __declspec(property(get=GetMaximumRowsAdditionalPages,put=PutMaximumRowsAdditionalPages))
    long MaximumRowsAdditionalPages;
    __declspec(property(get=GetMaximumHeightFirstPage,put=PutMaximumHeightFirstPage))
    double MaximumHeightFirstPage;
    __declspec(property(get=GetMaximumHeightAdditionalPages,put=PutMaximumHeightAdditionalPages))
    double MaximumHeightAdditionalPages;
    __declspec(property(get=GetCreateNewSheetsForTable,put=PutCreateNewSheetsForTable))
    VARIANT_BOOL CreateNewSheetsForTable;
    __declspec(property(get=GetFirstSheetBackgroundName,put=PutFirstSheetBackgroundName))
    _bstr_t FirstSheetBackgroundName;
    __declspec(property(get=GetAdditionalSheetsBackgroundName,put=PutAdditionalSheetsBackgroundName))
    _bstr_t AdditionalSheetsBackgroundName;
    __declspec(property(get=GetShowSheetBackground,put=PutShowSheetBackground))
    VARIANT_BOOL ShowSheetBackground;
    __declspec(property(get=GetMaintainSheetsWithTableSize,put=PutMaintainSheetsWithTableSize))
    VARIANT_BOOL MaintainSheetsWithTableSize;
    __declspec(property(get=GetEnableGroups,put=PutEnableGroups))
    VARIANT_BOOL EnableGroups;
    __declspec(property(get=GetGroups))
    TableGroupsPtr Groups;
    __declspec(property(get=GetWrapDataCellsToNewRow,put=PutWrapDataCellsToNewRow))
    VARIANT_BOOL WrapDataCellsToNewRow;
    __declspec(property(get=GetFillEndOfTableWithBlankRows,put=PutFillEndOfTableWithBlankRows))
    VARIANT_BOOL FillEndOfTableWithBlankRows;
    __declspec(property(get=GetGroupByColumn,put=PutGroupByColumn))
    long GroupByColumn;
    __declspec(property(get=GetTitleFixedRowHeight,put=PutTitleFixedRowHeight))
    double TitleFixedRowHeight;
    __declspec(property(get=GetItemNumberStart,put=PutItemNumberStart))
    long ItemNumberStart;
    __declspec(property(get=GetItemNumberIncrement,put=PutItemNumberIncrement))
    long ItemNumberIncrement;
    __declspec(property(get=GetMarkUnballoonedItems,put=PutMarkUnballoonedItems))
    VARIANT_BOOL MarkUnballoonedItems;
    __declspec(property(get=GetMarkUnballoonedItemsString,put=PutMarkUnballoonedItemsString))
    _bstr_t MarkUnballoonedItemsString;
    __declspec(property(get=GetRenumberAccordingToSortOrder,put=PutRenumberAccordingToSortOrder))
    VARIANT_BOOL RenumberAccordingToSortOrder;
    __declspec(property(get=GetConvertDeletedBlocksIntoUserDefinedRows,put=PutConvertDeletedBlocksIntoUserDefinedRows))
    VARIANT_BOOL ConvertDeletedBlocksIntoUserDefinedRows;
    __declspec(property(get=GetListType,put=PutListType))
    enum BlockTableType ListType;
    __declspec(property(get=GetListBlockOnSeparateRow,put=PutListBlockOnSeparateRow))
    VARIANT_BOOL ListBlockOnSeparateRow;
    __declspec(property(get=GetUseSameItemNumberForBlockViews,put=PutUseSameItemNumberForBlockViews))
    VARIANT_BOOL UseSameItemNumberForBlockViews;
    __declspec(property(get=GetListByBlockOccurrence,put=PutListByBlockOccurrence))
    VARIANT_BOOL ListByBlockOccurrence;
    __declspec(property(get=GetListBlockOrBlockViewOnSeparateRow,put=PutListBlockOrBlockViewOnSeparateRow))
    VARIANT_BOOL ListBlockOrBlockViewOnSeparateRow;
    __declspec(property(get=GetListNestedBlocks,put=PutListNestedBlocks))
    VARIANT_BOOL ListNestedBlocks;
    __declspec(property(get=GetListAllNestedBlocksSeparately,put=PutListAllNestedBlocksSeparately))
    VARIANT_BOOL ListAllNestedBlocksSeparately;
    __declspec(property(get=GetListWithNestedStructure,put=PutListWithNestedStructure))
    VARIANT_BOOL ListWithNestedStructure;
    __declspec(property(get=GetUseLevelBasedItemNumbers,put=PutUseLevelBasedItemNumbers))
    VARIANT_BOOL UseLevelBasedItemNumbers;
    __declspec(property(get=GetMarginHorizontal,put=PutMarginHorizontal))
    double MarginHorizontal;
    __declspec(property(get=GetMarginVertical,put=PutMarginVertical))
    double MarginVertical;
    __declspec(property(get=GetName))
    _bstr_t Name;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    HRESULT Update ( );
    HRESULT CopyToClipboard ( );
    HRESULT SourceBlocks (
        SAFEARRAY * * ppBlocks );
    HRESULT Delete ( );
    void PutSavedSettings (
        _bstr_t _arg1 );
    IDispatchPtr GetParent ( );
    HRESULT SetOrigin (
        double x,
        double y );
    HRESULT GetOrigin (
        double * x,
        double * y );
    HRESULT GetListOfSavedSettings (
        long * NumSavedSettings,
        SAFEARRAY * * ListOfSavedSettings );
    VARIANT_BOOL GetIsUpToDate ( );
    HRESULT ConvertToTable ( );
    TableCellPtr GetCell (
        const _variant_t & RowIndex,
        const _variant_t & ColumnIndex );
    enum TitlePosition GetColumnHeaderPosition ( );
    void PutColumnHeaderPosition (
        enum TitlePosition ColumnHeaderPosition );
    TableColumnsPtr GetColumns ( );
    double GetMargin ( );
    void PutMargin (
        double Margin );
    long GetMaximumRows ( );
    void PutMaximumRows (
        long MaximumRows );
    double GetPageGap ( );
    void PutPageGap (
        double PageGap );
    VARIANT_BOOL GetReverseDisplayOrder ( );
    void PutReverseDisplayOrder (
        VARIANT_BOOL ReverseDisplayOrder );
    TableRowsPtr GetRows ( );
    VARIANT_BOOL GetShowColumnHeader ( );
    void PutShowColumnHeader (
        VARIANT_BOOL ShowColumnHeader );
    _bstr_t GetTableStyle ( );
    void PutTableStyle (
        _bstr_t TableStyle );
    TableTitlesPtr GetTitles ( );
    enum TableAnchorPoint GetAnchorPoint ( );
    void PutAnchorPoint (
        enum TableAnchorPoint AnchorPoint );
    TablePagesPtr GetPages ( );
    double GetHeaderFixedRowHeight ( );
    void PutHeaderFixedRowHeight (
        double HeaderFixedRowHeight );
    double GetDataFixedRowHeight ( );
    void PutDataFixedRowHeight (
        double DataFixedRowHeight );
    double GetMaximumHeight ( );
    void PutMaximumHeight (
        double MaximumHeight );
    long GetNumberOfHeaderRows ( );
    void PutNumberOfHeaderRows (
        long NumberOfHeaderRows );
    long GetMaximumRowsFirstPage ( );
    void PutMaximumRowsFirstPage (
        long MaximumRowsFirstPage );
    long GetMaximumRowsAdditionalPages ( );
    void PutMaximumRowsAdditionalPages (
        long MaximumRowsAdditionalPages );
    double GetMaximumHeightFirstPage ( );
    void PutMaximumHeightFirstPage (
        double MaximumHeightFirstPage );
    double GetMaximumHeightAdditionalPages ( );
    void PutMaximumHeightAdditionalPages (
        double MaximumHeightAdditionalPages );
    VARIANT_BOOL GetCreateNewSheetsForTable ( );
    void PutCreateNewSheetsForTable (
        VARIANT_BOOL CreateNewSheetsForTable );
    _bstr_t GetFirstSheetBackgroundName ( );
    void PutFirstSheetBackgroundName (
        _bstr_t FirstSheetBackgroundName );
    _bstr_t GetAdditionalSheetsBackgroundName ( );
    void PutAdditionalSheetsBackgroundName (
        _bstr_t AdditionalSheetsBackgroundName );
    VARIANT_BOOL GetShowSheetBackground ( );
    void PutShowSheetBackground (
        VARIANT_BOOL ShowSheetBackground );
    VARIANT_BOOL GetMaintainSheetsWithTableSize ( );
    void PutMaintainSheetsWithTableSize (
        VARIANT_BOOL MaintainSheetsWithTableSize );
    VARIANT_BOOL GetEnableGroups ( );
    void PutEnableGroups (
        VARIANT_BOOL EnableGroups );
    TableGroupsPtr GetGroups ( );
    VARIANT_BOOL GetWrapDataCellsToNewRow ( );
    void PutWrapDataCellsToNewRow (
        VARIANT_BOOL WrapDataCellsToNewRow );
    VARIANT_BOOL GetFillEndOfTableWithBlankRows ( );
    void PutFillEndOfTableWithBlankRows (
        VARIANT_BOOL FillEndOfTableWithBlankRows );
    long GetGroupByColumn ( );
    void PutGroupByColumn (
        long ColumnIndex );
    double GetTitleFixedRowHeight ( );
    void PutTitleFixedRowHeight (
        double TitleFixedRowHeight );
    long GetItemNumberStart ( );
    void PutItemNumberStart (
        long ItemNumberStart );
    long GetItemNumberIncrement ( );
    void PutItemNumberIncrement (
        long ItemNumberIncrement );
    VARIANT_BOOL GetMarkUnballoonedItems ( );
    void PutMarkUnballoonedItems (
        VARIANT_BOOL MarkUnballoonedItems );
    _bstr_t GetMarkUnballoonedItemsString ( );
    void PutMarkUnballoonedItemsString (
        _bstr_t MarkUnballoonedItemsString );
    VARIANT_BOOL GetRenumberAccordingToSortOrder ( );
    void PutRenumberAccordingToSortOrder (
        VARIANT_BOOL RenumberAccordingToSortOrder );
    VARIANT_BOOL GetConvertDeletedBlocksIntoUserDefinedRows ( );
    void PutConvertDeletedBlocksIntoUserDefinedRows (
        VARIANT_BOOL ConvertDeletedBlocksIntoUserDefinedRows );
    enum BlockTableType GetListType ( );
    void PutListType (
        enum BlockTableType ListType );
    VARIANT_BOOL GetListBlockOnSeparateRow ( );
    void PutListBlockOnSeparateRow (
        VARIANT_BOOL ListBlockOnSeparateRow );
    VARIANT_BOOL GetUseSameItemNumberForBlockViews ( );
    void PutUseSameItemNumberForBlockViews (
        VARIANT_BOOL UseSameItemNumberForBlockViews );
    VARIANT_BOOL GetListByBlockOccurrence ( );
    void PutListByBlockOccurrence (
        VARIANT_BOOL ListByBlockOccurrence );
    VARIANT_BOOL GetListBlockOrBlockViewOnSeparateRow ( );
    void PutListBlockOrBlockViewOnSeparateRow (
        VARIANT_BOOL ListBlockOrBlockViewOnSeparateRow );
    VARIANT_BOOL GetListNestedBlocks ( );
    void PutListNestedBlocks (
        VARIANT_BOOL ListNestedBlocks );
    VARIANT_BOOL GetListAllNestedBlocksSeparately ( );
    void PutListAllNestedBlocksSeparately (
        VARIANT_BOOL ListAllNestedBlocksSeparately );
    VARIANT_BOOL GetListWithNestedStructure ( );
    void PutListWithNestedStructure (
        VARIANT_BOOL ListWithNestedStructure );
    VARIANT_BOOL GetUseLevelBasedItemNumbers ( );
    void PutUseLevelBasedItemNumbers (
        VARIANT_BOOL UseLevelBasedItemNumbers );
    double GetMarginHorizontal ( );
    void PutMarginHorizontal (
        double MarginHorizontal );
    double GetMarginVertical ( );
    void PutMarginVertical (
        double MarginVertical );
    _bstr_t GetName ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall raw_Update ( ) = 0;
      virtual HRESULT __stdcall raw_CopyToClipboard ( ) = 0;
      virtual HRESULT __stdcall raw_SourceBlocks (
        /*[out]*/ SAFEARRAY * * ppBlocks ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall put_SavedSettings (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_SetOrigin (
        /*[in]*/ double x,
        /*[in]*/ double y ) = 0;
      virtual HRESULT __stdcall raw_GetOrigin (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall raw_GetListOfSavedSettings (
        /*[out]*/ long * NumSavedSettings,
        /*[in,out]*/ SAFEARRAY * * ListOfSavedSettings ) = 0;
      virtual HRESULT __stdcall get_IsUpToDate (
        /*[out,retval]*/ VARIANT_BOOL * UpToDate ) = 0;
      virtual HRESULT __stdcall raw_ConvertToTable ( ) = 0;
      virtual HRESULT __stdcall get_Cell (
        /*[in]*/ VARIANT RowIndex,
        /*[in]*/ VARIANT ColumnIndex,
        /*[out,retval]*/ struct TableCell * * ppCell ) = 0;
      virtual HRESULT __stdcall get_ColumnHeaderPosition (
        /*[out,retval]*/ enum TitlePosition * ColumnHeaderPosition ) = 0;
      virtual HRESULT __stdcall put_ColumnHeaderPosition (
        /*[in]*/ enum TitlePosition ColumnHeaderPosition ) = 0;
      virtual HRESULT __stdcall get_Columns (
        /*[out,retval]*/ struct TableColumns * * Columns ) = 0;
      virtual HRESULT __stdcall get_Margin (
        /*[out,retval]*/ double * Margin ) = 0;
      virtual HRESULT __stdcall put_Margin (
        /*[in]*/ double Margin ) = 0;
      virtual HRESULT __stdcall get_MaximumRows (
        /*[out,retval]*/ long * MaximumRows ) = 0;
      virtual HRESULT __stdcall put_MaximumRows (
        /*[in]*/ long MaximumRows ) = 0;
      virtual HRESULT __stdcall get_PageGap (
        /*[out,retval]*/ double * PageGap ) = 0;
      virtual HRESULT __stdcall put_PageGap (
        /*[in]*/ double PageGap ) = 0;
      virtual HRESULT __stdcall get_ReverseDisplayOrder (
        /*[out,retval]*/ VARIANT_BOOL * ReverseDisplayOrder ) = 0;
      virtual HRESULT __stdcall put_ReverseDisplayOrder (
        /*[in]*/ VARIANT_BOOL ReverseDisplayOrder ) = 0;
      virtual HRESULT __stdcall get_Rows (
        /*[out,retval]*/ struct TableRows * * Rows ) = 0;
      virtual HRESULT __stdcall get_ShowColumnHeader (
        /*[out,retval]*/ VARIANT_BOOL * ShowColumnHeader ) = 0;
      virtual HRESULT __stdcall put_ShowColumnHeader (
        /*[in]*/ VARIANT_BOOL ShowColumnHeader ) = 0;
      virtual HRESULT __stdcall get_TableStyle (
        /*[out,retval]*/ BSTR * TableStyle ) = 0;
      virtual HRESULT __stdcall put_TableStyle (
        /*[in]*/ BSTR TableStyle ) = 0;
      virtual HRESULT __stdcall get_Titles (
        /*[out,retval]*/ struct TableTitles * * Titles ) = 0;
      virtual HRESULT __stdcall get_AnchorPoint (
        /*[out,retval]*/ enum TableAnchorPoint * AnchorPoint ) = 0;
      virtual HRESULT __stdcall put_AnchorPoint (
        /*[in]*/ enum TableAnchorPoint AnchorPoint ) = 0;
      virtual HRESULT __stdcall get_Pages (
        /*[out,retval]*/ struct TablePages * * Rows ) = 0;
      virtual HRESULT __stdcall get_HeaderFixedRowHeight (
        /*[out,retval]*/ double * HeaderFixedRowHeight ) = 0;
      virtual HRESULT __stdcall put_HeaderFixedRowHeight (
        /*[in]*/ double HeaderFixedRowHeight ) = 0;
      virtual HRESULT __stdcall get_DataFixedRowHeight (
        /*[out,retval]*/ double * DataFixedRowHeight ) = 0;
      virtual HRESULT __stdcall put_DataFixedRowHeight (
        /*[in]*/ double DataFixedRowHeight ) = 0;
      virtual HRESULT __stdcall get_MaximumHeight (
        /*[out,retval]*/ double * MaximumHeight ) = 0;
      virtual HRESULT __stdcall put_MaximumHeight (
        /*[in]*/ double MaximumHeight ) = 0;
      virtual HRESULT __stdcall get_NumberOfHeaderRows (
        /*[out,retval]*/ long * NumberOfHeaderRows ) = 0;
      virtual HRESULT __stdcall put_NumberOfHeaderRows (
        /*[in]*/ long NumberOfHeaderRows ) = 0;
      virtual HRESULT __stdcall get_MaximumRowsFirstPage (
        /*[out,retval]*/ long * MaximumRowsFirstPage ) = 0;
      virtual HRESULT __stdcall put_MaximumRowsFirstPage (
        /*[in]*/ long MaximumRowsFirstPage ) = 0;
      virtual HRESULT __stdcall get_MaximumRowsAdditionalPages (
        /*[out,retval]*/ long * MaximumRowsAdditionalPages ) = 0;
      virtual HRESULT __stdcall put_MaximumRowsAdditionalPages (
        /*[in]*/ long MaximumRowsAdditionalPages ) = 0;
      virtual HRESULT __stdcall get_MaximumHeightFirstPage (
        /*[out,retval]*/ double * MaximumHeightFirstPage ) = 0;
      virtual HRESULT __stdcall put_MaximumHeightFirstPage (
        /*[in]*/ double MaximumHeightFirstPage ) = 0;
      virtual HRESULT __stdcall get_MaximumHeightAdditionalPages (
        /*[out,retval]*/ double * MaximumHeightAdditionalPages ) = 0;
      virtual HRESULT __stdcall put_MaximumHeightAdditionalPages (
        /*[in]*/ double MaximumHeightAdditionalPages ) = 0;
      virtual HRESULT __stdcall get_CreateNewSheetsForTable (
        /*[out,retval]*/ VARIANT_BOOL * CreateNewSheetsForTable ) = 0;
      virtual HRESULT __stdcall put_CreateNewSheetsForTable (
        /*[in]*/ VARIANT_BOOL CreateNewSheetsForTable ) = 0;
      virtual HRESULT __stdcall get_FirstSheetBackgroundName (
        /*[out,retval]*/ BSTR * FirstSheetBackgroundName ) = 0;
      virtual HRESULT __stdcall put_FirstSheetBackgroundName (
        /*[in]*/ BSTR FirstSheetBackgroundName ) = 0;
      virtual HRESULT __stdcall get_AdditionalSheetsBackgroundName (
        /*[out,retval]*/ BSTR * AdditionalSheetsBackgroundName ) = 0;
      virtual HRESULT __stdcall put_AdditionalSheetsBackgroundName (
        /*[in]*/ BSTR AdditionalSheetsBackgroundName ) = 0;
      virtual HRESULT __stdcall get_ShowSheetBackground (
        /*[out,retval]*/ VARIANT_BOOL * ShowSheetBackground ) = 0;
      virtual HRESULT __stdcall put_ShowSheetBackground (
        /*[in]*/ VARIANT_BOOL ShowSheetBackground ) = 0;
      virtual HRESULT __stdcall get_MaintainSheetsWithTableSize (
        /*[out,retval]*/ VARIANT_BOOL * MaintainSheetsWithTableSize ) = 0;
      virtual HRESULT __stdcall put_MaintainSheetsWithTableSize (
        /*[in]*/ VARIANT_BOOL MaintainSheetsWithTableSize ) = 0;
      virtual HRESULT __stdcall get_EnableGroups (
        /*[out,retval]*/ VARIANT_BOOL * EnableGroups ) = 0;
      virtual HRESULT __stdcall put_EnableGroups (
        /*[in]*/ VARIANT_BOOL EnableGroups ) = 0;
      virtual HRESULT __stdcall get_Groups (
        /*[out,retval]*/ struct TableGroups * * Groups ) = 0;
      virtual HRESULT __stdcall get_WrapDataCellsToNewRow (
        /*[out,retval]*/ VARIANT_BOOL * WrapDataCellsToNewRow ) = 0;
      virtual HRESULT __stdcall put_WrapDataCellsToNewRow (
        /*[in]*/ VARIANT_BOOL WrapDataCellsToNewRow ) = 0;
      virtual HRESULT __stdcall get_FillEndOfTableWithBlankRows (
        /*[out,retval]*/ VARIANT_BOOL * FillEndOfTableWithBlankRows ) = 0;
      virtual HRESULT __stdcall put_FillEndOfTableWithBlankRows (
        /*[in]*/ VARIANT_BOOL FillEndOfTableWithBlankRows ) = 0;
      virtual HRESULT __stdcall get_GroupByColumn (
        /*[out,retval]*/ long * ColumnIndex ) = 0;
      virtual HRESULT __stdcall put_GroupByColumn (
        /*[in]*/ long ColumnIndex ) = 0;
      virtual HRESULT __stdcall get_TitleFixedRowHeight (
        /*[out,retval]*/ double * TitleFixedRowHeight ) = 0;
      virtual HRESULT __stdcall put_TitleFixedRowHeight (
        /*[in]*/ double TitleFixedRowHeight ) = 0;
      virtual HRESULT __stdcall get_ItemNumberStart (
        /*[out,retval]*/ long * ItemNumberStart ) = 0;
      virtual HRESULT __stdcall put_ItemNumberStart (
        /*[in]*/ long ItemNumberStart ) = 0;
      virtual HRESULT __stdcall get_ItemNumberIncrement (
        /*[out,retval]*/ long * ItemNumberIncrement ) = 0;
      virtual HRESULT __stdcall put_ItemNumberIncrement (
        /*[in]*/ long ItemNumberIncrement ) = 0;
      virtual HRESULT __stdcall get_MarkUnballoonedItems (
        /*[out,retval]*/ VARIANT_BOOL * MarkUnballoonedItems ) = 0;
      virtual HRESULT __stdcall put_MarkUnballoonedItems (
        /*[in]*/ VARIANT_BOOL MarkUnballoonedItems ) = 0;
      virtual HRESULT __stdcall get_MarkUnballoonedItemsString (
        /*[out,retval]*/ BSTR * MarkUnballoonedItemsString ) = 0;
      virtual HRESULT __stdcall put_MarkUnballoonedItemsString (
        /*[in]*/ BSTR MarkUnballoonedItemsString ) = 0;
      virtual HRESULT __stdcall get_RenumberAccordingToSortOrder (
        /*[out,retval]*/ VARIANT_BOOL * RenumberAccordingToSortOrder ) = 0;
      virtual HRESULT __stdcall put_RenumberAccordingToSortOrder (
        /*[in]*/ VARIANT_BOOL RenumberAccordingToSortOrder ) = 0;
      virtual HRESULT __stdcall get_ConvertDeletedBlocksIntoUserDefinedRows (
        /*[out,retval]*/ VARIANT_BOOL * ConvertDeletedBlocksIntoUserDefinedRows ) = 0;
      virtual HRESULT __stdcall put_ConvertDeletedBlocksIntoUserDefinedRows (
        /*[in]*/ VARIANT_BOOL ConvertDeletedBlocksIntoUserDefinedRows ) = 0;
      virtual HRESULT __stdcall get_ListType (
        /*[out,retval]*/ enum BlockTableType * ListType ) = 0;
      virtual HRESULT __stdcall put_ListType (
        /*[in]*/ enum BlockTableType ListType ) = 0;
      virtual HRESULT __stdcall get_ListBlockOnSeparateRow (
        /*[out,retval]*/ VARIANT_BOOL * ListBlockOnSeparateRow ) = 0;
      virtual HRESULT __stdcall put_ListBlockOnSeparateRow (
        /*[in]*/ VARIANT_BOOL ListBlockOnSeparateRow ) = 0;
      virtual HRESULT __stdcall get_UseSameItemNumberForBlockViews (
        /*[out,retval]*/ VARIANT_BOOL * UseSameItemNumberForBlockViews ) = 0;
      virtual HRESULT __stdcall put_UseSameItemNumberForBlockViews (
        /*[in]*/ VARIANT_BOOL UseSameItemNumberForBlockViews ) = 0;
      virtual HRESULT __stdcall get_ListByBlockOccurrence (
        /*[out,retval]*/ VARIANT_BOOL * ListByBlockOccurrence ) = 0;
      virtual HRESULT __stdcall put_ListByBlockOccurrence (
        /*[in]*/ VARIANT_BOOL ListByBlockOccurrence ) = 0;
      virtual HRESULT __stdcall get_ListBlockOrBlockViewOnSeparateRow (
        /*[out,retval]*/ VARIANT_BOOL * ListBlockOrBlockViewOnSeparateRow ) = 0;
      virtual HRESULT __stdcall put_ListBlockOrBlockViewOnSeparateRow (
        /*[in]*/ VARIANT_BOOL ListBlockOrBlockViewOnSeparateRow ) = 0;
      virtual HRESULT __stdcall get_ListNestedBlocks (
        /*[out,retval]*/ VARIANT_BOOL * ListNestedBlocks ) = 0;
      virtual HRESULT __stdcall put_ListNestedBlocks (
        /*[in]*/ VARIANT_BOOL ListNestedBlocks ) = 0;
      virtual HRESULT __stdcall get_ListAllNestedBlocksSeparately (
        /*[out,retval]*/ VARIANT_BOOL * ListAllNestedBlocksSeparately ) = 0;
      virtual HRESULT __stdcall put_ListAllNestedBlocksSeparately (
        /*[in]*/ VARIANT_BOOL ListAllNestedBlocksSeparately ) = 0;
      virtual HRESULT __stdcall get_ListWithNestedStructure (
        /*[out,retval]*/ VARIANT_BOOL * ListWithNestedStructure ) = 0;
      virtual HRESULT __stdcall put_ListWithNestedStructure (
        /*[in]*/ VARIANT_BOOL ListWithNestedStructure ) = 0;
      virtual HRESULT __stdcall get_UseLevelBasedItemNumbers (
        /*[out,retval]*/ VARIANT_BOOL * UseLevelBasedItemNumbers ) = 0;
      virtual HRESULT __stdcall put_UseLevelBasedItemNumbers (
        /*[in]*/ VARIANT_BOOL UseLevelBasedItemNumbers ) = 0;
      virtual HRESULT __stdcall get_MarginHorizontal (
        /*[out,retval]*/ double * MarginHorizontal ) = 0;
      virtual HRESULT __stdcall put_MarginHorizontal (
        /*[in]*/ double MarginHorizontal ) = 0;
      virtual HRESULT __stdcall get_MarginVertical (
        /*[out,retval]*/ double * MarginVertical ) = 0;
      virtual HRESULT __stdcall put_MarginVertical (
        /*[in]*/ double MarginVertical ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
};

struct __declspec(uuid("f8a87f4d-f7b1-45d4-a708-05b32c553311"))
FOPTables : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    FOPTablePtr Item (
        const _variant_t & Index );
    FOPTablePtr Add (
        struct DrawingView * pDrawingView );
    IDispatchPtr GetParent ( );
};

struct __declspec(uuid("f8229ad0-fb3c-4b3e-909b-0173babbf8a1"))
FOPTable : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAnchorPoint,put=PutAnchorPoint))
    enum TableAnchorPoint AnchorPoint;
    __declspec(property(get=GetPages))
    TablePagesPtr Pages;
    __declspec(property(get=GetHeaderFixedRowHeight,put=PutHeaderFixedRowHeight))
    double HeaderFixedRowHeight;
    __declspec(property(get=GetDataFixedRowHeight,put=PutDataFixedRowHeight))
    double DataFixedRowHeight;
    __declspec(property(get=GetMaximumHeight,put=PutMaximumHeight))
    double MaximumHeight;
    __declspec(property(get=GetNumberOfHeaderRows,put=PutNumberOfHeaderRows))
    long NumberOfHeaderRows;
    __declspec(property(get=GetMaximumRowsFirstPage,put=PutMaximumRowsFirstPage))
    long MaximumRowsFirstPage;
    __declspec(property(get=GetMaximumRowsAdditionalPages,put=PutMaximumRowsAdditionalPages))
    long MaximumRowsAdditionalPages;
    __declspec(property(get=GetMaximumHeightFirstPage,put=PutMaximumHeightFirstPage))
    double MaximumHeightFirstPage;
    __declspec(property(get=GetMaximumHeightAdditionalPages,put=PutMaximumHeightAdditionalPages))
    double MaximumHeightAdditionalPages;
    __declspec(property(get=GetCreateNewSheetsForTable,put=PutCreateNewSheetsForTable))
    VARIANT_BOOL CreateNewSheetsForTable;
    __declspec(property(get=GetFirstSheetBackgroundName,put=PutFirstSheetBackgroundName))
    _bstr_t FirstSheetBackgroundName;
    __declspec(property(get=GetAdditionalSheetsBackgroundName,put=PutAdditionalSheetsBackgroundName))
    _bstr_t AdditionalSheetsBackgroundName;
    __declspec(property(get=GetShowSheetBackground,put=PutShowSheetBackground))
    VARIANT_BOOL ShowSheetBackground;
    __declspec(property(get=GetMaintainSheetsWithTableSize,put=PutMaintainSheetsWithTableSize))
    VARIANT_BOOL MaintainSheetsWithTableSize;
    __declspec(property(get=GetEnableGroups,put=PutEnableGroups))
    VARIANT_BOOL EnableGroups;
    __declspec(property(get=GetGroups))
    TableGroupsPtr Groups;
    __declspec(property(get=GetWrapDataCellsToNewRow,put=PutWrapDataCellsToNewRow))
    VARIANT_BOOL WrapDataCellsToNewRow;
    __declspec(property(get=GetFillEndOfTableWithBlankRows,put=PutFillEndOfTableWithBlankRows))
    VARIANT_BOOL FillEndOfTableWithBlankRows;
    __declspec(property(get=GetGroupByColumn,put=PutGroupByColumn))
    long GroupByColumn;
    __declspec(property(get=GetTitleFixedRowHeight,put=PutTitleFixedRowHeight))
    double TitleFixedRowHeight;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetMarginHorizontal,put=PutMarginHorizontal))
    double MarginHorizontal;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetMarginVertical,put=PutMarginVertical))
    double MarginVertical;
    __declspec(property(get=GetModelLink))
    ModelLinkPtr ModelLink;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCell))
    TableCellPtr Cell[][];
    __declspec(property(get=GetColumnHeaderPosition,put=PutColumnHeaderPosition))
    enum TitlePosition ColumnHeaderPosition;
    __declspec(property(get=GetColumns))
    TableColumnsPtr Columns;
    __declspec(property(get=GetMaximumRows,put=PutMaximumRows))
    long MaximumRows;
    __declspec(property(get=GetPageGap,put=PutPageGap))
    double PageGap;
    __declspec(property(get=GetReverseDisplayOrder,put=PutReverseDisplayOrder))
    VARIANT_BOOL ReverseDisplayOrder;
    __declspec(property(get=GetRows))
    TableRowsPtr Rows;
    __declspec(property(get=GetShowColumnHeader,put=PutShowColumnHeader))
    VARIANT_BOOL ShowColumnHeader;
    __declspec(property(get=GetTableStyle,put=PutTableStyle))
    _bstr_t TableStyle;
    __declspec(property(get=GetTitles))
    TableTitlesPtr Titles;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    HRESULT Update ( );
    ModelLinkPtr GetModelLink ( );
    HRESULT Delete ( );
    IDispatchPtr GetParent ( );
    TableCellPtr GetCell (
        const _variant_t & RowIndex,
        const _variant_t & ColumnIndex );
    enum TitlePosition GetColumnHeaderPosition ( );
    void PutColumnHeaderPosition (
        enum TitlePosition _arg1 );
    TableColumnsPtr GetColumns ( );
    double GetMarginHorizontal ( );
    void PutMarginHorizontal (
        double _arg1 );
    double GetMarginVertical ( );
    void PutMarginVertical (
        double _arg1 );
    long GetMaximumRows ( );
    void PutMaximumRows (
        long _arg1 );
    double GetPageGap ( );
    void PutPageGap (
        double _arg1 );
    VARIANT_BOOL GetReverseDisplayOrder ( );
    void PutReverseDisplayOrder (
        VARIANT_BOOL _arg1 );
    TableRowsPtr GetRows ( );
    HRESULT SetOrigin (
        double x,
        double y );
    VARIANT_BOOL GetShowColumnHeader ( );
    void PutShowColumnHeader (
        VARIANT_BOOL _arg1 );
    _bstr_t GetTableStyle ( );
    void PutTableStyle (
        _bstr_t _arg1 );
    TableTitlesPtr GetTitles ( );
    enum TableAnchorPoint GetAnchorPoint ( );
    void PutAnchorPoint (
        enum TableAnchorPoint _arg1 );
    TablePagesPtr GetPages ( );
    double GetHeaderFixedRowHeight ( );
    void PutHeaderFixedRowHeight (
        double _arg1 );
    double GetDataFixedRowHeight ( );
    void PutDataFixedRowHeight (
        double _arg1 );
    double GetMaximumHeight ( );
    void PutMaximumHeight (
        double _arg1 );
    long GetNumberOfHeaderRows ( );
    void PutNumberOfHeaderRows (
        long _arg1 );
    long GetMaximumRowsFirstPage ( );
    void PutMaximumRowsFirstPage (
        long _arg1 );
    long GetMaximumRowsAdditionalPages ( );
    void PutMaximumRowsAdditionalPages (
        long _arg1 );
    double GetMaximumHeightFirstPage ( );
    void PutMaximumHeightFirstPage (
        double _arg1 );
    double GetMaximumHeightAdditionalPages ( );
    void PutMaximumHeightAdditionalPages (
        double _arg1 );
    VARIANT_BOOL GetCreateNewSheetsForTable ( );
    void PutCreateNewSheetsForTable (
        VARIANT_BOOL _arg1 );
    _bstr_t GetFirstSheetBackgroundName ( );
    void PutFirstSheetBackgroundName (
        _bstr_t _arg1 );
    _bstr_t GetAdditionalSheetsBackgroundName ( );
    void PutAdditionalSheetsBackgroundName (
        _bstr_t _arg1 );
    VARIANT_BOOL GetShowSheetBackground ( );
    void PutShowSheetBackground (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetMaintainSheetsWithTableSize ( );
    void PutMaintainSheetsWithTableSize (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetEnableGroups ( );
    void PutEnableGroups (
        VARIANT_BOOL _arg1 );
    TableGroupsPtr GetGroups ( );
    VARIANT_BOOL GetWrapDataCellsToNewRow ( );
    void PutWrapDataCellsToNewRow (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetFillEndOfTableWithBlankRows ( );
    void PutFillEndOfTableWithBlankRows (
        VARIANT_BOOL _arg1 );
    long GetGroupByColumn ( );
    void PutGroupByColumn (
        long _arg1 );
    double GetTitleFixedRowHeight ( );
    void PutTitleFixedRowHeight (
        double _arg1 );
    _bstr_t GetName ( );
};

struct __declspec(uuid("d40c76d4-2715-4038-9dfc-494ca03f4da3"))
_IFOPTablesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    FOPTablePtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    FOPTablePtr Add (
        struct DrawingView * pDrawingView );
    IDispatchPtr GetParent ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct FOPTable * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Unknown ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ struct DrawingView * pDrawingView,
        /*[out,retval]*/ struct FOPTable * * ppObj ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
};

struct __declspec(uuid("be7d2949-3406-48c0-9f18-4c476537f2d0"))
_IFOPTableAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetAnchorPoint,put=PutAnchorPoint))
    enum TableAnchorPoint AnchorPoint;
    __declspec(property(get=GetPages))
    TablePagesPtr Pages;
    __declspec(property(get=GetHeaderFixedRowHeight,put=PutHeaderFixedRowHeight))
    double HeaderFixedRowHeight;
    __declspec(property(get=GetDataFixedRowHeight,put=PutDataFixedRowHeight))
    double DataFixedRowHeight;
    __declspec(property(get=GetMaximumHeight,put=PutMaximumHeight))
    double MaximumHeight;
    __declspec(property(get=GetNumberOfHeaderRows,put=PutNumberOfHeaderRows))
    long NumberOfHeaderRows;
    __declspec(property(get=GetMaximumRowsFirstPage,put=PutMaximumRowsFirstPage))
    long MaximumRowsFirstPage;
    __declspec(property(get=GetMaximumRowsAdditionalPages,put=PutMaximumRowsAdditionalPages))
    long MaximumRowsAdditionalPages;
    __declspec(property(get=GetMaximumHeightFirstPage,put=PutMaximumHeightFirstPage))
    double MaximumHeightFirstPage;
    __declspec(property(get=GetMaximumHeightAdditionalPages,put=PutMaximumHeightAdditionalPages))
    double MaximumHeightAdditionalPages;
    __declspec(property(get=GetCreateNewSheetsForTable,put=PutCreateNewSheetsForTable))
    VARIANT_BOOL CreateNewSheetsForTable;
    __declspec(property(get=GetFirstSheetBackgroundName,put=PutFirstSheetBackgroundName))
    _bstr_t FirstSheetBackgroundName;
    __declspec(property(get=GetAdditionalSheetsBackgroundName,put=PutAdditionalSheetsBackgroundName))
    _bstr_t AdditionalSheetsBackgroundName;
    __declspec(property(get=GetShowSheetBackground,put=PutShowSheetBackground))
    VARIANT_BOOL ShowSheetBackground;
    __declspec(property(get=GetMaintainSheetsWithTableSize,put=PutMaintainSheetsWithTableSize))
    VARIANT_BOOL MaintainSheetsWithTableSize;
    __declspec(property(get=GetEnableGroups,put=PutEnableGroups))
    VARIANT_BOOL EnableGroups;
    __declspec(property(get=GetGroups))
    TableGroupsPtr Groups;
    __declspec(property(get=GetWrapDataCellsToNewRow,put=PutWrapDataCellsToNewRow))
    VARIANT_BOOL WrapDataCellsToNewRow;
    __declspec(property(get=GetFillEndOfTableWithBlankRows,put=PutFillEndOfTableWithBlankRows))
    VARIANT_BOOL FillEndOfTableWithBlankRows;
    __declspec(property(get=GetGroupByColumn,put=PutGroupByColumn))
    long GroupByColumn;
    __declspec(property(get=GetTitleFixedRowHeight,put=PutTitleFixedRowHeight))
    double TitleFixedRowHeight;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetMarginHorizontal,put=PutMarginHorizontal))
    double MarginHorizontal;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetMarginVertical,put=PutMarginVertical))
    double MarginVertical;
    __declspec(property(get=GetModelLink))
    ModelLinkPtr ModelLink;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCell))
    TableCellPtr Cell[][];
    __declspec(property(get=GetColumnHeaderPosition,put=PutColumnHeaderPosition))
    enum TitlePosition ColumnHeaderPosition;
    __declspec(property(get=GetColumns))
    TableColumnsPtr Columns;
    __declspec(property(get=GetMaximumRows,put=PutMaximumRows))
    long MaximumRows;
    __declspec(property(get=GetPageGap,put=PutPageGap))
    double PageGap;
    __declspec(property(get=GetReverseDisplayOrder,put=PutReverseDisplayOrder))
    VARIANT_BOOL ReverseDisplayOrder;
    __declspec(property(get=GetRows))
    TableRowsPtr Rows;
    __declspec(property(get=GetShowColumnHeader,put=PutShowColumnHeader))
    VARIANT_BOOL ShowColumnHeader;
    __declspec(property(get=GetTableStyle,put=PutTableStyle))
    _bstr_t TableStyle;
    __declspec(property(get=GetTitles))
    TableTitlesPtr Titles;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    HRESULT Update ( );
    ModelLinkPtr GetModelLink ( );
    HRESULT Delete ( );
    IDispatchPtr GetParent ( );
    TableCellPtr GetCell (
        const _variant_t & RowIndex,
        const _variant_t & ColumnIndex );
    enum TitlePosition GetColumnHeaderPosition ( );
    void PutColumnHeaderPosition (
        enum TitlePosition ColumnHeaderPosition );
    TableColumnsPtr GetColumns ( );
    double GetMarginHorizontal ( );
    void PutMarginHorizontal (
        double MarginHorizontal );
    double GetMarginVertical ( );
    void PutMarginVertical (
        double MarginVertical );
    long GetMaximumRows ( );
    void PutMaximumRows (
        long MaximumRows );
    double GetPageGap ( );
    void PutPageGap (
        double PageGap );
    VARIANT_BOOL GetReverseDisplayOrder ( );
    void PutReverseDisplayOrder (
        VARIANT_BOOL ReverseDisplayOrder );
    TableRowsPtr GetRows ( );
    HRESULT SetOrigin (
        double x,
        double y );
    VARIANT_BOOL GetShowColumnHeader ( );
    void PutShowColumnHeader (
        VARIANT_BOOL ShowColumnHeader );
    _bstr_t GetTableStyle ( );
    void PutTableStyle (
        _bstr_t TableStyle );
    TableTitlesPtr GetTitles ( );
    enum TableAnchorPoint GetAnchorPoint ( );
    void PutAnchorPoint (
        enum TableAnchorPoint AnchorPoint );
    TablePagesPtr GetPages ( );
    double GetHeaderFixedRowHeight ( );
    void PutHeaderFixedRowHeight (
        double HeaderFixedRowHeight );
    double GetDataFixedRowHeight ( );
    void PutDataFixedRowHeight (
        double DataFixedRowHeight );
    double GetMaximumHeight ( );
    void PutMaximumHeight (
        double MaximumHeight );
    long GetNumberOfHeaderRows ( );
    void PutNumberOfHeaderRows (
        long NumberOfHeaderRows );
    long GetMaximumRowsFirstPage ( );
    void PutMaximumRowsFirstPage (
        long MaximumRowsFirstPage );
    long GetMaximumRowsAdditionalPages ( );
    void PutMaximumRowsAdditionalPages (
        long MaximumRowsAdditionalPages );
    double GetMaximumHeightFirstPage ( );
    void PutMaximumHeightFirstPage (
        double MaximumHeightFirstPage );
    double GetMaximumHeightAdditionalPages ( );
    void PutMaximumHeightAdditionalPages (
        double MaximumHeightAdditionalPages );
    VARIANT_BOOL GetCreateNewSheetsForTable ( );
    void PutCreateNewSheetsForTable (
        VARIANT_BOOL CreateNewSheetsForTable );
    _bstr_t GetFirstSheetBackgroundName ( );
    void PutFirstSheetBackgroundName (
        _bstr_t FirstSheetBackgroundName );
    _bstr_t GetAdditionalSheetsBackgroundName ( );
    void PutAdditionalSheetsBackgroundName (
        _bstr_t AdditionalSheetsBackgroundName );
    VARIANT_BOOL GetShowSheetBackground ( );
    void PutShowSheetBackground (
        VARIANT_BOOL ShowSheetBackground );
    VARIANT_BOOL GetMaintainSheetsWithTableSize ( );
    void PutMaintainSheetsWithTableSize (
        VARIANT_BOOL MaintainSheetsWithTableSize );
    VARIANT_BOOL GetEnableGroups ( );
    void PutEnableGroups (
        VARIANT_BOOL EnableGroups );
    TableGroupsPtr GetGroups ( );
    VARIANT_BOOL GetWrapDataCellsToNewRow ( );
    void PutWrapDataCellsToNewRow (
        VARIANT_BOOL WrapDataCellsToNewRow );
    VARIANT_BOOL GetFillEndOfTableWithBlankRows ( );
    void PutFillEndOfTableWithBlankRows (
        VARIANT_BOOL FillEndOfTableWithBlankRows );
    long GetGroupByColumn ( );
    void PutGroupByColumn (
        long ColumnIndex );
    double GetTitleFixedRowHeight ( );
    void PutTitleFixedRowHeight (
        double TitleFixedRowHeight );
    _bstr_t GetName ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall raw_Update ( ) = 0;
      virtual HRESULT __stdcall get_ModelLink (
        /*[out,retval]*/ struct ModelLink * * ppModelLink ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Cell (
        /*[in]*/ VARIANT RowIndex,
        /*[in]*/ VARIANT ColumnIndex,
        /*[out,retval]*/ struct TableCell * * ppCell ) = 0;
      virtual HRESULT __stdcall get_ColumnHeaderPosition (
        /*[out,retval]*/ enum TitlePosition * ColumnHeaderPosition ) = 0;
      virtual HRESULT __stdcall put_ColumnHeaderPosition (
        /*[in]*/ enum TitlePosition ColumnHeaderPosition ) = 0;
      virtual HRESULT __stdcall get_Columns (
        /*[out,retval]*/ struct TableColumns * * Columns ) = 0;
      virtual HRESULT __stdcall get_MarginHorizontal (
        /*[out,retval]*/ double * MarginHorizontal ) = 0;
      virtual HRESULT __stdcall put_MarginHorizontal (
        /*[in]*/ double MarginHorizontal ) = 0;
      virtual HRESULT __stdcall get_MarginVertical (
        /*[out,retval]*/ double * MarginVertical ) = 0;
      virtual HRESULT __stdcall put_MarginVertical (
        /*[in]*/ double MarginVertical ) = 0;
      virtual HRESULT __stdcall get_MaximumRows (
        /*[out,retval]*/ long * MaximumRows ) = 0;
      virtual HRESULT __stdcall put_MaximumRows (
        /*[in]*/ long MaximumRows ) = 0;
      virtual HRESULT __stdcall get_PageGap (
        /*[out,retval]*/ double * PageGap ) = 0;
      virtual HRESULT __stdcall put_PageGap (
        /*[in]*/ double PageGap ) = 0;
      virtual HRESULT __stdcall get_ReverseDisplayOrder (
        /*[out,retval]*/ VARIANT_BOOL * ReverseDisplayOrder ) = 0;
      virtual HRESULT __stdcall put_ReverseDisplayOrder (
        /*[in]*/ VARIANT_BOOL ReverseDisplayOrder ) = 0;
      virtual HRESULT __stdcall get_Rows (
        /*[out,retval]*/ struct TableRows * * Rows ) = 0;
      virtual HRESULT __stdcall raw_SetOrigin (
        /*[in]*/ double x,
        /*[in]*/ double y ) = 0;
      virtual HRESULT __stdcall get_ShowColumnHeader (
        /*[out,retval]*/ VARIANT_BOOL * ShowColumnHeader ) = 0;
      virtual HRESULT __stdcall put_ShowColumnHeader (
        /*[in]*/ VARIANT_BOOL ShowColumnHeader ) = 0;
      virtual HRESULT __stdcall get_TableStyle (
        /*[out,retval]*/ BSTR * TableStyle ) = 0;
      virtual HRESULT __stdcall put_TableStyle (
        /*[in]*/ BSTR TableStyle ) = 0;
      virtual HRESULT __stdcall get_Titles (
        /*[out,retval]*/ struct TableTitles * * Titles ) = 0;
      virtual HRESULT __stdcall get_AnchorPoint (
        /*[out,retval]*/ enum TableAnchorPoint * AnchorPoint ) = 0;
      virtual HRESULT __stdcall put_AnchorPoint (
        /*[in]*/ enum TableAnchorPoint AnchorPoint ) = 0;
      virtual HRESULT __stdcall get_Pages (
        /*[out,retval]*/ struct TablePages * * Rows ) = 0;
      virtual HRESULT __stdcall get_HeaderFixedRowHeight (
        /*[out,retval]*/ double * HeaderFixedRowHeight ) = 0;
      virtual HRESULT __stdcall put_HeaderFixedRowHeight (
        /*[in]*/ double HeaderFixedRowHeight ) = 0;
      virtual HRESULT __stdcall get_DataFixedRowHeight (
        /*[out,retval]*/ double * DataFixedRowHeight ) = 0;
      virtual HRESULT __stdcall put_DataFixedRowHeight (
        /*[in]*/ double DataFixedRowHeight ) = 0;
      virtual HRESULT __stdcall get_MaximumHeight (
        /*[out,retval]*/ double * MaximumHeight ) = 0;
      virtual HRESULT __stdcall put_MaximumHeight (
        /*[in]*/ double MaximumHeight ) = 0;
      virtual HRESULT __stdcall get_NumberOfHeaderRows (
        /*[out,retval]*/ long * NumberOfHeaderRows ) = 0;
      virtual HRESULT __stdcall put_NumberOfHeaderRows (
        /*[in]*/ long NumberOfHeaderRows ) = 0;
      virtual HRESULT __stdcall get_MaximumRowsFirstPage (
        /*[out,retval]*/ long * MaximumRowsFirstPage ) = 0;
      virtual HRESULT __stdcall put_MaximumRowsFirstPage (
        /*[in]*/ long MaximumRowsFirstPage ) = 0;
      virtual HRESULT __stdcall get_MaximumRowsAdditionalPages (
        /*[out,retval]*/ long * MaximumRowsAdditionalPages ) = 0;
      virtual HRESULT __stdcall put_MaximumRowsAdditionalPages (
        /*[in]*/ long MaximumRowsAdditionalPages ) = 0;
      virtual HRESULT __stdcall get_MaximumHeightFirstPage (
        /*[out,retval]*/ double * MaximumHeightFirstPage ) = 0;
      virtual HRESULT __stdcall put_MaximumHeightFirstPage (
        /*[in]*/ double MaximumHeightFirstPage ) = 0;
      virtual HRESULT __stdcall get_MaximumHeightAdditionalPages (
        /*[out,retval]*/ double * MaximumHeightAdditionalPages ) = 0;
      virtual HRESULT __stdcall put_MaximumHeightAdditionalPages (
        /*[in]*/ double MaximumHeightAdditionalPages ) = 0;
      virtual HRESULT __stdcall get_CreateNewSheetsForTable (
        /*[out,retval]*/ VARIANT_BOOL * CreateNewSheetsForTable ) = 0;
      virtual HRESULT __stdcall put_CreateNewSheetsForTable (
        /*[in]*/ VARIANT_BOOL CreateNewSheetsForTable ) = 0;
      virtual HRESULT __stdcall get_FirstSheetBackgroundName (
        /*[out,retval]*/ BSTR * FirstSheetBackgroundName ) = 0;
      virtual HRESULT __stdcall put_FirstSheetBackgroundName (
        /*[in]*/ BSTR FirstSheetBackgroundName ) = 0;
      virtual HRESULT __stdcall get_AdditionalSheetsBackgroundName (
        /*[out,retval]*/ BSTR * AdditionalSheetsBackgroundName ) = 0;
      virtual HRESULT __stdcall put_AdditionalSheetsBackgroundName (
        /*[in]*/ BSTR AdditionalSheetsBackgroundName ) = 0;
      virtual HRESULT __stdcall get_ShowSheetBackground (
        /*[out,retval]*/ VARIANT_BOOL * ShowSheetBackground ) = 0;
      virtual HRESULT __stdcall put_ShowSheetBackground (
        /*[in]*/ VARIANT_BOOL ShowSheetBackground ) = 0;
      virtual HRESULT __stdcall get_MaintainSheetsWithTableSize (
        /*[out,retval]*/ VARIANT_BOOL * MaintainSheetsWithTableSize ) = 0;
      virtual HRESULT __stdcall put_MaintainSheetsWithTableSize (
        /*[in]*/ VARIANT_BOOL MaintainSheetsWithTableSize ) = 0;
      virtual HRESULT __stdcall get_EnableGroups (
        /*[out,retval]*/ VARIANT_BOOL * EnableGroups ) = 0;
      virtual HRESULT __stdcall put_EnableGroups (
        /*[in]*/ VARIANT_BOOL EnableGroups ) = 0;
      virtual HRESULT __stdcall get_Groups (
        /*[out,retval]*/ struct TableGroups * * Groups ) = 0;
      virtual HRESULT __stdcall get_WrapDataCellsToNewRow (
        /*[out,retval]*/ VARIANT_BOOL * WrapDataCellsToNewRow ) = 0;
      virtual HRESULT __stdcall put_WrapDataCellsToNewRow (
        /*[in]*/ VARIANT_BOOL WrapDataCellsToNewRow ) = 0;
      virtual HRESULT __stdcall get_FillEndOfTableWithBlankRows (
        /*[out,retval]*/ VARIANT_BOOL * FillEndOfTableWithBlankRows ) = 0;
      virtual HRESULT __stdcall put_FillEndOfTableWithBlankRows (
        /*[in]*/ VARIANT_BOOL FillEndOfTableWithBlankRows ) = 0;
      virtual HRESULT __stdcall get_GroupByColumn (
        /*[out,retval]*/ long * ColumnIndex ) = 0;
      virtual HRESULT __stdcall put_GroupByColumn (
        /*[in]*/ long ColumnIndex ) = 0;
      virtual HRESULT __stdcall get_TitleFixedRowHeight (
        /*[out,retval]*/ double * TitleFixedRowHeight ) = 0;
      virtual HRESULT __stdcall put_TitleFixedRowHeight (
        /*[in]*/ double TitleFixedRowHeight ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
};

struct __declspec(uuid("556577d4-6738-4fca-9099-459ad8c3d0ca"))
ConductorTables : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    ConductorTablePtr Item (
        const _variant_t & Index );
    ConductorTablePtr Add (
        struct DrawingView * pDrawingView );
    IDispatchPtr GetParent ( );
};

struct __declspec(uuid("c5afe3b1-2125-4ccf-b722-c93377809a88"))
ConductorTable : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAnchorPoint,put=PutAnchorPoint))
    enum TableAnchorPoint AnchorPoint;
    __declspec(property(get=GetPages))
    TablePagesPtr Pages;
    __declspec(property(get=GetHeaderFixedRowHeight,put=PutHeaderFixedRowHeight))
    double HeaderFixedRowHeight;
    __declspec(property(get=GetDataFixedRowHeight,put=PutDataFixedRowHeight))
    double DataFixedRowHeight;
    __declspec(property(get=GetMaximumHeight,put=PutMaximumHeight))
    double MaximumHeight;
    __declspec(property(get=GetNumberOfHeaderRows,put=PutNumberOfHeaderRows))
    long NumberOfHeaderRows;
    __declspec(property(get=GetMaximumRowsFirstPage,put=PutMaximumRowsFirstPage))
    long MaximumRowsFirstPage;
    __declspec(property(get=GetMaximumRowsAdditionalPages,put=PutMaximumRowsAdditionalPages))
    long MaximumRowsAdditionalPages;
    __declspec(property(get=GetMaximumHeightFirstPage,put=PutMaximumHeightFirstPage))
    double MaximumHeightFirstPage;
    __declspec(property(get=GetMaximumHeightAdditionalPages,put=PutMaximumHeightAdditionalPages))
    double MaximumHeightAdditionalPages;
    __declspec(property(get=GetCreateNewSheetsForTable,put=PutCreateNewSheetsForTable))
    VARIANT_BOOL CreateNewSheetsForTable;
    __declspec(property(get=GetFirstSheetBackgroundName,put=PutFirstSheetBackgroundName))
    _bstr_t FirstSheetBackgroundName;
    __declspec(property(get=GetAdditionalSheetsBackgroundName,put=PutAdditionalSheetsBackgroundName))
    _bstr_t AdditionalSheetsBackgroundName;
    __declspec(property(get=GetShowSheetBackground,put=PutShowSheetBackground))
    VARIANT_BOOL ShowSheetBackground;
    __declspec(property(get=GetMaintainSheetsWithTableSize,put=PutMaintainSheetsWithTableSize))
    VARIANT_BOOL MaintainSheetsWithTableSize;
    __declspec(property(get=GetEnableGroups,put=PutEnableGroups))
    VARIANT_BOOL EnableGroups;
    __declspec(property(get=GetGroups))
    TableGroupsPtr Groups;
    __declspec(property(get=GetWrapDataCellsToNewRow,put=PutWrapDataCellsToNewRow))
    VARIANT_BOOL WrapDataCellsToNewRow;
    __declspec(property(get=GetFillEndOfTableWithBlankRows,put=PutFillEndOfTableWithBlankRows))
    VARIANT_BOOL FillEndOfTableWithBlankRows;
    __declspec(property(get=GetGroupByColumn,put=PutGroupByColumn))
    long GroupByColumn;
    __declspec(property(get=GetTitleFixedRowHeight,put=PutTitleFixedRowHeight))
    double TitleFixedRowHeight;
    __declspec(property(put=PutSavedSettings))
    _bstr_t SavedSettings;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetMarginHorizontal,put=PutMarginHorizontal))
    double MarginHorizontal;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetMarginVertical,put=PutMarginVertical))
    double MarginVertical;
    __declspec(property(get=GetModelLink))
    ModelLinkPtr ModelLink;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCell))
    TableCellPtr Cell[][];
    __declspec(property(get=GetColumnHeaderPosition,put=PutColumnHeaderPosition))
    enum TitlePosition ColumnHeaderPosition;
    __declspec(property(get=GetColumns))
    TableColumnsPtr Columns;
    __declspec(property(get=GetMaximumRows,put=PutMaximumRows))
    long MaximumRows;
    __declspec(property(get=GetPageGap,put=PutPageGap))
    double PageGap;
    __declspec(property(get=GetReverseDisplayOrder,put=PutReverseDisplayOrder))
    VARIANT_BOOL ReverseDisplayOrder;
    __declspec(property(get=GetRows))
    TableRowsPtr Rows;
    __declspec(property(get=GetShowColumnHeader,put=PutShowColumnHeader))
    VARIANT_BOOL ShowColumnHeader;
    __declspec(property(get=GetTableStyle,put=PutTableStyle))
    _bstr_t TableStyle;
    __declspec(property(get=GetTitles))
    TableTitlesPtr Titles;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    HRESULT Update ( );
    ModelLinkPtr GetModelLink ( );
    HRESULT Delete ( );
    IDispatchPtr GetParent ( );
    TableCellPtr GetCell (
        const _variant_t & RowIndex,
        const _variant_t & ColumnIndex );
    enum TitlePosition GetColumnHeaderPosition ( );
    void PutColumnHeaderPosition (
        enum TitlePosition _arg1 );
    TableColumnsPtr GetColumns ( );
    double GetMarginHorizontal ( );
    void PutMarginHorizontal (
        double _arg1 );
    double GetMarginVertical ( );
    void PutMarginVertical (
        double _arg1 );
    long GetMaximumRows ( );
    void PutMaximumRows (
        long _arg1 );
    double GetPageGap ( );
    void PutPageGap (
        double _arg1 );
    VARIANT_BOOL GetReverseDisplayOrder ( );
    void PutReverseDisplayOrder (
        VARIANT_BOOL _arg1 );
    TableRowsPtr GetRows ( );
    HRESULT SetOrigin (
        double x,
        double y );
    VARIANT_BOOL GetShowColumnHeader ( );
    void PutShowColumnHeader (
        VARIANT_BOOL _arg1 );
    _bstr_t GetTableStyle ( );
    void PutTableStyle (
        _bstr_t _arg1 );
    TableTitlesPtr GetTitles ( );
    enum TableAnchorPoint GetAnchorPoint ( );
    void PutAnchorPoint (
        enum TableAnchorPoint _arg1 );
    TablePagesPtr GetPages ( );
    double GetHeaderFixedRowHeight ( );
    void PutHeaderFixedRowHeight (
        double _arg1 );
    double GetDataFixedRowHeight ( );
    void PutDataFixedRowHeight (
        double _arg1 );
    double GetMaximumHeight ( );
    void PutMaximumHeight (
        double _arg1 );
    long GetNumberOfHeaderRows ( );
    void PutNumberOfHeaderRows (
        long _arg1 );
    long GetMaximumRowsFirstPage ( );
    void PutMaximumRowsFirstPage (
        long _arg1 );
    long GetMaximumRowsAdditionalPages ( );
    void PutMaximumRowsAdditionalPages (
        long _arg1 );
    double GetMaximumHeightFirstPage ( );
    void PutMaximumHeightFirstPage (
        double _arg1 );
    double GetMaximumHeightAdditionalPages ( );
    void PutMaximumHeightAdditionalPages (
        double _arg1 );
    VARIANT_BOOL GetCreateNewSheetsForTable ( );
    void PutCreateNewSheetsForTable (
        VARIANT_BOOL _arg1 );
    _bstr_t GetFirstSheetBackgroundName ( );
    void PutFirstSheetBackgroundName (
        _bstr_t _arg1 );
    _bstr_t GetAdditionalSheetsBackgroundName ( );
    void PutAdditionalSheetsBackgroundName (
        _bstr_t _arg1 );
    VARIANT_BOOL GetShowSheetBackground ( );
    void PutShowSheetBackground (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetMaintainSheetsWithTableSize ( );
    void PutMaintainSheetsWithTableSize (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetEnableGroups ( );
    void PutEnableGroups (
        VARIANT_BOOL _arg1 );
    TableGroupsPtr GetGroups ( );
    VARIANT_BOOL GetWrapDataCellsToNewRow ( );
    void PutWrapDataCellsToNewRow (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetFillEndOfTableWithBlankRows ( );
    void PutFillEndOfTableWithBlankRows (
        VARIANT_BOOL _arg1 );
    long GetGroupByColumn ( );
    void PutGroupByColumn (
        long _arg1 );
    double GetTitleFixedRowHeight ( );
    void PutTitleFixedRowHeight (
        double _arg1 );
    HRESULT GetListOfSavedSettings (
        long * NumSavedSettings,
        SAFEARRAY * * ListOfSavedSettings );
    void PutSavedSettings (
        _bstr_t _arg1 );
    _bstr_t GetName ( );
};

struct __declspec(uuid("3370b09a-06b4-4ff9-9e87-369059995fd6"))
_IConductorTablesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    ConductorTablePtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    ConductorTablePtr Add (
        struct DrawingView * pDrawingView );
    IDispatchPtr GetParent ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct ConductorTable * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Unknown ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ struct DrawingView * pDrawingView,
        /*[out,retval]*/ struct ConductorTable * * ppObj ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
};

struct __declspec(uuid("1f591807-b1ca-4fd2-a4df-bb742415bb18"))
_IConductorTableAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetAnchorPoint,put=PutAnchorPoint))
    enum TableAnchorPoint AnchorPoint;
    __declspec(property(get=GetPages))
    TablePagesPtr Pages;
    __declspec(property(get=GetHeaderFixedRowHeight,put=PutHeaderFixedRowHeight))
    double HeaderFixedRowHeight;
    __declspec(property(get=GetDataFixedRowHeight,put=PutDataFixedRowHeight))
    double DataFixedRowHeight;
    __declspec(property(get=GetMaximumHeight,put=PutMaximumHeight))
    double MaximumHeight;
    __declspec(property(get=GetNumberOfHeaderRows,put=PutNumberOfHeaderRows))
    long NumberOfHeaderRows;
    __declspec(property(get=GetMaximumRowsFirstPage,put=PutMaximumRowsFirstPage))
    long MaximumRowsFirstPage;
    __declspec(property(get=GetMaximumRowsAdditionalPages,put=PutMaximumRowsAdditionalPages))
    long MaximumRowsAdditionalPages;
    __declspec(property(get=GetMaximumHeightFirstPage,put=PutMaximumHeightFirstPage))
    double MaximumHeightFirstPage;
    __declspec(property(get=GetMaximumHeightAdditionalPages,put=PutMaximumHeightAdditionalPages))
    double MaximumHeightAdditionalPages;
    __declspec(property(get=GetCreateNewSheetsForTable,put=PutCreateNewSheetsForTable))
    VARIANT_BOOL CreateNewSheetsForTable;
    __declspec(property(get=GetFirstSheetBackgroundName,put=PutFirstSheetBackgroundName))
    _bstr_t FirstSheetBackgroundName;
    __declspec(property(get=GetAdditionalSheetsBackgroundName,put=PutAdditionalSheetsBackgroundName))
    _bstr_t AdditionalSheetsBackgroundName;
    __declspec(property(get=GetShowSheetBackground,put=PutShowSheetBackground))
    VARIANT_BOOL ShowSheetBackground;
    __declspec(property(get=GetMaintainSheetsWithTableSize,put=PutMaintainSheetsWithTableSize))
    VARIANT_BOOL MaintainSheetsWithTableSize;
    __declspec(property(get=GetEnableGroups,put=PutEnableGroups))
    VARIANT_BOOL EnableGroups;
    __declspec(property(get=GetGroups))
    TableGroupsPtr Groups;
    __declspec(property(get=GetWrapDataCellsToNewRow,put=PutWrapDataCellsToNewRow))
    VARIANT_BOOL WrapDataCellsToNewRow;
    __declspec(property(get=GetFillEndOfTableWithBlankRows,put=PutFillEndOfTableWithBlankRows))
    VARIANT_BOOL FillEndOfTableWithBlankRows;
    __declspec(property(get=GetGroupByColumn,put=PutGroupByColumn))
    long GroupByColumn;
    __declspec(property(get=GetTitleFixedRowHeight,put=PutTitleFixedRowHeight))
    double TitleFixedRowHeight;
    __declspec(property(put=PutSavedSettings))
    _bstr_t SavedSettings;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetMarginHorizontal,put=PutMarginHorizontal))
    double MarginHorizontal;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetMarginVertical,put=PutMarginVertical))
    double MarginVertical;
    __declspec(property(get=GetModelLink))
    ModelLinkPtr ModelLink;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCell))
    TableCellPtr Cell[][];
    __declspec(property(get=GetColumnHeaderPosition,put=PutColumnHeaderPosition))
    enum TitlePosition ColumnHeaderPosition;
    __declspec(property(get=GetColumns))
    TableColumnsPtr Columns;
    __declspec(property(get=GetMaximumRows,put=PutMaximumRows))
    long MaximumRows;
    __declspec(property(get=GetPageGap,put=PutPageGap))
    double PageGap;
    __declspec(property(get=GetReverseDisplayOrder,put=PutReverseDisplayOrder))
    VARIANT_BOOL ReverseDisplayOrder;
    __declspec(property(get=GetRows))
    TableRowsPtr Rows;
    __declspec(property(get=GetShowColumnHeader,put=PutShowColumnHeader))
    VARIANT_BOOL ShowColumnHeader;
    __declspec(property(get=GetTableStyle,put=PutTableStyle))
    _bstr_t TableStyle;
    __declspec(property(get=GetTitles))
    TableTitlesPtr Titles;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    HRESULT Update ( );
    ModelLinkPtr GetModelLink ( );
    HRESULT Delete ( );
    IDispatchPtr GetParent ( );
    TableCellPtr GetCell (
        const _variant_t & RowIndex,
        const _variant_t & ColumnIndex );
    enum TitlePosition GetColumnHeaderPosition ( );
    void PutColumnHeaderPosition (
        enum TitlePosition ColumnHeaderPosition );
    TableColumnsPtr GetColumns ( );
    double GetMarginHorizontal ( );
    void PutMarginHorizontal (
        double MarginHorizontal );
    double GetMarginVertical ( );
    void PutMarginVertical (
        double MarginVertical );
    long GetMaximumRows ( );
    void PutMaximumRows (
        long MaximumRows );
    double GetPageGap ( );
    void PutPageGap (
        double PageGap );
    VARIANT_BOOL GetReverseDisplayOrder ( );
    void PutReverseDisplayOrder (
        VARIANT_BOOL ReverseDisplayOrder );
    TableRowsPtr GetRows ( );
    HRESULT SetOrigin (
        double x,
        double y );
    VARIANT_BOOL GetShowColumnHeader ( );
    void PutShowColumnHeader (
        VARIANT_BOOL ShowColumnHeader );
    _bstr_t GetTableStyle ( );
    void PutTableStyle (
        _bstr_t TableStyle );
    TableTitlesPtr GetTitles ( );
    enum TableAnchorPoint GetAnchorPoint ( );
    void PutAnchorPoint (
        enum TableAnchorPoint AnchorPoint );
    TablePagesPtr GetPages ( );
    double GetHeaderFixedRowHeight ( );
    void PutHeaderFixedRowHeight (
        double HeaderFixedRowHeight );
    double GetDataFixedRowHeight ( );
    void PutDataFixedRowHeight (
        double DataFixedRowHeight );
    double GetMaximumHeight ( );
    void PutMaximumHeight (
        double MaximumHeight );
    long GetNumberOfHeaderRows ( );
    void PutNumberOfHeaderRows (
        long NumberOfHeaderRows );
    long GetMaximumRowsFirstPage ( );
    void PutMaximumRowsFirstPage (
        long MaximumRowsFirstPage );
    long GetMaximumRowsAdditionalPages ( );
    void PutMaximumRowsAdditionalPages (
        long MaximumRowsAdditionalPages );
    double GetMaximumHeightFirstPage ( );
    void PutMaximumHeightFirstPage (
        double MaximumHeightFirstPage );
    double GetMaximumHeightAdditionalPages ( );
    void PutMaximumHeightAdditionalPages (
        double MaximumHeightAdditionalPages );
    VARIANT_BOOL GetCreateNewSheetsForTable ( );
    void PutCreateNewSheetsForTable (
        VARIANT_BOOL CreateNewSheetsForTable );
    _bstr_t GetFirstSheetBackgroundName ( );
    void PutFirstSheetBackgroundName (
        _bstr_t FirstSheetBackgroundName );
    _bstr_t GetAdditionalSheetsBackgroundName ( );
    void PutAdditionalSheetsBackgroundName (
        _bstr_t AdditionalSheetsBackgroundName );
    VARIANT_BOOL GetShowSheetBackground ( );
    void PutShowSheetBackground (
        VARIANT_BOOL ShowSheetBackground );
    VARIANT_BOOL GetMaintainSheetsWithTableSize ( );
    void PutMaintainSheetsWithTableSize (
        VARIANT_BOOL MaintainSheetsWithTableSize );
    VARIANT_BOOL GetEnableGroups ( );
    void PutEnableGroups (
        VARIANT_BOOL EnableGroups );
    TableGroupsPtr GetGroups ( );
    VARIANT_BOOL GetWrapDataCellsToNewRow ( );
    void PutWrapDataCellsToNewRow (
        VARIANT_BOOL WrapDataCellsToNewRow );
    VARIANT_BOOL GetFillEndOfTableWithBlankRows ( );
    void PutFillEndOfTableWithBlankRows (
        VARIANT_BOOL FillEndOfTableWithBlankRows );
    long GetGroupByColumn ( );
    void PutGroupByColumn (
        long ColumnIndex );
    double GetTitleFixedRowHeight ( );
    void PutTitleFixedRowHeight (
        double TitleFixedRowHeight );
    HRESULT GetListOfSavedSettings (
        long * NumSavedSettings,
        SAFEARRAY * * ListOfSavedSettings );
    void PutSavedSettings (
        _bstr_t _arg1 );
    _bstr_t GetName ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall raw_Update ( ) = 0;
      virtual HRESULT __stdcall get_ModelLink (
        /*[out,retval]*/ struct ModelLink * * ppModelLink ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Cell (
        /*[in]*/ VARIANT RowIndex,
        /*[in]*/ VARIANT ColumnIndex,
        /*[out,retval]*/ struct TableCell * * ppCell ) = 0;
      virtual HRESULT __stdcall get_ColumnHeaderPosition (
        /*[out,retval]*/ enum TitlePosition * ColumnHeaderPosition ) = 0;
      virtual HRESULT __stdcall put_ColumnHeaderPosition (
        /*[in]*/ enum TitlePosition ColumnHeaderPosition ) = 0;
      virtual HRESULT __stdcall get_Columns (
        /*[out,retval]*/ struct TableColumns * * Columns ) = 0;
      virtual HRESULT __stdcall get_MarginHorizontal (
        /*[out,retval]*/ double * MarginHorizontal ) = 0;
      virtual HRESULT __stdcall put_MarginHorizontal (
        /*[in]*/ double MarginHorizontal ) = 0;
      virtual HRESULT __stdcall get_MarginVertical (
        /*[out,retval]*/ double * MarginVertical ) = 0;
      virtual HRESULT __stdcall put_MarginVertical (
        /*[in]*/ double MarginVertical ) = 0;
      virtual HRESULT __stdcall get_MaximumRows (
        /*[out,retval]*/ long * MaximumRows ) = 0;
      virtual HRESULT __stdcall put_MaximumRows (
        /*[in]*/ long MaximumRows ) = 0;
      virtual HRESULT __stdcall get_PageGap (
        /*[out,retval]*/ double * PageGap ) = 0;
      virtual HRESULT __stdcall put_PageGap (
        /*[in]*/ double PageGap ) = 0;
      virtual HRESULT __stdcall get_ReverseDisplayOrder (
        /*[out,retval]*/ VARIANT_BOOL * ReverseDisplayOrder ) = 0;
      virtual HRESULT __stdcall put_ReverseDisplayOrder (
        /*[in]*/ VARIANT_BOOL ReverseDisplayOrder ) = 0;
      virtual HRESULT __stdcall get_Rows (
        /*[out,retval]*/ struct TableRows * * Rows ) = 0;
      virtual HRESULT __stdcall raw_SetOrigin (
        /*[in]*/ double x,
        /*[in]*/ double y ) = 0;
      virtual HRESULT __stdcall get_ShowColumnHeader (
        /*[out,retval]*/ VARIANT_BOOL * ShowColumnHeader ) = 0;
      virtual HRESULT __stdcall put_ShowColumnHeader (
        /*[in]*/ VARIANT_BOOL ShowColumnHeader ) = 0;
      virtual HRESULT __stdcall get_TableStyle (
        /*[out,retval]*/ BSTR * TableStyle ) = 0;
      virtual HRESULT __stdcall put_TableStyle (
        /*[in]*/ BSTR TableStyle ) = 0;
      virtual HRESULT __stdcall get_Titles (
        /*[out,retval]*/ struct TableTitles * * Titles ) = 0;
      virtual HRESULT __stdcall get_AnchorPoint (
        /*[out,retval]*/ enum TableAnchorPoint * AnchorPoint ) = 0;
      virtual HRESULT __stdcall put_AnchorPoint (
        /*[in]*/ enum TableAnchorPoint AnchorPoint ) = 0;
      virtual HRESULT __stdcall get_Pages (
        /*[out,retval]*/ struct TablePages * * Rows ) = 0;
      virtual HRESULT __stdcall get_HeaderFixedRowHeight (
        /*[out,retval]*/ double * HeaderFixedRowHeight ) = 0;
      virtual HRESULT __stdcall put_HeaderFixedRowHeight (
        /*[in]*/ double HeaderFixedRowHeight ) = 0;
      virtual HRESULT __stdcall get_DataFixedRowHeight (
        /*[out,retval]*/ double * DataFixedRowHeight ) = 0;
      virtual HRESULT __stdcall put_DataFixedRowHeight (
        /*[in]*/ double DataFixedRowHeight ) = 0;
      virtual HRESULT __stdcall get_MaximumHeight (
        /*[out,retval]*/ double * MaximumHeight ) = 0;
      virtual HRESULT __stdcall put_MaximumHeight (
        /*[in]*/ double MaximumHeight ) = 0;
      virtual HRESULT __stdcall get_NumberOfHeaderRows (
        /*[out,retval]*/ long * NumberOfHeaderRows ) = 0;
      virtual HRESULT __stdcall put_NumberOfHeaderRows (
        /*[in]*/ long NumberOfHeaderRows ) = 0;
      virtual HRESULT __stdcall get_MaximumRowsFirstPage (
        /*[out,retval]*/ long * MaximumRowsFirstPage ) = 0;
      virtual HRESULT __stdcall put_MaximumRowsFirstPage (
        /*[in]*/ long MaximumRowsFirstPage ) = 0;
      virtual HRESULT __stdcall get_MaximumRowsAdditionalPages (
        /*[out,retval]*/ long * MaximumRowsAdditionalPages ) = 0;
      virtual HRESULT __stdcall put_MaximumRowsAdditionalPages (
        /*[in]*/ long MaximumRowsAdditionalPages ) = 0;
      virtual HRESULT __stdcall get_MaximumHeightFirstPage (
        /*[out,retval]*/ double * MaximumHeightFirstPage ) = 0;
      virtual HRESULT __stdcall put_MaximumHeightFirstPage (
        /*[in]*/ double MaximumHeightFirstPage ) = 0;
      virtual HRESULT __stdcall get_MaximumHeightAdditionalPages (
        /*[out,retval]*/ double * MaximumHeightAdditionalPages ) = 0;
      virtual HRESULT __stdcall put_MaximumHeightAdditionalPages (
        /*[in]*/ double MaximumHeightAdditionalPages ) = 0;
      virtual HRESULT __stdcall get_CreateNewSheetsForTable (
        /*[out,retval]*/ VARIANT_BOOL * CreateNewSheetsForTable ) = 0;
      virtual HRESULT __stdcall put_CreateNewSheetsForTable (
        /*[in]*/ VARIANT_BOOL CreateNewSheetsForTable ) = 0;
      virtual HRESULT __stdcall get_FirstSheetBackgroundName (
        /*[out,retval]*/ BSTR * FirstSheetBackgroundName ) = 0;
      virtual HRESULT __stdcall put_FirstSheetBackgroundName (
        /*[in]*/ BSTR FirstSheetBackgroundName ) = 0;
      virtual HRESULT __stdcall get_AdditionalSheetsBackgroundName (
        /*[out,retval]*/ BSTR * AdditionalSheetsBackgroundName ) = 0;
      virtual HRESULT __stdcall put_AdditionalSheetsBackgroundName (
        /*[in]*/ BSTR AdditionalSheetsBackgroundName ) = 0;
      virtual HRESULT __stdcall get_ShowSheetBackground (
        /*[out,retval]*/ VARIANT_BOOL * ShowSheetBackground ) = 0;
      virtual HRESULT __stdcall put_ShowSheetBackground (
        /*[in]*/ VARIANT_BOOL ShowSheetBackground ) = 0;
      virtual HRESULT __stdcall get_MaintainSheetsWithTableSize (
        /*[out,retval]*/ VARIANT_BOOL * MaintainSheetsWithTableSize ) = 0;
      virtual HRESULT __stdcall put_MaintainSheetsWithTableSize (
        /*[in]*/ VARIANT_BOOL MaintainSheetsWithTableSize ) = 0;
      virtual HRESULT __stdcall get_EnableGroups (
        /*[out,retval]*/ VARIANT_BOOL * EnableGroups ) = 0;
      virtual HRESULT __stdcall put_EnableGroups (
        /*[in]*/ VARIANT_BOOL EnableGroups ) = 0;
      virtual HRESULT __stdcall get_Groups (
        /*[out,retval]*/ struct TableGroups * * Groups ) = 0;
      virtual HRESULT __stdcall get_WrapDataCellsToNewRow (
        /*[out,retval]*/ VARIANT_BOOL * WrapDataCellsToNewRow ) = 0;
      virtual HRESULT __stdcall put_WrapDataCellsToNewRow (
        /*[in]*/ VARIANT_BOOL WrapDataCellsToNewRow ) = 0;
      virtual HRESULT __stdcall get_FillEndOfTableWithBlankRows (
        /*[out,retval]*/ VARIANT_BOOL * FillEndOfTableWithBlankRows ) = 0;
      virtual HRESULT __stdcall put_FillEndOfTableWithBlankRows (
        /*[in]*/ VARIANT_BOOL FillEndOfTableWithBlankRows ) = 0;
      virtual HRESULT __stdcall get_GroupByColumn (
        /*[out,retval]*/ long * ColumnIndex ) = 0;
      virtual HRESULT __stdcall put_GroupByColumn (
        /*[in]*/ long ColumnIndex ) = 0;
      virtual HRESULT __stdcall get_TitleFixedRowHeight (
        /*[out,retval]*/ double * TitleFixedRowHeight ) = 0;
      virtual HRESULT __stdcall put_TitleFixedRowHeight (
        /*[in]*/ double TitleFixedRowHeight ) = 0;
      virtual HRESULT __stdcall raw_GetListOfSavedSettings (
        /*[out]*/ long * NumSavedSettings,
        /*[in,out]*/ SAFEARRAY * * ListOfSavedSettings ) = 0;
      virtual HRESULT __stdcall put_SavedSettings (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
};

struct __declspec(uuid("06475741-4bb7-4224-a9c6-14a8225f9095"))
ToleranceTables : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    ToleranceTablePtr Item (
        const _variant_t & Index );
    ToleranceTablePtr AddByActiveSheet (
        _bstr_t SavedSettings );
    ToleranceTablePtr AddByDrawingView (
        struct DrawingView * DrawingView,
        _bstr_t SavedSettings,
        long DimensionsInView );
    ToleranceTablePtr AddByUserSelection (
        _bstr_t SavedSettings );
    IDispatchPtr GetParent ( );
};

struct __declspec(uuid("417ccada-99b4-4e73-b421-601fdfdceda0"))
ToleranceTable : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetMaximumRows,put=PutMaximumRows))
    long MaximumRows;
    __declspec(property(get=GetPageGap,put=PutPageGap))
    double PageGap;
    __declspec(property(get=GetPages))
    TablePagesPtr Pages;
    __declspec(property(get=GetReverseDisplayOrder,put=PutReverseDisplayOrder))
    VARIANT_BOOL ReverseDisplayOrder;
    __declspec(property(get=GetRows))
    TableRowsPtr Rows;
    __declspec(property(get=GetShowColumnHeader,put=PutShowColumnHeader))
    VARIANT_BOOL ShowColumnHeader;
    __declspec(property(get=GetTableStyle,put=PutTableStyle))
    _bstr_t TableStyle;
    __declspec(property(get=GetTitles))
    TableTitlesPtr Titles;
    __declspec(property(get=GetNumberOfHeaderRows,put=PutNumberOfHeaderRows))
    long NumberOfHeaderRows;
    __declspec(property(get=GetMaximumRowsFirstPage,put=PutMaximumRowsFirstPage))
    long MaximumRowsFirstPage;
    __declspec(property(get=GetMaximumRowsAdditionalPages,put=PutMaximumRowsAdditionalPages))
    long MaximumRowsAdditionalPages;
    __declspec(property(get=GetMaximumHeightFirstPage,put=PutMaximumHeightFirstPage))
    double MaximumHeightFirstPage;
    __declspec(property(get=GetMaximumHeightAdditionalPages,put=PutMaximumHeightAdditionalPages))
    double MaximumHeightAdditionalPages;
    __declspec(property(get=GetCreateNewSheetsForTable,put=PutCreateNewSheetsForTable))
    VARIANT_BOOL CreateNewSheetsForTable;
    __declspec(property(get=GetFirstSheetBackgroundName,put=PutFirstSheetBackgroundName))
    _bstr_t FirstSheetBackgroundName;
    __declspec(property(get=GetAdditionalSheetsBackgroundName,put=PutAdditionalSheetsBackgroundName))
    _bstr_t AdditionalSheetsBackgroundName;
    __declspec(property(get=GetShowSheetBackground,put=PutShowSheetBackground))
    VARIANT_BOOL ShowSheetBackground;
    __declspec(property(get=GetMaintainSheetsWithTableSize,put=PutMaintainSheetsWithTableSize))
    VARIANT_BOOL MaintainSheetsWithTableSize;
    __declspec(property(get=GetEnableGroups,put=PutEnableGroups))
    VARIANT_BOOL EnableGroups;
    __declspec(property(get=GetGroups))
    TableGroupsPtr Groups;
    __declspec(property(get=GetWrapDataCellsToNewRow,put=PutWrapDataCellsToNewRow))
    VARIANT_BOOL WrapDataCellsToNewRow;
    __declspec(property(get=GetFillEndOfTableWithBlankRows,put=PutFillEndOfTableWithBlankRows))
    VARIANT_BOOL FillEndOfTableWithBlankRows;
    __declspec(property(get=GetGroupByColumn,put=PutGroupByColumn))
    long GroupByColumn;
    __declspec(property(get=GetTitleFixedRowHeight,put=PutTitleFixedRowHeight))
    double TitleFixedRowHeight;
    __declspec(property(get=GetMarginHorizontal,put=PutMarginHorizontal))
    double MarginHorizontal;
    __declspec(property(get=GetMarginVertical,put=PutMarginVertical))
    double MarginVertical;
    __declspec(property(get=GetIncludeDimensionsInView,put=PutIncludeDimensionsInView))
    VARIANT_BOOL IncludeDimensionsInView;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(put=PutSavedSettings))
    _bstr_t SavedSettings;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIsUpToDate))
    VARIANT_BOOL IsUpToDate;
    __declspec(property(get=GetAnchorPoint,put=PutAnchorPoint))
    enum TableAnchorPoint AnchorPoint;
    __declspec(property(get=GetCell))
    TableCellPtr Cell[][];
    __declspec(property(get=GetColumnHeaderPosition,put=PutColumnHeaderPosition))
    enum TitlePosition ColumnHeaderPosition;
    __declspec(property(get=GetColumns))
    TableColumnsPtr Columns;
    __declspec(property(get=GetDataFixedRowHeight,put=PutDataFixedRowHeight))
    double DataFixedRowHeight;
    __declspec(property(get=GetHeaderFixedRowHeight,put=PutHeaderFixedRowHeight))
    double HeaderFixedRowHeight;
    __declspec(property(get=GetMargin,put=PutMargin))
    double Margin;
    __declspec(property(get=GetMaximumHeight,put=PutMaximumHeight))
    double MaximumHeight;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    HRESULT Update ( );
    HRESULT CopyToClipboard ( );
    HRESULT SourceDimensions (
        SAFEARRAY * * ppDimensions );
    HRESULT Delete ( );
    void PutSavedSettings (
        _bstr_t _arg1 );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetIncludeDimensionsInView ( );
    void PutIncludeDimensionsInView (
        VARIANT_BOOL _arg1 );
    HRESULT SetOrigin (
        double x,
        double y );
    HRESULT GetOrigin (
        double * x,
        double * y );
    HRESULT GetListOfSavedSettings (
        long * NumSavedSettings,
        SAFEARRAY * * ListOfSavedSettings );
    VARIANT_BOOL GetIsUpToDate ( );
    HRESULT ConvertToTable ( );
    TableCellPtr GetCell (
        const _variant_t & RowIndex,
        const _variant_t & ColumnIndex );
    enum TitlePosition GetColumnHeaderPosition ( );
    void PutColumnHeaderPosition (
        enum TitlePosition _arg1 );
    TableColumnsPtr GetColumns ( );
    double GetMargin ( );
    void PutMargin (
        double _arg1 );
    long GetMaximumRows ( );
    void PutMaximumRows (
        long _arg1 );
    double GetPageGap ( );
    void PutPageGap (
        double _arg1 );
    VARIANT_BOOL GetReverseDisplayOrder ( );
    void PutReverseDisplayOrder (
        VARIANT_BOOL _arg1 );
    TableRowsPtr GetRows ( );
    VARIANT_BOOL GetShowColumnHeader ( );
    void PutShowColumnHeader (
        VARIANT_BOOL _arg1 );
    _bstr_t GetTableStyle ( );
    void PutTableStyle (
        _bstr_t _arg1 );
    TableTitlesPtr GetTitles ( );
    enum TableAnchorPoint GetAnchorPoint ( );
    void PutAnchorPoint (
        enum TableAnchorPoint _arg1 );
    TablePagesPtr GetPages ( );
    double GetHeaderFixedRowHeight ( );
    void PutHeaderFixedRowHeight (
        double _arg1 );
    double GetDataFixedRowHeight ( );
    void PutDataFixedRowHeight (
        double _arg1 );
    double GetMaximumHeight ( );
    void PutMaximumHeight (
        double _arg1 );
    long GetNumberOfHeaderRows ( );
    void PutNumberOfHeaderRows (
        long _arg1 );
    long GetMaximumRowsFirstPage ( );
    void PutMaximumRowsFirstPage (
        long _arg1 );
    long GetMaximumRowsAdditionalPages ( );
    void PutMaximumRowsAdditionalPages (
        long _arg1 );
    double GetMaximumHeightFirstPage ( );
    void PutMaximumHeightFirstPage (
        double _arg1 );
    double GetMaximumHeightAdditionalPages ( );
    void PutMaximumHeightAdditionalPages (
        double _arg1 );
    VARIANT_BOOL GetCreateNewSheetsForTable ( );
    void PutCreateNewSheetsForTable (
        VARIANT_BOOL _arg1 );
    _bstr_t GetFirstSheetBackgroundName ( );
    void PutFirstSheetBackgroundName (
        _bstr_t _arg1 );
    _bstr_t GetAdditionalSheetsBackgroundName ( );
    void PutAdditionalSheetsBackgroundName (
        _bstr_t _arg1 );
    VARIANT_BOOL GetShowSheetBackground ( );
    void PutShowSheetBackground (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetMaintainSheetsWithTableSize ( );
    void PutMaintainSheetsWithTableSize (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetEnableGroups ( );
    void PutEnableGroups (
        VARIANT_BOOL _arg1 );
    TableGroupsPtr GetGroups ( );
    VARIANT_BOOL GetWrapDataCellsToNewRow ( );
    void PutWrapDataCellsToNewRow (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetFillEndOfTableWithBlankRows ( );
    void PutFillEndOfTableWithBlankRows (
        VARIANT_BOOL _arg1 );
    long GetGroupByColumn ( );
    void PutGroupByColumn (
        long _arg1 );
    double GetTitleFixedRowHeight ( );
    void PutTitleFixedRowHeight (
        double _arg1 );
    double GetMarginHorizontal ( );
    void PutMarginHorizontal (
        double _arg1 );
    double GetMarginVertical ( );
    void PutMarginVertical (
        double _arg1 );
    _bstr_t GetName ( );
};

struct __declspec(uuid("926837cf-e4a0-4039-aa76-1125b1e17dd3"))
_IToleranceTablesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    ToleranceTablePtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    ToleranceTablePtr AddByActiveSheet (
        _bstr_t SavedSettings );
    ToleranceTablePtr AddByDrawingView (
        struct DrawingView * DrawingView,
        _bstr_t SavedSettings,
        long DimensionsInView );
    ToleranceTablePtr AddByUserSelection (
        _bstr_t SavedSettings );
    IDispatchPtr GetParent ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct ToleranceTable * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Unknown ) = 0;
      virtual HRESULT __stdcall raw_AddByActiveSheet (
        /*[in]*/ BSTR SavedSettings,
        /*[out,retval]*/ struct ToleranceTable * * ppObj ) = 0;
      virtual HRESULT __stdcall raw_AddByDrawingView (
        /*[in]*/ struct DrawingView * DrawingView,
        /*[in]*/ BSTR SavedSettings,
        /*[in]*/ long DimensionsInView,
        /*[out,retval]*/ struct ToleranceTable * * ppObj ) = 0;
      virtual HRESULT __stdcall raw_AddByUserSelection (
        /*[in]*/ BSTR SavedSettings,
        /*[out,retval]*/ struct ToleranceTable * * ppObj ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
};

struct __declspec(uuid("b2d14483-6ef6-4cf2-a684-f98d11495f69"))
_IToleranceTableAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetMaximumRows,put=PutMaximumRows))
    long MaximumRows;
    __declspec(property(get=GetPageGap,put=PutPageGap))
    double PageGap;
    __declspec(property(get=GetPages))
    TablePagesPtr Pages;
    __declspec(property(get=GetReverseDisplayOrder,put=PutReverseDisplayOrder))
    VARIANT_BOOL ReverseDisplayOrder;
    __declspec(property(get=GetRows))
    TableRowsPtr Rows;
    __declspec(property(get=GetShowColumnHeader,put=PutShowColumnHeader))
    VARIANT_BOOL ShowColumnHeader;
    __declspec(property(get=GetTableStyle,put=PutTableStyle))
    _bstr_t TableStyle;
    __declspec(property(get=GetTitles))
    TableTitlesPtr Titles;
    __declspec(property(get=GetNumberOfHeaderRows,put=PutNumberOfHeaderRows))
    long NumberOfHeaderRows;
    __declspec(property(get=GetMaximumRowsFirstPage,put=PutMaximumRowsFirstPage))
    long MaximumRowsFirstPage;
    __declspec(property(get=GetMaximumRowsAdditionalPages,put=PutMaximumRowsAdditionalPages))
    long MaximumRowsAdditionalPages;
    __declspec(property(get=GetMaximumHeightFirstPage,put=PutMaximumHeightFirstPage))
    double MaximumHeightFirstPage;
    __declspec(property(get=GetMaximumHeightAdditionalPages,put=PutMaximumHeightAdditionalPages))
    double MaximumHeightAdditionalPages;
    __declspec(property(get=GetCreateNewSheetsForTable,put=PutCreateNewSheetsForTable))
    VARIANT_BOOL CreateNewSheetsForTable;
    __declspec(property(get=GetFirstSheetBackgroundName,put=PutFirstSheetBackgroundName))
    _bstr_t FirstSheetBackgroundName;
    __declspec(property(get=GetAdditionalSheetsBackgroundName,put=PutAdditionalSheetsBackgroundName))
    _bstr_t AdditionalSheetsBackgroundName;
    __declspec(property(get=GetShowSheetBackground,put=PutShowSheetBackground))
    VARIANT_BOOL ShowSheetBackground;
    __declspec(property(get=GetMaintainSheetsWithTableSize,put=PutMaintainSheetsWithTableSize))
    VARIANT_BOOL MaintainSheetsWithTableSize;
    __declspec(property(get=GetEnableGroups,put=PutEnableGroups))
    VARIANT_BOOL EnableGroups;
    __declspec(property(get=GetGroups))
    TableGroupsPtr Groups;
    __declspec(property(get=GetWrapDataCellsToNewRow,put=PutWrapDataCellsToNewRow))
    VARIANT_BOOL WrapDataCellsToNewRow;
    __declspec(property(get=GetFillEndOfTableWithBlankRows,put=PutFillEndOfTableWithBlankRows))
    VARIANT_BOOL FillEndOfTableWithBlankRows;
    __declspec(property(get=GetGroupByColumn,put=PutGroupByColumn))
    long GroupByColumn;
    __declspec(property(get=GetTitleFixedRowHeight,put=PutTitleFixedRowHeight))
    double TitleFixedRowHeight;
    __declspec(property(get=GetMarginHorizontal,put=PutMarginHorizontal))
    double MarginHorizontal;
    __declspec(property(get=GetMarginVertical,put=PutMarginVertical))
    double MarginVertical;
    __declspec(property(get=GetIncludeDimensionsInView,put=PutIncludeDimensionsInView))
    VARIANT_BOOL IncludeDimensionsInView;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(put=PutSavedSettings))
    _bstr_t SavedSettings;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIsUpToDate))
    VARIANT_BOOL IsUpToDate;
    __declspec(property(get=GetAnchorPoint,put=PutAnchorPoint))
    enum TableAnchorPoint AnchorPoint;
    __declspec(property(get=GetCell))
    TableCellPtr Cell[][];
    __declspec(property(get=GetColumnHeaderPosition,put=PutColumnHeaderPosition))
    enum TitlePosition ColumnHeaderPosition;
    __declspec(property(get=GetColumns))
    TableColumnsPtr Columns;
    __declspec(property(get=GetDataFixedRowHeight,put=PutDataFixedRowHeight))
    double DataFixedRowHeight;
    __declspec(property(get=GetHeaderFixedRowHeight,put=PutHeaderFixedRowHeight))
    double HeaderFixedRowHeight;
    __declspec(property(get=GetMargin,put=PutMargin))
    double Margin;
    __declspec(property(get=GetMaximumHeight,put=PutMaximumHeight))
    double MaximumHeight;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    HRESULT Update ( );
    HRESULT CopyToClipboard ( );
    HRESULT SourceDimensions (
        SAFEARRAY * * ppDimensions );
    HRESULT Delete ( );
    void PutSavedSettings (
        _bstr_t _arg1 );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetIncludeDimensionsInView ( );
    void PutIncludeDimensionsInView (
        VARIANT_BOOL value );
    HRESULT SetOrigin (
        double x,
        double y );
    HRESULT GetOrigin (
        double * x,
        double * y );
    HRESULT GetListOfSavedSettings (
        long * NumSavedSettings,
        SAFEARRAY * * ListOfSavedSettings );
    VARIANT_BOOL GetIsUpToDate ( );
    HRESULT ConvertToTable ( );
    TableCellPtr GetCell (
        const _variant_t & RowIndex,
        const _variant_t & ColumnIndex );
    enum TitlePosition GetColumnHeaderPosition ( );
    void PutColumnHeaderPosition (
        enum TitlePosition ColumnHeaderPosition );
    TableColumnsPtr GetColumns ( );
    double GetMargin ( );
    void PutMargin (
        double Margin );
    long GetMaximumRows ( );
    void PutMaximumRows (
        long MaximumRows );
    double GetPageGap ( );
    void PutPageGap (
        double PageGap );
    VARIANT_BOOL GetReverseDisplayOrder ( );
    void PutReverseDisplayOrder (
        VARIANT_BOOL ReverseDisplayOrder );
    TableRowsPtr GetRows ( );
    VARIANT_BOOL GetShowColumnHeader ( );
    void PutShowColumnHeader (
        VARIANT_BOOL ShowColumnHeader );
    _bstr_t GetTableStyle ( );
    void PutTableStyle (
        _bstr_t TableStyle );
    TableTitlesPtr GetTitles ( );
    enum TableAnchorPoint GetAnchorPoint ( );
    void PutAnchorPoint (
        enum TableAnchorPoint AnchorPoint );
    TablePagesPtr GetPages ( );
    double GetHeaderFixedRowHeight ( );
    void PutHeaderFixedRowHeight (
        double HeaderFixedRowHeight );
    double GetDataFixedRowHeight ( );
    void PutDataFixedRowHeight (
        double DataFixedRowHeight );
    double GetMaximumHeight ( );
    void PutMaximumHeight (
        double MaximumHeight );
    long GetNumberOfHeaderRows ( );
    void PutNumberOfHeaderRows (
        long NumberOfHeaderRows );
    long GetMaximumRowsFirstPage ( );
    void PutMaximumRowsFirstPage (
        long MaximumRowsFirstPage );
    long GetMaximumRowsAdditionalPages ( );
    void PutMaximumRowsAdditionalPages (
        long MaximumRowsAdditionalPages );
    double GetMaximumHeightFirstPage ( );
    void PutMaximumHeightFirstPage (
        double MaximumHeightFirstPage );
    double GetMaximumHeightAdditionalPages ( );
    void PutMaximumHeightAdditionalPages (
        double MaximumHeightAdditionalPages );
    VARIANT_BOOL GetCreateNewSheetsForTable ( );
    void PutCreateNewSheetsForTable (
        VARIANT_BOOL CreateNewSheetsForTable );
    _bstr_t GetFirstSheetBackgroundName ( );
    void PutFirstSheetBackgroundName (
        _bstr_t FirstSheetBackgroundName );
    _bstr_t GetAdditionalSheetsBackgroundName ( );
    void PutAdditionalSheetsBackgroundName (
        _bstr_t AdditionalSheetsBackgroundName );
    VARIANT_BOOL GetShowSheetBackground ( );
    void PutShowSheetBackground (
        VARIANT_BOOL ShowSheetBackground );
    VARIANT_BOOL GetMaintainSheetsWithTableSize ( );
    void PutMaintainSheetsWithTableSize (
        VARIANT_BOOL MaintainSheetsWithTableSize );
    VARIANT_BOOL GetEnableGroups ( );
    void PutEnableGroups (
        VARIANT_BOOL EnableGroups );
    TableGroupsPtr GetGroups ( );
    VARIANT_BOOL GetWrapDataCellsToNewRow ( );
    void PutWrapDataCellsToNewRow (
        VARIANT_BOOL WrapDataCellsToNewRow );
    VARIANT_BOOL GetFillEndOfTableWithBlankRows ( );
    void PutFillEndOfTableWithBlankRows (
        VARIANT_BOOL FillEndOfTableWithBlankRows );
    long GetGroupByColumn ( );
    void PutGroupByColumn (
        long ColumnIndex );
    double GetTitleFixedRowHeight ( );
    void PutTitleFixedRowHeight (
        double TitleFixedRowHeight );
    double GetMarginHorizontal ( );
    void PutMarginHorizontal (
        double MarginHorizontal );
    double GetMarginVertical ( );
    void PutMarginVertical (
        double MarginVertical );
    _bstr_t GetName ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall raw_Update ( ) = 0;
      virtual HRESULT __stdcall raw_CopyToClipboard ( ) = 0;
      virtual HRESULT __stdcall raw_SourceDimensions (
        /*[out]*/ SAFEARRAY * * ppDimensions ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall put_SavedSettings (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_IncludeDimensionsInView (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_IncludeDimensionsInView (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall raw_SetOrigin (
        /*[in]*/ double x,
        /*[in]*/ double y ) = 0;
      virtual HRESULT __stdcall raw_GetOrigin (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall raw_GetListOfSavedSettings (
        /*[out]*/ long * NumSavedSettings,
        /*[in,out]*/ SAFEARRAY * * ListOfSavedSettings ) = 0;
      virtual HRESULT __stdcall get_IsUpToDate (
        /*[out,retval]*/ VARIANT_BOOL * UpToDate ) = 0;
      virtual HRESULT __stdcall raw_ConvertToTable ( ) = 0;
      virtual HRESULT __stdcall get_Cell (
        /*[in]*/ VARIANT RowIndex,
        /*[in]*/ VARIANT ColumnIndex,
        /*[out,retval]*/ struct TableCell * * ppCell ) = 0;
      virtual HRESULT __stdcall get_ColumnHeaderPosition (
        /*[out,retval]*/ enum TitlePosition * ColumnHeaderPosition ) = 0;
      virtual HRESULT __stdcall put_ColumnHeaderPosition (
        /*[in]*/ enum TitlePosition ColumnHeaderPosition ) = 0;
      virtual HRESULT __stdcall get_Columns (
        /*[out,retval]*/ struct TableColumns * * Columns ) = 0;
      virtual HRESULT __stdcall get_Margin (
        /*[out,retval]*/ double * Margin ) = 0;
      virtual HRESULT __stdcall put_Margin (
        /*[in]*/ double Margin ) = 0;
      virtual HRESULT __stdcall get_MaximumRows (
        /*[out,retval]*/ long * MaximumRows ) = 0;
      virtual HRESULT __stdcall put_MaximumRows (
        /*[in]*/ long MaximumRows ) = 0;
      virtual HRESULT __stdcall get_PageGap (
        /*[out,retval]*/ double * PageGap ) = 0;
      virtual HRESULT __stdcall put_PageGap (
        /*[in]*/ double PageGap ) = 0;
      virtual HRESULT __stdcall get_ReverseDisplayOrder (
        /*[out,retval]*/ VARIANT_BOOL * ReverseDisplayOrder ) = 0;
      virtual HRESULT __stdcall put_ReverseDisplayOrder (
        /*[in]*/ VARIANT_BOOL ReverseDisplayOrder ) = 0;
      virtual HRESULT __stdcall get_Rows (
        /*[out,retval]*/ struct TableRows * * Rows ) = 0;
      virtual HRESULT __stdcall get_ShowColumnHeader (
        /*[out,retval]*/ VARIANT_BOOL * ShowColumnHeader ) = 0;
      virtual HRESULT __stdcall put_ShowColumnHeader (
        /*[in]*/ VARIANT_BOOL ShowColumnHeader ) = 0;
      virtual HRESULT __stdcall get_TableStyle (
        /*[out,retval]*/ BSTR * TableStyle ) = 0;
      virtual HRESULT __stdcall put_TableStyle (
        /*[in]*/ BSTR TableStyle ) = 0;
      virtual HRESULT __stdcall get_Titles (
        /*[out,retval]*/ struct TableTitles * * Titles ) = 0;
      virtual HRESULT __stdcall get_AnchorPoint (
        /*[out,retval]*/ enum TableAnchorPoint * AnchorPoint ) = 0;
      virtual HRESULT __stdcall put_AnchorPoint (
        /*[in]*/ enum TableAnchorPoint AnchorPoint ) = 0;
      virtual HRESULT __stdcall get_Pages (
        /*[out,retval]*/ struct TablePages * * Rows ) = 0;
      virtual HRESULT __stdcall get_HeaderFixedRowHeight (
        /*[out,retval]*/ double * HeaderFixedRowHeight ) = 0;
      virtual HRESULT __stdcall put_HeaderFixedRowHeight (
        /*[in]*/ double HeaderFixedRowHeight ) = 0;
      virtual HRESULT __stdcall get_DataFixedRowHeight (
        /*[out,retval]*/ double * DataFixedRowHeight ) = 0;
      virtual HRESULT __stdcall put_DataFixedRowHeight (
        /*[in]*/ double DataFixedRowHeight ) = 0;
      virtual HRESULT __stdcall get_MaximumHeight (
        /*[out,retval]*/ double * MaximumHeight ) = 0;
      virtual HRESULT __stdcall put_MaximumHeight (
        /*[in]*/ double MaximumHeight ) = 0;
      virtual HRESULT __stdcall get_NumberOfHeaderRows (
        /*[out,retval]*/ long * NumberOfHeaderRows ) = 0;
      virtual HRESULT __stdcall put_NumberOfHeaderRows (
        /*[in]*/ long NumberOfHeaderRows ) = 0;
      virtual HRESULT __stdcall get_MaximumRowsFirstPage (
        /*[out,retval]*/ long * MaximumRowsFirstPage ) = 0;
      virtual HRESULT __stdcall put_MaximumRowsFirstPage (
        /*[in]*/ long MaximumRowsFirstPage ) = 0;
      virtual HRESULT __stdcall get_MaximumRowsAdditionalPages (
        /*[out,retval]*/ long * MaximumRowsAdditionalPages ) = 0;
      virtual HRESULT __stdcall put_MaximumRowsAdditionalPages (
        /*[in]*/ long MaximumRowsAdditionalPages ) = 0;
      virtual HRESULT __stdcall get_MaximumHeightFirstPage (
        /*[out,retval]*/ double * MaximumHeightFirstPage ) = 0;
      virtual HRESULT __stdcall put_MaximumHeightFirstPage (
        /*[in]*/ double MaximumHeightFirstPage ) = 0;
      virtual HRESULT __stdcall get_MaximumHeightAdditionalPages (
        /*[out,retval]*/ double * MaximumHeightAdditionalPages ) = 0;
      virtual HRESULT __stdcall put_MaximumHeightAdditionalPages (
        /*[in]*/ double MaximumHeightAdditionalPages ) = 0;
      virtual HRESULT __stdcall get_CreateNewSheetsForTable (
        /*[out,retval]*/ VARIANT_BOOL * CreateNewSheetsForTable ) = 0;
      virtual HRESULT __stdcall put_CreateNewSheetsForTable (
        /*[in]*/ VARIANT_BOOL CreateNewSheetsForTable ) = 0;
      virtual HRESULT __stdcall get_FirstSheetBackgroundName (
        /*[out,retval]*/ BSTR * FirstSheetBackgroundName ) = 0;
      virtual HRESULT __stdcall put_FirstSheetBackgroundName (
        /*[in]*/ BSTR FirstSheetBackgroundName ) = 0;
      virtual HRESULT __stdcall get_AdditionalSheetsBackgroundName (
        /*[out,retval]*/ BSTR * AdditionalSheetsBackgroundName ) = 0;
      virtual HRESULT __stdcall put_AdditionalSheetsBackgroundName (
        /*[in]*/ BSTR AdditionalSheetsBackgroundName ) = 0;
      virtual HRESULT __stdcall get_ShowSheetBackground (
        /*[out,retval]*/ VARIANT_BOOL * ShowSheetBackground ) = 0;
      virtual HRESULT __stdcall put_ShowSheetBackground (
        /*[in]*/ VARIANT_BOOL ShowSheetBackground ) = 0;
      virtual HRESULT __stdcall get_MaintainSheetsWithTableSize (
        /*[out,retval]*/ VARIANT_BOOL * MaintainSheetsWithTableSize ) = 0;
      virtual HRESULT __stdcall put_MaintainSheetsWithTableSize (
        /*[in]*/ VARIANT_BOOL MaintainSheetsWithTableSize ) = 0;
      virtual HRESULT __stdcall get_EnableGroups (
        /*[out,retval]*/ VARIANT_BOOL * EnableGroups ) = 0;
      virtual HRESULT __stdcall put_EnableGroups (
        /*[in]*/ VARIANT_BOOL EnableGroups ) = 0;
      virtual HRESULT __stdcall get_Groups (
        /*[out,retval]*/ struct TableGroups * * Groups ) = 0;
      virtual HRESULT __stdcall get_WrapDataCellsToNewRow (
        /*[out,retval]*/ VARIANT_BOOL * WrapDataCellsToNewRow ) = 0;
      virtual HRESULT __stdcall put_WrapDataCellsToNewRow (
        /*[in]*/ VARIANT_BOOL WrapDataCellsToNewRow ) = 0;
      virtual HRESULT __stdcall get_FillEndOfTableWithBlankRows (
        /*[out,retval]*/ VARIANT_BOOL * FillEndOfTableWithBlankRows ) = 0;
      virtual HRESULT __stdcall put_FillEndOfTableWithBlankRows (
        /*[in]*/ VARIANT_BOOL FillEndOfTableWithBlankRows ) = 0;
      virtual HRESULT __stdcall get_GroupByColumn (
        /*[out,retval]*/ long * ColumnIndex ) = 0;
      virtual HRESULT __stdcall put_GroupByColumn (
        /*[in]*/ long ColumnIndex ) = 0;
      virtual HRESULT __stdcall get_TitleFixedRowHeight (
        /*[out,retval]*/ double * TitleFixedRowHeight ) = 0;
      virtual HRESULT __stdcall put_TitleFixedRowHeight (
        /*[in]*/ double TitleFixedRowHeight ) = 0;
      virtual HRESULT __stdcall get_MarginHorizontal (
        /*[out,retval]*/ double * MarginHorizontal ) = 0;
      virtual HRESULT __stdcall put_MarginHorizontal (
        /*[in]*/ double MarginHorizontal ) = 0;
      virtual HRESULT __stdcall get_MarginVertical (
        /*[out,retval]*/ double * MarginVertical ) = 0;
      virtual HRESULT __stdcall put_MarginVertical (
        /*[in]*/ double MarginVertical ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
};

struct __declspec(uuid("7a2ae9ed-5659-4383-9369-a694b90016ae"))
HoleTables2 : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    HoleTable2Ptr Item (
        const _variant_t & Index );
    HoleTable2Ptr Add (
        _bstr_t SavedSettings,
        enum HoleTableType TableType );
    IDispatchPtr GetParent ( );
};

struct __declspec(uuid("b88c5970-d797-479b-a8b7-584be089f187"))
HoleTable2 : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetIsUpToDate))
    VARIANT_BOOL IsUpToDate;
    __declspec(property(get=GetAnchorPoint,put=PutAnchorPoint))
    enum TableAnchorPoint AnchorPoint;
    __declspec(property(get=GetCell))
    TableCellPtr Cell[][];
    __declspec(property(get=GetColumnHeaderPosition,put=PutColumnHeaderPosition))
    enum TitlePosition ColumnHeaderPosition;
    __declspec(property(get=GetColumns))
    TableColumnsPtr Columns;
    __declspec(property(get=GetDataFixedRowHeight,put=PutDataFixedRowHeight))
    double DataFixedRowHeight;
    __declspec(property(get=GetHeaderFixedRowHeight,put=PutHeaderFixedRowHeight))
    double HeaderFixedRowHeight;
    __declspec(property(get=GetMargin,put=PutMargin))
    double Margin;
    __declspec(property(get=GetMaximumHeight,put=PutMaximumHeight))
    double MaximumHeight;
    __declspec(property(get=GetMaximumRows,put=PutMaximumRows))
    long MaximumRows;
    __declspec(property(get=GetPageGap,put=PutPageGap))
    double PageGap;
    __declspec(property(get=GetPages))
    TablePagesPtr Pages;
    __declspec(property(get=GetReverseDisplayOrder,put=PutReverseDisplayOrder))
    VARIANT_BOOL ReverseDisplayOrder;
    __declspec(property(get=GetRows))
    TableRowsPtr Rows;
    __declspec(property(get=GetShowColumnHeader,put=PutShowColumnHeader))
    VARIANT_BOOL ShowColumnHeader;
    __declspec(property(get=GetTableStyle,put=PutTableStyle))
    _bstr_t TableStyle;
    __declspec(property(get=GetTitles))
    TableTitlesPtr Titles;
    __declspec(property(get=GetNumberOfHeaderRows,put=PutNumberOfHeaderRows))
    long NumberOfHeaderRows;
    __declspec(property(get=GetMaximumRowsFirstPage,put=PutMaximumRowsFirstPage))
    long MaximumRowsFirstPage;
    __declspec(property(get=GetMaximumRowsAdditionalPages,put=PutMaximumRowsAdditionalPages))
    long MaximumRowsAdditionalPages;
    __declspec(property(get=GetMaximumHeightFirstPage,put=PutMaximumHeightFirstPage))
    double MaximumHeightFirstPage;
    __declspec(property(get=GetMaximumHeightAdditionalPages,put=PutMaximumHeightAdditionalPages))
    double MaximumHeightAdditionalPages;
    __declspec(property(get=GetCreateNewSheetsForTable,put=PutCreateNewSheetsForTable))
    VARIANT_BOOL CreateNewSheetsForTable;
    __declspec(property(get=GetFirstSheetBackgroundName,put=PutFirstSheetBackgroundName))
    _bstr_t FirstSheetBackgroundName;
    __declspec(property(get=GetAdditionalSheetsBackgroundName,put=PutAdditionalSheetsBackgroundName))
    _bstr_t AdditionalSheetsBackgroundName;
    __declspec(property(get=GetShowSheetBackground,put=PutShowSheetBackground))
    VARIANT_BOOL ShowSheetBackground;
    __declspec(property(get=GetMaintainSheetsWithTableSize,put=PutMaintainSheetsWithTableSize))
    VARIANT_BOOL MaintainSheetsWithTableSize;
    __declspec(property(get=GetEnableGroups,put=PutEnableGroups))
    VARIANT_BOOL EnableGroups;
    __declspec(property(get=GetGroups))
    TableGroupsPtr Groups;
    __declspec(property(get=GetWrapDataCellsToNewRow,put=PutWrapDataCellsToNewRow))
    VARIANT_BOOL WrapDataCellsToNewRow;
    __declspec(property(get=GetFillEndOfTableWithBlankRows,put=PutFillEndOfTableWithBlankRows))
    VARIANT_BOOL FillEndOfTableWithBlankRows;
    __declspec(property(get=GetGroupByColumn,put=PutGroupByColumn))
    long GroupByColumn;
    __declspec(property(get=GetMarginHorizontal,put=PutMarginHorizontal))
    double MarginHorizontal;
    __declspec(property(get=GetMarginVertical,put=PutMarginVertical))
    double MarginVertical;
    __declspec(property(get=GetListByOrigin,put=PutListByOrigin))
    VARIANT_BOOL ListByOrigin;
    __declspec(property(get=GetListEachHole,put=PutListEachHole))
    VARIANT_BOOL ListEachHole;
    __declspec(property(get=GetListEachHoleSize,put=PutListEachHoleSize))
    VARIANT_BOOL ListEachHoleSize;
    __declspec(property(get=GetShowOriginOrGroupName,put=PutShowOriginOrGroupName))
    VARIANT_BOOL ShowOriginOrGroupName;
    __declspec(property(get=GetRenumberOnUpdate,put=PutRenumberOnUpdate))
    VARIANT_BOOL RenumberOnUpdate;
    __declspec(property(get=GetKeepDeletedHoles,put=PutKeepDeletedHoles))
    VARIANT_BOOL KeepDeletedHoles;
    __declspec(property(get=GetShowIndexOnBlankRows,put=PutShowIndexOnBlankRows))
    VARIANT_BOOL ShowIndexOnBlankRows;
    __declspec(property(get=GetCenterMark,put=PutCenterMark))
    VARIANT_BOOL CenterMark;
    __declspec(property(get=GetCenterMarkProjectionLines,put=PutCenterMarkProjectionLines))
    VARIANT_BOOL CenterMarkProjectionLines;
    __declspec(property(get=GetShowAnnotation,put=PutShowAnnotation))
    VARIANT_BOOL ShowAnnotation;
    __declspec(property(get=GetAnnotationPosition,put=PutAnnotationPosition))
    enum HoleTableAnnotPosition AnnotationPosition;
    __declspec(property(get=GetAnnotationOffset,put=PutAnnotationOffset))
    double AnnotationOffset;
    __declspec(property(get=GetAnnotationDelimeterType,put=PutAnnotationDelimeterType))
    enum HoleTableDelimiterType AnnotationDelimeterType;
    __declspec(property(get=GetLeader,put=PutLeader))
    VARIANT_BOOL Leader;
    __declspec(property(get=GetBreakLine,put=PutBreakLine))
    VARIANT_BOOL BreakLine;
    __declspec(property(get=GetOriginCount))
    unsigned long OriginCount;
    __declspec(property(get=GetSmartDepthHoleThru,put=PutSmartDepthHoleThru))
    _bstr_t SmartDepthHoleThru;
    __declspec(property(get=GetSmartDepthHoleFinite,put=PutSmartDepthHoleFinite))
    _bstr_t SmartDepthHoleFinite;
    __declspec(property(get=GetSmartDepthThreadThru,put=PutSmartDepthThreadThru))
    _bstr_t SmartDepthThreadThru;
    __declspec(property(get=GetSmartDepthThreadFinite,put=PutSmartDepthThreadFinite))
    _bstr_t SmartDepthThreadFinite;
    __declspec(property(get=GetPrimaryLinearUnits,put=PutPrimaryLinearUnits))
    enum HoleTable2PrimaryLinearUnit PrimaryLinearUnits;
    __declspec(property(get=GetPrimaryLinearDecimalRoundOff,put=PutPrimaryLinearDecimalRoundOff))
    enum HoleTable2DecimalRoundOffTypeConstants PrimaryLinearDecimalRoundOff;
    __declspec(property(get=GetPrimaryDelimiter,put=PutPrimaryDelimiter))
    enum HoleTableDelimiterType PrimaryDelimiter;
    __declspec(property(get=GetPrimaryAngularUnits,put=PutPrimaryAngularUnits))
    enum HoleTable2AngularUnit PrimaryAngularUnits;
    __declspec(property(get=GetPrimaryAngularDMSRoundOff,put=PutPrimaryAngularDMSRoundOff))
    enum HoleTable2DMSRoundOffTypeConstants PrimaryAngularDMSRoundOff;
    __declspec(property(get=GetPrimaryAngularDecimalRoundOff,put=PutPrimaryAngularDecimalRoundOff))
    enum HoleTable2DecimalRoundOffTypeConstants PrimaryAngularDecimalRoundOff;
    __declspec(property(get=GetPrimaryLeadingZeros,put=PutPrimaryLeadingZeros))
    VARIANT_BOOL PrimaryLeadingZeros;
    __declspec(property(get=GetPrimaryTrailingZeros,put=PutPrimaryTrailingZeros))
    VARIANT_BOOL PrimaryTrailingZeros;
    __declspec(property(get=GetHoleTableType))
    enum HoleTableType _HoleTableType;
    __declspec(property(get=GetShowHoleTableOrigin,put=PutShowHoleTableOrigin))
    VARIANT_BOOL ShowHoleTableOrigin;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetTitleFixedRowHeight,put=PutTitleFixedRowHeight))
    double TitleFixedRowHeight;
    __declspec(property(put=PutSavedSettings))
    _bstr_t SavedSettings;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    HRESULT AddNewXYorigin (
        IUnknown * pElement );
    HRESULT AddNewXYoriginEx (
        IUnknown * pElement,
        enum KeypointIndexConstants KeyPointIndex );
    HRESULT AddHole (
        IUnknown * pElement,
        const _variant_t & Index );
    HRESULT RemoveXYorigin (
        const _variant_t & Index );
    HRESULT RemoveHole (
        IUnknown * pElement );
    HRESULT AttachDrawingView (
        struct DrawingView * DrawingView );
    unsigned long GetOriginCount ( );
    HRESULT GetHoles (
        const _variant_t & Index,
        SAFEARRAY * * ppHoles );
    HRESULT Update ( );
    HRESULT CopyToClipboard ( );
    HRESULT Delete ( );
    void PutSavedSettings (
        _bstr_t _arg1 );
    IDispatchPtr GetParent ( );
    HRESULT SetOrigin (
        double x,
        double y );
    HRESULT GetOrigin (
        double * x,
        double * y );
    HRESULT GetListOfSavedSettings (
        long * NumSavedSettings,
        SAFEARRAY * * ListOfSavedSettings );
    VARIANT_BOOL GetIsUpToDate ( );
    HRESULT ConvertToTable ( );
    TableCellPtr GetCell (
        const _variant_t & RowIndex,
        const _variant_t & ColumnIndex );
    enum TitlePosition GetColumnHeaderPosition ( );
    void PutColumnHeaderPosition (
        enum TitlePosition _arg1 );
    TableColumnsPtr GetColumns ( );
    double GetMargin ( );
    void PutMargin (
        double _arg1 );
    long GetMaximumRows ( );
    void PutMaximumRows (
        long _arg1 );
    double GetPageGap ( );
    void PutPageGap (
        double _arg1 );
    VARIANT_BOOL GetReverseDisplayOrder ( );
    void PutReverseDisplayOrder (
        VARIANT_BOOL _arg1 );
    TableRowsPtr GetRows ( );
    VARIANT_BOOL GetShowColumnHeader ( );
    void PutShowColumnHeader (
        VARIANT_BOOL _arg1 );
    _bstr_t GetTableStyle ( );
    void PutTableStyle (
        _bstr_t _arg1 );
    TableTitlesPtr GetTitles ( );
    enum TableAnchorPoint GetAnchorPoint ( );
    void PutAnchorPoint (
        enum TableAnchorPoint _arg1 );
    TablePagesPtr GetPages ( );
    double GetHeaderFixedRowHeight ( );
    void PutHeaderFixedRowHeight (
        double _arg1 );
    double GetDataFixedRowHeight ( );
    void PutDataFixedRowHeight (
        double _arg1 );
    double GetMaximumHeight ( );
    void PutMaximumHeight (
        double _arg1 );
    long GetNumberOfHeaderRows ( );
    void PutNumberOfHeaderRows (
        long _arg1 );
    long GetMaximumRowsFirstPage ( );
    void PutMaximumRowsFirstPage (
        long _arg1 );
    long GetMaximumRowsAdditionalPages ( );
    void PutMaximumRowsAdditionalPages (
        long _arg1 );
    double GetMaximumHeightFirstPage ( );
    void PutMaximumHeightFirstPage (
        double _arg1 );
    double GetMaximumHeightAdditionalPages ( );
    void PutMaximumHeightAdditionalPages (
        double _arg1 );
    VARIANT_BOOL GetCreateNewSheetsForTable ( );
    void PutCreateNewSheetsForTable (
        VARIANT_BOOL _arg1 );
    _bstr_t GetFirstSheetBackgroundName ( );
    void PutFirstSheetBackgroundName (
        _bstr_t _arg1 );
    _bstr_t GetAdditionalSheetsBackgroundName ( );
    void PutAdditionalSheetsBackgroundName (
        _bstr_t _arg1 );
    VARIANT_BOOL GetShowSheetBackground ( );
    void PutShowSheetBackground (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetMaintainSheetsWithTableSize ( );
    void PutMaintainSheetsWithTableSize (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetEnableGroups ( );
    void PutEnableGroups (
        VARIANT_BOOL _arg1 );
    TableGroupsPtr GetGroups ( );
    VARIANT_BOOL GetWrapDataCellsToNewRow ( );
    void PutWrapDataCellsToNewRow (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetFillEndOfTableWithBlankRows ( );
    void PutFillEndOfTableWithBlankRows (
        VARIANT_BOOL _arg1 );
    long GetGroupByColumn ( );
    void PutGroupByColumn (
        long _arg1 );
    double GetTitleFixedRowHeight ( );
    void PutTitleFixedRowHeight (
        double _arg1 );
    double GetMarginHorizontal ( );
    void PutMarginHorizontal (
        double _arg1 );
    double GetMarginVertical ( );
    void PutMarginVertical (
        double _arg1 );
    VARIANT_BOOL GetListByOrigin ( );
    void PutListByOrigin (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetListEachHole ( );
    void PutListEachHole (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetListEachHoleSize ( );
    void PutListEachHoleSize (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetShowOriginOrGroupName ( );
    void PutShowOriginOrGroupName (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetRenumberOnUpdate ( );
    void PutRenumberOnUpdate (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetKeepDeletedHoles ( );
    void PutKeepDeletedHoles (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetShowIndexOnBlankRows ( );
    void PutShowIndexOnBlankRows (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetCenterMark ( );
    void PutCenterMark (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetCenterMarkProjectionLines ( );
    void PutCenterMarkProjectionLines (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetShowAnnotation ( );
    void PutShowAnnotation (
        VARIANT_BOOL _arg1 );
    enum HoleTableAnnotPosition GetAnnotationPosition ( );
    void PutAnnotationPosition (
        enum HoleTableAnnotPosition _arg1 );
    double GetAnnotationOffset ( );
    void PutAnnotationOffset (
        double _arg1 );
    enum HoleTableDelimiterType GetAnnotationDelimeterType ( );
    void PutAnnotationDelimeterType (
        enum HoleTableDelimiterType _arg1 );
    VARIANT_BOOL GetLeader ( );
    void PutLeader (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetBreakLine ( );
    void PutBreakLine (
        VARIANT_BOOL _arg1 );
    HRESULT GetHoleTableCalloutText (
        enum HoleTableCalloutType calloutType,
        enum HTHoleTypeConstants holeType,
        BSTR * pCalloutText );
    HRESULT SetHoleTableCalloutText (
        enum HoleTableCalloutType calloutType,
        enum HTHoleTypeConstants holeType,
        _bstr_t CalloutText );
    _bstr_t GetSmartDepthHoleThru ( );
    void PutSmartDepthHoleThru (
        _bstr_t _arg1 );
    _bstr_t GetSmartDepthHoleFinite ( );
    void PutSmartDepthHoleFinite (
        _bstr_t _arg1 );
    _bstr_t GetSmartDepthThreadThru ( );
    void PutSmartDepthThreadThru (
        _bstr_t _arg1 );
    _bstr_t GetSmartDepthThreadFinite ( );
    void PutSmartDepthThreadFinite (
        _bstr_t _arg1 );
    enum HoleTable2PrimaryLinearUnit GetPrimaryLinearUnits ( );
    void PutPrimaryLinearUnits (
        enum HoleTable2PrimaryLinearUnit _arg1 );
    enum HoleTable2DecimalRoundOffTypeConstants GetPrimaryLinearDecimalRoundOff ( );
    void PutPrimaryLinearDecimalRoundOff (
        enum HoleTable2DecimalRoundOffTypeConstants _arg1 );
    enum HoleTableDelimiterType GetPrimaryDelimiter ( );
    void PutPrimaryDelimiter (
        enum HoleTableDelimiterType _arg1 );
    enum HoleTable2AngularUnit GetPrimaryAngularUnits ( );
    void PutPrimaryAngularUnits (
        enum HoleTable2AngularUnit _arg1 );
    enum HoleTable2DMSRoundOffTypeConstants GetPrimaryAngularDMSRoundOff ( );
    void PutPrimaryAngularDMSRoundOff (
        enum HoleTable2DMSRoundOffTypeConstants _arg1 );
    enum HoleTable2DecimalRoundOffTypeConstants GetPrimaryAngularDecimalRoundOff ( );
    void PutPrimaryAngularDecimalRoundOff (
        enum HoleTable2DecimalRoundOffTypeConstants _arg1 );
    VARIANT_BOOL GetPrimaryLeadingZeros ( );
    void PutPrimaryLeadingZeros (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetPrimaryTrailingZeros ( );
    void PutPrimaryTrailingZeros (
        VARIANT_BOOL _arg1 );
    enum HoleTableType GetHoleTableType ( );
    HRESULT GetXYorigin (
        const _variant_t & Index,
        IUnknown * * pElement,
        enum KeypointIndexConstants * KeyPointIndex );
    VARIANT_BOOL GetShowHoleTableOrigin ( );
    void PutShowHoleTableOrigin (
        VARIANT_BOOL _arg1 );
    _bstr_t GetName ( );
};

enum HoleTableAnnotPosition
{
    igAnnotPosTopLeft = 0,
    igAnnotPosTopRight = 1,
    igAnnotPosBottomLeft = 2,
    igAnnotPosBottomRight = 3
};

enum HoleTableDelimiterType
{
    igDelimiterTypeNone = 0,
    igDelimiterTypeDot = 1,
    igDelimiterTypeComma = 2,
    igDelimiterTypeSpace = 3
};

enum HoleTableCalloutType
{
    igHoleCallout1 = 1,
    igHoleCallout2 = 2,
    igHoleCallout3 = 3,
    igHoleCallout4 = 4
};

enum HoleTable2PrimaryLinearUnit
{
    igHoleTable2LinearMM = 0,
    igHoleTable2LinearInches = 1
};

enum HoleTable2DecimalRoundOffTypeConstants
{
    igHoleTable2Decimal1 = 0,
    igHoleTable2Decimal_1 = 1,
    igHoleTable2Decimal_2 = 2,
    igHoleTable2Decimal_3 = 3,
    igHoleTable2Decimal_4 = 4,
    igHoleTable2Decimal_5 = 5,
    igHoleTable2Decimal_6 = 6,
    igHoleTable2Decimal_7 = 7
};

enum HoleTable2AngularUnit
{
    igHoleTable2AngularDegrees = 0,
    igHoleTable2AngularDegMinSec = 1,
    igHoleTable2AngularRadians = 2
};

enum HoleTable2DMSRoundOffTypeConstants
{
    igHoleTable2Angular10Degree = 1,
    igHoleTable2Angular1Degree = 2,
    igHoleTable2Angular10Minute = 3,
    igHoleTable2Angular1Minute = 4,
    igHoleTable2Angular10Second = 5,
    igHoleTable2Angular1Second = 6
};

enum HoleTableType
{
    igByDrawingView = 0,
    igByUserSelection = 1,
    igByFeature = 2
};

struct __declspec(uuid("8275e9d2-46c4-4c37-aa93-888c2c819295"))
_IHoleTables2Auto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    HoleTable2Ptr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    HoleTable2Ptr Add (
        _bstr_t SavedSettings,
        enum HoleTableType TableType );
    IDispatchPtr GetParent ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct HoleTable2 * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Unknown ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR SavedSettings,
        /*[in]*/ enum HoleTableType TableType,
        /*[out,retval]*/ struct HoleTable2 * * ppObj ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
};

struct __declspec(uuid("5371e9c4-52d5-473f-89a1-3db5d315318d"))
_IHoleTable2Auto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetIsUpToDate))
    VARIANT_BOOL IsUpToDate;
    __declspec(property(get=GetAnchorPoint,put=PutAnchorPoint))
    enum TableAnchorPoint AnchorPoint;
    __declspec(property(get=GetCell))
    TableCellPtr Cell[][];
    __declspec(property(get=GetColumnHeaderPosition,put=PutColumnHeaderPosition))
    enum TitlePosition ColumnHeaderPosition;
    __declspec(property(get=GetColumns))
    TableColumnsPtr Columns;
    __declspec(property(get=GetDataFixedRowHeight,put=PutDataFixedRowHeight))
    double DataFixedRowHeight;
    __declspec(property(get=GetHeaderFixedRowHeight,put=PutHeaderFixedRowHeight))
    double HeaderFixedRowHeight;
    __declspec(property(get=GetMargin,put=PutMargin))
    double Margin;
    __declspec(property(get=GetMaximumHeight,put=PutMaximumHeight))
    double MaximumHeight;
    __declspec(property(get=GetMaximumRows,put=PutMaximumRows))
    long MaximumRows;
    __declspec(property(get=GetPageGap,put=PutPageGap))
    double PageGap;
    __declspec(property(get=GetPages))
    TablePagesPtr Pages;
    __declspec(property(get=GetReverseDisplayOrder,put=PutReverseDisplayOrder))
    VARIANT_BOOL ReverseDisplayOrder;
    __declspec(property(get=GetRows))
    TableRowsPtr Rows;
    __declspec(property(get=GetShowColumnHeader,put=PutShowColumnHeader))
    VARIANT_BOOL ShowColumnHeader;
    __declspec(property(get=GetTableStyle,put=PutTableStyle))
    _bstr_t TableStyle;
    __declspec(property(get=GetTitles))
    TableTitlesPtr Titles;
    __declspec(property(get=GetNumberOfHeaderRows,put=PutNumberOfHeaderRows))
    long NumberOfHeaderRows;
    __declspec(property(get=GetMaximumRowsFirstPage,put=PutMaximumRowsFirstPage))
    long MaximumRowsFirstPage;
    __declspec(property(get=GetMaximumRowsAdditionalPages,put=PutMaximumRowsAdditionalPages))
    long MaximumRowsAdditionalPages;
    __declspec(property(get=GetMaximumHeightFirstPage,put=PutMaximumHeightFirstPage))
    double MaximumHeightFirstPage;
    __declspec(property(get=GetMaximumHeightAdditionalPages,put=PutMaximumHeightAdditionalPages))
    double MaximumHeightAdditionalPages;
    __declspec(property(get=GetCreateNewSheetsForTable,put=PutCreateNewSheetsForTable))
    VARIANT_BOOL CreateNewSheetsForTable;
    __declspec(property(get=GetFirstSheetBackgroundName,put=PutFirstSheetBackgroundName))
    _bstr_t FirstSheetBackgroundName;
    __declspec(property(get=GetAdditionalSheetsBackgroundName,put=PutAdditionalSheetsBackgroundName))
    _bstr_t AdditionalSheetsBackgroundName;
    __declspec(property(get=GetShowSheetBackground,put=PutShowSheetBackground))
    VARIANT_BOOL ShowSheetBackground;
    __declspec(property(get=GetMaintainSheetsWithTableSize,put=PutMaintainSheetsWithTableSize))
    VARIANT_BOOL MaintainSheetsWithTableSize;
    __declspec(property(get=GetEnableGroups,put=PutEnableGroups))
    VARIANT_BOOL EnableGroups;
    __declspec(property(get=GetGroups))
    TableGroupsPtr Groups;
    __declspec(property(get=GetWrapDataCellsToNewRow,put=PutWrapDataCellsToNewRow))
    VARIANT_BOOL WrapDataCellsToNewRow;
    __declspec(property(get=GetFillEndOfTableWithBlankRows,put=PutFillEndOfTableWithBlankRows))
    VARIANT_BOOL FillEndOfTableWithBlankRows;
    __declspec(property(get=GetGroupByColumn,put=PutGroupByColumn))
    long GroupByColumn;
    __declspec(property(get=GetMarginHorizontal,put=PutMarginHorizontal))
    double MarginHorizontal;
    __declspec(property(get=GetMarginVertical,put=PutMarginVertical))
    double MarginVertical;
    __declspec(property(get=GetListByOrigin,put=PutListByOrigin))
    VARIANT_BOOL ListByOrigin;
    __declspec(property(get=GetListEachHole,put=PutListEachHole))
    VARIANT_BOOL ListEachHole;
    __declspec(property(get=GetListEachHoleSize,put=PutListEachHoleSize))
    VARIANT_BOOL ListEachHoleSize;
    __declspec(property(get=GetShowOriginOrGroupName,put=PutShowOriginOrGroupName))
    VARIANT_BOOL ShowOriginOrGroupName;
    __declspec(property(get=GetRenumberOnUpdate,put=PutRenumberOnUpdate))
    VARIANT_BOOL RenumberOnUpdate;
    __declspec(property(get=GetKeepDeletedHoles,put=PutKeepDeletedHoles))
    VARIANT_BOOL KeepDeletedHoles;
    __declspec(property(get=GetShowIndexOnBlankRows,put=PutShowIndexOnBlankRows))
    VARIANT_BOOL ShowIndexOnBlankRows;
    __declspec(property(get=GetCenterMark,put=PutCenterMark))
    VARIANT_BOOL CenterMark;
    __declspec(property(get=GetCenterMarkProjectionLines,put=PutCenterMarkProjectionLines))
    VARIANT_BOOL CenterMarkProjectionLines;
    __declspec(property(get=GetShowAnnotation,put=PutShowAnnotation))
    VARIANT_BOOL ShowAnnotation;
    __declspec(property(get=GetAnnotationPosition,put=PutAnnotationPosition))
    enum HoleTableAnnotPosition AnnotationPosition;
    __declspec(property(get=GetAnnotationOffset,put=PutAnnotationOffset))
    double AnnotationOffset;
    __declspec(property(get=GetAnnotationDelimeterType,put=PutAnnotationDelimeterType))
    enum HoleTableDelimiterType AnnotationDelimeterType;
    __declspec(property(get=GetLeader,put=PutLeader))
    VARIANT_BOOL Leader;
    __declspec(property(get=GetBreakLine,put=PutBreakLine))
    VARIANT_BOOL BreakLine;
    __declspec(property(get=GetOriginCount))
    unsigned long OriginCount;
    __declspec(property(get=GetSmartDepthHoleThru,put=PutSmartDepthHoleThru))
    _bstr_t SmartDepthHoleThru;
    __declspec(property(get=GetSmartDepthHoleFinite,put=PutSmartDepthHoleFinite))
    _bstr_t SmartDepthHoleFinite;
    __declspec(property(get=GetSmartDepthThreadThru,put=PutSmartDepthThreadThru))
    _bstr_t SmartDepthThreadThru;
    __declspec(property(get=GetSmartDepthThreadFinite,put=PutSmartDepthThreadFinite))
    _bstr_t SmartDepthThreadFinite;
    __declspec(property(get=GetPrimaryLinearUnits,put=PutPrimaryLinearUnits))
    enum HoleTable2PrimaryLinearUnit PrimaryLinearUnits;
    __declspec(property(get=GetPrimaryLinearDecimalRoundOff,put=PutPrimaryLinearDecimalRoundOff))
    enum HoleTable2DecimalRoundOffTypeConstants PrimaryLinearDecimalRoundOff;
    __declspec(property(get=GetPrimaryDelimiter,put=PutPrimaryDelimiter))
    enum HoleTableDelimiterType PrimaryDelimiter;
    __declspec(property(get=GetPrimaryAngularUnits,put=PutPrimaryAngularUnits))
    enum HoleTable2AngularUnit PrimaryAngularUnits;
    __declspec(property(get=GetPrimaryAngularDMSRoundOff,put=PutPrimaryAngularDMSRoundOff))
    enum HoleTable2DMSRoundOffTypeConstants PrimaryAngularDMSRoundOff;
    __declspec(property(get=GetPrimaryAngularDecimalRoundOff,put=PutPrimaryAngularDecimalRoundOff))
    enum HoleTable2DecimalRoundOffTypeConstants PrimaryAngularDecimalRoundOff;
    __declspec(property(get=GetPrimaryLeadingZeros,put=PutPrimaryLeadingZeros))
    VARIANT_BOOL PrimaryLeadingZeros;
    __declspec(property(get=GetPrimaryTrailingZeros,put=PutPrimaryTrailingZeros))
    VARIANT_BOOL PrimaryTrailingZeros;
    __declspec(property(get=GetHoleTableType))
    enum HoleTableType _HoleTableType;
    __declspec(property(get=GetShowHoleTableOrigin,put=PutShowHoleTableOrigin))
    VARIANT_BOOL ShowHoleTableOrigin;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetTitleFixedRowHeight,put=PutTitleFixedRowHeight))
    double TitleFixedRowHeight;
    __declspec(property(put=PutSavedSettings))
    _bstr_t SavedSettings;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    HRESULT AddNewXYorigin (
        IUnknown * pElement );
    HRESULT AddNewXYoriginEx (
        IUnknown * pElement,
        enum KeypointIndexConstants KeyPointIndex );
    HRESULT AddHole (
        IUnknown * pElement,
        const _variant_t & Index );
    HRESULT RemoveXYorigin (
        const _variant_t & Index );
    HRESULT RemoveHole (
        IUnknown * pElement );
    HRESULT AttachDrawingView (
        struct DrawingView * DrawingView );
    unsigned long GetOriginCount ( );
    HRESULT GetHoles (
        const _variant_t & Index,
        SAFEARRAY * * ppHoles );
    HRESULT Update ( );
    HRESULT CopyToClipboard ( );
    HRESULT Delete ( );
    void PutSavedSettings (
        _bstr_t _arg1 );
    IDispatchPtr GetParent ( );
    HRESULT SetOrigin (
        double x,
        double y );
    HRESULT GetOrigin (
        double * x,
        double * y );
    HRESULT GetListOfSavedSettings (
        long * NumSavedSettings,
        SAFEARRAY * * ListOfSavedSettings );
    VARIANT_BOOL GetIsUpToDate ( );
    HRESULT ConvertToTable ( );
    TableCellPtr GetCell (
        const _variant_t & RowIndex,
        const _variant_t & ColumnIndex );
    enum TitlePosition GetColumnHeaderPosition ( );
    void PutColumnHeaderPosition (
        enum TitlePosition ColumnHeaderPosition );
    TableColumnsPtr GetColumns ( );
    double GetMargin ( );
    void PutMargin (
        double Margin );
    long GetMaximumRows ( );
    void PutMaximumRows (
        long MaximumRows );
    double GetPageGap ( );
    void PutPageGap (
        double PageGap );
    VARIANT_BOOL GetReverseDisplayOrder ( );
    void PutReverseDisplayOrder (
        VARIANT_BOOL ReverseDisplayOrder );
    TableRowsPtr GetRows ( );
    VARIANT_BOOL GetShowColumnHeader ( );
    void PutShowColumnHeader (
        VARIANT_BOOL ShowColumnHeader );
    _bstr_t GetTableStyle ( );
    void PutTableStyle (
        _bstr_t TableStyle );
    TableTitlesPtr GetTitles ( );
    enum TableAnchorPoint GetAnchorPoint ( );
    void PutAnchorPoint (
        enum TableAnchorPoint AnchorPoint );
    TablePagesPtr GetPages ( );
    double GetHeaderFixedRowHeight ( );
    void PutHeaderFixedRowHeight (
        double HeaderFixedRowHeight );
    double GetDataFixedRowHeight ( );
    void PutDataFixedRowHeight (
        double DataFixedRowHeight );
    double GetMaximumHeight ( );
    void PutMaximumHeight (
        double MaximumHeight );
    long GetNumberOfHeaderRows ( );
    void PutNumberOfHeaderRows (
        long NumberOfHeaderRows );
    long GetMaximumRowsFirstPage ( );
    void PutMaximumRowsFirstPage (
        long MaximumRowsFirstPage );
    long GetMaximumRowsAdditionalPages ( );
    void PutMaximumRowsAdditionalPages (
        long MaximumRowsAdditionalPages );
    double GetMaximumHeightFirstPage ( );
    void PutMaximumHeightFirstPage (
        double MaximumHeightFirstPage );
    double GetMaximumHeightAdditionalPages ( );
    void PutMaximumHeightAdditionalPages (
        double MaximumHeightAdditionalPages );
    VARIANT_BOOL GetCreateNewSheetsForTable ( );
    void PutCreateNewSheetsForTable (
        VARIANT_BOOL CreateNewSheetsForTable );
    _bstr_t GetFirstSheetBackgroundName ( );
    void PutFirstSheetBackgroundName (
        _bstr_t FirstSheetBackgroundName );
    _bstr_t GetAdditionalSheetsBackgroundName ( );
    void PutAdditionalSheetsBackgroundName (
        _bstr_t AdditionalSheetsBackgroundName );
    VARIANT_BOOL GetShowSheetBackground ( );
    void PutShowSheetBackground (
        VARIANT_BOOL ShowSheetBackground );
    VARIANT_BOOL GetMaintainSheetsWithTableSize ( );
    void PutMaintainSheetsWithTableSize (
        VARIANT_BOOL MaintainSheetsWithTableSize );
    VARIANT_BOOL GetEnableGroups ( );
    void PutEnableGroups (
        VARIANT_BOOL EnableGroups );
    TableGroupsPtr GetGroups ( );
    VARIANT_BOOL GetWrapDataCellsToNewRow ( );
    void PutWrapDataCellsToNewRow (
        VARIANT_BOOL WrapDataCellsToNewRow );
    VARIANT_BOOL GetFillEndOfTableWithBlankRows ( );
    void PutFillEndOfTableWithBlankRows (
        VARIANT_BOOL FillEndOfTableWithBlankRows );
    long GetGroupByColumn ( );
    void PutGroupByColumn (
        long ColumnIndex );
    double GetTitleFixedRowHeight ( );
    void PutTitleFixedRowHeight (
        double TitleFixedRowHeight );
    double GetMarginHorizontal ( );
    void PutMarginHorizontal (
        double MarginHorizontal );
    double GetMarginVertical ( );
    void PutMarginVertical (
        double MarginVertical );
    VARIANT_BOOL GetListByOrigin ( );
    void PutListByOrigin (
        VARIANT_BOOL ListByOrigin );
    VARIANT_BOOL GetListEachHole ( );
    void PutListEachHole (
        VARIANT_BOOL ListEachHole );
    VARIANT_BOOL GetListEachHoleSize ( );
    void PutListEachHoleSize (
        VARIANT_BOOL ListEachHoleSize );
    VARIANT_BOOL GetShowOriginOrGroupName ( );
    void PutShowOriginOrGroupName (
        VARIANT_BOOL ShowOriginOrGroupName );
    VARIANT_BOOL GetRenumberOnUpdate ( );
    void PutRenumberOnUpdate (
        VARIANT_BOOL RenumberOnUpdate );
    VARIANT_BOOL GetKeepDeletedHoles ( );
    void PutKeepDeletedHoles (
        VARIANT_BOOL KeepDeletedHoles );
    VARIANT_BOOL GetShowIndexOnBlankRows ( );
    void PutShowIndexOnBlankRows (
        VARIANT_BOOL ShowIndexOnBlankRows );
    VARIANT_BOOL GetCenterMark ( );
    void PutCenterMark (
        VARIANT_BOOL CenterMark );
    VARIANT_BOOL GetCenterMarkProjectionLines ( );
    void PutCenterMarkProjectionLines (
        VARIANT_BOOL CenterMarkProjectionLines );
    VARIANT_BOOL GetShowAnnotation ( );
    void PutShowAnnotation (
        VARIANT_BOOL ShowAnnotation );
    enum HoleTableAnnotPosition GetAnnotationPosition ( );
    void PutAnnotationPosition (
        enum HoleTableAnnotPosition AnnotationPosition );
    double GetAnnotationOffset ( );
    void PutAnnotationOffset (
        double offset );
    enum HoleTableDelimiterType GetAnnotationDelimeterType ( );
    void PutAnnotationDelimeterType (
        enum HoleTableDelimiterType AnnotationDelimeterType );
    VARIANT_BOOL GetLeader ( );
    void PutLeader (
        VARIANT_BOOL Leader );
    VARIANT_BOOL GetBreakLine ( );
    void PutBreakLine (
        VARIANT_BOOL BreakLine );
    HRESULT GetHoleTableCalloutText (
        enum HoleTableCalloutType calloutType,
        enum HTHoleTypeConstants holeType,
        BSTR * pCalloutText );
    HRESULT SetHoleTableCalloutText (
        enum HoleTableCalloutType calloutType,
        enum HTHoleTypeConstants holeType,
        _bstr_t CalloutText );
    _bstr_t GetSmartDepthHoleThru ( );
    void PutSmartDepthHoleThru (
        _bstr_t HoleThru );
    _bstr_t GetSmartDepthHoleFinite ( );
    void PutSmartDepthHoleFinite (
        _bstr_t HoleFinite );
    _bstr_t GetSmartDepthThreadThru ( );
    void PutSmartDepthThreadThru (
        _bstr_t ThreadThru );
    _bstr_t GetSmartDepthThreadFinite ( );
    void PutSmartDepthThreadFinite (
        _bstr_t ThreadFinite );
    enum HoleTable2PrimaryLinearUnit GetPrimaryLinearUnits ( );
    void PutPrimaryLinearUnits (
        enum HoleTable2PrimaryLinearUnit val );
    enum HoleTable2DecimalRoundOffTypeConstants GetPrimaryLinearDecimalRoundOff ( );
    void PutPrimaryLinearDecimalRoundOff (
        enum HoleTable2DecimalRoundOffTypeConstants val );
    enum HoleTableDelimiterType GetPrimaryDelimiter ( );
    void PutPrimaryDelimiter (
        enum HoleTableDelimiterType val );
    enum HoleTable2AngularUnit GetPrimaryAngularUnits ( );
    void PutPrimaryAngularUnits (
        enum HoleTable2AngularUnit val );
    enum HoleTable2DMSRoundOffTypeConstants GetPrimaryAngularDMSRoundOff ( );
    void PutPrimaryAngularDMSRoundOff (
        enum HoleTable2DMSRoundOffTypeConstants val );
    enum HoleTable2DecimalRoundOffTypeConstants GetPrimaryAngularDecimalRoundOff ( );
    void PutPrimaryAngularDecimalRoundOff (
        enum HoleTable2DecimalRoundOffTypeConstants val );
    VARIANT_BOOL GetPrimaryLeadingZeros ( );
    void PutPrimaryLeadingZeros (
        VARIANT_BOOL val );
    VARIANT_BOOL GetPrimaryTrailingZeros ( );
    void PutPrimaryTrailingZeros (
        VARIANT_BOOL val );
    enum HoleTableType GetHoleTableType ( );
    HRESULT GetXYorigin (
        const _variant_t & Index,
        IUnknown * * pElement,
        enum KeypointIndexConstants * KeyPointIndex );
    VARIANT_BOOL GetShowHoleTableOrigin ( );
    void PutShowHoleTableOrigin (
        VARIANT_BOOL ShowHoleTableOrigin );
    _bstr_t GetName ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall raw_AddNewXYorigin (
        /*[in]*/ IUnknown * pElement ) = 0;
      virtual HRESULT __stdcall raw_AddNewXYoriginEx (
        /*[in]*/ IUnknown * pElement,
        /*[in]*/ enum KeypointIndexConstants KeyPointIndex ) = 0;
      virtual HRESULT __stdcall raw_AddHole (
        /*[in]*/ IUnknown * pElement,
        /*[in]*/ VARIANT Index ) = 0;
      virtual HRESULT __stdcall raw_RemoveXYorigin (
        /*[in]*/ VARIANT Index ) = 0;
      virtual HRESULT __stdcall raw_RemoveHole (
        /*[in]*/ IUnknown * pElement ) = 0;
      virtual HRESULT __stdcall raw_AttachDrawingView (
        /*[in]*/ struct DrawingView * DrawingView ) = 0;
      virtual HRESULT __stdcall get_OriginCount (
        /*[out,retval]*/ unsigned long * OriginCount ) = 0;
      virtual HRESULT __stdcall raw_GetHoles (
        /*[in]*/ VARIANT Index,
        /*[out]*/ SAFEARRAY * * ppHoles ) = 0;
      virtual HRESULT __stdcall raw_Update ( ) = 0;
      virtual HRESULT __stdcall raw_CopyToClipboard ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall put_SavedSettings (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_SetOrigin (
        /*[in]*/ double x,
        /*[in]*/ double y ) = 0;
      virtual HRESULT __stdcall raw_GetOrigin (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall raw_GetListOfSavedSettings (
        /*[out]*/ long * NumSavedSettings,
        /*[in,out]*/ SAFEARRAY * * ListOfSavedSettings ) = 0;
      virtual HRESULT __stdcall get_IsUpToDate (
        /*[out,retval]*/ VARIANT_BOOL * UpToDate ) = 0;
      virtual HRESULT __stdcall raw_ConvertToTable ( ) = 0;
      virtual HRESULT __stdcall get_Cell (
        /*[in]*/ VARIANT RowIndex,
        /*[in]*/ VARIANT ColumnIndex,
        /*[out,retval]*/ struct TableCell * * ppCell ) = 0;
      virtual HRESULT __stdcall get_ColumnHeaderPosition (
        /*[out,retval]*/ enum TitlePosition * ColumnHeaderPosition ) = 0;
      virtual HRESULT __stdcall put_ColumnHeaderPosition (
        /*[in]*/ enum TitlePosition ColumnHeaderPosition ) = 0;
      virtual HRESULT __stdcall get_Columns (
        /*[out,retval]*/ struct TableColumns * * Columns ) = 0;
      virtual HRESULT __stdcall get_Margin (
        /*[out,retval]*/ double * Margin ) = 0;
      virtual HRESULT __stdcall put_Margin (
        /*[in]*/ double Margin ) = 0;
      virtual HRESULT __stdcall get_MaximumRows (
        /*[out,retval]*/ long * MaximumRows ) = 0;
      virtual HRESULT __stdcall put_MaximumRows (
        /*[in]*/ long MaximumRows ) = 0;
      virtual HRESULT __stdcall get_PageGap (
        /*[out,retval]*/ double * PageGap ) = 0;
      virtual HRESULT __stdcall put_PageGap (
        /*[in]*/ double PageGap ) = 0;
      virtual HRESULT __stdcall get_ReverseDisplayOrder (
        /*[out,retval]*/ VARIANT_BOOL * ReverseDisplayOrder ) = 0;
      virtual HRESULT __stdcall put_ReverseDisplayOrder (
        /*[in]*/ VARIANT_BOOL ReverseDisplayOrder ) = 0;
      virtual HRESULT __stdcall get_Rows (
        /*[out,retval]*/ struct TableRows * * Rows ) = 0;
      virtual HRESULT __stdcall get_ShowColumnHeader (
        /*[out,retval]*/ VARIANT_BOOL * ShowColumnHeader ) = 0;
      virtual HRESULT __stdcall put_ShowColumnHeader (
        /*[in]*/ VARIANT_BOOL ShowColumnHeader ) = 0;
      virtual HRESULT __stdcall get_TableStyle (
        /*[out,retval]*/ BSTR * TableStyle ) = 0;
      virtual HRESULT __stdcall put_TableStyle (
        /*[in]*/ BSTR TableStyle ) = 0;
      virtual HRESULT __stdcall get_Titles (
        /*[out,retval]*/ struct TableTitles * * Titles ) = 0;
      virtual HRESULT __stdcall get_AnchorPoint (
        /*[out,retval]*/ enum TableAnchorPoint * AnchorPoint ) = 0;
      virtual HRESULT __stdcall put_AnchorPoint (
        /*[in]*/ enum TableAnchorPoint AnchorPoint ) = 0;
      virtual HRESULT __stdcall get_Pages (
        /*[out,retval]*/ struct TablePages * * Rows ) = 0;
      virtual HRESULT __stdcall get_HeaderFixedRowHeight (
        /*[out,retval]*/ double * HeaderFixedRowHeight ) = 0;
      virtual HRESULT __stdcall put_HeaderFixedRowHeight (
        /*[in]*/ double HeaderFixedRowHeight ) = 0;
      virtual HRESULT __stdcall get_DataFixedRowHeight (
        /*[out,retval]*/ double * DataFixedRowHeight ) = 0;
      virtual HRESULT __stdcall put_DataFixedRowHeight (
        /*[in]*/ double DataFixedRowHeight ) = 0;
      virtual HRESULT __stdcall get_MaximumHeight (
        /*[out,retval]*/ double * MaximumHeight ) = 0;
      virtual HRESULT __stdcall put_MaximumHeight (
        /*[in]*/ double MaximumHeight ) = 0;
      virtual HRESULT __stdcall get_NumberOfHeaderRows (
        /*[out,retval]*/ long * NumberOfHeaderRows ) = 0;
      virtual HRESULT __stdcall put_NumberOfHeaderRows (
        /*[in]*/ long NumberOfHeaderRows ) = 0;
      virtual HRESULT __stdcall get_MaximumRowsFirstPage (
        /*[out,retval]*/ long * MaximumRowsFirstPage ) = 0;
      virtual HRESULT __stdcall put_MaximumRowsFirstPage (
        /*[in]*/ long MaximumRowsFirstPage ) = 0;
      virtual HRESULT __stdcall get_MaximumRowsAdditionalPages (
        /*[out,retval]*/ long * MaximumRowsAdditionalPages ) = 0;
      virtual HRESULT __stdcall put_MaximumRowsAdditionalPages (
        /*[in]*/ long MaximumRowsAdditionalPages ) = 0;
      virtual HRESULT __stdcall get_MaximumHeightFirstPage (
        /*[out,retval]*/ double * MaximumHeightFirstPage ) = 0;
      virtual HRESULT __stdcall put_MaximumHeightFirstPage (
        /*[in]*/ double MaximumHeightFirstPage ) = 0;
      virtual HRESULT __stdcall get_MaximumHeightAdditionalPages (
        /*[out,retval]*/ double * MaximumHeightAdditionalPages ) = 0;
      virtual HRESULT __stdcall put_MaximumHeightAdditionalPages (
        /*[in]*/ double MaximumHeightAdditionalPages ) = 0;
      virtual HRESULT __stdcall get_CreateNewSheetsForTable (
        /*[out,retval]*/ VARIANT_BOOL * CreateNewSheetsForTable ) = 0;
      virtual HRESULT __stdcall put_CreateNewSheetsForTable (
        /*[in]*/ VARIANT_BOOL CreateNewSheetsForTable ) = 0;
      virtual HRESULT __stdcall get_FirstSheetBackgroundName (
        /*[out,retval]*/ BSTR * FirstSheetBackgroundName ) = 0;
      virtual HRESULT __stdcall put_FirstSheetBackgroundName (
        /*[in]*/ BSTR FirstSheetBackgroundName ) = 0;
      virtual HRESULT __stdcall get_AdditionalSheetsBackgroundName (
        /*[out,retval]*/ BSTR * AdditionalSheetsBackgroundName ) = 0;
      virtual HRESULT __stdcall put_AdditionalSheetsBackgroundName (
        /*[in]*/ BSTR AdditionalSheetsBackgroundName ) = 0;
      virtual HRESULT __stdcall get_ShowSheetBackground (
        /*[out,retval]*/ VARIANT_BOOL * ShowSheetBackground ) = 0;
      virtual HRESULT __stdcall put_ShowSheetBackground (
        /*[in]*/ VARIANT_BOOL ShowSheetBackground ) = 0;
      virtual HRESULT __stdcall get_MaintainSheetsWithTableSize (
        /*[out,retval]*/ VARIANT_BOOL * MaintainSheetsWithTableSize ) = 0;
      virtual HRESULT __stdcall put_MaintainSheetsWithTableSize (
        /*[in]*/ VARIANT_BOOL MaintainSheetsWithTableSize ) = 0;
      virtual HRESULT __stdcall get_EnableGroups (
        /*[out,retval]*/ VARIANT_BOOL * EnableGroups ) = 0;
      virtual HRESULT __stdcall put_EnableGroups (
        /*[in]*/ VARIANT_BOOL EnableGroups ) = 0;
      virtual HRESULT __stdcall get_Groups (
        /*[out,retval]*/ struct TableGroups * * Groups ) = 0;
      virtual HRESULT __stdcall get_WrapDataCellsToNewRow (
        /*[out,retval]*/ VARIANT_BOOL * WrapDataCellsToNewRow ) = 0;
      virtual HRESULT __stdcall put_WrapDataCellsToNewRow (
        /*[in]*/ VARIANT_BOOL WrapDataCellsToNewRow ) = 0;
      virtual HRESULT __stdcall get_FillEndOfTableWithBlankRows (
        /*[out,retval]*/ VARIANT_BOOL * FillEndOfTableWithBlankRows ) = 0;
      virtual HRESULT __stdcall put_FillEndOfTableWithBlankRows (
        /*[in]*/ VARIANT_BOOL FillEndOfTableWithBlankRows ) = 0;
      virtual HRESULT __stdcall get_GroupByColumn (
        /*[out,retval]*/ long * ColumnIndex ) = 0;
      virtual HRESULT __stdcall put_GroupByColumn (
        /*[in]*/ long ColumnIndex ) = 0;
      virtual HRESULT __stdcall get_TitleFixedRowHeight (
        /*[out,retval]*/ double * TitleFixedRowHeight ) = 0;
      virtual HRESULT __stdcall put_TitleFixedRowHeight (
        /*[in]*/ double TitleFixedRowHeight ) = 0;
      virtual HRESULT __stdcall get_MarginHorizontal (
        /*[out,retval]*/ double * MarginHorizontal ) = 0;
      virtual HRESULT __stdcall put_MarginHorizontal (
        /*[in]*/ double MarginHorizontal ) = 0;
      virtual HRESULT __stdcall get_MarginVertical (
        /*[out,retval]*/ double * MarginVertical ) = 0;
      virtual HRESULT __stdcall put_MarginVertical (
        /*[in]*/ double MarginVertical ) = 0;
      virtual HRESULT __stdcall get_ListByOrigin (
        /*[out,retval]*/ VARIANT_BOOL * ListByOrigin ) = 0;
      virtual HRESULT __stdcall put_ListByOrigin (
        /*[in]*/ VARIANT_BOOL ListByOrigin ) = 0;
      virtual HRESULT __stdcall get_ListEachHole (
        /*[out,retval]*/ VARIANT_BOOL * ListEachHole ) = 0;
      virtual HRESULT __stdcall put_ListEachHole (
        /*[in]*/ VARIANT_BOOL ListEachHole ) = 0;
      virtual HRESULT __stdcall get_ListEachHoleSize (
        /*[out,retval]*/ VARIANT_BOOL * ListEachHoleSize ) = 0;
      virtual HRESULT __stdcall put_ListEachHoleSize (
        /*[in]*/ VARIANT_BOOL ListEachHoleSize ) = 0;
      virtual HRESULT __stdcall get_ShowOriginOrGroupName (
        /*[out,retval]*/ VARIANT_BOOL * ShowOriginOrGroupName ) = 0;
      virtual HRESULT __stdcall put_ShowOriginOrGroupName (
        /*[in]*/ VARIANT_BOOL ShowOriginOrGroupName ) = 0;
      virtual HRESULT __stdcall get_RenumberOnUpdate (
        /*[out,retval]*/ VARIANT_BOOL * RenumberOnUpdate ) = 0;
      virtual HRESULT __stdcall put_RenumberOnUpdate (
        /*[in]*/ VARIANT_BOOL RenumberOnUpdate ) = 0;
      virtual HRESULT __stdcall get_KeepDeletedHoles (
        /*[out,retval]*/ VARIANT_BOOL * KeepDeletedHoles ) = 0;
      virtual HRESULT __stdcall put_KeepDeletedHoles (
        /*[in]*/ VARIANT_BOOL KeepDeletedHoles ) = 0;
      virtual HRESULT __stdcall get_ShowIndexOnBlankRows (
        /*[out,retval]*/ VARIANT_BOOL * ShowIndexOnBlankRows ) = 0;
      virtual HRESULT __stdcall put_ShowIndexOnBlankRows (
        /*[in]*/ VARIANT_BOOL ShowIndexOnBlankRows ) = 0;
      virtual HRESULT __stdcall get_CenterMark (
        /*[out,retval]*/ VARIANT_BOOL * CenterMark ) = 0;
      virtual HRESULT __stdcall put_CenterMark (
        /*[in]*/ VARIANT_BOOL CenterMark ) = 0;
      virtual HRESULT __stdcall get_CenterMarkProjectionLines (
        /*[out,retval]*/ VARIANT_BOOL * CenterMarkProjectionLines ) = 0;
      virtual HRESULT __stdcall put_CenterMarkProjectionLines (
        /*[in]*/ VARIANT_BOOL CenterMarkProjectionLines ) = 0;
      virtual HRESULT __stdcall get_ShowAnnotation (
        /*[out,retval]*/ VARIANT_BOOL * ShowAnnotation ) = 0;
      virtual HRESULT __stdcall put_ShowAnnotation (
        /*[in]*/ VARIANT_BOOL ShowAnnotation ) = 0;
      virtual HRESULT __stdcall get_AnnotationPosition (
        /*[out,retval]*/ enum HoleTableAnnotPosition * AnnotationPosition ) = 0;
      virtual HRESULT __stdcall put_AnnotationPosition (
        /*[in]*/ enum HoleTableAnnotPosition AnnotationPosition ) = 0;
      virtual HRESULT __stdcall get_AnnotationOffset (
        /*[out,retval]*/ double * offset ) = 0;
      virtual HRESULT __stdcall put_AnnotationOffset (
        /*[in]*/ double offset ) = 0;
      virtual HRESULT __stdcall get_AnnotationDelimeterType (
        /*[out,retval]*/ enum HoleTableDelimiterType * AnnotationDelimeterType ) = 0;
      virtual HRESULT __stdcall put_AnnotationDelimeterType (
        /*[in]*/ enum HoleTableDelimiterType AnnotationDelimeterType ) = 0;
      virtual HRESULT __stdcall get_Leader (
        /*[out,retval]*/ VARIANT_BOOL * Leader ) = 0;
      virtual HRESULT __stdcall put_Leader (
        /*[in]*/ VARIANT_BOOL Leader ) = 0;
      virtual HRESULT __stdcall get_BreakLine (
        /*[out,retval]*/ VARIANT_BOOL * BreakLine ) = 0;
      virtual HRESULT __stdcall put_BreakLine (
        /*[in]*/ VARIANT_BOOL BreakLine ) = 0;
      virtual HRESULT __stdcall raw_GetHoleTableCalloutText (
        /*[in]*/ enum HoleTableCalloutType calloutType,
        /*[in]*/ enum HTHoleTypeConstants holeType,
        /*[out]*/ BSTR * pCalloutText ) = 0;
      virtual HRESULT __stdcall raw_SetHoleTableCalloutText (
        /*[in]*/ enum HoleTableCalloutType calloutType,
        /*[in]*/ enum HTHoleTypeConstants holeType,
        /*[in]*/ BSTR CalloutText ) = 0;
      virtual HRESULT __stdcall get_SmartDepthHoleThru (
        /*[out,retval]*/ BSTR * HoleThru ) = 0;
      virtual HRESULT __stdcall put_SmartDepthHoleThru (
        /*[in]*/ BSTR HoleThru ) = 0;
      virtual HRESULT __stdcall get_SmartDepthHoleFinite (
        /*[out,retval]*/ BSTR * HoleFinite ) = 0;
      virtual HRESULT __stdcall put_SmartDepthHoleFinite (
        /*[in]*/ BSTR HoleFinite ) = 0;
      virtual HRESULT __stdcall get_SmartDepthThreadThru (
        /*[out,retval]*/ BSTR * ThreadThru ) = 0;
      virtual HRESULT __stdcall put_SmartDepthThreadThru (
        /*[in]*/ BSTR ThreadThru ) = 0;
      virtual HRESULT __stdcall get_SmartDepthThreadFinite (
        /*[out,retval]*/ BSTR * ThreadFinite ) = 0;
      virtual HRESULT __stdcall put_SmartDepthThreadFinite (
        /*[in]*/ BSTR ThreadFinite ) = 0;
      virtual HRESULT __stdcall get_PrimaryLinearUnits (
        /*[out,retval]*/ enum HoleTable2PrimaryLinearUnit * val ) = 0;
      virtual HRESULT __stdcall put_PrimaryLinearUnits (
        /*[in]*/ enum HoleTable2PrimaryLinearUnit val ) = 0;
      virtual HRESULT __stdcall get_PrimaryLinearDecimalRoundOff (
        /*[out,retval]*/ enum HoleTable2DecimalRoundOffTypeConstants * val ) = 0;
      virtual HRESULT __stdcall put_PrimaryLinearDecimalRoundOff (
        /*[in]*/ enum HoleTable2DecimalRoundOffTypeConstants val ) = 0;
      virtual HRESULT __stdcall get_PrimaryDelimiter (
        /*[out,retval]*/ enum HoleTableDelimiterType * val ) = 0;
      virtual HRESULT __stdcall put_PrimaryDelimiter (
        /*[in]*/ enum HoleTableDelimiterType val ) = 0;
      virtual HRESULT __stdcall get_PrimaryAngularUnits (
        /*[out,retval]*/ enum HoleTable2AngularUnit * val ) = 0;
      virtual HRESULT __stdcall put_PrimaryAngularUnits (
        /*[in]*/ enum HoleTable2AngularUnit val ) = 0;
      virtual HRESULT __stdcall get_PrimaryAngularDMSRoundOff (
        /*[out,retval]*/ enum HoleTable2DMSRoundOffTypeConstants * val ) = 0;
      virtual HRESULT __stdcall put_PrimaryAngularDMSRoundOff (
        /*[in]*/ enum HoleTable2DMSRoundOffTypeConstants val ) = 0;
      virtual HRESULT __stdcall get_PrimaryAngularDecimalRoundOff (
        /*[out,retval]*/ enum HoleTable2DecimalRoundOffTypeConstants * val ) = 0;
      virtual HRESULT __stdcall put_PrimaryAngularDecimalRoundOff (
        /*[in]*/ enum HoleTable2DecimalRoundOffTypeConstants val ) = 0;
      virtual HRESULT __stdcall get_PrimaryLeadingZeros (
        /*[out,retval]*/ VARIANT_BOOL * val ) = 0;
      virtual HRESULT __stdcall put_PrimaryLeadingZeros (
        /*[in]*/ VARIANT_BOOL val ) = 0;
      virtual HRESULT __stdcall get_PrimaryTrailingZeros (
        /*[out,retval]*/ VARIANT_BOOL * val ) = 0;
      virtual HRESULT __stdcall put_PrimaryTrailingZeros (
        /*[in]*/ VARIANT_BOOL val ) = 0;
      virtual HRESULT __stdcall get_HoleTableType (
        /*[out,retval]*/ enum HoleTableType * HoleTableType ) = 0;
      virtual HRESULT __stdcall raw_GetXYorigin (
        /*[in]*/ VARIANT Index,
        /*[out]*/ IUnknown * * pElement,
        /*[out]*/ enum KeypointIndexConstants * KeyPointIndex ) = 0;
      virtual HRESULT __stdcall get_ShowHoleTableOrigin (
        /*[out,retval]*/ VARIANT_BOOL * ShowHoleTableOrigin ) = 0;
      virtual HRESULT __stdcall put_ShowHoleTableOrigin (
        /*[in]*/ VARIANT_BOOL ShowHoleTableOrigin ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
};

struct __declspec(uuid("d2447707-b471-49f2-ad4c-cc834e353947"))
WeldTables : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    WeldTablePtr Item (
        const _variant_t & Index );
    WeldTablePtr AddByActiveSheet (
        _bstr_t SavedSettings,
        long isMerge );
    WeldTablePtr AddByDrawingView (
        struct DrawingView * DrawingView,
        _bstr_t SavedSettings,
        long DimensionsInView,
        long isMerge );
    WeldTablePtr AddByUserSelection (
        _bstr_t SavedSettings,
        long isMerge );
    IDispatchPtr GetParent ( );
};

struct __declspec(uuid("06ece4c4-0229-11d2-be0d-080036b4d502"))
_IDraftDocumentAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetAttributeQuery))
    TGFramework::AttributeQueryPtr AttributeQuery;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetDimensionStyles))
    IDispatchPtr DimensionStyles;
    __declspec(property(get=GetFullName))
    _bstr_t FullName;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetParent))
    TGFramework::ApplicationPtr Parent;
    __declspec(property(get=GetPath))
    _bstr_t Path;
    __declspec(property(get=GetReadOnly,put=PutReadOnly))
    VARIANT_BOOL ReadOnly;
    __declspec(property(get=GetRoutingSlip))
    IDispatchPtr RoutingSlip;
    __declspec(property(get=GetSelectSet))
    TGFramework::SelectSetPtr SelectSet;
    __declspec(property(get=GetSummaryInfo))
    IDispatchPtr SummaryInfo;
    __declspec(property(get=GetWindows))
    TGFramework::WindowsPtr Windows;
    __declspec(property(get=GetNamedViews))
    TGFramework::NamedViewsPtr NamedViews;
    __declspec(property(get=GetProperties))
    IDispatchPtr Properties;
    __declspec(property(get=GetSheets))
    SheetsPtr Sheets;
    __declspec(property(get=GetActiveSheet))
    SheetPtr ActiveSheet;
    __declspec(property(get=GetSections))
    SectionsPtr Sections;
    __declspec(property(get=GetActiveSection))
    SectionPtr ActiveSection;
    __declspec(property(get=GetSymbolProperties))
    IDispatchPtr SymbolProperties;
    __declspec(property(get=GetFeatureControlFrameDataSets))
    TGFrameworkSupport::FeatureControlFrameDataSetsPtr FeatureControlFrameDataSets;
    __declspec(property(get=GetPartsLists))
    PartsListsPtr PartsLists;
    __declspec(property(get=GetActivePrintingSheet))
    SheetPtr ActivePrintingSheet;
    __declspec(property(get=GetDrawingViewEvents))
    IUnknownPtr DrawingViewEvents;
    __declspec(property(get=GetIsTemplate,put=PutIsTemplate))
    VARIANT_BOOL IsTemplate;
    __declspec(property(get=GetStatus,put=PutStatus))
    enum TGFramework::DocumentStatus Status;
    __declspec(property(get=GetHoleTables))
    HoleTablesPtr HoleTables;
    __declspec(property(get=GetActiveSectionType))
    enum SheetSectionTypeConstants ActiveSectionType;
    __declspec(property(get=GetMaintainRelationships,put=PutMaintainRelationships))
    VARIANT_BOOL MaintainRelationships;
    __declspec(property(get=GetLinearStyles))
    IDispatchPtr LinearStyles;
    __declspec(property(get=GetSmartFrame2dStyles))
    IDispatchPtr SmartFrame2dStyles;
    __declspec(property(get=GetTextCharStyles))
    IDispatchPtr TextCharStyles;
    __declspec(property(get=GetPartsListEvents))
    IUnknownPtr PartsListEvents;
    __declspec(property(get=GetFillStyles))
    IDispatchPtr FillStyles;
    __declspec(property(get=GetQuicksheetTemplateCount))
    long QuicksheetTemplateCount;
    __declspec(property(get=GetBlocks))
    BlocksPtr Blocks;
    __declspec(property(get=GetTables))
    TablesPtr Tables;
    __declspec(property(get=GetInactiveDrawingViewMode,put=PutInactiveDrawingViewMode))
    VARIANT_BOOL InactiveDrawingViewMode;
    __declspec(property(get=GetHatchPatternStyles))
    IDispatchPtr HatchPatternStyles;
    __declspec(property(get=GetSurfaceFinishSymbolDataSets))
    TGFrameworkSupport::SurfaceFinishSymbolDataSetsPtr SurfaceFinishSymbolDataSets;
    __declspec(property(get=GetWeldSymbolDataSets))
    TGFrameworkSupport::WeldSymbolDataSetsPtr WeldSymbolDataSets;
    __declspec(property(get=GetDashStyles))
    IDispatchPtr DashStyles;
    __declspec(property(get=GetTextStyles))
    IDispatchPtr TextStyles;
    __declspec(property(get=GetUnitsOfMeasure))
    TGFramework::UnitsOfMeasurePtr UnitsOfMeasure;
    __declspec(property(get=GetDraftBendTables))
    DraftBendTablesPtr DraftBendTables;
    __declspec(property(get=GetDraftBendTableEvents))
    IUnknownPtr DraftBendTableEvents;
    __declspec(property(get=GetFilePreferences))
    DraftFilePreferencesPtr FilePreferences;
    __declspec(property(get=GetDrawingViewStyles))
    TGFrameworkSupport::DrawingViewStylesPtr DrawingViewStyles;
    __declspec(property(get=GetDisplayRelationshipHandles,put=PutDisplayRelationshipHandles))
    VARIANT_BOOL DisplayRelationshipHandles;
    __declspec(property(get=GetDisplayAlignmentIndicator,put=PutDisplayAlignmentIndicator))
    VARIANT_BOOL DisplayAlignmentIndicator;
    __declspec(property(get=GetActiveSketch))
    IDispatchPtr ActiveSketch;
    __declspec(property(get=GetType))
    enum TGFramework::DocumentTypeConstants Type;
    __declspec(property(get=GetConnectorTables))
    ConnectorTablesPtr ConnectorTables;
    __declspec(property(get=GetConnectorTableEvents))
    IUnknownPtr ConnectorTableEvents;
    __declspec(property(get=GetSheetGroups))
    IDispatchPtr SheetGroups;
    __declspec(property(get=GetDocumentEvents))
    IUnknownPtr DocumentEvents;
    __declspec(property(get=GetRootStorage))
    IUnknownPtr RootStorage;
    __declspec(property(get=GetAddInsStorage))
    IUnknownPtr AddInsStorage[][];
    __declspec(property(get=GetBlockTables))
    BlockTablesPtr BlockTables;
    __declspec(property(get=GetDirty,put=PutDirty))
    VARIANT_BOOL Dirty;
    __declspec(property(get=GetCreatedVersion))
    _bstr_t CreatedVersion;
    __declspec(property(get=GetLastSavedVersion))
    _bstr_t LastSavedVersion;
    __declspec(property(get=GetHighlightSets))
    TGFramework::HighlightSetsPtr HighlightSets;
    __declspec(property(get=GetInPlaceActivated))
    VARIANT_BOOL InPlaceActivated;
    __declspec(property(get=GetBlockTableEvents))
    IUnknownPtr BlockTableEvents;
    __declspec(property(get=GetTableStyles))
    TGFrameworkSupport::TableStylesPtr TableStyles;
    __declspec(property(get=GetFOPTables))
    FOPTablesPtr FOPTables;
    __declspec(property(get=GetConductorTables))
    ConductorTablesPtr ConductorTables;
    __declspec(property(get=GetUndoSteps,put=PutUndoSteps))
    long UndoSteps;
    __declspec(property(get=GetToleranceTables))
    ToleranceTablesPtr ToleranceTables;
    __declspec(property(get=GetHoleTables2))
    HoleTables2Ptr HoleTables2;
    __declspec(property(get=GetModelLinks))
    ModelLinksPtr ModelLinks;
    __declspec(property(get=GetLocateBackgroundSheetGeometry,put=PutLocateBackgroundSheetGeometry))
    VARIANT_BOOL LocateBackgroundSheetGeometry;
    __declspec(property(get=GetIsInsightFile))
    VARIANT_BOOL IsInsightFile;
    __declspec(property(get=GetVariables))
    IDispatchPtr Variables;
    __declspec(property(get=GetMaintainAlignmentSet,put=PutMaintainAlignmentSet))
    VARIANT_BOOL MaintainAlignmentSet;
    __declspec(property(get=GetWeldTables))
    WeldTablesPtr WeldTables;

    //
    // Wrapper methods for error-handling
    //

    HRESULT Activate ( );
    TGFramework::ApplicationPtr GetApplication ( );
    HRESULT Close (
        const _variant_t & SaveChanges = vtMissing,
        const _variant_t & FileName = vtMissing,
        const _variant_t & RouteWorkbook = vtMissing );
    _bstr_t GetFullName ( );
    _bstr_t GetName ( );
    TGFramework::ApplicationPtr GetParent ( );
    _bstr_t GetPath ( );
    HRESULT PrintOut (
        const _variant_t & Printer = vtMissing,
        const _variant_t & NumCopies = vtMissing,
        const _variant_t & Orientation = vtMissing,
        const _variant_t & PaperSize = vtMissing,
        const _variant_t & Scale = vtMissing,
        const _variant_t & PrintToFile = vtMissing,
        const _variant_t & OutputFileName = vtMissing,
        const _variant_t & PrintRange = vtMissing,
        const _variant_t & Sheets = vtMissing,
        const _variant_t & ColorAsBlack = vtMissing,
        const _variant_t & Collate = vtMissing );
    VARIANT_BOOL GetReadOnly ( );
    IDispatchPtr GetRoutingSlip ( );
    HRESULT Save ( );
    HRESULT SaveAs (
        _bstr_t NewName,
        const _variant_t & IsATemplate = vtMissing,
        const _variant_t & FileFormat = vtMissing,
        const _variant_t & ReadOnlyEnforced = vtMissing,
        const _variant_t & ReadOnlyRecommended = vtMissing,
        const _variant_t & NewStatus = vtMissing,
        const _variant_t & CreateBackup = vtMissing,
        const _variant_t & UpdateLinkInContainer = vtMissing,
        const _variant_t & UpdateAllLinksInContainer = vtMissing );
    HRESULT SaveCopyAs (
        _bstr_t Name );
    HRESULT SaveAsJT (
        _bstr_t NewName,
        const _variant_t & Include_PreciseGeom = vtMissing,
        const _variant_t & Prod_Structure_Option = vtMissing,
        const _variant_t & Export_PMI = vtMissing,
        const _variant_t & Export_CoordinateSystem = vtMissing,
        const _variant_t & Export_3DBodies = vtMissing,
        const _variant_t & NumberofLODs = vtMissing,
        const _variant_t & JTFileUnit = vtMissing,
        const _variant_t & Write_Which_Files = vtMissing,
        const _variant_t & Use_Simplified_TopAsm = vtMissing,
        const _variant_t & Use_Simplified_SubAsm = vtMissing,
        const _variant_t & Use_Simplified_Part = vtMissing,
        const _variant_t & EnableDefaultOutputPath = vtMissing,
        const _variant_t & IncludeSEProperties = vtMissing,
        const _variant_t & Export_VisiblePartsOnly = vtMissing,
        const _variant_t & Export_VisibleConstructionsOnly = vtMissing,
        const _variant_t & RemoveUnsafeCharacters = vtMissing,
        const _variant_t & ExportSEPartFileAsSingleJTFile = vtMissing );
    _bstr_t SaveAsBIDM (
        _bstr_t FilePath,
        _bstr_t DocumentNumber,
        _bstr_t Revision,
        _bstr_t Title );
    _bstr_t ReviseBIDM (
        _bstr_t FilePath,
        _bstr_t Revision,
        _bstr_t Title );
    TGFramework::SelectSetPtr GetSelectSet ( );
    HRESULT SendMail (
        const _variant_t & Recipients = vtMissing,
        const _variant_t & Subject = vtMissing,
        const _variant_t & ReturnReceipt = vtMissing );
    IDispatchPtr GetSummaryInfo ( );
    TGFramework::WindowsPtr GetWindows ( );
    IDispatchPtr GetProperties ( );
    VARIANT_BOOL GetIsTemplate ( );
    void PutIsTemplate (
        VARIANT_BOOL IsTemplate );
    enum TGFramework::DocumentStatus GetStatus ( );
    void PutStatus (
        enum TGFramework::DocumentStatus Status );
    HRESULT EditProperties ( );
    TGFramework::UnitsOfMeasurePtr GetUnitsOfMeasure ( );
    IDispatchPtr GetActiveSketch ( );
    enum TGFramework::DocumentTypeConstants GetType ( );
    IUnknownPtr GetDocumentEvents ( );
    IUnknownPtr GetRootStorage ( );
    IUnknownPtr GetAddInsStorage (
        _bstr_t Name,
        long grfMode );
    VARIANT_BOOL GetDirty ( );
    void PutDirty (
        VARIANT_BOOL Dirty );
    TGFramework::AttributeQueryPtr GetAttributeQuery ( );
    _bstr_t GetCreatedVersion ( );
    _bstr_t GetLastSavedVersion ( );
    TGFramework::HighlightSetsPtr GetHighlightSets ( );
    VARIANT_BOOL GetInPlaceActivated ( );
    HRESULT SeekWriteAccess (
        VARIANT_BOOL * WriteAccess );
    long GetUndoSteps ( );
    void PutUndoSteps (
        long NumberOfUndoSteps );
    HRESULT CreatePreview ( );
    void PutReadOnly (
        VARIANT_BOOL ReadOnly );
    HRESULT SeekReadOnlyAccess (
        VARIANT_BOOL * ReadOnlyAccess );
    HRESULT ImportStyles2 (
        enum TGFramework::seStyleTypeConstants StyleType,
        VARIANT_BOOL bReplace,
        IDispatch * pSrcDocument );
    VARIANT_BOOL GetIsInsightFile ( );
    TGFramework::NamedViewsPtr GetNamedViews ( );
    HRESULT GetRegisteredCustomPropertiesBiDM (
        VARIANT * varPropInfo );
    _bstr_t SaveAsWithCustomPropertiesBIDM (
        _bstr_t FilePath,
        _bstr_t DocumentNumber,
        _bstr_t Revision,
        _bstr_t Title,
        const _variant_t & varPropInfo );
    _bstr_t ReviseWithCustomPropertiesBIDM (
        _bstr_t FilePath,
        _bstr_t Revision,
        _bstr_t Title,
        const _variant_t & varPropInfo );
    HRESULT SaveAsPRC (
        _bstr_t FileName );
    IDispatchPtr GetVariables ( );
    _variant_t NewWindow (
        const _variant_t & NewWindowOptions = vtMissing,
        const _variant_t & Environment = vtMissing );
    SheetsPtr GetSheets ( );
    SectionsPtr GetSections ( );
    SheetPtr GetActiveSheet ( );
    SectionPtr GetActiveSection ( );
    enum SheetSectionTypeConstants GetActiveSectionType ( );
    HRESULT DimensionTrackerStatistics (
        long * ChangedDimCount,
        long * DetachedDimCount );
    IDispatchPtr GetLinearStyles ( );
    IDispatchPtr GetSmartFrame2dStyles ( );
    IDispatchPtr GetTextStyles ( );
    IDispatchPtr GetTextCharStyles ( );
    IDispatchPtr GetFillStyles ( );
    IDispatchPtr GetHatchPatternStyles ( );
    IDispatchPtr GetDimensionStyles ( );
    IDispatchPtr GetSymbolProperties ( );
    ModelLinksPtr GetModelLinks ( );
    TGFrameworkSupport::FeatureControlFrameDataSetsPtr GetFeatureControlFrameDataSets ( );
    TGFrameworkSupport::SurfaceFinishSymbolDataSetsPtr GetSurfaceFinishSymbolDataSets ( );
    TGFrameworkSupport::WeldSymbolDataSetsPtr GetWeldSymbolDataSets ( );
    PartsListsPtr GetPartsLists ( );
    IUnknownPtr GetDrawingViewEvents ( );
    SheetPtr GetActivePrintingSheet ( );
    HRESULT GetGlobalParameter (
        enum DraftGlobalConstants Parameter,
        VARIANT * value );
    HRESULT SetGlobalParameter (
        enum DraftGlobalConstants Parameter,
        const _variant_t & value );
    HoleTablesPtr GetHoleTables ( );
    HRESULT AnnotationTrackerStatistics (
        long * ChangedAnnotationCount,
        long * DetachedAnnotationCount );
    VARIANT_BOOL GetMaintainRelationships ( );
    void PutMaintainRelationships (
        VARIANT_BOOL Enabled );
    HRESULT UpdatePropertyTextDisplay ( );
    HRESULT UpdatePropertyTextCacheAndDisplay ( );
    IUnknownPtr GetPartsListEvents ( );
    IDispatchPtr GetDashStyles ( );
    HRESULT PopulateQuicksheetTemplate (
        _bstr_t FileName );
    long GetQuicksheetTemplateCount ( );
    BlocksPtr GetBlocks ( );
    TablesPtr GetTables ( );
    VARIANT_BOOL GetInactiveDrawingViewMode ( );
    void PutInactiveDrawingViewMode (
        VARIANT_BOOL Enabled );
    HRESULT DimensionTrackerStatisticsEx (
        long * ChangedAnnotationCount,
        long * ChangedDimensionCount,
        long * DetachedAnnotationCount,
        long * DetachedDimensionCount,
        long * AnnotationsReattachedToAvailableGeometry,
        long * DimensionsReattachedToAvailableGeometry );
    HRESULT DimensionTrackerNumEntries (
        long * NumberOfEntries );
    HRESULT DimensionTrackerEntry (
        long Entry,
        long * BalloonID,
        IDispatch * * pObject,
        enum DimensionTrackerReasonCode * ReasonCode,
        double * PreviousValue,
        double * CurrentValue,
        BSTR * SheetName );
    HRESULT GoalSeek (
        _bstr_t NameTargetVariable,
        _bstr_t NameVariableToChange,
        double dTargetValue,
        double dTimeLimitInSecs,
        long NumIterationsLimit,
        double * dTimeElapsed,
        long * NumIterations,
        VARIANT_BOOL * TimeLimitExceeded,
        VARIANT_BOOL * IterationsLimitExceeded );
    HRESULT PrintOutEx (
        const _variant_t & Printer = vtMissing,
        const _variant_t & NumCopies = vtMissing,
        const _variant_t & Orientation = vtMissing,
        const _variant_t & PaperSize = vtMissing,
        const _variant_t & Scale = vtMissing,
        const _variant_t & PrintToFile = vtMissing,
        const _variant_t & OutputFileName = vtMissing,
        const _variant_t & PrintRange = vtMissing,
        const _variant_t & Sheets = vtMissing,
        const _variant_t & ColorAsBlack = vtMissing,
        const _variant_t & Collate = vtMissing,
        const _variant_t & ScaleLineWidths = vtMissing,
        const _variant_t & ScaleLineTypes = vtMissing,
        const _variant_t & UsePrinterClipping = vtMissing );
    DraftBendTablesPtr GetDraftBendTables ( );
    IUnknownPtr GetDraftBendTableEvents ( );
    DraftFilePreferencesPtr GetFilePreferences ( );
    TGFrameworkSupport::DrawingViewStylesPtr GetDrawingViewStyles ( );
    VARIANT_BOOL GetDisplayRelationshipHandles ( );
    void PutDisplayRelationshipHandles (
        VARIANT_BOOL Displayed );
    VARIANT_BOOL GetDisplayAlignmentIndicator ( );
    void PutDisplayAlignmentIndicator (
        VARIANT_BOOL Displayed );
    IDispatchPtr GetObjectFromKey (
        _bstr_t Key );
    HRESULT ClearAllDimensionTrackerEntries ( );
    ConnectorTablesPtr GetConnectorTables ( );
    IUnknownPtr GetConnectorTableEvents ( );
    IDispatchPtr GetSheetGroups ( );
    HRESULT SetFilenameForDVWizard (
        _bstr_t FileName );
    HRESULT SetSymbolFileOrigin (
        double XOrigin,
        double YOrigin );
    HRESULT GetSymbolFileOrigin (
        double * pxOrigin,
        double * pyOrigin );
    BlockTablesPtr GetBlockTables ( );
    IUnknownPtr GetBlockTableEvents ( );
    TGFrameworkSupport::TableStylesPtr GetTableStyles ( );
    FOPTablesPtr GetFOPTables ( );
    ConductorTablesPtr GetConductorTables ( );
    ToleranceTablesPtr GetToleranceTables ( );
    HoleTables2Ptr GetHoleTables2 ( );
    VARIANT_BOOL GetLocateBackgroundSheetGeometry ( );
    void PutLocateBackgroundSheetGeometry (
        VARIANT_BOOL pbLocate );
    HRESULT UpdateRetrievedDimensionsAndAnnotations ( );
    void PutName (
        _bstr_t Name );
    HRESULT UpdateAll (
        VARIANT_BOOL bForceUpdate );
    VARIANT_BOOL GetMaintainAlignmentSet ( );
    void PutMaintainAlignmentSet (
        VARIANT_BOOL pbAlign );
    WeldTablesPtr GetWeldTables ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Activate ( ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall raw_Close (
        /*[in]*/ VARIANT SaveChanges = vtMissing,
        /*[in]*/ VARIANT FileName = vtMissing,
        /*[in]*/ VARIANT RouteWorkbook = vtMissing ) = 0;
      virtual HRESULT __stdcall get_FullName (
        /*[out,retval]*/ BSTR * FullName ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct TGFramework::Application * * Parent ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall raw_PrintOut (
        /*[in]*/ VARIANT Printer = vtMissing,
        /*[in]*/ VARIANT NumCopies = vtMissing,
        /*[in]*/ VARIANT Orientation = vtMissing,
        /*[in]*/ VARIANT PaperSize = vtMissing,
        /*[in]*/ VARIANT Scale = vtMissing,
        /*[in]*/ VARIANT PrintToFile = vtMissing,
        /*[in]*/ VARIANT OutputFileName = vtMissing,
        /*[in]*/ VARIANT PrintRange = vtMissing,
        /*[in]*/ VARIANT Sheets = vtMissing,
        /*[in]*/ VARIANT ColorAsBlack = vtMissing,
        /*[in]*/ VARIANT Collate = vtMissing ) = 0;
      virtual HRESULT __stdcall get_ReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * ReadOnly ) = 0;
      virtual HRESULT __stdcall get_RoutingSlip (
        /*[out,retval]*/ IDispatch * * RoutingSlip ) = 0;
      virtual HRESULT __stdcall raw_Save ( ) = 0;
      virtual HRESULT __stdcall raw_SaveAs (
        /*[in]*/ BSTR NewName,
        /*[in]*/ VARIANT IsATemplate = vtMissing,
        /*[in]*/ VARIANT FileFormat = vtMissing,
        /*[in]*/ VARIANT ReadOnlyEnforced = vtMissing,
        /*[in]*/ VARIANT ReadOnlyRecommended = vtMissing,
        /*[in]*/ VARIANT NewStatus = vtMissing,
        /*[in]*/ VARIANT CreateBackup = vtMissing,
        /*[in]*/ VARIANT UpdateLinkInContainer = vtMissing,
        /*[in]*/ VARIANT UpdateAllLinksInContainer = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_SaveCopyAs (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall raw_SaveAsJT (
        /*[in]*/ BSTR NewName,
        /*[in]*/ VARIANT Include_PreciseGeom = vtMissing,
        /*[in]*/ VARIANT Prod_Structure_Option = vtMissing,
        /*[in]*/ VARIANT Export_PMI = vtMissing,
        /*[in]*/ VARIANT Export_CoordinateSystem = vtMissing,
        /*[in]*/ VARIANT Export_3DBodies = vtMissing,
        /*[in]*/ VARIANT NumberofLODs = vtMissing,
        /*[in]*/ VARIANT JTFileUnit = vtMissing,
        /*[in]*/ VARIANT Write_Which_Files = vtMissing,
        /*[in]*/ VARIANT Use_Simplified_TopAsm = vtMissing,
        /*[in]*/ VARIANT Use_Simplified_SubAsm = vtMissing,
        /*[in]*/ VARIANT Use_Simplified_Part = vtMissing,
        /*[in]*/ VARIANT EnableDefaultOutputPath = vtMissing,
        /*[in]*/ VARIANT IncludeSEProperties = vtMissing,
        /*[in]*/ VARIANT Export_VisiblePartsOnly = vtMissing,
        /*[in]*/ VARIANT Export_VisibleConstructionsOnly = vtMissing,
        /*[in]*/ VARIANT RemoveUnsafeCharacters = vtMissing,
        /*[in]*/ VARIANT ExportSEPartFileAsSingleJTFile = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_SaveAsBIDM (
        /*[in]*/ BSTR FilePath,
        /*[in]*/ BSTR DocumentNumber,
        /*[in]*/ BSTR Revision,
        /*[in]*/ BSTR Title,
        /*[out,retval]*/ BSTR * NewFileName ) = 0;
      virtual HRESULT __stdcall raw_ReviseBIDM (
        /*[in]*/ BSTR FilePath,
        /*[in]*/ BSTR Revision,
        /*[in]*/ BSTR Title,
        /*[out,retval]*/ BSTR * NewFileName ) = 0;
      virtual HRESULT __stdcall get_SelectSet (
        /*[out,retval]*/ struct TGFramework::SelectSet * * SelectSet ) = 0;
      virtual HRESULT __stdcall raw_SendMail (
        /*[in]*/ VARIANT Recipients = vtMissing,
        /*[in]*/ VARIANT Subject = vtMissing,
        /*[in]*/ VARIANT ReturnReceipt = vtMissing ) = 0;
      virtual HRESULT __stdcall get_SummaryInfo (
        /*[out,retval]*/ IDispatch * * SummaryInfo ) = 0;
      virtual HRESULT __stdcall get_Windows (
        /*[out,retval]*/ struct TGFramework::Windows * * Windows ) = 0;
      virtual HRESULT __stdcall get_Properties (
        /*[out,retval]*/ IDispatch * * Properties ) = 0;
      virtual HRESULT __stdcall get_IsTemplate (
        /*[out,retval]*/ VARIANT_BOOL * IsTemplate ) = 0;
      virtual HRESULT __stdcall put_IsTemplate (
        /*[in]*/ VARIANT_BOOL IsTemplate ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum TGFramework::DocumentStatus * Status ) = 0;
      virtual HRESULT __stdcall put_Status (
        /*[in]*/ enum TGFramework::DocumentStatus Status ) = 0;
      virtual HRESULT __stdcall raw_EditProperties ( ) = 0;
      virtual HRESULT __stdcall get_UnitsOfMeasure (
        /*[out,retval]*/ struct TGFramework::UnitsOfMeasure * * UnitsOfMeasurement ) = 0;
      virtual HRESULT __stdcall get_ActiveSketch (
        /*[out,retval]*/ IDispatch * * ActiveSketch ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::DocumentTypeConstants * Type ) = 0;
      virtual HRESULT __stdcall get_DocumentEvents (
        /*[out,retval]*/ struct IUnknown * * Events ) = 0;
      virtual HRESULT __stdcall get_RootStorage (
        /*[out,retval]*/ IUnknown * * RootStorageUnknown ) = 0;
      virtual HRESULT __stdcall get_AddInsStorage (
        /*[in]*/ BSTR Name,
        /*[in]*/ long grfMode,
        /*[out,retval]*/ IUnknown * * AddInsStorageUnknown ) = 0;
      virtual HRESULT __stdcall get_Dirty (
        /*[out,retval]*/ VARIANT_BOOL * Dirty ) = 0;
      virtual HRESULT __stdcall put_Dirty (
        /*[in]*/ VARIANT_BOOL Dirty ) = 0;
      virtual HRESULT __stdcall get_AttributeQuery (
        /*[out,retval]*/ struct TGFramework::AttributeQuery * * AttributeQuery ) = 0;
      virtual HRESULT __stdcall get_CreatedVersion (
        /*[out,retval]*/ BSTR * Version ) = 0;
      virtual HRESULT __stdcall get_LastSavedVersion (
        /*[out,retval]*/ BSTR * Version ) = 0;
      virtual HRESULT __stdcall get_HighlightSets (
        /*[out,retval]*/ struct TGFramework::HighlightSets * * HighlightSets ) = 0;
      virtual HRESULT __stdcall get_InPlaceActivated (
        /*[out,retval]*/ VARIANT_BOOL * InPlaceActivated ) = 0;
      virtual HRESULT __stdcall raw_SeekWriteAccess (
        /*[out]*/ VARIANT_BOOL * WriteAccess ) = 0;
      virtual HRESULT __stdcall get_UndoSteps (
        /*[out,retval]*/ long * NumberOfUndoSteps ) = 0;
      virtual HRESULT __stdcall put_UndoSteps (
        /*[in]*/ long NumberOfUndoSteps ) = 0;
      virtual HRESULT __stdcall raw_CreatePreview ( ) = 0;
      virtual HRESULT __stdcall put_ReadOnly (
        /*[in]*/ VARIANT_BOOL ReadOnly ) = 0;
      virtual HRESULT __stdcall raw_SeekReadOnlyAccess (
        /*[out]*/ VARIANT_BOOL * ReadOnlyAccess ) = 0;
      virtual HRESULT __stdcall raw_ImportStyles2 (
        /*[in]*/ enum TGFramework::seStyleTypeConstants StyleType,
        /*[in]*/ VARIANT_BOOL bReplace,
        /*[in]*/ IDispatch * pSrcDocument ) = 0;
      virtual HRESULT __stdcall get_IsInsightFile (
        /*[out,retval]*/ VARIANT_BOOL * IsInsight ) = 0;
      virtual HRESULT __stdcall get_NamedViews (
        /*[out,retval]*/ struct TGFramework::NamedViews * * NamedViews ) = 0;
      virtual HRESULT __stdcall raw_GetRegisteredCustomPropertiesBiDM (
        /*[out]*/ VARIANT * varPropInfo ) = 0;
      virtual HRESULT __stdcall raw_SaveAsWithCustomPropertiesBIDM (
        /*[in]*/ BSTR FilePath,
        /*[in]*/ BSTR DocumentNumber,
        /*[in]*/ BSTR Revision,
        /*[in]*/ BSTR Title,
        /*[in]*/ VARIANT varPropInfo,
        /*[out,retval]*/ BSTR * NewFileName ) = 0;
      virtual HRESULT __stdcall raw_ReviseWithCustomPropertiesBIDM (
        /*[in]*/ BSTR FilePath,
        /*[in]*/ BSTR Revision,
        /*[in]*/ BSTR Title,
        /*[in]*/ VARIANT varPropInfo,
        /*[out,retval]*/ BSTR * NewFileName ) = 0;
      virtual HRESULT __stdcall raw_SaveAsPRC (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall get_Variables (
        /*[out,retval]*/ IDispatch * * pVars ) = 0;
      virtual HRESULT __stdcall raw_NewWindow (
        /*[in]*/ VARIANT NewWindowOptions,
        /*[in]*/ VARIANT Environment,
        /*[out,retval]*/ VARIANT * Window ) = 0;
      virtual HRESULT __stdcall get_Sheets (
        /*[out,retval]*/ struct Sheets * * Sheets ) = 0;
      virtual HRESULT __stdcall get_Sections (
        /*[out,retval]*/ struct Sections * * Sheets ) = 0;
      virtual HRESULT __stdcall get_ActiveSheet (
        /*[out,retval]*/ struct Sheet * * Sheet ) = 0;
      virtual HRESULT __stdcall get_ActiveSection (
        /*[out,retval]*/ struct Section * * Section ) = 0;
      virtual HRESULT __stdcall get_ActiveSectionType (
        /*[out,retval]*/ enum SheetSectionTypeConstants * Section ) = 0;
      virtual HRESULT __stdcall raw_DimensionTrackerStatistics (
        /*[out]*/ long * ChangedDimCount,
        /*[out]*/ long * DetachedDimCount ) = 0;
      virtual HRESULT __stdcall get_LinearStyles (
        /*[out,retval]*/ IDispatch * * LinearStyles ) = 0;
      virtual HRESULT __stdcall get_SmartFrame2dStyles (
        /*[out,retval]*/ IDispatch * * SmartFrame2dStyles ) = 0;
      virtual HRESULT __stdcall get_TextStyles (
        /*[out,retval]*/ IDispatch * * TextStyles ) = 0;
      virtual HRESULT __stdcall get_TextCharStyles (
        /*[out,retval]*/ IDispatch * * TextCharStyles ) = 0;
      virtual HRESULT __stdcall get_FillStyles (
        /*[out,retval]*/ IDispatch * * FillStyles ) = 0;
      virtual HRESULT __stdcall get_HatchPatternStyles (
        /*[out,retval]*/ IDispatch * * HatchPatternStyles ) = 0;
      virtual HRESULT __stdcall get_DimensionStyles (
        /*[out,retval]*/ IDispatch * * pDimensionStyles ) = 0;
      virtual HRESULT __stdcall get_SymbolProperties (
        /*[out,retval]*/ IDispatch * * pSymbolProperties ) = 0;
      virtual HRESULT __stdcall get_ModelLinks (
        /*[out,retval]*/ struct ModelLinks * * ppModelLinks ) = 0;
      virtual HRESULT __stdcall get_FeatureControlFrameDataSets (
        /*[out,retval]*/ struct TGFrameworkSupport::FeatureControlFrameDataSets * * ppFeatureControlFrameDataSets ) = 0;
      virtual HRESULT __stdcall get_SurfaceFinishSymbolDataSets (
        /*[out,retval]*/ struct TGFrameworkSupport::SurfaceFinishSymbolDataSets * * ppSurfaceFinishSymbolDataSets ) = 0;
      virtual HRESULT __stdcall get_WeldSymbolDataSets (
        /*[out,retval]*/ struct TGFrameworkSupport::WeldSymbolDataSets * * ppWeldSymbolDataSets ) = 0;
      virtual HRESULT __stdcall get_PartsLists (
        /*[out,retval]*/ struct PartsLists * * PartsLists ) = 0;
      virtual HRESULT __stdcall get_DrawingViewEvents (
        /*[out,retval]*/ struct IUnknown * * Events ) = 0;
      virtual HRESULT __stdcall get_ActivePrintingSheet (
        /*[out,retval]*/ struct Sheet * * Sheet ) = 0;
      virtual HRESULT __stdcall raw_GetGlobalParameter (
        /*[in]*/ enum DraftGlobalConstants Parameter,
        /*[out]*/ VARIANT * value ) = 0;
      virtual HRESULT __stdcall raw_SetGlobalParameter (
        /*[in]*/ enum DraftGlobalConstants Parameter,
        /*[in]*/ VARIANT value ) = 0;
      virtual HRESULT __stdcall get_HoleTables (
        /*[out,retval]*/ struct HoleTables * * HoleTables ) = 0;
      virtual HRESULT __stdcall raw_AnnotationTrackerStatistics (
        /*[out]*/ long * ChangedAnnotationCount,
        /*[out]*/ long * DetachedAnnotationCount ) = 0;
      virtual HRESULT __stdcall get_MaintainRelationships (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_MaintainRelationships (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall raw_UpdatePropertyTextDisplay ( ) = 0;
      virtual HRESULT __stdcall raw_UpdatePropertyTextCacheAndDisplay ( ) = 0;
      virtual HRESULT __stdcall get_PartsListEvents (
        /*[out,retval]*/ struct IUnknown * * Events ) = 0;
      virtual HRESULT __stdcall get_DashStyles (
        /*[out,retval]*/ IDispatch * * DashStyles ) = 0;
      virtual HRESULT __stdcall raw_PopulateQuicksheetTemplate (
        BSTR FileName ) = 0;
      virtual HRESULT __stdcall get_QuicksheetTemplateCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Blocks (
        /*[out,retval]*/ struct Blocks * * Blocks ) = 0;
      virtual HRESULT __stdcall get_Tables (
        /*[out,retval]*/ struct Tables * * Tables ) = 0;
      virtual HRESULT __stdcall get_InactiveDrawingViewMode (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_InactiveDrawingViewMode (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall raw_DimensionTrackerStatisticsEx (
        /*[out]*/ long * ChangedAnnotationCount,
        /*[out]*/ long * ChangedDimensionCount,
        /*[out]*/ long * DetachedAnnotationCount,
        /*[out]*/ long * DetachedDimensionCount,
        /*[out]*/ long * AnnotationsReattachedToAvailableGeometry,
        /*[out]*/ long * DimensionsReattachedToAvailableGeometry ) = 0;
      virtual HRESULT __stdcall raw_DimensionTrackerNumEntries (
        /*[out]*/ long * NumberOfEntries ) = 0;
      virtual HRESULT __stdcall raw_DimensionTrackerEntry (
        /*[in]*/ long Entry,
        /*[out]*/ long * BalloonID,
        /*[out]*/ IDispatch * * pObject,
        /*[out]*/ enum DimensionTrackerReasonCode * ReasonCode,
        /*[out]*/ double * PreviousValue,
        /*[out]*/ double * CurrentValue,
        /*[out]*/ BSTR * SheetName ) = 0;
      virtual HRESULT __stdcall raw_GoalSeek (
        /*[in]*/ BSTR NameTargetVariable,
        /*[in]*/ BSTR NameVariableToChange,
        /*[in]*/ double dTargetValue,
        /*[in]*/ double dTimeLimitInSecs,
        /*[in]*/ long NumIterationsLimit,
        /*[out]*/ double * dTimeElapsed,
        /*[out]*/ long * NumIterations,
        /*[out]*/ VARIANT_BOOL * TimeLimitExceeded,
        /*[out]*/ VARIANT_BOOL * IterationsLimitExceeded ) = 0;
      virtual HRESULT __stdcall raw_PrintOutEx (
        /*[in]*/ VARIANT Printer = vtMissing,
        /*[in]*/ VARIANT NumCopies = vtMissing,
        /*[in]*/ VARIANT Orientation = vtMissing,
        /*[in]*/ VARIANT PaperSize = vtMissing,
        /*[in]*/ VARIANT Scale = vtMissing,
        /*[in]*/ VARIANT PrintToFile = vtMissing,
        /*[in]*/ VARIANT OutputFileName = vtMissing,
        /*[in]*/ VARIANT PrintRange = vtMissing,
        /*[in]*/ VARIANT Sheets = vtMissing,
        /*[in]*/ VARIANT ColorAsBlack = vtMissing,
        /*[in]*/ VARIANT Collate = vtMissing,
        /*[in]*/ VARIANT ScaleLineWidths = vtMissing,
        /*[in]*/ VARIANT ScaleLineTypes = vtMissing,
        /*[in]*/ VARIANT UsePrinterClipping = vtMissing ) = 0;
      virtual HRESULT __stdcall get_DraftBendTables (
        /*[out,retval]*/ struct DraftBendTables * * DraftBendTables ) = 0;
      virtual HRESULT __stdcall get_DraftBendTableEvents (
        /*[out,retval]*/ struct IUnknown * * Events ) = 0;
      virtual HRESULT __stdcall get_FilePreferences (
        /*[out,retval]*/ struct DraftFilePreferences * * FilePreferences ) = 0;
      virtual HRESULT __stdcall get_DrawingViewStyles (
        /*[out,retval]*/ struct TGFrameworkSupport::DrawingViewStyles * * pDrawingViewStyles ) = 0;
      virtual HRESULT __stdcall get_DisplayRelationshipHandles (
        /*[out,retval]*/ VARIANT_BOOL * Displayed ) = 0;
      virtual HRESULT __stdcall put_DisplayRelationshipHandles (
        /*[in]*/ VARIANT_BOOL Displayed ) = 0;
      virtual HRESULT __stdcall get_DisplayAlignmentIndicator (
        /*[out,retval]*/ VARIANT_BOOL * Displayed ) = 0;
      virtual HRESULT __stdcall put_DisplayAlignmentIndicator (
        /*[in]*/ VARIANT_BOOL Displayed ) = 0;
      virtual HRESULT __stdcall raw_GetObjectFromKey (
        /*[in]*/ BSTR Key,
        /*[out,retval]*/ IDispatch * * ppObject ) = 0;
      virtual HRESULT __stdcall raw_ClearAllDimensionTrackerEntries ( ) = 0;
      virtual HRESULT __stdcall get_ConnectorTables (
        /*[out,retval]*/ struct ConnectorTables * * ConnectorTables ) = 0;
      virtual HRESULT __stdcall get_ConnectorTableEvents (
        /*[out,retval]*/ struct IUnknown * * Events ) = 0;
      virtual HRESULT __stdcall get_SheetGroups (
        /*[out,retval]*/ IDispatch * * ppSheetGroups ) = 0;
      virtual HRESULT __stdcall raw_SetFilenameForDVWizard (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_SetSymbolFileOrigin (
        /*[in]*/ double XOrigin,
        /*[in]*/ double YOrigin ) = 0;
      virtual HRESULT __stdcall raw_GetSymbolFileOrigin (
        /*[in]*/ double * pxOrigin,
        /*[in]*/ double * pyOrigin ) = 0;
      virtual HRESULT __stdcall get_BlockTables (
        /*[out,retval]*/ struct BlockTables * * BlockTables ) = 0;
      virtual HRESULT __stdcall get_BlockTableEvents (
        /*[out,retval]*/ struct IUnknown * * Events ) = 0;
      virtual HRESULT __stdcall get_TableStyles (
        /*[out,retval]*/ struct TGFrameworkSupport::TableStyles * * pTableStyles ) = 0;
      virtual HRESULT __stdcall get_FOPTables (
        /*[out,retval]*/ struct FOPTables * * FOPTables ) = 0;
      virtual HRESULT __stdcall get_ConductorTables (
        /*[out,retval]*/ struct ConductorTables * * ConductorTables ) = 0;
      virtual HRESULT __stdcall get_ToleranceTables (
        /*[out,retval]*/ struct ToleranceTables * * ToleranceTables ) = 0;
      virtual HRESULT __stdcall get_HoleTables2 (
        /*[out,retval]*/ struct HoleTables2 * * HoleTables2 ) = 0;
      virtual HRESULT __stdcall get_LocateBackgroundSheetGeometry (
        /*[out,retval]*/ VARIANT_BOOL * pbLocate ) = 0;
      virtual HRESULT __stdcall put_LocateBackgroundSheetGeometry (
        /*[in]*/ VARIANT_BOOL pbLocate ) = 0;
      virtual HRESULT __stdcall raw_UpdateRetrievedDimensionsAndAnnotations ( ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall raw_UpdateAll (
        /*[in]*/ VARIANT_BOOL bForceUpdate ) = 0;
      virtual HRESULT __stdcall get_MaintainAlignmentSet (
        /*[out,retval]*/ VARIANT_BOOL * pbAlign ) = 0;
      virtual HRESULT __stdcall put_MaintainAlignmentSet (
        /*[in]*/ VARIANT_BOOL pbAlign ) = 0;
      virtual HRESULT __stdcall get_WeldTables (
        /*[out,retval]*/ struct WeldTables * * WeldTables ) = 0;
};

struct __declspec(uuid("f8b3b455-0515-4df6-a002-acd92e4a8fbf"))
WeldTable : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(put=PutSavedSettings))
    _bstr_t SavedSettings;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIsUpToDate))
    VARIANT_BOOL IsUpToDate;
    __declspec(property(get=GetAnchorPoint,put=PutAnchorPoint))
    enum TableAnchorPoint AnchorPoint;
    __declspec(property(get=GetCell))
    TableCellPtr Cell[][];
    __declspec(property(get=GetColumnHeaderPosition,put=PutColumnHeaderPosition))
    enum TitlePosition ColumnHeaderPosition;
    __declspec(property(get=GetColumns))
    TableColumnsPtr Columns;
    __declspec(property(get=GetDataFixedRowHeight,put=PutDataFixedRowHeight))
    double DataFixedRowHeight;
    __declspec(property(get=GetHeaderFixedRowHeight,put=PutHeaderFixedRowHeight))
    double HeaderFixedRowHeight;
    __declspec(property(get=GetMargin,put=PutMargin))
    double Margin;
    __declspec(property(get=GetMaximumHeight,put=PutMaximumHeight))
    double MaximumHeight;
    __declspec(property(get=GetMaximumRows,put=PutMaximumRows))
    long MaximumRows;
    __declspec(property(get=GetPageGap,put=PutPageGap))
    double PageGap;
    __declspec(property(get=GetPages))
    TablePagesPtr Pages;
    __declspec(property(get=GetReverseDisplayOrder,put=PutReverseDisplayOrder))
    VARIANT_BOOL ReverseDisplayOrder;
    __declspec(property(get=GetRows))
    TableRowsPtr Rows;
    __declspec(property(get=GetShowColumnHeader,put=PutShowColumnHeader))
    VARIANT_BOOL ShowColumnHeader;
    __declspec(property(get=GetTableStyle,put=PutTableStyle))
    _bstr_t TableStyle;
    __declspec(property(get=GetTitles))
    TableTitlesPtr Titles;
    __declspec(property(get=GetNumberOfHeaderRows,put=PutNumberOfHeaderRows))
    long NumberOfHeaderRows;
    __declspec(property(get=GetMaximumRowsFirstPage,put=PutMaximumRowsFirstPage))
    long MaximumRowsFirstPage;
    __declspec(property(get=GetMaximumRowsAdditionalPages,put=PutMaximumRowsAdditionalPages))
    long MaximumRowsAdditionalPages;
    __declspec(property(get=GetMaximumHeightFirstPage,put=PutMaximumHeightFirstPage))
    double MaximumHeightFirstPage;
    __declspec(property(get=GetMaximumHeightAdditionalPages,put=PutMaximumHeightAdditionalPages))
    double MaximumHeightAdditionalPages;
    __declspec(property(get=GetCreateNewSheetsForTable,put=PutCreateNewSheetsForTable))
    VARIANT_BOOL CreateNewSheetsForTable;
    __declspec(property(get=GetFirstSheetBackgroundName,put=PutFirstSheetBackgroundName))
    _bstr_t FirstSheetBackgroundName;
    __declspec(property(get=GetAdditionalSheetsBackgroundName,put=PutAdditionalSheetsBackgroundName))
    _bstr_t AdditionalSheetsBackgroundName;
    __declspec(property(get=GetShowSheetBackground,put=PutShowSheetBackground))
    VARIANT_BOOL ShowSheetBackground;
    __declspec(property(get=GetMaintainSheetsWithTableSize,put=PutMaintainSheetsWithTableSize))
    VARIANT_BOOL MaintainSheetsWithTableSize;
    __declspec(property(get=GetEnableGroups,put=PutEnableGroups))
    VARIANT_BOOL EnableGroups;
    __declspec(property(get=GetGroups))
    TableGroupsPtr Groups;
    __declspec(property(get=GetWrapDataCellsToNewRow,put=PutWrapDataCellsToNewRow))
    VARIANT_BOOL WrapDataCellsToNewRow;
    __declspec(property(get=GetFillEndOfTableWithBlankRows,put=PutFillEndOfTableWithBlankRows))
    VARIANT_BOOL FillEndOfTableWithBlankRows;
    __declspec(property(get=GetGroupByColumn,put=PutGroupByColumn))
    long GroupByColumn;
    __declspec(property(get=GetTitleFixedRowHeight,put=PutTitleFixedRowHeight))
    double TitleFixedRowHeight;
    __declspec(property(get=GetMarginHorizontal,put=PutMarginHorizontal))
    double MarginHorizontal;
    __declspec(property(get=GetMarginVertical,put=PutMarginVertical))
    double MarginVertical;
    __declspec(property(get=GetIncludeDimensionsInView,put=PutIncludeDimensionsInView))
    VARIANT_BOOL IncludeDimensionsInView;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetWeldTableDataJson))
    _bstr_t WeldTableDataJson;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    HRESULT Update ( );
    HRESULT CopyToClipboard ( );
    HRESULT SourceDimensions (
        SAFEARRAY * * ppDimensions );
    HRESULT Delete ( );
    void PutSavedSettings (
        _bstr_t _arg1 );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetIncludeDimensionsInView ( );
    void PutIncludeDimensionsInView (
        VARIANT_BOOL _arg1 );
    HRESULT SetOrigin (
        double x,
        double y );
    HRESULT GetOrigin (
        double * x,
        double * y );
    HRESULT GetListOfSavedSettings (
        long * NumSavedSettings,
        SAFEARRAY * * ListOfSavedSettings );
    VARIANT_BOOL GetIsUpToDate ( );
    HRESULT ConvertToTable ( );
    TableCellPtr GetCell (
        const _variant_t & RowIndex,
        const _variant_t & ColumnIndex );
    enum TitlePosition GetColumnHeaderPosition ( );
    void PutColumnHeaderPosition (
        enum TitlePosition _arg1 );
    TableColumnsPtr GetColumns ( );
    double GetMargin ( );
    void PutMargin (
        double _arg1 );
    long GetMaximumRows ( );
    void PutMaximumRows (
        long _arg1 );
    double GetPageGap ( );
    void PutPageGap (
        double _arg1 );
    VARIANT_BOOL GetReverseDisplayOrder ( );
    void PutReverseDisplayOrder (
        VARIANT_BOOL _arg1 );
    TableRowsPtr GetRows ( );
    VARIANT_BOOL GetShowColumnHeader ( );
    void PutShowColumnHeader (
        VARIANT_BOOL _arg1 );
    _bstr_t GetTableStyle ( );
    void PutTableStyle (
        _bstr_t _arg1 );
    TableTitlesPtr GetTitles ( );
    enum TableAnchorPoint GetAnchorPoint ( );
    void PutAnchorPoint (
        enum TableAnchorPoint _arg1 );
    TablePagesPtr GetPages ( );
    double GetHeaderFixedRowHeight ( );
    void PutHeaderFixedRowHeight (
        double _arg1 );
    double GetDataFixedRowHeight ( );
    void PutDataFixedRowHeight (
        double _arg1 );
    double GetMaximumHeight ( );
    void PutMaximumHeight (
        double _arg1 );
    long GetNumberOfHeaderRows ( );
    void PutNumberOfHeaderRows (
        long _arg1 );
    long GetMaximumRowsFirstPage ( );
    void PutMaximumRowsFirstPage (
        long _arg1 );
    long GetMaximumRowsAdditionalPages ( );
    void PutMaximumRowsAdditionalPages (
        long _arg1 );
    double GetMaximumHeightFirstPage ( );
    void PutMaximumHeightFirstPage (
        double _arg1 );
    double GetMaximumHeightAdditionalPages ( );
    void PutMaximumHeightAdditionalPages (
        double _arg1 );
    VARIANT_BOOL GetCreateNewSheetsForTable ( );
    void PutCreateNewSheetsForTable (
        VARIANT_BOOL _arg1 );
    _bstr_t GetFirstSheetBackgroundName ( );
    void PutFirstSheetBackgroundName (
        _bstr_t _arg1 );
    _bstr_t GetAdditionalSheetsBackgroundName ( );
    void PutAdditionalSheetsBackgroundName (
        _bstr_t _arg1 );
    VARIANT_BOOL GetShowSheetBackground ( );
    void PutShowSheetBackground (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetMaintainSheetsWithTableSize ( );
    void PutMaintainSheetsWithTableSize (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetEnableGroups ( );
    void PutEnableGroups (
        VARIANT_BOOL _arg1 );
    TableGroupsPtr GetGroups ( );
    VARIANT_BOOL GetWrapDataCellsToNewRow ( );
    void PutWrapDataCellsToNewRow (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetFillEndOfTableWithBlankRows ( );
    void PutFillEndOfTableWithBlankRows (
        VARIANT_BOOL _arg1 );
    long GetGroupByColumn ( );
    void PutGroupByColumn (
        long _arg1 );
    double GetTitleFixedRowHeight ( );
    void PutTitleFixedRowHeight (
        double _arg1 );
    double GetMarginHorizontal ( );
    void PutMarginHorizontal (
        double _arg1 );
    double GetMarginVertical ( );
    void PutMarginVertical (
        double _arg1 );
    _bstr_t GetName ( );
    _bstr_t GetWeldTableDataJson ( );
};

struct __declspec(uuid("05842745-e6bf-4c62-bb82-ffd6791f70fa"))
_IWeldTablesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    WeldTablePtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    WeldTablePtr AddByActiveSheet (
        _bstr_t SavedSettings,
        long isMerge );
    WeldTablePtr AddByDrawingView (
        struct DrawingView * DrawingView,
        _bstr_t SavedSettings,
        long DimensionsInView,
        long isMerge );
    WeldTablePtr AddByUserSelection (
        _bstr_t SavedSettings,
        long isMerge );
    IDispatchPtr GetParent ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct WeldTable * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Unknown ) = 0;
      virtual HRESULT __stdcall raw_AddByActiveSheet (
        /*[in]*/ BSTR SavedSettings,
        /*[in]*/ long isMerge,
        /*[out,retval]*/ struct WeldTable * * ppObj ) = 0;
      virtual HRESULT __stdcall raw_AddByDrawingView (
        /*[in]*/ struct DrawingView * DrawingView,
        /*[in]*/ BSTR SavedSettings,
        /*[in]*/ long DimensionsInView,
        /*[in]*/ long isMerge,
        /*[out,retval]*/ struct WeldTable * * ppObj ) = 0;
      virtual HRESULT __stdcall raw_AddByUserSelection (
        /*[in]*/ BSTR SavedSettings,
        /*[in]*/ long isMerge,
        /*[out,retval]*/ struct WeldTable * * ppObj ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
};

struct __declspec(uuid("00462f3c-562e-4641-af3b-b486fbbbbf30"))
_IWeldTableAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(put=PutSavedSettings))
    _bstr_t SavedSettings;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIsUpToDate))
    VARIANT_BOOL IsUpToDate;
    __declspec(property(get=GetAnchorPoint,put=PutAnchorPoint))
    enum TableAnchorPoint AnchorPoint;
    __declspec(property(get=GetCell))
    TableCellPtr Cell[][];
    __declspec(property(get=GetColumnHeaderPosition,put=PutColumnHeaderPosition))
    enum TitlePosition ColumnHeaderPosition;
    __declspec(property(get=GetColumns))
    TableColumnsPtr Columns;
    __declspec(property(get=GetDataFixedRowHeight,put=PutDataFixedRowHeight))
    double DataFixedRowHeight;
    __declspec(property(get=GetHeaderFixedRowHeight,put=PutHeaderFixedRowHeight))
    double HeaderFixedRowHeight;
    __declspec(property(get=GetMargin,put=PutMargin))
    double Margin;
    __declspec(property(get=GetMaximumHeight,put=PutMaximumHeight))
    double MaximumHeight;
    __declspec(property(get=GetMaximumRows,put=PutMaximumRows))
    long MaximumRows;
    __declspec(property(get=GetPageGap,put=PutPageGap))
    double PageGap;
    __declspec(property(get=GetPages))
    TablePagesPtr Pages;
    __declspec(property(get=GetReverseDisplayOrder,put=PutReverseDisplayOrder))
    VARIANT_BOOL ReverseDisplayOrder;
    __declspec(property(get=GetRows))
    TableRowsPtr Rows;
    __declspec(property(get=GetShowColumnHeader,put=PutShowColumnHeader))
    VARIANT_BOOL ShowColumnHeader;
    __declspec(property(get=GetTableStyle,put=PutTableStyle))
    _bstr_t TableStyle;
    __declspec(property(get=GetTitles))
    TableTitlesPtr Titles;
    __declspec(property(get=GetNumberOfHeaderRows,put=PutNumberOfHeaderRows))
    long NumberOfHeaderRows;
    __declspec(property(get=GetMaximumRowsFirstPage,put=PutMaximumRowsFirstPage))
    long MaximumRowsFirstPage;
    __declspec(property(get=GetMaximumRowsAdditionalPages,put=PutMaximumRowsAdditionalPages))
    long MaximumRowsAdditionalPages;
    __declspec(property(get=GetMaximumHeightFirstPage,put=PutMaximumHeightFirstPage))
    double MaximumHeightFirstPage;
    __declspec(property(get=GetMaximumHeightAdditionalPages,put=PutMaximumHeightAdditionalPages))
    double MaximumHeightAdditionalPages;
    __declspec(property(get=GetCreateNewSheetsForTable,put=PutCreateNewSheetsForTable))
    VARIANT_BOOL CreateNewSheetsForTable;
    __declspec(property(get=GetFirstSheetBackgroundName,put=PutFirstSheetBackgroundName))
    _bstr_t FirstSheetBackgroundName;
    __declspec(property(get=GetAdditionalSheetsBackgroundName,put=PutAdditionalSheetsBackgroundName))
    _bstr_t AdditionalSheetsBackgroundName;
    __declspec(property(get=GetShowSheetBackground,put=PutShowSheetBackground))
    VARIANT_BOOL ShowSheetBackground;
    __declspec(property(get=GetMaintainSheetsWithTableSize,put=PutMaintainSheetsWithTableSize))
    VARIANT_BOOL MaintainSheetsWithTableSize;
    __declspec(property(get=GetEnableGroups,put=PutEnableGroups))
    VARIANT_BOOL EnableGroups;
    __declspec(property(get=GetGroups))
    TableGroupsPtr Groups;
    __declspec(property(get=GetWrapDataCellsToNewRow,put=PutWrapDataCellsToNewRow))
    VARIANT_BOOL WrapDataCellsToNewRow;
    __declspec(property(get=GetFillEndOfTableWithBlankRows,put=PutFillEndOfTableWithBlankRows))
    VARIANT_BOOL FillEndOfTableWithBlankRows;
    __declspec(property(get=GetGroupByColumn,put=PutGroupByColumn))
    long GroupByColumn;
    __declspec(property(get=GetTitleFixedRowHeight,put=PutTitleFixedRowHeight))
    double TitleFixedRowHeight;
    __declspec(property(get=GetMarginHorizontal,put=PutMarginHorizontal))
    double MarginHorizontal;
    __declspec(property(get=GetMarginVertical,put=PutMarginVertical))
    double MarginVertical;
    __declspec(property(get=GetIncludeDimensionsInView,put=PutIncludeDimensionsInView))
    VARIANT_BOOL IncludeDimensionsInView;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetWeldTableDataJson))
    _bstr_t WeldTableDataJson;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    HRESULT Update ( );
    HRESULT CopyToClipboard ( );
    HRESULT SourceDimensions (
        SAFEARRAY * * ppDimensions );
    HRESULT Delete ( );
    void PutSavedSettings (
        _bstr_t _arg1 );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetIncludeDimensionsInView ( );
    void PutIncludeDimensionsInView (
        VARIANT_BOOL value );
    HRESULT SetOrigin (
        double x,
        double y );
    HRESULT GetOrigin (
        double * x,
        double * y );
    HRESULT GetListOfSavedSettings (
        long * NumSavedSettings,
        SAFEARRAY * * ListOfSavedSettings );
    VARIANT_BOOL GetIsUpToDate ( );
    HRESULT ConvertToTable ( );
    TableCellPtr GetCell (
        const _variant_t & RowIndex,
        const _variant_t & ColumnIndex );
    enum TitlePosition GetColumnHeaderPosition ( );
    void PutColumnHeaderPosition (
        enum TitlePosition ColumnHeaderPosition );
    TableColumnsPtr GetColumns ( );
    double GetMargin ( );
    void PutMargin (
        double Margin );
    long GetMaximumRows ( );
    void PutMaximumRows (
        long MaximumRows );
    double GetPageGap ( );
    void PutPageGap (
        double PageGap );
    VARIANT_BOOL GetReverseDisplayOrder ( );
    void PutReverseDisplayOrder (
        VARIANT_BOOL ReverseDisplayOrder );
    TableRowsPtr GetRows ( );
    VARIANT_BOOL GetShowColumnHeader ( );
    void PutShowColumnHeader (
        VARIANT_BOOL ShowColumnHeader );
    _bstr_t GetTableStyle ( );
    void PutTableStyle (
        _bstr_t TableStyle );
    TableTitlesPtr GetTitles ( );
    enum TableAnchorPoint GetAnchorPoint ( );
    void PutAnchorPoint (
        enum TableAnchorPoint AnchorPoint );
    TablePagesPtr GetPages ( );
    double GetHeaderFixedRowHeight ( );
    void PutHeaderFixedRowHeight (
        double HeaderFixedRowHeight );
    double GetDataFixedRowHeight ( );
    void PutDataFixedRowHeight (
        double DataFixedRowHeight );
    double GetMaximumHeight ( );
    void PutMaximumHeight (
        double MaximumHeight );
    long GetNumberOfHeaderRows ( );
    void PutNumberOfHeaderRows (
        long NumberOfHeaderRows );
    long GetMaximumRowsFirstPage ( );
    void PutMaximumRowsFirstPage (
        long MaximumRowsFirstPage );
    long GetMaximumRowsAdditionalPages ( );
    void PutMaximumRowsAdditionalPages (
        long MaximumRowsAdditionalPages );
    double GetMaximumHeightFirstPage ( );
    void PutMaximumHeightFirstPage (
        double MaximumHeightFirstPage );
    double GetMaximumHeightAdditionalPages ( );
    void PutMaximumHeightAdditionalPages (
        double MaximumHeightAdditionalPages );
    VARIANT_BOOL GetCreateNewSheetsForTable ( );
    void PutCreateNewSheetsForTable (
        VARIANT_BOOL CreateNewSheetsForTable );
    _bstr_t GetFirstSheetBackgroundName ( );
    void PutFirstSheetBackgroundName (
        _bstr_t FirstSheetBackgroundName );
    _bstr_t GetAdditionalSheetsBackgroundName ( );
    void PutAdditionalSheetsBackgroundName (
        _bstr_t AdditionalSheetsBackgroundName );
    VARIANT_BOOL GetShowSheetBackground ( );
    void PutShowSheetBackground (
        VARIANT_BOOL ShowSheetBackground );
    VARIANT_BOOL GetMaintainSheetsWithTableSize ( );
    void PutMaintainSheetsWithTableSize (
        VARIANT_BOOL MaintainSheetsWithTableSize );
    VARIANT_BOOL GetEnableGroups ( );
    void PutEnableGroups (
        VARIANT_BOOL EnableGroups );
    TableGroupsPtr GetGroups ( );
    VARIANT_BOOL GetWrapDataCellsToNewRow ( );
    void PutWrapDataCellsToNewRow (
        VARIANT_BOOL WrapDataCellsToNewRow );
    VARIANT_BOOL GetFillEndOfTableWithBlankRows ( );
    void PutFillEndOfTableWithBlankRows (
        VARIANT_BOOL FillEndOfTableWithBlankRows );
    long GetGroupByColumn ( );
    void PutGroupByColumn (
        long ColumnIndex );
    double GetTitleFixedRowHeight ( );
    void PutTitleFixedRowHeight (
        double TitleFixedRowHeight );
    double GetMarginHorizontal ( );
    void PutMarginHorizontal (
        double MarginHorizontal );
    double GetMarginVertical ( );
    void PutMarginVertical (
        double MarginVertical );
    _bstr_t GetName ( );
    _bstr_t GetWeldTableDataJson ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall raw_Update ( ) = 0;
      virtual HRESULT __stdcall raw_CopyToClipboard ( ) = 0;
      virtual HRESULT __stdcall raw_SourceDimensions (
        /*[out]*/ SAFEARRAY * * ppDimensions ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall put_SavedSettings (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_IncludeDimensionsInView (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall put_IncludeDimensionsInView (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall raw_SetOrigin (
        /*[in]*/ double x,
        /*[in]*/ double y ) = 0;
      virtual HRESULT __stdcall raw_GetOrigin (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall raw_GetListOfSavedSettings (
        /*[out]*/ long * NumSavedSettings,
        /*[in,out]*/ SAFEARRAY * * ListOfSavedSettings ) = 0;
      virtual HRESULT __stdcall get_IsUpToDate (
        /*[out,retval]*/ VARIANT_BOOL * UpToDate ) = 0;
      virtual HRESULT __stdcall raw_ConvertToTable ( ) = 0;
      virtual HRESULT __stdcall get_Cell (
        /*[in]*/ VARIANT RowIndex,
        /*[in]*/ VARIANT ColumnIndex,
        /*[out,retval]*/ struct TableCell * * ppCell ) = 0;
      virtual HRESULT __stdcall get_ColumnHeaderPosition (
        /*[out,retval]*/ enum TitlePosition * ColumnHeaderPosition ) = 0;
      virtual HRESULT __stdcall put_ColumnHeaderPosition (
        /*[in]*/ enum TitlePosition ColumnHeaderPosition ) = 0;
      virtual HRESULT __stdcall get_Columns (
        /*[out,retval]*/ struct TableColumns * * Columns ) = 0;
      virtual HRESULT __stdcall get_Margin (
        /*[out,retval]*/ double * Margin ) = 0;
      virtual HRESULT __stdcall put_Margin (
        /*[in]*/ double Margin ) = 0;
      virtual HRESULT __stdcall get_MaximumRows (
        /*[out,retval]*/ long * MaximumRows ) = 0;
      virtual HRESULT __stdcall put_MaximumRows (
        /*[in]*/ long MaximumRows ) = 0;
      virtual HRESULT __stdcall get_PageGap (
        /*[out,retval]*/ double * PageGap ) = 0;
      virtual HRESULT __stdcall put_PageGap (
        /*[in]*/ double PageGap ) = 0;
      virtual HRESULT __stdcall get_ReverseDisplayOrder (
        /*[out,retval]*/ VARIANT_BOOL * ReverseDisplayOrder ) = 0;
      virtual HRESULT __stdcall put_ReverseDisplayOrder (
        /*[in]*/ VARIANT_BOOL ReverseDisplayOrder ) = 0;
      virtual HRESULT __stdcall get_Rows (
        /*[out,retval]*/ struct TableRows * * Rows ) = 0;
      virtual HRESULT __stdcall get_ShowColumnHeader (
        /*[out,retval]*/ VARIANT_BOOL * ShowColumnHeader ) = 0;
      virtual HRESULT __stdcall put_ShowColumnHeader (
        /*[in]*/ VARIANT_BOOL ShowColumnHeader ) = 0;
      virtual HRESULT __stdcall get_TableStyle (
        /*[out,retval]*/ BSTR * TableStyle ) = 0;
      virtual HRESULT __stdcall put_TableStyle (
        /*[in]*/ BSTR TableStyle ) = 0;
      virtual HRESULT __stdcall get_Titles (
        /*[out,retval]*/ struct TableTitles * * Titles ) = 0;
      virtual HRESULT __stdcall get_AnchorPoint (
        /*[out,retval]*/ enum TableAnchorPoint * AnchorPoint ) = 0;
      virtual HRESULT __stdcall put_AnchorPoint (
        /*[in]*/ enum TableAnchorPoint AnchorPoint ) = 0;
      virtual HRESULT __stdcall get_Pages (
        /*[out,retval]*/ struct TablePages * * Rows ) = 0;
      virtual HRESULT __stdcall get_HeaderFixedRowHeight (
        /*[out,retval]*/ double * HeaderFixedRowHeight ) = 0;
      virtual HRESULT __stdcall put_HeaderFixedRowHeight (
        /*[in]*/ double HeaderFixedRowHeight ) = 0;
      virtual HRESULT __stdcall get_DataFixedRowHeight (
        /*[out,retval]*/ double * DataFixedRowHeight ) = 0;
      virtual HRESULT __stdcall put_DataFixedRowHeight (
        /*[in]*/ double DataFixedRowHeight ) = 0;
      virtual HRESULT __stdcall get_MaximumHeight (
        /*[out,retval]*/ double * MaximumHeight ) = 0;
      virtual HRESULT __stdcall put_MaximumHeight (
        /*[in]*/ double MaximumHeight ) = 0;
      virtual HRESULT __stdcall get_NumberOfHeaderRows (
        /*[out,retval]*/ long * NumberOfHeaderRows ) = 0;
      virtual HRESULT __stdcall put_NumberOfHeaderRows (
        /*[in]*/ long NumberOfHeaderRows ) = 0;
      virtual HRESULT __stdcall get_MaximumRowsFirstPage (
        /*[out,retval]*/ long * MaximumRowsFirstPage ) = 0;
      virtual HRESULT __stdcall put_MaximumRowsFirstPage (
        /*[in]*/ long MaximumRowsFirstPage ) = 0;
      virtual HRESULT __stdcall get_MaximumRowsAdditionalPages (
        /*[out,retval]*/ long * MaximumRowsAdditionalPages ) = 0;
      virtual HRESULT __stdcall put_MaximumRowsAdditionalPages (
        /*[in]*/ long MaximumRowsAdditionalPages ) = 0;
      virtual HRESULT __stdcall get_MaximumHeightFirstPage (
        /*[out,retval]*/ double * MaximumHeightFirstPage ) = 0;
      virtual HRESULT __stdcall put_MaximumHeightFirstPage (
        /*[in]*/ double MaximumHeightFirstPage ) = 0;
      virtual HRESULT __stdcall get_MaximumHeightAdditionalPages (
        /*[out,retval]*/ double * MaximumHeightAdditionalPages ) = 0;
      virtual HRESULT __stdcall put_MaximumHeightAdditionalPages (
        /*[in]*/ double MaximumHeightAdditionalPages ) = 0;
      virtual HRESULT __stdcall get_CreateNewSheetsForTable (
        /*[out,retval]*/ VARIANT_BOOL * CreateNewSheetsForTable ) = 0;
      virtual HRESULT __stdcall put_CreateNewSheetsForTable (
        /*[in]*/ VARIANT_BOOL CreateNewSheetsForTable ) = 0;
      virtual HRESULT __stdcall get_FirstSheetBackgroundName (
        /*[out,retval]*/ BSTR * FirstSheetBackgroundName ) = 0;
      virtual HRESULT __stdcall put_FirstSheetBackgroundName (
        /*[in]*/ BSTR FirstSheetBackgroundName ) = 0;
      virtual HRESULT __stdcall get_AdditionalSheetsBackgroundName (
        /*[out,retval]*/ BSTR * AdditionalSheetsBackgroundName ) = 0;
      virtual HRESULT __stdcall put_AdditionalSheetsBackgroundName (
        /*[in]*/ BSTR AdditionalSheetsBackgroundName ) = 0;
      virtual HRESULT __stdcall get_ShowSheetBackground (
        /*[out,retval]*/ VARIANT_BOOL * ShowSheetBackground ) = 0;
      virtual HRESULT __stdcall put_ShowSheetBackground (
        /*[in]*/ VARIANT_BOOL ShowSheetBackground ) = 0;
      virtual HRESULT __stdcall get_MaintainSheetsWithTableSize (
        /*[out,retval]*/ VARIANT_BOOL * MaintainSheetsWithTableSize ) = 0;
      virtual HRESULT __stdcall put_MaintainSheetsWithTableSize (
        /*[in]*/ VARIANT_BOOL MaintainSheetsWithTableSize ) = 0;
      virtual HRESULT __stdcall get_EnableGroups (
        /*[out,retval]*/ VARIANT_BOOL * EnableGroups ) = 0;
      virtual HRESULT __stdcall put_EnableGroups (
        /*[in]*/ VARIANT_BOOL EnableGroups ) = 0;
      virtual HRESULT __stdcall get_Groups (
        /*[out,retval]*/ struct TableGroups * * Groups ) = 0;
      virtual HRESULT __stdcall get_WrapDataCellsToNewRow (
        /*[out,retval]*/ VARIANT_BOOL * WrapDataCellsToNewRow ) = 0;
      virtual HRESULT __stdcall put_WrapDataCellsToNewRow (
        /*[in]*/ VARIANT_BOOL WrapDataCellsToNewRow ) = 0;
      virtual HRESULT __stdcall get_FillEndOfTableWithBlankRows (
        /*[out,retval]*/ VARIANT_BOOL * FillEndOfTableWithBlankRows ) = 0;
      virtual HRESULT __stdcall put_FillEndOfTableWithBlankRows (
        /*[in]*/ VARIANT_BOOL FillEndOfTableWithBlankRows ) = 0;
      virtual HRESULT __stdcall get_GroupByColumn (
        /*[out,retval]*/ long * ColumnIndex ) = 0;
      virtual HRESULT __stdcall put_GroupByColumn (
        /*[in]*/ long ColumnIndex ) = 0;
      virtual HRESULT __stdcall get_TitleFixedRowHeight (
        /*[out,retval]*/ double * TitleFixedRowHeight ) = 0;
      virtual HRESULT __stdcall put_TitleFixedRowHeight (
        /*[in]*/ double TitleFixedRowHeight ) = 0;
      virtual HRESULT __stdcall get_MarginHorizontal (
        /*[out,retval]*/ double * MarginHorizontal ) = 0;
      virtual HRESULT __stdcall put_MarginHorizontal (
        /*[in]*/ double MarginHorizontal ) = 0;
      virtual HRESULT __stdcall get_MarginVertical (
        /*[out,retval]*/ double * MarginVertical ) = 0;
      virtual HRESULT __stdcall put_MarginVertical (
        /*[in]*/ double MarginVertical ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_WeldTableDataJson (
        /*[out,retval]*/ BSTR * weldData ) = 0;
};

struct __declspec(uuid("cdfa7a70-d0df-11ce-90ac-08003601eb9a"))
_IViewPlaneAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetDisplayCaption,put=PutDisplayCaption))
    VARIANT_BOOL DisplayCaption;
    __declspec(property(get=GetSourceDrawingView))
    DrawingViewPtr SourceDrawingView;
    __declspec(property(get=GetViewSheetNumberDefinitionText,put=PutViewSheetNumberDefinitionText))
    _bstr_t ViewSheetNumberDefinitionText;
    __declspec(property(get=GetCaption,put=PutCaption))
    _bstr_t Caption;
    __declspec(property(get=GetDisplayViewSheetNumber,put=PutDisplayViewSheetNumber))
    VARIANT_BOOL DisplayViewSheetNumber;
    __declspec(property(get=GetViewSheetNumberLocation,put=PutViewSheetNumberLocation))
    enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants ViewSheetNumberLocation;
    __declspec(property(get=GetAuto,put=PutAuto))
    VARIANT_BOOL Auto;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];
    __declspec(property(get=GetDisplayType,put=PutDisplayType))
    enum TGFrameworkSupport::DimViewPlaneDisplayTypeConstants DisplayType;
    __declspec(property(get=GetTextFont,put=PutTextFont))
    _bstr_t TextFont;
    __declspec(property(get=GetTextFontStyle,put=PutTextFontStyle))
    enum TGFrameworkSupport::DimTextFontStyleConstants TextFontStyle;
    __declspec(property(get=GetTextHeight,put=PutTextHeight))
    double TextHeight;
    __declspec(property(get=GetTextRatio,put=PutTextRatio))
    double TextRatio;
    __declspec(property(get=GetTextColor,put=PutTextColor))
    long TextColor;
    __declspec(property(get=GetStyleName,put=PutStyleName))
    _bstr_t StyleName;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetName))
    _bstr_t Name[][];
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetTerminatorType,put=PutTerminatorType))
    enum TGFrameworkSupport::DimTermTypeConstants TerminatorType;
    __declspec(property(get=GetTerminatorRatio,put=PutTerminatorRatio))
    double TerminatorRatio;
    __declspec(property(get=GetLineWidth,put=PutLineWidth))
    double LineWidth;
    __declspec(property(get=GetLineType,put=PutLineType))
    _bstr_t LineType;
    __declspec(property(get=GetType))
    long Type;
    __declspec(property(get=GetCaptionDefinitionText,put=PutCaptionDefinitionText))
    _bstr_t CaptionDefinitionText;
    __declspec(property(get=GetCaptionDisplayedText))
    _bstr_t CaptionDisplayedText;
    __declspec(property(get=GetZOrder))
    long ZOrder;
    __declspec(property(get=GetKey))
    _bstr_t Key[];
    __declspec(property(get=GetDocument))
    IDispatchPtr Document;

    //
    // Wrapper methods for error-handling
    //

    void PutDisplayCaption (
        VARIANT_BOOL DisplayCaption );
    VARIANT_BOOL GetDisplayCaption ( );
    DrawingViewPtr GetSourceDrawingView ( );
    _bstr_t GetCaption ( );
    void PutCaption (
        _bstr_t Caption );
    enum TGFrameworkSupport::DimViewPlaneDisplayTypeConstants GetDisplayType ( );
    void PutDisplayType (
        enum TGFrameworkSupport::DimViewPlaneDisplayTypeConstants DisplayType );
    _bstr_t GetTextFont ( );
    void PutTextFont (
        _bstr_t TextFont );
    enum TGFrameworkSupport::DimTextFontStyleConstants GetTextFontStyle ( );
    void PutTextFontStyle (
        enum TGFrameworkSupport::DimTextFontStyleConstants TextFontStyle );
    double GetTextHeight ( );
    void PutTextHeight (
        double TextHeight );
    double GetTextRatio ( );
    void PutTextRatio (
        double TextRatio );
    long GetTextColor ( );
    void PutTextColor (
        long TextColor );
    _bstr_t GetStyleName ( );
    void PutStyleName (
        _bstr_t StyleName );
    enum TGFrameworkSupport::DimTermTypeConstants GetTerminatorType ( );
    void PutTerminatorType (
        enum TGFrameworkSupport::DimTermTypeConstants TerminatorType );
    double GetTerminatorRatio ( );
    void PutTerminatorRatio (
        double TerminatorRatio );
    double GetLineWidth ( );
    void PutLineWidth (
        double LineWidth );
    _bstr_t GetLineType ( );
    void PutLineType (
        _bstr_t LineType );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetIndex ( );
    _bstr_t GetName (
        const _variant_t & Recurse,
        long Lcid = 0 );
    IDispatchPtr GetParent ( );
    long GetType ( );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL * Toggle );
    long GetZOrder ( );
    _bstr_t GetKey (
        const _variant_t & Recurse = vtMissing );
    IDispatchPtr GetDocument ( );
    HRESULT Copy ( );
    HRESULT Cut ( );
    HRESULT Delete ( );
    HRESULT BringToFront ( );
    HRESULT BringForward ( );
    HRESULT SendToBack ( );
    HRESULT SendBackward ( );
    HRESULT Select ( );
    HRESULT Range (
        double * min_x,
        double * min_y,
        double * max_x,
        double * max_y );
    _bstr_t GetCaptionDefinitionText ( );
    void PutCaptionDefinitionText (
        _bstr_t CaptionDefinitionText );
    _bstr_t GetCaptionDisplayedText ( );
    HRESULT GetFoldLineWithViewDirection (
        double * LineStartX,
        double * LineStartY,
        double * LineEndX,
        double * LineEndY,
        double * ViewDirectionX,
        double * ViewDirectionY );
    HRESULT GetViewLineWithArrowDirection (
        double * LineStartX,
        double * LineStartY,
        double * LineEndX,
        double * LineEndY,
        double * ArrowDirectionX,
        double * ArrowDirectionY );
    _bstr_t GetViewSheetNumberDefinitionText ( );
    void PutViewSheetNumberDefinitionText (
        _bstr_t ViewSheetNumberDefinitionText );
    VARIANT_BOOL GetDisplayViewSheetNumber ( );
    void PutDisplayViewSheetNumber (
        VARIANT_BOOL DisplayViewSheetNumber );
    enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants GetViewSheetNumberLocation ( );
    void PutViewSheetNumberLocation (
        enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants ViewSheetNumberLocation );
    HRESULT GetCaptionPosition (
        VARIANT_BOOL CaptionAtStartOfLine,
        double * x,
        double * y );
    HRESULT SetCaptionPosition (
        VARIANT_BOOL CaptionAtStartOfLine,
        double x,
        double y );
    void PutAuto (
        VARIANT_BOOL value );
    VARIANT_BOOL GetAuto ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    HRESULT SetAuxiliaryViewArrowPosition (
        double startPosX,
        double startPosY,
        double endPosX,
        double endPosY );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_DisplayCaption (
        /*[in]*/ VARIANT_BOOL DisplayCaption ) = 0;
      virtual HRESULT __stdcall get_DisplayCaption (
        /*[out,retval]*/ VARIANT_BOOL * DisplayCaption ) = 0;
      virtual HRESULT __stdcall get_SourceDrawingView (
        /*[out,retval]*/ struct DrawingView * * DrawingView ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * Caption ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR Caption ) = 0;
      virtual HRESULT __stdcall get_DisplayType (
        /*[out,retval]*/ enum TGFrameworkSupport::DimViewPlaneDisplayTypeConstants * DisplayType ) = 0;
      virtual HRESULT __stdcall put_DisplayType (
        /*[in]*/ enum TGFrameworkSupport::DimViewPlaneDisplayTypeConstants DisplayType ) = 0;
      virtual HRESULT __stdcall get_TextFont (
        /*[out,retval]*/ BSTR * TextFont ) = 0;
      virtual HRESULT __stdcall put_TextFont (
        /*[in]*/ BSTR TextFont ) = 0;
      virtual HRESULT __stdcall get_TextFontStyle (
        /*[out,retval]*/ enum TGFrameworkSupport::DimTextFontStyleConstants * TextFontStyle ) = 0;
      virtual HRESULT __stdcall put_TextFontStyle (
        /*[in]*/ enum TGFrameworkSupport::DimTextFontStyleConstants TextFontStyle ) = 0;
      virtual HRESULT __stdcall get_TextHeight (
        /*[out,retval]*/ double * TextHeight ) = 0;
      virtual HRESULT __stdcall put_TextHeight (
        /*[in]*/ double TextHeight ) = 0;
      virtual HRESULT __stdcall get_TextRatio (
        /*[out,retval]*/ double * TextRatio ) = 0;
      virtual HRESULT __stdcall put_TextRatio (
        /*[in]*/ double TextRatio ) = 0;
      virtual HRESULT __stdcall get_TextColor (
        /*[out,retval]*/ long * TextColor ) = 0;
      virtual HRESULT __stdcall put_TextColor (
        /*[in]*/ long TextColor ) = 0;
      virtual HRESULT __stdcall get_StyleName (
        /*[out,retval]*/ BSTR * StyleName ) = 0;
      virtual HRESULT __stdcall put_StyleName (
        /*[in]*/ BSTR StyleName ) = 0;
      virtual HRESULT __stdcall get_TerminatorType (
        /*[out,retval]*/ enum TGFrameworkSupport::DimTermTypeConstants * TerminatorType ) = 0;
      virtual HRESULT __stdcall put_TerminatorType (
        /*[in]*/ enum TGFrameworkSupport::DimTermTypeConstants TerminatorType ) = 0;
      virtual HRESULT __stdcall get_TerminatorRatio (
        /*[out,retval]*/ double * TerminatorRatio ) = 0;
      virtual HRESULT __stdcall put_TerminatorRatio (
        /*[in]*/ double TerminatorRatio ) = 0;
      virtual HRESULT __stdcall get_LineWidth (
        /*[out,retval]*/ double * LineWidth ) = 0;
      virtual HRESULT __stdcall put_LineWidth (
        /*[in]*/ double LineWidth ) = 0;
      virtual HRESULT __stdcall get_LineType (
        /*[out,retval]*/ BSTR * LineType ) = 0;
      virtual HRESULT __stdcall put_LineType (
        /*[in]*/ BSTR LineType ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[in]*/ VARIANT Recurse,
        /*[in,lcid]*/ long Lcid,
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Toggle ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL * Toggle ) = 0;
      virtual HRESULT __stdcall get_ZOrder (
        /*[out,retval]*/ long * ZOrder ) = 0;
      virtual HRESULT __stdcall get_Key (
        /*[in]*/ VARIANT Recurse,
        /*[out,retval]*/ BSTR * Key ) = 0;
      virtual HRESULT __stdcall get_Document (
        /*[out,retval]*/ IDispatch * * Document ) = 0;
      virtual HRESULT __stdcall raw_Copy ( ) = 0;
      virtual HRESULT __stdcall raw_Cut ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_BringToFront ( ) = 0;
      virtual HRESULT __stdcall raw_BringForward ( ) = 0;
      virtual HRESULT __stdcall raw_SendToBack ( ) = 0;
      virtual HRESULT __stdcall raw_SendBackward ( ) = 0;
      virtual HRESULT __stdcall raw_Select ( ) = 0;
      virtual HRESULT __stdcall raw_Range (
        /*[out]*/ double * min_x,
        /*[out]*/ double * min_y,
        /*[out]*/ double * max_x,
        /*[out]*/ double * max_y ) = 0;
      virtual HRESULT __stdcall get_CaptionDefinitionText (
        /*[out,retval]*/ BSTR * CaptionDefinitionText ) = 0;
      virtual HRESULT __stdcall put_CaptionDefinitionText (
        /*[in]*/ BSTR CaptionDefinitionText ) = 0;
      virtual HRESULT __stdcall get_CaptionDisplayedText (
        /*[out,retval]*/ BSTR * CaptionDisplayedText ) = 0;
      virtual HRESULT __stdcall raw_GetFoldLineWithViewDirection (
        /*[out]*/ double * LineStartX,
        /*[out]*/ double * LineStartY,
        /*[out]*/ double * LineEndX,
        /*[out]*/ double * LineEndY,
        /*[out]*/ double * ViewDirectionX,
        /*[out]*/ double * ViewDirectionY ) = 0;
      virtual HRESULT __stdcall raw_GetViewLineWithArrowDirection (
        /*[out]*/ double * LineStartX,
        /*[out]*/ double * LineStartY,
        /*[out]*/ double * LineEndX,
        /*[out]*/ double * LineEndY,
        /*[out]*/ double * ArrowDirectionX,
        /*[out]*/ double * ArrowDirectionY ) = 0;
      virtual HRESULT __stdcall get_ViewSheetNumberDefinitionText (
        /*[out,retval]*/ BSTR * ViewSheetNumberDefinitionText ) = 0;
      virtual HRESULT __stdcall put_ViewSheetNumberDefinitionText (
        /*[in]*/ BSTR ViewSheetNumberDefinitionText ) = 0;
      virtual HRESULT __stdcall get_DisplayViewSheetNumber (
        /*[out,retval]*/ VARIANT_BOOL * DisplayViewSheetNumber ) = 0;
      virtual HRESULT __stdcall put_DisplayViewSheetNumber (
        /*[in]*/ VARIANT_BOOL DisplayViewSheetNumber ) = 0;
      virtual HRESULT __stdcall get_ViewSheetNumberLocation (
        /*[out,retval]*/ enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants * ViewSheetNumberLocation ) = 0;
      virtual HRESULT __stdcall put_ViewSheetNumberLocation (
        /*[in]*/ enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants ViewSheetNumberLocation ) = 0;
      virtual HRESULT __stdcall raw_GetCaptionPosition (
        /*[in]*/ VARIANT_BOOL CaptionAtStartOfLine,
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall raw_SetCaptionPosition (
        /*[in]*/ VARIANT_BOOL CaptionAtStartOfLine,
        /*[in]*/ double x,
        /*[in]*/ double y ) = 0;
      virtual HRESULT __stdcall put_Auto (
        /*[in]*/ VARIANT_BOOL value ) = 0;
      virtual HRESULT __stdcall get_Auto (
        /*[out,retval]*/ VARIANT_BOOL * value ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall raw_SetAuxiliaryViewArrowPosition (
        /*[in]*/ double startPosX,
        /*[in]*/ double startPosY,
        /*[in]*/ double endPosX,
        /*[in]*/ double endPosY ) = 0;
};

struct __declspec(uuid("5eef1291-04a8-11cf-829f-0800366e0402"))
SelectedSheets : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    SheetPtr Item (
        const _variant_t & Index );
};

struct __declspec(uuid("5eef1290-04a8-11cf-829f-0800366e0402"))
_ISelectedSheetsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    SheetPtr Item (
        const _variant_t & Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * ppUnkEnum ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Sheet * * Item ) = 0;
};

enum SheetFitConstants
{
    igFitWorkingGraphicsOnly = 0,
    igFitAll = 1,
    igFitWorkingAndBackgroundGraphics = 2,
    igFitBackgroundGraphicsOnly = 3,
    igFitSheet = 4
};

struct __declspec(uuid("c7a308ca-428a-11ce-84a7-08003601c5f3"))
_ISheetWindowAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetActiveSectionType,put=PutActiveSectionType))
    enum SheetSectionTypeConstants ActiveSectionType;
    __declspec(property(get=GetDisplayBackgroundSheetTabs,put=PutDisplayBackgroundSheetTabs))
    VARIANT_BOOL DisplayBackgroundSheetTabs;
    __declspec(property(get=GetDisplayWorkingSheetTabs,put=PutDisplayWorkingSheetTabs))
    VARIANT_BOOL DisplayWorkingSheetTabs;
    __declspec(property(get=GetDisplay2DModelSheetTab,put=PutDisplay2DModelSheetTab))
    VARIANT_BOOL Display2DModelSheetTab;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetCaption,put=PutCaption))
    _bstr_t Caption;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetHeight,put=PutHeight))
    int Height;
    __declspec(property(get=GethWnd))
    long hWnd;
    __declspec(property(get=GetIndex))
    int Index;
    __declspec(property(get=GetLeft,put=PutLeft))
    int Left;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetSelectSet))
    TGFramework::SelectSetPtr SelectSet;
    __declspec(property(get=GetTop,put=PutTop))
    int Top;
    __declspec(property(get=GetType))
    _bstr_t Type;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    int Width;
    __declspec(property(get=GetWindowNumber))
    int WindowNumber;
    __declspec(property(get=GetWindowState,put=PutWindowState))
    int WindowState;
    __declspec(property(get=GetEnvironment,put=PutEnvironment))
    _bstr_t Environment;
    __declspec(property(get=GetIcon))
    long Icon;
    __declspec(property(get=GetActiveSheet,put=PutActiveSheet))
    SheetPtr ActiveSheet;
    __declspec(property(get=GetActiveSection,put=PutActiveSection))
    SectionPtr ActiveSection;
    __declspec(property(get=GetDisplaySheetTabs,put=PutDisplaySheetTabs))
    VARIANT_BOOL DisplaySheetTabs;
    __declspec(property(get=GetDisplaySectionTabs,put=PutDisplaySectionTabs))
    VARIANT_BOOL DisplaySectionTabs;
    __declspec(property(get=GetTransparentDisplay,put=PutTransparentDisplay))
    VARIANT_BOOL TransparentDisplay;
    __declspec(property(get=GetSheetTabRatio,put=PutSheetTabRatio))
    double SheetTabRatio;
    __declspec(property(get=GetSectionTabRatio,put=PutSectionTabRatio))
    double SectionTabRatio;
    __declspec(property(get=GetSelectedSheets))
    SelectedSheetsPtr SelectedSheets;
    __declspec(property(get=GetZoom,put=PutZoom))
    double Zoom;
    __declspec(property(get=GetUsableHeight))
    int UsableHeight;
    __declspec(property(get=GetUsableWidth))
    int UsableWidth;
    __declspec(property(get=GetDisplayHScroll,put=PutDisplayHScroll))
    VARIANT_BOOL DisplayHScroll;
    __declspec(property(get=GetDisplayVScroll,put=PutDisplayVScroll))
    VARIANT_BOOL DisplayVScroll;
    __declspec(property(get=GetBackdrop))
    TGFrameworkSupport::BackDropPtr Backdrop;
    __declspec(property(get=GetDisplayAsPrinted,put=PutDisplayAsPrinted))
    VARIANT_BOOL DisplayAsPrinted;

    //
    // Wrapper methods for error-handling
    //

    void PutActiveSheet (
        struct Sheet * Sheet );
    SheetPtr GetActiveSheet ( );
    SectionPtr GetActiveSection ( );
    void PutActiveSection (
        struct Section * Section );
    enum SheetSectionTypeConstants GetActiveSectionType ( );
    void PutActiveSectionType (
        enum SheetSectionTypeConstants Section );
    void PutDisplaySheetTabs (
        VARIANT_BOOL DisplaySheetTabs );
    VARIANT_BOOL GetDisplaySheetTabs ( );
    void PutDisplaySectionTabs (
        VARIANT_BOOL DisplaySectionTabs );
    VARIANT_BOOL GetDisplaySectionTabs ( );
    void PutTransparentDisplay (
        VARIANT_BOOL TransparentDisplay );
    VARIANT_BOOL GetTransparentDisplay ( );
    void PutSheetTabRatio (
        double Ratio );
    double GetSheetTabRatio ( );
    double GetSectionTabRatio ( );
    void PutSectionTabRatio (
        double Ratio );
    SelectedSheetsPtr GetSelectedSheets ( );
    void PutZoom (
        double ZoomPercent );
    double GetZoom ( );
    int GetUsableHeight ( );
    int GetUsableWidth ( );
    VARIANT_BOOL GetDisplayHScroll ( );
    void PutDisplayHScroll (
        VARIANT_BOOL Display );
    VARIANT_BOOL GetDisplayVScroll ( );
    void PutDisplayVScroll (
        VARIANT_BOOL Display );
    TGFrameworkSupport::BackDropPtr GetBackdrop ( );
    void PutDisplayAsPrinted (
        VARIANT_BOOL DisplayAsPrinted );
    VARIANT_BOOL GetDisplayAsPrinted ( );
    HRESULT Copy ( );
    HRESULT Cut ( );
    HRESULT DeselectSheet (
        const _variant_t & Sheet );
    HRESULT Paste ( );
    HRESULT WindowToModel (
        int WindowX,
        int WindowY,
        double * ModelX,
        double * ModelY );
    HRESULT ModelToWindow (
        double ModelX,
        double ModelY,
        int * WindowX,
        int * WindowY );
    HRESULT GetOrigin (
        double * x,
        double * y );
    HRESULT SetOrigin (
        double x,
        double y );
    HRESULT Pan (
        int x,
        int y );
    HRESULT SelectSheet (
        const _variant_t & Sheet,
        const _variant_t & Replace = vtMissing );
    HRESULT ZoomArea (
        int x1,
        int y1,
        int x2,
        int y2 );
    HRESULT Fit ( );
    _variant_t Key (
        const _variant_t & Recurse = vtMissing );
    HRESULT Activate ( );
    HRESULT ActivateNext ( );
    HRESULT ActivatePrevious ( );
    TGFramework::ApplicationPtr GetApplication ( );
    _bstr_t GetCaption ( );
    void PutCaption (
        _bstr_t Caption );
    HRESULT Close (
        const _variant_t & SaveChanges = vtMissing,
        const _variant_t & FileName = vtMissing,
        const _variant_t & RouteWorkbook = vtMissing );
    _bstr_t GetEnvironment ( );
    void PutEnvironment (
        _bstr_t Environment );
    int GetHeight ( );
    void PutHeight (
        int Height );
    long GethWnd ( );
    int GetIndex ( );
    int GetLeft ( );
    void PutLeft (
        int Left );
    IDispatchPtr GetParent ( );
    HRESULT PrintOut ( );
    TGFramework::SelectSetPtr GetSelectSet ( );
    int GetTop ( );
    void PutTop (
        int Top );
    _bstr_t GetType ( );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL Visible );
    int GetWidth ( );
    void PutWidth (
        int Width );
    int GetWindowNumber ( );
    int GetWindowState ( );
    void PutWindowState (
        int WindowState );
    long GetIcon ( );
    HRESULT SaveAsImage (
        _bstr_t FileName,
        const _variant_t & Width,
        const _variant_t & Height,
        const _variant_t & Resolution,
        const _variant_t & ColorDepth,
        enum TGFramework::SeImageQualityType ImageQuality,
        VARIANT_BOOL Invert );
    HRESULT Update ( );
    HRESULT FitEx (
        enum SheetFitConstants FitOption );
    void PutDisplayBackgroundSheetTabs (
        VARIANT_BOOL DisplayBackgroundSheetTabs );
    VARIANT_BOOL GetDisplayBackgroundSheetTabs ( );
    void PutDisplayWorkingSheetTabs (
        VARIANT_BOOL DisplayWorkingSheetTabs );
    VARIANT_BOOL GetDisplayWorkingSheetTabs ( );
    void PutDisplay2DModelSheetTab (
        VARIANT_BOOL Display2DModelSheetTab );
    VARIANT_BOOL GetDisplay2DModelSheetTab ( );
    HRESULT ZoomAreaEx (
        double x1,
        double y1,
        double x2,
        double y2 );
    HRESULT BeginSheetViewDynamics ( );
    HRESULT EndSheetViewDynamics ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_ActiveSheet (
        /*[in]*/ struct Sheet * Sheet ) = 0;
      virtual HRESULT __stdcall get_ActiveSheet (
        /*[out,retval]*/ struct Sheet * * Sheet ) = 0;
      virtual HRESULT __stdcall get_ActiveSection (
        /*[out,retval]*/ struct Section * * Section ) = 0;
      virtual HRESULT __stdcall put_ActiveSection (
        /*[in]*/ struct Section * Section ) = 0;
      virtual HRESULT __stdcall get_ActiveSectionType (
        /*[out,retval]*/ enum SheetSectionTypeConstants * Section ) = 0;
      virtual HRESULT __stdcall put_ActiveSectionType (
        /*[in]*/ enum SheetSectionTypeConstants Section ) = 0;
      virtual HRESULT __stdcall put_DisplaySheetTabs (
        /*[in]*/ VARIANT_BOOL DisplaySheetTabs ) = 0;
      virtual HRESULT __stdcall get_DisplaySheetTabs (
        /*[out,retval]*/ VARIANT_BOOL * DisplaySheetTabs ) = 0;
      virtual HRESULT __stdcall put_DisplaySectionTabs (
        /*[in]*/ VARIANT_BOOL DisplaySectionTabs ) = 0;
      virtual HRESULT __stdcall get_DisplaySectionTabs (
        /*[out,retval]*/ VARIANT_BOOL * DisplaySectionTabs ) = 0;
      virtual HRESULT __stdcall put_TransparentDisplay (
        /*[in]*/ VARIANT_BOOL TransparentDisplay ) = 0;
      virtual HRESULT __stdcall get_TransparentDisplay (
        /*[out,retval]*/ VARIANT_BOOL * TransparentDisplay ) = 0;
      virtual HRESULT __stdcall put_SheetTabRatio (
        /*[in]*/ double Ratio ) = 0;
      virtual HRESULT __stdcall get_SheetTabRatio (
        /*[out,retval]*/ double * Ratio ) = 0;
      virtual HRESULT __stdcall get_SectionTabRatio (
        /*[out,retval]*/ double * Ratio ) = 0;
      virtual HRESULT __stdcall put_SectionTabRatio (
        /*[in]*/ double Ratio ) = 0;
      virtual HRESULT __stdcall get_SelectedSheets (
        /*[out,retval]*/ struct SelectedSheets * * SelectedSheets ) = 0;
      virtual HRESULT __stdcall put_Zoom (
        /*[in]*/ double ZoomPercent ) = 0;
      virtual HRESULT __stdcall get_Zoom (
        /*[out,retval]*/ double * ZoomPercent ) = 0;
      virtual HRESULT __stdcall get_UsableHeight (
        /*[out,retval]*/ int * UsableHeight ) = 0;
      virtual HRESULT __stdcall get_UsableWidth (
        /*[out,retval]*/ int * UsableWidth ) = 0;
      virtual HRESULT __stdcall get_DisplayHScroll (
        /*[out,retval]*/ VARIANT_BOOL * Display ) = 0;
      virtual HRESULT __stdcall put_DisplayHScroll (
        /*[in]*/ VARIANT_BOOL Display ) = 0;
      virtual HRESULT __stdcall get_DisplayVScroll (
        /*[out,retval]*/ VARIANT_BOOL * Display ) = 0;
      virtual HRESULT __stdcall put_DisplayVScroll (
        /*[in]*/ VARIANT_BOOL Display ) = 0;
      virtual HRESULT __stdcall get_Backdrop (
        /*[out,retval]*/ struct TGFrameworkSupport::BackDrop * * Backdrop ) = 0;
      virtual HRESULT __stdcall put_DisplayAsPrinted (
        /*[in]*/ VARIANT_BOOL DisplayAsPrinted ) = 0;
      virtual HRESULT __stdcall get_DisplayAsPrinted (
        /*[out,retval]*/ VARIANT_BOOL * DisplayAsPrinted ) = 0;
      virtual HRESULT __stdcall raw_Copy ( ) = 0;
      virtual HRESULT __stdcall raw_Cut ( ) = 0;
      virtual HRESULT __stdcall raw_DeselectSheet (
        /*[in]*/ VARIANT Sheet ) = 0;
      virtual HRESULT __stdcall raw_Paste ( ) = 0;
      virtual HRESULT __stdcall raw_WindowToModel (
        /*[in]*/ int WindowX,
        /*[in]*/ int WindowY,
        /*[out]*/ double * ModelX,
        /*[out]*/ double * ModelY ) = 0;
      virtual HRESULT __stdcall raw_ModelToWindow (
        /*[in]*/ double ModelX,
        /*[in]*/ double ModelY,
        /*[out]*/ int * WindowX,
        /*[out]*/ int * WindowY ) = 0;
      virtual HRESULT __stdcall raw_GetOrigin (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall raw_SetOrigin (
        /*[in]*/ double x,
        /*[in]*/ double y ) = 0;
      virtual HRESULT __stdcall raw_Pan (
        /*[in]*/ int x,
        /*[in]*/ int y ) = 0;
      virtual HRESULT __stdcall raw_SelectSheet (
        /*[in]*/ VARIANT Sheet,
        /*[in]*/ VARIANT Replace = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_ZoomArea (
        /*[in]*/ int x1,
        /*[in]*/ int y1,
        /*[in]*/ int x2,
        /*[in]*/ int y2 ) = 0;
      virtual HRESULT __stdcall raw_Fit ( ) = 0;
      virtual HRESULT __stdcall raw_Key (
        /*[in]*/ VARIANT Recurse,
        /*[out,retval]*/ VARIANT * Key ) = 0;
      virtual HRESULT __stdcall raw_Activate ( ) = 0;
      virtual HRESULT __stdcall raw_ActivateNext ( ) = 0;
      virtual HRESULT __stdcall raw_ActivatePrevious ( ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * Caption ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR Caption ) = 0;
      virtual HRESULT __stdcall raw_Close (
        /*[in]*/ VARIANT SaveChanges = vtMissing,
        /*[in]*/ VARIANT FileName = vtMissing,
        /*[in]*/ VARIANT RouteWorkbook = vtMissing ) = 0;
      virtual HRESULT __stdcall get_Environment (
        /*[out,retval]*/ BSTR * Environment ) = 0;
      virtual HRESULT __stdcall put_Environment (
        /*[in]*/ BSTR Environment ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ int * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ int Height ) = 0;
      virtual HRESULT __stdcall get_hWnd (
        /*[out,retval]*/ long * hWnd ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ int * Index ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ int * Left ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ int Left ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_PrintOut ( ) = 0;
      virtual HRESULT __stdcall get_SelectSet (
        /*[out,retval]*/ struct TGFramework::SelectSet * * SelectSet ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ int * Top ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ int Top ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ BSTR * Type ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ int * Width ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ int Width ) = 0;
      virtual HRESULT __stdcall get_WindowNumber (
        /*[out,retval]*/ int * WindowNumber ) = 0;
      virtual HRESULT __stdcall get_WindowState (
        /*[out,retval]*/ int * WindowState ) = 0;
      virtual HRESULT __stdcall put_WindowState (
        /*[in]*/ int WindowState ) = 0;
      virtual HRESULT __stdcall get_Icon (
        /*[out,retval]*/ long * Icon ) = 0;
      virtual HRESULT __stdcall raw_SaveAsImage (
        /*[in]*/ BSTR FileName,
        /*[in]*/ VARIANT Width,
        /*[in]*/ VARIANT Height,
        /*[in]*/ VARIANT Resolution,
        /*[in]*/ VARIANT ColorDepth,
        /*[in]*/ enum TGFramework::SeImageQualityType ImageQuality,
        /*[in]*/ VARIANT_BOOL Invert ) = 0;
      virtual HRESULT __stdcall raw_Update ( ) = 0;
      virtual HRESULT __stdcall raw_FitEx (
        /*[in]*/ enum SheetFitConstants FitOption ) = 0;
      virtual HRESULT __stdcall put_DisplayBackgroundSheetTabs (
        /*[in]*/ VARIANT_BOOL DisplayBackgroundSheetTabs ) = 0;
      virtual HRESULT __stdcall get_DisplayBackgroundSheetTabs (
        /*[out,retval]*/ VARIANT_BOOL * DisplayBackgroundSheetTabs ) = 0;
      virtual HRESULT __stdcall put_DisplayWorkingSheetTabs (
        /*[in]*/ VARIANT_BOOL DisplayWorkingSheetTabs ) = 0;
      virtual HRESULT __stdcall get_DisplayWorkingSheetTabs (
        /*[out,retval]*/ VARIANT_BOOL * DisplayWorkingSheetTabs ) = 0;
      virtual HRESULT __stdcall put_Display2DModelSheetTab (
        /*[in]*/ VARIANT_BOOL Display2DModelSheetTab ) = 0;
      virtual HRESULT __stdcall get_Display2DModelSheetTab (
        /*[out,retval]*/ VARIANT_BOOL * Display2DModelSheetTab ) = 0;
      virtual HRESULT __stdcall raw_ZoomAreaEx (
        /*[in]*/ double x1,
        /*[in]*/ double y1,
        /*[in]*/ double x2,
        /*[in]*/ double y2 ) = 0;
      virtual HRESULT __stdcall raw_BeginSheetViewDynamics ( ) = 0;
      virtual HRESULT __stdcall raw_EndSheetViewDynamics ( ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
};

struct __declspec(uuid("016b11fb-cdc0-11ce-a035-08003601e53b"))
DraftDocument : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAttributeQuery))
    TGFramework::AttributeQueryPtr AttributeQuery;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetDimensionStyles))
    IDispatchPtr DimensionStyles;
    __declspec(property(get=GetFullName))
    _bstr_t FullName;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetParent))
    TGFramework::ApplicationPtr Parent;
    __declspec(property(get=GetPath))
    _bstr_t Path;
    __declspec(property(get=GetReadOnly,put=PutReadOnly))
    VARIANT_BOOL ReadOnly;
    __declspec(property(get=GetRoutingSlip))
    IDispatchPtr RoutingSlip;
    __declspec(property(get=GetSelectSet))
    TGFramework::SelectSetPtr SelectSet;
    __declspec(property(get=GetSummaryInfo))
    IDispatchPtr SummaryInfo;
    __declspec(property(get=GetWindows))
    TGFramework::WindowsPtr Windows;
    __declspec(property(get=GetNamedViews))
    TGFramework::NamedViewsPtr NamedViews;
    __declspec(property(get=GetProperties))
    IDispatchPtr Properties;
    __declspec(property(get=GetSheets))
    SheetsPtr Sheets;
    __declspec(property(get=GetActiveSheet))
    SheetPtr ActiveSheet;
    __declspec(property(get=GetSections))
    SectionsPtr Sections;
    __declspec(property(get=GetActiveSection))
    SectionPtr ActiveSection;
    __declspec(property(get=GetSymbolProperties))
    IDispatchPtr SymbolProperties;
    __declspec(property(get=GetFeatureControlFrameDataSets))
    TGFrameworkSupport::FeatureControlFrameDataSetsPtr FeatureControlFrameDataSets;
    __declspec(property(get=GetPartsLists))
    PartsListsPtr PartsLists;
    __declspec(property(get=GetActivePrintingSheet))
    SheetPtr ActivePrintingSheet;
    __declspec(property(get=GetDrawingViewEvents))
    IUnknownPtr DrawingViewEvents;
    __declspec(property(get=GetIsTemplate,put=PutIsTemplate))
    VARIANT_BOOL IsTemplate;
    __declspec(property(get=GetStatus,put=PutStatus))
    enum TGFramework::DocumentStatus Status;
    __declspec(property(get=GetHoleTables))
    HoleTablesPtr HoleTables;
    __declspec(property(get=GetActiveSectionType))
    enum SheetSectionTypeConstants ActiveSectionType;
    __declspec(property(get=GetMaintainRelationships,put=PutMaintainRelationships))
    VARIANT_BOOL MaintainRelationships;
    __declspec(property(get=GetLinearStyles))
    IDispatchPtr LinearStyles;
    __declspec(property(get=GetSmartFrame2dStyles))
    IDispatchPtr SmartFrame2dStyles;
    __declspec(property(get=GetTextCharStyles))
    IDispatchPtr TextCharStyles;
    __declspec(property(get=GetPartsListEvents))
    IUnknownPtr PartsListEvents;
    __declspec(property(get=GetFillStyles))
    IDispatchPtr FillStyles;
    __declspec(property(get=GetQuicksheetTemplateCount))
    long QuicksheetTemplateCount;
    __declspec(property(get=GetBlocks))
    BlocksPtr Blocks;
    __declspec(property(get=GetTables))
    TablesPtr Tables;
    __declspec(property(get=GetInactiveDrawingViewMode,put=PutInactiveDrawingViewMode))
    VARIANT_BOOL InactiveDrawingViewMode;
    __declspec(property(get=GetHatchPatternStyles))
    IDispatchPtr HatchPatternStyles;
    __declspec(property(get=GetSurfaceFinishSymbolDataSets))
    TGFrameworkSupport::SurfaceFinishSymbolDataSetsPtr SurfaceFinishSymbolDataSets;
    __declspec(property(get=GetWeldSymbolDataSets))
    TGFrameworkSupport::WeldSymbolDataSetsPtr WeldSymbolDataSets;
    __declspec(property(get=GetDashStyles))
    IDispatchPtr DashStyles;
    __declspec(property(get=GetTextStyles))
    IDispatchPtr TextStyles;
    __declspec(property(get=GetUnitsOfMeasure))
    TGFramework::UnitsOfMeasurePtr UnitsOfMeasure;
    __declspec(property(get=GetDraftBendTables))
    DraftBendTablesPtr DraftBendTables;
    __declspec(property(get=GetDraftBendTableEvents))
    IUnknownPtr DraftBendTableEvents;
    __declspec(property(get=GetFilePreferences))
    DraftFilePreferencesPtr FilePreferences;
    __declspec(property(get=GetDrawingViewStyles))
    TGFrameworkSupport::DrawingViewStylesPtr DrawingViewStyles;
    __declspec(property(get=GetDisplayRelationshipHandles,put=PutDisplayRelationshipHandles))
    VARIANT_BOOL DisplayRelationshipHandles;
    __declspec(property(get=GetDisplayAlignmentIndicator,put=PutDisplayAlignmentIndicator))
    VARIANT_BOOL DisplayAlignmentIndicator;
    __declspec(property(get=GetActiveSketch))
    IDispatchPtr ActiveSketch;
    __declspec(property(get=GetType))
    enum TGFramework::DocumentTypeConstants Type;
    __declspec(property(get=GetConnectorTables))
    ConnectorTablesPtr ConnectorTables;
    __declspec(property(get=GetConnectorTableEvents))
    IUnknownPtr ConnectorTableEvents;
    __declspec(property(get=GetSheetGroups))
    IDispatchPtr SheetGroups;
    __declspec(property(get=GetDocumentEvents))
    IUnknownPtr DocumentEvents;
    __declspec(property(get=GetRootStorage))
    IUnknownPtr RootStorage;
    __declspec(property(get=GetAddInsStorage))
    IUnknownPtr AddInsStorage[][];
    __declspec(property(get=GetBlockTables))
    BlockTablesPtr BlockTables;
    __declspec(property(get=GetDirty,put=PutDirty))
    VARIANT_BOOL Dirty;
    __declspec(property(get=GetCreatedVersion))
    _bstr_t CreatedVersion;
    __declspec(property(get=GetLastSavedVersion))
    _bstr_t LastSavedVersion;
    __declspec(property(get=GetHighlightSets))
    TGFramework::HighlightSetsPtr HighlightSets;
    __declspec(property(get=GetInPlaceActivated))
    VARIANT_BOOL InPlaceActivated;
    __declspec(property(get=GetBlockTableEvents))
    IUnknownPtr BlockTableEvents;
    __declspec(property(get=GetTableStyles))
    TGFrameworkSupport::TableStylesPtr TableStyles;
    __declspec(property(get=GetFOPTables))
    FOPTablesPtr FOPTables;
    __declspec(property(get=GetConductorTables))
    ConductorTablesPtr ConductorTables;
    __declspec(property(get=GetUndoSteps,put=PutUndoSteps))
    long UndoSteps;
    __declspec(property(get=GetToleranceTables))
    ToleranceTablesPtr ToleranceTables;
    __declspec(property(get=GetHoleTables2))
    HoleTables2Ptr HoleTables2;
    __declspec(property(get=GetModelLinks))
    ModelLinksPtr ModelLinks;
    __declspec(property(get=GetLocateBackgroundSheetGeometry,put=PutLocateBackgroundSheetGeometry))
    VARIANT_BOOL LocateBackgroundSheetGeometry;
    __declspec(property(get=GetIsInsightFile))
    VARIANT_BOOL IsInsightFile;
    __declspec(property(get=GetVariables))
    IDispatchPtr Variables;
    __declspec(property(get=GetMaintainAlignmentSet,put=PutMaintainAlignmentSet))
    VARIANT_BOOL MaintainAlignmentSet;
    __declspec(property(get=GetWeldTables))
    WeldTablesPtr WeldTables;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT Activate ( );
    TGFramework::ApplicationPtr GetApplication ( );
    HRESULT Close (
        const _variant_t & SaveChanges = vtMissing,
        const _variant_t & FileName = vtMissing,
        const _variant_t & RouteWorkbook = vtMissing );
    _bstr_t GetFullName ( );
    _bstr_t GetName ( );
    TGFramework::ApplicationPtr GetParent ( );
    _bstr_t GetPath ( );
    HRESULT PrintOut (
        const _variant_t & Printer = vtMissing,
        const _variant_t & NumCopies = vtMissing,
        const _variant_t & Orientation = vtMissing,
        const _variant_t & PaperSize = vtMissing,
        const _variant_t & Scale = vtMissing,
        const _variant_t & PrintToFile = vtMissing,
        const _variant_t & OutputFileName = vtMissing,
        const _variant_t & PrintRange = vtMissing,
        const _variant_t & Sheets = vtMissing,
        const _variant_t & ColorAsBlack = vtMissing,
        const _variant_t & Collate = vtMissing );
    VARIANT_BOOL GetReadOnly ( );
    IDispatchPtr GetRoutingSlip ( );
    HRESULT Save ( );
    HRESULT SaveAs (
        _bstr_t NewName,
        const _variant_t & IsATemplate = vtMissing,
        const _variant_t & FileFormat = vtMissing,
        const _variant_t & ReadOnlyEnforced = vtMissing,
        const _variant_t & ReadOnlyRecommended = vtMissing,
        const _variant_t & NewStatus = vtMissing,
        const _variant_t & CreateBackup = vtMissing,
        const _variant_t & UpdateLinkInContainer = vtMissing,
        const _variant_t & UpdateAllLinksInContainer = vtMissing );
    HRESULT SaveCopyAs (
        _bstr_t Name );
    HRESULT SaveAsJT (
        _bstr_t NewName,
        const _variant_t & Include_PreciseGeom = vtMissing,
        const _variant_t & Prod_Structure_Option = vtMissing,
        const _variant_t & Export_PMI = vtMissing,
        const _variant_t & Export_CoordinateSystem = vtMissing,
        const _variant_t & Export_3DBodies = vtMissing,
        const _variant_t & NumberofLODs = vtMissing,
        const _variant_t & JTFileUnit = vtMissing,
        const _variant_t & Write_Which_Files = vtMissing,
        const _variant_t & Use_Simplified_TopAsm = vtMissing,
        const _variant_t & Use_Simplified_SubAsm = vtMissing,
        const _variant_t & Use_Simplified_Part = vtMissing,
        const _variant_t & EnableDefaultOutputPath = vtMissing,
        const _variant_t & IncludeSEProperties = vtMissing,
        const _variant_t & Export_VisiblePartsOnly = vtMissing,
        const _variant_t & Export_VisibleConstructionsOnly = vtMissing,
        const _variant_t & RemoveUnsafeCharacters = vtMissing,
        const _variant_t & ExportSEPartFileAsSingleJTFile = vtMissing );
    _bstr_t SaveAsBIDM (
        _bstr_t FilePath,
        _bstr_t DocumentNumber,
        _bstr_t Revision,
        _bstr_t Title );
    _bstr_t ReviseBIDM (
        _bstr_t FilePath,
        _bstr_t Revision,
        _bstr_t Title );
    TGFramework::SelectSetPtr GetSelectSet ( );
    HRESULT SendMail (
        const _variant_t & Recipients = vtMissing,
        const _variant_t & Subject = vtMissing,
        const _variant_t & ReturnReceipt = vtMissing );
    IDispatchPtr GetSummaryInfo ( );
    TGFramework::WindowsPtr GetWindows ( );
    IDispatchPtr GetProperties ( );
    VARIANT_BOOL GetIsTemplate ( );
    void PutIsTemplate (
        VARIANT_BOOL _arg1 );
    enum TGFramework::DocumentStatus GetStatus ( );
    void PutStatus (
        enum TGFramework::DocumentStatus _arg1 );
    HRESULT EditProperties ( );
    TGFramework::UnitsOfMeasurePtr GetUnitsOfMeasure ( );
    IDispatchPtr GetActiveSketch ( );
    enum TGFramework::DocumentTypeConstants GetType ( );
    IUnknownPtr GetDocumentEvents ( );
    IUnknownPtr GetRootStorage ( );
    IUnknownPtr GetAddInsStorage (
        _bstr_t Name,
        long grfMode );
    VARIANT_BOOL GetDirty ( );
    void PutDirty (
        VARIANT_BOOL _arg1 );
    TGFramework::AttributeQueryPtr GetAttributeQuery ( );
    _bstr_t GetCreatedVersion ( );
    _bstr_t GetLastSavedVersion ( );
    TGFramework::HighlightSetsPtr GetHighlightSets ( );
    VARIANT_BOOL GetInPlaceActivated ( );
    HRESULT SeekWriteAccess (
        VARIANT_BOOL * WriteAccess );
    long GetUndoSteps ( );
    void PutUndoSteps (
        long _arg1 );
    HRESULT CreatePreview ( );
    void PutReadOnly (
        VARIANT_BOOL _arg1 );
    HRESULT SeekReadOnlyAccess (
        VARIANT_BOOL * ReadOnlyAccess );
    HRESULT ImportStyles2 (
        enum TGFramework::seStyleTypeConstants StyleType,
        VARIANT_BOOL bReplace,
        IDispatch * pSrcDocument );
    VARIANT_BOOL GetIsInsightFile ( );
    TGFramework::NamedViewsPtr GetNamedViews ( );
    HRESULT GetRegisteredCustomPropertiesBiDM (
        VARIANT * varPropInfo );
    _bstr_t SaveAsWithCustomPropertiesBIDM (
        _bstr_t FilePath,
        _bstr_t DocumentNumber,
        _bstr_t Revision,
        _bstr_t Title,
        const _variant_t & varPropInfo );
    _bstr_t ReviseWithCustomPropertiesBIDM (
        _bstr_t FilePath,
        _bstr_t Revision,
        _bstr_t Title,
        const _variant_t & varPropInfo );
    HRESULT SaveAsPRC (
        _bstr_t FileName );
    IDispatchPtr GetVariables ( );
    _variant_t NewWindow (
        const _variant_t & NewWindowOptions = vtMissing,
        const _variant_t & Environment = vtMissing );
    SheetsPtr GetSheets ( );
    SectionsPtr GetSections ( );
    SheetPtr GetActiveSheet ( );
    SectionPtr GetActiveSection ( );
    enum SheetSectionTypeConstants GetActiveSectionType ( );
    HRESULT DimensionTrackerStatistics (
        long * ChangedDimCount,
        long * DetachedDimCount );
    IDispatchPtr GetLinearStyles ( );
    IDispatchPtr GetSmartFrame2dStyles ( );
    IDispatchPtr GetTextStyles ( );
    IDispatchPtr GetTextCharStyles ( );
    IDispatchPtr GetFillStyles ( );
    IDispatchPtr GetHatchPatternStyles ( );
    IDispatchPtr GetDimensionStyles ( );
    IDispatchPtr GetSymbolProperties ( );
    ModelLinksPtr GetModelLinks ( );
    TGFrameworkSupport::FeatureControlFrameDataSetsPtr GetFeatureControlFrameDataSets ( );
    TGFrameworkSupport::SurfaceFinishSymbolDataSetsPtr GetSurfaceFinishSymbolDataSets ( );
    TGFrameworkSupport::WeldSymbolDataSetsPtr GetWeldSymbolDataSets ( );
    PartsListsPtr GetPartsLists ( );
    IUnknownPtr GetDrawingViewEvents ( );
    SheetPtr GetActivePrintingSheet ( );
    HRESULT GetGlobalParameter (
        enum DraftGlobalConstants Parameter,
        VARIANT * value );
    HRESULT SetGlobalParameter (
        enum DraftGlobalConstants Parameter,
        const _variant_t & value );
    HoleTablesPtr GetHoleTables ( );
    HRESULT AnnotationTrackerStatistics (
        long * ChangedAnnotationCount,
        long * DetachedAnnotationCount );
    VARIANT_BOOL GetMaintainRelationships ( );
    void PutMaintainRelationships (
        VARIANT_BOOL _arg1 );
    HRESULT UpdatePropertyTextDisplay ( );
    HRESULT UpdatePropertyTextCacheAndDisplay ( );
    IUnknownPtr GetPartsListEvents ( );
    IDispatchPtr GetDashStyles ( );
    HRESULT PopulateQuicksheetTemplate (
        _bstr_t FileName );
    long GetQuicksheetTemplateCount ( );
    BlocksPtr GetBlocks ( );
    TablesPtr GetTables ( );
    VARIANT_BOOL GetInactiveDrawingViewMode ( );
    void PutInactiveDrawingViewMode (
        VARIANT_BOOL _arg1 );
    HRESULT DimensionTrackerStatisticsEx (
        long * ChangedAnnotationCount,
        long * ChangedDimensionCount,
        long * DetachedAnnotationCount,
        long * DetachedDimensionCount,
        long * AnnotationsReattachedToAvailableGeometry,
        long * DimensionsReattachedToAvailableGeometry );
    HRESULT DimensionTrackerNumEntries (
        long * NumberOfEntries );
    HRESULT DimensionTrackerEntry (
        long Entry,
        long * BalloonID,
        IDispatch * * pObject,
        enum DimensionTrackerReasonCode * ReasonCode,
        double * PreviousValue,
        double * CurrentValue,
        BSTR * SheetName );
    HRESULT GoalSeek (
        _bstr_t NameTargetVariable,
        _bstr_t NameVariableToChange,
        double dTargetValue,
        double dTimeLimitInSecs,
        long NumIterationsLimit,
        double * dTimeElapsed,
        long * NumIterations,
        VARIANT_BOOL * TimeLimitExceeded,
        VARIANT_BOOL * IterationsLimitExceeded );
    HRESULT PrintOutEx (
        const _variant_t & Printer = vtMissing,
        const _variant_t & NumCopies = vtMissing,
        const _variant_t & Orientation = vtMissing,
        const _variant_t & PaperSize = vtMissing,
        const _variant_t & Scale = vtMissing,
        const _variant_t & PrintToFile = vtMissing,
        const _variant_t & OutputFileName = vtMissing,
        const _variant_t & PrintRange = vtMissing,
        const _variant_t & Sheets = vtMissing,
        const _variant_t & ColorAsBlack = vtMissing,
        const _variant_t & Collate = vtMissing,
        const _variant_t & ScaleLineWidths = vtMissing,
        const _variant_t & ScaleLineTypes = vtMissing,
        const _variant_t & UsePrinterClipping = vtMissing );
    DraftBendTablesPtr GetDraftBendTables ( );
    IUnknownPtr GetDraftBendTableEvents ( );
    DraftFilePreferencesPtr GetFilePreferences ( );
    TGFrameworkSupport::DrawingViewStylesPtr GetDrawingViewStyles ( );
    VARIANT_BOOL GetDisplayRelationshipHandles ( );
    void PutDisplayRelationshipHandles (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayAlignmentIndicator ( );
    void PutDisplayAlignmentIndicator (
        VARIANT_BOOL _arg1 );
    IDispatchPtr GetObjectFromKey (
        _bstr_t Key );
    HRESULT ClearAllDimensionTrackerEntries ( );
    ConnectorTablesPtr GetConnectorTables ( );
    IUnknownPtr GetConnectorTableEvents ( );
    IDispatchPtr GetSheetGroups ( );
    HRESULT SetFilenameForDVWizard (
        _bstr_t FileName );
    HRESULT SetSymbolFileOrigin (
        double XOrigin,
        double YOrigin );
    HRESULT GetSymbolFileOrigin (
        double * pxOrigin,
        double * pyOrigin );
    BlockTablesPtr GetBlockTables ( );
    IUnknownPtr GetBlockTableEvents ( );
    TGFrameworkSupport::TableStylesPtr GetTableStyles ( );
    FOPTablesPtr GetFOPTables ( );
    ConductorTablesPtr GetConductorTables ( );
    ToleranceTablesPtr GetToleranceTables ( );
    HoleTables2Ptr GetHoleTables2 ( );
    VARIANT_BOOL GetLocateBackgroundSheetGeometry ( );
    void PutLocateBackgroundSheetGeometry (
        VARIANT_BOOL _arg1 );
    HRESULT UpdateRetrievedDimensionsAndAnnotations ( );
    void PutName (
        _bstr_t _arg1 );
    HRESULT UpdateAll (
        VARIANT_BOOL bForceUpdate );
    VARIANT_BOOL GetMaintainAlignmentSet ( );
    void PutMaintainAlignmentSet (
        VARIANT_BOOL _arg1 );
    WeldTablesPtr GetWeldTables ( );
};

enum DraftPrintSheetsPerPageConstants
{
    igSingleSheet = 0,
    igMultipleSheets = 1
};

enum DraftPrintUnitsConstants
{
    igDraftPrintMillimeters = 0,
    igDraftPrintInches = 1
};

enum DraftPrintScaleTooLargeActionConstants
{
    igDraftPrintScaleToFit = 0,
    igDraftSkipDocument = 1
};

enum DraftPrintOrientationConstants
{
    igDraftPrintPortrait = 0,
    igDraftPrintLandscape = 1
};

enum DraftPrintPaperSizeConstants
{
    igDraftPrintPaperSize_Custom = 0,
    igDraftPrintPaperSize_LETTER = 1,
    igDraftPrintPaperSize_LETTERSMALL = 2,
    igDraftPrintPaperSize_TABLOID = 3,
    igDraftPrintPaperSize_LEDGER = 4,
    igDraftPrintPaperSize_LEGAL = 5,
    igDraftPrintPaperSize_STATEMENT = 6,
    igDraftPrintPaperSize_EXECUTIVE = 7,
    igDraftPrintPaperSize_A3 = 8,
    igDraftPrintPaperSize_A4 = 9,
    igDraftPrintPaperSize_A4SMALL = 10,
    igDraftPrintPaperSize_A5 = 11,
    igDraftPrintPaperSize_B4 = 12,
    igDraftPrintPaperSize_B5 = 13,
    igDraftPrintPaperSize_FOLIO = 14,
    igDraftPrintPaperSize_QUARTO = 15,
    igDraftPrintPaperSize_10X14 = 16,
    igDraftPrintPaperSize_11X17 = 17,
    igDraftPrintPaperSize_NOTE = 18,
    igDraftPrintPaperSize_ENV_9 = 19,
    igDraftPrintPaperSize_ENV_10 = 20,
    igDraftPrintPaperSize_ENV_11 = 21,
    igDraftPrintPaperSize_ENV_12 = 22,
    igDraftPrintPaperSize_ENV_14 = 23,
    igDraftPrintPaperSize_CSHEET = 24,
    igDraftPrintPaperSize_DSHEET = 25,
    igDraftPrintPaperSize_ESHEET = 26,
    igDraftPrintPaperSize_ENV_DL = 27,
    igDraftPrintPaperSize_ENV_C5 = 28,
    igDraftPrintPaperSize_ENV_C3 = 29,
    igDraftPrintPaperSize_ENV_C4 = 30,
    igDraftPrintPaperSize_ENV_C6 = 31,
    igDraftPrintPaperSize_ENV_C65 = 32,
    igDraftPrintPaperSize_ENV_B4 = 33,
    igDraftPrintPaperSize_ENV_B5 = 34,
    igDraftPrintPaperSize_ENV_B6 = 35,
    igDraftPrintPaperSize_ENV_ITALY = 36,
    igDraftPrintPaperSize_ENV_MONARCH = 37,
    igDraftPrintPaperSize_ENV_PERSONAL = 38,
    igDraftPrintPaperSize_FANFOLD_US = 39,
    igDraftPrintPaperSize_FANFOLD_STD_GERMAN = 40,
    igDraftPrintPaperSize_FANFOLD_LGL_GERMAN = 41,
    igDraftPrintPaperSize_ISO_B4 = 42,
    igDraftPrintPaperSize_JAPANESE_POSTCARD = 43,
    igDraftPrintPaperSize_9X11 = 44,
    igDraftPrintPaperSize_10X11 = 45,
    igDraftPrintPaperSize_15X11 = 46,
    igDraftPrintPaperSize_ENV_INVITE = 47,
    igDraftPrintPaperSize_LETTER_EXTRA = 50,
    igDraftPrintPaperSize_LEGAL_EXTRA = 51,
    igDraftPrintPaperSize_TABLOID_EXTRA = 52,
    igDraftPrintPaperSize_A4_EXTRA = 53,
    igDraftPrintPaperSize_LETTER_TRANSVERSE = 54,
    igDraftPrintPaperSize_A4_TRANSVERSE = 55,
    igDraftPrintPaperSize_LETTER_EXTRA_TRANSVERSE = 56,
    igDraftPrintPaperSize_A_PLUS = 57,
    igDraftPrintPaperSize_B_PLUS = 58,
    igDraftPrintPaperSize_A4_PLUS = 60,
    igDraftPrintPaperSize_A5_TRANSVERSE = 61,
    igDraftPrintPaperSize_A3_EXTRA = 63,
    igDraftPrintPaperSize_A5_EXTRA = 64,
    igDraftPrintPaperSize_B5_EXTRA = 65,
    igDraftPrintPaperSize_A2 = 66,
    igDraftPrintPaperSize_A3_TRANSVERSE = 67,
    igDraftPrintPaperSize_A3_EXTRA_TRANSVERSE = 68,
    igDraftPrintPaperSize_DBL_JAPANESE_POSTCARD = 69,
    igDraftPrintPaperSize_A6 = 70,
    igDraftPrintPaperSize_JENV_KAKU2 = 71,
    igDraftPrintPaperSize_JENV_KAKU3 = 72,
    igDraftPrintPaperSize_CHOU3 = 73,
    igDraftPrintPaperSize_CHOU4 = 74,
    igDraftPrintPaperSize_LETTER_ROTATED = 75,
    igDraftPrintPaperSize_A3_ROTATED = 76,
    igDraftPrintPaperSize_A4_ROTATED = 77,
    igDraftPrintPaperSize_A5_ROTATED = 78,
    igDraftPrintPaperSize_B4_JIS_ROTATED = 79,
    igDraftPrintPaperSize_B5_JIS_ROTATED = 80,
    igDraftPrintPaperSize_JAPANESE_POSTCARD_ROTATED = 81,
    igDraftPrintPaperSize_DBL_JAPANESE_POSTCARD_ROTATED = 82,
    igDraftPrintPaperSize_A6_ROTATED = 83,
    igDraftPrintPaperSize_JENV_KAKU2_ROTATED = 84,
    igDraftPrintPaperSize_JENV_KAKU3_ROTATED = 85,
    igDraftPrintPaperSize_CHOU3_ROTATED = 86,
    igDraftPrintPaperSize_CHOU4_ROTATED = 87,
    igDraftPrintPaperSize_B6_JIS = 88,
    igDraftPrintPaperSize_B6_JIS_ROTATED = 89,
    igDraftPrintPaperSize_12X11 = 90,
    igDraftPrintPaperSize_JENV_YOU4 = 91,
    igDraftPrintPaperSize_JENV_YOU4_ROTATED = 92,
    igDraftPrintPaperSize_P16K = 93,
    igDraftPrintPaperSize_P32K = 94,
    igDraftPrintPaperSize_P32KBIG = 95,
    igDraftPrintPaperSize_PENV_1 = 96,
    igDraftPrintPaperSize_PENV_2 = 97,
    igDraftPrintPaperSize_PENV_3 = 98,
    igDraftPrintPaperSize_PENV_4 = 99,
    igDraftPrintPaperSize_PENV_5 = 100,
    igDraftPrintPaperSize_PENV_6 = 101,
    igDraftPrintPaperSize_PENV_7 = 102,
    igDraftPrintPaperSize_PENV_8 = 103,
    igDraftPrintPaperSize_PENV_9 = 104,
    igDraftPrintPaperSize_PENV_10 = 105,
    igDraftPrintPaperSize_P16K_ROTATED = 106,
    igDraftPrintPaperSize_P32K_ROTATED = 107,
    igDraftPrintPaperSize_P32KBIG_ROTATED = 108,
    igDraftPrintPaperSize_PENV_1_ROTATED = 109,
    igDraftPrintPaperSize_PENV_2_ROTATED = 110,
    igDraftPrintPaperSize_PENV_3_ROTATED = 111,
    igDraftPrintPaperSize_PENV_4_ROTATED = 112,
    igDraftPrintPaperSize_PENV_5_ROTATED = 113,
    igDraftPrintPaperSize_PENV_6_ROTATED = 114,
    igDraftPrintPaperSize_PENV_7_ROTATED = 115,
    igDraftPrintPaperSize_PENV_8_ROTATED = 116,
    igDraftPrintPaperSize_PENV_9_ROTATED = 117,
    igDraftPrintPaperSize_PENV_10_ROTATED = 118
};

struct __declspec(uuid("61a86697-d191-488e-88c0-948e90c8c4ef"))
_IDraftPrintUtilityAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetUnits,put=PutUnits))
    enum DraftPrintUnitsConstants Units;
    __declspec(property(get=GetPrintAsBlack,put=PutPrintAsBlack))
    VARIANT_BOOL PrintAsBlack;
    __declspec(property(get=GetScaleLineWidths,put=PutScaleLineWidths))
    VARIANT_BOOL ScaleLineWidths;
    __declspec(property(get=GetScaleLineTypes,put=PutScaleLineTypes))
    VARIANT_BOOL ScaleLineTypes;
    __declspec(property(get=GetUsePrinterClipping,put=PutUsePrinterClipping))
    VARIANT_BOOL UsePrinterClipping;
    __declspec(property(get=GetPrintToFile,put=PutPrintToFile))
    VARIANT_BOOL PrintToFile;
    __declspec(property(get=GetPrintToFilePath,put=PutPrintToFilePath))
    _bstr_t PrintToFilePath;
    __declspec(property(get=GetPrintToFileName,put=PutPrintToFileName))
    _bstr_t PrintToFileName;
    __declspec(property(get=GetSingleSheetScale,put=PutSingleSheetScale))
    double SingleSheetScale;
    __declspec(property(get=GetCenter,put=PutCenter))
    VARIANT_BOOL Center;
    __declspec(property(get=GetAutoOrient,put=PutAutoOrient))
    VARIANT_BOOL AutoOrient;
    __declspec(property(get=GetBestFit,put=PutBestFit))
    VARIANT_BOOL BestFit;
    __declspec(property(get=GetMultipleSheetScale,put=PutMultipleSheetScale))
    double MultipleSheetScale;
    __declspec(property(get=GetGap,put=PutGap))
    double Gap;
    __declspec(property(get=GetDisplaySheetBoundary,put=PutDisplaySheetBoundary))
    VARIANT_BOOL DisplaySheetBoundary;
    __declspec(property(get=GetDisplayCutLine,put=PutDisplayCutLine))
    VARIANT_BOOL DisplayCutLine;
    __declspec(property(get=GetUsePrinterMargins,put=PutUsePrinterMargins))
    VARIANT_BOOL UsePrinterMargins;
    __declspec(property(get=GetScaleTooLarge,put=PutScaleTooLarge))
    enum DraftPrintScaleTooLargeActionConstants ScaleTooLarge;
    __declspec(property(get=GetOrientation,put=PutOrientation))
    enum DraftPrintOrientationConstants Orientation;
    __declspec(property(get=GetPaperWidth,put=PutPaperWidth))
    double PaperWidth;
    __declspec(property(get=GetPaperHeight,put=PutPaperHeight))
    double PaperHeight;
    __declspec(property(get=GetPaperSize,put=PutPaperSize))
    enum DraftPrintPaperSizeConstants PaperSize;
    __declspec(property(get=GetCopies,put=PutCopies))
    short Copies;
    __declspec(property(get=GetIncludeWatermark,put=PutIncludeWatermark))
    VARIANT_BOOL IncludeWatermark;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    TGFramework::ApplicationPtr Parent;
    __declspec(property(get=GetPrinter,put=PutPrinter))
    _bstr_t Printer;
    __declspec(property(get=GetSheetsPerPage,put=PutSheetsPerPage))
    enum DraftPrintSheetsPerPageConstants SheetsPerPage;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    TGFramework::ApplicationPtr GetParent ( );
    _bstr_t GetPrinter ( );
    void PutPrinter (
        _bstr_t pPrinter );
    HRESULT AddFile (
        _bstr_t FileName );
    HRESULT AddDocument (
        struct DraftDocument * pDocument );
    HRESULT AddSheet (
        struct Sheet * pSheet );
    HRESULT RemoveAllDocuments ( );
    enum DraftPrintSheetsPerPageConstants GetSheetsPerPage ( );
    void PutSheetsPerPage (
        enum DraftPrintSheetsPerPageConstants pSheetsPerPage );
    enum DraftPrintUnitsConstants GetUnits ( );
    void PutUnits (
        enum DraftPrintUnitsConstants pUnits );
    VARIANT_BOOL GetPrintAsBlack ( );
    void PutPrintAsBlack (
        VARIANT_BOOL pPrintAsBlack );
    VARIANT_BOOL GetScaleLineWidths ( );
    void PutScaleLineWidths (
        VARIANT_BOOL pScaleLineWidths );
    VARIANT_BOOL GetScaleLineTypes ( );
    void PutScaleLineTypes (
        VARIANT_BOOL pScaleLineTypes );
    VARIANT_BOOL GetUsePrinterClipping ( );
    void PutUsePrinterClipping (
        VARIANT_BOOL pUsePrinterClipping );
    enum DraftPrintScaleTooLargeActionConstants GetScaleTooLarge ( );
    void PutScaleTooLarge (
        enum DraftPrintScaleTooLargeActionConstants pAction );
    VARIANT_BOOL GetPrintToFile ( );
    void PutPrintToFile (
        VARIANT_BOOL pPrintToFile );
    _bstr_t GetPrintToFilePath ( );
    void PutPrintToFilePath (
        _bstr_t pPrintToFilePath );
    _bstr_t GetPrintToFileName ( );
    void PutPrintToFileName (
        _bstr_t pPrintToFileName );
    double GetSingleSheetScale ( );
    void PutSingleSheetScale (
        double pSingleSheetScale );
    VARIANT_BOOL GetCenter ( );
    void PutCenter (
        VARIANT_BOOL pCenter );
    VARIANT_BOOL GetAutoOrient ( );
    void PutAutoOrient (
        VARIANT_BOOL pAutoOrient );
    VARIANT_BOOL GetBestFit ( );
    void PutBestFit (
        VARIANT_BOOL pBestFit );
    double GetMultipleSheetScale ( );
    void PutMultipleSheetScale (
        double pMultipleSheetScale );
    double GetGap ( );
    void PutGap (
        double pGap );
    VARIANT_BOOL GetDisplaySheetBoundary ( );
    void PutDisplaySheetBoundary (
        VARIANT_BOOL pDisplaySheetBoundary );
    VARIANT_BOOL GetDisplayCutLine ( );
    void PutDisplayCutLine (
        VARIANT_BOOL pDisplayCutLine );
    VARIANT_BOOL GetUsePrinterMargins ( );
    void PutUsePrinterMargins (
        VARIANT_BOOL pUsePrinterMargins );
    HRESULT GetMargins (
        double * pdLeft,
        double * pdTop,
        double * pdRight,
        double * pdBottom );
    HRESULT SetMargins (
        double dLeft,
        double dTop,
        double dRight,
        double dBottom );
    HRESULT PrintOut ( );
    enum DraftPrintOrientationConstants GetOrientation ( );
    void PutOrientation (
        enum DraftPrintOrientationConstants pOrientation );
    double GetPaperWidth ( );
    void PutPaperWidth (
        double pPaperWidth );
    double GetPaperHeight ( );
    void PutPaperHeight (
        double pPaperHeight );
    enum DraftPrintPaperSizeConstants GetPaperSize ( );
    void PutPaperSize (
        enum DraftPrintPaperSizeConstants pPaperSize );
    short GetCopies ( );
    void PutCopies (
        short pCopies );
    HRESULT SavePreferences ( );
    HRESULT GetOrigin (
        double * pdXOrigin,
        double * pdYOrigin );
    HRESULT SetOrigin (
        double dXOrigin,
        double dYOrigin );
    VARIANT_BOOL GetIncludeWatermark ( );
    void PutIncludeWatermark (
        VARIANT_BOOL pIncludeWatermark );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct TGFramework::Application * * Parent ) = 0;
      virtual HRESULT __stdcall get_Printer (
        /*[out,retval]*/ BSTR * pPrinter ) = 0;
      virtual HRESULT __stdcall put_Printer (
        /*[in]*/ BSTR pPrinter ) = 0;
      virtual HRESULT __stdcall raw_AddFile (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_AddDocument (
        /*[in]*/ struct DraftDocument * pDocument ) = 0;
      virtual HRESULT __stdcall raw_AddSheet (
        /*[in]*/ struct Sheet * pSheet ) = 0;
      virtual HRESULT __stdcall raw_RemoveAllDocuments ( ) = 0;
      virtual HRESULT __stdcall get_SheetsPerPage (
        /*[out,retval]*/ enum DraftPrintSheetsPerPageConstants * pSheetsPerPage ) = 0;
      virtual HRESULT __stdcall put_SheetsPerPage (
        /*[in]*/ enum DraftPrintSheetsPerPageConstants pSheetsPerPage ) = 0;
      virtual HRESULT __stdcall get_Units (
        /*[out,retval]*/ enum DraftPrintUnitsConstants * pUnits ) = 0;
      virtual HRESULT __stdcall put_Units (
        /*[in]*/ enum DraftPrintUnitsConstants pUnits ) = 0;
      virtual HRESULT __stdcall get_PrintAsBlack (
        /*[out,retval]*/ VARIANT_BOOL * pPrintAsBlack ) = 0;
      virtual HRESULT __stdcall put_PrintAsBlack (
        /*[in]*/ VARIANT_BOOL pPrintAsBlack ) = 0;
      virtual HRESULT __stdcall get_ScaleLineWidths (
        /*[out,retval]*/ VARIANT_BOOL * pScaleLineWidths ) = 0;
      virtual HRESULT __stdcall put_ScaleLineWidths (
        /*[in]*/ VARIANT_BOOL pScaleLineWidths ) = 0;
      virtual HRESULT __stdcall get_ScaleLineTypes (
        /*[out,retval]*/ VARIANT_BOOL * pScaleLineTypes ) = 0;
      virtual HRESULT __stdcall put_ScaleLineTypes (
        /*[in]*/ VARIANT_BOOL pScaleLineTypes ) = 0;
      virtual HRESULT __stdcall get_UsePrinterClipping (
        /*[out,retval]*/ VARIANT_BOOL * pUsePrinterClipping ) = 0;
      virtual HRESULT __stdcall put_UsePrinterClipping (
        /*[in]*/ VARIANT_BOOL pUsePrinterClipping ) = 0;
      virtual HRESULT __stdcall get_ScaleTooLarge (
        /*[out,retval]*/ enum DraftPrintScaleTooLargeActionConstants * pAction ) = 0;
      virtual HRESULT __stdcall put_ScaleTooLarge (
        /*[in]*/ enum DraftPrintScaleTooLargeActionConstants pAction ) = 0;
      virtual HRESULT __stdcall get_PrintToFile (
        /*[out,retval]*/ VARIANT_BOOL * pPrintToFile ) = 0;
      virtual HRESULT __stdcall put_PrintToFile (
        /*[in]*/ VARIANT_BOOL pPrintToFile ) = 0;
      virtual HRESULT __stdcall get_PrintToFilePath (
        /*[out,retval]*/ BSTR * pPrintToFilePath ) = 0;
      virtual HRESULT __stdcall put_PrintToFilePath (
        /*[in]*/ BSTR pPrintToFilePath ) = 0;
      virtual HRESULT __stdcall get_PrintToFileName (
        /*[out,retval]*/ BSTR * pPrintToFileName ) = 0;
      virtual HRESULT __stdcall put_PrintToFileName (
        /*[in]*/ BSTR pPrintToFileName ) = 0;
      virtual HRESULT __stdcall get_SingleSheetScale (
        /*[out,retval]*/ double * pSingleSheetScale ) = 0;
      virtual HRESULT __stdcall put_SingleSheetScale (
        /*[in]*/ double pSingleSheetScale ) = 0;
      virtual HRESULT __stdcall get_Center (
        /*[out,retval]*/ VARIANT_BOOL * pCenter ) = 0;
      virtual HRESULT __stdcall put_Center (
        /*[in]*/ VARIANT_BOOL pCenter ) = 0;
      virtual HRESULT __stdcall get_AutoOrient (
        /*[out,retval]*/ VARIANT_BOOL * pAutoOrient ) = 0;
      virtual HRESULT __stdcall put_AutoOrient (
        /*[in]*/ VARIANT_BOOL pAutoOrient ) = 0;
      virtual HRESULT __stdcall get_BestFit (
        /*[out,retval]*/ VARIANT_BOOL * pBestFit ) = 0;
      virtual HRESULT __stdcall put_BestFit (
        /*[in]*/ VARIANT_BOOL pBestFit ) = 0;
      virtual HRESULT __stdcall get_MultipleSheetScale (
        /*[out,retval]*/ double * pMultipleSheetScale ) = 0;
      virtual HRESULT __stdcall put_MultipleSheetScale (
        /*[in]*/ double pMultipleSheetScale ) = 0;
      virtual HRESULT __stdcall get_Gap (
        /*[out,retval]*/ double * pGap ) = 0;
      virtual HRESULT __stdcall put_Gap (
        /*[in]*/ double pGap ) = 0;
      virtual HRESULT __stdcall get_DisplaySheetBoundary (
        /*[out,retval]*/ VARIANT_BOOL * pDisplaySheetBoundary ) = 0;
      virtual HRESULT __stdcall put_DisplaySheetBoundary (
        /*[in]*/ VARIANT_BOOL pDisplaySheetBoundary ) = 0;
      virtual HRESULT __stdcall get_DisplayCutLine (
        /*[out,retval]*/ VARIANT_BOOL * pDisplayCutLine ) = 0;
      virtual HRESULT __stdcall put_DisplayCutLine (
        /*[in]*/ VARIANT_BOOL pDisplayCutLine ) = 0;
      virtual HRESULT __stdcall get_UsePrinterMargins (
        /*[out,retval]*/ VARIANT_BOOL * pUsePrinterMargins ) = 0;
      virtual HRESULT __stdcall put_UsePrinterMargins (
        /*[in]*/ VARIANT_BOOL pUsePrinterMargins ) = 0;
      virtual HRESULT __stdcall raw_GetMargins (
        /*[out]*/ double * pdLeft,
        /*[out]*/ double * pdTop,
        /*[out]*/ double * pdRight,
        /*[out]*/ double * pdBottom ) = 0;
      virtual HRESULT __stdcall raw_SetMargins (
        /*[in]*/ double dLeft,
        /*[in]*/ double dTop,
        /*[in]*/ double dRight,
        /*[in]*/ double dBottom ) = 0;
      virtual HRESULT __stdcall raw_PrintOut ( ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ enum DraftPrintOrientationConstants * pOrientation ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ enum DraftPrintOrientationConstants pOrientation ) = 0;
      virtual HRESULT __stdcall get_PaperWidth (
        /*[out,retval]*/ double * pPaperWidth ) = 0;
      virtual HRESULT __stdcall put_PaperWidth (
        /*[in]*/ double pPaperWidth ) = 0;
      virtual HRESULT __stdcall get_PaperHeight (
        /*[out,retval]*/ double * pPaperHeight ) = 0;
      virtual HRESULT __stdcall put_PaperHeight (
        /*[in]*/ double pPaperHeight ) = 0;
      virtual HRESULT __stdcall get_PaperSize (
        /*[out,retval]*/ enum DraftPrintPaperSizeConstants * pPaperSize ) = 0;
      virtual HRESULT __stdcall put_PaperSize (
        /*[in]*/ enum DraftPrintPaperSizeConstants pPaperSize ) = 0;
      virtual HRESULT __stdcall get_Copies (
        /*[out,retval]*/ short * pCopies ) = 0;
      virtual HRESULT __stdcall put_Copies (
        /*[in]*/ short pCopies ) = 0;
      virtual HRESULT __stdcall raw_SavePreferences ( ) = 0;
      virtual HRESULT __stdcall raw_GetOrigin (
        /*[out]*/ double * pdXOrigin,
        /*[out]*/ double * pdYOrigin ) = 0;
      virtual HRESULT __stdcall raw_SetOrigin (
        /*[in]*/ double dXOrigin,
        /*[in]*/ double dYOrigin ) = 0;
      virtual HRESULT __stdcall get_IncludeWatermark (
        /*[out,retval]*/ VARIANT_BOOL * pIncludeWatermark ) = 0;
      virtual HRESULT __stdcall put_IncludeWatermark (
        /*[in]*/ VARIANT_BOOL pIncludeWatermark ) = 0;
};

struct __declspec(uuid("e3452040-d0df-11ce-90ac-08003601eb9a"))
ViewPlane : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDisplayCaption,put=PutDisplayCaption))
    VARIANT_BOOL DisplayCaption;
    __declspec(property(get=GetSourceDrawingView))
    DrawingViewPtr SourceDrawingView;
    __declspec(property(get=GetViewSheetNumberDefinitionText,put=PutViewSheetNumberDefinitionText))
    _bstr_t ViewSheetNumberDefinitionText;
    __declspec(property(get=GetCaption,put=PutCaption))
    _bstr_t Caption;
    __declspec(property(get=GetDisplayViewSheetNumber,put=PutDisplayViewSheetNumber))
    VARIANT_BOOL DisplayViewSheetNumber;
    __declspec(property(get=GetViewSheetNumberLocation,put=PutViewSheetNumberLocation))
    enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants ViewSheetNumberLocation;
    __declspec(property(get=GetAuto,put=PutAuto))
    VARIANT_BOOL Auto;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];
    __declspec(property(get=GetDisplayType,put=PutDisplayType))
    enum TGFrameworkSupport::DimViewPlaneDisplayTypeConstants DisplayType;
    __declspec(property(get=GetTextFont,put=PutTextFont))
    _bstr_t TextFont;
    __declspec(property(get=GetTextFontStyle,put=PutTextFontStyle))
    enum TGFrameworkSupport::DimTextFontStyleConstants TextFontStyle;
    __declspec(property(get=GetTextHeight,put=PutTextHeight))
    double TextHeight;
    __declspec(property(get=GetTextRatio,put=PutTextRatio))
    double TextRatio;
    __declspec(property(get=GetTextColor,put=PutTextColor))
    long TextColor;
    __declspec(property(get=GetStyleName,put=PutStyleName))
    _bstr_t StyleName;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetName))
    _bstr_t Name[];
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetTerminatorType,put=PutTerminatorType))
    enum TGFrameworkSupport::DimTermTypeConstants TerminatorType;
    __declspec(property(get=GetTerminatorRatio,put=PutTerminatorRatio))
    double TerminatorRatio;
    __declspec(property(get=GetLineWidth,put=PutLineWidth))
    double LineWidth;
    __declspec(property(get=GetLineType,put=PutLineType))
    _bstr_t LineType;
    __declspec(property(get=GetType))
    long Type;
    __declspec(property(get=GetCaptionDefinitionText,put=PutCaptionDefinitionText))
    _bstr_t CaptionDefinitionText;
    __declspec(property(get=GetCaptionDisplayedText))
    _bstr_t CaptionDisplayedText;
    __declspec(property(get=GetZOrder))
    long ZOrder;
    __declspec(property(get=GetKey))
    _bstr_t Key[];
    __declspec(property(get=GetDocument))
    IDispatchPtr Document;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    void PutDisplayCaption (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayCaption ( );
    DrawingViewPtr GetSourceDrawingView ( );
    _bstr_t GetCaption ( );
    void PutCaption (
        _bstr_t _arg1 );
    enum TGFrameworkSupport::DimViewPlaneDisplayTypeConstants GetDisplayType ( );
    void PutDisplayType (
        enum TGFrameworkSupport::DimViewPlaneDisplayTypeConstants _arg1 );
    _bstr_t GetTextFont ( );
    void PutTextFont (
        _bstr_t _arg1 );
    enum TGFrameworkSupport::DimTextFontStyleConstants GetTextFontStyle ( );
    void PutTextFontStyle (
        enum TGFrameworkSupport::DimTextFontStyleConstants _arg1 );
    double GetTextHeight ( );
    void PutTextHeight (
        double _arg1 );
    double GetTextRatio ( );
    void PutTextRatio (
        double _arg1 );
    long GetTextColor ( );
    void PutTextColor (
        long _arg1 );
    _bstr_t GetStyleName ( );
    void PutStyleName (
        _bstr_t _arg1 );
    enum TGFrameworkSupport::DimTermTypeConstants GetTerminatorType ( );
    void PutTerminatorType (
        enum TGFrameworkSupport::DimTermTypeConstants _arg1 );
    double GetTerminatorRatio ( );
    void PutTerminatorRatio (
        double _arg1 );
    double GetLineWidth ( );
    void PutLineWidth (
        double _arg1 );
    _bstr_t GetLineType ( );
    void PutLineType (
        _bstr_t _arg1 );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetIndex ( );
    _bstr_t GetName (
        const _variant_t & Recurse );
    IDispatchPtr GetParent ( );
    long GetType ( );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL * _arg1 );
    long GetZOrder ( );
    _bstr_t GetKey (
        const _variant_t & Recurse = vtMissing );
    IDispatchPtr GetDocument ( );
    HRESULT Copy ( );
    HRESULT Cut ( );
    HRESULT Delete ( );
    HRESULT BringToFront ( );
    HRESULT BringForward ( );
    HRESULT SendToBack ( );
    HRESULT SendBackward ( );
    HRESULT Select ( );
    HRESULT Range (
        double * min_x,
        double * min_y,
        double * max_x,
        double * max_y );
    _bstr_t GetCaptionDefinitionText ( );
    void PutCaptionDefinitionText (
        _bstr_t _arg1 );
    _bstr_t GetCaptionDisplayedText ( );
    HRESULT GetFoldLineWithViewDirection (
        double * LineStartX,
        double * LineStartY,
        double * LineEndX,
        double * LineEndY,
        double * ViewDirectionX,
        double * ViewDirectionY );
    HRESULT GetViewLineWithArrowDirection (
        double * LineStartX,
        double * LineStartY,
        double * LineEndX,
        double * LineEndY,
        double * ArrowDirectionX,
        double * ArrowDirectionY );
    _bstr_t GetViewSheetNumberDefinitionText ( );
    void PutViewSheetNumberDefinitionText (
        _bstr_t _arg1 );
    VARIANT_BOOL GetDisplayViewSheetNumber ( );
    void PutDisplayViewSheetNumber (
        VARIANT_BOOL _arg1 );
    enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants GetViewSheetNumberLocation ( );
    void PutViewSheetNumberLocation (
        enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants _arg1 );
    HRESULT GetCaptionPosition (
        VARIANT_BOOL CaptionAtStartOfLine,
        double * x,
        double * y );
    HRESULT SetCaptionPosition (
        VARIANT_BOOL CaptionAtStartOfLine,
        double x,
        double y );
    void PutAuto (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetAuto ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    HRESULT SetAuxiliaryViewArrowPosition (
        double startPosX,
        double startPosY,
        double endPosX,
        double endPosY );
};

struct __declspec(uuid("c7a308cb-428a-11ce-84a7-08003601c5f3"))
SheetWindow : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetActiveSectionType,put=PutActiveSectionType))
    enum SheetSectionTypeConstants ActiveSectionType;
    __declspec(property(get=GetDisplayBackgroundSheetTabs,put=PutDisplayBackgroundSheetTabs))
    VARIANT_BOOL DisplayBackgroundSheetTabs;
    __declspec(property(get=GetDisplayWorkingSheetTabs,put=PutDisplayWorkingSheetTabs))
    VARIANT_BOOL DisplayWorkingSheetTabs;
    __declspec(property(get=GetDisplay2DModelSheetTab,put=PutDisplay2DModelSheetTab))
    VARIANT_BOOL Display2DModelSheetTab;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetCaption,put=PutCaption))
    _bstr_t Caption;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetHeight,put=PutHeight))
    int Height;
    __declspec(property(get=GethWnd))
    long hWnd;
    __declspec(property(get=GetIndex))
    int Index;
    __declspec(property(get=GetLeft,put=PutLeft))
    int Left;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetSelectSet))
    TGFramework::SelectSetPtr SelectSet;
    __declspec(property(get=GetTop,put=PutTop))
    int Top;
    __declspec(property(get=GetType))
    _bstr_t Type;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetWidth,put=PutWidth))
    int Width;
    __declspec(property(get=GetWindowNumber))
    int WindowNumber;
    __declspec(property(get=GetWindowState,put=PutWindowState))
    int WindowState;
    __declspec(property(get=GetEnvironment,put=PutEnvironment))
    _bstr_t Environment;
    __declspec(property(get=GetIcon))
    long Icon;
    __declspec(property(get=GetActiveSheet,put=PutActiveSheet))
    SheetPtr ActiveSheet;
    __declspec(property(get=GetActiveSection,put=PutActiveSection))
    SectionPtr ActiveSection;
    __declspec(property(get=GetDisplaySheetTabs,put=PutDisplaySheetTabs))
    VARIANT_BOOL DisplaySheetTabs;
    __declspec(property(get=GetDisplaySectionTabs,put=PutDisplaySectionTabs))
    VARIANT_BOOL DisplaySectionTabs;
    __declspec(property(get=GetTransparentDisplay,put=PutTransparentDisplay))
    VARIANT_BOOL TransparentDisplay;
    __declspec(property(get=GetSheetTabRatio,put=PutSheetTabRatio))
    double SheetTabRatio;
    __declspec(property(get=GetSectionTabRatio,put=PutSectionTabRatio))
    double SectionTabRatio;
    __declspec(property(get=GetSelectedSheets))
    SelectedSheetsPtr SelectedSheets;
    __declspec(property(get=GetZoom,put=PutZoom))
    double Zoom;
    __declspec(property(get=GetUsableHeight))
    int UsableHeight;
    __declspec(property(get=GetUsableWidth))
    int UsableWidth;
    __declspec(property(get=GetDisplayHScroll,put=PutDisplayHScroll))
    VARIANT_BOOL DisplayHScroll;
    __declspec(property(get=GetDisplayVScroll,put=PutDisplayVScroll))
    VARIANT_BOOL DisplayVScroll;
    __declspec(property(get=GetBackdrop))
    TGFrameworkSupport::BackDropPtr Backdrop;
    __declspec(property(get=GetDisplayAsPrinted,put=PutDisplayAsPrinted))
    VARIANT_BOOL DisplayAsPrinted;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    void PutActiveSheet (
        struct Sheet * _arg1 );
    SheetPtr GetActiveSheet ( );
    SectionPtr GetActiveSection ( );
    void PutActiveSection (
        struct Section * _arg1 );
    enum SheetSectionTypeConstants GetActiveSectionType ( );
    void PutActiveSectionType (
        enum SheetSectionTypeConstants _arg1 );
    void PutDisplaySheetTabs (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplaySheetTabs ( );
    void PutDisplaySectionTabs (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplaySectionTabs ( );
    void PutTransparentDisplay (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetTransparentDisplay ( );
    void PutSheetTabRatio (
        double _arg1 );
    double GetSheetTabRatio ( );
    double GetSectionTabRatio ( );
    void PutSectionTabRatio (
        double _arg1 );
    SelectedSheetsPtr GetSelectedSheets ( );
    void PutZoom (
        double _arg1 );
    double GetZoom ( );
    int GetUsableHeight ( );
    int GetUsableWidth ( );
    VARIANT_BOOL GetDisplayHScroll ( );
    void PutDisplayHScroll (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayVScroll ( );
    void PutDisplayVScroll (
        VARIANT_BOOL _arg1 );
    TGFrameworkSupport::BackDropPtr GetBackdrop ( );
    void PutDisplayAsPrinted (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayAsPrinted ( );
    HRESULT Copy ( );
    HRESULT Cut ( );
    HRESULT DeselectSheet (
        const _variant_t & Sheet );
    HRESULT Paste ( );
    HRESULT WindowToModel (
        int WindowX,
        int WindowY,
        double * ModelX,
        double * ModelY );
    HRESULT ModelToWindow (
        double ModelX,
        double ModelY,
        int * WindowX,
        int * WindowY );
    HRESULT GetOrigin (
        double * x,
        double * y );
    HRESULT SetOrigin (
        double x,
        double y );
    HRESULT Pan (
        int x,
        int y );
    HRESULT SelectSheet (
        const _variant_t & Sheet,
        const _variant_t & Replace = vtMissing );
    HRESULT ZoomArea (
        int x1,
        int y1,
        int x2,
        int y2 );
    HRESULT Fit ( );
    _variant_t Key (
        const _variant_t & Recurse = vtMissing );
    HRESULT Activate ( );
    HRESULT ActivateNext ( );
    HRESULT ActivatePrevious ( );
    TGFramework::ApplicationPtr GetApplication ( );
    _bstr_t GetCaption ( );
    void PutCaption (
        _bstr_t _arg1 );
    HRESULT Close (
        const _variant_t & SaveChanges = vtMissing,
        const _variant_t & FileName = vtMissing,
        const _variant_t & RouteWorkbook = vtMissing );
    _bstr_t GetEnvironment ( );
    void PutEnvironment (
        _bstr_t _arg1 );
    int GetHeight ( );
    void PutHeight (
        int _arg1 );
    long GethWnd ( );
    int GetIndex ( );
    int GetLeft ( );
    void PutLeft (
        int _arg1 );
    IDispatchPtr GetParent ( );
    HRESULT PrintOut ( );
    TGFramework::SelectSetPtr GetSelectSet ( );
    int GetTop ( );
    void PutTop (
        int _arg1 );
    _bstr_t GetType ( );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL _arg1 );
    int GetWidth ( );
    void PutWidth (
        int _arg1 );
    int GetWindowNumber ( );
    int GetWindowState ( );
    void PutWindowState (
        int _arg1 );
    long GetIcon ( );
    HRESULT SaveAsImage (
        _bstr_t FileName,
        const _variant_t & Width,
        const _variant_t & Height,
        const _variant_t & Resolution,
        const _variant_t & ColorDepth,
        enum TGFramework::SeImageQualityType ImageQuality,
        VARIANT_BOOL Invert );
    HRESULT Update ( );
    HRESULT FitEx (
        enum SheetFitConstants FitOption );
    void PutDisplayBackgroundSheetTabs (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayBackgroundSheetTabs ( );
    void PutDisplayWorkingSheetTabs (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayWorkingSheetTabs ( );
    void PutDisplay2DModelSheetTab (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplay2DModelSheetTab ( );
    HRESULT ZoomAreaEx (
        double x1,
        double y1,
        double x2,
        double y2 );
    HRESULT BeginSheetViewDynamics ( );
    HRESULT EndSheetViewDynamics ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
};

struct __declspec(uuid("189e730b-b634-4b04-9465-f4ebbaf9a1dc"))
DraftPrintUtility : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetUnits,put=PutUnits))
    enum DraftPrintUnitsConstants Units;
    __declspec(property(get=GetPrintAsBlack,put=PutPrintAsBlack))
    VARIANT_BOOL PrintAsBlack;
    __declspec(property(get=GetScaleLineWidths,put=PutScaleLineWidths))
    VARIANT_BOOL ScaleLineWidths;
    __declspec(property(get=GetScaleLineTypes,put=PutScaleLineTypes))
    VARIANT_BOOL ScaleLineTypes;
    __declspec(property(get=GetUsePrinterClipping,put=PutUsePrinterClipping))
    VARIANT_BOOL UsePrinterClipping;
    __declspec(property(get=GetPrintToFile,put=PutPrintToFile))
    VARIANT_BOOL PrintToFile;
    __declspec(property(get=GetPrintToFilePath,put=PutPrintToFilePath))
    _bstr_t PrintToFilePath;
    __declspec(property(get=GetPrintToFileName,put=PutPrintToFileName))
    _bstr_t PrintToFileName;
    __declspec(property(get=GetSingleSheetScale,put=PutSingleSheetScale))
    double SingleSheetScale;
    __declspec(property(get=GetCenter,put=PutCenter))
    VARIANT_BOOL Center;
    __declspec(property(get=GetAutoOrient,put=PutAutoOrient))
    VARIANT_BOOL AutoOrient;
    __declspec(property(get=GetBestFit,put=PutBestFit))
    VARIANT_BOOL BestFit;
    __declspec(property(get=GetMultipleSheetScale,put=PutMultipleSheetScale))
    double MultipleSheetScale;
    __declspec(property(get=GetGap,put=PutGap))
    double Gap;
    __declspec(property(get=GetDisplaySheetBoundary,put=PutDisplaySheetBoundary))
    VARIANT_BOOL DisplaySheetBoundary;
    __declspec(property(get=GetDisplayCutLine,put=PutDisplayCutLine))
    VARIANT_BOOL DisplayCutLine;
    __declspec(property(get=GetUsePrinterMargins,put=PutUsePrinterMargins))
    VARIANT_BOOL UsePrinterMargins;
    __declspec(property(get=GetScaleTooLarge,put=PutScaleTooLarge))
    enum DraftPrintScaleTooLargeActionConstants ScaleTooLarge;
    __declspec(property(get=GetOrientation,put=PutOrientation))
    enum DraftPrintOrientationConstants Orientation;
    __declspec(property(get=GetPaperWidth,put=PutPaperWidth))
    double PaperWidth;
    __declspec(property(get=GetPaperHeight,put=PutPaperHeight))
    double PaperHeight;
    __declspec(property(get=GetPaperSize,put=PutPaperSize))
    enum DraftPrintPaperSizeConstants PaperSize;
    __declspec(property(get=GetCopies,put=PutCopies))
    short Copies;
    __declspec(property(get=GetIncludeWatermark,put=PutIncludeWatermark))
    VARIANT_BOOL IncludeWatermark;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    TGFramework::ApplicationPtr Parent;
    __declspec(property(get=GetPrinter,put=PutPrinter))
    _bstr_t Printer;
    __declspec(property(get=GetSheetsPerPage,put=PutSheetsPerPage))
    enum DraftPrintSheetsPerPageConstants SheetsPerPage;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    TGFramework::ApplicationPtr GetParent ( );
    _bstr_t GetPrinter ( );
    void PutPrinter (
        _bstr_t _arg1 );
    HRESULT AddFile (
        _bstr_t FileName );
    HRESULT AddDocument (
        struct DraftDocument * pDocument );
    HRESULT AddSheet (
        struct Sheet * pSheet );
    HRESULT RemoveAllDocuments ( );
    enum DraftPrintSheetsPerPageConstants GetSheetsPerPage ( );
    void PutSheetsPerPage (
        enum DraftPrintSheetsPerPageConstants _arg1 );
    enum DraftPrintUnitsConstants GetUnits ( );
    void PutUnits (
        enum DraftPrintUnitsConstants _arg1 );
    VARIANT_BOOL GetPrintAsBlack ( );
    void PutPrintAsBlack (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetScaleLineWidths ( );
    void PutScaleLineWidths (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetScaleLineTypes ( );
    void PutScaleLineTypes (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetUsePrinterClipping ( );
    void PutUsePrinterClipping (
        VARIANT_BOOL _arg1 );
    enum DraftPrintScaleTooLargeActionConstants GetScaleTooLarge ( );
    void PutScaleTooLarge (
        enum DraftPrintScaleTooLargeActionConstants _arg1 );
    VARIANT_BOOL GetPrintToFile ( );
    void PutPrintToFile (
        VARIANT_BOOL _arg1 );
    _bstr_t GetPrintToFilePath ( );
    void PutPrintToFilePath (
        _bstr_t _arg1 );
    _bstr_t GetPrintToFileName ( );
    void PutPrintToFileName (
        _bstr_t _arg1 );
    double GetSingleSheetScale ( );
    void PutSingleSheetScale (
        double _arg1 );
    VARIANT_BOOL GetCenter ( );
    void PutCenter (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetAutoOrient ( );
    void PutAutoOrient (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetBestFit ( );
    void PutBestFit (
        VARIANT_BOOL _arg1 );
    double GetMultipleSheetScale ( );
    void PutMultipleSheetScale (
        double _arg1 );
    double GetGap ( );
    void PutGap (
        double _arg1 );
    VARIANT_BOOL GetDisplaySheetBoundary ( );
    void PutDisplaySheetBoundary (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayCutLine ( );
    void PutDisplayCutLine (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetUsePrinterMargins ( );
    void PutUsePrinterMargins (
        VARIANT_BOOL _arg1 );
    HRESULT GetMargins (
        double * pdLeft,
        double * pdTop,
        double * pdRight,
        double * pdBottom );
    HRESULT SetMargins (
        double dLeft,
        double dTop,
        double dRight,
        double dBottom );
    HRESULT PrintOut ( );
    enum DraftPrintOrientationConstants GetOrientation ( );
    void PutOrientation (
        enum DraftPrintOrientationConstants _arg1 );
    double GetPaperWidth ( );
    void PutPaperWidth (
        double _arg1 );
    double GetPaperHeight ( );
    void PutPaperHeight (
        double _arg1 );
    enum DraftPrintPaperSizeConstants GetPaperSize ( );
    void PutPaperSize (
        enum DraftPrintPaperSizeConstants _arg1 );
    short GetCopies ( );
    void PutCopies (
        short _arg1 );
    HRESULT SavePreferences ( );
    HRESULT GetOrigin (
        double * pdXOrigin,
        double * pdYOrigin );
    HRESULT SetOrigin (
        double dXOrigin,
        double dYOrigin );
    VARIANT_BOOL GetIncludeWatermark ( );
    void PutIncludeWatermark (
        VARIANT_BOOL _arg1 );
};

struct __declspec(uuid("e74d3026-4a6f-4dcb-8493-dcd4f997cbad"))
ViewPlanes : IDispatch
{};

//
// Function implementation mapping
//

#pragma start_map_region("D:\visualstudio\project\TGCAD\TGCAD\x64\Debug\tgdraft.tli")
__declspec(implementation_key(1)) TGFramework::ApplicationPtr BlockView::GetApplication ( );
__declspec(implementation_key(2)) IDispatchPtr BlockView::GetDocument ( );
__declspec(implementation_key(3)) long BlockView::GetIndex ( );
__declspec(implementation_key(4)) void BlockView::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(5)) _bstr_t BlockView::GetName ( );
__declspec(implementation_key(6)) IDispatchPtr BlockView::GetParent ( );
__declspec(implementation_key(7)) HRESULT BlockView::Delete ( );
__declspec(implementation_key(8)) TGFrameworkSupport::Lines2dPtr BlockView::GetLines2d ( );
__declspec(implementation_key(9)) TGFrameworkSupport::Circles2dPtr BlockView::GetCircles2d ( );
__declspec(implementation_key(10)) TGFrameworkSupport::Arcs2dPtr BlockView::GetArcs2d ( );
__declspec(implementation_key(11)) TGFrameworkSupport::Ellipses2dPtr BlockView::GetEllipses2d ( );
__declspec(implementation_key(12)) TGFrameworkSupport::BSplineCurves2dPtr BlockView::GetBsplineCurves2d ( );
__declspec(implementation_key(13)) TGFrameworkSupport::Points2dPtr BlockView::GetPoints2d ( );
__declspec(implementation_key(14)) TGFrameworkSupport::EllipticalArcs2dPtr BlockView::GetEllipticalArcs2d ( );
__declspec(implementation_key(15)) TGFrameworkSupport::Curves2dPtr BlockView::GetCurves2d ( );
__declspec(implementation_key(16)) TGFrameworkSupport::LineStrings2dPtr BlockView::GetLineStrings2d ( );
__declspec(implementation_key(17)) TGFrameworkSupport::ComplexStrings2dPtr BlockView::GetComplexStrings2d ( );
__declspec(implementation_key(18)) TGFrameworkSupport::Boundaries2dPtr BlockView::GetBoundaries2d ( );
__declspec(implementation_key(19)) TGFrameworkSupport::DimensionsPtr BlockView::GetDimensions ( );
__declspec(implementation_key(20)) TGFrameworkSupport::LeadersPtr BlockView::GetLeaders ( );
__declspec(implementation_key(21)) TGFrameworkSupport::BalloonsPtr BlockView::GetBalloons ( );
__declspec(implementation_key(22)) TGFrameworkSupport::TextBoxesPtr BlockView::GetTextBoxes ( );
__declspec(implementation_key(23)) TGFrameworkSupport::Relations2dPtr BlockView::GetRelations2d ( );
__declspec(implementation_key(24)) TGFrameworkSupport::SmartFrames2dPtr BlockView::GetSmartFrames2d ( );
__declspec(implementation_key(25)) TGFrameworkSupport::DatumFramesPtr BlockView::GetDatumFrames ( );
__declspec(implementation_key(26)) TGFrameworkSupport::FeatureControlFramesPtr BlockView::GetFeatureControlFrames ( );
__declspec(implementation_key(27)) TGFrameworkSupport::SurfaceFinishSymbolsPtr BlockView::GetSurfaceFinishSymbols ( );
__declspec(implementation_key(28)) TGFrameworkSupport::WeldSymbolsPtr BlockView::GetWeldSymbols ( );
__declspec(implementation_key(29)) TGFrameworkSupport::CenterMarksPtr BlockView::GetCenterMarks ( );
__declspec(implementation_key(30)) TGFrameworkSupport::CenterLinesPtr BlockView::GetCenterLines ( );
__declspec(implementation_key(31)) TGFrameworkSupport::DatumTargetsPtr BlockView::GetDatumTargets ( );
__declspec(implementation_key(32)) TGFrameworkSupport::PinSymbolsPtr BlockView::GetPinSymbols ( );
__declspec(implementation_key(33)) TGFrameworkSupport::DatumPointsPtr BlockView::GetDatumPoints ( );
__declspec(implementation_key(34)) TGFrameworkSupport::CornerAnnotationsPtr BlockView::GetCornerAnnotations ( );
__declspec(implementation_key(35)) IDispatchPtr BlockView::GetAttributeSets ( );
__declspec(implementation_key(36)) VARIANT_BOOL BlockView::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(37)) TGFrameworkSupport::BoltHoleCirclesPtr BlockView::GetBoltHoleCircles ( );
__declspec(implementation_key(38)) TGFrameworkSupport::ConnectorsPtr BlockView::GetConnectors ( );
__declspec(implementation_key(39)) HRESULT BlockView::SetOrigin ( double x, double y );
__declspec(implementation_key(40)) HRESULT BlockView::GetOrigin ( double * x, double * y );
__declspec(implementation_key(41)) HRESULT BlockView::ReplaceGraphics ( const _variant_t & DeleteSelectedGraphics );
__declspec(implementation_key(42)) HRESULT BlockView::UpdatePreview ( );
__declspec(implementation_key(43)) DrawingViewsPtr BlockView::GetDrawingViews ( );
__declspec(implementation_key(44)) BlockOccurrencesPtr BlockView::GetBlockOccurrences ( );
__declspec(implementation_key(45)) BlockLabelsPtr BlockView::GetBlockLabels ( );
__declspec(implementation_key(46)) TGFrameworkSupport::Images2dPtr BlockView::GetImages2d ( );
__declspec(implementation_key(47)) TGFramework::ApplicationPtr DrawingViews::GetApplication ( );
__declspec(implementation_key(48)) long DrawingViews::GetCount ( );
__declspec(implementation_key(49)) IDispatchPtr DrawingViews::GetParent ( );
__declspec(implementation_key(50)) DrawingViewPtr DrawingViews::Item ( const _variant_t & Index );
__declspec(implementation_key(51)) DrawingViewPtr DrawingViews::Add ( struct ModelLink * From, enum ViewOrientationConstants Orientation, double Scale, double x, double y );
__declspec(implementation_key(52)) DrawingViewPtr DrawingViews::AddWithConfiguration ( struct ModelLink * From, enum ViewOrientationConstants Orientation, double Scale, double x, double y, _bstr_t ConfigFileName, _bstr_t ConfigurationName );
__declspec(implementation_key(53)) DrawingViewPtr DrawingViews::AddByFold ( struct DrawingView * From, enum FoldTypeConstants foldDir, double x, double y );
__declspec(implementation_key(54)) DrawingViewPtr DrawingViews::AddByAuxiliaryFold ( struct DrawingView * From, double x1, double y1, double x2, double y2, double x3, double y3 );
__declspec(implementation_key(55)) DrawingViewPtr DrawingViews::AddByDetailEnvelope ( struct DrawingView * From, double x1, double y1, double Radius, double Scale, double x2, double y2 );
__declspec(implementation_key(56)) DrawingViewPtr DrawingViews::AddDraftView ( double Scale, double x1, double y1 );
__declspec(implementation_key(57)) DrawingViewPtr DrawingViews::AddByDraftView ( struct DrawingView * From, double Scale, double x1, double y1 );
__declspec(implementation_key(58)) HRESULT DrawingViews::Align ( );
__declspec(implementation_key(59)) HRESULT DrawingViews::Unalign ( );
__declspec(implementation_key(60)) DrawingViewPtr DrawingViews::AddAssemblyView ( struct ModelLink * From, enum ViewOrientationConstants Orientation, double Scale, double x, double y, enum AssemblyDrawingViewTypeConstants ViewType, _bstr_t ConfigurationName, VARIANT_BOOL Snapshot, long SnapShotQuality );
__declspec(implementation_key(61)) DrawingViewPtr DrawingViews::AddPartView ( struct ModelLink * From, enum ViewOrientationConstants Orientation, double Scale, double x, double y, enum PartDrawingViewTypeConstants ViewType );
__declspec(implementation_key(62)) DrawingViewPtr DrawingViews::AddSheetMetalView ( struct ModelLink * From, enum ViewOrientationConstants Orientation, double Scale, double x, double y, enum SheetMetalDrawingViewTypeConstants ViewType );
__declspec(implementation_key(63)) DrawingViewPtr DrawingViews::AddWeldmentView ( struct ModelLink * From, enum ViewOrientationConstants Orientation, double Scale, double x, double y, enum WeldmentDrawingViewTypeConstants ViewType );
__declspec(implementation_key(64)) DrawingViewPtr DrawingViews::AddDetailView ( struct DrawingView * From, double x1, double y1, double Radius, double Scale, double x2, double y2, VARIANT_BOOL Independent );
__declspec(implementation_key(65)) DrawingViewPtr DrawingViews::Add2dModelView ( double Scale, double x1, double y1 );
__declspec(implementation_key(66)) DrawingViewPtr DrawingViews::AddPMIModelView ( struct ModelLink * From, _bstr_t ModelViewName, double Scale, double x, double y, VARIANT_BOOL IncludePMIDimensions, VARIANT_BOOL UseDraftQuality, long DraftQuality );
__declspec(implementation_key(67)) DrawingViewPtr DrawingViews::AddEmptyView ( struct ModelLink * From, enum DrawingViewDefaultsConstants CreationDefaults );
__declspec(implementation_key(68)) double DrawingView::GetScaleFactor ( );
__declspec(implementation_key(69)) void DrawingView::PutScaleFactor ( double _arg1 );
__declspec(implementation_key(70)) HRESULT DrawingView::GetOrigin ( double * x, double * y );
__declspec(implementation_key(71)) HRESULT DrawingView::SetOrigin ( double x, double y );
__declspec(implementation_key(72)) enum DrawingViewTypeConstants DrawingView::GetDrawingViewType ( );
__declspec(implementation_key(73)) double DrawingView::GetCropLeft ( );
__declspec(implementation_key(74)) void DrawingView::PutCropLeft ( double _arg1 );
__declspec(implementation_key(75)) double DrawingView::GetCropRight ( );
__declspec(implementation_key(76)) void DrawingView::PutCropRight ( double _arg1 );
__declspec(implementation_key(77)) double DrawingView::GetCropTop ( );
__declspec(implementation_key(78)) void DrawingView::PutCropTop ( double _arg1 );
__declspec(implementation_key(79)) double DrawingView::GetCropBottom ( );
__declspec(implementation_key(80)) void DrawingView::PutCropBottom ( double _arg1 );
__declspec(implementation_key(81)) VARIANT_BOOL DrawingView::GetCrop ( );
__declspec(implementation_key(82)) void DrawingView::PutCrop ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(83)) _bstr_t DrawingView::GetCaption ( );
__declspec(implementation_key(84)) void DrawingView::PutCaption ( _bstr_t _arg1 );
__declspec(implementation_key(85)) _bstr_t DrawingView::GetSuffix ( );
__declspec(implementation_key(86)) _bstr_t DrawingView::GetDescription ( );
__declspec(implementation_key(87)) void DrawingView::PutDescription ( _bstr_t _arg1 );
__declspec(implementation_key(88)) VARIANT_BOOL DrawingView::GetDisplayCaption ( );
__declspec(implementation_key(89)) void DrawingView::PutDisplayCaption ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(90)) VARIANT_BOOL DrawingView::GetDisplaySuffix ( );
__declspec(implementation_key(91)) void DrawingView::PutDisplaySuffix ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(92)) VARIANT_BOOL DrawingView::GetDisplayScale ( );
__declspec(implementation_key(93)) void DrawingView::PutDisplayScale ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(94)) VARIANT_BOOL DrawingView::GetDisplayAnnotation ( );
__declspec(implementation_key(95)) void DrawingView::PutDisplayAnnotation ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(96)) IDispatchPtr DrawingView::GetAnnotation ( );
__declspec(implementation_key(97)) IDispatchPtr DrawingView::GetSheet ( );
__declspec(implementation_key(98)) void DrawingView::PutSheet ( IDispatch * _arg1 );
__declspec(implementation_key(99)) VARIANT_BOOL DrawingView::GetDisplayWindow ( );
__declspec(implementation_key(100)) void DrawingView::PutDisplayWindow ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(101)) IDispatchPtr DrawingView::GetModelLink ( );
__declspec(implementation_key(102)) VARIANT_BOOL DrawingView::GetIsUpToDate ( );
__declspec(implementation_key(103)) HRESULT DrawingView::SheetToView ( double xSheet, double ySheet, double * xView, double * yView );
__declspec(implementation_key(104)) HRESULT DrawingView::ViewToSheet ( double xView, double yView, double * xSheet, double * ySheet );
__declspec(implementation_key(105)) IDispatchPtr DrawingView::Drop ( );
__declspec(implementation_key(106)) HRESULT DrawingView::Update ( );
__declspec(implementation_key(107)) _bstr_t DrawingView::GetTextFont ( );
__declspec(implementation_key(108)) void DrawingView::PutTextFont ( _bstr_t _arg1 );
__declspec(implementation_key(109)) enum TGFrameworkSupport::DimTextFontStyleConstants DrawingView::GetTextFontStyle ( );
__declspec(implementation_key(110)) void DrawingView::PutTextFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants _arg1 );
__declspec(implementation_key(111)) double DrawingView::GetTextHeight ( );
__declspec(implementation_key(112)) void DrawingView::PutTextHeight ( double _arg1 );
__declspec(implementation_key(113)) double DrawingView::GetTextRatio ( );
__declspec(implementation_key(114)) void DrawingView::PutTextRatio ( double _arg1 );
__declspec(implementation_key(115)) long DrawingView::GetTextColor ( );
__declspec(implementation_key(116)) void DrawingView::PutTextColor ( long _arg1 );
__declspec(implementation_key(117)) _bstr_t DrawingView::GetStyleName ( );
__declspec(implementation_key(118)) void DrawingView::PutStyleName ( _bstr_t _arg1 );
__declspec(implementation_key(119)) TGFramework::ApplicationPtr DrawingView::GetApplication ( );
__declspec(implementation_key(120)) long DrawingView::GetIndex ( );
__declspec(implementation_key(121)) _bstr_t DrawingView::GetName ( const _variant_t & Recurse );
__declspec(implementation_key(122)) IDispatchPtr DrawingView::GetParent ( );
__declspec(implementation_key(123)) long DrawingView::GetType ( );
__declspec(implementation_key(124)) VARIANT_BOOL DrawingView::GetVisible ( );
__declspec(implementation_key(125)) void DrawingView::PutVisible ( VARIANT_BOOL * _arg1 );
__declspec(implementation_key(126)) long DrawingView::GetZOrder ( );
__declspec(implementation_key(127)) _bstr_t DrawingView::GetKey ( const _variant_t & Recurse );
__declspec(implementation_key(128)) IDispatchPtr DrawingView::GetDocument ( );
__declspec(implementation_key(129)) HRESULT DrawingView::Copy ( );
__declspec(implementation_key(130)) HRESULT DrawingView::Cut ( );
__declspec(implementation_key(131)) HRESULT DrawingView::Delete ( );
__declspec(implementation_key(132)) HRESULT DrawingView::BringToFront ( );
__declspec(implementation_key(133)) HRESULT DrawingView::BringForward ( );
__declspec(implementation_key(134)) HRESULT DrawingView::SendToBack ( );
__declspec(implementation_key(135)) HRESULT DrawingView::SendBackward ( );
__declspec(implementation_key(136)) HRESULT DrawingView::Select ( );
__declspec(implementation_key(137)) HRESULT DrawingView::Range ( double * min_x, double * min_y, double * max_x, double * max_y );
__declspec(implementation_key(138)) CoordinateSystems2dPtr DrawingView::GetCoordinateSystems2d ( );
__declspec(implementation_key(139)) HRESULT DrawingView::GetActiveCoordinateSystem ( VARIANT * CoordinateSystem2d, VARIANT * AlignmentAxis );
__declspec(implementation_key(140)) HRESULT DrawingView::SetActiveCoordinateSystem ( const _variant_t & CoordinateSystem2d, const _variant_t & AlignmentAxis );
__declspec(implementation_key(141)) ModelMembersPtr DrawingView::GetModelMembers ( );
__declspec(implementation_key(142)) GraphicMembersPtr DrawingView::GetGraphicMembers ( );
__declspec(implementation_key(143)) VARIANT_BOOL DrawingView::GetShowEdgesHiddenByOtherParts ( );
__declspec(implementation_key(144)) void DrawingView::PutShowEdgesHiddenByOtherParts ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(145)) VARIANT_BOOL DrawingView::GetProcessPartIntersections ( );
__declspec(implementation_key(146)) void DrawingView::PutProcessPartIntersections ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(147)) DVLines2dPtr DrawingView::GetDVLines2d ( );
__declspec(implementation_key(148)) DVArcs2dPtr DrawingView::GetDVArcs2d ( );
__declspec(implementation_key(149)) DVBSplineCurves2dPtr DrawingView::GetDVBSplineCurves2d ( );
__declspec(implementation_key(150)) DVCircles2dPtr DrawingView::GetDVCircles2d ( );
__declspec(implementation_key(151)) DVEllipses2dPtr DrawingView::GetDVEllipses2d ( );
__declspec(implementation_key(152)) DVLineStrings2dPtr DrawingView::GetDVLineStrings2d ( );
__declspec(implementation_key(153)) DVEllipticalArcs2dPtr DrawingView::GetDVEllipticalArcs2d ( );
__declspec(implementation_key(154)) DVPoints2dPtr DrawingView::GetDVPoints2d ( );
__declspec(implementation_key(155)) _bstr_t DrawingView::GetConfiguration ( );
__declspec(implementation_key(156)) void DrawingView::PutConfiguration ( _bstr_t _arg1 );
__declspec(implementation_key(157)) HRESULT DrawingView::CheckConfiguration ( VARIANT_BOOL * UpToDate );
__declspec(implementation_key(158)) long DrawingView::GetViewType ( );
__declspec(implementation_key(159)) VARIANT_BOOL DrawingView::GetMatchConfiguration ( );
__declspec(implementation_key(160)) void DrawingView::PutMatchConfiguration ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(161)) VARIANT_BOOL DrawingView::GetScaleDimensionsAndAnnotations ( );
__declspec(implementation_key(162)) void DrawingView::PutScaleDimensionsAndAnnotations ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(163)) HRESULT DrawingView::GetReferenceToGraphicMember ( IDispatch * GraphicMember, struct TGFramework::Reference * * Reference );
__declspec(implementation_key(164)) TGFramework::ReferencePtr DrawingView::GetGetReferenceToGraphicMember2 ( IDispatch * GraphicMember );
__declspec(implementation_key(165)) HRESULT DrawingView::GetRotationAngle ( double * dRotAngle );
__declspec(implementation_key(166)) HRESULT DrawingView::SetRotationAngle ( double dRotAngle );
__declspec(implementation_key(167)) HRESULT DrawingView::GetListOfHiddenLayers ( long * NumLayers, SAFEARRAY * * HiddenLayers );
__declspec(implementation_key(168)) HRESULT DrawingView::HideLayer ( _bstr_t LayerName );
__declspec(implementation_key(169)) HRESULT DrawingView::ShowLayer ( _bstr_t LayerName );
__declspec(implementation_key(170)) VARIANT_BOOL DrawingView::IsLayerHidden ( _bstr_t LayerName );
__declspec(implementation_key(171)) HRESULT DrawingView::RetrieveDimensions ( VARIANT_BOOL IsRetrieve, _bstr_t DimensionStyleName, VARIANT_BOOL TypeLinear, VARIANT_BOOL TypeRadial, VARIANT_BOOL TypeAngular, VARIANT_BOOL TypeAnnotation, VARIANT_BOOL TypeCenterMark, VARIANT_BOOL GetDuplicatedRadial, VARIANT_BOOL GetDimensionToHiddenLines, VARIANT_BOOL ProjectCenterMark, VARIANT_BOOL ConnectCenters, VARIANT_BOOL GetCenterMarkToCircle, VARIANT_BOOL GetCenterMarkToArc );
__declspec(implementation_key(172)) HRESULT DrawingView::RetrieveCenterLinesCenterMarks ( VARIANT_BOOL IsRetrieve, _bstr_t DimensionStyleName, VARIANT_BOOL TypeCenterLine, VARIANT_BOOL TypeCenterMark, VARIANT_BOOL ProjectCenterMark, VARIANT_BOOL ConnectCenters, VARIANT_BOOL GetCenterLineToFullCylinder, VARIANT_BOOL GetCenterLineToPartialCylinder, VARIANT_BOOL GetCenterMarkToCircle, VARIANT_BOOL GetCenterMarkToArc, VARIANT_BOOL GetCenterMarkToEllipse, VARIANT_BOOL GetCenterMarkToPartialEllipse, VARIANT_BOOL EnableCenterMarkRangeCheck, VARIANT_BOOL EnableCenterLineRangeCheck, double dCenterLineMinRadius, double dCenterLineMaxRadius, double dCenterMarkMinRadius, double dCenterMarkMaxRadius );
__declspec(implementation_key(173)) VARIANT_BOOL DrawingView::GetShading ( );
__declspec(implementation_key(174)) void DrawingView::PutShading ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(175)) enum DrawingViewShadingQualityConstants DrawingView::GetShadingQuality ( );
__declspec(implementation_key(176)) void DrawingView::PutShadingQuality ( enum DrawingViewShadingQualityConstants _arg1 );
__declspec(implementation_key(177)) VARIANT_BOOL DrawingView::GetShadingAllowAssemblyOverrides ( );
__declspec(implementation_key(178)) void DrawingView::PutShadingAllowAssemblyOverrides ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(179)) VARIANT_BOOL DrawingView::GetShadingAllowPartFaceColors ( );
__declspec(implementation_key(180)) void DrawingView::PutShadingAllowPartFaceColors ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(181)) VARIANT_BOOL DrawingView::GetShadingShowVisibleEdges ( );
__declspec(implementation_key(182)) void DrawingView::PutShadingShowVisibleEdges ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(183)) VARIANT_BOOL DrawingView::GetShadingGrayscale ( );
__declspec(implementation_key(184)) void DrawingView::PutShadingGrayscale ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(185)) VARIANT_BOOL DrawingView::GetShadingFlat ( );
__declspec(implementation_key(186)) void DrawingView::PutShadingFlat ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(187)) VARIANT_BOOL DrawingView::GetShadingTextures ( );
__declspec(implementation_key(188)) void DrawingView::PutShadingTextures ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(189)) VARIANT_BOOL DrawingView::GetShadingReflections ( );
__declspec(implementation_key(190)) void DrawingView::PutShadingReflections ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(191)) VARIANT_BOOL DrawingView::GetIsSnapShot ( );
__declspec(implementation_key(192)) enum DrawingViewSnapShotQualityConstants DrawingView::GetSnapShotQuality ( );
__declspec(implementation_key(193)) void DrawingView::PutSnapShotQuality ( enum DrawingViewSnapShotQualityConstants _arg1 );
__declspec(implementation_key(194)) enum DrawingViewVHL_ToleranceOverrideQualityConstants DrawingView::GetVHL_ToleranceOverrideQuality ( );
__declspec(implementation_key(195)) void DrawingView::PutVHL_ToleranceOverrideQuality ( enum DrawingViewVHL_ToleranceOverrideQualityConstants _arg1 );
__declspec(implementation_key(196)) VARIANT_BOOL DrawingView::GetIsBroken ( );
__declspec(implementation_key(197)) HRESULT DrawingView::ModelToView ( double xModel, double yModel, double zModel, double * xView, double * yView );
__declspec(implementation_key(198)) HRESULT DrawingView::ViewOrientation ( double * ViewVector_X, double * ViewVector_Y, double * ViewVector_Z, double * LocalXVector_X, double * LocalXVector_Y, double * LocalXVector_Z, enum ViewOrientationConstants * Orientation );
__declspec(implementation_key(199)) VARIANT_BOOL DrawingView::GetSnapshot ( );
__declspec(implementation_key(200)) void DrawingView::PutSnapshot ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(201)) double DrawingView::GetTangencyTolerance ( );
__declspec(implementation_key(202)) void DrawingView::PutTangencyTolerance ( double _arg1 );
__declspec(implementation_key(203)) double DrawingView::GetThreadAxisTolerance ( );
__declspec(implementation_key(204)) void DrawingView::PutThreadAxisTolerance ( double _arg1 );
__declspec(implementation_key(205)) enum DrawingViewBsplineSimplificationConstants DrawingView::GetBsplineSimplification ( );
__declspec(implementation_key(206)) void DrawingView::PutBsplineSimplification ( enum DrawingViewBsplineSimplificationConstants _arg1 );
__declspec(implementation_key(207)) enum DrawingViewIntersectionProcessingConstants DrawingView::GetIntersectionProcessing ( );
__declspec(implementation_key(208)) void DrawingView::PutIntersectionProcessing ( enum DrawingViewIntersectionProcessingConstants _arg1 );
__declspec(implementation_key(209)) VARIANT_BOOL DrawingView::GetDefaults_ShowSectionHatch ( );
__declspec(implementation_key(210)) void DrawingView::PutDefaults_ShowSectionHatch ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(211)) VARIANT_BOOL DrawingView::GetDefaults_DeriveSectionHatchStyleNameFromPart ( );
__declspec(implementation_key(212)) void DrawingView::PutDefaults_DeriveSectionHatchStyleNameFromPart ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(213)) _bstr_t DrawingView::GetDefaults_SectionHatchStyleName ( );
__declspec(implementation_key(214)) void DrawingView::PutDefaults_SectionHatchStyleName ( _bstr_t _arg1 );
__declspec(implementation_key(215)) _bstr_t DrawingView::GetDefaults_VisibleEdgeStyleName ( );
__declspec(implementation_key(216)) void DrawingView::PutDefaults_VisibleEdgeStyleName ( _bstr_t _arg1 );
__declspec(implementation_key(217)) VARIANT_BOOL DrawingView::GetDefaults_ShowHiddenEdges ( );
__declspec(implementation_key(218)) void DrawingView::PutDefaults_ShowHiddenEdges ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(219)) _bstr_t DrawingView::GetDefaults_HiddenEdgeStyleName ( );
__declspec(implementation_key(220)) void DrawingView::PutDefaults_HiddenEdgeStyleName ( _bstr_t _arg1 );
__declspec(implementation_key(221)) VARIANT_BOOL DrawingView::GetDefaults_ShowEdgesHiddenByOtherParts ( );
__declspec(implementation_key(222)) void DrawingView::PutDefaults_ShowEdgesHiddenByOtherParts ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(223)) VARIANT_BOOL DrawingView::GetDefaults_ShowTangentEdges ( );
__declspec(implementation_key(224)) void DrawingView::PutDefaults_ShowTangentEdges ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(225)) _bstr_t DrawingView::GetDefaults_TangentEdgeStyleName ( );
__declspec(implementation_key(226)) void DrawingView::PutDefaults_TangentEdgeStyleName ( _bstr_t _arg1 );
__declspec(implementation_key(227)) VARIANT_BOOL DrawingView::GetDefaults_ShowTubeCenterlines ( );
__declspec(implementation_key(228)) void DrawingView::PutDefaults_ShowTubeCenterlines ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(229)) _bstr_t DrawingView::GetDefaults_TubeCenterlineStyleName ( );
__declspec(implementation_key(230)) void DrawingView::PutDefaults_TubeCenterlineStyleName ( _bstr_t _arg1 );
__declspec(implementation_key(231)) VARIANT_BOOL DrawingView::GetDefaults_ShowEdgesHiddenTangentEdgesSelfHidden ( );
__declspec(implementation_key(232)) void DrawingView::PutDefaults_ShowEdgesHiddenTangentEdgesSelfHidden ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(233)) VARIANT_BOOL DrawingView::GetDefaults_ShowEdgesHiddenTangentEdgesHiddenByOtherParts ( );
__declspec(implementation_key(234)) void DrawingView::PutDefaults_ShowEdgesHiddenTangentEdgesHiddenByOtherParts ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(235)) VARIANT_BOOL DrawingView::GetCroppedVHL ( );
__declspec(implementation_key(236)) void DrawingView::PutCroppedVHL ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(237)) HRESULT DrawingView::ConvertToIndependentDetailView ( );
__declspec(implementation_key(238)) _bstr_t DrawingView::GetPMIModelView ( );
__declspec(implementation_key(239)) void DrawingView::PutPMIModelView ( _bstr_t _arg1 );
__declspec(implementation_key(240)) VARIANT_BOOL DrawingView::GetIncludePMIDimensions ( );
__declspec(implementation_key(241)) void DrawingView::PutIncludePMIDimensions ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(242)) void DrawingView::PutCroppedBoundaryStyle ( _bstr_t _arg1 );
__declspec(implementation_key(243)) _bstr_t DrawingView::GetCroppedBoundaryStyle ( );
__declspec(implementation_key(244)) void DrawingView::PutDisplayCroppedBoundary ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(245)) VARIANT_BOOL DrawingView::GetDisplayCroppedBoundary ( );
__declspec(implementation_key(246)) void DrawingView::PutDisplayBorder ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(247)) VARIANT_BOOL DrawingView::GetDisplayBorder ( );
__declspec(implementation_key(248)) VARIANT_BOOL DrawingView::GetIncludePMIAnnotations ( );
__declspec(implementation_key(249)) void DrawingView::PutIncludePMIAnnotations ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(250)) VARIANT_BOOL DrawingView::GetEdgesUseModelColor ( );
__declspec(implementation_key(251)) void DrawingView::PutEdgesUseModelColor ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(252)) VARIANT_BOOL DrawingView::GetEdgesUsePartBaseColor ( );
__declspec(implementation_key(253)) void DrawingView::PutEdgesUsePartBaseColor ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(254)) VARIANT_BOOL DrawingView::GetEdgesUseAssemblyOverrideColor ( );
__declspec(implementation_key(255)) void DrawingView::PutEdgesUseAssemblyOverrideColor ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(256)) VARIANT_BOOL DrawingView::GetSectionHatchUseModelColor ( );
__declspec(implementation_key(257)) void DrawingView::PutSectionHatchUseModelColor ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(258)) VARIANT_BOOL DrawingView::GetIsPerspective ( );
__declspec(implementation_key(259)) HRESULT DrawingView::SetPerspectiveOn ( double FocalLength );
__declspec(implementation_key(260)) HRESULT DrawingView::SetPerspectiveOff ( );
__declspec(implementation_key(261)) HRESULT DrawingView::SetPerspectiveFromNamedView ( _bstr_t ViewName );
__declspec(implementation_key(262)) VARIANT_BOOL DrawingView::GetIsBrokenOutSectionTarget ( );
__declspec(implementation_key(263)) VARIANT_BOOL DrawingView::GetIsCut ( );
__declspec(implementation_key(264)) IDispatchPtr DrawingView::GetAttributeSets ( );
__declspec(implementation_key(265)) VARIANT_BOOL DrawingView::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(266)) void DrawingView::PutLockView ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(267)) VARIANT_BOOL DrawingView::GetLockView ( );
__declspec(implementation_key(268)) void DrawingView::PutHatchRibsInSectionViews ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(269)) VARIANT_BOOL DrawingView::GetHatchRibsInSectionViews ( );
__declspec(implementation_key(270)) VARIANT_BOOL DrawingView::GetDisplayBreakLinesInBrokenState ( );
__declspec(implementation_key(271)) void DrawingView::PutDisplayBreakLinesInBrokenState ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(272)) _bstr_t DrawingView::GetCaptionDefinitionTextPrimary ( );
__declspec(implementation_key(273)) void DrawingView::PutCaptionDefinitionTextPrimary ( _bstr_t _arg1 );
__declspec(implementation_key(274)) _bstr_t DrawingView::GetCaptionDisplayedTextPrimary ( );
__declspec(implementation_key(275)) VARIANT_BOOL DrawingView::GetDisplayCaptionPrimary ( );
__declspec(implementation_key(276)) void DrawingView::PutDisplayCaptionPrimary ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(277)) _bstr_t DrawingView::GetCaptionDefinitionTextSecondary ( );
__declspec(implementation_key(278)) void DrawingView::PutCaptionDefinitionTextSecondary ( _bstr_t _arg1 );
__declspec(implementation_key(279)) _bstr_t DrawingView::GetCaptionDisplayedTextSecondary ( );
__declspec(implementation_key(280)) VARIANT_BOOL DrawingView::GetDisplayCaptionSecondary ( );
__declspec(implementation_key(281)) void DrawingView::PutDisplayCaptionSecondary ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(282)) _bstr_t DrawingView::GetSuffixDefinitionText ( );
__declspec(implementation_key(283)) void DrawingView::PutSuffixDefinitionText ( _bstr_t _arg1 );
__declspec(implementation_key(284)) _bstr_t DrawingView::GetScaleDefinitionText ( );
__declspec(implementation_key(285)) void DrawingView::PutScaleDefinitionText ( _bstr_t _arg1 );
__declspec(implementation_key(286)) HRESULT DrawingView::SetViewOrientation ( double ViewVector_X, double ViewVector_Y, double ViewVector_Z, double LocalXVector_X, double LocalXVector_Y, double LocalXVector_Z );
__declspec(implementation_key(287)) HRESULT DrawingView::SetViewOrientationStandard ( enum ViewOrientationConstants Orientation );
__declspec(implementation_key(288)) HRESULT DrawingView::SetViewOrientationFromNamedView ( _bstr_t NamedView, VARIANT_BOOL UsePerspective );
__declspec(implementation_key(289)) HRESULT DrawingView::ForceUpdate ( );
__declspec(implementation_key(290)) DrawingViewPtr DrawingView::GetSourceDrawingView ( );
__declspec(implementation_key(291)) HRESULT DrawingView::GetCaptionPosition ( double * x, double * y );
__declspec(implementation_key(292)) HRESULT DrawingView::SetCaptionPosition ( double x, double y );
__declspec(implementation_key(293)) _bstr_t DrawingView::GetZone ( );
__declspec(implementation_key(294)) void DrawingView::PutZone ( _bstr_t _arg1 );
__declspec(implementation_key(295)) void DrawingView::PutIsSnapShot ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(296)) enum DrawingViewSimplifiedAssemblyOptionConstants DrawingView::GetSimplifiedAssemblyOption ( );
__declspec(implementation_key(297)) void DrawingView::PutSimplifiedAssemblyOption ( enum DrawingViewSimplifiedAssemblyOptionConstants _arg1 );
__declspec(implementation_key(298)) enum DrawingViewSimplifiedPartOptionConstants DrawingView::GetSimplifiedPartOption ( );
__declspec(implementation_key(299)) void DrawingView::PutSimplifiedPartOption ( enum DrawingViewSimplifiedPartOptionConstants _arg1 );
__declspec(implementation_key(300)) _bstr_t DrawingView::GetAnnotationSheetNumberDefinitionText ( );
__declspec(implementation_key(301)) void DrawingView::PutAnnotationSheetNumberDefinitionText ( _bstr_t _arg1 );
__declspec(implementation_key(302)) VARIANT_BOOL DrawingView::GetDisplayAnnotationSheetNumber ( );
__declspec(implementation_key(303)) void DrawingView::PutDisplayAnnotationSheetNumber ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(304)) _bstr_t DrawingView::GetRotationAngleDefinitionText ( );
__declspec(implementation_key(305)) void DrawingView::PutRotationAngleDefinitionText ( _bstr_t _arg1 );
__declspec(implementation_key(306)) VARIANT_BOOL DrawingView::GetDisplayRotationAngle ( );
__declspec(implementation_key(307)) void DrawingView::PutDisplayRotationAngle ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(308)) _bstr_t DrawingView::GetPrimaryCaptionFont ( );
__declspec(implementation_key(309)) void DrawingView::PutPrimaryCaptionFont ( _bstr_t _arg1 );
__declspec(implementation_key(310)) enum TGFrameworkSupport::DimTextFontStyleConstants DrawingView::GetPrimaryCaptionFontStyle ( );
__declspec(implementation_key(311)) void DrawingView::PutPrimaryCaptionFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants _arg1 );
__declspec(implementation_key(312)) long DrawingView::GetPrimaryCaptionColor ( );
__declspec(implementation_key(313)) void DrawingView::PutPrimaryCaptionColor ( long _arg1 );
__declspec(implementation_key(314)) double DrawingView::GetPrimaryCaptionTextSize ( );
__declspec(implementation_key(315)) void DrawingView::PutPrimaryCaptionTextSize ( double _arg1 );
__declspec(implementation_key(316)) enum TGFrameworkSupport::DrawingViewCaptionTextAlignment DrawingView::GetPrimaryCaptionTextAlignment ( );
__declspec(implementation_key(317)) void DrawingView::PutPrimaryCaptionTextAlignment ( enum TGFrameworkSupport::DrawingViewCaptionTextAlignment _arg1 );
__declspec(implementation_key(318)) _bstr_t DrawingView::GetSecondaryCaptionFont ( );
__declspec(implementation_key(319)) void DrawingView::PutSecondaryCaptionFont ( _bstr_t _arg1 );
__declspec(implementation_key(320)) enum TGFrameworkSupport::DimTextFontStyleConstants DrawingView::GetSecondaryCaptionFontStyle ( );
__declspec(implementation_key(321)) void DrawingView::PutSecondaryCaptionFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants _arg1 );
__declspec(implementation_key(322)) long DrawingView::GetSecondaryCaptionColor ( );
__declspec(implementation_key(323)) void DrawingView::PutSecondaryCaptionColor ( long _arg1 );
__declspec(implementation_key(324)) double DrawingView::GetSecondaryCaptionTextSize ( );
__declspec(implementation_key(325)) void DrawingView::PutSecondaryCaptionTextSize ( double _arg1 );
__declspec(implementation_key(326)) enum TGFrameworkSupport::DrawingViewCaptionTextAlignment DrawingView::GetSecondaryCaptionTextAlignment ( );
__declspec(implementation_key(327)) void DrawingView::PutSecondaryCaptionTextAlignment ( enum TGFrameworkSupport::DrawingViewCaptionTextAlignment _arg1 );
__declspec(implementation_key(328)) VARIANT_BOOL DrawingView::GetShowPrimarySecondayCaptionSeparator ( );
__declspec(implementation_key(329)) void DrawingView::PutShowPrimarySecondayCaptionSeparator ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(330)) enum TGFrameworkSupport::DimViewCaptionLocationConstants DrawingView::GetCaptionLocation ( );
__declspec(implementation_key(331)) void DrawingView::PutCaptionLocation ( enum TGFrameworkSupport::DimViewCaptionLocationConstants _arg1 );
__declspec(implementation_key(332)) ModelMembersPtr DrawingView::ExecuteQuery ( _bstr_t QueryName );
__declspec(implementation_key(333)) VARIANT_BOOL DrawingView::GetReferenceComponentsByConfigurations ( );
__declspec(implementation_key(334)) void DrawingView::PutReferenceComponentsByConfigurations ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(335)) VARIANT_BOOL DrawingView::GetDefaults_SolidFillSectionWeldBeads ( );
__declspec(implementation_key(336)) void DrawingView::PutDefaults_SolidFillSectionWeldBeads ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(337)) VARIANT_BOOL DrawingView::GetDefaults_EnableAlternatingHatchSpacing ( );
__declspec(implementation_key(338)) void DrawingView::PutDefaults_EnableAlternatingHatchSpacing ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(339)) VARIANT_BOOL DrawingView::GetDefaults_EnableAlternatingHatchAngle ( );
__declspec(implementation_key(340)) void DrawingView::PutDefaults_EnableAlternatingHatchAngle ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(341)) _bstr_t DrawingView::GetPrimaryMember ( );
__declspec(implementation_key(342)) void DrawingView::PutPrimaryMember ( _bstr_t _arg1 );
__declspec(implementation_key(343)) HRESULT DrawingView::GetAlternateMembers ( long * NumMembers, SAFEARRAY * * Members );
__declspec(implementation_key(344)) HRESULT DrawingView::GetAlternatePositionMemberCandidates ( long * NumMembers, SAFEARRAY * * Members );
__declspec(implementation_key(345)) HRESULT DrawingView::AddAlternateMember ( _bstr_t Member );
__declspec(implementation_key(346)) HRESULT DrawingView::RemoveAlternateMember ( _bstr_t Member );
__declspec(implementation_key(347)) void DrawingView::PutLayer ( _bstr_t _arg1 );
__declspec(implementation_key(348)) _bstr_t DrawingView::GetLayer ( );
__declspec(implementation_key(349)) VARIANT_BOOL DrawingView::GetSectionOnly ( );
__declspec(implementation_key(350)) void DrawingView::PutSectionOnly ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(351)) CuttingPlanesPtr DrawingView::GetCuttingPlanes ( );
__declspec(implementation_key(352)) BrokenOutSectionProfilesPtr DrawingView::GetBrokenOutSectionProfiles ( );
__declspec(implementation_key(353)) DetailEnvelopesPtr DrawingView::GetDetailEnvelopes ( );
__declspec(implementation_key(354)) DraftProfilePtr DrawingView::GetCroppingBoundaryProfile ( );
__declspec(implementation_key(355)) HighlightDrawingViewMembersPtr DrawingView::GetHighlightDrawingViewMembers ( );
__declspec(implementation_key(356)) HRESULT DrawingView::AddConnectedDimensionsToSelectSet ( );
__declspec(implementation_key(357)) HRESULT DrawingView::AddConnectedAnnotationsToSelectSet ( );
__declspec(implementation_key(358)) _bstr_t DrawingView::GetLastUpdateSEVersion ( );
__declspec(implementation_key(359)) _variant_t DrawingView::GetLastUpdateDate ( );
__declspec(implementation_key(360)) _bstr_t DrawingView::GetLastUpdateUsername ( );
__declspec(implementation_key(361)) double DrawingView::GetLastUpdateTimeToUpdate ( );
__declspec(implementation_key(362)) _bstr_t DrawingView::GetDefaults_CoordinateSystemEdgeStyleName ( );
__declspec(implementation_key(363)) void DrawingView::PutDefaults_CoordinateSystemEdgeStyleName ( _bstr_t _arg1 );
__declspec(implementation_key(364)) HRESULT DrawingView::ClearEdgeOverrides ( );
__declspec(implementation_key(365)) void DrawingView::PutIsReferencePartTransparent ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(366)) VARIANT_BOOL DrawingView::GetIsReferencePartTransparent ( );
__declspec(implementation_key(367)) void DrawingView::PutRetrieveDimOnUpdate ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(368)) VARIANT_BOOL DrawingView::GetRetrieveDimOnUpdate ( );
__declspec(implementation_key(369)) BreakLinePairsPtr DrawingView::GetBreakLinePairs ( );
__declspec(implementation_key(370)) HRESULT DrawingView::SetBrokenState ( );
__declspec(implementation_key(371)) HRESULT DrawingView::SetUnBrokenState ( );
__declspec(implementation_key(372)) void DrawingView::PutDepthPlaneOffset ( double _arg1 );
__declspec(implementation_key(373)) double DrawingView::GetDepthPlaneOffset ( );
__declspec(implementation_key(374)) HRESULT DrawingView::RemoveDepthPlane ( );
__declspec(implementation_key(375)) void DrawingView::PutSectionFullModel ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(376)) VARIANT_BOOL DrawingView::GetSectionFullModel ( );
__declspec(implementation_key(377)) void DrawingView::PutRevolvedSection ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(378)) VARIANT_BOOL DrawingView::GetRevolvedSection ( );
__declspec(implementation_key(379)) HRESULT DrawingView::AddBreakAxisForBreakLines ( IUnknown * pElement1, enum KeypointIndexConstants KeyPointIndex1, IUnknown * pElement2, enum KeypointIndexConstants KeyPointIndex2 );
__declspec(implementation_key(380)) HRESULT DrawingView::SetCenterForDetailView ( double x, double y );
__declspec(implementation_key(381)) HRESULT DrawingView::GetCenterForDetailView ( double * x, double * y );
__declspec(implementation_key(382)) HRESULT DrawingView::RetrieveSlotCenterLinesCenterMarks ( VARIANT_BOOL IsRetrieve, _bstr_t DimensionStyleName, VARIANT_BOOL TypeCenterLine, VARIANT_BOOL TypeCenterMark, VARIANT_BOOL ProjectCenterMark, VARIANT_BOOL GetSlotCenterLines, VARIANT_BOOL GetStrikePointCenterMarks, VARIANT_BOOL GetEndPointCenterMarks, VARIANT_BOOL GetCenterofArcProjectionLines, VARIANT_BOOL EnableCenterMarkRangeCheck, VARIANT_BOOL EnableCenterLineRangeCheck, double dCenterLineMinRadius, double dCenterLineMaxRadius, double dCenterMarkMinRadius, double dCenterMarkMaxRadius );
__declspec(implementation_key(383)) void DrawingView::PutShowNewComponentsAddedtoAssembly ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(384)) VARIANT_BOOL DrawingView::GetShowNewComponentsAddedtoAssembly ( );
__declspec(implementation_key(385)) HRESULT DrawingView::GetEdgeOrFaceID ( IDispatch * pGraphicDVObj, long * pEntityId, VARIANT_BOOL * pIsEdge );
__declspec(implementation_key(386)) HRESULT DrawingView::SetBendCenterlineStyleAndDisplay ( enum StyleConstants bendUpCenterlineStyle, enum StyleConstants bendDownCenterlineStyle );
__declspec(implementation_key(387)) TGFramework::ApplicationPtr CoordinateSystems2d::GetApplication ( );
__declspec(implementation_key(388)) long CoordinateSystems2d::GetCount ( );
__declspec(implementation_key(389)) IDispatchPtr CoordinateSystems2d::GetParent ( );
__declspec(implementation_key(390)) CoordinateSystem2dPtr CoordinateSystems2d::Item ( const _variant_t & Index );
__declspec(implementation_key(391)) TGFramework::ApplicationPtr CoordinateSystem2d::GetApplication ( );
__declspec(implementation_key(392)) IDispatchPtr CoordinateSystem2d::GetParent ( );
__declspec(implementation_key(393)) _bstr_t CoordinateSystem2d::GetName ( );
__declspec(implementation_key(394)) long CoordinateSystem2d::GetType ( );
__declspec(implementation_key(395)) VARIANT_BOOL CoordinateSystem2d::GetIsDefault ( );
__declspec(implementation_key(396)) HRESULT CoordinateSystem2d::GetOrigin ( double * XOrigin, double * YOrigin );
__declspec(implementation_key(397)) HRESULT CoordinateSystem2d::GetAxisProperties ( enum CoordinateSystem2dAxisConstants AxisDesignation, BSTR * Name, double * AxisX, double * AxisY );
__declspec(implementation_key(398)) IDispatchPtr CoordinateSystem2d::GetAttributeSets ( );
__declspec(implementation_key(399)) VARIANT_BOOL CoordinateSystem2d::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(400)) TGFramework::ApplicationPtr _ICoordinateSystems2dAuto::GetApplication ( );
__declspec(implementation_key(401)) long _ICoordinateSystems2dAuto::GetCount ( );
__declspec(implementation_key(402)) IDispatchPtr _ICoordinateSystems2dAuto::GetParent ( );
__declspec(implementation_key(403)) CoordinateSystem2dPtr _ICoordinateSystems2dAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(404)) IUnknownPtr _ICoordinateSystems2dAuto::Get_NewEnum ( );
__declspec(implementation_key(405)) TGFramework::ApplicationPtr _ICoordinateSystem2dAuto::GetApplication ( );
__declspec(implementation_key(406)) IDispatchPtr _ICoordinateSystem2dAuto::GetParent ( );
__declspec(implementation_key(407)) _bstr_t _ICoordinateSystem2dAuto::GetName ( );
__declspec(implementation_key(408)) long _ICoordinateSystem2dAuto::GetType ( );
__declspec(implementation_key(409)) VARIANT_BOOL _ICoordinateSystem2dAuto::GetIsDefault ( );
__declspec(implementation_key(410)) HRESULT _ICoordinateSystem2dAuto::GetOrigin ( double * XOrigin, double * YOrigin );
__declspec(implementation_key(411)) HRESULT _ICoordinateSystem2dAuto::GetAxisProperties ( enum CoordinateSystem2dAxisConstants AxisDesignation, BSTR * Name, double * AxisX, double * AxisY );
__declspec(implementation_key(412)) IDispatchPtr _ICoordinateSystem2dAuto::GetAttributeSets ( );
__declspec(implementation_key(413)) VARIANT_BOOL _ICoordinateSystem2dAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(414)) TGFramework::ApplicationPtr ModelMembers::GetApplication ( );
__declspec(implementation_key(415)) long ModelMembers::GetCount ( );
__declspec(implementation_key(416)) IDispatchPtr ModelMembers::GetParent ( );
__declspec(implementation_key(417)) ModelMemberPtr ModelMembers::Item ( const _variant_t & Index );
__declspec(implementation_key(418)) TGFramework::ApplicationPtr ModelMember::GetApplication ( );
__declspec(implementation_key(419)) IDispatchPtr ModelMember::GetParent ( );
__declspec(implementation_key(420)) ModelMemberPtr ModelMember::GetImmediateParent ( );
__declspec(implementation_key(421)) _bstr_t ModelMember::GetFileName ( );
__declspec(implementation_key(422)) enum ModelMemberDisplayTypeConstants ModelMember::GetDisplayType ( );
__declspec(implementation_key(423)) void ModelMember::PutDisplayType ( enum ModelMemberDisplayTypeConstants _arg1 );
__declspec(implementation_key(424)) enum ModelMemberTypeConstants ModelMember::GetType ( );
__declspec(implementation_key(425)) enum ModelMemberComponentTypeConstants ModelMember::GetComponentType ( );
__declspec(implementation_key(426)) VARIANT_BOOL ModelMember::GetShowHiddenEdges ( );
__declspec(implementation_key(427)) void ModelMember::PutShowHiddenEdges ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(428)) VARIANT_BOOL ModelMember::GetShowTangentEdges ( );
__declspec(implementation_key(429)) void ModelMember::PutShowTangentEdges ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(430)) VARIANT_BOOL ModelMember::GetShowSectionHatch ( );
__declspec(implementation_key(431)) void ModelMember::PutShowSectionHatch ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(432)) _bstr_t ModelMember::GetVisibleEdgeStyleName ( );
__declspec(implementation_key(433)) void ModelMember::PutVisibleEdgeStyleName ( _bstr_t _arg1 );
__declspec(implementation_key(434)) _bstr_t ModelMember::GetHiddenEdgeStyleName ( );
__declspec(implementation_key(435)) void ModelMember::PutHiddenEdgeStyleName ( _bstr_t _arg1 );
__declspec(implementation_key(436)) _bstr_t ModelMember::GetTangentEdgeStyleName ( );
__declspec(implementation_key(437)) void ModelMember::PutTangentEdgeStyleName ( _bstr_t _arg1 );
__declspec(implementation_key(438)) ModelMembersPtr ModelMember::GetModelMembers ( );
__declspec(implementation_key(439)) GraphicMembersPtr ModelMember::GetGraphicMembers ( );
__declspec(implementation_key(440)) DVLines2dPtr ModelMember::GetDVLines2d ( );
__declspec(implementation_key(441)) DVArcs2dPtr ModelMember::GetDVArcs2d ( );
__declspec(implementation_key(442)) DVBSplineCurves2dPtr ModelMember::GetDVBSplineCurves2d ( );
__declspec(implementation_key(443)) DVCircles2dPtr ModelMember::GetDVCircles2d ( );
__declspec(implementation_key(444)) DVEllipses2dPtr ModelMember::GetDVEllipses2d ( );
__declspec(implementation_key(445)) DVLineStrings2dPtr ModelMember::GetDVLineStrings2d ( );
__declspec(implementation_key(446)) DVEllipticalArcs2dPtr ModelMember::GetDVEllipticalArcs2d ( );
__declspec(implementation_key(447)) DVPoints2dPtr ModelMember::GetDVPoints2d ( );
__declspec(implementation_key(448)) VARIANT_BOOL ModelMember::GetIsSimplified ( );
__declspec(implementation_key(449)) VARIANT_BOOL ModelMember::GetIsFlat ( );
__declspec(implementation_key(450)) _bstr_t ModelMember::GetRoadMap ( );
__declspec(implementation_key(451)) VARIANT_BOOL ModelMember::GetDisplayAsReference ( );
__declspec(implementation_key(452)) void ModelMember::PutDisplayAsReference ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(453)) HRESULT ModelMember::GetRange2d ( double * XMin, double * YMin, double * XMax, double * YMax );
__declspec(implementation_key(454)) HRESULT ModelMember::GetRange3d ( double * XMin, double * YMin, double * ZMin, double * XMax, double * YMax, double * ZMax );
__declspec(implementation_key(455)) _bstr_t ModelMember::GetComponentName ( );
__declspec(implementation_key(456)) VARIANT_BOOL ModelMember::GetShowEdgesHiddenByOtherParts ( );
__declspec(implementation_key(457)) void ModelMember::PutShowEdgesHiddenByOtherParts ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(458)) VARIANT_BOOL ModelMember::GetShowEdgesHiddenTangentEdgesSelfHidden ( );
__declspec(implementation_key(459)) void ModelMember::PutShowEdgesHiddenTangentEdgesSelfHidden ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(460)) VARIANT_BOOL ModelMember::GetShowEdgesHiddenTangentEdgesHiddenByOtherParts ( );
__declspec(implementation_key(461)) void ModelMember::PutShowEdgesHiddenTangentEdgesHiddenByOtherParts ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(462)) ModelNodePtr ModelMember::GetModelNode ( );
__declspec(implementation_key(463)) VARIANT_BOOL ModelMember::GetShowFill ( );
__declspec(implementation_key(464)) void ModelMember::PutShowFill ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(465)) _bstr_t ModelMember::GetFillStyleName ( );
__declspec(implementation_key(466)) void ModelMember::PutFillStyleName ( _bstr_t _arg1 );
__declspec(implementation_key(467)) VARIANT_BOOL ModelMember::GetDeriveFillStyleFromPart ( );
__declspec(implementation_key(468)) void ModelMember::PutDeriveFillStyleFromPart ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(469)) SectionBoundaries2dPtr ModelMember::GetDVBoundaries2d ( );
__declspec(implementation_key(470)) double ModelMember::GetHatchSpacing ( );
__declspec(implementation_key(471)) void ModelMember::PutHatchSpacing ( double _arg1 );
__declspec(implementation_key(472)) double ModelMember::GetHatchAngle ( );
__declspec(implementation_key(473)) void ModelMember::PutHatchAngle ( double _arg1 );
__declspec(implementation_key(474)) VARIANT_BOOL ModelMember::GetIsPrimaryAlternatePosition ( );
__declspec(implementation_key(475)) VARIANT_BOOL ModelMember::GetIsAlternatePosition ( );
__declspec(implementation_key(476)) _bstr_t ModelMember::GetAlternatePositionMemberName ( );
__declspec(implementation_key(477)) VARIANT_BOOL ModelMember::GetCutHardware ( );
__declspec(implementation_key(478)) void ModelMember::PutCutHardware ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(479)) VARIANT_BOOL ModelMember::GetDisplaySection ( );
__declspec(implementation_key(480)) void ModelMember::PutDisplaySection ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(481)) VARIANT_BOOL ModelMember::GetDisplayPart ( );
__declspec(implementation_key(482)) void ModelMember::PutDisplayPart ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(483)) VARIANT_BOOL ModelMember::GetDeriveDisplayAsReferenceFromAsm ( );
__declspec(implementation_key(484)) void ModelMember::PutDeriveDisplayAsReferenceFromAsm ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(485)) TGFramework::ApplicationPtr _IModelMembersAuto::GetApplication ( );
__declspec(implementation_key(486)) long _IModelMembersAuto::GetCount ( );
__declspec(implementation_key(487)) IDispatchPtr _IModelMembersAuto::GetParent ( );
__declspec(implementation_key(488)) ModelMemberPtr _IModelMembersAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(489)) IUnknownPtr _IModelMembersAuto::Get_NewEnum ( );
__declspec(implementation_key(490)) TGFramework::ApplicationPtr GraphicMembers::GetApplication ( );
__declspec(implementation_key(491)) long GraphicMembers::GetCount ( );
__declspec(implementation_key(492)) IDispatchPtr GraphicMembers::GetParent ( );
__declspec(implementation_key(493)) IDispatchPtr GraphicMembers::Item ( const _variant_t & Index );
__declspec(implementation_key(494)) TGFramework::ApplicationPtr _IGraphicMembersAuto::GetApplication ( );
__declspec(implementation_key(495)) long _IGraphicMembersAuto::GetCount ( );
__declspec(implementation_key(496)) IDispatchPtr _IGraphicMembersAuto::GetParent ( );
__declspec(implementation_key(497)) IDispatchPtr _IGraphicMembersAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(498)) IUnknownPtr _IGraphicMembersAuto::Get_NewEnum ( );
__declspec(implementation_key(499)) DVLine2dPtr DVLines2d::Item ( const _variant_t & Index );
__declspec(implementation_key(500)) TGFramework::ApplicationPtr DVLines2d::GetApplication ( );
__declspec(implementation_key(501)) long DVLines2d::GetCount ( );
__declspec(implementation_key(502)) IDispatchPtr DVLines2d::GetParent ( );
__declspec(implementation_key(503)) TGFrameworkSupport::Relationships2dPtr DVLine2d::GetRelationships ( );
__declspec(implementation_key(504)) TGFramework::ApplicationPtr DVLine2d::GetApplication ( );
__declspec(implementation_key(505)) _bstr_t DVLine2d::GetName ( const _variant_t & Recurse );
__declspec(implementation_key(506)) DrawingViewPtr DVLine2d::GetDrawingView ( );
__declspec(implementation_key(507)) ModelMemberPtr DVLine2d::GetModelMember ( );
__declspec(implementation_key(508)) enum GraphicMemberEdgeTypeConstants DVLine2d::GetEdgeType ( );
__declspec(implementation_key(509)) TGFramework::ReferencePtr DVLine2d::GetReference ( );
__declspec(implementation_key(510)) HRESULT DVLine2d::GetReferenceKey ( BSTR * FullName, SAFEARRAY * * ReferenceKey, long * KeySize );
__declspec(implementation_key(511)) DVShowHideEdgeOverrideType DVLine2d::GetShowHideEdgeOverride ( const _variant_t & segmentIndex );
__declspec(implementation_key(512)) void DVLine2d::PutShowHideEdgeOverride ( const _variant_t & segmentIndex, DVShowHideEdgeOverrideType _arg2 );
__declspec(implementation_key(513)) enum TGFramework::ObjectType DVLine2d::GetType ( );
__declspec(implementation_key(514)) _bstr_t DVLine2d::GetKey ( const _variant_t & Recurse );
__declspec(implementation_key(515)) IDispatchPtr DVLine2d::GetDocument ( );
__declspec(implementation_key(516)) HRESULT DVLine2d::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum );
__declspec(implementation_key(517)) double DVLine2d::GetLength ( );
__declspec(implementation_key(518)) double DVLine2d::GetAngle ( );
__declspec(implementation_key(519)) HRESULT DVLine2d::GetStartPoint ( double * x, double * y );
__declspec(implementation_key(520)) HRESULT DVLine2d::GetEndPoint ( double * x, double * y );
__declspec(implementation_key(521)) long DVLine2d::GetKeyPointCount ( );
__declspec(implementation_key(522)) HRESULT DVLine2d::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType );
__declspec(implementation_key(523)) long DVLine2d::GetSegmentedStyleCount ( );
__declspec(implementation_key(524)) HRESULT DVLine2d::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * style );
__declspec(implementation_key(525)) double DVLine2d::GetBendAngle ( );
__declspec(implementation_key(526)) double DVLine2d::GetBendRadius ( );
__declspec(implementation_key(527)) ModelWeldsPtr DVLine2d::GetModelWelds ( );
__declspec(implementation_key(528)) int DVLine2d::GetBendQuantity ( );
__declspec(implementation_key(529)) IDispatchPtr DVLine2d::GetAttributeSets ( );
__declspec(implementation_key(530)) VARIANT_BOOL DVLine2d::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(531)) DVLine2dPtr _IDVLines2dAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(532)) IUnknownPtr _IDVLines2dAuto::Get_NewEnum ( );
__declspec(implementation_key(533)) TGFramework::ApplicationPtr _IDVLines2dAuto::GetApplication ( );
__declspec(implementation_key(534)) long _IDVLines2dAuto::GetCount ( );
__declspec(implementation_key(535)) IDispatchPtr _IDVLines2dAuto::GetParent ( );
__declspec(implementation_key(536)) TGFramework::ApplicationPtr ModelWelds::GetApplication ( );
__declspec(implementation_key(537)) IDispatchPtr ModelWelds::GetParent ( );
__declspec(implementation_key(538)) long ModelWelds::GetCount ( );
__declspec(implementation_key(539)) ModelWeldPtr ModelWelds::Item ( const _variant_t & Index );
__declspec(implementation_key(540)) TGFrameworkSupport::Relationships2dPtr _IDVLine2dAuto::GetRelationships ( );
__declspec(implementation_key(541)) TGFramework::ApplicationPtr _IDVLine2dAuto::GetApplication ( );
__declspec(implementation_key(542)) _bstr_t _IDVLine2dAuto::GetName ( const _variant_t & Recurse, long Lcid );
__declspec(implementation_key(543)) DrawingViewPtr _IDVLine2dAuto::GetDrawingView ( );
__declspec(implementation_key(544)) ModelMemberPtr _IDVLine2dAuto::GetModelMember ( );
__declspec(implementation_key(545)) enum GraphicMemberEdgeTypeConstants _IDVLine2dAuto::GetEdgeType ( );
__declspec(implementation_key(546)) TGFramework::ReferencePtr _IDVLine2dAuto::GetReference ( );
__declspec(implementation_key(547)) HRESULT _IDVLine2dAuto::GetReferenceKey ( BSTR * FullName, SAFEARRAY * * ReferenceKey, long * KeySize );
__declspec(implementation_key(548)) DVShowHideEdgeOverrideType _IDVLine2dAuto::GetShowHideEdgeOverride ( const _variant_t & segmentIndex );
__declspec(implementation_key(549)) void _IDVLine2dAuto::PutShowHideEdgeOverride ( const _variant_t & segmentIndex, DVShowHideEdgeOverrideType overrideType );
__declspec(implementation_key(550)) enum TGFramework::ObjectType _IDVLine2dAuto::GetType ( );
__declspec(implementation_key(551)) _bstr_t _IDVLine2dAuto::GetKey ( const _variant_t & Recurse );
__declspec(implementation_key(552)) IDispatchPtr _IDVLine2dAuto::GetDocument ( );
__declspec(implementation_key(553)) HRESULT _IDVLine2dAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum );
__declspec(implementation_key(554)) double _IDVLine2dAuto::GetLength ( );
__declspec(implementation_key(555)) double _IDVLine2dAuto::GetAngle ( );
__declspec(implementation_key(556)) HRESULT _IDVLine2dAuto::GetStartPoint ( double * x, double * y );
__declspec(implementation_key(557)) HRESULT _IDVLine2dAuto::GetEndPoint ( double * x, double * y );
__declspec(implementation_key(558)) long _IDVLine2dAuto::GetKeyPointCount ( );
__declspec(implementation_key(559)) HRESULT _IDVLine2dAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType );
__declspec(implementation_key(560)) long _IDVLine2dAuto::GetSegmentedStyleCount ( );
__declspec(implementation_key(561)) HRESULT _IDVLine2dAuto::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * style );
__declspec(implementation_key(562)) double _IDVLine2dAuto::GetBendAngle ( );
__declspec(implementation_key(563)) double _IDVLine2dAuto::GetBendRadius ( );
__declspec(implementation_key(564)) ModelWeldsPtr _IDVLine2dAuto::GetModelWelds ( );
__declspec(implementation_key(565)) int _IDVLine2dAuto::GetBendQuantity ( );
__declspec(implementation_key(566)) IDispatchPtr _IDVLine2dAuto::GetAttributeSets ( );
__declspec(implementation_key(567)) VARIANT_BOOL _IDVLine2dAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(568)) TGFramework::ApplicationPtr ModelWeld::GetApplication ( );
__declspec(implementation_key(569)) _bstr_t ModelWeld::GetBottomNote1 ( );
__declspec(implementation_key(570)) _bstr_t ModelWeld::GetBottomNote2 ( );
__declspec(implementation_key(571)) _bstr_t ModelWeld::GetBottomNote3 ( );
__declspec(implementation_key(572)) _bstr_t ModelWeld::GetBottomNoteZ ( );
__declspec(implementation_key(573)) enum TGFrameworkSupport::DimWeldTreatmentTypeConstants ModelWeld::GetBottomTreatmentType ( );
__declspec(implementation_key(574)) enum TGFrameworkSupport::DimWeldTypeConstants ModelWeld::GetBottomType ( );
__declspec(implementation_key(575)) enum TGFrameworkSupport::DimWeldTypeConstants ModelWeld::GetCenterType ( );
__declspec(implementation_key(576)) double ModelWeld::GetCrossSectionArea ( );
__declspec(implementation_key(577)) enum TGFrameworkSupport::DimWeldDashLineTypeConstants ModelWeld::GetDashLine ( );
__declspec(implementation_key(578)) double ModelWeld::GetLength ( );
__declspec(implementation_key(579)) VARIANT_BOOL ModelWeld::GetOffsetTopBottom ( );
__declspec(implementation_key(580)) IDispatchPtr ModelWeld::GetParent ( );
__declspec(implementation_key(581)) VARIANT_BOOL ModelWeld::GetSymmetrical ( );
__declspec(implementation_key(582)) enum TGFrameworkSupport::DimWeldTailTypeConstants ModelWeld::GetTail ( );
__declspec(implementation_key(583)) _bstr_t ModelWeld::GetTailNote ( );
__declspec(implementation_key(584)) _bstr_t ModelWeld::GetTailNote2 ( );
__declspec(implementation_key(585)) _bstr_t ModelWeld::GetTopNote1 ( );
__declspec(implementation_key(586)) _bstr_t ModelWeld::GetTopNote2 ( );
__declspec(implementation_key(587)) _bstr_t ModelWeld::GetTopNote3 ( );
__declspec(implementation_key(588)) _bstr_t ModelWeld::GetTopNoteZ ( );
__declspec(implementation_key(589)) enum TGFrameworkSupport::DimWeldTreatmentTypeConstants ModelWeld::GetTopTreatmentType ( );
__declspec(implementation_key(590)) enum TGFrameworkSupport::DimWeldTypeConstants ModelWeld::GetTopType ( );
__declspec(implementation_key(591)) VARIANT_BOOL ModelWeld::GetWeldAllAround ( );
__declspec(implementation_key(592)) VARIANT_BOOL ModelWeld::GetWeldInField ( );
__declspec(implementation_key(593)) VARIANT_BOOL ModelWeld::GetZSymbol ( );
__declspec(implementation_key(594)) enum DimWeldLabelImportConstants ModelWeld::GetWeldLabelImport ( );
__declspec(implementation_key(595)) enum DimWeldBeadWeldmentTypeConstants ModelWeld::GetWeldBeadWeldmentType ( );
__declspec(implementation_key(596)) enum DimWeldBeadWeldmentShapeConstants ModelWeld::GetWeldBeadWeldmentShape ( );
__declspec(implementation_key(597)) enum DimWeldBeadWeldTypeConstants ModelWeld::GetWeldBeadWeldType ( );
__declspec(implementation_key(598)) enum DimWeldBeadWeldStandardConstants ModelWeld::GetWeldBeadWeldStandard ( );
__declspec(implementation_key(599)) enum DimWeldBeadWeldImportConstants ModelWeld::GetWeldBeadWeldImport ( );
__declspec(implementation_key(600)) enum TGFrameworkSupport::DimWeldTypeConstants ModelWeld::GetTopTypeCompound ( );
__declspec(implementation_key(601)) enum TGFrameworkSupport::DimWeldTypeConstants ModelWeld::GetBottomTypeCompound ( );
__declspec(implementation_key(602)) _bstr_t ModelWeld::GetTopNoteCSize ( );
__declspec(implementation_key(603)) _bstr_t ModelWeld::GetBottomNoteCSize ( );
__declspec(implementation_key(604)) _bstr_t ModelWeld::GetTopNoteAngle ( );
__declspec(implementation_key(605)) _bstr_t ModelWeld::GetBottomNoteAngle ( );
__declspec(implementation_key(606)) _bstr_t ModelWeld::GetTopNoteDepth ( );
__declspec(implementation_key(607)) _bstr_t ModelWeld::GetBottomNoteDepth ( );
__declspec(implementation_key(608)) int ModelWeld::GetTopPosOffset ( );
__declspec(implementation_key(609)) int ModelWeld::GetBottomPosOffset ( );
__declspec(implementation_key(610)) enum TGFrameworkSupport::WeldSymbolFlagDirectionConstants ModelWeld::GetWeldInFieldFlagDirection ( );
__declspec(implementation_key(611)) TGFramework::ApplicationPtr _IModelWeldsAuto::GetApplication ( );
__declspec(implementation_key(612)) IDispatchPtr _IModelWeldsAuto::GetParent ( );
__declspec(implementation_key(613)) long _IModelWeldsAuto::GetCount ( );
__declspec(implementation_key(614)) ModelWeldPtr _IModelWeldsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(615)) IUnknownPtr _IModelWeldsAuto::Get_NewEnum ( );
__declspec(implementation_key(616)) TGFramework::ApplicationPtr _IModelWeldAuto::GetApplication ( );
__declspec(implementation_key(617)) _bstr_t _IModelWeldAuto::GetBottomNote1 ( );
__declspec(implementation_key(618)) _bstr_t _IModelWeldAuto::GetBottomNote2 ( );
__declspec(implementation_key(619)) _bstr_t _IModelWeldAuto::GetBottomNote3 ( );
__declspec(implementation_key(620)) _bstr_t _IModelWeldAuto::GetBottomNoteZ ( );
__declspec(implementation_key(621)) enum TGFrameworkSupport::DimWeldTreatmentTypeConstants _IModelWeldAuto::GetBottomTreatmentType ( );
__declspec(implementation_key(622)) enum TGFrameworkSupport::DimWeldTypeConstants _IModelWeldAuto::GetBottomType ( );
__declspec(implementation_key(623)) enum TGFrameworkSupport::DimWeldTypeConstants _IModelWeldAuto::GetCenterType ( );
__declspec(implementation_key(624)) double _IModelWeldAuto::GetCrossSectionArea ( );
__declspec(implementation_key(625)) enum TGFrameworkSupport::DimWeldDashLineTypeConstants _IModelWeldAuto::GetDashLine ( );
__declspec(implementation_key(626)) double _IModelWeldAuto::GetLength ( );
__declspec(implementation_key(627)) VARIANT_BOOL _IModelWeldAuto::GetOffsetTopBottom ( );
__declspec(implementation_key(628)) IDispatchPtr _IModelWeldAuto::GetParent ( );
__declspec(implementation_key(629)) VARIANT_BOOL _IModelWeldAuto::GetSymmetrical ( );
__declspec(implementation_key(630)) enum TGFrameworkSupport::DimWeldTailTypeConstants _IModelWeldAuto::GetTail ( );
__declspec(implementation_key(631)) _bstr_t _IModelWeldAuto::GetTailNote ( );
__declspec(implementation_key(632)) _bstr_t _IModelWeldAuto::GetTailNote2 ( );
__declspec(implementation_key(633)) _bstr_t _IModelWeldAuto::GetTopNote1 ( );
__declspec(implementation_key(634)) _bstr_t _IModelWeldAuto::GetTopNote2 ( );
__declspec(implementation_key(635)) _bstr_t _IModelWeldAuto::GetTopNote3 ( );
__declspec(implementation_key(636)) _bstr_t _IModelWeldAuto::GetTopNoteZ ( );
__declspec(implementation_key(637)) enum TGFrameworkSupport::DimWeldTreatmentTypeConstants _IModelWeldAuto::GetTopTreatmentType ( );
__declspec(implementation_key(638)) enum TGFrameworkSupport::DimWeldTypeConstants _IModelWeldAuto::GetTopType ( );
__declspec(implementation_key(639)) VARIANT_BOOL _IModelWeldAuto::GetWeldAllAround ( );
__declspec(implementation_key(640)) VARIANT_BOOL _IModelWeldAuto::GetWeldInField ( );
__declspec(implementation_key(641)) VARIANT_BOOL _IModelWeldAuto::GetZSymbol ( );
__declspec(implementation_key(642)) enum DimWeldLabelImportConstants _IModelWeldAuto::GetWeldLabelImport ( );
__declspec(implementation_key(643)) enum DimWeldBeadWeldmentTypeConstants _IModelWeldAuto::GetWeldBeadWeldmentType ( );
__declspec(implementation_key(644)) enum DimWeldBeadWeldmentShapeConstants _IModelWeldAuto::GetWeldBeadWeldmentShape ( );
__declspec(implementation_key(645)) enum DimWeldBeadWeldTypeConstants _IModelWeldAuto::GetWeldBeadWeldType ( );
__declspec(implementation_key(646)) enum DimWeldBeadWeldStandardConstants _IModelWeldAuto::GetWeldBeadWeldStandard ( );
__declspec(implementation_key(647)) enum DimWeldBeadWeldImportConstants _IModelWeldAuto::GetWeldBeadWeldImport ( );
__declspec(implementation_key(648)) enum TGFrameworkSupport::DimWeldTypeConstants _IModelWeldAuto::GetTopTypeCompound ( );
__declspec(implementation_key(649)) enum TGFrameworkSupport::DimWeldTypeConstants _IModelWeldAuto::GetBottomTypeCompound ( );
__declspec(implementation_key(650)) _bstr_t _IModelWeldAuto::GetTopNoteCSize ( );
__declspec(implementation_key(651)) _bstr_t _IModelWeldAuto::GetBottomNoteCSize ( );
__declspec(implementation_key(652)) _bstr_t _IModelWeldAuto::GetTopNoteAngle ( );
__declspec(implementation_key(653)) _bstr_t _IModelWeldAuto::GetBottomNoteAngle ( );
__declspec(implementation_key(654)) _bstr_t _IModelWeldAuto::GetTopNoteDepth ( );
__declspec(implementation_key(655)) _bstr_t _IModelWeldAuto::GetBottomNoteDepth ( );
__declspec(implementation_key(656)) int _IModelWeldAuto::GetTopPosOffset ( );
__declspec(implementation_key(657)) int _IModelWeldAuto::GetBottomPosOffset ( );
__declspec(implementation_key(658)) enum TGFrameworkSupport::WeldSymbolFlagDirectionConstants _IModelWeldAuto::GetWeldInFieldFlagDirection ( );
__declspec(implementation_key(659)) DVArc2dPtr DVArcs2d::Item ( const _variant_t & Index );
__declspec(implementation_key(660)) TGFramework::ApplicationPtr DVArcs2d::GetApplication ( );
__declspec(implementation_key(661)) long DVArcs2d::GetCount ( );
__declspec(implementation_key(662)) IDispatchPtr DVArcs2d::GetParent ( );
__declspec(implementation_key(663)) TGFrameworkSupport::Relationships2dPtr DVArc2d::GetRelationships ( );
__declspec(implementation_key(664)) TGFramework::ApplicationPtr DVArc2d::GetApplication ( );
__declspec(implementation_key(665)) _bstr_t DVArc2d::GetName ( const _variant_t & Recurse );
__declspec(implementation_key(666)) DrawingViewPtr DVArc2d::GetDrawingView ( );
__declspec(implementation_key(667)) ModelMemberPtr DVArc2d::GetModelMember ( );
__declspec(implementation_key(668)) enum GraphicMemberEdgeTypeConstants DVArc2d::GetEdgeType ( );
__declspec(implementation_key(669)) TGFramework::ReferencePtr DVArc2d::GetReference ( );
__declspec(implementation_key(670)) HRESULT DVArc2d::GetReferenceKey ( BSTR * FullName, SAFEARRAY * * ReferenceKey, long * KeySize );
__declspec(implementation_key(671)) DVShowHideEdgeOverrideType DVArc2d::GetShowHideEdgeOverride ( const _variant_t & segmentIndex );
__declspec(implementation_key(672)) void DVArc2d::PutShowHideEdgeOverride ( const _variant_t & segmentIndex, DVShowHideEdgeOverrideType _arg2 );
__declspec(implementation_key(673)) enum TGFramework::ObjectType DVArc2d::GetType ( );
__declspec(implementation_key(674)) _bstr_t DVArc2d::GetKey ( const _variant_t & Recurse );
__declspec(implementation_key(675)) IDispatchPtr DVArc2d::GetDocument ( );
__declspec(implementation_key(676)) HRESULT DVArc2d::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum );
__declspec(implementation_key(677)) double DVArc2d::GetRadius ( );
__declspec(implementation_key(678)) double DVArc2d::GetStartAngle ( );
__declspec(implementation_key(679)) double DVArc2d::GetSweepAngle ( );
__declspec(implementation_key(680)) enum TGFrameworkSupport::Geom2dOrientationConstants DVArc2d::GetOrientation ( );
__declspec(implementation_key(681)) HRESULT DVArc2d::GetStartPoint ( double * x, double * y );
__declspec(implementation_key(682)) HRESULT DVArc2d::GetEndPoint ( double * x, double * y );
__declspec(implementation_key(683)) HRESULT DVArc2d::GetCenterPoint ( double * x, double * y );
__declspec(implementation_key(684)) HRESULT DVArc2d::GetMajorAxis ( double * x, double * y );
__declspec(implementation_key(685)) long DVArc2d::GetKeyPointCount ( );
__declspec(implementation_key(686)) HRESULT DVArc2d::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType );
__declspec(implementation_key(687)) long DVArc2d::GetSegmentedStyleCount ( );
__declspec(implementation_key(688)) HRESULT DVArc2d::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * style );
__declspec(implementation_key(689)) ModelWeldsPtr DVArc2d::GetModelWelds ( );
__declspec(implementation_key(690)) double DVArc2d::GetBendAngle ( );
__declspec(implementation_key(691)) double DVArc2d::GetBendRadius ( );
__declspec(implementation_key(692)) IDispatchPtr DVArc2d::GetAttributeSets ( );
__declspec(implementation_key(693)) VARIANT_BOOL DVArc2d::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(694)) DVArc2dPtr _IDVArcs2dAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(695)) IUnknownPtr _IDVArcs2dAuto::Get_NewEnum ( );
__declspec(implementation_key(696)) TGFramework::ApplicationPtr _IDVArcs2dAuto::GetApplication ( );
__declspec(implementation_key(697)) long _IDVArcs2dAuto::GetCount ( );
__declspec(implementation_key(698)) IDispatchPtr _IDVArcs2dAuto::GetParent ( );
__declspec(implementation_key(699)) TGFrameworkSupport::Relationships2dPtr _IDVArc2dAuto::GetRelationships ( );
__declspec(implementation_key(700)) TGFramework::ApplicationPtr _IDVArc2dAuto::GetApplication ( );
__declspec(implementation_key(701)) _bstr_t _IDVArc2dAuto::GetName ( const _variant_t & Recurse, long Lcid );
__declspec(implementation_key(702)) DrawingViewPtr _IDVArc2dAuto::GetDrawingView ( );
__declspec(implementation_key(703)) ModelMemberPtr _IDVArc2dAuto::GetModelMember ( );
__declspec(implementation_key(704)) enum GraphicMemberEdgeTypeConstants _IDVArc2dAuto::GetEdgeType ( );
__declspec(implementation_key(705)) TGFramework::ReferencePtr _IDVArc2dAuto::GetReference ( );
__declspec(implementation_key(706)) HRESULT _IDVArc2dAuto::GetReferenceKey ( BSTR * FullName, SAFEARRAY * * ReferenceKey, long * KeySize );
__declspec(implementation_key(707)) DVShowHideEdgeOverrideType _IDVArc2dAuto::GetShowHideEdgeOverride ( const _variant_t & segmentIndex );
__declspec(implementation_key(708)) void _IDVArc2dAuto::PutShowHideEdgeOverride ( const _variant_t & segmentIndex, DVShowHideEdgeOverrideType overrideType );
__declspec(implementation_key(709)) enum TGFramework::ObjectType _IDVArc2dAuto::GetType ( );
__declspec(implementation_key(710)) _bstr_t _IDVArc2dAuto::GetKey ( const _variant_t & Recurse );
__declspec(implementation_key(711)) IDispatchPtr _IDVArc2dAuto::GetDocument ( );
__declspec(implementation_key(712)) HRESULT _IDVArc2dAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum );
__declspec(implementation_key(713)) double _IDVArc2dAuto::GetRadius ( );
__declspec(implementation_key(714)) double _IDVArc2dAuto::GetStartAngle ( );
__declspec(implementation_key(715)) double _IDVArc2dAuto::GetSweepAngle ( );
__declspec(implementation_key(716)) enum TGFrameworkSupport::Geom2dOrientationConstants _IDVArc2dAuto::GetOrientation ( );
__declspec(implementation_key(717)) HRESULT _IDVArc2dAuto::GetStartPoint ( double * x, double * y );
__declspec(implementation_key(718)) HRESULT _IDVArc2dAuto::GetEndPoint ( double * x, double * y );
__declspec(implementation_key(719)) HRESULT _IDVArc2dAuto::GetCenterPoint ( double * x, double * y );
__declspec(implementation_key(720)) HRESULT _IDVArc2dAuto::GetMajorAxis ( double * x, double * y );
__declspec(implementation_key(721)) long _IDVArc2dAuto::GetKeyPointCount ( );
__declspec(implementation_key(722)) HRESULT _IDVArc2dAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType );
__declspec(implementation_key(723)) long _IDVArc2dAuto::GetSegmentedStyleCount ( );
__declspec(implementation_key(724)) HRESULT _IDVArc2dAuto::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * style );
__declspec(implementation_key(725)) ModelWeldsPtr _IDVArc2dAuto::GetModelWelds ( );
__declspec(implementation_key(726)) double _IDVArc2dAuto::GetBendAngle ( );
__declspec(implementation_key(727)) double _IDVArc2dAuto::GetBendRadius ( );
__declspec(implementation_key(728)) IDispatchPtr _IDVArc2dAuto::GetAttributeSets ( );
__declspec(implementation_key(729)) VARIANT_BOOL _IDVArc2dAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(730)) DVBSplineCurve2dPtr DVBSplineCurves2d::Item ( const _variant_t & Index );
__declspec(implementation_key(731)) TGFramework::ApplicationPtr DVBSplineCurves2d::GetApplication ( );
__declspec(implementation_key(732)) long DVBSplineCurves2d::GetCount ( );
__declspec(implementation_key(733)) IDispatchPtr DVBSplineCurves2d::GetParent ( );
__declspec(implementation_key(734)) TGFrameworkSupport::Relationships2dPtr DVBSplineCurve2d::GetRelationships ( );
__declspec(implementation_key(735)) TGFramework::ApplicationPtr DVBSplineCurve2d::GetApplication ( );
__declspec(implementation_key(736)) _bstr_t DVBSplineCurve2d::GetName ( const _variant_t & Recurse );
__declspec(implementation_key(737)) DrawingViewPtr DVBSplineCurve2d::GetDrawingView ( );
__declspec(implementation_key(738)) ModelMemberPtr DVBSplineCurve2d::GetModelMember ( );
__declspec(implementation_key(739)) enum GraphicMemberEdgeTypeConstants DVBSplineCurve2d::GetEdgeType ( );
__declspec(implementation_key(740)) TGFramework::ReferencePtr DVBSplineCurve2d::GetReference ( );
__declspec(implementation_key(741)) HRESULT DVBSplineCurve2d::GetReferenceKey ( BSTR * FullName, SAFEARRAY * * ReferenceKey, long * KeySize );
__declspec(implementation_key(742)) DVShowHideEdgeOverrideType DVBSplineCurve2d::GetShowHideEdgeOverride ( const _variant_t & segmentIndex );
__declspec(implementation_key(743)) void DVBSplineCurve2d::PutShowHideEdgeOverride ( const _variant_t & segmentIndex, DVShowHideEdgeOverrideType _arg2 );
__declspec(implementation_key(744)) enum TGFramework::ObjectType DVBSplineCurve2d::GetType ( );
__declspec(implementation_key(745)) _bstr_t DVBSplineCurve2d::GetKey ( const _variant_t & Recurse );
__declspec(implementation_key(746)) IDispatchPtr DVBSplineCurve2d::GetDocument ( );
__declspec(implementation_key(747)) HRESULT DVBSplineCurve2d::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum );
__declspec(implementation_key(748)) long DVBSplineCurve2d::GetOrder ( );
__declspec(implementation_key(749)) double DVBSplineCurve2d::GetLength ( );
__declspec(implementation_key(750)) enum TGFrameworkSupport::Geom2dFormConstants DVBSplineCurve2d::GetForm ( );
__declspec(implementation_key(751)) enum TGFrameworkSupport::Geom2dScopeConstants DVBSplineCurve2d::GetScope ( );
__declspec(implementation_key(752)) long DVBSplineCurve2d::GetPoleCount ( );
__declspec(implementation_key(753)) long DVBSplineCurve2d::GetNodeCount ( );
__declspec(implementation_key(754)) double DVBSplineCurve2d::GetArea ( );
__declspec(implementation_key(755)) HRESULT DVBSplineCurve2d::GetPole ( long Index, double * x, double * y );
__declspec(implementation_key(756)) HRESULT DVBSplineCurve2d::GetNode ( long Index, double * x, double * y );
__declspec(implementation_key(757)) long DVBSplineCurve2d::GetNearestNode ( double x, double y );
__declspec(implementation_key(758)) HRESULT DVBSplineCurve2d::GetCentroid ( double * x, double * y );
__declspec(implementation_key(759)) long DVBSplineCurve2d::GetKeyPointCount ( );
__declspec(implementation_key(760)) HRESULT DVBSplineCurve2d::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType );
__declspec(implementation_key(761)) long DVBSplineCurve2d::GetSegmentedStyleCount ( );
__declspec(implementation_key(762)) HRESULT DVBSplineCurve2d::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * style );
__declspec(implementation_key(763)) ModelWeldsPtr DVBSplineCurve2d::GetModelWelds ( );
__declspec(implementation_key(764)) double DVBSplineCurve2d::GetBendAngle ( );
__declspec(implementation_key(765)) double DVBSplineCurve2d::GetBendRadius ( );
__declspec(implementation_key(766)) IDispatchPtr DVBSplineCurve2d::GetAttributeSets ( );
__declspec(implementation_key(767)) VARIANT_BOOL DVBSplineCurve2d::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(768)) DVBSplineCurve2dPtr _IDVBSplineCurves2dAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(769)) IUnknownPtr _IDVBSplineCurves2dAuto::Get_NewEnum ( );
__declspec(implementation_key(770)) TGFramework::ApplicationPtr _IDVBSplineCurves2dAuto::GetApplication ( );
__declspec(implementation_key(771)) long _IDVBSplineCurves2dAuto::GetCount ( );
__declspec(implementation_key(772)) IDispatchPtr _IDVBSplineCurves2dAuto::GetParent ( );
__declspec(implementation_key(773)) TGFrameworkSupport::Relationships2dPtr _IDVBSplineCurve2dAuto::GetRelationships ( );
__declspec(implementation_key(774)) TGFramework::ApplicationPtr _IDVBSplineCurve2dAuto::GetApplication ( );
__declspec(implementation_key(775)) _bstr_t _IDVBSplineCurve2dAuto::GetName ( const _variant_t & Recurse, long Lcid );
__declspec(implementation_key(776)) DrawingViewPtr _IDVBSplineCurve2dAuto::GetDrawingView ( );
__declspec(implementation_key(777)) ModelMemberPtr _IDVBSplineCurve2dAuto::GetModelMember ( );
__declspec(implementation_key(778)) enum GraphicMemberEdgeTypeConstants _IDVBSplineCurve2dAuto::GetEdgeType ( );
__declspec(implementation_key(779)) TGFramework::ReferencePtr _IDVBSplineCurve2dAuto::GetReference ( );
__declspec(implementation_key(780)) HRESULT _IDVBSplineCurve2dAuto::GetReferenceKey ( BSTR * FullName, SAFEARRAY * * ReferenceKey, long * KeySize );
__declspec(implementation_key(781)) DVShowHideEdgeOverrideType _IDVBSplineCurve2dAuto::GetShowHideEdgeOverride ( const _variant_t & segmentIndex );
__declspec(implementation_key(782)) void _IDVBSplineCurve2dAuto::PutShowHideEdgeOverride ( const _variant_t & segmentIndex, DVShowHideEdgeOverrideType overrideType );
__declspec(implementation_key(783)) enum TGFramework::ObjectType _IDVBSplineCurve2dAuto::GetType ( );
__declspec(implementation_key(784)) _bstr_t _IDVBSplineCurve2dAuto::GetKey ( const _variant_t & Recurse );
__declspec(implementation_key(785)) IDispatchPtr _IDVBSplineCurve2dAuto::GetDocument ( );
__declspec(implementation_key(786)) HRESULT _IDVBSplineCurve2dAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum );
__declspec(implementation_key(787)) long _IDVBSplineCurve2dAuto::GetOrder ( );
__declspec(implementation_key(788)) double _IDVBSplineCurve2dAuto::GetLength ( );
__declspec(implementation_key(789)) enum TGFrameworkSupport::Geom2dFormConstants _IDVBSplineCurve2dAuto::GetForm ( );
__declspec(implementation_key(790)) enum TGFrameworkSupport::Geom2dScopeConstants _IDVBSplineCurve2dAuto::GetScope ( );
__declspec(implementation_key(791)) long _IDVBSplineCurve2dAuto::GetPoleCount ( );
__declspec(implementation_key(792)) long _IDVBSplineCurve2dAuto::GetNodeCount ( );
__declspec(implementation_key(793)) double _IDVBSplineCurve2dAuto::GetArea ( );
__declspec(implementation_key(794)) HRESULT _IDVBSplineCurve2dAuto::GetPole ( long Index, double * x, double * y );
__declspec(implementation_key(795)) HRESULT _IDVBSplineCurve2dAuto::GetNode ( long Index, double * x, double * y );
__declspec(implementation_key(796)) long _IDVBSplineCurve2dAuto::GetNearestNode ( double x, double y );
__declspec(implementation_key(797)) HRESULT _IDVBSplineCurve2dAuto::GetCentroid ( double * x, double * y );
__declspec(implementation_key(798)) long _IDVBSplineCurve2dAuto::GetKeyPointCount ( );
__declspec(implementation_key(799)) HRESULT _IDVBSplineCurve2dAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType );
__declspec(implementation_key(800)) long _IDVBSplineCurve2dAuto::GetSegmentedStyleCount ( );
__declspec(implementation_key(801)) HRESULT _IDVBSplineCurve2dAuto::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * style );
__declspec(implementation_key(802)) ModelWeldsPtr _IDVBSplineCurve2dAuto::GetModelWelds ( );
__declspec(implementation_key(803)) double _IDVBSplineCurve2dAuto::GetBendAngle ( );
__declspec(implementation_key(804)) double _IDVBSplineCurve2dAuto::GetBendRadius ( );
__declspec(implementation_key(805)) IDispatchPtr _IDVBSplineCurve2dAuto::GetAttributeSets ( );
__declspec(implementation_key(806)) VARIANT_BOOL _IDVBSplineCurve2dAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(807)) DVCircle2dPtr DVCircles2d::Item ( const _variant_t & Index );
__declspec(implementation_key(808)) TGFramework::ApplicationPtr DVCircles2d::GetApplication ( );
__declspec(implementation_key(809)) long DVCircles2d::GetCount ( );
__declspec(implementation_key(810)) IDispatchPtr DVCircles2d::GetParent ( );
__declspec(implementation_key(811)) TGFrameworkSupport::Relationships2dPtr DVCircle2d::GetRelationships ( );
__declspec(implementation_key(812)) TGFramework::ApplicationPtr DVCircle2d::GetApplication ( );
__declspec(implementation_key(813)) _bstr_t DVCircle2d::GetName ( const _variant_t & Recurse );
__declspec(implementation_key(814)) DrawingViewPtr DVCircle2d::GetDrawingView ( );
__declspec(implementation_key(815)) ModelMemberPtr DVCircle2d::GetModelMember ( );
__declspec(implementation_key(816)) enum GraphicMemberEdgeTypeConstants DVCircle2d::GetEdgeType ( );
__declspec(implementation_key(817)) TGFramework::ReferencePtr DVCircle2d::GetReference ( );
__declspec(implementation_key(818)) HRESULT DVCircle2d::GetReferenceKey ( BSTR * FullName, SAFEARRAY * * ReferenceKey, long * KeySize );
__declspec(implementation_key(819)) DVShowHideEdgeOverrideType DVCircle2d::GetShowHideEdgeOverride ( const _variant_t & segmentIndex );
__declspec(implementation_key(820)) void DVCircle2d::PutShowHideEdgeOverride ( const _variant_t & segmentIndex, DVShowHideEdgeOverrideType _arg2 );
__declspec(implementation_key(821)) enum TGFramework::ObjectType DVCircle2d::GetType ( );
__declspec(implementation_key(822)) _bstr_t DVCircle2d::GetKey ( const _variant_t & Recurse );
__declspec(implementation_key(823)) IDispatchPtr DVCircle2d::GetDocument ( );
__declspec(implementation_key(824)) HRESULT DVCircle2d::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum );
__declspec(implementation_key(825)) double DVCircle2d::GetRadius ( );
__declspec(implementation_key(826)) double DVCircle2d::GetDiameter ( );
__declspec(implementation_key(827)) double DVCircle2d::GetCircumference ( );
__declspec(implementation_key(828)) double DVCircle2d::GetArea ( );
__declspec(implementation_key(829)) HRESULT DVCircle2d::GetCenterPoint ( double * x, double * y );
__declspec(implementation_key(830)) HRESULT DVCircle2d::GetMajorAxis ( double * x, double * y );
__declspec(implementation_key(831)) long DVCircle2d::GetKeyPointCount ( );
__declspec(implementation_key(832)) HRESULT DVCircle2d::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType );
__declspec(implementation_key(833)) long DVCircle2d::GetSegmentedStyleCount ( );
__declspec(implementation_key(834)) HRESULT DVCircle2d::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * style );
__declspec(implementation_key(835)) ModelWeldsPtr DVCircle2d::GetModelWelds ( );
__declspec(implementation_key(836)) double DVCircle2d::GetBendAngle ( );
__declspec(implementation_key(837)) double DVCircle2d::GetBendRadius ( );
__declspec(implementation_key(838)) IDispatchPtr DVCircle2d::GetAttributeSets ( );
__declspec(implementation_key(839)) VARIANT_BOOL DVCircle2d::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(840)) DVCircle2dPtr _IDVCircles2dAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(841)) IUnknownPtr _IDVCircles2dAuto::Get_NewEnum ( );
__declspec(implementation_key(842)) TGFramework::ApplicationPtr _IDVCircles2dAuto::GetApplication ( );
__declspec(implementation_key(843)) long _IDVCircles2dAuto::GetCount ( );
__declspec(implementation_key(844)) IDispatchPtr _IDVCircles2dAuto::GetParent ( );
__declspec(implementation_key(845)) TGFrameworkSupport::Relationships2dPtr _IDVCircle2dAuto::GetRelationships ( );
__declspec(implementation_key(846)) TGFramework::ApplicationPtr _IDVCircle2dAuto::GetApplication ( );
__declspec(implementation_key(847)) _bstr_t _IDVCircle2dAuto::GetName ( const _variant_t & Recurse, long Lcid );
__declspec(implementation_key(848)) DrawingViewPtr _IDVCircle2dAuto::GetDrawingView ( );
__declspec(implementation_key(849)) ModelMemberPtr _IDVCircle2dAuto::GetModelMember ( );
__declspec(implementation_key(850)) enum GraphicMemberEdgeTypeConstants _IDVCircle2dAuto::GetEdgeType ( );
__declspec(implementation_key(851)) TGFramework::ReferencePtr _IDVCircle2dAuto::GetReference ( );
__declspec(implementation_key(852)) HRESULT _IDVCircle2dAuto::GetReferenceKey ( BSTR * FullName, SAFEARRAY * * ReferenceKey, long * KeySize );
__declspec(implementation_key(853)) DVShowHideEdgeOverrideType _IDVCircle2dAuto::GetShowHideEdgeOverride ( const _variant_t & segmentIndex );
__declspec(implementation_key(854)) void _IDVCircle2dAuto::PutShowHideEdgeOverride ( const _variant_t & segmentIndex, DVShowHideEdgeOverrideType overrideType );
__declspec(implementation_key(855)) enum TGFramework::ObjectType _IDVCircle2dAuto::GetType ( );
__declspec(implementation_key(856)) _bstr_t _IDVCircle2dAuto::GetKey ( const _variant_t & Recurse );
__declspec(implementation_key(857)) IDispatchPtr _IDVCircle2dAuto::GetDocument ( );
__declspec(implementation_key(858)) HRESULT _IDVCircle2dAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum );
__declspec(implementation_key(859)) double _IDVCircle2dAuto::GetRadius ( );
__declspec(implementation_key(860)) double _IDVCircle2dAuto::GetDiameter ( );
__declspec(implementation_key(861)) double _IDVCircle2dAuto::GetCircumference ( );
__declspec(implementation_key(862)) double _IDVCircle2dAuto::GetArea ( );
__declspec(implementation_key(863)) HRESULT _IDVCircle2dAuto::GetCenterPoint ( double * x, double * y );
__declspec(implementation_key(864)) HRESULT _IDVCircle2dAuto::GetMajorAxis ( double * x, double * y );
__declspec(implementation_key(865)) long _IDVCircle2dAuto::GetKeyPointCount ( );
__declspec(implementation_key(866)) HRESULT _IDVCircle2dAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType );
__declspec(implementation_key(867)) long _IDVCircle2dAuto::GetSegmentedStyleCount ( );
__declspec(implementation_key(868)) HRESULT _IDVCircle2dAuto::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * style );
__declspec(implementation_key(869)) ModelWeldsPtr _IDVCircle2dAuto::GetModelWelds ( );
__declspec(implementation_key(870)) double _IDVCircle2dAuto::GetBendAngle ( );
__declspec(implementation_key(871)) double _IDVCircle2dAuto::GetBendRadius ( );
__declspec(implementation_key(872)) IDispatchPtr _IDVCircle2dAuto::GetAttributeSets ( );
__declspec(implementation_key(873)) VARIANT_BOOL _IDVCircle2dAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(874)) DVEllipse2dPtr DVEllipses2d::Item ( const _variant_t & Index );
__declspec(implementation_key(875)) TGFramework::ApplicationPtr DVEllipses2d::GetApplication ( );
__declspec(implementation_key(876)) long DVEllipses2d::GetCount ( );
__declspec(implementation_key(877)) IDispatchPtr DVEllipses2d::GetParent ( );
__declspec(implementation_key(878)) TGFrameworkSupport::Relationships2dPtr DVEllipse2d::GetRelationships ( );
__declspec(implementation_key(879)) TGFramework::ApplicationPtr DVEllipse2d::GetApplication ( );
__declspec(implementation_key(880)) _bstr_t DVEllipse2d::GetName ( const _variant_t & Recurse );
__declspec(implementation_key(881)) DrawingViewPtr DVEllipse2d::GetDrawingView ( );
__declspec(implementation_key(882)) ModelMemberPtr DVEllipse2d::GetModelMember ( );
__declspec(implementation_key(883)) enum GraphicMemberEdgeTypeConstants DVEllipse2d::GetEdgeType ( );
__declspec(implementation_key(884)) TGFramework::ReferencePtr DVEllipse2d::GetReference ( );
__declspec(implementation_key(885)) HRESULT DVEllipse2d::GetReferenceKey ( BSTR * FullName, SAFEARRAY * * ReferenceKey, long * KeySize );
__declspec(implementation_key(886)) DVShowHideEdgeOverrideType DVEllipse2d::GetShowHideEdgeOverride ( const _variant_t & segmentIndex );
__declspec(implementation_key(887)) void DVEllipse2d::PutShowHideEdgeOverride ( const _variant_t & segmentIndex, DVShowHideEdgeOverrideType _arg2 );
__declspec(implementation_key(888)) enum TGFramework::ObjectType DVEllipse2d::GetType ( );
__declspec(implementation_key(889)) _bstr_t DVEllipse2d::GetKey ( const _variant_t & Recurse );
__declspec(implementation_key(890)) IDispatchPtr DVEllipse2d::GetDocument ( );
__declspec(implementation_key(891)) HRESULT DVEllipse2d::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum );
__declspec(implementation_key(892)) double DVEllipse2d::GetMajorRadius ( );
__declspec(implementation_key(893)) double DVEllipse2d::GetMinorRadius ( );
__declspec(implementation_key(894)) enum TGFrameworkSupport::Geom2dOrientationConstants DVEllipse2d::GetOrientation ( );
__declspec(implementation_key(895)) double DVEllipse2d::GetRotationAngle ( );
__declspec(implementation_key(896)) double DVEllipse2d::GetMinorMajorRatio ( );
__declspec(implementation_key(897)) double DVEllipse2d::GetCircumference ( );
__declspec(implementation_key(898)) double DVEllipse2d::GetArea ( );
__declspec(implementation_key(899)) HRESULT DVEllipse2d::GetCenterPoint ( double * x, double * y );
__declspec(implementation_key(900)) HRESULT DVEllipse2d::GetMajorAxis ( double * x, double * y );
__declspec(implementation_key(901)) HRESULT DVEllipse2d::GetMinorAxis ( double * x, double * y );
__declspec(implementation_key(902)) long DVEllipse2d::GetKeyPointCount ( );
__declspec(implementation_key(903)) HRESULT DVEllipse2d::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType );
__declspec(implementation_key(904)) long DVEllipse2d::GetSegmentedStyleCount ( );
__declspec(implementation_key(905)) HRESULT DVEllipse2d::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * style );
__declspec(implementation_key(906)) ModelWeldsPtr DVEllipse2d::GetModelWelds ( );
__declspec(implementation_key(907)) double DVEllipse2d::GetBendAngle ( );
__declspec(implementation_key(908)) double DVEllipse2d::GetBendRadius ( );
__declspec(implementation_key(909)) IDispatchPtr DVEllipse2d::GetAttributeSets ( );
__declspec(implementation_key(910)) VARIANT_BOOL DVEllipse2d::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(911)) DVEllipse2dPtr _IDVEllipses2dAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(912)) IUnknownPtr _IDVEllipses2dAuto::Get_NewEnum ( );
__declspec(implementation_key(913)) TGFramework::ApplicationPtr _IDVEllipses2dAuto::GetApplication ( );
__declspec(implementation_key(914)) long _IDVEllipses2dAuto::GetCount ( );
__declspec(implementation_key(915)) IDispatchPtr _IDVEllipses2dAuto::GetParent ( );
__declspec(implementation_key(916)) TGFrameworkSupport::Relationships2dPtr _IDVEllipse2dAuto::GetRelationships ( );
__declspec(implementation_key(917)) TGFramework::ApplicationPtr _IDVEllipse2dAuto::GetApplication ( );
__declspec(implementation_key(918)) _bstr_t _IDVEllipse2dAuto::GetName ( const _variant_t & Recurse, long Lcid );
__declspec(implementation_key(919)) DrawingViewPtr _IDVEllipse2dAuto::GetDrawingView ( );
__declspec(implementation_key(920)) ModelMemberPtr _IDVEllipse2dAuto::GetModelMember ( );
__declspec(implementation_key(921)) enum GraphicMemberEdgeTypeConstants _IDVEllipse2dAuto::GetEdgeType ( );
__declspec(implementation_key(922)) TGFramework::ReferencePtr _IDVEllipse2dAuto::GetReference ( );
__declspec(implementation_key(923)) HRESULT _IDVEllipse2dAuto::GetReferenceKey ( BSTR * FullName, SAFEARRAY * * ReferenceKey, long * KeySize );
__declspec(implementation_key(924)) DVShowHideEdgeOverrideType _IDVEllipse2dAuto::GetShowHideEdgeOverride ( const _variant_t & segmentIndex );
__declspec(implementation_key(925)) void _IDVEllipse2dAuto::PutShowHideEdgeOverride ( const _variant_t & segmentIndex, DVShowHideEdgeOverrideType overrideType );
__declspec(implementation_key(926)) enum TGFramework::ObjectType _IDVEllipse2dAuto::GetType ( );
__declspec(implementation_key(927)) _bstr_t _IDVEllipse2dAuto::GetKey ( const _variant_t & Recurse );
__declspec(implementation_key(928)) IDispatchPtr _IDVEllipse2dAuto::GetDocument ( );
__declspec(implementation_key(929)) HRESULT _IDVEllipse2dAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum );
__declspec(implementation_key(930)) double _IDVEllipse2dAuto::GetMajorRadius ( );
__declspec(implementation_key(931)) double _IDVEllipse2dAuto::GetMinorRadius ( );
__declspec(implementation_key(932)) enum TGFrameworkSupport::Geom2dOrientationConstants _IDVEllipse2dAuto::GetOrientation ( );
__declspec(implementation_key(933)) double _IDVEllipse2dAuto::GetRotationAngle ( );
__declspec(implementation_key(934)) double _IDVEllipse2dAuto::GetMinorMajorRatio ( );
__declspec(implementation_key(935)) double _IDVEllipse2dAuto::GetCircumference ( );
__declspec(implementation_key(936)) double _IDVEllipse2dAuto::GetArea ( );
__declspec(implementation_key(937)) HRESULT _IDVEllipse2dAuto::GetCenterPoint ( double * x, double * y );
__declspec(implementation_key(938)) HRESULT _IDVEllipse2dAuto::GetMajorAxis ( double * x, double * y );
__declspec(implementation_key(939)) HRESULT _IDVEllipse2dAuto::GetMinorAxis ( double * x, double * y );
__declspec(implementation_key(940)) long _IDVEllipse2dAuto::GetKeyPointCount ( );
__declspec(implementation_key(941)) HRESULT _IDVEllipse2dAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType );
__declspec(implementation_key(942)) long _IDVEllipse2dAuto::GetSegmentedStyleCount ( );
__declspec(implementation_key(943)) HRESULT _IDVEllipse2dAuto::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * style );
__declspec(implementation_key(944)) ModelWeldsPtr _IDVEllipse2dAuto::GetModelWelds ( );
__declspec(implementation_key(945)) double _IDVEllipse2dAuto::GetBendAngle ( );
__declspec(implementation_key(946)) double _IDVEllipse2dAuto::GetBendRadius ( );
__declspec(implementation_key(947)) IDispatchPtr _IDVEllipse2dAuto::GetAttributeSets ( );
__declspec(implementation_key(948)) VARIANT_BOOL _IDVEllipse2dAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(949)) DVLineString2dPtr DVLineStrings2d::Item ( const _variant_t & Index );
__declspec(implementation_key(950)) TGFramework::ApplicationPtr DVLineStrings2d::GetApplication ( );
__declspec(implementation_key(951)) long DVLineStrings2d::GetCount ( );
__declspec(implementation_key(952)) IDispatchPtr DVLineStrings2d::GetParent ( );
__declspec(implementation_key(953)) TGFramework::ApplicationPtr DVLineString2d::GetApplication ( );
__declspec(implementation_key(954)) _bstr_t DVLineString2d::GetName ( const _variant_t & Recurse );
__declspec(implementation_key(955)) DrawingViewPtr DVLineString2d::GetDrawingView ( );
__declspec(implementation_key(956)) ModelMemberPtr DVLineString2d::GetModelMember ( );
__declspec(implementation_key(957)) enum GraphicMemberEdgeTypeConstants DVLineString2d::GetEdgeType ( );
__declspec(implementation_key(958)) TGFramework::ReferencePtr DVLineString2d::GetReference ( );
__declspec(implementation_key(959)) HRESULT DVLineString2d::GetReferenceKey ( BSTR * FullName, SAFEARRAY * * ReferenceKey, long * KeySize );
__declspec(implementation_key(960)) enum TGFramework::ObjectType DVLineString2d::GetType ( );
__declspec(implementation_key(961)) _bstr_t DVLineString2d::GetKey ( const _variant_t & Recurse );
__declspec(implementation_key(962)) IDispatchPtr DVLineString2d::GetDocument ( );
__declspec(implementation_key(963)) HRESULT DVLineString2d::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum );
__declspec(implementation_key(964)) double DVLineString2d::GetLength ( );
__declspec(implementation_key(965)) long DVLineString2d::GetVertexCount ( );
__declspec(implementation_key(966)) VARIANT_BOOL DVLineString2d::GetClosed ( );
__declspec(implementation_key(967)) double DVLineString2d::GetArea ( );
__declspec(implementation_key(968)) HRESULT DVLineString2d::GetVertices ( long * VertexCount, SAFEARRAY * * Vertices );
__declspec(implementation_key(969)) HRESULT DVLineString2d::GetVertex ( long Index, double * x, double * y );
__declspec(implementation_key(970)) HRESULT DVLineString2d::GetCentroid ( double * x, double * y );
__declspec(implementation_key(971)) long DVLineString2d::GetKeyPointCount ( );
__declspec(implementation_key(972)) HRESULT DVLineString2d::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType );
__declspec(implementation_key(973)) long DVLineString2d::GetSegmentedStyleCount ( );
__declspec(implementation_key(974)) HRESULT DVLineString2d::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * style );
__declspec(implementation_key(975)) ModelWeldsPtr DVLineString2d::GetModelWelds ( );
__declspec(implementation_key(976)) IDispatchPtr DVLineString2d::GetAttributeSets ( );
__declspec(implementation_key(977)) VARIANT_BOOL DVLineString2d::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(978)) DVLineString2dPtr _IDVLineStrings2dAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(979)) IUnknownPtr _IDVLineStrings2dAuto::Get_NewEnum ( );
__declspec(implementation_key(980)) TGFramework::ApplicationPtr _IDVLineStrings2dAuto::GetApplication ( );
__declspec(implementation_key(981)) long _IDVLineStrings2dAuto::GetCount ( );
__declspec(implementation_key(982)) IDispatchPtr _IDVLineStrings2dAuto::GetParent ( );
__declspec(implementation_key(983)) TGFramework::ApplicationPtr _IDVLineString2dAuto::GetApplication ( );
__declspec(implementation_key(984)) _bstr_t _IDVLineString2dAuto::GetName ( const _variant_t & Recurse, long Lcid );
__declspec(implementation_key(985)) DrawingViewPtr _IDVLineString2dAuto::GetDrawingView ( );
__declspec(implementation_key(986)) ModelMemberPtr _IDVLineString2dAuto::GetModelMember ( );
__declspec(implementation_key(987)) enum GraphicMemberEdgeTypeConstants _IDVLineString2dAuto::GetEdgeType ( );
__declspec(implementation_key(988)) TGFramework::ReferencePtr _IDVLineString2dAuto::GetReference ( );
__declspec(implementation_key(989)) HRESULT _IDVLineString2dAuto::GetReferenceKey ( BSTR * FullName, SAFEARRAY * * ReferenceKey, long * KeySize );
__declspec(implementation_key(990)) enum TGFramework::ObjectType _IDVLineString2dAuto::GetType ( );
__declspec(implementation_key(991)) _bstr_t _IDVLineString2dAuto::GetKey ( const _variant_t & Recurse );
__declspec(implementation_key(992)) IDispatchPtr _IDVLineString2dAuto::GetDocument ( );
__declspec(implementation_key(993)) HRESULT _IDVLineString2dAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum );
__declspec(implementation_key(994)) double _IDVLineString2dAuto::GetLength ( );
__declspec(implementation_key(995)) long _IDVLineString2dAuto::GetVertexCount ( );
__declspec(implementation_key(996)) VARIANT_BOOL _IDVLineString2dAuto::GetClosed ( );
__declspec(implementation_key(997)) double _IDVLineString2dAuto::GetArea ( );
__declspec(implementation_key(998)) HRESULT _IDVLineString2dAuto::GetVertices ( long * VertexCount, SAFEARRAY * * Vertices );
__declspec(implementation_key(999)) HRESULT _IDVLineString2dAuto::GetVertex ( long Index, double * x, double * y );
__declspec(implementation_key(1000)) HRESULT _IDVLineString2dAuto::GetCentroid ( double * x, double * y );
__declspec(implementation_key(1001)) long _IDVLineString2dAuto::GetKeyPointCount ( );
__declspec(implementation_key(1002)) HRESULT _IDVLineString2dAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType );
__declspec(implementation_key(1003)) long _IDVLineString2dAuto::GetSegmentedStyleCount ( );
__declspec(implementation_key(1004)) HRESULT _IDVLineString2dAuto::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * style );
__declspec(implementation_key(1005)) ModelWeldsPtr _IDVLineString2dAuto::GetModelWelds ( );
__declspec(implementation_key(1006)) IDispatchPtr _IDVLineString2dAuto::GetAttributeSets ( );
__declspec(implementation_key(1007)) VARIANT_BOOL _IDVLineString2dAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1008)) DVEllipticalArc2dPtr DVEllipticalArcs2d::Item ( const _variant_t & Index );
__declspec(implementation_key(1009)) TGFramework::ApplicationPtr DVEllipticalArcs2d::GetApplication ( );
__declspec(implementation_key(1010)) long DVEllipticalArcs2d::GetCount ( );
__declspec(implementation_key(1011)) IDispatchPtr DVEllipticalArcs2d::GetParent ( );
__declspec(implementation_key(1012)) TGFrameworkSupport::Relationships2dPtr DVEllipticalArc2d::GetRelationships ( );
__declspec(implementation_key(1013)) TGFramework::ApplicationPtr DVEllipticalArc2d::GetApplication ( );
__declspec(implementation_key(1014)) _bstr_t DVEllipticalArc2d::GetName ( const _variant_t & Recurse );
__declspec(implementation_key(1015)) DrawingViewPtr DVEllipticalArc2d::GetDrawingView ( );
__declspec(implementation_key(1016)) ModelMemberPtr DVEllipticalArc2d::GetModelMember ( );
__declspec(implementation_key(1017)) enum GraphicMemberEdgeTypeConstants DVEllipticalArc2d::GetEdgeType ( );
__declspec(implementation_key(1018)) TGFramework::ReferencePtr DVEllipticalArc2d::GetReference ( );
__declspec(implementation_key(1019)) HRESULT DVEllipticalArc2d::GetReferenceKey ( BSTR * FullName, SAFEARRAY * * ReferenceKey, long * KeySize );
__declspec(implementation_key(1020)) DVShowHideEdgeOverrideType DVEllipticalArc2d::GetShowHideEdgeOverride ( const _variant_t & segmentIndex );
__declspec(implementation_key(1021)) void DVEllipticalArc2d::PutShowHideEdgeOverride ( const _variant_t & segmentIndex, DVShowHideEdgeOverrideType _arg2 );
__declspec(implementation_key(1022)) enum TGFramework::ObjectType DVEllipticalArc2d::GetType ( );
__declspec(implementation_key(1023)) _bstr_t DVEllipticalArc2d::GetKey ( const _variant_t & Recurse );
__declspec(implementation_key(1024)) IDispatchPtr DVEllipticalArc2d::GetDocument ( );
__declspec(implementation_key(1025)) HRESULT DVEllipticalArc2d::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum );
__declspec(implementation_key(1026)) double DVEllipticalArc2d::GetMajorRadius ( );
__declspec(implementation_key(1027)) double DVEllipticalArc2d::GetMinorRadius ( );
__declspec(implementation_key(1028)) enum TGFrameworkSupport::Geom2dOrientationConstants DVEllipticalArc2d::GetOrientation ( );
__declspec(implementation_key(1029)) double DVEllipticalArc2d::GetStartAngle ( );
__declspec(implementation_key(1030)) double DVEllipticalArc2d::GetSweepAngle ( );
__declspec(implementation_key(1031)) double DVEllipticalArc2d::GetRotationAngle ( );
__declspec(implementation_key(1032)) HRESULT DVEllipticalArc2d::GetStartPoint ( double * x, double * y );
__declspec(implementation_key(1033)) HRESULT DVEllipticalArc2d::GetEndPoint ( double * x, double * y );
__declspec(implementation_key(1034)) HRESULT DVEllipticalArc2d::GetCenterPoint ( double * x, double * y );
__declspec(implementation_key(1035)) HRESULT DVEllipticalArc2d::GetMajorAxis ( double * x, double * y );
__declspec(implementation_key(1036)) HRESULT DVEllipticalArc2d::GetMinorAxis ( double * x, double * y );
__declspec(implementation_key(1037)) long DVEllipticalArc2d::GetKeyPointCount ( );
__declspec(implementation_key(1038)) HRESULT DVEllipticalArc2d::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType );
__declspec(implementation_key(1039)) long DVEllipticalArc2d::GetSegmentedStyleCount ( );
__declspec(implementation_key(1040)) HRESULT DVEllipticalArc2d::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * style );
__declspec(implementation_key(1041)) ModelWeldsPtr DVEllipticalArc2d::GetModelWelds ( );
__declspec(implementation_key(1042)) double DVEllipticalArc2d::GetBendAngle ( );
__declspec(implementation_key(1043)) double DVEllipticalArc2d::GetBendRadius ( );
__declspec(implementation_key(1044)) IDispatchPtr DVEllipticalArc2d::GetAttributeSets ( );
__declspec(implementation_key(1045)) VARIANT_BOOL DVEllipticalArc2d::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1046)) DVEllipticalArc2dPtr _IDVEllipArcs2dAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(1047)) IUnknownPtr _IDVEllipArcs2dAuto::Get_NewEnum ( );
__declspec(implementation_key(1048)) TGFramework::ApplicationPtr _IDVEllipArcs2dAuto::GetApplication ( );
__declspec(implementation_key(1049)) long _IDVEllipArcs2dAuto::GetCount ( );
__declspec(implementation_key(1050)) IDispatchPtr _IDVEllipArcs2dAuto::GetParent ( );
__declspec(implementation_key(1051)) TGFrameworkSupport::Relationships2dPtr _IDVEllipArc2dAuto::GetRelationships ( );
__declspec(implementation_key(1052)) TGFramework::ApplicationPtr _IDVEllipArc2dAuto::GetApplication ( );
__declspec(implementation_key(1053)) _bstr_t _IDVEllipArc2dAuto::GetName ( const _variant_t & Recurse, long Lcid );
__declspec(implementation_key(1054)) DrawingViewPtr _IDVEllipArc2dAuto::GetDrawingView ( );
__declspec(implementation_key(1055)) ModelMemberPtr _IDVEllipArc2dAuto::GetModelMember ( );
__declspec(implementation_key(1056)) enum GraphicMemberEdgeTypeConstants _IDVEllipArc2dAuto::GetEdgeType ( );
__declspec(implementation_key(1057)) TGFramework::ReferencePtr _IDVEllipArc2dAuto::GetReference ( );
__declspec(implementation_key(1058)) HRESULT _IDVEllipArc2dAuto::GetReferenceKey ( BSTR * FullName, SAFEARRAY * * ReferenceKey, long * KeySize );
__declspec(implementation_key(1059)) DVShowHideEdgeOverrideType _IDVEllipArc2dAuto::GetShowHideEdgeOverride ( const _variant_t & segmentIndex );
__declspec(implementation_key(1060)) void _IDVEllipArc2dAuto::PutShowHideEdgeOverride ( const _variant_t & segmentIndex, DVShowHideEdgeOverrideType overrideType );
__declspec(implementation_key(1061)) enum TGFramework::ObjectType _IDVEllipArc2dAuto::GetType ( );
__declspec(implementation_key(1062)) _bstr_t _IDVEllipArc2dAuto::GetKey ( const _variant_t & Recurse );
__declspec(implementation_key(1063)) IDispatchPtr _IDVEllipArc2dAuto::GetDocument ( );
__declspec(implementation_key(1064)) HRESULT _IDVEllipArc2dAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum );
__declspec(implementation_key(1065)) double _IDVEllipArc2dAuto::GetMajorRadius ( );
__declspec(implementation_key(1066)) double _IDVEllipArc2dAuto::GetMinorRadius ( );
__declspec(implementation_key(1067)) enum TGFrameworkSupport::Geom2dOrientationConstants _IDVEllipArc2dAuto::GetOrientation ( );
__declspec(implementation_key(1068)) double _IDVEllipArc2dAuto::GetStartAngle ( );
__declspec(implementation_key(1069)) double _IDVEllipArc2dAuto::GetSweepAngle ( );
__declspec(implementation_key(1070)) double _IDVEllipArc2dAuto::GetRotationAngle ( );
__declspec(implementation_key(1071)) HRESULT _IDVEllipArc2dAuto::GetStartPoint ( double * x, double * y );
__declspec(implementation_key(1072)) HRESULT _IDVEllipArc2dAuto::GetEndPoint ( double * x, double * y );
__declspec(implementation_key(1073)) HRESULT _IDVEllipArc2dAuto::GetCenterPoint ( double * x, double * y );
__declspec(implementation_key(1074)) HRESULT _IDVEllipArc2dAuto::GetMajorAxis ( double * x, double * y );
__declspec(implementation_key(1075)) HRESULT _IDVEllipArc2dAuto::GetMinorAxis ( double * x, double * y );
__declspec(implementation_key(1076)) long _IDVEllipArc2dAuto::GetKeyPointCount ( );
__declspec(implementation_key(1077)) HRESULT _IDVEllipArc2dAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType );
__declspec(implementation_key(1078)) long _IDVEllipArc2dAuto::GetSegmentedStyleCount ( );
__declspec(implementation_key(1079)) HRESULT _IDVEllipArc2dAuto::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * style );
__declspec(implementation_key(1080)) ModelWeldsPtr _IDVEllipArc2dAuto::GetModelWelds ( );
__declspec(implementation_key(1081)) double _IDVEllipArc2dAuto::GetBendAngle ( );
__declspec(implementation_key(1082)) double _IDVEllipArc2dAuto::GetBendRadius ( );
__declspec(implementation_key(1083)) IDispatchPtr _IDVEllipArc2dAuto::GetAttributeSets ( );
__declspec(implementation_key(1084)) VARIANT_BOOL _IDVEllipArc2dAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1085)) DVPoint2dPtr DVPoints2d::Item ( const _variant_t & Index );
__declspec(implementation_key(1086)) TGFramework::ApplicationPtr DVPoints2d::GetApplication ( );
__declspec(implementation_key(1087)) long DVPoints2d::GetCount ( );
__declspec(implementation_key(1088)) IDispatchPtr DVPoints2d::GetParent ( );
__declspec(implementation_key(1089)) TGFrameworkSupport::Relationships2dPtr DVPoint2d::GetRelationships ( );
__declspec(implementation_key(1090)) TGFramework::ApplicationPtr DVPoint2d::GetApplication ( );
__declspec(implementation_key(1091)) _bstr_t DVPoint2d::GetName ( const _variant_t & Recurse );
__declspec(implementation_key(1092)) DrawingViewPtr DVPoint2d::GetDrawingView ( );
__declspec(implementation_key(1093)) ModelMemberPtr DVPoint2d::GetModelMember ( );
__declspec(implementation_key(1094)) enum GraphicMemberEdgeTypeConstants DVPoint2d::GetEdgeType ( );
__declspec(implementation_key(1095)) TGFramework::ReferencePtr DVPoint2d::GetReference ( );
__declspec(implementation_key(1096)) HRESULT DVPoint2d::GetReferenceKey ( BSTR * FullName, SAFEARRAY * * ReferenceKey, long * KeySize );
__declspec(implementation_key(1097)) enum TGFramework::ObjectType DVPoint2d::GetType ( );
__declspec(implementation_key(1098)) _bstr_t DVPoint2d::GetKey ( const _variant_t & Recurse );
__declspec(implementation_key(1099)) IDispatchPtr DVPoint2d::GetDocument ( );
__declspec(implementation_key(1100)) HRESULT DVPoint2d::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum );
__declspec(implementation_key(1101)) double DVPoint2d::Getx ( );
__declspec(implementation_key(1102)) double DVPoint2d::Gety ( );
__declspec(implementation_key(1103)) HRESULT DVPoint2d::GetPoint ( double * x, double * y );
__declspec(implementation_key(1104)) long DVPoint2d::GetSegmentedStyleCount ( );
__declspec(implementation_key(1105)) HRESULT DVPoint2d::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * style );
__declspec(implementation_key(1106)) long DVPoint2d::GetKeyPointCount ( );
__declspec(implementation_key(1107)) HRESULT DVPoint2d::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType );
__declspec(implementation_key(1108)) IDispatchPtr DVPoint2d::GetAttributeSets ( );
__declspec(implementation_key(1109)) VARIANT_BOOL DVPoint2d::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1110)) DVPoint2dPtr _IDVPoints2dAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(1111)) IUnknownPtr _IDVPoints2dAuto::Get_NewEnum ( );
__declspec(implementation_key(1112)) TGFramework::ApplicationPtr _IDVPoints2dAuto::GetApplication ( );
__declspec(implementation_key(1113)) long _IDVPoints2dAuto::GetCount ( );
__declspec(implementation_key(1114)) IDispatchPtr _IDVPoints2dAuto::GetParent ( );
__declspec(implementation_key(1115)) TGFrameworkSupport::Relationships2dPtr _IDVPoint2dAuto::GetRelationships ( );
__declspec(implementation_key(1116)) TGFramework::ApplicationPtr _IDVPoint2dAuto::GetApplication ( );
__declspec(implementation_key(1117)) _bstr_t _IDVPoint2dAuto::GetName ( const _variant_t & Recurse, long Lcid );
__declspec(implementation_key(1118)) DrawingViewPtr _IDVPoint2dAuto::GetDrawingView ( );
__declspec(implementation_key(1119)) ModelMemberPtr _IDVPoint2dAuto::GetModelMember ( );
__declspec(implementation_key(1120)) enum GraphicMemberEdgeTypeConstants _IDVPoint2dAuto::GetEdgeType ( );
__declspec(implementation_key(1121)) TGFramework::ReferencePtr _IDVPoint2dAuto::GetReference ( );
__declspec(implementation_key(1122)) HRESULT _IDVPoint2dAuto::GetReferenceKey ( BSTR * FullName, SAFEARRAY * * ReferenceKey, long * KeySize );
__declspec(implementation_key(1123)) enum TGFramework::ObjectType _IDVPoint2dAuto::GetType ( );
__declspec(implementation_key(1124)) _bstr_t _IDVPoint2dAuto::GetKey ( const _variant_t & Recurse );
__declspec(implementation_key(1125)) IDispatchPtr _IDVPoint2dAuto::GetDocument ( );
__declspec(implementation_key(1126)) HRESULT _IDVPoint2dAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum );
__declspec(implementation_key(1127)) double _IDVPoint2dAuto::Getx ( );
__declspec(implementation_key(1128)) double _IDVPoint2dAuto::Gety ( );
__declspec(implementation_key(1129)) HRESULT _IDVPoint2dAuto::GetPoint ( double * x, double * y );
__declspec(implementation_key(1130)) long _IDVPoint2dAuto::GetSegmentedStyleCount ( );
__declspec(implementation_key(1131)) HRESULT _IDVPoint2dAuto::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * style );
__declspec(implementation_key(1132)) long _IDVPoint2dAuto::GetKeyPointCount ( );
__declspec(implementation_key(1133)) HRESULT _IDVPoint2dAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType );
__declspec(implementation_key(1134)) IDispatchPtr _IDVPoint2dAuto::GetAttributeSets ( );
__declspec(implementation_key(1135)) VARIANT_BOOL _IDVPoint2dAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1136)) TGFramework::ApplicationPtr ModelNode::GetApplication ( );
__declspec(implementation_key(1137)) IDispatchPtr ModelNode::GetParent ( );
__declspec(implementation_key(1138)) _bstr_t ModelNode::GetFileName ( );
__declspec(implementation_key(1139)) enum ModelNodeTypeConstants ModelNode::GetModelType ( );
__declspec(implementation_key(1140)) VARIANT_BOOL ModelNode::GetVisible ( );
__declspec(implementation_key(1141)) void ModelNode::PutItemNumber ( long _arg1 );
__declspec(implementation_key(1142)) long ModelNode::GetItemNumber ( );
__declspec(implementation_key(1143)) void ModelNode::PutIncludeInPartsList ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1144)) VARIANT_BOOL ModelNode::GetIncludeInPartsList ( );
__declspec(implementation_key(1145)) VARIANT_BOOL ModelNode::GetIsBallooned ( );
__declspec(implementation_key(1146)) ModelNodesPtr ModelNode::GetModelNodes ( );
__declspec(implementation_key(1147)) _bstr_t ModelNode::GetComponentName ( );
__declspec(implementation_key(1148)) double ModelNode::GetCutLength ( );
__declspec(implementation_key(1149)) HRESULT ModelNode::GetAssemblyReferenceKey ( SAFEARRAY * * ReferenceKey, VARIANT * KeySize );
__declspec(implementation_key(1150)) VARIANT_BOOL ModelNode::GetIsAssemblyContainedPart ( );
__declspec(implementation_key(1151)) TGFramework::ApplicationPtr ModelNodes::GetApplication ( );
__declspec(implementation_key(1152)) IDispatchPtr ModelNodes::GetParent ( );
__declspec(implementation_key(1153)) long ModelNodes::GetCount ( );
__declspec(implementation_key(1154)) ModelNodePtr ModelNodes::Item ( const _variant_t & Index );
__declspec(implementation_key(1155)) TGFramework::ApplicationPtr _IModelNodeAuto::GetApplication ( );
__declspec(implementation_key(1156)) IDispatchPtr _IModelNodeAuto::GetParent ( );
__declspec(implementation_key(1157)) _bstr_t _IModelNodeAuto::GetFileName ( );
__declspec(implementation_key(1158)) enum ModelNodeTypeConstants _IModelNodeAuto::GetModelType ( );
__declspec(implementation_key(1159)) VARIANT_BOOL _IModelNodeAuto::GetVisible ( );
__declspec(implementation_key(1160)) void _IModelNodeAuto::PutItemNumber ( long ItemNumber );
__declspec(implementation_key(1161)) long _IModelNodeAuto::GetItemNumber ( );
__declspec(implementation_key(1162)) void _IModelNodeAuto::PutIncludeInPartsList ( VARIANT_BOOL IncludeInPartsList );
__declspec(implementation_key(1163)) VARIANT_BOOL _IModelNodeAuto::GetIncludeInPartsList ( );
__declspec(implementation_key(1164)) VARIANT_BOOL _IModelNodeAuto::GetIsBallooned ( );
__declspec(implementation_key(1165)) ModelNodesPtr _IModelNodeAuto::GetModelNodes ( );
__declspec(implementation_key(1166)) _bstr_t _IModelNodeAuto::GetComponentName ( );
__declspec(implementation_key(1167)) double _IModelNodeAuto::GetCutLength ( );
__declspec(implementation_key(1168)) HRESULT _IModelNodeAuto::GetAssemblyReferenceKey ( SAFEARRAY * * ReferenceKey, VARIANT * KeySize );
__declspec(implementation_key(1169)) VARIANT_BOOL _IModelNodeAuto::GetIsAssemblyContainedPart ( );
__declspec(implementation_key(1170)) TGFramework::ApplicationPtr _IModelNodesAuto::GetApplication ( );
__declspec(implementation_key(1171)) IDispatchPtr _IModelNodesAuto::GetParent ( );
__declspec(implementation_key(1172)) long _IModelNodesAuto::GetCount ( );
__declspec(implementation_key(1173)) ModelNodePtr _IModelNodesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(1174)) IUnknownPtr _IModelNodesAuto::Get_NewEnum ( );
__declspec(implementation_key(1175)) TGFrameworkSupport::Boundary2dPtr SectionBoundaries2d::Item ( const _variant_t & Index );
__declspec(implementation_key(1176)) TGFramework::ApplicationPtr SectionBoundaries2d::GetApplication ( );
__declspec(implementation_key(1177)) long SectionBoundaries2d::GetCount ( );
__declspec(implementation_key(1178)) IDispatchPtr SectionBoundaries2d::GetParent ( );
__declspec(implementation_key(1179)) TGFramework::ApplicationPtr _IModelMemberAuto::GetApplication ( );
__declspec(implementation_key(1180)) IDispatchPtr _IModelMemberAuto::GetParent ( );
__declspec(implementation_key(1181)) ModelMemberPtr _IModelMemberAuto::GetImmediateParent ( );
__declspec(implementation_key(1182)) _bstr_t _IModelMemberAuto::GetFileName ( );
__declspec(implementation_key(1183)) enum ModelMemberDisplayTypeConstants _IModelMemberAuto::GetDisplayType ( );
__declspec(implementation_key(1184)) void _IModelMemberAuto::PutDisplayType ( enum ModelMemberDisplayTypeConstants DisplayType );
__declspec(implementation_key(1185)) enum ModelMemberTypeConstants _IModelMemberAuto::GetType ( );
__declspec(implementation_key(1186)) enum ModelMemberComponentTypeConstants _IModelMemberAuto::GetComponentType ( );
__declspec(implementation_key(1187)) VARIANT_BOOL _IModelMemberAuto::GetShowHiddenEdges ( );
__declspec(implementation_key(1188)) void _IModelMemberAuto::PutShowHiddenEdges ( VARIANT_BOOL value );
__declspec(implementation_key(1189)) VARIANT_BOOL _IModelMemberAuto::GetShowTangentEdges ( );
__declspec(implementation_key(1190)) void _IModelMemberAuto::PutShowTangentEdges ( VARIANT_BOOL value );
__declspec(implementation_key(1191)) VARIANT_BOOL _IModelMemberAuto::GetShowSectionHatch ( );
__declspec(implementation_key(1192)) void _IModelMemberAuto::PutShowSectionHatch ( VARIANT_BOOL value );
__declspec(implementation_key(1193)) _bstr_t _IModelMemberAuto::GetVisibleEdgeStyleName ( );
__declspec(implementation_key(1194)) void _IModelMemberAuto::PutVisibleEdgeStyleName ( _bstr_t StyleName );
__declspec(implementation_key(1195)) _bstr_t _IModelMemberAuto::GetHiddenEdgeStyleName ( );
__declspec(implementation_key(1196)) void _IModelMemberAuto::PutHiddenEdgeStyleName ( _bstr_t StyleName );
__declspec(implementation_key(1197)) _bstr_t _IModelMemberAuto::GetTangentEdgeStyleName ( );
__declspec(implementation_key(1198)) void _IModelMemberAuto::PutTangentEdgeStyleName ( _bstr_t StyleName );
__declspec(implementation_key(1199)) ModelMembersPtr _IModelMemberAuto::GetModelMembers ( );
__declspec(implementation_key(1200)) GraphicMembersPtr _IModelMemberAuto::GetGraphicMembers ( );
__declspec(implementation_key(1201)) DVLines2dPtr _IModelMemberAuto::GetDVLines2d ( );
__declspec(implementation_key(1202)) DVArcs2dPtr _IModelMemberAuto::GetDVArcs2d ( );
__declspec(implementation_key(1203)) DVBSplineCurves2dPtr _IModelMemberAuto::GetDVBSplineCurves2d ( );
__declspec(implementation_key(1204)) DVCircles2dPtr _IModelMemberAuto::GetDVCircles2d ( );
__declspec(implementation_key(1205)) DVEllipses2dPtr _IModelMemberAuto::GetDVEllipses2d ( );
__declspec(implementation_key(1206)) DVLineStrings2dPtr _IModelMemberAuto::GetDVLineStrings2d ( );
__declspec(implementation_key(1207)) DVEllipticalArcs2dPtr _IModelMemberAuto::GetDVEllipticalArcs2d ( );
__declspec(implementation_key(1208)) DVPoints2dPtr _IModelMemberAuto::GetDVPoints2d ( );
__declspec(implementation_key(1209)) VARIANT_BOOL _IModelMemberAuto::GetIsSimplified ( );
__declspec(implementation_key(1210)) VARIANT_BOOL _IModelMemberAuto::GetIsFlat ( );
__declspec(implementation_key(1211)) _bstr_t _IModelMemberAuto::GetRoadMap ( );
__declspec(implementation_key(1212)) VARIANT_BOOL _IModelMemberAuto::GetDisplayAsReference ( );
__declspec(implementation_key(1213)) void _IModelMemberAuto::PutDisplayAsReference ( VARIANT_BOOL value );
__declspec(implementation_key(1214)) HRESULT _IModelMemberAuto::GetRange2d ( double * XMin, double * YMin, double * XMax, double * YMax );
__declspec(implementation_key(1215)) HRESULT _IModelMemberAuto::GetRange3d ( double * XMin, double * YMin, double * ZMin, double * XMax, double * YMax, double * ZMax );
__declspec(implementation_key(1216)) _bstr_t _IModelMemberAuto::GetComponentName ( );
__declspec(implementation_key(1217)) VARIANT_BOOL _IModelMemberAuto::GetShowEdgesHiddenByOtherParts ( );
__declspec(implementation_key(1218)) void _IModelMemberAuto::PutShowEdgesHiddenByOtherParts ( VARIANT_BOOL value );
__declspec(implementation_key(1219)) VARIANT_BOOL _IModelMemberAuto::GetShowEdgesHiddenTangentEdgesSelfHidden ( );
__declspec(implementation_key(1220)) void _IModelMemberAuto::PutShowEdgesHiddenTangentEdgesSelfHidden ( VARIANT_BOOL value );
__declspec(implementation_key(1221)) VARIANT_BOOL _IModelMemberAuto::GetShowEdgesHiddenTangentEdgesHiddenByOtherParts ( );
__declspec(implementation_key(1222)) void _IModelMemberAuto::PutShowEdgesHiddenTangentEdgesHiddenByOtherParts ( VARIANT_BOOL value );
__declspec(implementation_key(1223)) ModelNodePtr _IModelMemberAuto::GetModelNode ( );
__declspec(implementation_key(1224)) VARIANT_BOOL _IModelMemberAuto::GetShowFill ( );
__declspec(implementation_key(1225)) void _IModelMemberAuto::PutShowFill ( VARIANT_BOOL value );
__declspec(implementation_key(1226)) _bstr_t _IModelMemberAuto::GetFillStyleName ( );
__declspec(implementation_key(1227)) void _IModelMemberAuto::PutFillStyleName ( _bstr_t StyleName );
__declspec(implementation_key(1228)) VARIANT_BOOL _IModelMemberAuto::GetDeriveFillStyleFromPart ( );
__declspec(implementation_key(1229)) void _IModelMemberAuto::PutDeriveFillStyleFromPart ( VARIANT_BOOL value );
__declspec(implementation_key(1230)) SectionBoundaries2dPtr _IModelMemberAuto::GetDVBoundaries2d ( );
__declspec(implementation_key(1231)) double _IModelMemberAuto::GetHatchSpacing ( );
__declspec(implementation_key(1232)) void _IModelMemberAuto::PutHatchSpacing ( double dSpacing );
__declspec(implementation_key(1233)) double _IModelMemberAuto::GetHatchAngle ( );
__declspec(implementation_key(1234)) void _IModelMemberAuto::PutHatchAngle ( double dAngle );
__declspec(implementation_key(1235)) VARIANT_BOOL _IModelMemberAuto::GetIsPrimaryAlternatePosition ( );
__declspec(implementation_key(1236)) VARIANT_BOOL _IModelMemberAuto::GetIsAlternatePosition ( );
__declspec(implementation_key(1237)) _bstr_t _IModelMemberAuto::GetAlternatePositionMemberName ( );
__declspec(implementation_key(1238)) VARIANT_BOOL _IModelMemberAuto::GetCutHardware ( );
__declspec(implementation_key(1239)) void _IModelMemberAuto::PutCutHardware ( VARIANT_BOOL value );
__declspec(implementation_key(1240)) VARIANT_BOOL _IModelMemberAuto::GetDisplaySection ( );
__declspec(implementation_key(1241)) void _IModelMemberAuto::PutDisplaySection ( VARIANT_BOOL value );
__declspec(implementation_key(1242)) VARIANT_BOOL _IModelMemberAuto::GetDisplayPart ( );
__declspec(implementation_key(1243)) void _IModelMemberAuto::PutDisplayPart ( VARIANT_BOOL value );
__declspec(implementation_key(1244)) VARIANT_BOOL _IModelMemberAuto::GetDeriveDisplayAsReferenceFromAsm ( );
__declspec(implementation_key(1245)) void _IModelMemberAuto::PutDeriveDisplayAsReferenceFromAsm ( VARIANT_BOOL value );
__declspec(implementation_key(1246)) TGFrameworkSupport::Boundary2dPtr _ISectionBoundaries2dAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(1247)) IUnknownPtr _ISectionBoundaries2dAuto::Get_NewEnum ( );
__declspec(implementation_key(1248)) TGFramework::ApplicationPtr _ISectionBoundaries2dAuto::GetApplication ( );
__declspec(implementation_key(1249)) long _ISectionBoundaries2dAuto::GetCount ( );
__declspec(implementation_key(1250)) IDispatchPtr _ISectionBoundaries2dAuto::GetParent ( );
__declspec(implementation_key(1251)) CuttingPlanePtr CuttingPlanes::Item ( const _variant_t & Index );
__declspec(implementation_key(1252)) IDispatchPtr CuttingPlanes::GetApplication ( );
__declspec(implementation_key(1253)) long CuttingPlanes::GetCount ( );
__declspec(implementation_key(1254)) IDispatchPtr CuttingPlanes::GetParent ( );
__declspec(implementation_key(1255)) CuttingPlanePtr CuttingPlanes::Add ( );
__declspec(implementation_key(1256)) TGFramework::ApplicationPtr CuttingPlane::GetApplication ( );
__declspec(implementation_key(1257)) VARIANT_BOOL CuttingPlane::GetDisplayCaption ( );
__declspec(implementation_key(1258)) void CuttingPlane::PutDisplayCaption ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1259)) _bstr_t CuttingPlane::GetCaption ( );
__declspec(implementation_key(1260)) void CuttingPlane::PutCaption ( _bstr_t _arg1 );
__declspec(implementation_key(1261)) enum TGFrameworkSupport::DimViewCuttingPlaneDisplayTypeConstants CuttingPlane::GetDisplayType ( );
__declspec(implementation_key(1262)) void CuttingPlane::PutDisplayType ( enum TGFrameworkSupport::DimViewCuttingPlaneDisplayTypeConstants _arg1 );
__declspec(implementation_key(1263)) _bstr_t CuttingPlane::GetTextFont ( );
__declspec(implementation_key(1264)) void CuttingPlane::PutTextFont ( _bstr_t _arg1 );
__declspec(implementation_key(1265)) enum TGFrameworkSupport::DimTextFontStyleConstants CuttingPlane::GetTextFontStyle ( );
__declspec(implementation_key(1266)) void CuttingPlane::PutTextFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants _arg1 );
__declspec(implementation_key(1267)) double CuttingPlane::GetTextHeight ( );
__declspec(implementation_key(1268)) void CuttingPlane::PutTextHeight ( double _arg1 );
__declspec(implementation_key(1269)) double CuttingPlane::GetTextRatio ( );
__declspec(implementation_key(1270)) void CuttingPlane::PutTextRatio ( double _arg1 );
__declspec(implementation_key(1271)) long CuttingPlane::GetTextColor ( );
__declspec(implementation_key(1272)) void CuttingPlane::PutTextColor ( long _arg1 );
__declspec(implementation_key(1273)) _bstr_t CuttingPlane::GetStyleName ( );
__declspec(implementation_key(1274)) void CuttingPlane::PutStyleName ( _bstr_t _arg1 );
__declspec(implementation_key(1275)) enum TGFrameworkSupport::DimTermTypeConstants CuttingPlane::GetTerminatorType ( );
__declspec(implementation_key(1276)) void CuttingPlane::PutTerminatorType ( enum TGFrameworkSupport::DimTermTypeConstants _arg1 );
__declspec(implementation_key(1277)) double CuttingPlane::GetTerminatorRatio ( );
__declspec(implementation_key(1278)) void CuttingPlane::PutTerminatorRatio ( double _arg1 );
__declspec(implementation_key(1279)) double CuttingPlane::GetLineWidth ( );
__declspec(implementation_key(1280)) void CuttingPlane::PutLineWidth ( double _arg1 );
__declspec(implementation_key(1281)) _bstr_t CuttingPlane::GetLineType ( );
__declspec(implementation_key(1282)) void CuttingPlane::PutLineType ( _bstr_t _arg1 );
__declspec(implementation_key(1283)) _bstr_t CuttingPlane::GetCaptionDefinitionText ( );
__declspec(implementation_key(1284)) void CuttingPlane::PutCaptionDefinitionText ( _bstr_t _arg1 );
__declspec(implementation_key(1285)) _bstr_t CuttingPlane::GetCaptionDisplayedText ( );
__declspec(implementation_key(1286)) DrawingViewPtr CuttingPlane::GetSourceDrawingView ( );
__declspec(implementation_key(1287)) HRESULT CuttingPlane::GetFoldLineWithViewDirection ( double * LineStartX, double * LineStartY, double * LineEndX, double * LineEndY, double * ViewDirectionX, double * ViewDirectionY );
__declspec(implementation_key(1288)) _bstr_t CuttingPlane::GetViewSheetNumberDefinitionText ( );
__declspec(implementation_key(1289)) void CuttingPlane::PutViewSheetNumberDefinitionText ( _bstr_t _arg1 );
__declspec(implementation_key(1290)) VARIANT_BOOL CuttingPlane::GetDisplayViewSheetNumber ( );
__declspec(implementation_key(1291)) void CuttingPlane::PutDisplayViewSheetNumber ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1292)) enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants CuttingPlane::GetViewSheetNumberLocation ( );
__declspec(implementation_key(1293)) void CuttingPlane::PutViewSheetNumberLocation ( enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants _arg1 );
__declspec(implementation_key(1294)) enum TGFrameworkSupport::CuttingPlaneLineDisplayStyleConstants CuttingPlane::GetLineDisplayStyle ( );
__declspec(implementation_key(1295)) void CuttingPlane::PutLineDisplayStyle ( enum TGFrameworkSupport::CuttingPlaneLineDisplayStyleConstants _arg1 );
__declspec(implementation_key(1296)) double CuttingPlane::GetThickLineLengthRatio ( );
__declspec(implementation_key(1297)) void CuttingPlane::PutThickLineLengthRatio ( double _arg1 );
__declspec(implementation_key(1298)) double CuttingPlane::GetThickLineArrowOffset ( );
__declspec(implementation_key(1299)) void CuttingPlane::PutThickLineArrowOffset ( double _arg1 );
__declspec(implementation_key(1300)) HRESULT CuttingPlane::GetCaptionPosition ( VARIANT_BOOL CaptionAtStartOfLine, double * x, double * y );
__declspec(implementation_key(1301)) HRESULT CuttingPlane::SetCaptionPosition ( VARIANT_BOOL CaptionAtStartOfLine, double x, double y );
__declspec(implementation_key(1302)) void CuttingPlane::PutLayer ( _bstr_t _arg1 );
__declspec(implementation_key(1303)) _bstr_t CuttingPlane::GetLayer ( );
__declspec(implementation_key(1304)) void CuttingPlane::PutViewSide ( enum TGFramework::SectionViewProfileSide _arg1 );
__declspec(implementation_key(1305)) enum TGFramework::SectionViewProfileSide CuttingPlane::GetViewSide ( );
__declspec(implementation_key(1306)) void CuttingPlane::PutFoldSegment ( long _arg1 );
__declspec(implementation_key(1307)) long CuttingPlane::GetFoldSegment ( );
__declspec(implementation_key(1308)) DrawingViewPtr CuttingPlane::GetSectionView ( );
__declspec(implementation_key(1309)) DrawingViewPtr CuttingPlane::CreateView ( enum DraftSectionViewType SectionType );
__declspec(implementation_key(1310)) DraftProfilePtr CuttingPlane::GetProfile ( );
__declspec(implementation_key(1311)) void CuttingPlane::PutAuto ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1312)) VARIANT_BOOL CuttingPlane::GetAuto ( );
__declspec(implementation_key(1313)) CuttingPlanePtr _ICuttingPlanesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(1314)) IUnknownPtr _ICuttingPlanesAuto::Get_NewEnum ( );
__declspec(implementation_key(1315)) IDispatchPtr _ICuttingPlanesAuto::GetApplication ( );
__declspec(implementation_key(1316)) long _ICuttingPlanesAuto::GetCount ( );
__declspec(implementation_key(1317)) IDispatchPtr _ICuttingPlanesAuto::GetParent ( );
__declspec(implementation_key(1318)) CuttingPlanePtr _ICuttingPlanesAuto::Add ( );
__declspec(implementation_key(1319)) TGFramework::ApplicationPtr DraftProfile::GetApplication ( );
__declspec(implementation_key(1320)) IDispatchPtr DraftProfile::GetParent ( );
__declspec(implementation_key(1321)) enum ProfileValidationStatus DraftProfile::Validate ( );
__declspec(implementation_key(1322)) HRESULT DraftProfile::BeginEdit ( );
__declspec(implementation_key(1323)) HRESULT DraftProfile::EndEdit ( );
__declspec(implementation_key(1324)) TGFrameworkSupport::Lines2dPtr DraftProfile::GetLines2d ( );
__declspec(implementation_key(1325)) TGFrameworkSupport::Circles2dPtr DraftProfile::GetCircles2d ( );
__declspec(implementation_key(1326)) TGFrameworkSupport::Arcs2dPtr DraftProfile::GetArcs2d ( );
__declspec(implementation_key(1327)) TGFrameworkSupport::Ellipses2dPtr DraftProfile::GetEllipses2d ( );
__declspec(implementation_key(1328)) TGFrameworkSupport::BSplineCurves2dPtr DraftProfile::GetBsplineCurves2d ( );
__declspec(implementation_key(1329)) TGFrameworkSupport::EllipticalArcs2dPtr DraftProfile::GetEllipticalArcs2d ( );
__declspec(implementation_key(1330)) TGFrameworkSupport::DimensionsPtr DraftProfile::GetDimensions ( );
__declspec(implementation_key(1331)) TGFrameworkSupport::Relations2dPtr DraftProfile::GetRelations2d ( );
__declspec(implementation_key(1332)) TGFramework::ApplicationPtr _ICuttingPlaneAuto::GetApplication ( );
__declspec(implementation_key(1333)) VARIANT_BOOL _ICuttingPlaneAuto::GetDisplayCaption ( );
__declspec(implementation_key(1334)) void _ICuttingPlaneAuto::PutDisplayCaption ( VARIANT_BOOL pDisplayCaption );
__declspec(implementation_key(1335)) _bstr_t _ICuttingPlaneAuto::GetCaption ( );
__declspec(implementation_key(1336)) void _ICuttingPlaneAuto::PutCaption ( _bstr_t pCaption );
__declspec(implementation_key(1337)) enum TGFrameworkSupport::DimViewCuttingPlaneDisplayTypeConstants _ICuttingPlaneAuto::GetDisplayType ( );
__declspec(implementation_key(1338)) void _ICuttingPlaneAuto::PutDisplayType ( enum TGFrameworkSupport::DimViewCuttingPlaneDisplayTypeConstants DisplayType );
__declspec(implementation_key(1339)) _bstr_t _ICuttingPlaneAuto::GetTextFont ( );
__declspec(implementation_key(1340)) void _ICuttingPlaneAuto::PutTextFont ( _bstr_t TextFont );
__declspec(implementation_key(1341)) enum TGFrameworkSupport::DimTextFontStyleConstants _ICuttingPlaneAuto::GetTextFontStyle ( );
__declspec(implementation_key(1342)) void _ICuttingPlaneAuto::PutTextFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants TextFontStyle );
__declspec(implementation_key(1343)) double _ICuttingPlaneAuto::GetTextHeight ( );
__declspec(implementation_key(1344)) void _ICuttingPlaneAuto::PutTextHeight ( double TextHeight );
__declspec(implementation_key(1345)) double _ICuttingPlaneAuto::GetTextRatio ( );
__declspec(implementation_key(1346)) void _ICuttingPlaneAuto::PutTextRatio ( double TextRatio );
__declspec(implementation_key(1347)) long _ICuttingPlaneAuto::GetTextColor ( );
__declspec(implementation_key(1348)) void _ICuttingPlaneAuto::PutTextColor ( long TextColor );
__declspec(implementation_key(1349)) _bstr_t _ICuttingPlaneAuto::GetStyleName ( );
__declspec(implementation_key(1350)) void _ICuttingPlaneAuto::PutStyleName ( _bstr_t StyleName );
__declspec(implementation_key(1351)) enum TGFrameworkSupport::DimTermTypeConstants _ICuttingPlaneAuto::GetTerminatorType ( );
__declspec(implementation_key(1352)) void _ICuttingPlaneAuto::PutTerminatorType ( enum TGFrameworkSupport::DimTermTypeConstants TerminatorType );
__declspec(implementation_key(1353)) double _ICuttingPlaneAuto::GetTerminatorRatio ( );
__declspec(implementation_key(1354)) void _ICuttingPlaneAuto::PutTerminatorRatio ( double TerminatorRatio );
__declspec(implementation_key(1355)) double _ICuttingPlaneAuto::GetLineWidth ( );
__declspec(implementation_key(1356)) void _ICuttingPlaneAuto::PutLineWidth ( double LineWidth );
__declspec(implementation_key(1357)) _bstr_t _ICuttingPlaneAuto::GetLineType ( );
__declspec(implementation_key(1358)) void _ICuttingPlaneAuto::PutLineType ( _bstr_t LineType );
__declspec(implementation_key(1359)) _bstr_t _ICuttingPlaneAuto::GetCaptionDefinitionText ( );
__declspec(implementation_key(1360)) void _ICuttingPlaneAuto::PutCaptionDefinitionText ( _bstr_t CaptionDefinitionText );
__declspec(implementation_key(1361)) _bstr_t _ICuttingPlaneAuto::GetCaptionDisplayedText ( );
__declspec(implementation_key(1362)) DrawingViewPtr _ICuttingPlaneAuto::GetSourceDrawingView ( );
__declspec(implementation_key(1363)) HRESULT _ICuttingPlaneAuto::GetFoldLineWithViewDirection ( double * LineStartX, double * LineStartY, double * LineEndX, double * LineEndY, double * ViewDirectionX, double * ViewDirectionY );
__declspec(implementation_key(1364)) _bstr_t _ICuttingPlaneAuto::GetViewSheetNumberDefinitionText ( );
__declspec(implementation_key(1365)) void _ICuttingPlaneAuto::PutViewSheetNumberDefinitionText ( _bstr_t ViewSheetNumberDefinitionText );
__declspec(implementation_key(1366)) VARIANT_BOOL _ICuttingPlaneAuto::GetDisplayViewSheetNumber ( );
__declspec(implementation_key(1367)) void _ICuttingPlaneAuto::PutDisplayViewSheetNumber ( VARIANT_BOOL DisplayViewSheetNumber );
__declspec(implementation_key(1368)) enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants _ICuttingPlaneAuto::GetViewSheetNumberLocation ( );
__declspec(implementation_key(1369)) void _ICuttingPlaneAuto::PutViewSheetNumberLocation ( enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants ViewSheetNumberLocation );
__declspec(implementation_key(1370)) enum TGFrameworkSupport::CuttingPlaneLineDisplayStyleConstants _ICuttingPlaneAuto::GetLineDisplayStyle ( );
__declspec(implementation_key(1371)) void _ICuttingPlaneAuto::PutLineDisplayStyle ( enum TGFrameworkSupport::CuttingPlaneLineDisplayStyleConstants LineDisplayStyle );
__declspec(implementation_key(1372)) double _ICuttingPlaneAuto::GetThickLineLengthRatio ( );
__declspec(implementation_key(1373)) void _ICuttingPlaneAuto::PutThickLineLengthRatio ( double ThickLineLengthRatio );
__declspec(implementation_key(1374)) double _ICuttingPlaneAuto::GetThickLineArrowOffset ( );
__declspec(implementation_key(1375)) void _ICuttingPlaneAuto::PutThickLineArrowOffset ( double ThickLineArrowOffset );
__declspec(implementation_key(1376)) HRESULT _ICuttingPlaneAuto::GetCaptionPosition ( VARIANT_BOOL CaptionAtStartOfLine, double * x, double * y );
__declspec(implementation_key(1377)) HRESULT _ICuttingPlaneAuto::SetCaptionPosition ( VARIANT_BOOL CaptionAtStartOfLine, double x, double y );
__declspec(implementation_key(1378)) void _ICuttingPlaneAuto::PutLayer ( _bstr_t Layer );
__declspec(implementation_key(1379)) _bstr_t _ICuttingPlaneAuto::GetLayer ( );
__declspec(implementation_key(1380)) void _ICuttingPlaneAuto::PutViewSide ( enum TGFramework::SectionViewProfileSide Side );
__declspec(implementation_key(1381)) enum TGFramework::SectionViewProfileSide _ICuttingPlaneAuto::GetViewSide ( );
__declspec(implementation_key(1382)) void _ICuttingPlaneAuto::PutFoldSegment ( long Segment );
__declspec(implementation_key(1383)) long _ICuttingPlaneAuto::GetFoldSegment ( );
__declspec(implementation_key(1384)) DrawingViewPtr _ICuttingPlaneAuto::GetSectionView ( );
__declspec(implementation_key(1385)) DrawingViewPtr _ICuttingPlaneAuto::CreateView ( enum DraftSectionViewType SectionType );
__declspec(implementation_key(1386)) DraftProfilePtr _ICuttingPlaneAuto::GetProfile ( );
__declspec(implementation_key(1387)) void _ICuttingPlaneAuto::PutAuto ( VARIANT_BOOL value );
__declspec(implementation_key(1388)) VARIANT_BOOL _ICuttingPlaneAuto::GetAuto ( );
__declspec(implementation_key(1389)) TGFramework::ApplicationPtr _IDraftProfileAuto::GetApplication ( );
__declspec(implementation_key(1390)) IDispatchPtr _IDraftProfileAuto::GetParent ( );
__declspec(implementation_key(1391)) enum ProfileValidationStatus _IDraftProfileAuto::Validate ( );
__declspec(implementation_key(1392)) HRESULT _IDraftProfileAuto::BeginEdit ( );
__declspec(implementation_key(1393)) HRESULT _IDraftProfileAuto::EndEdit ( );
__declspec(implementation_key(1394)) TGFrameworkSupport::Lines2dPtr _IDraftProfileAuto::GetLines2d ( );
__declspec(implementation_key(1395)) TGFrameworkSupport::Circles2dPtr _IDraftProfileAuto::GetCircles2d ( );
__declspec(implementation_key(1396)) TGFrameworkSupport::Arcs2dPtr _IDraftProfileAuto::GetArcs2d ( );
__declspec(implementation_key(1397)) TGFrameworkSupport::Ellipses2dPtr _IDraftProfileAuto::GetEllipses2d ( );
__declspec(implementation_key(1398)) TGFrameworkSupport::BSplineCurves2dPtr _IDraftProfileAuto::GetBsplineCurves2d ( );
__declspec(implementation_key(1399)) TGFrameworkSupport::EllipticalArcs2dPtr _IDraftProfileAuto::GetEllipticalArcs2d ( );
__declspec(implementation_key(1400)) TGFrameworkSupport::DimensionsPtr _IDraftProfileAuto::GetDimensions ( );
__declspec(implementation_key(1401)) TGFrameworkSupport::Relations2dPtr _IDraftProfileAuto::GetRelations2d ( );
__declspec(implementation_key(1402)) BrokenOutSectionProfilePtr BrokenOutSectionProfiles::Item ( const _variant_t & Index );
__declspec(implementation_key(1403)) IDispatchPtr BrokenOutSectionProfiles::GetApplication ( );
__declspec(implementation_key(1404)) long BrokenOutSectionProfiles::GetCount ( );
__declspec(implementation_key(1405)) IDispatchPtr BrokenOutSectionProfiles::GetParent ( );
__declspec(implementation_key(1406)) BrokenOutSectionProfilePtr BrokenOutSectionProfiles::Add ( struct DrawingView * TargetView );
__declspec(implementation_key(1407)) TGFramework::ApplicationPtr BrokenOutSectionProfile::GetApplication ( );
__declspec(implementation_key(1408)) IDispatchPtr BrokenOutSectionProfile::GetParent ( );
__declspec(implementation_key(1409)) void BrokenOutSectionProfile::PutLayer ( _bstr_t _arg1 );
__declspec(implementation_key(1410)) _bstr_t BrokenOutSectionProfile::GetLayer ( );
__declspec(implementation_key(1411)) DraftProfilePtr BrokenOutSectionProfile::GetProfile ( );
__declspec(implementation_key(1412)) DrawingViewPtr BrokenOutSectionProfile::GetTargetView ( );
__declspec(implementation_key(1413)) void BrokenOutSectionProfile::PutTargetView ( struct DrawingView * _arg1 );
__declspec(implementation_key(1414)) double BrokenOutSectionProfile::GetDepth ( );
__declspec(implementation_key(1415)) void BrokenOutSectionProfile::PutDepth ( double _arg1 );
__declspec(implementation_key(1416)) double BrokenOutSectionProfile::GetDepthPlaneOffset ( );
__declspec(implementation_key(1417)) void BrokenOutSectionProfile::PutDepthPlaneOffset ( double _arg1 );
__declspec(implementation_key(1418)) BrokenOutSectionProfilePtr _IBrokenOutSectionProfilesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(1419)) IUnknownPtr _IBrokenOutSectionProfilesAuto::Get_NewEnum ( );
__declspec(implementation_key(1420)) IDispatchPtr _IBrokenOutSectionProfilesAuto::GetApplication ( );
__declspec(implementation_key(1421)) long _IBrokenOutSectionProfilesAuto::GetCount ( );
__declspec(implementation_key(1422)) IDispatchPtr _IBrokenOutSectionProfilesAuto::GetParent ( );
__declspec(implementation_key(1423)) BrokenOutSectionProfilePtr _IBrokenOutSectionProfilesAuto::Add ( struct DrawingView * TargetView );
__declspec(implementation_key(1424)) TGFramework::ApplicationPtr _IBrokenOutSectionProfileAuto::GetApplication ( );
__declspec(implementation_key(1425)) IDispatchPtr _IBrokenOutSectionProfileAuto::GetParent ( );
__declspec(implementation_key(1426)) void _IBrokenOutSectionProfileAuto::PutLayer ( _bstr_t Layer );
__declspec(implementation_key(1427)) _bstr_t _IBrokenOutSectionProfileAuto::GetLayer ( );
__declspec(implementation_key(1428)) DraftProfilePtr _IBrokenOutSectionProfileAuto::GetProfile ( );
__declspec(implementation_key(1429)) DrawingViewPtr _IBrokenOutSectionProfileAuto::GetTargetView ( );
__declspec(implementation_key(1430)) void _IBrokenOutSectionProfileAuto::PutTargetView ( struct DrawingView * TargetView );
__declspec(implementation_key(1431)) double _IBrokenOutSectionProfileAuto::GetDepth ( );
__declspec(implementation_key(1432)) void _IBrokenOutSectionProfileAuto::PutDepth ( double RelativeDepth );
__declspec(implementation_key(1433)) double _IBrokenOutSectionProfileAuto::GetDepthPlaneOffset ( );
__declspec(implementation_key(1434)) void _IBrokenOutSectionProfileAuto::PutDepthPlaneOffset ( double offset );
__declspec(implementation_key(1435)) DetailEnvelopePtr DetailEnvelopes::Item ( const _variant_t & Index );
__declspec(implementation_key(1436)) IDispatchPtr DetailEnvelopes::GetApplication ( );
__declspec(implementation_key(1437)) long DetailEnvelopes::GetCount ( );
__declspec(implementation_key(1438)) IDispatchPtr DetailEnvelopes::GetParent ( );
__declspec(implementation_key(1439)) VARIANT_BOOL DetailEnvelope::GetDisplayCaption ( );
__declspec(implementation_key(1440)) void DetailEnvelope::PutDisplayCaption ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1441)) DrawingViewPtr DetailEnvelope::GetSourceDrawingView ( );
__declspec(implementation_key(1442)) _bstr_t DetailEnvelope::GetCaption ( );
__declspec(implementation_key(1443)) void DetailEnvelope::PutCaption ( _bstr_t _arg1 );
__declspec(implementation_key(1444)) double DetailEnvelope::GetDiameter ( );
__declspec(implementation_key(1445)) void DetailEnvelope::PutDiameter ( double _arg1 );
__declspec(implementation_key(1446)) HRESULT DetailEnvelope::GetCenterPoint ( double * x, double * y );
__declspec(implementation_key(1447)) HRESULT DetailEnvelope::SetCenterPoint ( double x, double y );
__declspec(implementation_key(1448)) double DetailEnvelope::GetLineWidth ( );
__declspec(implementation_key(1449)) void DetailEnvelope::PutLineWidth ( double _arg1 );
__declspec(implementation_key(1450)) _bstr_t DetailEnvelope::GetLineType ( );
__declspec(implementation_key(1451)) void DetailEnvelope::PutLineType ( _bstr_t _arg1 );
__declspec(implementation_key(1452)) _bstr_t DetailEnvelope::GetTextFont ( );
__declspec(implementation_key(1453)) void DetailEnvelope::PutTextFont ( _bstr_t _arg1 );
__declspec(implementation_key(1454)) enum TGFrameworkSupport::DimTextFontStyleConstants DetailEnvelope::GetTextFontStyle ( );
__declspec(implementation_key(1455)) void DetailEnvelope::PutTextFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants _arg1 );
__declspec(implementation_key(1456)) double DetailEnvelope::GetTextHeight ( );
__declspec(implementation_key(1457)) void DetailEnvelope::PutTextHeight ( double _arg1 );
__declspec(implementation_key(1458)) double DetailEnvelope::GetTextRatio ( );
__declspec(implementation_key(1459)) void DetailEnvelope::PutTextRatio ( double _arg1 );
__declspec(implementation_key(1460)) long DetailEnvelope::GetTextColor ( );
__declspec(implementation_key(1461)) void DetailEnvelope::PutTextColor ( long _arg1 );
__declspec(implementation_key(1462)) _bstr_t DetailEnvelope::GetStyleName ( );
__declspec(implementation_key(1463)) void DetailEnvelope::PutStyleName ( _bstr_t _arg1 );
__declspec(implementation_key(1464)) TGFramework::ApplicationPtr DetailEnvelope::GetApplication ( );
__declspec(implementation_key(1465)) long DetailEnvelope::GetIndex ( );
__declspec(implementation_key(1466)) _bstr_t DetailEnvelope::GetName ( const _variant_t & Recurse );
__declspec(implementation_key(1467)) IDispatchPtr DetailEnvelope::GetParent ( );
__declspec(implementation_key(1468)) long DetailEnvelope::GetType ( );
__declspec(implementation_key(1469)) VARIANT_BOOL DetailEnvelope::GetVisible ( );
__declspec(implementation_key(1470)) void DetailEnvelope::PutVisible ( VARIANT_BOOL * _arg1 );
__declspec(implementation_key(1471)) long DetailEnvelope::GetZOrder ( );
__declspec(implementation_key(1472)) _bstr_t DetailEnvelope::GetKey ( const _variant_t & Recurse );
__declspec(implementation_key(1473)) IDispatchPtr DetailEnvelope::GetDocument ( );
__declspec(implementation_key(1474)) HRESULT DetailEnvelope::Copy ( );
__declspec(implementation_key(1475)) HRESULT DetailEnvelope::Cut ( );
__declspec(implementation_key(1476)) HRESULT DetailEnvelope::Delete ( );
__declspec(implementation_key(1477)) HRESULT DetailEnvelope::BringToFront ( );
__declspec(implementation_key(1478)) HRESULT DetailEnvelope::BringForward ( );
__declspec(implementation_key(1479)) HRESULT DetailEnvelope::SendToBack ( );
__declspec(implementation_key(1480)) HRESULT DetailEnvelope::SendBackward ( );
__declspec(implementation_key(1481)) HRESULT DetailEnvelope::Select ( );
__declspec(implementation_key(1482)) HRESULT DetailEnvelope::Range ( double * min_x, double * min_y, double * max_x, double * max_y );
__declspec(implementation_key(1483)) enum DetailEnvelopeStandardConstants DetailEnvelope::GetDisplayStandard ( );
__declspec(implementation_key(1484)) void DetailEnvelope::PutDisplayStandard ( enum DetailEnvelopeStandardConstants _arg1 );
__declspec(implementation_key(1485)) VARIANT_BOOL DetailEnvelope::GetDisplayAsCircle ( );
__declspec(implementation_key(1486)) void DetailEnvelope::PutDisplayAsCircle ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1487)) _bstr_t DetailEnvelope::GetCaptionDefinitionText ( );
__declspec(implementation_key(1488)) void DetailEnvelope::PutCaptionDefinitionText ( _bstr_t _arg1 );
__declspec(implementation_key(1489)) _bstr_t DetailEnvelope::GetCaptionDisplayedText ( );
__declspec(implementation_key(1490)) _bstr_t DetailEnvelope::GetViewSheetNumberDefinitionText ( );
__declspec(implementation_key(1491)) void DetailEnvelope::PutViewSheetNumberDefinitionText ( _bstr_t _arg1 );
__declspec(implementation_key(1492)) VARIANT_BOOL DetailEnvelope::GetDisplayViewSheetNumber ( );
__declspec(implementation_key(1493)) void DetailEnvelope::PutDisplayViewSheetNumber ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1494)) HRESULT DetailEnvelope::GetCaptionPosition ( double * x, double * y );
__declspec(implementation_key(1495)) HRESULT DetailEnvelope::SetCaptionPosition ( double x, double y );
__declspec(implementation_key(1496)) void DetailEnvelope::PutLayer ( _bstr_t _arg1 );
__declspec(implementation_key(1497)) _bstr_t DetailEnvelope::GetLayer ( );
__declspec(implementation_key(1498)) DrawingViewPtr DetailEnvelope::GetDetailView ( );
__declspec(implementation_key(1499)) DraftProfilePtr DetailEnvelope::GetProfile ( );
__declspec(implementation_key(1500)) void DetailEnvelope::PutAuto ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1501)) VARIANT_BOOL DetailEnvelope::GetAuto ( );
__declspec(implementation_key(1502)) IDispatchPtr DetailEnvelope::GetAttributeSets ( );
__declspec(implementation_key(1503)) VARIANT_BOOL DetailEnvelope::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1504)) DetailEnvelopePtr _IDetailEnvelopesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(1505)) IUnknownPtr _IDetailEnvelopesAuto::Get_NewEnum ( );
__declspec(implementation_key(1506)) IDispatchPtr _IDetailEnvelopesAuto::GetApplication ( );
__declspec(implementation_key(1507)) long _IDetailEnvelopesAuto::GetCount ( );
__declspec(implementation_key(1508)) IDispatchPtr _IDetailEnvelopesAuto::GetParent ( );
__declspec(implementation_key(1509)) VARIANT_BOOL _IDetailEnvelopeAuto::GetDisplayCaption ( );
__declspec(implementation_key(1510)) void _IDetailEnvelopeAuto::PutDisplayCaption ( VARIANT_BOOL pDisplayCaption );
__declspec(implementation_key(1511)) DrawingViewPtr _IDetailEnvelopeAuto::GetSourceDrawingView ( );
__declspec(implementation_key(1512)) _bstr_t _IDetailEnvelopeAuto::GetCaption ( );
__declspec(implementation_key(1513)) void _IDetailEnvelopeAuto::PutCaption ( _bstr_t Caption );
__declspec(implementation_key(1514)) double _IDetailEnvelopeAuto::GetDiameter ( );
__declspec(implementation_key(1515)) void _IDetailEnvelopeAuto::PutDiameter ( double Diameter );
__declspec(implementation_key(1516)) HRESULT _IDetailEnvelopeAuto::GetCenterPoint ( double * x, double * y );
__declspec(implementation_key(1517)) HRESULT _IDetailEnvelopeAuto::SetCenterPoint ( double x, double y );
__declspec(implementation_key(1518)) double _IDetailEnvelopeAuto::GetLineWidth ( );
__declspec(implementation_key(1519)) void _IDetailEnvelopeAuto::PutLineWidth ( double LineWidth );
__declspec(implementation_key(1520)) _bstr_t _IDetailEnvelopeAuto::GetLineType ( );
__declspec(implementation_key(1521)) void _IDetailEnvelopeAuto::PutLineType ( _bstr_t LineType );
__declspec(implementation_key(1522)) _bstr_t _IDetailEnvelopeAuto::GetTextFont ( );
__declspec(implementation_key(1523)) void _IDetailEnvelopeAuto::PutTextFont ( _bstr_t TextFont );
__declspec(implementation_key(1524)) enum TGFrameworkSupport::DimTextFontStyleConstants _IDetailEnvelopeAuto::GetTextFontStyle ( );
__declspec(implementation_key(1525)) void _IDetailEnvelopeAuto::PutTextFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants TextFontStyle );
__declspec(implementation_key(1526)) double _IDetailEnvelopeAuto::GetTextHeight ( );
__declspec(implementation_key(1527)) void _IDetailEnvelopeAuto::PutTextHeight ( double TextHeight );
__declspec(implementation_key(1528)) double _IDetailEnvelopeAuto::GetTextRatio ( );
__declspec(implementation_key(1529)) void _IDetailEnvelopeAuto::PutTextRatio ( double TextRatio );
__declspec(implementation_key(1530)) long _IDetailEnvelopeAuto::GetTextColor ( );
__declspec(implementation_key(1531)) void _IDetailEnvelopeAuto::PutTextColor ( long TextColor );
__declspec(implementation_key(1532)) _bstr_t _IDetailEnvelopeAuto::GetStyleName ( );
__declspec(implementation_key(1533)) void _IDetailEnvelopeAuto::PutStyleName ( _bstr_t StyleName );
__declspec(implementation_key(1534)) TGFramework::ApplicationPtr _IDetailEnvelopeAuto::GetApplication ( );
__declspec(implementation_key(1535)) long _IDetailEnvelopeAuto::GetIndex ( );
__declspec(implementation_key(1536)) _bstr_t _IDetailEnvelopeAuto::GetName ( const _variant_t & Recurse, long Lcid );
__declspec(implementation_key(1537)) IDispatchPtr _IDetailEnvelopeAuto::GetParent ( );
__declspec(implementation_key(1538)) long _IDetailEnvelopeAuto::GetType ( );
__declspec(implementation_key(1539)) VARIANT_BOOL _IDetailEnvelopeAuto::GetVisible ( );
__declspec(implementation_key(1540)) void _IDetailEnvelopeAuto::PutVisible ( VARIANT_BOOL * Toggle );
__declspec(implementation_key(1541)) long _IDetailEnvelopeAuto::GetZOrder ( );
__declspec(implementation_key(1542)) _bstr_t _IDetailEnvelopeAuto::GetKey ( const _variant_t & Recurse );
__declspec(implementation_key(1543)) IDispatchPtr _IDetailEnvelopeAuto::GetDocument ( );
__declspec(implementation_key(1544)) HRESULT _IDetailEnvelopeAuto::Copy ( );
__declspec(implementation_key(1545)) HRESULT _IDetailEnvelopeAuto::Cut ( );
__declspec(implementation_key(1546)) HRESULT _IDetailEnvelopeAuto::Delete ( );
__declspec(implementation_key(1547)) HRESULT _IDetailEnvelopeAuto::BringToFront ( );
__declspec(implementation_key(1548)) HRESULT _IDetailEnvelopeAuto::BringForward ( );
__declspec(implementation_key(1549)) HRESULT _IDetailEnvelopeAuto::SendToBack ( );
__declspec(implementation_key(1550)) HRESULT _IDetailEnvelopeAuto::SendBackward ( );
__declspec(implementation_key(1551)) HRESULT _IDetailEnvelopeAuto::Select ( );
__declspec(implementation_key(1552)) HRESULT _IDetailEnvelopeAuto::Range ( double * min_x, double * min_y, double * max_x, double * max_y );
__declspec(implementation_key(1553)) enum DetailEnvelopeStandardConstants _IDetailEnvelopeAuto::GetDisplayStandard ( );
__declspec(implementation_key(1554)) void _IDetailEnvelopeAuto::PutDisplayStandard ( enum DetailEnvelopeStandardConstants value );
__declspec(implementation_key(1555)) VARIANT_BOOL _IDetailEnvelopeAuto::GetDisplayAsCircle ( );
__declspec(implementation_key(1556)) void _IDetailEnvelopeAuto::PutDisplayAsCircle ( VARIANT_BOOL value );
__declspec(implementation_key(1557)) _bstr_t _IDetailEnvelopeAuto::GetCaptionDefinitionText ( );
__declspec(implementation_key(1558)) void _IDetailEnvelopeAuto::PutCaptionDefinitionText ( _bstr_t CaptionDefinitionText );
__declspec(implementation_key(1559)) _bstr_t _IDetailEnvelopeAuto::GetCaptionDisplayedText ( );
__declspec(implementation_key(1560)) _bstr_t _IDetailEnvelopeAuto::GetViewSheetNumberDefinitionText ( );
__declspec(implementation_key(1561)) void _IDetailEnvelopeAuto::PutViewSheetNumberDefinitionText ( _bstr_t ViewSheetNumberDefinitionText );
__declspec(implementation_key(1562)) VARIANT_BOOL _IDetailEnvelopeAuto::GetDisplayViewSheetNumber ( );
__declspec(implementation_key(1563)) void _IDetailEnvelopeAuto::PutDisplayViewSheetNumber ( VARIANT_BOOL DisplayViewSheetNumber );
__declspec(implementation_key(1564)) HRESULT _IDetailEnvelopeAuto::GetCaptionPosition ( double * x, double * y );
__declspec(implementation_key(1565)) HRESULT _IDetailEnvelopeAuto::SetCaptionPosition ( double x, double y );
__declspec(implementation_key(1566)) void _IDetailEnvelopeAuto::PutLayer ( _bstr_t Layer );
__declspec(implementation_key(1567)) _bstr_t _IDetailEnvelopeAuto::GetLayer ( );
__declspec(implementation_key(1568)) DrawingViewPtr _IDetailEnvelopeAuto::GetDetailView ( );
__declspec(implementation_key(1569)) DraftProfilePtr _IDetailEnvelopeAuto::GetProfile ( );
__declspec(implementation_key(1570)) void _IDetailEnvelopeAuto::PutAuto ( VARIANT_BOOL value );
__declspec(implementation_key(1571)) VARIANT_BOOL _IDetailEnvelopeAuto::GetAuto ( );
__declspec(implementation_key(1572)) IDispatchPtr _IDetailEnvelopeAuto::GetAttributeSets ( );
__declspec(implementation_key(1573)) VARIANT_BOOL _IDetailEnvelopeAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1574)) HRESULT HighlightDrawingViewMembers::AddModelMember ( struct ModelMember * ModelMember );
__declspec(implementation_key(1575)) HRESULT HighlightDrawingViewMembers::RemoveModelMember ( struct ModelMember * ModelMember );
__declspec(implementation_key(1576)) HRESULT _IHighlightDrawingViewMembersAuto::AddModelMember ( struct ModelMember * ModelMember );
__declspec(implementation_key(1577)) HRESULT _IHighlightDrawingViewMembersAuto::RemoveModelMember ( struct ModelMember * ModelMember );
__declspec(implementation_key(1578)) BreakLinePairPtr BreakLinePairs::Item ( const _variant_t & Index );
__declspec(implementation_key(1579)) IDispatchPtr BreakLinePairs::GetApplication ( );
__declspec(implementation_key(1580)) long BreakLinePairs::GetCount ( );
__declspec(implementation_key(1581)) IDispatchPtr BreakLinePairs::GetParent ( );
__declspec(implementation_key(1582)) BreakLinePairPtr BreakLinePairs::Add ( enum BreakLinePairDirConstants BreakLinePairDir, double xy1, double xy2, VARIANT_BOOL AddRecursivelyToInheritedViews );
__declspec(implementation_key(1583)) BreakLinePairPtr BreakLinePairs::AddWithBreakAxis ( enum BreakLinePairDirConstants BreakLinePairDir, enum BreakLinePairOrientConstants BreakLinePairOrient, double xy1, double xy2 );
__declspec(implementation_key(1584)) TGFramework::ApplicationPtr BreakLinePair::GetApplication ( );
__declspec(implementation_key(1585)) enum BreakLinePairDirConstants BreakLinePair::GetDirection ( );
__declspec(implementation_key(1586)) double BreakLinePair::Getxy1 ( );
__declspec(implementation_key(1587)) double BreakLinePair::Getxy2 ( );
__declspec(implementation_key(1588)) double BreakLinePair::GetGap ( );
__declspec(implementation_key(1589)) void BreakLinePair::PutGap ( double _arg1 );
__declspec(implementation_key(1590)) enum BreakLinePairTypeConstants BreakLinePair::GetType ( );
__declspec(implementation_key(1591)) void BreakLinePair::PutType ( enum BreakLinePairTypeConstants _arg1 );
__declspec(implementation_key(1592)) double BreakLinePair::GetHeightRatio ( );
__declspec(implementation_key(1593)) void BreakLinePair::PutHeightRatio ( double _arg1 );
__declspec(implementation_key(1594)) double BreakLinePair::GetPitch ( );
__declspec(implementation_key(1595)) void BreakLinePair::PutPitch ( double _arg1 );
__declspec(implementation_key(1596)) int BreakLinePair::GetSymbols ( );
__declspec(implementation_key(1597)) void BreakLinePair::PutSymbols ( int _arg1 );
__declspec(implementation_key(1598)) _bstr_t BreakLinePair::Getstyle ( );
__declspec(implementation_key(1599)) void BreakLinePair::Putstyle ( _bstr_t _arg1 );
__declspec(implementation_key(1600)) HRESULT BreakLinePair::Delete ( );
__declspec(implementation_key(1601)) HRESULT BreakLinePair::GetBreakLines ( struct TGFrameworkSupport::Line2d * * Line1, struct TGFrameworkSupport::Line2d * * Line2 );
__declspec(implementation_key(1602)) enum BreakLinePairOrientConstants BreakLinePair::GetOrientation ( );
__declspec(implementation_key(1603)) BreakLinePairPtr _IBreakLinePairsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(1604)) IUnknownPtr _IBreakLinePairsAuto::Get_NewEnum ( );
__declspec(implementation_key(1605)) IDispatchPtr _IBreakLinePairsAuto::GetApplication ( );
__declspec(implementation_key(1606)) long _IBreakLinePairsAuto::GetCount ( );
__declspec(implementation_key(1607)) IDispatchPtr _IBreakLinePairsAuto::GetParent ( );
__declspec(implementation_key(1608)) BreakLinePairPtr _IBreakLinePairsAuto::Add ( enum BreakLinePairDirConstants BreakLinePairDir, double xy1, double xy2, VARIANT_BOOL AddRecursivelyToInheritedViews );
__declspec(implementation_key(1609)) BreakLinePairPtr _IBreakLinePairsAuto::AddWithBreakAxis ( enum BreakLinePairDirConstants BreakLinePairDir, enum BreakLinePairOrientConstants BreakLinePairOrient, double xy1, double xy2 );
__declspec(implementation_key(1610)) TGFramework::ApplicationPtr _IBreakLinePairAuto::GetApplication ( );
__declspec(implementation_key(1611)) enum BreakLinePairDirConstants _IBreakLinePairAuto::GetDirection ( );
__declspec(implementation_key(1612)) double _IBreakLinePairAuto::Getxy1 ( );
__declspec(implementation_key(1613)) double _IBreakLinePairAuto::Getxy2 ( );
__declspec(implementation_key(1614)) double _IBreakLinePairAuto::GetGap ( );
__declspec(implementation_key(1615)) void _IBreakLinePairAuto::PutGap ( double Gap );
__declspec(implementation_key(1616)) enum BreakLinePairTypeConstants _IBreakLinePairAuto::GetType ( );
__declspec(implementation_key(1617)) void _IBreakLinePairAuto::PutType ( enum BreakLinePairTypeConstants Type );
__declspec(implementation_key(1618)) double _IBreakLinePairAuto::GetHeightRatio ( );
__declspec(implementation_key(1619)) void _IBreakLinePairAuto::PutHeightRatio ( double HeightRatio );
__declspec(implementation_key(1620)) double _IBreakLinePairAuto::GetPitch ( );
__declspec(implementation_key(1621)) void _IBreakLinePairAuto::PutPitch ( double Pitch );
__declspec(implementation_key(1622)) int _IBreakLinePairAuto::GetSymbols ( );
__declspec(implementation_key(1623)) void _IBreakLinePairAuto::PutSymbols ( int Symbols );
__declspec(implementation_key(1624)) _bstr_t _IBreakLinePairAuto::Getstyle ( );
__declspec(implementation_key(1625)) void _IBreakLinePairAuto::Putstyle ( _bstr_t style );
__declspec(implementation_key(1626)) HRESULT _IBreakLinePairAuto::Delete ( );
__declspec(implementation_key(1627)) HRESULT _IBreakLinePairAuto::GetBreakLines ( struct TGFrameworkSupport::Line2d * * Line1, struct TGFrameworkSupport::Line2d * * Line2 );
__declspec(implementation_key(1628)) enum BreakLinePairOrientConstants _IBreakLinePairAuto::GetOrientation ( );
__declspec(implementation_key(1629)) double _IDrawingViewAuto::GetScaleFactor ( );
__declspec(implementation_key(1630)) void _IDrawingViewAuto::PutScaleFactor ( double Scale );
__declspec(implementation_key(1631)) HRESULT _IDrawingViewAuto::GetOrigin ( double * x, double * y );
__declspec(implementation_key(1632)) HRESULT _IDrawingViewAuto::SetOrigin ( double x, double y );
__declspec(implementation_key(1633)) enum DrawingViewTypeConstants _IDrawingViewAuto::GetDrawingViewType ( );
__declspec(implementation_key(1634)) double _IDrawingViewAuto::GetCropLeft ( );
__declspec(implementation_key(1635)) void _IDrawingViewAuto::PutCropLeft ( double offset );
__declspec(implementation_key(1636)) double _IDrawingViewAuto::GetCropRight ( );
__declspec(implementation_key(1637)) void _IDrawingViewAuto::PutCropRight ( double offset );
__declspec(implementation_key(1638)) double _IDrawingViewAuto::GetCropTop ( );
__declspec(implementation_key(1639)) void _IDrawingViewAuto::PutCropTop ( double offset );
__declspec(implementation_key(1640)) double _IDrawingViewAuto::GetCropBottom ( );
__declspec(implementation_key(1641)) void _IDrawingViewAuto::PutCropBottom ( double offset );
__declspec(implementation_key(1642)) VARIANT_BOOL _IDrawingViewAuto::GetCrop ( );
__declspec(implementation_key(1643)) void _IDrawingViewAuto::PutCrop ( VARIANT_BOOL value );
__declspec(implementation_key(1644)) _bstr_t _IDrawingViewAuto::GetCaption ( );
__declspec(implementation_key(1645)) void _IDrawingViewAuto::PutCaption ( _bstr_t Caption );
__declspec(implementation_key(1646)) _bstr_t _IDrawingViewAuto::GetSuffix ( );
__declspec(implementation_key(1647)) _bstr_t _IDrawingViewAuto::GetDescription ( );
__declspec(implementation_key(1648)) void _IDrawingViewAuto::PutDescription ( _bstr_t Description );
__declspec(implementation_key(1649)) VARIANT_BOOL _IDrawingViewAuto::GetDisplayCaption ( );
__declspec(implementation_key(1650)) void _IDrawingViewAuto::PutDisplayCaption ( VARIANT_BOOL DisplayCaption );
__declspec(implementation_key(1651)) VARIANT_BOOL _IDrawingViewAuto::GetDisplaySuffix ( );
__declspec(implementation_key(1652)) void _IDrawingViewAuto::PutDisplaySuffix ( VARIANT_BOOL DisplaySuffix );
__declspec(implementation_key(1653)) VARIANT_BOOL _IDrawingViewAuto::GetDisplayScale ( );
__declspec(implementation_key(1654)) void _IDrawingViewAuto::PutDisplayScale ( VARIANT_BOOL DisplayScale );
__declspec(implementation_key(1655)) VARIANT_BOOL _IDrawingViewAuto::GetDisplayAnnotation ( );
__declspec(implementation_key(1656)) void _IDrawingViewAuto::PutDisplayAnnotation ( VARIANT_BOOL DisplayAnnotation );
__declspec(implementation_key(1657)) IDispatchPtr _IDrawingViewAuto::GetAnnotation ( );
__declspec(implementation_key(1658)) IDispatchPtr _IDrawingViewAuto::GetSheet ( );
__declspec(implementation_key(1659)) void _IDrawingViewAuto::PutSheet ( IDispatch * Sheet );
__declspec(implementation_key(1660)) VARIANT_BOOL _IDrawingViewAuto::GetDisplayWindow ( );
__declspec(implementation_key(1661)) void _IDrawingViewAuto::PutDisplayWindow ( VARIANT_BOOL DisplayWindow );
__declspec(implementation_key(1662)) IDispatchPtr _IDrawingViewAuto::GetModelLink ( );
__declspec(implementation_key(1663)) VARIANT_BOOL _IDrawingViewAuto::GetIsUpToDate ( );
__declspec(implementation_key(1664)) HRESULT _IDrawingViewAuto::SheetToView ( double xSheet, double ySheet, double * xView, double * yView );
__declspec(implementation_key(1665)) HRESULT _IDrawingViewAuto::ViewToSheet ( double xView, double yView, double * xSheet, double * ySheet );
__declspec(implementation_key(1666)) IDispatchPtr _IDrawingViewAuto::Drop ( );
__declspec(implementation_key(1667)) HRESULT _IDrawingViewAuto::Update ( );
__declspec(implementation_key(1668)) _bstr_t _IDrawingViewAuto::GetTextFont ( );
__declspec(implementation_key(1669)) void _IDrawingViewAuto::PutTextFont ( _bstr_t TextFont );
__declspec(implementation_key(1670)) enum TGFrameworkSupport::DimTextFontStyleConstants _IDrawingViewAuto::GetTextFontStyle ( );
__declspec(implementation_key(1671)) void _IDrawingViewAuto::PutTextFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants TextFontStyle );
__declspec(implementation_key(1672)) double _IDrawingViewAuto::GetTextHeight ( );
__declspec(implementation_key(1673)) void _IDrawingViewAuto::PutTextHeight ( double TextHeight );
__declspec(implementation_key(1674)) double _IDrawingViewAuto::GetTextRatio ( );
__declspec(implementation_key(1675)) void _IDrawingViewAuto::PutTextRatio ( double TextRatio );
__declspec(implementation_key(1676)) long _IDrawingViewAuto::GetTextColor ( );
__declspec(implementation_key(1677)) void _IDrawingViewAuto::PutTextColor ( long TextColor );
__declspec(implementation_key(1678)) _bstr_t _IDrawingViewAuto::GetStyleName ( );
__declspec(implementation_key(1679)) void _IDrawingViewAuto::PutStyleName ( _bstr_t StyleName );
__declspec(implementation_key(1680)) TGFramework::ApplicationPtr _IDrawingViewAuto::GetApplication ( );
__declspec(implementation_key(1681)) long _IDrawingViewAuto::GetIndex ( );
__declspec(implementation_key(1682)) _bstr_t _IDrawingViewAuto::GetName ( const _variant_t & Recurse, long Lcid );
__declspec(implementation_key(1683)) IDispatchPtr _IDrawingViewAuto::GetParent ( );
__declspec(implementation_key(1684)) long _IDrawingViewAuto::GetType ( );
__declspec(implementation_key(1685)) VARIANT_BOOL _IDrawingViewAuto::GetVisible ( );
__declspec(implementation_key(1686)) void _IDrawingViewAuto::PutVisible ( VARIANT_BOOL * Toggle );
__declspec(implementation_key(1687)) long _IDrawingViewAuto::GetZOrder ( );
__declspec(implementation_key(1688)) _bstr_t _IDrawingViewAuto::GetKey ( const _variant_t & Recurse );
__declspec(implementation_key(1689)) IDispatchPtr _IDrawingViewAuto::GetDocument ( );
__declspec(implementation_key(1690)) HRESULT _IDrawingViewAuto::Copy ( );
__declspec(implementation_key(1691)) HRESULT _IDrawingViewAuto::Cut ( );
__declspec(implementation_key(1692)) HRESULT _IDrawingViewAuto::Delete ( );
__declspec(implementation_key(1693)) HRESULT _IDrawingViewAuto::BringToFront ( );
__declspec(implementation_key(1694)) HRESULT _IDrawingViewAuto::BringForward ( );
__declspec(implementation_key(1695)) HRESULT _IDrawingViewAuto::SendToBack ( );
__declspec(implementation_key(1696)) HRESULT _IDrawingViewAuto::SendBackward ( );
__declspec(implementation_key(1697)) HRESULT _IDrawingViewAuto::Select ( );
__declspec(implementation_key(1698)) HRESULT _IDrawingViewAuto::Range ( double * min_x, double * min_y, double * max_x, double * max_y );
__declspec(implementation_key(1699)) CoordinateSystems2dPtr _IDrawingViewAuto::GetCoordinateSystems2d ( );
__declspec(implementation_key(1700)) HRESULT _IDrawingViewAuto::GetActiveCoordinateSystem ( VARIANT * CoordinateSystem2d, VARIANT * AlignmentAxis );
__declspec(implementation_key(1701)) HRESULT _IDrawingViewAuto::SetActiveCoordinateSystem ( const _variant_t & CoordinateSystem2d, const _variant_t & AlignmentAxis );
__declspec(implementation_key(1702)) ModelMembersPtr _IDrawingViewAuto::GetModelMembers ( );
__declspec(implementation_key(1703)) GraphicMembersPtr _IDrawingViewAuto::GetGraphicMembers ( );
__declspec(implementation_key(1704)) VARIANT_BOOL _IDrawingViewAuto::GetShowEdgesHiddenByOtherParts ( );
__declspec(implementation_key(1705)) void _IDrawingViewAuto::PutShowEdgesHiddenByOtherParts ( VARIANT_BOOL value );
__declspec(implementation_key(1706)) VARIANT_BOOL _IDrawingViewAuto::GetProcessPartIntersections ( );
__declspec(implementation_key(1707)) void _IDrawingViewAuto::PutProcessPartIntersections ( VARIANT_BOOL value );
__declspec(implementation_key(1708)) DVLines2dPtr _IDrawingViewAuto::GetDVLines2d ( );
__declspec(implementation_key(1709)) DVArcs2dPtr _IDrawingViewAuto::GetDVArcs2d ( );
__declspec(implementation_key(1710)) DVBSplineCurves2dPtr _IDrawingViewAuto::GetDVBSplineCurves2d ( );
__declspec(implementation_key(1711)) DVCircles2dPtr _IDrawingViewAuto::GetDVCircles2d ( );
__declspec(implementation_key(1712)) DVEllipses2dPtr _IDrawingViewAuto::GetDVEllipses2d ( );
__declspec(implementation_key(1713)) DVLineStrings2dPtr _IDrawingViewAuto::GetDVLineStrings2d ( );
__declspec(implementation_key(1714)) DVEllipticalArcs2dPtr _IDrawingViewAuto::GetDVEllipticalArcs2d ( );
__declspec(implementation_key(1715)) DVPoints2dPtr _IDrawingViewAuto::GetDVPoints2d ( );
__declspec(implementation_key(1716)) _bstr_t _IDrawingViewAuto::GetConfiguration ( );
__declspec(implementation_key(1717)) void _IDrawingViewAuto::PutConfiguration ( _bstr_t Configuration );
__declspec(implementation_key(1718)) HRESULT _IDrawingViewAuto::CheckConfiguration ( VARIANT_BOOL * UpToDate );
__declspec(implementation_key(1719)) long _IDrawingViewAuto::GetViewType ( );
__declspec(implementation_key(1720)) VARIANT_BOOL _IDrawingViewAuto::GetMatchConfiguration ( );
__declspec(implementation_key(1721)) void _IDrawingViewAuto::PutMatchConfiguration ( VARIANT_BOOL value );
__declspec(implementation_key(1722)) VARIANT_BOOL _IDrawingViewAuto::GetScaleDimensionsAndAnnotations ( );
__declspec(implementation_key(1723)) void _IDrawingViewAuto::PutScaleDimensionsAndAnnotations ( VARIANT_BOOL value );
__declspec(implementation_key(1724)) HRESULT _IDrawingViewAuto::GetReferenceToGraphicMember ( IDispatch * GraphicMember, struct TGFramework::Reference * * Reference );
__declspec(implementation_key(1725)) TGFramework::ReferencePtr _IDrawingViewAuto::GetGetReferenceToGraphicMember2 ( IDispatch * GraphicMember );
__declspec(implementation_key(1726)) HRESULT _IDrawingViewAuto::GetRotationAngle ( double * dRotAngle );
__declspec(implementation_key(1727)) HRESULT _IDrawingViewAuto::SetRotationAngle ( double dRotAngle );
__declspec(implementation_key(1728)) HRESULT _IDrawingViewAuto::GetListOfHiddenLayers ( long * NumLayers, SAFEARRAY * * HiddenLayers );
__declspec(implementation_key(1729)) HRESULT _IDrawingViewAuto::HideLayer ( _bstr_t LayerName );
__declspec(implementation_key(1730)) HRESULT _IDrawingViewAuto::ShowLayer ( _bstr_t LayerName );
__declspec(implementation_key(1731)) VARIANT_BOOL _IDrawingViewAuto::IsLayerHidden ( _bstr_t LayerName );
__declspec(implementation_key(1732)) HRESULT _IDrawingViewAuto::RetrieveDimensions ( VARIANT_BOOL IsRetrieve, _bstr_t DimensionStyleName, VARIANT_BOOL TypeLinear, VARIANT_BOOL TypeRadial, VARIANT_BOOL TypeAngular, VARIANT_BOOL TypeAnnotation, VARIANT_BOOL TypeCenterMark, VARIANT_BOOL GetDuplicatedRadial, VARIANT_BOOL GetDimensionToHiddenLines, VARIANT_BOOL ProjectCenterMark, VARIANT_BOOL ConnectCenters, VARIANT_BOOL GetCenterMarkToCircle, VARIANT_BOOL GetCenterMarkToArc );
__declspec(implementation_key(1733)) HRESULT _IDrawingViewAuto::RetrieveCenterLinesCenterMarks ( VARIANT_BOOL IsRetrieve, _bstr_t DimensionStyleName, VARIANT_BOOL TypeCenterLine, VARIANT_BOOL TypeCenterMark, VARIANT_BOOL ProjectCenterMark, VARIANT_BOOL ConnectCenters, VARIANT_BOOL GetCenterLineToFullCylinder, VARIANT_BOOL GetCenterLineToPartialCylinder, VARIANT_BOOL GetCenterMarkToCircle, VARIANT_BOOL GetCenterMarkToArc, VARIANT_BOOL GetCenterMarkToEllipse, VARIANT_BOOL GetCenterMarkToPartialEllipse, VARIANT_BOOL EnableCenterMarkRangeCheck, VARIANT_BOOL EnableCenterLineRangeCheck, double dCenterLineMinRadius, double dCenterLineMaxRadius, double dCenterMarkMinRadius, double dCenterMarkMaxRadius );
__declspec(implementation_key(1734)) VARIANT_BOOL _IDrawingViewAuto::GetShading ( );
__declspec(implementation_key(1735)) void _IDrawingViewAuto::PutShading ( VARIANT_BOOL Shading );
__declspec(implementation_key(1736)) enum DrawingViewShadingQualityConstants _IDrawingViewAuto::GetShadingQuality ( );
__declspec(implementation_key(1737)) void _IDrawingViewAuto::PutShadingQuality ( enum DrawingViewShadingQualityConstants ShadingQuality );
__declspec(implementation_key(1738)) VARIANT_BOOL _IDrawingViewAuto::GetShadingAllowAssemblyOverrides ( );
__declspec(implementation_key(1739)) void _IDrawingViewAuto::PutShadingAllowAssemblyOverrides ( VARIANT_BOOL ShadingAllowAssemblyOverrides );
__declspec(implementation_key(1740)) VARIANT_BOOL _IDrawingViewAuto::GetShadingAllowPartFaceColors ( );
__declspec(implementation_key(1741)) void _IDrawingViewAuto::PutShadingAllowPartFaceColors ( VARIANT_BOOL ShadingAllowPartFaceColors );
__declspec(implementation_key(1742)) VARIANT_BOOL _IDrawingViewAuto::GetShadingShowVisibleEdges ( );
__declspec(implementation_key(1743)) void _IDrawingViewAuto::PutShadingShowVisibleEdges ( VARIANT_BOOL ShadingShowVisibleEdges );
__declspec(implementation_key(1744)) VARIANT_BOOL _IDrawingViewAuto::GetShadingGrayscale ( );
__declspec(implementation_key(1745)) void _IDrawingViewAuto::PutShadingGrayscale ( VARIANT_BOOL ShadingGrayscale );
__declspec(implementation_key(1746)) VARIANT_BOOL _IDrawingViewAuto::GetShadingFlat ( );
__declspec(implementation_key(1747)) void _IDrawingViewAuto::PutShadingFlat ( VARIANT_BOOL ShadingFlat );
__declspec(implementation_key(1748)) VARIANT_BOOL _IDrawingViewAuto::GetShadingTextures ( );
__declspec(implementation_key(1749)) void _IDrawingViewAuto::PutShadingTextures ( VARIANT_BOOL ShadingTextures );
__declspec(implementation_key(1750)) VARIANT_BOOL _IDrawingViewAuto::GetShadingReflections ( );
__declspec(implementation_key(1751)) void _IDrawingViewAuto::PutShadingReflections ( VARIANT_BOOL ShadingReflections );
__declspec(implementation_key(1752)) VARIANT_BOOL _IDrawingViewAuto::GetIsSnapShot ( );
__declspec(implementation_key(1753)) enum DrawingViewSnapShotQualityConstants _IDrawingViewAuto::GetSnapShotQuality ( );
__declspec(implementation_key(1754)) void _IDrawingViewAuto::PutSnapShotQuality ( enum DrawingViewSnapShotQualityConstants SnapShotQuality );
__declspec(implementation_key(1755)) enum DrawingViewVHL_ToleranceOverrideQualityConstants _IDrawingViewAuto::GetVHL_ToleranceOverrideQuality ( );
__declspec(implementation_key(1756)) void _IDrawingViewAuto::PutVHL_ToleranceOverrideQuality ( enum DrawingViewVHL_ToleranceOverrideQualityConstants VHL_ToleranceOverrideQuality );
__declspec(implementation_key(1757)) VARIANT_BOOL _IDrawingViewAuto::GetIsBroken ( );
__declspec(implementation_key(1758)) HRESULT _IDrawingViewAuto::ModelToView ( double xModel, double yModel, double zModel, double * xView, double * yView );
__declspec(implementation_key(1759)) HRESULT _IDrawingViewAuto::ViewOrientation ( double * ViewVector_X, double * ViewVector_Y, double * ViewVector_Z, double * LocalXVector_X, double * LocalXVector_Y, double * LocalXVector_Z, enum ViewOrientationConstants * Orientation );
__declspec(implementation_key(1760)) VARIANT_BOOL _IDrawingViewAuto::GetSnapshot ( );
__declspec(implementation_key(1761)) void _IDrawingViewAuto::PutSnapshot ( VARIANT_BOOL Snapshot );
__declspec(implementation_key(1762)) double _IDrawingViewAuto::GetTangencyTolerance ( );
__declspec(implementation_key(1763)) void _IDrawingViewAuto::PutTangencyTolerance ( double dTangencyTolInDegrees );
__declspec(implementation_key(1764)) double _IDrawingViewAuto::GetThreadAxisTolerance ( );
__declspec(implementation_key(1765)) void _IDrawingViewAuto::PutThreadAxisTolerance ( double dThreadAxisTolInDegrees );
__declspec(implementation_key(1766)) enum DrawingViewBsplineSimplificationConstants _IDrawingViewAuto::GetBsplineSimplification ( );
__declspec(implementation_key(1767)) void _IDrawingViewAuto::PutBsplineSimplification ( enum DrawingViewBsplineSimplificationConstants BsplineSimplification );
__declspec(implementation_key(1768)) enum DrawingViewIntersectionProcessingConstants _IDrawingViewAuto::GetIntersectionProcessing ( );
__declspec(implementation_key(1769)) void _IDrawingViewAuto::PutIntersectionProcessing ( enum DrawingViewIntersectionProcessingConstants IntersectionProcessing );
__declspec(implementation_key(1770)) VARIANT_BOOL _IDrawingViewAuto::GetDefaults_ShowSectionHatch ( );
__declspec(implementation_key(1771)) void _IDrawingViewAuto::PutDefaults_ShowSectionHatch ( VARIANT_BOOL value );
__declspec(implementation_key(1772)) VARIANT_BOOL _IDrawingViewAuto::GetDefaults_DeriveSectionHatchStyleNameFromPart ( );
__declspec(implementation_key(1773)) void _IDrawingViewAuto::PutDefaults_DeriveSectionHatchStyleNameFromPart ( VARIANT_BOOL value );
__declspec(implementation_key(1774)) _bstr_t _IDrawingViewAuto::GetDefaults_SectionHatchStyleName ( );
__declspec(implementation_key(1775)) void _IDrawingViewAuto::PutDefaults_SectionHatchStyleName ( _bstr_t StyleName );
__declspec(implementation_key(1776)) _bstr_t _IDrawingViewAuto::GetDefaults_VisibleEdgeStyleName ( );
__declspec(implementation_key(1777)) void _IDrawingViewAuto::PutDefaults_VisibleEdgeStyleName ( _bstr_t StyleName );
__declspec(implementation_key(1778)) VARIANT_BOOL _IDrawingViewAuto::GetDefaults_ShowHiddenEdges ( );
__declspec(implementation_key(1779)) void _IDrawingViewAuto::PutDefaults_ShowHiddenEdges ( VARIANT_BOOL value );
__declspec(implementation_key(1780)) _bstr_t _IDrawingViewAuto::GetDefaults_HiddenEdgeStyleName ( );
__declspec(implementation_key(1781)) void _IDrawingViewAuto::PutDefaults_HiddenEdgeStyleName ( _bstr_t StyleName );
__declspec(implementation_key(1782)) VARIANT_BOOL _IDrawingViewAuto::GetDefaults_ShowEdgesHiddenByOtherParts ( );
__declspec(implementation_key(1783)) void _IDrawingViewAuto::PutDefaults_ShowEdgesHiddenByOtherParts ( VARIANT_BOOL value );
__declspec(implementation_key(1784)) VARIANT_BOOL _IDrawingViewAuto::GetDefaults_ShowTangentEdges ( );
__declspec(implementation_key(1785)) void _IDrawingViewAuto::PutDefaults_ShowTangentEdges ( VARIANT_BOOL value );
__declspec(implementation_key(1786)) _bstr_t _IDrawingViewAuto::GetDefaults_TangentEdgeStyleName ( );
__declspec(implementation_key(1787)) void _IDrawingViewAuto::PutDefaults_TangentEdgeStyleName ( _bstr_t StyleName );
__declspec(implementation_key(1788)) VARIANT_BOOL _IDrawingViewAuto::GetDefaults_ShowTubeCenterlines ( );
__declspec(implementation_key(1789)) void _IDrawingViewAuto::PutDefaults_ShowTubeCenterlines ( VARIANT_BOOL value );
__declspec(implementation_key(1790)) _bstr_t _IDrawingViewAuto::GetDefaults_TubeCenterlineStyleName ( );
__declspec(implementation_key(1791)) void _IDrawingViewAuto::PutDefaults_TubeCenterlineStyleName ( _bstr_t StyleName );
__declspec(implementation_key(1792)) VARIANT_BOOL _IDrawingViewAuto::GetDefaults_ShowEdgesHiddenTangentEdgesSelfHidden ( );
__declspec(implementation_key(1793)) void _IDrawingViewAuto::PutDefaults_ShowEdgesHiddenTangentEdgesSelfHidden ( VARIANT_BOOL value );
__declspec(implementation_key(1794)) VARIANT_BOOL _IDrawingViewAuto::GetDefaults_ShowEdgesHiddenTangentEdgesHiddenByOtherParts ( );
__declspec(implementation_key(1795)) void _IDrawingViewAuto::PutDefaults_ShowEdgesHiddenTangentEdgesHiddenByOtherParts ( VARIANT_BOOL value );
__declspec(implementation_key(1796)) VARIANT_BOOL _IDrawingViewAuto::GetCroppedVHL ( );
__declspec(implementation_key(1797)) void _IDrawingViewAuto::PutCroppedVHL ( VARIANT_BOOL value );
__declspec(implementation_key(1798)) HRESULT _IDrawingViewAuto::ConvertToIndependentDetailView ( );
__declspec(implementation_key(1799)) _bstr_t _IDrawingViewAuto::GetPMIModelView ( );
__declspec(implementation_key(1800)) void _IDrawingViewAuto::PutPMIModelView ( _bstr_t PMIModelViewName );
__declspec(implementation_key(1801)) VARIANT_BOOL _IDrawingViewAuto::GetIncludePMIDimensions ( );
__declspec(implementation_key(1802)) void _IDrawingViewAuto::PutIncludePMIDimensions ( VARIANT_BOOL value );
__declspec(implementation_key(1803)) void _IDrawingViewAuto::PutCroppedBoundaryStyle ( _bstr_t StyleName );
__declspec(implementation_key(1804)) _bstr_t _IDrawingViewAuto::GetCroppedBoundaryStyle ( );
__declspec(implementation_key(1805)) void _IDrawingViewAuto::PutDisplayCroppedBoundary ( VARIANT_BOOL value );
__declspec(implementation_key(1806)) VARIANT_BOOL _IDrawingViewAuto::GetDisplayCroppedBoundary ( );
__declspec(implementation_key(1807)) void _IDrawingViewAuto::PutDisplayBorder ( VARIANT_BOOL value );
__declspec(implementation_key(1808)) VARIANT_BOOL _IDrawingViewAuto::GetDisplayBorder ( );
__declspec(implementation_key(1809)) VARIANT_BOOL _IDrawingViewAuto::GetIncludePMIAnnotations ( );
__declspec(implementation_key(1810)) void _IDrawingViewAuto::PutIncludePMIAnnotations ( VARIANT_BOOL value );
__declspec(implementation_key(1811)) VARIANT_BOOL _IDrawingViewAuto::GetEdgesUseModelColor ( );
__declspec(implementation_key(1812)) void _IDrawingViewAuto::PutEdgesUseModelColor ( VARIANT_BOOL useModelColor );
__declspec(implementation_key(1813)) VARIANT_BOOL _IDrawingViewAuto::GetEdgesUsePartBaseColor ( );
__declspec(implementation_key(1814)) void _IDrawingViewAuto::PutEdgesUsePartBaseColor ( VARIANT_BOOL useBaseColor );
__declspec(implementation_key(1815)) VARIANT_BOOL _IDrawingViewAuto::GetEdgesUseAssemblyOverrideColor ( );
__declspec(implementation_key(1816)) void _IDrawingViewAuto::PutEdgesUseAssemblyOverrideColor ( VARIANT_BOOL useAssemblyOverrideColor );
__declspec(implementation_key(1817)) VARIANT_BOOL _IDrawingViewAuto::GetSectionHatchUseModelColor ( );
__declspec(implementation_key(1818)) void _IDrawingViewAuto::PutSectionHatchUseModelColor ( VARIANT_BOOL useModelColor );
__declspec(implementation_key(1819)) VARIANT_BOOL _IDrawingViewAuto::GetIsPerspective ( );
__declspec(implementation_key(1820)) HRESULT _IDrawingViewAuto::SetPerspectiveOn ( double FocalLength );
__declspec(implementation_key(1821)) HRESULT _IDrawingViewAuto::SetPerspectiveOff ( );
__declspec(implementation_key(1822)) HRESULT _IDrawingViewAuto::SetPerspectiveFromNamedView ( _bstr_t ViewName );
__declspec(implementation_key(1823)) VARIANT_BOOL _IDrawingViewAuto::GetIsBrokenOutSectionTarget ( );
__declspec(implementation_key(1824)) VARIANT_BOOL _IDrawingViewAuto::GetIsCut ( );
__declspec(implementation_key(1825)) IDispatchPtr _IDrawingViewAuto::GetAttributeSets ( );
__declspec(implementation_key(1826)) VARIANT_BOOL _IDrawingViewAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1827)) void _IDrawingViewAuto::PutLockView ( VARIANT_BOOL value );
__declspec(implementation_key(1828)) VARIANT_BOOL _IDrawingViewAuto::GetLockView ( );
__declspec(implementation_key(1829)) void _IDrawingViewAuto::PutHatchRibsInSectionViews ( VARIANT_BOOL value );
__declspec(implementation_key(1830)) VARIANT_BOOL _IDrawingViewAuto::GetHatchRibsInSectionViews ( );
__declspec(implementation_key(1831)) VARIANT_BOOL _IDrawingViewAuto::GetDisplayBreakLinesInBrokenState ( );
__declspec(implementation_key(1832)) void _IDrawingViewAuto::PutDisplayBreakLinesInBrokenState ( VARIANT_BOOL DisplayBreakLinesInBrokenState );
__declspec(implementation_key(1833)) _bstr_t _IDrawingViewAuto::GetCaptionDefinitionTextPrimary ( );
__declspec(implementation_key(1834)) void _IDrawingViewAuto::PutCaptionDefinitionTextPrimary ( _bstr_t CaptionDefinitionTextPrimary );
__declspec(implementation_key(1835)) _bstr_t _IDrawingViewAuto::GetCaptionDisplayedTextPrimary ( );
__declspec(implementation_key(1836)) VARIANT_BOOL _IDrawingViewAuto::GetDisplayCaptionPrimary ( );
__declspec(implementation_key(1837)) void _IDrawingViewAuto::PutDisplayCaptionPrimary ( VARIANT_BOOL DisplayCaptionPrimary );
__declspec(implementation_key(1838)) _bstr_t _IDrawingViewAuto::GetCaptionDefinitionTextSecondary ( );
__declspec(implementation_key(1839)) void _IDrawingViewAuto::PutCaptionDefinitionTextSecondary ( _bstr_t CaptionDefinitionTextSecondary );
__declspec(implementation_key(1840)) _bstr_t _IDrawingViewAuto::GetCaptionDisplayedTextSecondary ( );
__declspec(implementation_key(1841)) VARIANT_BOOL _IDrawingViewAuto::GetDisplayCaptionSecondary ( );
__declspec(implementation_key(1842)) void _IDrawingViewAuto::PutDisplayCaptionSecondary ( VARIANT_BOOL DisplayCaptionSecondary );
__declspec(implementation_key(1843)) _bstr_t _IDrawingViewAuto::GetSuffixDefinitionText ( );
__declspec(implementation_key(1844)) void _IDrawingViewAuto::PutSuffixDefinitionText ( _bstr_t SuffixDefinitionText );
__declspec(implementation_key(1845)) _bstr_t _IDrawingViewAuto::GetScaleDefinitionText ( );
__declspec(implementation_key(1846)) void _IDrawingViewAuto::PutScaleDefinitionText ( _bstr_t ScaleDefinitionText );
__declspec(implementation_key(1847)) HRESULT _IDrawingViewAuto::SetViewOrientation ( double ViewVector_X, double ViewVector_Y, double ViewVector_Z, double LocalXVector_X, double LocalXVector_Y, double LocalXVector_Z );
__declspec(implementation_key(1848)) HRESULT _IDrawingViewAuto::SetViewOrientationStandard ( enum ViewOrientationConstants Orientation );
__declspec(implementation_key(1849)) HRESULT _IDrawingViewAuto::SetViewOrientationFromNamedView ( _bstr_t NamedView, VARIANT_BOOL UsePerspective );
__declspec(implementation_key(1850)) HRESULT _IDrawingViewAuto::ForceUpdate ( );
__declspec(implementation_key(1851)) DrawingViewPtr _IDrawingViewAuto::GetSourceDrawingView ( );
__declspec(implementation_key(1852)) HRESULT _IDrawingViewAuto::GetCaptionPosition ( double * x, double * y );
__declspec(implementation_key(1853)) HRESULT _IDrawingViewAuto::SetCaptionPosition ( double x, double y );
__declspec(implementation_key(1854)) _bstr_t _IDrawingViewAuto::GetZone ( );
__declspec(implementation_key(1855)) void _IDrawingViewAuto::PutZone ( _bstr_t Zone );
__declspec(implementation_key(1856)) void _IDrawingViewAuto::PutIsSnapShot ( VARIANT_BOOL bIsSnapShot );
__declspec(implementation_key(1857)) enum DrawingViewSimplifiedAssemblyOptionConstants _IDrawingViewAuto::GetSimplifiedAssemblyOption ( );
__declspec(implementation_key(1858)) void _IDrawingViewAuto::PutSimplifiedAssemblyOption ( enum DrawingViewSimplifiedAssemblyOptionConstants SimplifiedAssemblyOption );
__declspec(implementation_key(1859)) enum DrawingViewSimplifiedPartOptionConstants _IDrawingViewAuto::GetSimplifiedPartOption ( );
__declspec(implementation_key(1860)) void _IDrawingViewAuto::PutSimplifiedPartOption ( enum DrawingViewSimplifiedPartOptionConstants SimplifiedPartOption );
__declspec(implementation_key(1861)) _bstr_t _IDrawingViewAuto::GetAnnotationSheetNumberDefinitionText ( );
__declspec(implementation_key(1862)) void _IDrawingViewAuto::PutAnnotationSheetNumberDefinitionText ( _bstr_t AnnotationSheetNumberDefinitionText );
__declspec(implementation_key(1863)) VARIANT_BOOL _IDrawingViewAuto::GetDisplayAnnotationSheetNumber ( );
__declspec(implementation_key(1864)) void _IDrawingViewAuto::PutDisplayAnnotationSheetNumber ( VARIANT_BOOL DisplayAnnotationSheetNumber );
__declspec(implementation_key(1865)) _bstr_t _IDrawingViewAuto::GetRotationAngleDefinitionText ( );
__declspec(implementation_key(1866)) void _IDrawingViewAuto::PutRotationAngleDefinitionText ( _bstr_t RotationAngleDefinitionText );
__declspec(implementation_key(1867)) VARIANT_BOOL _IDrawingViewAuto::GetDisplayRotationAngle ( );
__declspec(implementation_key(1868)) void _IDrawingViewAuto::PutDisplayRotationAngle ( VARIANT_BOOL DisplayRotationAngle );
__declspec(implementation_key(1869)) _bstr_t _IDrawingViewAuto::GetPrimaryCaptionFont ( );
__declspec(implementation_key(1870)) void _IDrawingViewAuto::PutPrimaryCaptionFont ( _bstr_t PrimaryCaptionFont );
__declspec(implementation_key(1871)) enum TGFrameworkSupport::DimTextFontStyleConstants _IDrawingViewAuto::GetPrimaryCaptionFontStyle ( );
__declspec(implementation_key(1872)) void _IDrawingViewAuto::PutPrimaryCaptionFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants PrimaryCaptionFontStyle );
__declspec(implementation_key(1873)) long _IDrawingViewAuto::GetPrimaryCaptionColor ( );
__declspec(implementation_key(1874)) void _IDrawingViewAuto::PutPrimaryCaptionColor ( long PrimaryCaptionColor );
__declspec(implementation_key(1875)) double _IDrawingViewAuto::GetPrimaryCaptionTextSize ( );
__declspec(implementation_key(1876)) void _IDrawingViewAuto::PutPrimaryCaptionTextSize ( double PrimaryCaptionTextSize );
__declspec(implementation_key(1877)) enum TGFrameworkSupport::DrawingViewCaptionTextAlignment _IDrawingViewAuto::GetPrimaryCaptionTextAlignment ( );
__declspec(implementation_key(1878)) void _IDrawingViewAuto::PutPrimaryCaptionTextAlignment ( enum TGFrameworkSupport::DrawingViewCaptionTextAlignment PrimaryCaptionTextAlignment );
__declspec(implementation_key(1879)) _bstr_t _IDrawingViewAuto::GetSecondaryCaptionFont ( );
__declspec(implementation_key(1880)) void _IDrawingViewAuto::PutSecondaryCaptionFont ( _bstr_t SecondaryCaptionFont );
__declspec(implementation_key(1881)) enum TGFrameworkSupport::DimTextFontStyleConstants _IDrawingViewAuto::GetSecondaryCaptionFontStyle ( );
__declspec(implementation_key(1882)) void _IDrawingViewAuto::PutSecondaryCaptionFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants SecondaryCaptionFontStyle );
__declspec(implementation_key(1883)) long _IDrawingViewAuto::GetSecondaryCaptionColor ( );
__declspec(implementation_key(1884)) void _IDrawingViewAuto::PutSecondaryCaptionColor ( long SecondaryCaptionColor );
__declspec(implementation_key(1885)) double _IDrawingViewAuto::GetSecondaryCaptionTextSize ( );
__declspec(implementation_key(1886)) void _IDrawingViewAuto::PutSecondaryCaptionTextSize ( double SecondaryCaptionTextSize );
__declspec(implementation_key(1887)) enum TGFrameworkSupport::DrawingViewCaptionTextAlignment _IDrawingViewAuto::GetSecondaryCaptionTextAlignment ( );
__declspec(implementation_key(1888)) void _IDrawingViewAuto::PutSecondaryCaptionTextAlignment ( enum TGFrameworkSupport::DrawingViewCaptionTextAlignment SecondaryCaptionTextAlignment );
__declspec(implementation_key(1889)) VARIANT_BOOL _IDrawingViewAuto::GetShowPrimarySecondayCaptionSeparator ( );
__declspec(implementation_key(1890)) void _IDrawingViewAuto::PutShowPrimarySecondayCaptionSeparator ( VARIANT_BOOL ShowPrimarySecondayCaptionSeparator );
__declspec(implementation_key(1891)) enum TGFrameworkSupport::DimViewCaptionLocationConstants _IDrawingViewAuto::GetCaptionLocation ( );
__declspec(implementation_key(1892)) void _IDrawingViewAuto::PutCaptionLocation ( enum TGFrameworkSupport::DimViewCaptionLocationConstants CaptionLocation );
__declspec(implementation_key(1893)) ModelMembersPtr _IDrawingViewAuto::ExecuteQuery ( _bstr_t QueryName );
__declspec(implementation_key(1894)) VARIANT_BOOL _IDrawingViewAuto::GetReferenceComponentsByConfigurations ( );
__declspec(implementation_key(1895)) void _IDrawingViewAuto::PutReferenceComponentsByConfigurations ( VARIANT_BOOL value );
__declspec(implementation_key(1896)) VARIANT_BOOL _IDrawingViewAuto::GetDefaults_SolidFillSectionWeldBeads ( );
__declspec(implementation_key(1897)) void _IDrawingViewAuto::PutDefaults_SolidFillSectionWeldBeads ( VARIANT_BOOL value );
__declspec(implementation_key(1898)) VARIANT_BOOL _IDrawingViewAuto::GetDefaults_EnableAlternatingHatchSpacing ( );
__declspec(implementation_key(1899)) void _IDrawingViewAuto::PutDefaults_EnableAlternatingHatchSpacing ( VARIANT_BOOL value );
__declspec(implementation_key(1900)) VARIANT_BOOL _IDrawingViewAuto::GetDefaults_EnableAlternatingHatchAngle ( );
__declspec(implementation_key(1901)) void _IDrawingViewAuto::PutDefaults_EnableAlternatingHatchAngle ( VARIANT_BOOL value );
__declspec(implementation_key(1902)) _bstr_t _IDrawingViewAuto::GetPrimaryMember ( );
__declspec(implementation_key(1903)) void _IDrawingViewAuto::PutPrimaryMember ( _bstr_t PrimaryMember );
__declspec(implementation_key(1904)) HRESULT _IDrawingViewAuto::GetAlternateMembers ( long * NumMembers, SAFEARRAY * * Members );
__declspec(implementation_key(1905)) HRESULT _IDrawingViewAuto::GetAlternatePositionMemberCandidates ( long * NumMembers, SAFEARRAY * * Members );
__declspec(implementation_key(1906)) HRESULT _IDrawingViewAuto::AddAlternateMember ( _bstr_t Member );
__declspec(implementation_key(1907)) HRESULT _IDrawingViewAuto::RemoveAlternateMember ( _bstr_t Member );
__declspec(implementation_key(1908)) void _IDrawingViewAuto::PutLayer ( _bstr_t Layer );
__declspec(implementation_key(1909)) _bstr_t _IDrawingViewAuto::GetLayer ( );
__declspec(implementation_key(1910)) VARIANT_BOOL _IDrawingViewAuto::GetSectionOnly ( );
__declspec(implementation_key(1911)) void _IDrawingViewAuto::PutSectionOnly ( VARIANT_BOOL SectionOnly );
__declspec(implementation_key(1912)) CuttingPlanesPtr _IDrawingViewAuto::GetCuttingPlanes ( );
__declspec(implementation_key(1913)) BrokenOutSectionProfilesPtr _IDrawingViewAuto::GetBrokenOutSectionProfiles ( );
__declspec(implementation_key(1914)) DetailEnvelopesPtr _IDrawingViewAuto::GetDetailEnvelopes ( );
__declspec(implementation_key(1915)) DraftProfilePtr _IDrawingViewAuto::GetCroppingBoundaryProfile ( );
__declspec(implementation_key(1916)) HighlightDrawingViewMembersPtr _IDrawingViewAuto::GetHighlightDrawingViewMembers ( );
__declspec(implementation_key(1917)) HRESULT _IDrawingViewAuto::AddConnectedDimensionsToSelectSet ( );
__declspec(implementation_key(1918)) HRESULT _IDrawingViewAuto::AddConnectedAnnotationsToSelectSet ( );
__declspec(implementation_key(1919)) _bstr_t _IDrawingViewAuto::GetLastUpdateSEVersion ( );
__declspec(implementation_key(1920)) _variant_t _IDrawingViewAuto::GetLastUpdateDate ( );
__declspec(implementation_key(1921)) _bstr_t _IDrawingViewAuto::GetLastUpdateUsername ( );
__declspec(implementation_key(1922)) double _IDrawingViewAuto::GetLastUpdateTimeToUpdate ( );
__declspec(implementation_key(1923)) _bstr_t _IDrawingViewAuto::GetDefaults_CoordinateSystemEdgeStyleName ( );
__declspec(implementation_key(1924)) void _IDrawingViewAuto::PutDefaults_CoordinateSystemEdgeStyleName ( _bstr_t StyleName );
__declspec(implementation_key(1925)) HRESULT _IDrawingViewAuto::ClearEdgeOverrides ( );
__declspec(implementation_key(1926)) void _IDrawingViewAuto::PutIsReferencePartTransparent ( VARIANT_BOOL bTrans );
__declspec(implementation_key(1927)) VARIANT_BOOL _IDrawingViewAuto::GetIsReferencePartTransparent ( );
__declspec(implementation_key(1928)) void _IDrawingViewAuto::PutRetrieveDimOnUpdate ( VARIANT_BOOL value );
__declspec(implementation_key(1929)) VARIANT_BOOL _IDrawingViewAuto::GetRetrieveDimOnUpdate ( );
__declspec(implementation_key(1930)) BreakLinePairsPtr _IDrawingViewAuto::GetBreakLinePairs ( );
__declspec(implementation_key(1931)) HRESULT _IDrawingViewAuto::SetBrokenState ( );
__declspec(implementation_key(1932)) HRESULT _IDrawingViewAuto::SetUnBrokenState ( );
__declspec(implementation_key(1933)) void _IDrawingViewAuto::PutDepthPlaneOffset ( double depthOffset );
__declspec(implementation_key(1934)) double _IDrawingViewAuto::GetDepthPlaneOffset ( );
__declspec(implementation_key(1935)) HRESULT _IDrawingViewAuto::RemoveDepthPlane ( );
__declspec(implementation_key(1936)) void _IDrawingViewAuto::PutSectionFullModel ( VARIANT_BOOL value );
__declspec(implementation_key(1937)) VARIANT_BOOL _IDrawingViewAuto::GetSectionFullModel ( );
__declspec(implementation_key(1938)) void _IDrawingViewAuto::PutRevolvedSection ( VARIANT_BOOL value );
__declspec(implementation_key(1939)) VARIANT_BOOL _IDrawingViewAuto::GetRevolvedSection ( );
__declspec(implementation_key(1940)) HRESULT _IDrawingViewAuto::AddBreakAxisForBreakLines ( IUnknown * pElement1, enum KeypointIndexConstants KeyPointIndex1, IUnknown * pElement2, enum KeypointIndexConstants KeyPointIndex2 );
__declspec(implementation_key(1941)) HRESULT _IDrawingViewAuto::SetCenterForDetailView ( double x, double y );
__declspec(implementation_key(1942)) HRESULT _IDrawingViewAuto::GetCenterForDetailView ( double * x, double * y );
__declspec(implementation_key(1943)) HRESULT _IDrawingViewAuto::RetrieveSlotCenterLinesCenterMarks ( VARIANT_BOOL IsRetrieve, _bstr_t DimensionStyleName, VARIANT_BOOL TypeCenterLine, VARIANT_BOOL TypeCenterMark, VARIANT_BOOL ProjectCenterMark, VARIANT_BOOL GetSlotCenterLines, VARIANT_BOOL GetStrikePointCenterMarks, VARIANT_BOOL GetEndPointCenterMarks, VARIANT_BOOL GetCenterofArcProjectionLines, VARIANT_BOOL EnableCenterMarkRangeCheck, VARIANT_BOOL EnableCenterLineRangeCheck, double dCenterLineMinRadius, double dCenterLineMaxRadius, double dCenterMarkMinRadius, double dCenterMarkMaxRadius );
__declspec(implementation_key(1944)) void _IDrawingViewAuto::PutShowNewComponentsAddedtoAssembly ( VARIANT_BOOL value );
__declspec(implementation_key(1945)) VARIANT_BOOL _IDrawingViewAuto::GetShowNewComponentsAddedtoAssembly ( );
__declspec(implementation_key(1946)) HRESULT _IDrawingViewAuto::GetEdgeOrFaceID ( IDispatch * pGraphicDVObj, long * pEntityId, VARIANT_BOOL * pIsEdge );
__declspec(implementation_key(1947)) HRESULT _IDrawingViewAuto::SetBendCenterlineStyleAndDisplay ( enum StyleConstants bendUpCenterlineStyle, enum StyleConstants bendDownCenterlineStyle );
__declspec(implementation_key(1948)) _bstr_t ModelLink::GetFileName ( );
__declspec(implementation_key(1949)) enum ModelLinkTypeConstants ModelLink::GetModelType ( );
__declspec(implementation_key(1950)) IDispatchPtr ModelLink::GetModelDocument ( );
__declspec(implementation_key(1951)) TGFramework::ApplicationPtr ModelLink::GetApplication ( );
__declspec(implementation_key(1952)) IDispatchPtr ModelLink::GetParent ( );
__declspec(implementation_key(1953)) HRESULT ModelLink::Range2d ( enum ViewOrientationConstants view, double * lowX, double * lowY, double * highX, double * highY, const _variant_t & ConfigFileName, const _variant_t & ConfigurationName );
__declspec(implementation_key(1954)) HRESULT ModelLink::Range3d ( double * lowX, double * lowY, double * lowZ, double * highX, double * highY, double * highZ, const _variant_t & ConfigFileName, const _variant_t & ConfigurationName );
__declspec(implementation_key(1955)) HRESULT ModelLink::UpdateViews ( );
__declspec(implementation_key(1956)) HRESULT ModelLink::Delete ( );
__declspec(implementation_key(1957)) IDispatchPtr ModelLink::GetAttributeSets ( );
__declspec(implementation_key(1958)) VARIANT_BOOL ModelLink::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1959)) ModelNodesPtr ModelLink::GetModelNodes ( );
__declspec(implementation_key(1960)) long ModelLink::GetGeometricVersion ( );
__declspec(implementation_key(1961)) ModelWeldsPtr ModelLink::GetModelWelds ( );
__declspec(implementation_key(1962)) VARIANT_BOOL ModelLink::GetIsAssemblyFamilyMember ( );
__declspec(implementation_key(1963)) _bstr_t ModelLink::GetAssemblyFamilyMemberName ( );
__declspec(implementation_key(1964)) HRESULT ModelLink::GetFilesToUpdate ( long * NumFiles, SAFEARRAY * * FilesToUpdate );
__declspec(implementation_key(1965)) HRESULT ModelLink::ChangeSource ( _bstr_t FullPath, const _variant_t & Member );
__declspec(implementation_key(1966)) HRESULT ModelLink::ForceUpdateViews ( );
__declspec(implementation_key(1967)) VARIANT_BOOL ModelLink::GetModelOutOfDate ( );
__declspec(implementation_key(1968)) long ModelLink::GetIndexReference ( );
__declspec(implementation_key(1969)) _bstr_t _IModelLinkAuto::GetFileName ( );
__declspec(implementation_key(1970)) enum ModelLinkTypeConstants _IModelLinkAuto::GetModelType ( );
__declspec(implementation_key(1971)) IDispatchPtr _IModelLinkAuto::GetModelDocument ( );
__declspec(implementation_key(1972)) TGFramework::ApplicationPtr _IModelLinkAuto::GetApplication ( );
__declspec(implementation_key(1973)) IDispatchPtr _IModelLinkAuto::GetParent ( );
__declspec(implementation_key(1974)) HRESULT _IModelLinkAuto::Range2d ( enum ViewOrientationConstants view, double * lowX, double * lowY, double * highX, double * highY, const _variant_t & ConfigFileName, const _variant_t & ConfigurationName );
__declspec(implementation_key(1975)) HRESULT _IModelLinkAuto::Range3d ( double * lowX, double * lowY, double * lowZ, double * highX, double * highY, double * highZ, const _variant_t & ConfigFileName, const _variant_t & ConfigurationName );
__declspec(implementation_key(1976)) HRESULT _IModelLinkAuto::UpdateViews ( );
__declspec(implementation_key(1977)) HRESULT _IModelLinkAuto::Delete ( );
__declspec(implementation_key(1978)) IDispatchPtr _IModelLinkAuto::GetAttributeSets ( );
__declspec(implementation_key(1979)) VARIANT_BOOL _IModelLinkAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1980)) ModelNodesPtr _IModelLinkAuto::GetModelNodes ( );
__declspec(implementation_key(1981)) long _IModelLinkAuto::GetGeometricVersion ( );
__declspec(implementation_key(1982)) ModelWeldsPtr _IModelLinkAuto::GetModelWelds ( );
__declspec(implementation_key(1983)) VARIANT_BOOL _IModelLinkAuto::GetIsAssemblyFamilyMember ( );
__declspec(implementation_key(1984)) _bstr_t _IModelLinkAuto::GetAssemblyFamilyMemberName ( );
__declspec(implementation_key(1985)) HRESULT _IModelLinkAuto::GetFilesToUpdate ( long * NumFiles, SAFEARRAY * * FilesToUpdate );
__declspec(implementation_key(1986)) HRESULT _IModelLinkAuto::ChangeSource ( _bstr_t FullPath, const _variant_t & Member );
__declspec(implementation_key(1987)) HRESULT _IModelLinkAuto::ForceUpdateViews ( );
__declspec(implementation_key(1988)) VARIANT_BOOL _IModelLinkAuto::GetModelOutOfDate ( );
__declspec(implementation_key(1989)) long _IModelLinkAuto::GetIndexReference ( );
__declspec(implementation_key(1990)) TGFramework::ApplicationPtr _IDrawingViewsAuto::GetApplication ( );
__declspec(implementation_key(1991)) long _IDrawingViewsAuto::GetCount ( );
__declspec(implementation_key(1992)) IDispatchPtr _IDrawingViewsAuto::GetParent ( );
__declspec(implementation_key(1993)) DrawingViewPtr _IDrawingViewsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(1994)) IUnknownPtr _IDrawingViewsAuto::Get_NewEnum ( );
__declspec(implementation_key(1995)) DrawingViewPtr _IDrawingViewsAuto::Add ( struct ModelLink * From, enum ViewOrientationConstants Orientation, double Scale, double x, double y );
__declspec(implementation_key(1996)) DrawingViewPtr _IDrawingViewsAuto::AddWithConfiguration ( struct ModelLink * From, enum ViewOrientationConstants Orientation, double Scale, double x, double y, _bstr_t ConfigFileName, _bstr_t ConfigurationName );
__declspec(implementation_key(1997)) DrawingViewPtr _IDrawingViewsAuto::AddByFold ( struct DrawingView * From, enum FoldTypeConstants foldDir, double x, double y );
__declspec(implementation_key(1998)) DrawingViewPtr _IDrawingViewsAuto::AddByAuxiliaryFold ( struct DrawingView * From, double x1, double y1, double x2, double y2, double x3, double y3 );
__declspec(implementation_key(1999)) DrawingViewPtr _IDrawingViewsAuto::AddByDetailEnvelope ( struct DrawingView * From, double x1, double y1, double Radius, double Scale, double x2, double y2 );
__declspec(implementation_key(2000)) DrawingViewPtr _IDrawingViewsAuto::AddDraftView ( double Scale, double x1, double y1 );
__declspec(implementation_key(2001)) DrawingViewPtr _IDrawingViewsAuto::AddByDraftView ( struct DrawingView * From, double Scale, double x1, double y1 );
__declspec(implementation_key(2002)) HRESULT _IDrawingViewsAuto::Align ( );
__declspec(implementation_key(2003)) HRESULT _IDrawingViewsAuto::Unalign ( );
__declspec(implementation_key(2004)) DrawingViewPtr _IDrawingViewsAuto::AddAssemblyView ( struct ModelLink * From, enum ViewOrientationConstants Orientation, double Scale, double x, double y, enum AssemblyDrawingViewTypeConstants ViewType, _bstr_t ConfigurationName, VARIANT_BOOL Snapshot, long SnapShotQuality );
__declspec(implementation_key(2005)) DrawingViewPtr _IDrawingViewsAuto::AddPartView ( struct ModelLink * From, enum ViewOrientationConstants Orientation, double Scale, double x, double y, enum PartDrawingViewTypeConstants ViewType );
__declspec(implementation_key(2006)) DrawingViewPtr _IDrawingViewsAuto::AddSheetMetalView ( struct ModelLink * From, enum ViewOrientationConstants Orientation, double Scale, double x, double y, enum SheetMetalDrawingViewTypeConstants ViewType );
__declspec(implementation_key(2007)) DrawingViewPtr _IDrawingViewsAuto::AddWeldmentView ( struct ModelLink * From, enum ViewOrientationConstants Orientation, double Scale, double x, double y, enum WeldmentDrawingViewTypeConstants ViewType );
__declspec(implementation_key(2008)) DrawingViewPtr _IDrawingViewsAuto::AddDetailView ( struct DrawingView * From, double x1, double y1, double Radius, double Scale, double x2, double y2, VARIANT_BOOL Independent );
__declspec(implementation_key(2009)) DrawingViewPtr _IDrawingViewsAuto::Add2dModelView ( double Scale, double x1, double y1 );
__declspec(implementation_key(2010)) DrawingViewPtr _IDrawingViewsAuto::AddPMIModelView ( struct ModelLink * From, _bstr_t ModelViewName, double Scale, double x, double y, VARIANT_BOOL IncludePMIDimensions, VARIANT_BOOL UseDraftQuality, long DraftQuality );
__declspec(implementation_key(2011)) DrawingViewPtr _IDrawingViewsAuto::AddEmptyView ( struct ModelLink * From, enum DrawingViewDefaultsConstants CreationDefaults );
__declspec(implementation_key(2012)) TGFramework::ApplicationPtr BlockOccurrences::GetApplication ( );
__declspec(implementation_key(2013)) IDispatchPtr BlockOccurrences::GetParent ( );
__declspec(implementation_key(2014)) long BlockOccurrences::GetCount ( );
__declspec(implementation_key(2015)) BlockOccurrencePtr BlockOccurrences::Item ( const _variant_t & Index );
__declspec(implementation_key(2016)) BlockOccurrencePtr BlockOccurrences::Add ( _bstr_t BlockName, double XOrigin, double YOrigin, const _variant_t & BlockViewName, const _variant_t & Scale, const _variant_t & Rotation );
__declspec(implementation_key(2017)) HRESULT BlockOccurrence::Unblock ( );
__declspec(implementation_key(2018)) TGFramework::ReferencePtr BlockOccurrence::GetMemberReference ( IDispatch * Member );
__declspec(implementation_key(2019)) void BlockOccurrence::PutLayer ( _bstr_t _arg1 );
__declspec(implementation_key(2020)) _bstr_t BlockOccurrence::GetLayer ( );
__declspec(implementation_key(2021)) TGFramework::ApplicationPtr BlockOccurrence::GetApplication ( );
__declspec(implementation_key(2022)) long BlockOccurrence::GetIndex ( );
__declspec(implementation_key(2023)) _bstr_t BlockOccurrence::GetName ( const _variant_t & Recurse );
__declspec(implementation_key(2024)) IDispatchPtr BlockOccurrence::GetParent ( );
__declspec(implementation_key(2025)) long BlockOccurrence::GetType ( );
__declspec(implementation_key(2026)) long BlockOccurrence::GetZOrder ( );
__declspec(implementation_key(2027)) _bstr_t BlockOccurrence::GetKey ( const _variant_t & Recurse );
__declspec(implementation_key(2028)) IDispatchPtr BlockOccurrence::GetDocument ( );
__declspec(implementation_key(2029)) HRESULT BlockOccurrence::Copy ( );
__declspec(implementation_key(2030)) HRESULT BlockOccurrence::Cut ( );
__declspec(implementation_key(2031)) HRESULT BlockOccurrence::Delete ( );
__declspec(implementation_key(2032)) HRESULT BlockOccurrence::Move ( double XFrom, double YFrom, double XTo, double YTo );
__declspec(implementation_key(2033)) HRESULT BlockOccurrence::Scale ( double Factor );
__declspec(implementation_key(2034)) HRESULT BlockOccurrence::Rotate ( double Angle, double x, double y );
__declspec(implementation_key(2035)) HRESULT BlockOccurrence::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum );
__declspec(implementation_key(2036)) IDispatchPtr BlockOccurrence::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance );
__declspec(implementation_key(2037)) IDispatchPtr BlockOccurrence::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag );
__declspec(implementation_key(2038)) HRESULT BlockOccurrence::BringToFront ( );
__declspec(implementation_key(2039)) HRESULT BlockOccurrence::BringForward ( );
__declspec(implementation_key(2040)) HRESULT BlockOccurrence::SendToBack ( );
__declspec(implementation_key(2041)) HRESULT BlockOccurrence::SendBackward ( );
__declspec(implementation_key(2042)) HRESULT BlockOccurrence::Select ( );
__declspec(implementation_key(2043)) TGFramework::ReferencePtr BlockOccurrence::GetOriginReference ( );
__declspec(implementation_key(2044)) HRESULT BlockOccurrence::SetOrigin ( double x, double y );
__declspec(implementation_key(2045)) HRESULT BlockOccurrence::GetOrigin ( double * x, double * y );
__declspec(implementation_key(2046)) double BlockOccurrence::GetScaleFactor ( );
__declspec(implementation_key(2047)) double BlockOccurrence::GetRotationAngle ( );
__declspec(implementation_key(2048)) void BlockOccurrence::PutLineColor ( long _arg1 );
__declspec(implementation_key(2049)) long BlockOccurrence::GetLineColor ( );
__declspec(implementation_key(2050)) BlockPtr BlockOccurrence::GetBlock ( );
__declspec(implementation_key(2051)) void BlockOccurrence::PutBlock ( struct Block * _arg1 );
__declspec(implementation_key(2052)) BlockViewPtr BlockOccurrence::GetBlockView ( );
__declspec(implementation_key(2053)) void BlockOccurrence::PutBlockView ( struct BlockView * _arg1 );
__declspec(implementation_key(2054)) BlockLabelOccurrencesPtr BlockOccurrence::GetBlockLabelOccurrences ( );
__declspec(implementation_key(2055)) HRESULT BlockOccurrence::OccurrenceToBlockView ( double xOccurrence, double yOccurrence, double * xBlockView, double * yBlockView );
__declspec(implementation_key(2056)) HRESULT BlockOccurrence::BlockViewToOccurrence ( double xBlockView, double yBlockView, double * xOccurrence, double * yOccurrence );
__declspec(implementation_key(2057)) TGFramework::ApplicationPtr _IBlockOccurrencesAuto::GetApplication ( );
__declspec(implementation_key(2058)) IDispatchPtr _IBlockOccurrencesAuto::GetParent ( );
__declspec(implementation_key(2059)) long _IBlockOccurrencesAuto::GetCount ( );
__declspec(implementation_key(2060)) IUnknownPtr _IBlockOccurrencesAuto::Get_NewEnum ( );
__declspec(implementation_key(2061)) BlockOccurrencePtr _IBlockOccurrencesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(2062)) BlockOccurrencePtr _IBlockOccurrencesAuto::Add ( _bstr_t BlockName, double XOrigin, double YOrigin, const _variant_t & BlockViewName, const _variant_t & Scale, const _variant_t & Rotation );
__declspec(implementation_key(2063)) TGFramework::ApplicationPtr Block::GetApplication ( );
__declspec(implementation_key(2064)) IDispatchPtr Block::GetParent ( );
__declspec(implementation_key(2065)) long Block::GetOccurrenceCount ( );
__declspec(implementation_key(2066)) void Block::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(2067)) _bstr_t Block::GetName ( );
__declspec(implementation_key(2068)) void Block::PutScaleDimAndAnnot ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2069)) VARIANT_BOOL Block::GetScaleDimAndAnnot ( );
__declspec(implementation_key(2070)) HRESULT Block::Delete ( );
__declspec(implementation_key(2071)) IDispatchPtr Block::GetAttributeSets ( );
__declspec(implementation_key(2072)) VARIANT_BOOL Block::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(2073)) BlockViewsPtr Block::GetViews ( );
__declspec(implementation_key(2074)) BlockViewPtr Block::GetDefaultView ( );
__declspec(implementation_key(2075)) void Block::PutDefaultView ( struct BlockView * _arg1 );
__declspec(implementation_key(2076)) TGFramework::ApplicationPtr BlockViews::GetApplication ( );
__declspec(implementation_key(2077)) IDispatchPtr BlockViews::GetParent ( );
__declspec(implementation_key(2078)) long BlockViews::GetCount ( );
__declspec(implementation_key(2079)) BlockPtr BlockViews::GetBlock ( );
__declspec(implementation_key(2080)) BlockViewPtr BlockViews::Item ( const _variant_t & Index );
__declspec(implementation_key(2081)) BlockViewPtr BlockViews::Add ( _bstr_t Name, double XOrigin, double YOrigin, const _variant_t & DeleteSelectedGraphics );
__declspec(implementation_key(2082)) TGFramework::ApplicationPtr _IBlockAuto::GetApplication ( );
__declspec(implementation_key(2083)) IDispatchPtr _IBlockAuto::GetParent ( );
__declspec(implementation_key(2084)) long _IBlockAuto::GetOccurrenceCount ( );
__declspec(implementation_key(2085)) void _IBlockAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(2086)) _bstr_t _IBlockAuto::GetName ( );
__declspec(implementation_key(2087)) void _IBlockAuto::PutScaleDimAndAnnot ( VARIANT_BOOL ScaleDimAndAnnot );
__declspec(implementation_key(2088)) VARIANT_BOOL _IBlockAuto::GetScaleDimAndAnnot ( );
__declspec(implementation_key(2089)) HRESULT _IBlockAuto::Delete ( );
__declspec(implementation_key(2090)) IDispatchPtr _IBlockAuto::GetAttributeSets ( );
__declspec(implementation_key(2091)) VARIANT_BOOL _IBlockAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(2092)) BlockViewsPtr _IBlockAuto::GetViews ( );
__declspec(implementation_key(2093)) BlockViewPtr _IBlockAuto::GetDefaultView ( );
__declspec(implementation_key(2094)) void _IBlockAuto::PutDefaultView ( struct BlockView * BlockView );
__declspec(implementation_key(2095)) TGFramework::ApplicationPtr _IBlockViewsAuto::GetApplication ( );
__declspec(implementation_key(2096)) IDispatchPtr _IBlockViewsAuto::GetParent ( );
__declspec(implementation_key(2097)) long _IBlockViewsAuto::GetCount ( );
__declspec(implementation_key(2098)) IUnknownPtr _IBlockViewsAuto::Get_NewEnum ( );
__declspec(implementation_key(2099)) BlockPtr _IBlockViewsAuto::GetBlock ( );
__declspec(implementation_key(2100)) BlockViewPtr _IBlockViewsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(2101)) BlockViewPtr _IBlockViewsAuto::Add ( _bstr_t Name, double XOrigin, double YOrigin, const _variant_t & DeleteSelectedGraphics );
__declspec(implementation_key(2102)) TGFramework::ApplicationPtr BlockLabelOccurrences::GetApplication ( );
__declspec(implementation_key(2103)) IDispatchPtr BlockLabelOccurrences::GetParent ( );
__declspec(implementation_key(2104)) long BlockLabelOccurrences::GetCount ( );
__declspec(implementation_key(2105)) BlockLabelOccurrencePtr BlockLabelOccurrences::Item ( const _variant_t & Index );
__declspec(implementation_key(2106)) HRESULT _IBlockOccurrenceAuto::Unblock ( );
__declspec(implementation_key(2107)) TGFramework::ReferencePtr _IBlockOccurrenceAuto::GetMemberReference ( IDispatch * Member );
__declspec(implementation_key(2108)) void _IBlockOccurrenceAuto::PutLayer ( _bstr_t Layer );
__declspec(implementation_key(2109)) _bstr_t _IBlockOccurrenceAuto::GetLayer ( );
__declspec(implementation_key(2110)) TGFramework::ApplicationPtr _IBlockOccurrenceAuto::GetApplication ( );
__declspec(implementation_key(2111)) long _IBlockOccurrenceAuto::GetIndex ( );
__declspec(implementation_key(2112)) _bstr_t _IBlockOccurrenceAuto::GetName ( const _variant_t & Recurse, long Lcid );
__declspec(implementation_key(2113)) IDispatchPtr _IBlockOccurrenceAuto::GetParent ( );
__declspec(implementation_key(2114)) long _IBlockOccurrenceAuto::GetType ( );
__declspec(implementation_key(2115)) long _IBlockOccurrenceAuto::GetZOrder ( );
__declspec(implementation_key(2116)) _bstr_t _IBlockOccurrenceAuto::GetKey ( const _variant_t & Recurse );
__declspec(implementation_key(2117)) IDispatchPtr _IBlockOccurrenceAuto::GetDocument ( );
__declspec(implementation_key(2118)) HRESULT _IBlockOccurrenceAuto::Copy ( );
__declspec(implementation_key(2119)) HRESULT _IBlockOccurrenceAuto::Cut ( );
__declspec(implementation_key(2120)) HRESULT _IBlockOccurrenceAuto::Delete ( );
__declspec(implementation_key(2121)) HRESULT _IBlockOccurrenceAuto::Move ( double XFrom, double YFrom, double XTo, double YTo );
__declspec(implementation_key(2122)) HRESULT _IBlockOccurrenceAuto::Scale ( double Factor );
__declspec(implementation_key(2123)) HRESULT _IBlockOccurrenceAuto::Rotate ( double Angle, double x, double y );
__declspec(implementation_key(2124)) HRESULT _IBlockOccurrenceAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum );
__declspec(implementation_key(2125)) IDispatchPtr _IBlockOccurrenceAuto::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance );
__declspec(implementation_key(2126)) IDispatchPtr _IBlockOccurrenceAuto::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag );
__declspec(implementation_key(2127)) HRESULT _IBlockOccurrenceAuto::BringToFront ( );
__declspec(implementation_key(2128)) HRESULT _IBlockOccurrenceAuto::BringForward ( );
__declspec(implementation_key(2129)) HRESULT _IBlockOccurrenceAuto::SendToBack ( );
__declspec(implementation_key(2130)) HRESULT _IBlockOccurrenceAuto::SendBackward ( );
__declspec(implementation_key(2131)) HRESULT _IBlockOccurrenceAuto::Select ( );
__declspec(implementation_key(2132)) TGFramework::ReferencePtr _IBlockOccurrenceAuto::GetOriginReference ( );
__declspec(implementation_key(2133)) HRESULT _IBlockOccurrenceAuto::SetOrigin ( double x, double y );
__declspec(implementation_key(2134)) HRESULT _IBlockOccurrenceAuto::GetOrigin ( double * x, double * y );
__declspec(implementation_key(2135)) double _IBlockOccurrenceAuto::GetScaleFactor ( );
__declspec(implementation_key(2136)) double _IBlockOccurrenceAuto::GetRotationAngle ( );
__declspec(implementation_key(2137)) void _IBlockOccurrenceAuto::PutLineColor ( long value );
__declspec(implementation_key(2138)) long _IBlockOccurrenceAuto::GetLineColor ( );
__declspec(implementation_key(2139)) BlockPtr _IBlockOccurrenceAuto::GetBlock ( );
__declspec(implementation_key(2140)) void _IBlockOccurrenceAuto::PutBlock ( struct Block * Block );
__declspec(implementation_key(2141)) BlockViewPtr _IBlockOccurrenceAuto::GetBlockView ( );
__declspec(implementation_key(2142)) void _IBlockOccurrenceAuto::PutBlockView ( struct BlockView * BlockView );
__declspec(implementation_key(2143)) BlockLabelOccurrencesPtr _IBlockOccurrenceAuto::GetBlockLabelOccurrences ( );
__declspec(implementation_key(2144)) HRESULT _IBlockOccurrenceAuto::OccurrenceToBlockView ( double xOccurrence, double yOccurrence, double * xBlockView, double * yBlockView );
__declspec(implementation_key(2145)) HRESULT _IBlockOccurrenceAuto::BlockViewToOccurrence ( double xBlockView, double yBlockView, double * xOccurrence, double * yOccurrence );
__declspec(implementation_key(2146)) TGFramework::ApplicationPtr BlockLabelOccurrence::GetApplication ( );
__declspec(implementation_key(2147)) IDispatchPtr BlockLabelOccurrence::GetParent ( );
__declspec(implementation_key(2148)) _bstr_t BlockLabelOccurrence::GetName ( );
__declspec(implementation_key(2149)) void BlockLabelOccurrence::Putvalue ( _bstr_t _arg1 );
__declspec(implementation_key(2150)) _bstr_t BlockLabelOccurrence::Getvalue ( );
__declspec(implementation_key(2151)) _bstr_t BlockLabelOccurrence::GetDescription ( );
__declspec(implementation_key(2152)) void BlockLabelOccurrence::PutAngle ( double _arg1 );
__declspec(implementation_key(2153)) double BlockLabelOccurrence::GetAngle ( );
__declspec(implementation_key(2154)) HRESULT BlockLabelOccurrence::SetOrigin ( double x, double y );
__declspec(implementation_key(2155)) HRESULT BlockLabelOccurrence::GetOrigin ( double * x, double * y );
__declspec(implementation_key(2156)) VARIANT_BOOL BlockLabelOccurrence::GetPrompt ( );
__declspec(implementation_key(2157)) void BlockLabelOccurrence::PutOriginLocation ( enum BlockLabelOriginLocationConstants _arg1 );
__declspec(implementation_key(2158)) enum BlockLabelOriginLocationConstants BlockLabelOccurrence::GetOriginLocation ( );
__declspec(implementation_key(2159)) VARIANT_BOOL BlockLabelOccurrence::GetVisibleInOccurrence ( );
__declspec(implementation_key(2160)) VARIANT_BOOL BlockLabelOccurrence::GetGlobal ( );
__declspec(implementation_key(2161)) VARIANT_BOOL BlockLabelOccurrence::GetPositionLocked ( );
__declspec(implementation_key(2162)) TGFrameworkSupport::DimStylePtr BlockLabelOccurrence::Getstyle ( );
__declspec(implementation_key(2163)) void BlockLabelOccurrence::PutLayer ( _bstr_t _arg1 );
__declspec(implementation_key(2164)) _bstr_t BlockLabelOccurrence::GetLayer ( );
__declspec(implementation_key(2165)) _bstr_t BlockLabelOccurrence::GetDisplayedText ( );
__declspec(implementation_key(2166)) BlockLabelPtr BlockLabelOccurrence::GetBlockLabel ( );
__declspec(implementation_key(2167)) TGFramework::ApplicationPtr _IBlockLabelOccurrencesAuto::GetApplication ( );
__declspec(implementation_key(2168)) IDispatchPtr _IBlockLabelOccurrencesAuto::GetParent ( );
__declspec(implementation_key(2169)) long _IBlockLabelOccurrencesAuto::GetCount ( );
__declspec(implementation_key(2170)) IUnknownPtr _IBlockLabelOccurrencesAuto::Get_NewEnum ( );
__declspec(implementation_key(2171)) BlockLabelOccurrencePtr _IBlockLabelOccurrencesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(2172)) void BlockLabel::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(2173)) _bstr_t BlockLabel::GetName ( );
__declspec(implementation_key(2174)) void BlockLabel::Putvalue ( _bstr_t _arg1 );
__declspec(implementation_key(2175)) _bstr_t BlockLabel::Getvalue ( );
__declspec(implementation_key(2176)) void BlockLabel::PutDescription ( _bstr_t _arg1 );
__declspec(implementation_key(2177)) _bstr_t BlockLabel::GetDescription ( );
__declspec(implementation_key(2178)) void BlockLabel::PutAngle ( double _arg1 );
__declspec(implementation_key(2179)) double BlockLabel::GetAngle ( );
__declspec(implementation_key(2180)) HRESULT BlockLabel::SetOrigin ( double x, double y );
__declspec(implementation_key(2181)) HRESULT BlockLabel::GetOrigin ( double * x, double * y );
__declspec(implementation_key(2182)) void BlockLabel::PutPrompt ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2183)) VARIANT_BOOL BlockLabel::GetPrompt ( );
__declspec(implementation_key(2184)) void BlockLabel::PutOriginLocation ( enum BlockLabelOriginLocationConstants _arg1 );
__declspec(implementation_key(2185)) enum BlockLabelOriginLocationConstants BlockLabel::GetOriginLocation ( );
__declspec(implementation_key(2186)) void BlockLabel::PutVisibleInOccurrence ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2187)) VARIANT_BOOL BlockLabel::GetVisibleInOccurrence ( );
__declspec(implementation_key(2188)) void BlockLabel::PutGlobal ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2189)) VARIANT_BOOL BlockLabel::GetGlobal ( );
__declspec(implementation_key(2190)) void BlockLabel::PutPositionLocked ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2191)) VARIANT_BOOL BlockLabel::GetPositionLocked ( );
__declspec(implementation_key(2192)) TGFrameworkSupport::DimStylePtr BlockLabel::Getstyle ( );
__declspec(implementation_key(2193)) void BlockLabel::PutLayer ( _bstr_t _arg1 );
__declspec(implementation_key(2194)) _bstr_t BlockLabel::GetLayer ( );
__declspec(implementation_key(2195)) TGFramework::ApplicationPtr BlockLabel::GetApplication ( );
__declspec(implementation_key(2196)) long BlockLabel::GetIndex ( );
__declspec(implementation_key(2197)) IDispatchPtr BlockLabel::GetParent ( );
__declspec(implementation_key(2198)) long BlockLabel::GetType ( );
__declspec(implementation_key(2199)) long BlockLabel::GetZOrder ( );
__declspec(implementation_key(2200)) _bstr_t BlockLabel::GetKey ( const _variant_t & Recurse );
__declspec(implementation_key(2201)) IDispatchPtr BlockLabel::GetDocument ( );
__declspec(implementation_key(2202)) HRESULT BlockLabel::Copy ( );
__declspec(implementation_key(2203)) HRESULT BlockLabel::Cut ( );
__declspec(implementation_key(2204)) HRESULT BlockLabel::Delete ( );
__declspec(implementation_key(2205)) HRESULT BlockLabel::Move ( double XFrom, double YFrom, double XTo, double YTo );
__declspec(implementation_key(2206)) HRESULT BlockLabel::Scale ( double Factor );
__declspec(implementation_key(2207)) HRESULT BlockLabel::Rotate ( double Angle, double x, double y );
__declspec(implementation_key(2208)) HRESULT BlockLabel::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum );
__declspec(implementation_key(2209)) IDispatchPtr BlockLabel::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance );
__declspec(implementation_key(2210)) IDispatchPtr BlockLabel::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag );
__declspec(implementation_key(2211)) HRESULT BlockLabel::BringToFront ( );
__declspec(implementation_key(2212)) HRESULT BlockLabel::BringForward ( );
__declspec(implementation_key(2213)) HRESULT BlockLabel::SendToBack ( );
__declspec(implementation_key(2214)) HRESULT BlockLabel::SendBackward ( );
__declspec(implementation_key(2215)) HRESULT BlockLabel::Select ( );
__declspec(implementation_key(2216)) TGFramework::ApplicationPtr _IBlockLabelOccurrenceAuto::GetApplication ( );
__declspec(implementation_key(2217)) IDispatchPtr _IBlockLabelOccurrenceAuto::GetParent ( );
__declspec(implementation_key(2218)) _bstr_t _IBlockLabelOccurrenceAuto::GetName ( );
__declspec(implementation_key(2219)) void _IBlockLabelOccurrenceAuto::Putvalue ( _bstr_t value );
__declspec(implementation_key(2220)) _bstr_t _IBlockLabelOccurrenceAuto::Getvalue ( );
__declspec(implementation_key(2221)) _bstr_t _IBlockLabelOccurrenceAuto::GetDescription ( );
__declspec(implementation_key(2222)) void _IBlockLabelOccurrenceAuto::PutAngle ( double Angle );
__declspec(implementation_key(2223)) double _IBlockLabelOccurrenceAuto::GetAngle ( );
__declspec(implementation_key(2224)) HRESULT _IBlockLabelOccurrenceAuto::SetOrigin ( double x, double y );
__declspec(implementation_key(2225)) HRESULT _IBlockLabelOccurrenceAuto::GetOrigin ( double * x, double * y );
__declspec(implementation_key(2226)) VARIANT_BOOL _IBlockLabelOccurrenceAuto::GetPrompt ( );
__declspec(implementation_key(2227)) void _IBlockLabelOccurrenceAuto::PutOriginLocation ( enum BlockLabelOriginLocationConstants OriginLocation );
__declspec(implementation_key(2228)) enum BlockLabelOriginLocationConstants _IBlockLabelOccurrenceAuto::GetOriginLocation ( );
__declspec(implementation_key(2229)) VARIANT_BOOL _IBlockLabelOccurrenceAuto::GetVisibleInOccurrence ( );
__declspec(implementation_key(2230)) VARIANT_BOOL _IBlockLabelOccurrenceAuto::GetGlobal ( );
__declspec(implementation_key(2231)) VARIANT_BOOL _IBlockLabelOccurrenceAuto::GetPositionLocked ( );
__declspec(implementation_key(2232)) TGFrameworkSupport::DimStylePtr _IBlockLabelOccurrenceAuto::Getstyle ( );
__declspec(implementation_key(2233)) void _IBlockLabelOccurrenceAuto::PutLayer ( _bstr_t Layer );
__declspec(implementation_key(2234)) _bstr_t _IBlockLabelOccurrenceAuto::GetLayer ( );
__declspec(implementation_key(2235)) _bstr_t _IBlockLabelOccurrenceAuto::GetDisplayedText ( );
__declspec(implementation_key(2236)) BlockLabelPtr _IBlockLabelOccurrenceAuto::GetBlockLabel ( );
__declspec(implementation_key(2237)) void _IBlockLabelAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(2238)) _bstr_t _IBlockLabelAuto::GetName ( );
__declspec(implementation_key(2239)) void _IBlockLabelAuto::Putvalue ( _bstr_t value );
__declspec(implementation_key(2240)) _bstr_t _IBlockLabelAuto::Getvalue ( );
__declspec(implementation_key(2241)) void _IBlockLabelAuto::PutDescription ( _bstr_t Description );
__declspec(implementation_key(2242)) _bstr_t _IBlockLabelAuto::GetDescription ( );
__declspec(implementation_key(2243)) void _IBlockLabelAuto::PutAngle ( double Angle );
__declspec(implementation_key(2244)) double _IBlockLabelAuto::GetAngle ( );
__declspec(implementation_key(2245)) HRESULT _IBlockLabelAuto::SetOrigin ( double x, double y );
__declspec(implementation_key(2246)) HRESULT _IBlockLabelAuto::GetOrigin ( double * x, double * y );
__declspec(implementation_key(2247)) void _IBlockLabelAuto::PutPrompt ( VARIANT_BOOL Prompt );
__declspec(implementation_key(2248)) VARIANT_BOOL _IBlockLabelAuto::GetPrompt ( );
__declspec(implementation_key(2249)) void _IBlockLabelAuto::PutOriginLocation ( enum BlockLabelOriginLocationConstants OriginLocation );
__declspec(implementation_key(2250)) enum BlockLabelOriginLocationConstants _IBlockLabelAuto::GetOriginLocation ( );
__declspec(implementation_key(2251)) void _IBlockLabelAuto::PutVisibleInOccurrence ( VARIANT_BOOL VisibleInOccurrence );
__declspec(implementation_key(2252)) VARIANT_BOOL _IBlockLabelAuto::GetVisibleInOccurrence ( );
__declspec(implementation_key(2253)) void _IBlockLabelAuto::PutGlobal ( VARIANT_BOOL Global );
__declspec(implementation_key(2254)) VARIANT_BOOL _IBlockLabelAuto::GetGlobal ( );
__declspec(implementation_key(2255)) void _IBlockLabelAuto::PutPositionLocked ( VARIANT_BOOL PositionLocked );
__declspec(implementation_key(2256)) VARIANT_BOOL _IBlockLabelAuto::GetPositionLocked ( );
__declspec(implementation_key(2257)) TGFrameworkSupport::DimStylePtr _IBlockLabelAuto::Getstyle ( );
__declspec(implementation_key(2258)) void _IBlockLabelAuto::PutLayer ( _bstr_t Layer );
__declspec(implementation_key(2259)) _bstr_t _IBlockLabelAuto::GetLayer ( );
__declspec(implementation_key(2260)) TGFramework::ApplicationPtr _IBlockLabelAuto::GetApplication ( );
__declspec(implementation_key(2261)) long _IBlockLabelAuto::GetIndex ( );
__declspec(implementation_key(2262)) IDispatchPtr _IBlockLabelAuto::GetParent ( );
__declspec(implementation_key(2263)) long _IBlockLabelAuto::GetType ( );
__declspec(implementation_key(2264)) long _IBlockLabelAuto::GetZOrder ( );
__declspec(implementation_key(2265)) _bstr_t _IBlockLabelAuto::GetKey ( const _variant_t & Recurse );
__declspec(implementation_key(2266)) IDispatchPtr _IBlockLabelAuto::GetDocument ( );
__declspec(implementation_key(2267)) HRESULT _IBlockLabelAuto::Copy ( );
__declspec(implementation_key(2268)) HRESULT _IBlockLabelAuto::Cut ( );
__declspec(implementation_key(2269)) HRESULT _IBlockLabelAuto::Delete ( );
__declspec(implementation_key(2270)) HRESULT _IBlockLabelAuto::Move ( double XFrom, double YFrom, double XTo, double YTo );
__declspec(implementation_key(2271)) HRESULT _IBlockLabelAuto::Scale ( double Factor );
__declspec(implementation_key(2272)) HRESULT _IBlockLabelAuto::Rotate ( double Angle, double x, double y );
__declspec(implementation_key(2273)) HRESULT _IBlockLabelAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum );
__declspec(implementation_key(2274)) IDispatchPtr _IBlockLabelAuto::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance );
__declspec(implementation_key(2275)) IDispatchPtr _IBlockLabelAuto::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag );
__declspec(implementation_key(2276)) HRESULT _IBlockLabelAuto::BringToFront ( );
__declspec(implementation_key(2277)) HRESULT _IBlockLabelAuto::BringForward ( );
__declspec(implementation_key(2278)) HRESULT _IBlockLabelAuto::SendToBack ( );
__declspec(implementation_key(2279)) HRESULT _IBlockLabelAuto::SendBackward ( );
__declspec(implementation_key(2280)) HRESULT _IBlockLabelAuto::Select ( );
__declspec(implementation_key(2281)) TGFramework::ApplicationPtr BlockLabels::GetApplication ( );
__declspec(implementation_key(2282)) IDispatchPtr BlockLabels::GetParent ( );
__declspec(implementation_key(2283)) long BlockLabels::GetCount ( );
__declspec(implementation_key(2284)) BlockLabelPtr BlockLabels::Item ( const _variant_t & Index );
__declspec(implementation_key(2285)) BlockLabelPtr BlockLabels::Add ( _bstr_t Name, _bstr_t value, _bstr_t Description, double XOrigin, double YOrigin, enum BlockLabelOriginLocationConstants OriginLoc, VARIANT_BOOL VisibleInOccurrence, VARIANT_BOOL Global, VARIANT_BOOL Prompt, VARIANT_BOOL PositionLocked, double dAngle );
__declspec(implementation_key(2286)) TGFramework::ApplicationPtr _IBlockViewAuto::GetApplication ( );
__declspec(implementation_key(2287)) IDispatchPtr _IBlockViewAuto::GetDocument ( );
__declspec(implementation_key(2288)) long _IBlockViewAuto::GetIndex ( );
__declspec(implementation_key(2289)) void _IBlockViewAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(2290)) _bstr_t _IBlockViewAuto::GetName ( );
__declspec(implementation_key(2291)) IDispatchPtr _IBlockViewAuto::GetParent ( );
__declspec(implementation_key(2292)) HRESULT _IBlockViewAuto::Delete ( );
__declspec(implementation_key(2293)) TGFrameworkSupport::Lines2dPtr _IBlockViewAuto::GetLines2d ( );
__declspec(implementation_key(2294)) TGFrameworkSupport::Circles2dPtr _IBlockViewAuto::GetCircles2d ( );
__declspec(implementation_key(2295)) TGFrameworkSupport::Arcs2dPtr _IBlockViewAuto::GetArcs2d ( );
__declspec(implementation_key(2296)) TGFrameworkSupport::Ellipses2dPtr _IBlockViewAuto::GetEllipses2d ( );
__declspec(implementation_key(2297)) TGFrameworkSupport::BSplineCurves2dPtr _IBlockViewAuto::GetBsplineCurves2d ( );
__declspec(implementation_key(2298)) TGFrameworkSupport::Points2dPtr _IBlockViewAuto::GetPoints2d ( );
__declspec(implementation_key(2299)) TGFrameworkSupport::EllipticalArcs2dPtr _IBlockViewAuto::GetEllipticalArcs2d ( );
__declspec(implementation_key(2300)) TGFrameworkSupport::Curves2dPtr _IBlockViewAuto::GetCurves2d ( );
__declspec(implementation_key(2301)) TGFrameworkSupport::LineStrings2dPtr _IBlockViewAuto::GetLineStrings2d ( );
__declspec(implementation_key(2302)) TGFrameworkSupport::ComplexStrings2dPtr _IBlockViewAuto::GetComplexStrings2d ( );
__declspec(implementation_key(2303)) TGFrameworkSupport::Boundaries2dPtr _IBlockViewAuto::GetBoundaries2d ( );
__declspec(implementation_key(2304)) TGFrameworkSupport::DimensionsPtr _IBlockViewAuto::GetDimensions ( );
__declspec(implementation_key(2305)) TGFrameworkSupport::LeadersPtr _IBlockViewAuto::GetLeaders ( );
__declspec(implementation_key(2306)) TGFrameworkSupport::BalloonsPtr _IBlockViewAuto::GetBalloons ( );
__declspec(implementation_key(2307)) TGFrameworkSupport::TextBoxesPtr _IBlockViewAuto::GetTextBoxes ( );
__declspec(implementation_key(2308)) TGFrameworkSupport::Relations2dPtr _IBlockViewAuto::GetRelations2d ( );
__declspec(implementation_key(2309)) TGFrameworkSupport::SmartFrames2dPtr _IBlockViewAuto::GetSmartFrames2d ( );
__declspec(implementation_key(2310)) TGFrameworkSupport::DatumFramesPtr _IBlockViewAuto::GetDatumFrames ( );
__declspec(implementation_key(2311)) TGFrameworkSupport::FeatureControlFramesPtr _IBlockViewAuto::GetFeatureControlFrames ( );
__declspec(implementation_key(2312)) TGFrameworkSupport::SurfaceFinishSymbolsPtr _IBlockViewAuto::GetSurfaceFinishSymbols ( );
__declspec(implementation_key(2313)) TGFrameworkSupport::WeldSymbolsPtr _IBlockViewAuto::GetWeldSymbols ( );
__declspec(implementation_key(2314)) TGFrameworkSupport::CenterMarksPtr _IBlockViewAuto::GetCenterMarks ( );
__declspec(implementation_key(2315)) TGFrameworkSupport::CenterLinesPtr _IBlockViewAuto::GetCenterLines ( );
__declspec(implementation_key(2316)) TGFrameworkSupport::DatumTargetsPtr _IBlockViewAuto::GetDatumTargets ( );
__declspec(implementation_key(2317)) TGFrameworkSupport::PinSymbolsPtr _IBlockViewAuto::GetPinSymbols ( );
__declspec(implementation_key(2318)) TGFrameworkSupport::DatumPointsPtr _IBlockViewAuto::GetDatumPoints ( );
__declspec(implementation_key(2319)) TGFrameworkSupport::CornerAnnotationsPtr _IBlockViewAuto::GetCornerAnnotations ( );
__declspec(implementation_key(2320)) IDispatchPtr _IBlockViewAuto::GetAttributeSets ( );
__declspec(implementation_key(2321)) VARIANT_BOOL _IBlockViewAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(2322)) TGFrameworkSupport::BoltHoleCirclesPtr _IBlockViewAuto::GetBoltHoleCircles ( );
__declspec(implementation_key(2323)) TGFrameworkSupport::ConnectorsPtr _IBlockViewAuto::GetConnectors ( );
__declspec(implementation_key(2324)) HRESULT _IBlockViewAuto::SetOrigin ( double x, double y );
__declspec(implementation_key(2325)) HRESULT _IBlockViewAuto::GetOrigin ( double * x, double * y );
__declspec(implementation_key(2326)) HRESULT _IBlockViewAuto::ReplaceGraphics ( const _variant_t & DeleteSelectedGraphics );
__declspec(implementation_key(2327)) HRESULT _IBlockViewAuto::UpdatePreview ( );
__declspec(implementation_key(2328)) DrawingViewsPtr _IBlockViewAuto::GetDrawingViews ( );
__declspec(implementation_key(2329)) BlockOccurrencesPtr _IBlockViewAuto::GetBlockOccurrences ( );
__declspec(implementation_key(2330)) BlockLabelsPtr _IBlockViewAuto::GetBlockLabels ( );
__declspec(implementation_key(2331)) TGFrameworkSupport::Images2dPtr _IBlockViewAuto::GetImages2d ( );
__declspec(implementation_key(2332)) TGFramework::ApplicationPtr _IBlockLabelsAuto::GetApplication ( );
__declspec(implementation_key(2333)) IDispatchPtr _IBlockLabelsAuto::GetParent ( );
__declspec(implementation_key(2334)) long _IBlockLabelsAuto::GetCount ( );
__declspec(implementation_key(2335)) IUnknownPtr _IBlockLabelsAuto::Get_NewEnum ( );
__declspec(implementation_key(2336)) BlockLabelPtr _IBlockLabelsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(2337)) BlockLabelPtr _IBlockLabelsAuto::Add ( _bstr_t Name, _bstr_t value, _bstr_t Description, double XOrigin, double YOrigin, enum BlockLabelOriginLocationConstants OriginLoc, VARIANT_BOOL VisibleInOccurrence, VARIANT_BOOL Global, VARIANT_BOOL Prompt, VARIANT_BOOL PositionLocked, double dAngle );
__declspec(implementation_key(2338)) TGFramework::ApplicationPtr Blocks::GetApplication ( );
__declspec(implementation_key(2339)) IDispatchPtr Blocks::GetParent ( );
__declspec(implementation_key(2340)) long Blocks::GetCount ( );
__declspec(implementation_key(2341)) BlockPtr Blocks::Item ( const _variant_t & Index );
__declspec(implementation_key(2342)) BlockPtr Blocks::Add ( _bstr_t Name, double XOrigin, double YOrigin, const _variant_t & ScaleDimsAndAnnot, const _variant_t & DeleteSelectedGraphics );
__declspec(implementation_key(2343)) BlockPtr Blocks::CopyBlock ( struct Block * BlockToCopy );
__declspec(implementation_key(2344)) BlockPtr Blocks::AddBlockByFile ( _bstr_t FileName );
__declspec(implementation_key(2345)) BlockPtr Blocks::ReplaceBlock ( struct Block * BlockToCopy );
__declspec(implementation_key(2346)) TGFramework::ApplicationPtr _IBlocksAuto::GetApplication ( );
__declspec(implementation_key(2347)) IDispatchPtr _IBlocksAuto::GetParent ( );
__declspec(implementation_key(2348)) long _IBlocksAuto::GetCount ( );
__declspec(implementation_key(2349)) IUnknownPtr _IBlocksAuto::Get_NewEnum ( );
__declspec(implementation_key(2350)) BlockPtr _IBlocksAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(2351)) BlockPtr _IBlocksAuto::Add ( _bstr_t Name, double XOrigin, double YOrigin, const _variant_t & ScaleDimsAndAnnot, const _variant_t & DeleteSelectedGraphics );
__declspec(implementation_key(2352)) BlockPtr _IBlocksAuto::CopyBlock ( struct Block * BlockToCopy );
__declspec(implementation_key(2353)) BlockPtr _IBlocksAuto::AddBlockByFile ( _bstr_t FileName );
__declspec(implementation_key(2354)) BlockPtr _IBlocksAuto::ReplaceBlock ( struct Block * BlockToCopy );
__declspec(implementation_key(2355)) TGFramework::ApplicationPtr DraftFilePreferences::GetApplication ( );
__declspec(implementation_key(2356)) IDispatchPtr DraftFilePreferences::GetParent ( );
__declspec(implementation_key(2357)) VARIANT_BOOL DraftFilePreferences::GetDVShowHiddenEdgesInOrthographicViews ( );
__declspec(implementation_key(2358)) void DraftFilePreferences::PutDVShowHiddenEdgesInOrthographicViews ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2359)) VARIANT_BOOL DraftFilePreferences::GetDVShowHiddenEdgesInPictorialViews ( );
__declspec(implementation_key(2360)) void DraftFilePreferences::PutDVShowHiddenEdgesInPictorialViews ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2361)) VARIANT_BOOL DraftFilePreferences::GetDVShowTangentEdgesInOrthographicViews ( );
__declspec(implementation_key(2362)) void DraftFilePreferences::PutDVShowTangentEdgesInOrthographicViews ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2363)) VARIANT_BOOL DraftFilePreferences::GetDVShowTangentEdgesInPictorialViews ( );
__declspec(implementation_key(2364)) void DraftFilePreferences::PutDVShowTangentEdgesInPictorialViews ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2365)) VARIANT_BOOL DraftFilePreferences::GetDVShowHiddenOtherEdgesInOrthographicViews ( );
__declspec(implementation_key(2366)) void DraftFilePreferences::PutDVShowHiddenOtherEdgesInOrthographicViews ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2367)) VARIANT_BOOL DraftFilePreferences::GetDVShowHiddenOtherEdgesInPictorialViews ( );
__declspec(implementation_key(2368)) void DraftFilePreferences::PutDVShowHiddenOtherEdgesInPictorialViews ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2369)) VARIANT_BOOL DraftFilePreferences::GetDVShowHiddenEdgesInSectionViews ( );
__declspec(implementation_key(2370)) void DraftFilePreferences::PutDVShowHiddenEdgesInSectionViews ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2371)) VARIANT_BOOL DraftFilePreferences::GetDVShowHiddenTangentEdges ( );
__declspec(implementation_key(2372)) void DraftFilePreferences::PutDVShowHiddenTangentEdges ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2373)) VARIANT_BOOL DraftFilePreferences::GetDVShowHiddenOtherTangentEdges ( );
__declspec(implementation_key(2374)) void DraftFilePreferences::PutDVShowHiddenOtherTangentEdges ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2375)) VARIANT_BOOL DraftFilePreferences::GetDVShowThreadsInSectionOnlyViews ( );
__declspec(implementation_key(2376)) void DraftFilePreferences::PutDVShowThreadsInSectionOnlyViews ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2377)) VARIANT_BOOL DraftFilePreferences::GetDVHatchRibsInSectionViews ( );
__declspec(implementation_key(2378)) void DraftFilePreferences::PutDVHatchRibsInSectionViews ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2379)) VARIANT_BOOL DraftFilePreferences::GetDVShowCenterlines ( );
__declspec(implementation_key(2380)) void DraftFilePreferences::PutDVShowCenterlines ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2381)) VARIANT_BOOL DraftFilePreferences::GetDVShowFlowlines ( );
__declspec(implementation_key(2382)) void DraftFilePreferences::PutDVShowFlowlines ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2383)) VARIANT_BOOL DraftFilePreferences::GetDVShowDetailViewBorders ( );
__declspec(implementation_key(2384)) void DraftFilePreferences::PutDVShowDetailViewBorders ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2385)) VARIANT_BOOL DraftFilePreferences::GetDVRetrieveDimensionsOnViewCreation ( );
__declspec(implementation_key(2386)) void DraftFilePreferences::PutDVRetrieveDimensionsOnViewCreation ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2387)) VARIANT_BOOL DraftFilePreferences::GetDVShowTubeCenterlines ( );
__declspec(implementation_key(2388)) void DraftFilePreferences::PutDVShowTubeCenterlines ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2389)) VARIANT_BOOL DraftFilePreferences::GetDVShowFillStyleInSectionViews ( );
__declspec(implementation_key(2390)) void DraftFilePreferences::PutDVShowFillStyleInSectionViews ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2391)) VARIANT_BOOL DraftFilePreferences::GetDVDeriveFillStyleFromPart ( );
__declspec(implementation_key(2392)) void DraftFilePreferences::PutDVDeriveFillStyleFromPart ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2393)) VARIANT_BOOL DraftFilePreferences::GetDVCroppedEdgeProcessing ( );
__declspec(implementation_key(2394)) void DraftFilePreferences::PutDVCroppedEdgeProcessing ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2395)) VARIANT_BOOL DraftFilePreferences::GetDVConfigChangesMakeViewsOutOfDate ( );
__declspec(implementation_key(2396)) void DraftFilePreferences::PutDVConfigChangesMakeViewsOutOfDate ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2397)) VARIANT_BOOL DraftFilePreferences::GetDVDeriveReferenceFromAssembly ( );
__declspec(implementation_key(2398)) void DraftFilePreferences::PutDVDeriveReferenceFromAssembly ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2399)) VARIANT_BOOL DraftFilePreferences::GetDVShowEdgesOfCuttingPlaneVertices ( );
__declspec(implementation_key(2400)) void DraftFilePreferences::PutDVShowEdgesOfCuttingPlaneVertices ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2401)) VARIANT_BOOL DraftFilePreferences::GetDVIncludePMIDimensions ( );
__declspec(implementation_key(2402)) void DraftFilePreferences::PutDVIncludePMIDimensions ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2403)) VARIANT_BOOL DraftFilePreferences::GetDVIncludePMIAnnotations ( );
__declspec(implementation_key(2404)) void DraftFilePreferences::PutDVIncludePMIAnnotations ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2405)) VARIANT_BOOL DraftFilePreferences::GetDVShowBoundaryEdges ( );
__declspec(implementation_key(2406)) void DraftFilePreferences::PutDVShowBoundaryEdges ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2407)) VARIANT_BOOL DraftFilePreferences::GetDVDetailEnvelopeDisplayAsCircle ( );
__declspec(implementation_key(2408)) void DraftFilePreferences::PutDVDetailEnvelopeDisplayAsCircle ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2409)) VARIANT_BOOL DraftFilePreferences::GetDVShowDeformationFeatureProfiles ( );
__declspec(implementation_key(2410)) void DraftFilePreferences::PutDVShowDeformationFeatureProfiles ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2411)) VARIANT_BOOL DraftFilePreferences::GetDVShowDeformationFeatureOrigins ( );
__declspec(implementation_key(2412)) void DraftFilePreferences::PutDVShowDeformationFeatureOrigins ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2413)) VARIANT_BOOL DraftFilePreferences::GetDVDeriveBendDirectionFromView ( );
__declspec(implementation_key(2414)) void DraftFilePreferences::PutDVDeriveBendDirectionFromView ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2415)) enum DrawingViewProjectionAngleConstants DraftFilePreferences::GetDVProjectionAngle ( );
__declspec(implementation_key(2416)) void DraftFilePreferences::PutDVProjectionAngle ( enum DrawingViewProjectionAngleConstants _arg1 );
__declspec(implementation_key(2417)) enum DVThreadDisplayModeConstants DraftFilePreferences::GetDVThreadDisplayMode ( );
__declspec(implementation_key(2418)) void DraftFilePreferences::PutDVThreadDisplayMode ( enum DVThreadDisplayModeConstants _arg1 );
__declspec(implementation_key(2419)) VARIANT_BOOL DraftFilePreferences::GetViewerDataIncludeWorkingSheets ( );
__declspec(implementation_key(2420)) void DraftFilePreferences::PutViewerDataIncludeWorkingSheets ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2421)) VARIANT_BOOL DraftFilePreferences::GetViewerDataInclude2DModelSheet ( );
__declspec(implementation_key(2422)) void DraftFilePreferences::PutViewerDataInclude2DModelSheet ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2423)) VARIANT_BOOL DraftFilePreferences::GetViewerDataIncludeBackgroundSheets ( );
__declspec(implementation_key(2424)) void DraftFilePreferences::PutViewerDataIncludeBackgroundSheets ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2425)) VARIANT_BOOL DraftFilePreferences::GetDVReferenceComponentsByConfigurations ( );
__declspec(implementation_key(2426)) void DraftFilePreferences::PutDVReferenceComponentsByConfigurations ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2427)) VARIANT_BOOL DraftFilePreferences::GetDVShowFillStyleInSectionWeldBeads ( );
__declspec(implementation_key(2428)) void DraftFilePreferences::PutDVShowFillStyleInSectionWeldBeads ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2429)) VARIANT_BOOL DraftFilePreferences::GetDVSolidFillSectionWeldBeads ( );
__declspec(implementation_key(2430)) void DraftFilePreferences::PutDVSolidFillSectionWeldBeads ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2431)) VARIANT_BOOL DraftFilePreferences::GetDVEnableAlternatingHatchSpacing ( );
__declspec(implementation_key(2432)) void DraftFilePreferences::PutDVEnableAlternatingHatchSpacing ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2433)) VARIANT_BOOL DraftFilePreferences::GetDVEnableAlternatingHatchAngle ( );
__declspec(implementation_key(2434)) void DraftFilePreferences::PutDVEnableAlternatingHatchAngle ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2435)) VARIANT_BOOL DraftFilePreferences::GetDVShowHiddenEdgesInConnectorViews ( );
__declspec(implementation_key(2436)) void DraftFilePreferences::PutDVShowHiddenEdgesInConnectorViews ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2437)) VARIANT_BOOL DraftFilePreferences::GetDVEnableMultiCoreDrawingViewProcessing ( );
__declspec(implementation_key(2438)) void DraftFilePreferences::PutDVEnableMultiCoreDrawingViewProcessing ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2439)) int DraftFilePreferences::GetDVNailboardSetDisplayWhiteWiresAs ( );
__declspec(implementation_key(2440)) void DraftFilePreferences::PutDVNailboardSetDisplayWhiteWiresAs ( int _arg1 );
__declspec(implementation_key(2441)) _bstr_t DraftFilePreferences::GetDVStyleNameFromTable ( enum DrawingViewStyleMappingElementType Element );
__declspec(implementation_key(2442)) void DraftFilePreferences::PutDVStyleNameFromTable ( enum DrawingViewStyleMappingElementType Element, _bstr_t _arg2 );
__declspec(implementation_key(2443)) VARIANT_BOOL DraftFilePreferences::GetNumberSheetGroupsSeparately ( );
__declspec(implementation_key(2444)) void DraftFilePreferences::PutNumberSheetGroupsSeparately ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2445)) enum GridDisplayOptionsConstants DraftFilePreferences::GetGRIDDisplayGridMode ( );
__declspec(implementation_key(2446)) void DraftFilePreferences::PutGRIDDisplayGridMode ( enum GridDisplayOptionsConstants _arg1 );
__declspec(implementation_key(2447)) enum GridSnapOptionsConstants DraftFilePreferences::GetGRIDSnapToGridMode ( );
__declspec(implementation_key(2448)) void DraftFilePreferences::PutGRIDSnapToGridMode ( enum GridSnapOptionsConstants _arg1 );
__declspec(implementation_key(2449)) double DraftFilePreferences::GetGRIDAngle ( );
__declspec(implementation_key(2450)) void DraftFilePreferences::PutGRIDAngle ( double _arg1 );
__declspec(implementation_key(2451)) double DraftFilePreferences::GetGRIDMajorLine ( );
__declspec(implementation_key(2452)) void DraftFilePreferences::PutGRIDMajorLine ( double _arg1 );
__declspec(implementation_key(2453)) int DraftFilePreferences::GetGRIDMinorSpaces ( );
__declspec(implementation_key(2454)) void DraftFilePreferences::PutGRIDMinorSpaces ( int _arg1 );
__declspec(implementation_key(2455)) _bstr_t DraftFilePreferences::GetDVEdgeStyleName ( enum DrawingViewEdgeStyleMappingEdgeType Element );
__declspec(implementation_key(2456)) void DraftFilePreferences::PutDVEdgeStyleName ( enum DrawingViewEdgeStyleMappingEdgeType Element, _bstr_t _arg2 );
__declspec(implementation_key(2457)) _bstr_t DraftFilePreferences::GetCenterOfMassBlockName ( );
__declspec(implementation_key(2458)) void DraftFilePreferences::PutCenterOfMassBlockName ( _bstr_t _arg1 );
__declspec(implementation_key(2459)) _bstr_t DraftFilePreferences::GetCoordinateSystemBlockName ( );
__declspec(implementation_key(2460)) void DraftFilePreferences::PutCoordinateSystemBlockName ( _bstr_t _arg1 );
__declspec(implementation_key(2461)) _bstr_t DraftFilePreferences::GetBendUpString ( );
__declspec(implementation_key(2462)) void DraftFilePreferences::PutBendUpString ( _bstr_t _arg1 );
__declspec(implementation_key(2463)) _bstr_t DraftFilePreferences::GetBendDownString ( );
__declspec(implementation_key(2464)) void DraftFilePreferences::PutBendDownString ( _bstr_t _arg1 );
__declspec(implementation_key(2465)) VARIANT_BOOL DraftFilePreferences::GetMaintainAssociativityForRetrievedDimensions ( );
__declspec(implementation_key(2466)) void DraftFilePreferences::PutMaintainAssociativityForRetrievedDimensions ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2467)) TGFramework::ApplicationPtr _IDraftFilePreferencesAuto::GetApplication ( );
__declspec(implementation_key(2468)) IDispatchPtr _IDraftFilePreferencesAuto::GetParent ( );
__declspec(implementation_key(2469)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVShowHiddenEdgesInOrthographicViews ( );
__declspec(implementation_key(2470)) void _IDraftFilePreferencesAuto::PutDVShowHiddenEdgesInOrthographicViews ( VARIANT_BOOL value );
__declspec(implementation_key(2471)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVShowHiddenEdgesInPictorialViews ( );
__declspec(implementation_key(2472)) void _IDraftFilePreferencesAuto::PutDVShowHiddenEdgesInPictorialViews ( VARIANT_BOOL value );
__declspec(implementation_key(2473)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVShowTangentEdgesInOrthographicViews ( );
__declspec(implementation_key(2474)) void _IDraftFilePreferencesAuto::PutDVShowTangentEdgesInOrthographicViews ( VARIANT_BOOL value );
__declspec(implementation_key(2475)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVShowTangentEdgesInPictorialViews ( );
__declspec(implementation_key(2476)) void _IDraftFilePreferencesAuto::PutDVShowTangentEdgesInPictorialViews ( VARIANT_BOOL value );
__declspec(implementation_key(2477)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVShowHiddenOtherEdgesInOrthographicViews ( );
__declspec(implementation_key(2478)) void _IDraftFilePreferencesAuto::PutDVShowHiddenOtherEdgesInOrthographicViews ( VARIANT_BOOL value );
__declspec(implementation_key(2479)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVShowHiddenOtherEdgesInPictorialViews ( );
__declspec(implementation_key(2480)) void _IDraftFilePreferencesAuto::PutDVShowHiddenOtherEdgesInPictorialViews ( VARIANT_BOOL value );
__declspec(implementation_key(2481)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVShowHiddenEdgesInSectionViews ( );
__declspec(implementation_key(2482)) void _IDraftFilePreferencesAuto::PutDVShowHiddenEdgesInSectionViews ( VARIANT_BOOL value );
__declspec(implementation_key(2483)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVShowHiddenTangentEdges ( );
__declspec(implementation_key(2484)) void _IDraftFilePreferencesAuto::PutDVShowHiddenTangentEdges ( VARIANT_BOOL value );
__declspec(implementation_key(2485)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVShowHiddenOtherTangentEdges ( );
__declspec(implementation_key(2486)) void _IDraftFilePreferencesAuto::PutDVShowHiddenOtherTangentEdges ( VARIANT_BOOL value );
__declspec(implementation_key(2487)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVShowThreadsInSectionOnlyViews ( );
__declspec(implementation_key(2488)) void _IDraftFilePreferencesAuto::PutDVShowThreadsInSectionOnlyViews ( VARIANT_BOOL value );
__declspec(implementation_key(2489)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVHatchRibsInSectionViews ( );
__declspec(implementation_key(2490)) void _IDraftFilePreferencesAuto::PutDVHatchRibsInSectionViews ( VARIANT_BOOL value );
__declspec(implementation_key(2491)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVShowCenterlines ( );
__declspec(implementation_key(2492)) void _IDraftFilePreferencesAuto::PutDVShowCenterlines ( VARIANT_BOOL value );
__declspec(implementation_key(2493)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVShowFlowlines ( );
__declspec(implementation_key(2494)) void _IDraftFilePreferencesAuto::PutDVShowFlowlines ( VARIANT_BOOL value );
__declspec(implementation_key(2495)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVShowDetailViewBorders ( );
__declspec(implementation_key(2496)) void _IDraftFilePreferencesAuto::PutDVShowDetailViewBorders ( VARIANT_BOOL value );
__declspec(implementation_key(2497)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVRetrieveDimensionsOnViewCreation ( );
__declspec(implementation_key(2498)) void _IDraftFilePreferencesAuto::PutDVRetrieveDimensionsOnViewCreation ( VARIANT_BOOL value );
__declspec(implementation_key(2499)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVShowTubeCenterlines ( );
__declspec(implementation_key(2500)) void _IDraftFilePreferencesAuto::PutDVShowTubeCenterlines ( VARIANT_BOOL value );
__declspec(implementation_key(2501)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVShowFillStyleInSectionViews ( );
__declspec(implementation_key(2502)) void _IDraftFilePreferencesAuto::PutDVShowFillStyleInSectionViews ( VARIANT_BOOL value );
__declspec(implementation_key(2503)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVDeriveFillStyleFromPart ( );
__declspec(implementation_key(2504)) void _IDraftFilePreferencesAuto::PutDVDeriveFillStyleFromPart ( VARIANT_BOOL value );
__declspec(implementation_key(2505)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVCroppedEdgeProcessing ( );
__declspec(implementation_key(2506)) void _IDraftFilePreferencesAuto::PutDVCroppedEdgeProcessing ( VARIANT_BOOL value );
__declspec(implementation_key(2507)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVConfigChangesMakeViewsOutOfDate ( );
__declspec(implementation_key(2508)) void _IDraftFilePreferencesAuto::PutDVConfigChangesMakeViewsOutOfDate ( VARIANT_BOOL value );
__declspec(implementation_key(2509)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVDeriveReferenceFromAssembly ( );
__declspec(implementation_key(2510)) void _IDraftFilePreferencesAuto::PutDVDeriveReferenceFromAssembly ( VARIANT_BOOL value );
__declspec(implementation_key(2511)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVShowEdgesOfCuttingPlaneVertices ( );
__declspec(implementation_key(2512)) void _IDraftFilePreferencesAuto::PutDVShowEdgesOfCuttingPlaneVertices ( VARIANT_BOOL value );
__declspec(implementation_key(2513)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVIncludePMIDimensions ( );
__declspec(implementation_key(2514)) void _IDraftFilePreferencesAuto::PutDVIncludePMIDimensions ( VARIANT_BOOL value );
__declspec(implementation_key(2515)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVIncludePMIAnnotations ( );
__declspec(implementation_key(2516)) void _IDraftFilePreferencesAuto::PutDVIncludePMIAnnotations ( VARIANT_BOOL value );
__declspec(implementation_key(2517)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVShowBoundaryEdges ( );
__declspec(implementation_key(2518)) void _IDraftFilePreferencesAuto::PutDVShowBoundaryEdges ( VARIANT_BOOL value );
__declspec(implementation_key(2519)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVDetailEnvelopeDisplayAsCircle ( );
__declspec(implementation_key(2520)) void _IDraftFilePreferencesAuto::PutDVDetailEnvelopeDisplayAsCircle ( VARIANT_BOOL value );
__declspec(implementation_key(2521)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVShowDeformationFeatureProfiles ( );
__declspec(implementation_key(2522)) void _IDraftFilePreferencesAuto::PutDVShowDeformationFeatureProfiles ( VARIANT_BOOL value );
__declspec(implementation_key(2523)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVShowDeformationFeatureOrigins ( );
__declspec(implementation_key(2524)) void _IDraftFilePreferencesAuto::PutDVShowDeformationFeatureOrigins ( VARIANT_BOOL value );
__declspec(implementation_key(2525)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVDeriveBendDirectionFromView ( );
__declspec(implementation_key(2526)) void _IDraftFilePreferencesAuto::PutDVDeriveBendDirectionFromView ( VARIANT_BOOL value );
__declspec(implementation_key(2527)) enum DrawingViewProjectionAngleConstants _IDraftFilePreferencesAuto::GetDVProjectionAngle ( );
__declspec(implementation_key(2528)) void _IDraftFilePreferencesAuto::PutDVProjectionAngle ( enum DrawingViewProjectionAngleConstants value );
__declspec(implementation_key(2529)) enum DVThreadDisplayModeConstants _IDraftFilePreferencesAuto::GetDVThreadDisplayMode ( );
__declspec(implementation_key(2530)) void _IDraftFilePreferencesAuto::PutDVThreadDisplayMode ( enum DVThreadDisplayModeConstants value );
__declspec(implementation_key(2531)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetViewerDataIncludeWorkingSheets ( );
__declspec(implementation_key(2532)) void _IDraftFilePreferencesAuto::PutViewerDataIncludeWorkingSheets ( VARIANT_BOOL value );
__declspec(implementation_key(2533)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetViewerDataInclude2DModelSheet ( );
__declspec(implementation_key(2534)) void _IDraftFilePreferencesAuto::PutViewerDataInclude2DModelSheet ( VARIANT_BOOL value );
__declspec(implementation_key(2535)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetViewerDataIncludeBackgroundSheets ( );
__declspec(implementation_key(2536)) void _IDraftFilePreferencesAuto::PutViewerDataIncludeBackgroundSheets ( VARIANT_BOOL value );
__declspec(implementation_key(2537)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVReferenceComponentsByConfigurations ( );
__declspec(implementation_key(2538)) void _IDraftFilePreferencesAuto::PutDVReferenceComponentsByConfigurations ( VARIANT_BOOL value );
__declspec(implementation_key(2539)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVShowFillStyleInSectionWeldBeads ( );
__declspec(implementation_key(2540)) void _IDraftFilePreferencesAuto::PutDVShowFillStyleInSectionWeldBeads ( VARIANT_BOOL value );
__declspec(implementation_key(2541)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVSolidFillSectionWeldBeads ( );
__declspec(implementation_key(2542)) void _IDraftFilePreferencesAuto::PutDVSolidFillSectionWeldBeads ( VARIANT_BOOL value );
__declspec(implementation_key(2543)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVEnableAlternatingHatchSpacing ( );
__declspec(implementation_key(2544)) void _IDraftFilePreferencesAuto::PutDVEnableAlternatingHatchSpacing ( VARIANT_BOOL value );
__declspec(implementation_key(2545)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVEnableAlternatingHatchAngle ( );
__declspec(implementation_key(2546)) void _IDraftFilePreferencesAuto::PutDVEnableAlternatingHatchAngle ( VARIANT_BOOL value );
__declspec(implementation_key(2547)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVShowHiddenEdgesInConnectorViews ( );
__declspec(implementation_key(2548)) void _IDraftFilePreferencesAuto::PutDVShowHiddenEdgesInConnectorViews ( VARIANT_BOOL value );
__declspec(implementation_key(2549)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetDVEnableMultiCoreDrawingViewProcessing ( );
__declspec(implementation_key(2550)) void _IDraftFilePreferencesAuto::PutDVEnableMultiCoreDrawingViewProcessing ( VARIANT_BOOL value );
__declspec(implementation_key(2551)) int _IDraftFilePreferencesAuto::GetDVNailboardSetDisplayWhiteWiresAs ( );
__declspec(implementation_key(2552)) void _IDraftFilePreferencesAuto::PutDVNailboardSetDisplayWhiteWiresAs ( int value );
__declspec(implementation_key(2553)) _bstr_t _IDraftFilePreferencesAuto::GetDVStyleNameFromTable ( enum DrawingViewStyleMappingElementType Element );
__declspec(implementation_key(2554)) void _IDraftFilePreferencesAuto::PutDVStyleNameFromTable ( enum DrawingViewStyleMappingElementType Element, _bstr_t StyleName );
__declspec(implementation_key(2555)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetNumberSheetGroupsSeparately ( );
__declspec(implementation_key(2556)) void _IDraftFilePreferencesAuto::PutNumberSheetGroupsSeparately ( VARIANT_BOOL value );
__declspec(implementation_key(2557)) enum GridDisplayOptionsConstants _IDraftFilePreferencesAuto::GetGRIDDisplayGridMode ( );
__declspec(implementation_key(2558)) void _IDraftFilePreferencesAuto::PutGRIDDisplayGridMode ( enum GridDisplayOptionsConstants value );
__declspec(implementation_key(2559)) enum GridSnapOptionsConstants _IDraftFilePreferencesAuto::GetGRIDSnapToGridMode ( );
__declspec(implementation_key(2560)) void _IDraftFilePreferencesAuto::PutGRIDSnapToGridMode ( enum GridSnapOptionsConstants value );
__declspec(implementation_key(2561)) double _IDraftFilePreferencesAuto::GetGRIDAngle ( );
__declspec(implementation_key(2562)) void _IDraftFilePreferencesAuto::PutGRIDAngle ( double value );
__declspec(implementation_key(2563)) double _IDraftFilePreferencesAuto::GetGRIDMajorLine ( );
__declspec(implementation_key(2564)) void _IDraftFilePreferencesAuto::PutGRIDMajorLine ( double value );
__declspec(implementation_key(2565)) int _IDraftFilePreferencesAuto::GetGRIDMinorSpaces ( );
__declspec(implementation_key(2566)) void _IDraftFilePreferencesAuto::PutGRIDMinorSpaces ( int value );
__declspec(implementation_key(2567)) _bstr_t _IDraftFilePreferencesAuto::GetDVEdgeStyleName ( enum DrawingViewEdgeStyleMappingEdgeType Element );
__declspec(implementation_key(2568)) void _IDraftFilePreferencesAuto::PutDVEdgeStyleName ( enum DrawingViewEdgeStyleMappingEdgeType Element, _bstr_t StyleName );
__declspec(implementation_key(2569)) _bstr_t _IDraftFilePreferencesAuto::GetCenterOfMassBlockName ( );
__declspec(implementation_key(2570)) void _IDraftFilePreferencesAuto::PutCenterOfMassBlockName ( _bstr_t value );
__declspec(implementation_key(2571)) _bstr_t _IDraftFilePreferencesAuto::GetCoordinateSystemBlockName ( );
__declspec(implementation_key(2572)) void _IDraftFilePreferencesAuto::PutCoordinateSystemBlockName ( _bstr_t value );
__declspec(implementation_key(2573)) _bstr_t _IDraftFilePreferencesAuto::GetBendUpString ( );
__declspec(implementation_key(2574)) void _IDraftFilePreferencesAuto::PutBendUpString ( _bstr_t value );
__declspec(implementation_key(2575)) _bstr_t _IDraftFilePreferencesAuto::GetBendDownString ( );
__declspec(implementation_key(2576)) void _IDraftFilePreferencesAuto::PutBendDownString ( _bstr_t value );
__declspec(implementation_key(2577)) VARIANT_BOOL _IDraftFilePreferencesAuto::GetMaintainAssociativityForRetrievedDimensions ( );
__declspec(implementation_key(2578)) void _IDraftFilePreferencesAuto::PutMaintainAssociativityForRetrievedDimensions ( VARIANT_BOOL value );
__declspec(implementation_key(2579)) TGFramework::ApplicationPtr SheetGroups::GetApplication ( );
__declspec(implementation_key(2580)) IDispatchPtr SheetGroups::GetParent ( );
__declspec(implementation_key(2581)) long SheetGroups::GetCount ( );
__declspec(implementation_key(2582)) SheetGroupPtr SheetGroups::Item ( const _variant_t & Index );
__declspec(implementation_key(2583)) TGFramework::ApplicationPtr SheetGroup::GetApplication ( );
__declspec(implementation_key(2584)) IDispatchPtr SheetGroup::GetDocument ( );
__declspec(implementation_key(2585)) _bstr_t SheetGroup::GetKey ( );
__declspec(implementation_key(2586)) IDispatchPtr SheetGroup::GetParent ( );
__declspec(implementation_key(2587)) HRESULT SheetGroup::Delete ( );
__declspec(implementation_key(2588)) SheetGroupSheetsPtr SheetGroup::GetSheets ( );
__declspec(implementation_key(2589)) TGFramework::ApplicationPtr _ISheetGroupsAuto::GetApplication ( );
__declspec(implementation_key(2590)) IDispatchPtr _ISheetGroupsAuto::GetParent ( );
__declspec(implementation_key(2591)) long _ISheetGroupsAuto::GetCount ( );
__declspec(implementation_key(2592)) SheetGroupPtr _ISheetGroupsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(2593)) IUnknownPtr _ISheetGroupsAuto::Get_NewEnum ( );
__declspec(implementation_key(2594)) TGFramework::ApplicationPtr SheetGroupSheets::GetApplication ( );
__declspec(implementation_key(2595)) IDispatchPtr SheetGroupSheets::GetParent ( );
__declspec(implementation_key(2596)) long SheetGroupSheets::GetCount ( );
__declspec(implementation_key(2597)) SheetPtr SheetGroupSheets::Item ( const _variant_t & Index );
__declspec(implementation_key(2598)) TGFramework::ApplicationPtr _ISheetGroupAuto::GetApplication ( );
__declspec(implementation_key(2599)) IDispatchPtr _ISheetGroupAuto::GetDocument ( );
__declspec(implementation_key(2600)) _bstr_t _ISheetGroupAuto::GetKey ( );
__declspec(implementation_key(2601)) IDispatchPtr _ISheetGroupAuto::GetParent ( );
__declspec(implementation_key(2602)) HRESULT _ISheetGroupAuto::Delete ( );
__declspec(implementation_key(2603)) SheetGroupSheetsPtr _ISheetGroupAuto::GetSheets ( );
__declspec(implementation_key(2604)) TGFramework::ApplicationPtr Sheet::GetApplication ( );
__declspec(implementation_key(2605)) IDispatchPtr Sheet::GetDocument ( );
__declspec(implementation_key(2606)) TGFrameworkSupport::DrawingObjectsPtr Sheet::GetDrawingObjects ( );
__declspec(implementation_key(2607)) long Sheet::GetIndex ( );
__declspec(implementation_key(2608)) _bstr_t Sheet::GetKey ( );
__declspec(implementation_key(2609)) void Sheet::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(2610)) _bstr_t Sheet::GetName ( );
__declspec(implementation_key(2611)) IDispatchPtr Sheet::GetParent ( );
__declspec(implementation_key(2612)) SectionPtr Sheet::GetSection ( );
__declspec(implementation_key(2613)) enum SheetSectionTypeConstants Sheet::GetSectionType ( );
__declspec(implementation_key(2614)) SheetSetupPtr Sheet::GetSheetSetup ( );
__declspec(implementation_key(2615)) long Sheet::GetType ( );
__declspec(implementation_key(2616)) void Sheet::PutVisible ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2617)) VARIANT_BOOL Sheet::GetVisible ( );
__declspec(implementation_key(2618)) SheetPtr Sheet::GetBackground ( );
__declspec(implementation_key(2619)) void Sheet::PutBackground ( struct Sheet * _arg1 );
__declspec(implementation_key(2620)) void Sheet::PutBackgroundVisible ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2621)) VARIANT_BOOL Sheet::GetBackgroundVisible ( );
__declspec(implementation_key(2622)) HRESULT Sheet::Activate ( );
__declspec(implementation_key(2623)) HRESULT Sheet::Delete ( );
__declspec(implementation_key(2624)) TGFrameworkSupport::Lines2dPtr Sheet::GetLines2d ( );
__declspec(implementation_key(2625)) TGFrameworkSupport::Circles2dPtr Sheet::GetCircles2d ( );
__declspec(implementation_key(2626)) TGFrameworkSupport::Arcs2dPtr Sheet::GetArcs2d ( );
__declspec(implementation_key(2627)) TGFrameworkSupport::Ellipses2dPtr Sheet::GetEllipses2d ( );
__declspec(implementation_key(2628)) TGFrameworkSupport::BSplineCurves2dPtr Sheet::GetBsplineCurves2d ( );
__declspec(implementation_key(2629)) TGFrameworkSupport::Points2dPtr Sheet::GetPoints2d ( );
__declspec(implementation_key(2630)) TGFrameworkSupport::EllipticalArcs2dPtr Sheet::GetEllipticalArcs2d ( );
__declspec(implementation_key(2631)) TGFrameworkSupport::Curves2dPtr Sheet::GetCurves2d ( );
__declspec(implementation_key(2632)) TGFrameworkSupport::LineStrings2dPtr Sheet::GetLineStrings2d ( );
__declspec(implementation_key(2633)) TGFrameworkSupport::ComplexStrings2dPtr Sheet::GetComplexStrings2d ( );
__declspec(implementation_key(2634)) TGFrameworkSupport::Boundaries2dPtr Sheet::GetBoundaries2d ( );
__declspec(implementation_key(2635)) TGFrameworkSupport::Images2dPtr Sheet::GetImages2d ( );
__declspec(implementation_key(2636)) IDispatchPtr Sheet::GetDimensions ( );
__declspec(implementation_key(2637)) IDispatchPtr Sheet::GetLeaders ( );
__declspec(implementation_key(2638)) IDispatchPtr Sheet::GetBalloons ( );
__declspec(implementation_key(2639)) IDispatchPtr Sheet::GetTextBoxes ( );
__declspec(implementation_key(2640)) TGFrameworkSupport::TextProfilesPtr Sheet::GetTextProfiles ( );
__declspec(implementation_key(2641)) TGFrameworkSupport::Relations2dPtr Sheet::GetRelations2d ( );
__declspec(implementation_key(2642)) IDispatchPtr Sheet::GetSymbols ( );
__declspec(implementation_key(2643)) IDispatchPtr Sheet::GetSmartFrames2d ( );
__declspec(implementation_key(2644)) TGFramework::LayersPtr Sheet::GetLayers ( );
__declspec(implementation_key(2645)) IDispatchPtr Sheet::GetVFS ( IDispatch * Path );
__declspec(implementation_key(2646)) HRESULT Sheet::CreateVFS ( IDispatch * Path, IDispatch * * VFS );
__declspec(implementation_key(2647)) HRESULT Sheet::DeleteVFS ( IDispatch * VFS );
__declspec(implementation_key(2648)) DrawingViewsPtr Sheet::GetDrawingViews ( );
__declspec(implementation_key(2649)) IDispatchPtr Sheet::GetCuttingPlanes ( );
__declspec(implementation_key(2650)) IDispatchPtr Sheet::GetDatumFrames ( );
__declspec(implementation_key(2651)) IDispatchPtr Sheet::GetFeatureControlFrames ( );
__declspec(implementation_key(2652)) IDispatchPtr Sheet::GetSurfaceFinishSymbols ( );
__declspec(implementation_key(2653)) IDispatchPtr Sheet::GetWeldSymbols ( );
__declspec(implementation_key(2654)) IDispatchPtr Sheet::GetCenterMarks ( );
__declspec(implementation_key(2655)) IDispatchPtr Sheet::GetCenterLines ( );
__declspec(implementation_key(2656)) IDispatchPtr Sheet::GetDatumTargets ( );
__declspec(implementation_key(2657)) IDispatchPtr Sheet::GetPinSymbols ( );
__declspec(implementation_key(2658)) IDispatchPtr Sheet::GetDatumPoints ( );
__declspec(implementation_key(2659)) IDispatchPtr Sheet::GetCornerAnnotations ( );
__declspec(implementation_key(2660)) IDispatchPtr Sheet::GetGroups ( );
__declspec(implementation_key(2661)) IDispatchPtr Sheet::GetAttributeSets ( );
__declspec(implementation_key(2662)) VARIANT_BOOL Sheet::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(2663)) HRESULT Sheet::CopyEMFToClipboard ( );
__declspec(implementation_key(2664)) HRESULT Sheet::GetAreaProperties ( SAFEARRAY * * AreaPointXArray, SAFEARRAY * * AreaPointYArray, long NumPoints, const _variant_t & LineStyle, const _variant_t & TextStyle, const _variant_t & DisplayResults, const _variant_t & CopyToClipboard, VARIANT * Area, VARIANT * Center, VARIANT * GlobalMomentsOfInertia, VARIANT * PrincipalAngle, VARIANT * PrincipalXOrientation, VARIANT * PrincipalYOrientation, VARIANT * PrincipalMomentsOfInertia );
__declspec(implementation_key(2665)) HRESULT Sheet::ConvertToCurve ( long NumberOfElements, SAFEARRAY * * ElementArray, VARIANT * NumConvertedElements, VARIANT * ConvertedElements );
__declspec(implementation_key(2666)) IDispatchPtr Sheet::GetBoltHoleCircles ( );
__declspec(implementation_key(2667)) IDispatchPtr Sheet::GetConnectors ( );
__declspec(implementation_key(2668)) void Sheet::PutDefaultTextScale ( double _arg1 );
__declspec(implementation_key(2669)) double Sheet::GetDefaultTextScale ( );
__declspec(implementation_key(2670)) BlockOccurrencesPtr Sheet::GetBlockOccurrences ( );
__declspec(implementation_key(2671)) BlockLabelsPtr Sheet::GetBlockLabels ( );
__declspec(implementation_key(2672)) TGFrameworkSupport::AreaPropertiesCollectionPtr Sheet::GetAreaPropertiesCollection ( );
__declspec(implementation_key(2673)) IDispatchPtr Sheet::GetGostWeldSymbols ( );
__declspec(implementation_key(2674)) SectionBoundaries2dPtr Sheet::GetSectionBoundaries2d ( );
__declspec(implementation_key(2675)) void Sheet::PutNumber ( long _arg1 );
__declspec(implementation_key(2676)) long Sheet::GetNumber ( );
__declspec(implementation_key(2677)) TGFramework::SelectSetPtr Sheet::SmartSelect ( IDispatch * pSourceObject, VARIANT_BOOL vbColor, VARIANT_BOOL vbType, VARIANT_BOOL vbLayer, VARIANT_BOOL vbLineType, VARIANT_BOOL vbLineWidth );
__declspec(implementation_key(2678)) HRESULT Sheet::CleanGeometry2d ( long nElements, SAFEARRAY * * pElementArray, enum CleanProfileOptions options, VARIANT_BOOL bCleanPoints, VARIANT_BOOL bCleanBSplines, VARIANT_BOOL bCleanIdentical, VARIANT_BOOL bCleanSmall, const _variant_t & vLayer, const _variant_t & vSmallTolerance );
__declspec(implementation_key(2679)) IDispatchPtr Sheet::GetSheetGroup ( );
__declspec(implementation_key(2680)) HRESULT Sheet::ChainLocate ( double x, double y );
__declspec(implementation_key(2681)) HRESULT Sheet::Offset2d ( double offsetSideX, double offsetSideY, double offsetDistance );
__declspec(implementation_key(2682)) HRESULT Sheet::FenceLocate ( double dLeft, double dTop, double dRight, double dBottom );
__declspec(implementation_key(2683)) IDispatchPtr Sheet::GetAnnotAlignmentShapes ( );
__declspec(implementation_key(2684)) HRESULT Sheet::ArrangeDimensionsInSelectSet ( double iStackPitchMultiplier, VARIANT_BOOL bAssociative );
__declspec(implementation_key(2685)) HRESULT Sheet::ScaleSelectSet ( double dScale, double AboutPt_x, double AboutPt_y );
__declspec(implementation_key(2686)) HRESULT Sheet::MoveSelectSet ( double FromPt_x, double FromPt_y, double ToPt_x, double ToPt_y );
__declspec(implementation_key(2687)) HRESULT Sheet::RotateSelectSet ( double dAngle, double AboutPt_x, double AboutPt_y );
__declspec(implementation_key(2688)) HRESULT Sheet::PrintArea ( double LowerLeftX, double LowerLeftY, double UpperRightX, double UpperRightY, const _variant_t & Printer, const _variant_t & NumCopies, const _variant_t & Orientation, const _variant_t & PaperSize, const _variant_t & Scale, const _variant_t & PrintToFile, const _variant_t & OutputFileName, const _variant_t & ColorAsBlack, const _variant_t & Collate, const _variant_t & ScaleLineWidths, const _variant_t & ScaleLineTypes, const _variant_t & UsePrinterClipping );
__declspec(implementation_key(2689)) HRESULT Sheet::PrintSheet ( const _variant_t & Printer, const _variant_t & NumCopies, const _variant_t & Orientation, const _variant_t & PaperSize, const _variant_t & Scale, const _variant_t & PrintToFile, const _variant_t & OutputFileName, const _variant_t & ColorAsBlack, const _variant_t & Collate, const _variant_t & ScaleLineWidths, const _variant_t & ScaleLineTypes, const _variant_t & UsePrinterClipping );
__declspec(implementation_key(2690)) IDispatchPtr Sheet::GetTechnicalRequirements ( );
__declspec(implementation_key(2691)) HRESULT Sheet::ReplaceBackground ( _bstr_t DraftFileName, _bstr_t BackgroundSheetName );
__declspec(implementation_key(2692)) HRESULT Sheet::LineupText ( IDispatch * Source, SAFEARRAY * * Target, enum LineupTextAlignOptionConstants AlignOption, long OffsetGap );
__declspec(implementation_key(2693)) HRESULT Sheet::LineupTextEx ( IDispatch * Source, SAFEARRAY * * Target, enum LineupTextAlignOptionConstants AlignOption, double OffsetGap );
__declspec(implementation_key(2694)) TGFrameworkSupport::Conics2dPtr Sheet::GetConics2d ( );
__declspec(implementation_key(2695)) HRESULT Sheet::ReplaceBackgroundEx ( _bstr_t DraftFileName, _bstr_t BackgroundSheetName, VARIANT_BOOL bReplaceBlocksOfSameName );
__declspec(implementation_key(2696)) TGFramework::ApplicationPtr _ISheetGroupSheetsAuto::GetApplication ( );
__declspec(implementation_key(2697)) IDispatchPtr _ISheetGroupSheetsAuto::GetParent ( );
__declspec(implementation_key(2698)) long _ISheetGroupSheetsAuto::GetCount ( );
__declspec(implementation_key(2699)) SheetPtr _ISheetGroupSheetsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(2700)) IUnknownPtr _ISheetGroupSheetsAuto::Get_NewEnum ( );
__declspec(implementation_key(2701)) TGFramework::ApplicationPtr Section::GetApplication ( );
__declspec(implementation_key(2702)) long Section::GetIndex ( );
__declspec(implementation_key(2703)) _bstr_t Section::GetName ( );
__declspec(implementation_key(2704)) void Section::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(2705)) IDispatchPtr Section::GetParent ( );
__declspec(implementation_key(2706)) SectionSheetsPtr Section::GetSheets ( );
__declspec(implementation_key(2707)) HRESULT Section::Activate ( );
__declspec(implementation_key(2708)) HRESULT Section::Move ( const _variant_t & InsertBefore, const _variant_t & InsertAfter );
__declspec(implementation_key(2709)) enum SheetSectionTypeConstants Section::GetType ( );
__declspec(implementation_key(2710)) HRESULT Section::Deactivate ( );
__declspec(implementation_key(2711)) TGFramework::ApplicationPtr SectionSheets::GetApplication ( );
__declspec(implementation_key(2712)) IDispatchPtr SectionSheets::GetParent ( );
__declspec(implementation_key(2713)) long SectionSheets::GetCount ( );
__declspec(implementation_key(2714)) SheetPtr SectionSheets::Item ( const _variant_t & Index );
__declspec(implementation_key(2715)) TGFramework::ApplicationPtr _ISectionSheetsAuto::GetApplication ( );
__declspec(implementation_key(2716)) IDispatchPtr _ISectionSheetsAuto::GetParent ( );
__declspec(implementation_key(2717)) long _ISectionSheetsAuto::GetCount ( );
__declspec(implementation_key(2718)) SheetPtr _ISectionSheetsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(2719)) IUnknownPtr _ISectionSheetsAuto::Get_NewEnum ( );
__declspec(implementation_key(2720)) TGFramework::ApplicationPtr _ISectionAuto::GetApplication ( );
__declspec(implementation_key(2721)) long _ISectionAuto::GetIndex ( );
__declspec(implementation_key(2722)) _bstr_t _ISectionAuto::GetName ( );
__declspec(implementation_key(2723)) void _ISectionAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(2724)) IDispatchPtr _ISectionAuto::GetParent ( );
__declspec(implementation_key(2725)) SectionSheetsPtr _ISectionAuto::GetSheets ( );
__declspec(implementation_key(2726)) HRESULT _ISectionAuto::Activate ( );
__declspec(implementation_key(2727)) HRESULT _ISectionAuto::Move ( const _variant_t & InsertBefore, const _variant_t & InsertAfter );
__declspec(implementation_key(2728)) enum SheetSectionTypeConstants _ISectionAuto::GetType ( );
__declspec(implementation_key(2729)) HRESULT _ISectionAuto::Deactivate ( );
__declspec(implementation_key(2730)) TGFramework::ApplicationPtr SheetSetup::GetApplication ( );
__declspec(implementation_key(2731)) SheetPtr SheetSetup::GetParent ( );
__declspec(implementation_key(2732)) void SheetSetup::PutBottomMargin ( double _arg1 );
__declspec(implementation_key(2733)) double SheetSetup::GetBottomMargin ( );
__declspec(implementation_key(2734)) void SheetSetup::PutFirstPageNumber ( long _arg1 );
__declspec(implementation_key(2735)) long SheetSetup::GetFirstPageNumber ( );
__declspec(implementation_key(2736)) double SheetSetup::GetLeftMargin ( );
__declspec(implementation_key(2737)) void SheetSetup::PutLeftMargin ( double _arg1 );
__declspec(implementation_key(2738)) enum PaperUnitConstants SheetSetup::GetPaperUnits ( );
__declspec(implementation_key(2739)) void SheetSetup::PutPaperUnits ( enum PaperUnitConstants _arg1 );
__declspec(implementation_key(2740)) void SheetSetup::PutPaperUnitsPrecision ( enum PrecisionConstants _arg1 );
__declspec(implementation_key(2741)) enum PrecisionConstants SheetSetup::GetPaperUnitsPrecision ( );
__declspec(implementation_key(2742)) double SheetSetup::GetRightMargin ( );
__declspec(implementation_key(2743)) void SheetSetup::PutRightMargin ( double _arg1 );
__declspec(implementation_key(2744)) enum PaperToModelScaleConstants SheetSetup::GetScaleOption ( );
__declspec(implementation_key(2745)) void SheetSetup::PutScaleOption ( enum PaperToModelScaleConstants _arg1 );
__declspec(implementation_key(2746)) void SheetSetup::PutSheetHeight ( double _arg1 );
__declspec(implementation_key(2747)) double SheetSetup::GetSheetHeight ( );
__declspec(implementation_key(2748)) void SheetSetup::PutSheetSizeOption ( enum PaperSizeConstants _arg1 );
__declspec(implementation_key(2749)) enum PaperSizeConstants SheetSetup::GetSheetSizeOption ( );
__declspec(implementation_key(2750)) double SheetSetup::GetSheetWidth ( );
__declspec(implementation_key(2751)) void SheetSetup::PutSheetWidth ( double _arg1 );
__declspec(implementation_key(2752)) void SheetSetup::PutTopMargin ( double _arg1 );
__declspec(implementation_key(2753)) double SheetSetup::GetTopMargin ( );
__declspec(implementation_key(2754)) HRESULT SheetSetup::SetScale ( double PaperRatioComponent, double ModelRatioComponent );
__declspec(implementation_key(2755)) HRESULT SheetSetup::GetScale ( double * PaperRatioComponent, double * ModelRatioComponent );
__declspec(implementation_key(2756)) double SheetSetup::GetScaleFactor ( );
__declspec(implementation_key(2757)) HRESULT SheetSetup::SetDefaultDrawingViewScale ( double PaperRatioComponent, double ModelRatioComponent );
__declspec(implementation_key(2758)) HRESULT SheetSetup::GetDefaultDrawingViewScale ( double * PaperRatioComponent, double * ModelRatioComponent );
__declspec(implementation_key(2759)) double SheetSetup::GetDefaultDrawingViewScaleFactor ( );
__declspec(implementation_key(2760)) enum PaperToModelScaleConstants SheetSetup::GetDefaultDrawingViewScaleOption ( );
__declspec(implementation_key(2761)) void SheetSetup::PutDefaultDrawingViewScaleOption ( enum PaperToModelScaleConstants _arg1 );
__declspec(implementation_key(2762)) IDispatchPtr SheetSetup::GetDrawingViewForSheetScale ( );
__declspec(implementation_key(2763)) void SheetSetup::PutDrawingViewForSheetScale ( IDispatch * _arg1 );
__declspec(implementation_key(2764)) VARIANT_BOOL SheetSetup::GetIsManualSheetScale ( );
__declspec(implementation_key(2765)) HRESULT SheetSetup::ClearDrawingViewForSheetScale ( );
__declspec(implementation_key(2766)) TGFramework::ApplicationPtr _ISheetSetupAuto::GetApplication ( );
__declspec(implementation_key(2767)) SheetPtr _ISheetSetupAuto::GetParent ( );
__declspec(implementation_key(2768)) void _ISheetSetupAuto::PutBottomMargin ( double BottomMargin );
__declspec(implementation_key(2769)) double _ISheetSetupAuto::GetBottomMargin ( );
__declspec(implementation_key(2770)) void _ISheetSetupAuto::PutFirstPageNumber ( long PageNumber );
__declspec(implementation_key(2771)) long _ISheetSetupAuto::GetFirstPageNumber ( );
__declspec(implementation_key(2772)) double _ISheetSetupAuto::GetLeftMargin ( );
__declspec(implementation_key(2773)) void _ISheetSetupAuto::PutLeftMargin ( double LeftMargin );
__declspec(implementation_key(2774)) enum PaperUnitConstants _ISheetSetupAuto::GetPaperUnits ( );
__declspec(implementation_key(2775)) void _ISheetSetupAuto::PutPaperUnits ( enum PaperUnitConstants UnitType );
__declspec(implementation_key(2776)) void _ISheetSetupAuto::PutPaperUnitsPrecision ( enum PrecisionConstants Precision );
__declspec(implementation_key(2777)) enum PrecisionConstants _ISheetSetupAuto::GetPaperUnitsPrecision ( );
__declspec(implementation_key(2778)) double _ISheetSetupAuto::GetRightMargin ( );
__declspec(implementation_key(2779)) void _ISheetSetupAuto::PutRightMargin ( double RightMargin );
__declspec(implementation_key(2780)) enum PaperToModelScaleConstants _ISheetSetupAuto::GetScaleOption ( );
__declspec(implementation_key(2781)) void _ISheetSetupAuto::PutScaleOption ( enum PaperToModelScaleConstants Option );
__declspec(implementation_key(2782)) void _ISheetSetupAuto::PutSheetHeight ( double Height );
__declspec(implementation_key(2783)) double _ISheetSetupAuto::GetSheetHeight ( );
__declspec(implementation_key(2784)) void _ISheetSetupAuto::PutSheetSizeOption ( enum PaperSizeConstants Option );
__declspec(implementation_key(2785)) enum PaperSizeConstants _ISheetSetupAuto::GetSheetSizeOption ( );
__declspec(implementation_key(2786)) double _ISheetSetupAuto::GetSheetWidth ( );
__declspec(implementation_key(2787)) void _ISheetSetupAuto::PutSheetWidth ( double Width );
__declspec(implementation_key(2788)) void _ISheetSetupAuto::PutTopMargin ( double TopMargin );
__declspec(implementation_key(2789)) double _ISheetSetupAuto::GetTopMargin ( );
__declspec(implementation_key(2790)) HRESULT _ISheetSetupAuto::SetScale ( double PaperRatioComponent, double ModelRatioComponent );
__declspec(implementation_key(2791)) HRESULT _ISheetSetupAuto::GetScale ( double * PaperRatioComponent, double * ModelRatioComponent );
__declspec(implementation_key(2792)) double _ISheetSetupAuto::GetScaleFactor ( );
__declspec(implementation_key(2793)) HRESULT _ISheetSetupAuto::SetDefaultDrawingViewScale ( double PaperRatioComponent, double ModelRatioComponent );
__declspec(implementation_key(2794)) HRESULT _ISheetSetupAuto::GetDefaultDrawingViewScale ( double * PaperRatioComponent, double * ModelRatioComponent );
__declspec(implementation_key(2795)) double _ISheetSetupAuto::GetDefaultDrawingViewScaleFactor ( );
__declspec(implementation_key(2796)) enum PaperToModelScaleConstants _ISheetSetupAuto::GetDefaultDrawingViewScaleOption ( );
__declspec(implementation_key(2797)) void _ISheetSetupAuto::PutDefaultDrawingViewScaleOption ( enum PaperToModelScaleConstants Option );
__declspec(implementation_key(2798)) IDispatchPtr _ISheetSetupAuto::GetDrawingViewForSheetScale ( );
__declspec(implementation_key(2799)) void _ISheetSetupAuto::PutDrawingViewForSheetScale ( IDispatch * ppDrawingView );
__declspec(implementation_key(2800)) VARIANT_BOOL _ISheetSetupAuto::GetIsManualSheetScale ( );
__declspec(implementation_key(2801)) HRESULT _ISheetSetupAuto::ClearDrawingViewForSheetScale ( );
__declspec(implementation_key(2802)) TGFramework::ApplicationPtr _ISheetAuto::GetApplication ( );
__declspec(implementation_key(2803)) IDispatchPtr _ISheetAuto::GetDocument ( );
__declspec(implementation_key(2804)) TGFrameworkSupport::DrawingObjectsPtr _ISheetAuto::GetDrawingObjects ( );
__declspec(implementation_key(2805)) long _ISheetAuto::GetIndex ( );
__declspec(implementation_key(2806)) _bstr_t _ISheetAuto::GetKey ( );
__declspec(implementation_key(2807)) void _ISheetAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(2808)) _bstr_t _ISheetAuto::GetName ( );
__declspec(implementation_key(2809)) IDispatchPtr _ISheetAuto::GetParent ( );
__declspec(implementation_key(2810)) SectionPtr _ISheetAuto::GetSection ( );
__declspec(implementation_key(2811)) enum SheetSectionTypeConstants _ISheetAuto::GetSectionType ( );
__declspec(implementation_key(2812)) SheetSetupPtr _ISheetAuto::GetSheetSetup ( );
__declspec(implementation_key(2813)) long _ISheetAuto::GetType ( );
__declspec(implementation_key(2814)) void _ISheetAuto::PutVisible ( VARIANT_BOOL IsVisible );
__declspec(implementation_key(2815)) VARIANT_BOOL _ISheetAuto::GetVisible ( );
__declspec(implementation_key(2816)) SheetPtr _ISheetAuto::GetBackground ( );
__declspec(implementation_key(2817)) void _ISheetAuto::PutBackground ( struct Sheet * BackgroundSheet );
__declspec(implementation_key(2818)) void _ISheetAuto::PutBackgroundVisible ( VARIANT_BOOL IsVisible );
__declspec(implementation_key(2819)) VARIANT_BOOL _ISheetAuto::GetBackgroundVisible ( );
__declspec(implementation_key(2820)) HRESULT _ISheetAuto::Activate ( );
__declspec(implementation_key(2821)) HRESULT _ISheetAuto::Delete ( );
__declspec(implementation_key(2822)) TGFrameworkSupport::Lines2dPtr _ISheetAuto::GetLines2d ( );
__declspec(implementation_key(2823)) TGFrameworkSupport::Circles2dPtr _ISheetAuto::GetCircles2d ( );
__declspec(implementation_key(2824)) TGFrameworkSupport::Arcs2dPtr _ISheetAuto::GetArcs2d ( );
__declspec(implementation_key(2825)) TGFrameworkSupport::Ellipses2dPtr _ISheetAuto::GetEllipses2d ( );
__declspec(implementation_key(2826)) TGFrameworkSupport::BSplineCurves2dPtr _ISheetAuto::GetBsplineCurves2d ( );
__declspec(implementation_key(2827)) TGFrameworkSupport::Points2dPtr _ISheetAuto::GetPoints2d ( );
__declspec(implementation_key(2828)) TGFrameworkSupport::EllipticalArcs2dPtr _ISheetAuto::GetEllipticalArcs2d ( );
__declspec(implementation_key(2829)) TGFrameworkSupport::Curves2dPtr _ISheetAuto::GetCurves2d ( );
__declspec(implementation_key(2830)) TGFrameworkSupport::LineStrings2dPtr _ISheetAuto::GetLineStrings2d ( );
__declspec(implementation_key(2831)) TGFrameworkSupport::ComplexStrings2dPtr _ISheetAuto::GetComplexStrings2d ( );
__declspec(implementation_key(2832)) TGFrameworkSupport::Boundaries2dPtr _ISheetAuto::GetBoundaries2d ( );
__declspec(implementation_key(2833)) TGFrameworkSupport::Images2dPtr _ISheetAuto::GetImages2d ( );
__declspec(implementation_key(2834)) IDispatchPtr _ISheetAuto::GetDimensions ( );
__declspec(implementation_key(2835)) IDispatchPtr _ISheetAuto::GetLeaders ( );
__declspec(implementation_key(2836)) IDispatchPtr _ISheetAuto::GetBalloons ( );
__declspec(implementation_key(2837)) IDispatchPtr _ISheetAuto::GetTextBoxes ( );
__declspec(implementation_key(2838)) TGFrameworkSupport::TextProfilesPtr _ISheetAuto::GetTextProfiles ( );
__declspec(implementation_key(2839)) TGFrameworkSupport::Relations2dPtr _ISheetAuto::GetRelations2d ( );
__declspec(implementation_key(2840)) IDispatchPtr _ISheetAuto::GetSymbols ( );
__declspec(implementation_key(2841)) IDispatchPtr _ISheetAuto::GetSmartFrames2d ( );
__declspec(implementation_key(2842)) TGFramework::LayersPtr _ISheetAuto::GetLayers ( );
__declspec(implementation_key(2843)) IDispatchPtr _ISheetAuto::GetVFS ( IDispatch * Path );
__declspec(implementation_key(2844)) HRESULT _ISheetAuto::CreateVFS ( IDispatch * Path, IDispatch * * VFS );
__declspec(implementation_key(2845)) HRESULT _ISheetAuto::DeleteVFS ( IDispatch * VFS );
__declspec(implementation_key(2846)) DrawingViewsPtr _ISheetAuto::GetDrawingViews ( );
__declspec(implementation_key(2847)) IDispatchPtr _ISheetAuto::GetCuttingPlanes ( );
__declspec(implementation_key(2848)) IDispatchPtr _ISheetAuto::GetDatumFrames ( );
__declspec(implementation_key(2849)) IDispatchPtr _ISheetAuto::GetFeatureControlFrames ( );
__declspec(implementation_key(2850)) IDispatchPtr _ISheetAuto::GetSurfaceFinishSymbols ( );
__declspec(implementation_key(2851)) IDispatchPtr _ISheetAuto::GetWeldSymbols ( );
__declspec(implementation_key(2852)) IDispatchPtr _ISheetAuto::GetCenterMarks ( );
__declspec(implementation_key(2853)) IDispatchPtr _ISheetAuto::GetCenterLines ( );
__declspec(implementation_key(2854)) IDispatchPtr _ISheetAuto::GetDatumTargets ( );
__declspec(implementation_key(2855)) IDispatchPtr _ISheetAuto::GetPinSymbols ( );
__declspec(implementation_key(2856)) IDispatchPtr _ISheetAuto::GetDatumPoints ( );
__declspec(implementation_key(2857)) IDispatchPtr _ISheetAuto::GetCornerAnnotations ( );
__declspec(implementation_key(2858)) IDispatchPtr _ISheetAuto::GetGroups ( );
__declspec(implementation_key(2859)) IDispatchPtr _ISheetAuto::GetAttributeSets ( );
__declspec(implementation_key(2860)) VARIANT_BOOL _ISheetAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(2861)) HRESULT _ISheetAuto::CopyEMFToClipboard ( );
__declspec(implementation_key(2862)) HRESULT _ISheetAuto::GetAreaProperties ( SAFEARRAY * * AreaPointXArray, SAFEARRAY * * AreaPointYArray, long NumPoints, const _variant_t & LineStyle, const _variant_t & TextStyle, const _variant_t & DisplayResults, const _variant_t & CopyToClipboard, VARIANT * Area, VARIANT * Center, VARIANT * GlobalMomentsOfInertia, VARIANT * PrincipalAngle, VARIANT * PrincipalXOrientation, VARIANT * PrincipalYOrientation, VARIANT * PrincipalMomentsOfInertia );
__declspec(implementation_key(2863)) HRESULT _ISheetAuto::ConvertToCurve ( long NumberOfElements, SAFEARRAY * * ElementArray, VARIANT * NumConvertedElements, VARIANT * ConvertedElements );
__declspec(implementation_key(2864)) IDispatchPtr _ISheetAuto::GetBoltHoleCircles ( );
__declspec(implementation_key(2865)) IDispatchPtr _ISheetAuto::GetConnectors ( );
__declspec(implementation_key(2866)) void _ISheetAuto::PutDefaultTextScale ( double Scale );
__declspec(implementation_key(2867)) double _ISheetAuto::GetDefaultTextScale ( );
__declspec(implementation_key(2868)) BlockOccurrencesPtr _ISheetAuto::GetBlockOccurrences ( );
__declspec(implementation_key(2869)) BlockLabelsPtr _ISheetAuto::GetBlockLabels ( );
__declspec(implementation_key(2870)) TGFrameworkSupport::AreaPropertiesCollectionPtr _ISheetAuto::GetAreaPropertiesCollection ( );
__declspec(implementation_key(2871)) IDispatchPtr _ISheetAuto::GetGostWeldSymbols ( );
__declspec(implementation_key(2872)) SectionBoundaries2dPtr _ISheetAuto::GetSectionBoundaries2d ( );
__declspec(implementation_key(2873)) void _ISheetAuto::PutNumber ( long pNumber );
__declspec(implementation_key(2874)) long _ISheetAuto::GetNumber ( );
__declspec(implementation_key(2875)) TGFramework::SelectSetPtr _ISheetAuto::SmartSelect ( IDispatch * pSourceObject, VARIANT_BOOL vbColor, VARIANT_BOOL vbType, VARIANT_BOOL vbLayer, VARIANT_BOOL vbLineType, VARIANT_BOOL vbLineWidth );
__declspec(implementation_key(2876)) HRESULT _ISheetAuto::CleanGeometry2d ( long nElements, SAFEARRAY * * pElementArray, enum CleanProfileOptions options, VARIANT_BOOL bCleanPoints, VARIANT_BOOL bCleanBSplines, VARIANT_BOOL bCleanIdentical, VARIANT_BOOL bCleanSmall, const _variant_t & vLayer, const _variant_t & vSmallTolerance );
__declspec(implementation_key(2877)) IDispatchPtr _ISheetAuto::GetSheetGroup ( );
__declspec(implementation_key(2878)) HRESULT _ISheetAuto::ChainLocate ( double x, double y );
__declspec(implementation_key(2879)) HRESULT _ISheetAuto::Offset2d ( double offsetSideX, double offsetSideY, double offsetDistance );
__declspec(implementation_key(2880)) HRESULT _ISheetAuto::FenceLocate ( double dLeft, double dTop, double dRight, double dBottom );
__declspec(implementation_key(2881)) IDispatchPtr _ISheetAuto::GetAnnotAlignmentShapes ( );
__declspec(implementation_key(2882)) HRESULT _ISheetAuto::ArrangeDimensionsInSelectSet ( double iStackPitchMultiplier, VARIANT_BOOL bAssociative );
__declspec(implementation_key(2883)) HRESULT _ISheetAuto::ScaleSelectSet ( double dScale, double AboutPt_x, double AboutPt_y );
__declspec(implementation_key(2884)) HRESULT _ISheetAuto::MoveSelectSet ( double FromPt_x, double FromPt_y, double ToPt_x, double ToPt_y );
__declspec(implementation_key(2885)) HRESULT _ISheetAuto::RotateSelectSet ( double dAngle, double AboutPt_x, double AboutPt_y );
__declspec(implementation_key(2886)) HRESULT _ISheetAuto::PrintArea ( double LowerLeftX, double LowerLeftY, double UpperRightX, double UpperRightY, const _variant_t & Printer, const _variant_t & NumCopies, const _variant_t & Orientation, const _variant_t & PaperSize, const _variant_t & Scale, const _variant_t & PrintToFile, const _variant_t & OutputFileName, const _variant_t & ColorAsBlack, const _variant_t & Collate, const _variant_t & ScaleLineWidths, const _variant_t & ScaleLineTypes, const _variant_t & UsePrinterClipping );
__declspec(implementation_key(2887)) HRESULT _ISheetAuto::PrintSheet ( const _variant_t & Printer, const _variant_t & NumCopies, const _variant_t & Orientation, const _variant_t & PaperSize, const _variant_t & Scale, const _variant_t & PrintToFile, const _variant_t & OutputFileName, const _variant_t & ColorAsBlack, const _variant_t & Collate, const _variant_t & ScaleLineWidths, const _variant_t & ScaleLineTypes, const _variant_t & UsePrinterClipping );
__declspec(implementation_key(2888)) IDispatchPtr _ISheetAuto::GetTechnicalRequirements ( );
__declspec(implementation_key(2889)) HRESULT _ISheetAuto::ReplaceBackground ( _bstr_t DraftFileName, _bstr_t BackgroundSheetName );
__declspec(implementation_key(2890)) HRESULT _ISheetAuto::LineupText ( IDispatch * Source, SAFEARRAY * * Target, enum LineupTextAlignOptionConstants AlignOption, long OffsetGap );
__declspec(implementation_key(2891)) HRESULT _ISheetAuto::LineupTextEx ( IDispatch * Source, SAFEARRAY * * Target, enum LineupTextAlignOptionConstants AlignOption, double OffsetGap );
__declspec(implementation_key(2892)) TGFrameworkSupport::Conics2dPtr _ISheetAuto::GetConics2d ( );
__declspec(implementation_key(2893)) HRESULT _ISheetAuto::ReplaceBackgroundEx ( _bstr_t DraftFileName, _bstr_t BackgroundSheetName, VARIANT_BOOL bReplaceBlocksOfSameName );
__declspec(implementation_key(2894)) TGFramework::ApplicationPtr Sheets::GetApplication ( );
__declspec(implementation_key(2895)) IDispatchPtr Sheets::GetParent ( );
__declspec(implementation_key(2896)) long Sheets::GetCount ( );
__declspec(implementation_key(2897)) SheetPtr Sheets::Item ( const _variant_t & Index );
__declspec(implementation_key(2898)) SheetPtr Sheets::Add ( const _variant_t & Name, const _variant_t & SectionName, const _variant_t & InsertBefore, const _variant_t & InsertAfter );
__declspec(implementation_key(2899)) SheetPtr Sheets::AddSheet ( const _variant_t & Name, enum SheetSectionTypeConstants SectionType, const _variant_t & InsertBefore, const _variant_t & InsertAfter );
__declspec(implementation_key(2900)) HRESULT Sheets::Rename ( _bstr_t OldName, _bstr_t NewName );
__declspec(implementation_key(2901)) SheetPtr Sheets::GetGet2DModelSheet ( );
__declspec(implementation_key(2902)) TGFramework::ApplicationPtr _ISheetsAuto::GetApplication ( );
__declspec(implementation_key(2903)) IDispatchPtr _ISheetsAuto::GetParent ( );
__declspec(implementation_key(2904)) long _ISheetsAuto::GetCount ( );
__declspec(implementation_key(2905)) SheetPtr _ISheetsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(2906)) IUnknownPtr _ISheetsAuto::Get_NewEnum ( );
__declspec(implementation_key(2907)) SheetPtr _ISheetsAuto::Add ( const _variant_t & Name, const _variant_t & SectionName, const _variant_t & InsertBefore, const _variant_t & InsertAfter );
__declspec(implementation_key(2908)) SheetPtr _ISheetsAuto::AddSheet ( const _variant_t & Name, enum SheetSectionTypeConstants SectionType, const _variant_t & InsertBefore, const _variant_t & InsertAfter );
__declspec(implementation_key(2909)) HRESULT _ISheetsAuto::Rename ( _bstr_t OldName, _bstr_t NewName );
__declspec(implementation_key(2910)) SheetPtr _ISheetsAuto::GetGet2DModelSheet ( );
__declspec(implementation_key(2911)) TGFramework::ApplicationPtr Sections::GetApplication ( );
__declspec(implementation_key(2912)) IDispatchPtr Sections::GetParent ( );
__declspec(implementation_key(2913)) long Sections::GetCount ( );
__declspec(implementation_key(2914)) SectionPtr Sections::Add ( const _variant_t & Name );
__declspec(implementation_key(2915)) SectionPtr Sections::Item ( const _variant_t & Index );
__declspec(implementation_key(2916)) SectionPtr Sections::GetWorkingSection ( );
__declspec(implementation_key(2917)) SectionPtr Sections::GetBackgroundSection ( );
__declspec(implementation_key(2918)) SheetPtr Sections::GetGet2DModelSheet ( );
__declspec(implementation_key(2919)) TGFramework::ApplicationPtr _ISectionsAuto::GetApplication ( );
__declspec(implementation_key(2920)) IDispatchPtr _ISectionsAuto::GetParent ( );
__declspec(implementation_key(2921)) long _ISectionsAuto::GetCount ( );
__declspec(implementation_key(2922)) SectionPtr _ISectionsAuto::Add ( const _variant_t & Name );
__declspec(implementation_key(2923)) SectionPtr _ISectionsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(2924)) IUnknownPtr _ISectionsAuto::Get_NewEnum ( );
__declspec(implementation_key(2925)) SectionPtr _ISectionsAuto::GetWorkingSection ( );
__declspec(implementation_key(2926)) SectionPtr _ISectionsAuto::GetBackgroundSection ( );
__declspec(implementation_key(2927)) SheetPtr _ISectionsAuto::GetGet2DModelSheet ( );
__declspec(implementation_key(2928)) TGFramework::ApplicationPtr ModelLinks::GetApplication ( );
__declspec(implementation_key(2929)) long ModelLinks::GetCount ( );
__declspec(implementation_key(2930)) IDispatchPtr ModelLinks::GetParent ( );
__declspec(implementation_key(2931)) ModelLinkPtr ModelLinks::Item ( const _variant_t & Index );
__declspec(implementation_key(2932)) ModelLinkPtr ModelLinks::Add ( _bstr_t FileName );
__declspec(implementation_key(2933)) HRESULT ModelLinks::ReduceFile ( );
__declspec(implementation_key(2934)) TGFramework::ApplicationPtr _IModelLinksAuto::GetApplication ( );
__declspec(implementation_key(2935)) long _IModelLinksAuto::GetCount ( );
__declspec(implementation_key(2936)) IDispatchPtr _IModelLinksAuto::GetParent ( );
__declspec(implementation_key(2937)) ModelLinkPtr _IModelLinksAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(2938)) IUnknownPtr _IModelLinksAuto::Get_NewEnum ( );
__declspec(implementation_key(2939)) ModelLinkPtr _IModelLinksAuto::Add ( _bstr_t FileName );
__declspec(implementation_key(2940)) HRESULT _IModelLinksAuto::ReduceFile ( );
__declspec(implementation_key(2941)) TGFramework::ApplicationPtr PartsLists::GetApplication ( );
__declspec(implementation_key(2942)) IDispatchPtr PartsLists::GetParent ( );
__declspec(implementation_key(2943)) long PartsLists::GetCount ( );
__declspec(implementation_key(2944)) PartsListPtr PartsLists::Item ( const _variant_t & Index );
__declspec(implementation_key(2945)) PartsListPtr PartsLists::Add ( struct DrawingView * DrawingView, _bstr_t SavedSettings, long AutoBalloon, long CreatePartsList );
__declspec(implementation_key(2946)) PartsListPtr PartsLists::AddEx ( struct DrawingView * DrawingView, long LinkToActive, _bstr_t SavedSettings, long AutoBalloon, long CreatePartsList );
__declspec(implementation_key(2947)) PartsListPtr PartsLists::AddFamilyOfAssemblyPartsList ( struct DrawingView * DrawingView, long LinkToActive, _bstr_t SavedSettings, long AutoBalloon, long CreatePartsList );
__declspec(implementation_key(2948)) PartsListPtr PartsLists::AddFromExistingPartsList ( struct PartsList * pExistingPartsList, _bstr_t AssemblyFileFullPath );
__declspec(implementation_key(2949)) TGFramework::ApplicationPtr PartsList::GetApplication ( );
__declspec(implementation_key(2950)) _bstr_t PartsList::GetAssemblyFileName ( );
__declspec(implementation_key(2951)) IDispatchPtr PartsList::GetParent ( );
__declspec(implementation_key(2952)) HRESULT PartsList::Update ( );
__declspec(implementation_key(2953)) HRESULT PartsList::CopyToClipboard ( );
__declspec(implementation_key(2954)) ModelLinkPtr PartsList::GetModelLink ( );
__declspec(implementation_key(2955)) HRESULT PartsList::Delete ( );
__declspec(implementation_key(2956)) void PartsList::PutSavedSettings ( _bstr_t _arg1 );
__declspec(implementation_key(2957)) HRESULT PartsList::SetOrigin ( double x, double y );
__declspec(implementation_key(2958)) HRESULT PartsList::GetOrigin ( double * x, double * y );
__declspec(implementation_key(2959)) HRESULT PartsList::GetListOfSavedSettings ( long * NumSavedSettings, SAFEARRAY * * ListOfSavedSettings );
__declspec(implementation_key(2960)) VARIANT_BOOL PartsList::GetIsUpToDate ( );
__declspec(implementation_key(2961)) TableCellPtr PartsList::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex );
__declspec(implementation_key(2962)) enum TitlePosition PartsList::GetColumnHeaderPosition ( );
__declspec(implementation_key(2963)) void PartsList::PutColumnHeaderPosition ( enum TitlePosition _arg1 );
__declspec(implementation_key(2964)) TableColumnsPtr PartsList::GetColumns ( );
__declspec(implementation_key(2965)) double PartsList::GetMargin ( );
__declspec(implementation_key(2966)) void PartsList::PutMargin ( double _arg1 );
__declspec(implementation_key(2967)) long PartsList::GetMaximumRows ( );
__declspec(implementation_key(2968)) void PartsList::PutMaximumRows ( long _arg1 );
__declspec(implementation_key(2969)) double PartsList::GetPageGap ( );
__declspec(implementation_key(2970)) void PartsList::PutPageGap ( double _arg1 );
__declspec(implementation_key(2971)) VARIANT_BOOL PartsList::GetReverseDisplayOrder ( );
__declspec(implementation_key(2972)) void PartsList::PutReverseDisplayOrder ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2973)) TableRowsPtr PartsList::GetRows ( );
__declspec(implementation_key(2974)) VARIANT_BOOL PartsList::GetShowColumnHeader ( );
__declspec(implementation_key(2975)) void PartsList::PutShowColumnHeader ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2976)) _bstr_t PartsList::GetTableStyle ( );
__declspec(implementation_key(2977)) void PartsList::PutTableStyle ( _bstr_t _arg1 );
__declspec(implementation_key(2978)) TableTitlesPtr PartsList::GetTitles ( );
__declspec(implementation_key(2979)) enum TableAnchorPoint PartsList::GetAnchorPoint ( );
__declspec(implementation_key(2980)) void PartsList::PutAnchorPoint ( enum TableAnchorPoint _arg1 );
__declspec(implementation_key(2981)) TablePagesPtr PartsList::GetPages ( );
__declspec(implementation_key(2982)) double PartsList::GetHeaderFixedRowHeight ( );
__declspec(implementation_key(2983)) void PartsList::PutHeaderFixedRowHeight ( double _arg1 );
__declspec(implementation_key(2984)) double PartsList::GetDataFixedRowHeight ( );
__declspec(implementation_key(2985)) void PartsList::PutDataFixedRowHeight ( double _arg1 );
__declspec(implementation_key(2986)) double PartsList::GetMaximumHeight ( );
__declspec(implementation_key(2987)) void PartsList::PutMaximumHeight ( double _arg1 );
__declspec(implementation_key(2988)) HRESULT PartsList::ConvertToTable ( );
__declspec(implementation_key(2989)) enum PartsListType PartsList::GetListType ( );
__declspec(implementation_key(2990)) void PartsList::PutListType ( enum PartsListType _arg1 );
__declspec(implementation_key(2991)) VARIANT_BOOL PartsList::GetUseAssemblyItemNumbers ( );
__declspec(implementation_key(2992)) void PartsList::PutUseAssemblyItemNumbers ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2993)) VARIANT_BOOL PartsList::GetShowTopAssembly ( );
__declspec(implementation_key(2994)) void PartsList::PutShowTopAssembly ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2995)) VARIANT_BOOL PartsList::GetUseLevelBasedItemNumbers ( );
__declspec(implementation_key(2996)) void PartsList::PutUseLevelBasedItemNumbers ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2997)) long PartsList::GetNumberOfHeaderRows ( );
__declspec(implementation_key(2998)) void PartsList::PutNumberOfHeaderRows ( long _arg1 );
__declspec(implementation_key(2999)) long PartsList::GetMaximumRowsFirstPage ( );
__declspec(implementation_key(3000)) void PartsList::PutMaximumRowsFirstPage ( long _arg1 );
__declspec(implementation_key(3001)) long PartsList::GetMaximumRowsAdditionalPages ( );
__declspec(implementation_key(3002)) void PartsList::PutMaximumRowsAdditionalPages ( long _arg1 );
__declspec(implementation_key(3003)) double PartsList::GetMaximumHeightFirstPage ( );
__declspec(implementation_key(3004)) void PartsList::PutMaximumHeightFirstPage ( double _arg1 );
__declspec(implementation_key(3005)) double PartsList::GetMaximumHeightAdditionalPages ( );
__declspec(implementation_key(3006)) void PartsList::PutMaximumHeightAdditionalPages ( double _arg1 );
__declspec(implementation_key(3007)) VARIANT_BOOL PartsList::GetCreateNewSheetsForTable ( );
__declspec(implementation_key(3008)) void PartsList::PutCreateNewSheetsForTable ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3009)) _bstr_t PartsList::GetFirstSheetBackgroundName ( );
__declspec(implementation_key(3010)) void PartsList::PutFirstSheetBackgroundName ( _bstr_t _arg1 );
__declspec(implementation_key(3011)) _bstr_t PartsList::GetAdditionalSheetsBackgroundName ( );
__declspec(implementation_key(3012)) void PartsList::PutAdditionalSheetsBackgroundName ( _bstr_t _arg1 );
__declspec(implementation_key(3013)) VARIANT_BOOL PartsList::GetShowSheetBackground ( );
__declspec(implementation_key(3014)) void PartsList::PutShowSheetBackground ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3015)) VARIANT_BOOL PartsList::GetMaintainSheetsWithTableSize ( );
__declspec(implementation_key(3016)) void PartsList::PutMaintainSheetsWithTableSize ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3017)) VARIANT_BOOL PartsList::GetEnableGroups ( );
__declspec(implementation_key(3018)) void PartsList::PutEnableGroups ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3019)) TableGroupsPtr PartsList::GetGroups ( );
__declspec(implementation_key(3020)) VARIANT_BOOL PartsList::GetWrapDataCellsToNewRow ( );
__declspec(implementation_key(3021)) void PartsList::PutWrapDataCellsToNewRow ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3022)) VARIANT_BOOL PartsList::GetFillEndOfTableWithBlankRows ( );
__declspec(implementation_key(3023)) void PartsList::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3024)) long PartsList::GetGroupByColumn ( );
__declspec(implementation_key(3025)) void PartsList::PutGroupByColumn ( long _arg1 );
__declspec(implementation_key(3026)) VARIANT_BOOL PartsList::GetActive ( );
__declspec(implementation_key(3027)) void PartsList::PutActive ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3028)) long PartsList::GetItemNumberStart ( );
__declspec(implementation_key(3029)) void PartsList::PutItemNumberStart ( long _arg1 );
__declspec(implementation_key(3030)) long PartsList::GetItemNumberIncrement ( );
__declspec(implementation_key(3031)) void PartsList::PutItemNumberIncrement ( long _arg1 );
__declspec(implementation_key(3032)) VARIANT_BOOL PartsList::GetMarkUnballoonedItems ( );
__declspec(implementation_key(3033)) void PartsList::PutMarkUnballoonedItems ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3034)) _bstr_t PartsList::GetMarkUnballoonedItemsString ( );
__declspec(implementation_key(3035)) void PartsList::PutMarkUnballoonedItemsString ( _bstr_t _arg1 );
__declspec(implementation_key(3036)) VARIANT_BOOL PartsList::GetRenumberAccordingToSortOrder ( );
__declspec(implementation_key(3037)) void PartsList::PutRenumberAccordingToSortOrder ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3038)) VARIANT_BOOL PartsList::GetConvertDeletedPartsIntoUserDefinedRows ( );
__declspec(implementation_key(3039)) void PartsList::PutConvertDeletedPartsIntoUserDefinedRows ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3040)) _bstr_t PartsList::GetConfiguration ( );
__declspec(implementation_key(3041)) void PartsList::PutConfiguration ( _bstr_t _arg1 );
__declspec(implementation_key(3042)) VARIANT_BOOL PartsList::GetExpandWeldmentSubAssemblies ( );
__declspec(implementation_key(3043)) void PartsList::PutExpandWeldmentSubAssemblies ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3044)) VARIANT_BOOL PartsList::GetUseUniquenessCriteria_CutLength ( );
__declspec(implementation_key(3045)) void PartsList::PutUseUniquenessCriteria_CutLength ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3046)) VARIANT_BOOL PartsList::GetUseUniquenessCriteria_Mass ( );
__declspec(implementation_key(3047)) void PartsList::PutUseUniquenessCriteria_Mass ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3048)) VARIANT_BOOL PartsList::GetUseUniquenessCriteria_Miter ( );
__declspec(implementation_key(3049)) void PartsList::PutUseUniquenessCriteria_Miter ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3050)) VARIANT_BOOL PartsList::GetMarkAmbiguousValues ( );
__declspec(implementation_key(3051)) void PartsList::PutMarkAmbiguousValues ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3052)) _bstr_t PartsList::GetMarkAmbiguousValuesString ( );
__declspec(implementation_key(3053)) void PartsList::PutMarkAmbiguousValuesString ( _bstr_t _arg1 );
__declspec(implementation_key(3054)) VARIANT_BOOL PartsList::GetNonPlanerValues ( );
__declspec(implementation_key(3055)) void PartsList::PutNonPlanerValues ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3056)) _bstr_t PartsList::GetNonPlanerValuesString ( );
__declspec(implementation_key(3057)) void PartsList::PutNonPlanerValuesString ( _bstr_t _arg1 );
__declspec(implementation_key(3058)) enum PartListEndAngleRepresentationType PartsList::GetEndAngleRepresentation ( );
__declspec(implementation_key(3059)) void PartsList::PutEndAngleRepresentation ( enum PartListEndAngleRepresentationType _arg1 );
__declspec(implementation_key(3060)) VARIANT_BOOL PartsList::GetUseUniquenessCriteria_AngleOrientation ( );
__declspec(implementation_key(3061)) void PartsList::PutUseUniquenessCriteria_AngleOrientation ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3062)) VARIANT_BOOL PartsList::GetTotalLengthPartsList ( );
__declspec(implementation_key(3063)) void PartsList::PutTotalLengthPartsList ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3064)) _bstr_t PartsList::GetTotalLengthPartsList_ItemNumberSeparator ( );
__declspec(implementation_key(3065)) void PartsList::PutTotalLengthPartsList_ItemNumberSeparator ( _bstr_t _arg1 );
__declspec(implementation_key(3066)) HRESULT PartsList::SetShowComponent ( enum PartsListComponentType ComponentType, VARIANT_BOOL ShowComponent );
__declspec(implementation_key(3067)) HRESULT PartsList::SetComponentSortPriority ( enum PartsListComponentType ComponentType, long ComponentSortPriority );
__declspec(implementation_key(3068)) double PartsList::GetPipeRoughCutEndClearance ( );
__declspec(implementation_key(3069)) void PartsList::PutPipeRoughCutEndClearance ( double _arg1 );
__declspec(implementation_key(3070)) double PartsList::GetFrameRoughCutEndClearance ( );
__declspec(implementation_key(3071)) void PartsList::PutFrameRoughCutEndClearance ( double _arg1 );
__declspec(implementation_key(3072)) double PartsList::GetTitleFixedRowHeight ( );
__declspec(implementation_key(3073)) void PartsList::PutTitleFixedRowHeight ( double _arg1 );
__declspec(implementation_key(3074)) double PartsList::GetMarginHorizontal ( );
__declspec(implementation_key(3075)) void PartsList::PutMarginHorizontal ( double _arg1 );
__declspec(implementation_key(3076)) double PartsList::GetMarginVertical ( );
__declspec(implementation_key(3077)) void PartsList::PutMarginVertical ( double _arg1 );
__declspec(implementation_key(3078)) VARIANT_BOOL PartsList::GetUseUniquenessCriteria_TubeFlatLength ( );
__declspec(implementation_key(3079)) void PartsList::PutUseUniquenessCriteria_TubeFlatLength ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3080)) VARIANT_BOOL PartsList::GetUseUniquenessCriteria_TubeMass ( );
__declspec(implementation_key(3081)) void PartsList::PutUseUniquenessCriteria_TubeMass ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3082)) VARIANT_BOOL PartsList::GetMarkAmbiguousValuesForTube ( );
__declspec(implementation_key(3083)) void PartsList::PutMarkAmbiguousValuesForTube ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3084)) _bstr_t PartsList::GetMarkAmbiguousValuesStringForTube ( );
__declspec(implementation_key(3085)) void PartsList::PutMarkAmbiguousValuesStringForTube ( _bstr_t _arg1 );
__declspec(implementation_key(3086)) VARIANT_BOOL PartsList::GetZeroQuantity ( );
__declspec(implementation_key(3087)) void PartsList::PutZeroQuantity ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3088)) _bstr_t PartsList::GetZeroQuantityString ( );
__declspec(implementation_key(3089)) void PartsList::PutZeroQuantityString ( _bstr_t _arg1 );
__declspec(implementation_key(3090)) VARIANT_BOOL PartsList::IsFamilyOfAssemblyPartsList ( );
__declspec(implementation_key(3091)) HRESULT PartsList::GetAllFamilyOfAssemblyPartsListMembers ( struct DrawingView * DrawingView, long * NumOfMembers, SAFEARRAY * * ListOfMembers );
__declspec(implementation_key(3092)) HRESULT PartsList::GetSelectedFamilyOfAssemblyPartsListMembers ( long * NumOfMembers, SAFEARRAY * * ListOfMembers );
__declspec(implementation_key(3093)) HRESULT PartsList::SetSelectedFamilyOfAssemblyPartsListMembers ( long * NumOfMembers, SAFEARRAY * * ListOfMembers );
__declspec(implementation_key(3094)) _bstr_t PartsList::GetName ( );
__declspec(implementation_key(3095)) HRESULT PartsList::GetUniquenessCriteria_Gusset ( VARIANT_BOOL * UseGussetMass, enum GussetPlateUniquenessCriteria * GussetPlateUniquenessCriteriaType );
__declspec(implementation_key(3096)) HRESULT PartsList::SetUniquenessCriteria_Gusset ( VARIANT_BOOL UseGussetMass, enum GussetPlateUniquenessCriteria GussetPlateUniquenessCriteriaType );
__declspec(implementation_key(3097)) HRESULT PartsList::GetGussetPlateNamingFormat ( BSTR * Name, enum GussetPlateNamingFormat * GussetPlateNamingFormat_Param1, enum GussetPlateNamingFormat * GussetPlateNamingFormat_Param2, enum GussetPlateNamingFormat * GussetPlateNamingFormat_Param3 );
__declspec(implementation_key(3098)) HRESULT PartsList::SetGussetPlateNamingFormat ( _bstr_t Name, enum GussetPlateNamingFormat GussetPlateNamingFormat_Param1, enum GussetPlateNamingFormat GussetPlateNamingFormat_Param2, enum GussetPlateNamingFormat GussetPlateNamingFormat_Param3 );
__declspec(implementation_key(3099)) VARIANT_BOOL PartsList::IsTableSpecifiedByHeight ( );
__declspec(implementation_key(3100)) TGFramework::ApplicationPtr _IPartsListsAuto::GetApplication ( );
__declspec(implementation_key(3101)) IDispatchPtr _IPartsListsAuto::GetParent ( );
__declspec(implementation_key(3102)) long _IPartsListsAuto::GetCount ( );
__declspec(implementation_key(3103)) PartsListPtr _IPartsListsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(3104)) IUnknownPtr _IPartsListsAuto::Get_NewEnum ( );
__declspec(implementation_key(3105)) PartsListPtr _IPartsListsAuto::Add ( struct DrawingView * DrawingView, _bstr_t SavedSettings, long AutoBalloon, long CreatePartsList );
__declspec(implementation_key(3106)) PartsListPtr _IPartsListsAuto::AddEx ( struct DrawingView * DrawingView, long LinkToActive, _bstr_t SavedSettings, long AutoBalloon, long CreatePartsList );
__declspec(implementation_key(3107)) PartsListPtr _IPartsListsAuto::AddFamilyOfAssemblyPartsList ( struct DrawingView * DrawingView, long LinkToActive, _bstr_t SavedSettings, long AutoBalloon, long CreatePartsList );
__declspec(implementation_key(3108)) PartsListPtr _IPartsListsAuto::AddFromExistingPartsList ( struct PartsList * pExistingPartsList, _bstr_t AssemblyFileFullPath );
__declspec(implementation_key(3109)) TGFramework::ApplicationPtr TableCell::GetApplication ( );
__declspec(implementation_key(3110)) IDispatchPtr TableCell::GetParent ( );
__declspec(implementation_key(3111)) _bstr_t TableCell::Getvalue ( );
__declspec(implementation_key(3112)) void TableCell::Putvalue ( _bstr_t _arg1 );
__declspec(implementation_key(3113)) _bstr_t TableCell::GetFontName ( );
__declspec(implementation_key(3114)) void TableCell::PutFontName ( _bstr_t _arg1 );
__declspec(implementation_key(3115)) enum TGFrameworkSupport::DimTextFontStyleConstants TableCell::GetFontStyle ( );
__declspec(implementation_key(3116)) void TableCell::PutFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants _arg1 );
__declspec(implementation_key(3117)) VARIANT_BOOL TableCell::GetUnderline ( );
__declspec(implementation_key(3118)) void TableCell::PutUnderline ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3119)) enum TGFrameworkSupport::TextHorizontalAlignmentConstants TableCell::GetHorizontalAlignment ( );
__declspec(implementation_key(3120)) void TableCell::PutHorizontalAlignment ( enum TGFrameworkSupport::TextHorizontalAlignmentConstants _arg1 );
__declspec(implementation_key(3121)) enum TGFrameworkSupport::TextVerticalAlignmentConstants TableCell::GetVerticalAlignment ( );
__declspec(implementation_key(3122)) void TableCell::PutVerticalAlignment ( enum TGFrameworkSupport::TextVerticalAlignmentConstants _arg1 );
__declspec(implementation_key(3123)) VARIANT_BOOL TableCell::GetAllowCellOverrides ( );
__declspec(implementation_key(3124)) void TableCell::PutAllowCellOverrides ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3125)) double TableCell::GetFontSize ( );
__declspec(implementation_key(3126)) _bstr_t TableCell::GetPropertyText ( );
__declspec(implementation_key(3127)) VARIANT_BOOL TableCell::GetIsOverridden ( );
__declspec(implementation_key(3128)) TGFramework::ApplicationPtr _ITableCellAuto::GetApplication ( );
__declspec(implementation_key(3129)) IDispatchPtr _ITableCellAuto::GetParent ( );
__declspec(implementation_key(3130)) _bstr_t _ITableCellAuto::Getvalue ( );
__declspec(implementation_key(3131)) void _ITableCellAuto::Putvalue ( _bstr_t value );
__declspec(implementation_key(3132)) _bstr_t _ITableCellAuto::GetFontName ( );
__declspec(implementation_key(3133)) void _ITableCellAuto::PutFontName ( _bstr_t FontName );
__declspec(implementation_key(3134)) enum TGFrameworkSupport::DimTextFontStyleConstants _ITableCellAuto::GetFontStyle ( );
__declspec(implementation_key(3135)) void _ITableCellAuto::PutFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants FontStyle );
__declspec(implementation_key(3136)) VARIANT_BOOL _ITableCellAuto::GetUnderline ( );
__declspec(implementation_key(3137)) void _ITableCellAuto::PutUnderline ( VARIANT_BOOL Underline );
__declspec(implementation_key(3138)) enum TGFrameworkSupport::TextHorizontalAlignmentConstants _ITableCellAuto::GetHorizontalAlignment ( );
__declspec(implementation_key(3139)) void _ITableCellAuto::PutHorizontalAlignment ( enum TGFrameworkSupport::TextHorizontalAlignmentConstants HorizontalAlignment );
__declspec(implementation_key(3140)) enum TGFrameworkSupport::TextVerticalAlignmentConstants _ITableCellAuto::GetVerticalAlignment ( );
__declspec(implementation_key(3141)) void _ITableCellAuto::PutVerticalAlignment ( enum TGFrameworkSupport::TextVerticalAlignmentConstants VerticalAlignment );
__declspec(implementation_key(3142)) VARIANT_BOOL _ITableCellAuto::GetAllowCellOverrides ( );
__declspec(implementation_key(3143)) void _ITableCellAuto::PutAllowCellOverrides ( VARIANT_BOOL AllowCellOverrides );
__declspec(implementation_key(3144)) double _ITableCellAuto::GetFontSize ( );
__declspec(implementation_key(3145)) _bstr_t _ITableCellAuto::GetPropertyText ( );
__declspec(implementation_key(3146)) VARIANT_BOOL _ITableCellAuto::GetIsOverridden ( );
__declspec(implementation_key(3147)) TGFramework::ApplicationPtr TableColumns::GetApplication ( );
__declspec(implementation_key(3148)) IDispatchPtr TableColumns::GetParent ( );
__declspec(implementation_key(3149)) long TableColumns::GetCount ( );
__declspec(implementation_key(3150)) TableColumnPtr TableColumns::Item ( const _variant_t & Index );
__declspec(implementation_key(3151)) TableColumnPtr TableColumns::Add ( const _variant_t & Index, VARIANT_BOOL after );
__declspec(implementation_key(3152)) TGFramework::ApplicationPtr TableColumn::GetApplication ( );
__declspec(implementation_key(3153)) IDispatchPtr TableColumn::GetParent ( );
__declspec(implementation_key(3154)) HRESULT TableColumn::Delete ( );
__declspec(implementation_key(3155)) enum TGFrameworkSupport::TextHorizontalAlignmentConstants TableColumn::GetDataAlignment ( );
__declspec(implementation_key(3156)) void TableColumn::PutDataAlignment ( enum TGFrameworkSupport::TextHorizontalAlignmentConstants _arg1 );
__declspec(implementation_key(3157)) _bstr_t TableColumn::GetHeader ( );
__declspec(implementation_key(3158)) void TableColumn::PutHeader ( _bstr_t _arg1 );
__declspec(implementation_key(3159)) enum TGFrameworkSupport::TextHorizontalAlignmentConstants TableColumn::GetHeaderAlignment ( );
__declspec(implementation_key(3160)) void TableColumn::PutHeaderAlignment ( enum TGFrameworkSupport::TextHorizontalAlignmentConstants _arg1 );
__declspec(implementation_key(3161)) long TableColumn::GetIndex ( );
__declspec(implementation_key(3162)) VARIANT_BOOL TableColumn::GetShow ( );
__declspec(implementation_key(3163)) void TableColumn::PutShow ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3164)) VARIANT_BOOL TableColumn::GetSortAscending ( );
__declspec(implementation_key(3165)) void TableColumn::PutSortAscending ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3166)) long TableColumn::GetSortPrecedence ( );
__declspec(implementation_key(3167)) void TableColumn::PutSortPrecedence ( long _arg1 );
__declspec(implementation_key(3168)) double TableColumn::GetWidth ( );
__declspec(implementation_key(3169)) void TableColumn::PutWidth ( double _arg1 );
__declspec(implementation_key(3170)) void TableColumn::PutCurrentHeaderRow ( long _arg1 );
__declspec(implementation_key(3171)) _bstr_t TableColumn::GetHeaderRowValue ( );
__declspec(implementation_key(3172)) void TableColumn::PutHeaderRowValue ( _bstr_t _arg1 );
__declspec(implementation_key(3173)) enum TGFrameworkSupport::TextHorizontalAlignmentConstants TableColumn::GetHeaderRowHorizontalAlignment ( );
__declspec(implementation_key(3174)) void TableColumn::PutHeaderRowHorizontalAlignment ( enum TGFrameworkSupport::TextHorizontalAlignmentConstants _arg1 );
__declspec(implementation_key(3175)) enum TGFrameworkSupport::TextVerticalAlignmentConstants TableColumn::GetHeaderRowVerticalAlignment ( );
__declspec(implementation_key(3176)) void TableColumn::PutHeaderRowVerticalAlignment ( enum TGFrameworkSupport::TextVerticalAlignmentConstants _arg1 );
__declspec(implementation_key(3177)) enum TableTextOrientation TableColumn::GetHeaderRowOrientation ( );
__declspec(implementation_key(3178)) void TableColumn::PutHeaderRowOrientation ( enum TableTextOrientation _arg1 );
__declspec(implementation_key(3179)) VARIANT_BOOL TableColumn::GetHeaderRowFitToWidth ( );
__declspec(implementation_key(3180)) void TableColumn::PutHeaderRowFitToWidth ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3181)) VARIANT_BOOL TableColumn::GetHeaderRowMergeWithNext ( );
__declspec(implementation_key(3182)) void TableColumn::PutHeaderRowMergeWithNext ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3183)) enum TGFrameworkSupport::TextHorizontalAlignmentConstants TableColumn::GetDataHorizontalAlignment ( );
__declspec(implementation_key(3184)) void TableColumn::PutDataHorizontalAlignment ( enum TGFrameworkSupport::TextHorizontalAlignmentConstants _arg1 );
__declspec(implementation_key(3185)) enum TGFrameworkSupport::TextVerticalAlignmentConstants TableColumn::GetDataVerticalAlignment ( );
__declspec(implementation_key(3186)) void TableColumn::PutDataVerticalAlignment ( enum TGFrameworkSupport::TextVerticalAlignmentConstants _arg1 );
__declspec(implementation_key(3187)) VARIANT_BOOL TableColumn::GetDataFitToWidth ( );
__declspec(implementation_key(3188)) void TableColumn::PutDataFitToWidth ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3189)) _bstr_t TableColumn::GetPropertyText ( );
__declspec(implementation_key(3190)) void TableColumn::PutPropertyText ( _bstr_t _arg1 );
__declspec(implementation_key(3191)) VARIANT_BOOL TableColumn::GetDataMergeCellsWithSameValue ( );
__declspec(implementation_key(3192)) void TableColumn::PutDataMergeCellsWithSameValue ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3193)) _bstr_t TableColumn::GetHeaderRowFontName ( );
__declspec(implementation_key(3194)) void TableColumn::PutHeaderRowFontName ( _bstr_t _arg1 );
__declspec(implementation_key(3195)) enum TGFrameworkSupport::DimTextFontStyleConstants TableColumn::GetHeaderRowFontStyle ( );
__declspec(implementation_key(3196)) void TableColumn::PutHeaderRowFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants _arg1 );
__declspec(implementation_key(3197)) VARIANT_BOOL TableColumn::GetHeaderRowUnderline ( );
__declspec(implementation_key(3198)) void TableColumn::PutHeaderRowUnderline ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3199)) _bstr_t TableColumn::GetDataFontName ( );
__declspec(implementation_key(3200)) void TableColumn::PutDataFontName ( _bstr_t _arg1 );
__declspec(implementation_key(3201)) enum TGFrameworkSupport::DimTextFontStyleConstants TableColumn::GetDataFontStyle ( );
__declspec(implementation_key(3202)) void TableColumn::PutDataFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants _arg1 );
__declspec(implementation_key(3203)) VARIANT_BOOL TableColumn::GetDataUnderline ( );
__declspec(implementation_key(3204)) void TableColumn::PutDataUnderline ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3205)) double TableColumn::GetHeaderRowHeight ( );
__declspec(implementation_key(3206)) double TableColumn::GetHeaderRowFontSize ( );
__declspec(implementation_key(3207)) VARIANT_BOOL TableColumn::GetHeaderRowMergeWithNextVerticalCell ( );
__declspec(implementation_key(3208)) void TableColumn::PutHeaderRowMergeWithNextVerticalCell ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3209)) double TableColumn::GetDataFontSize ( );
__declspec(implementation_key(3210)) TGFramework::ApplicationPtr _ITableColumnsAuto::GetApplication ( );
__declspec(implementation_key(3211)) IDispatchPtr _ITableColumnsAuto::GetParent ( );
__declspec(implementation_key(3212)) long _ITableColumnsAuto::GetCount ( );
__declspec(implementation_key(3213)) TableColumnPtr _ITableColumnsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(3214)) IUnknownPtr _ITableColumnsAuto::Get_NewEnum ( );
__declspec(implementation_key(3215)) TableColumnPtr _ITableColumnsAuto::Add ( const _variant_t & Index, VARIANT_BOOL after );
__declspec(implementation_key(3216)) TGFramework::ApplicationPtr _ITableColumnAuto::GetApplication ( );
__declspec(implementation_key(3217)) IDispatchPtr _ITableColumnAuto::GetParent ( );
__declspec(implementation_key(3218)) HRESULT _ITableColumnAuto::Delete ( );
__declspec(implementation_key(3219)) enum TGFrameworkSupport::TextHorizontalAlignmentConstants _ITableColumnAuto::GetDataAlignment ( );
__declspec(implementation_key(3220)) void _ITableColumnAuto::PutDataAlignment ( enum TGFrameworkSupport::TextHorizontalAlignmentConstants DataAlignment );
__declspec(implementation_key(3221)) _bstr_t _ITableColumnAuto::GetHeader ( );
__declspec(implementation_key(3222)) void _ITableColumnAuto::PutHeader ( _bstr_t Header );
__declspec(implementation_key(3223)) enum TGFrameworkSupport::TextHorizontalAlignmentConstants _ITableColumnAuto::GetHeaderAlignment ( );
__declspec(implementation_key(3224)) void _ITableColumnAuto::PutHeaderAlignment ( enum TGFrameworkSupport::TextHorizontalAlignmentConstants HeaderAlignment );
__declspec(implementation_key(3225)) long _ITableColumnAuto::GetIndex ( );
__declspec(implementation_key(3226)) VARIANT_BOOL _ITableColumnAuto::GetShow ( );
__declspec(implementation_key(3227)) void _ITableColumnAuto::PutShow ( VARIANT_BOOL Show );
__declspec(implementation_key(3228)) VARIANT_BOOL _ITableColumnAuto::GetSortAscending ( );
__declspec(implementation_key(3229)) void _ITableColumnAuto::PutSortAscending ( VARIANT_BOOL SortAscending );
__declspec(implementation_key(3230)) long _ITableColumnAuto::GetSortPrecedence ( );
__declspec(implementation_key(3231)) void _ITableColumnAuto::PutSortPrecedence ( long SortPrecedence );
__declspec(implementation_key(3232)) double _ITableColumnAuto::GetWidth ( );
__declspec(implementation_key(3233)) void _ITableColumnAuto::PutWidth ( double Width );
__declspec(implementation_key(3234)) void _ITableColumnAuto::PutCurrentHeaderRow ( long _arg1 );
__declspec(implementation_key(3235)) _bstr_t _ITableColumnAuto::GetHeaderRowValue ( );
__declspec(implementation_key(3236)) void _ITableColumnAuto::PutHeaderRowValue ( _bstr_t HeaderRowValue );
__declspec(implementation_key(3237)) enum TGFrameworkSupport::TextHorizontalAlignmentConstants _ITableColumnAuto::GetHeaderRowHorizontalAlignment ( );
__declspec(implementation_key(3238)) void _ITableColumnAuto::PutHeaderRowHorizontalAlignment ( enum TGFrameworkSupport::TextHorizontalAlignmentConstants HeaderRowHorizontalAlignment );
__declspec(implementation_key(3239)) enum TGFrameworkSupport::TextVerticalAlignmentConstants _ITableColumnAuto::GetHeaderRowVerticalAlignment ( );
__declspec(implementation_key(3240)) void _ITableColumnAuto::PutHeaderRowVerticalAlignment ( enum TGFrameworkSupport::TextVerticalAlignmentConstants HeaderRowVerticalAlignment );
__declspec(implementation_key(3241)) enum TableTextOrientation _ITableColumnAuto::GetHeaderRowOrientation ( );
__declspec(implementation_key(3242)) void _ITableColumnAuto::PutHeaderRowOrientation ( enum TableTextOrientation HeaderRowOrientation );
__declspec(implementation_key(3243)) VARIANT_BOOL _ITableColumnAuto::GetHeaderRowFitToWidth ( );
__declspec(implementation_key(3244)) void _ITableColumnAuto::PutHeaderRowFitToWidth ( VARIANT_BOOL HeaderRowFitToWidth );
__declspec(implementation_key(3245)) VARIANT_BOOL _ITableColumnAuto::GetHeaderRowMergeWithNext ( );
__declspec(implementation_key(3246)) void _ITableColumnAuto::PutHeaderRowMergeWithNext ( VARIANT_BOOL HeaderRowMergeWithNext );
__declspec(implementation_key(3247)) enum TGFrameworkSupport::TextHorizontalAlignmentConstants _ITableColumnAuto::GetDataHorizontalAlignment ( );
__declspec(implementation_key(3248)) void _ITableColumnAuto::PutDataHorizontalAlignment ( enum TGFrameworkSupport::TextHorizontalAlignmentConstants DataHorizontalAlignment );
__declspec(implementation_key(3249)) enum TGFrameworkSupport::TextVerticalAlignmentConstants _ITableColumnAuto::GetDataVerticalAlignment ( );
__declspec(implementation_key(3250)) void _ITableColumnAuto::PutDataVerticalAlignment ( enum TGFrameworkSupport::TextVerticalAlignmentConstants DataVerticalAlignment );
__declspec(implementation_key(3251)) VARIANT_BOOL _ITableColumnAuto::GetDataFitToWidth ( );
__declspec(implementation_key(3252)) void _ITableColumnAuto::PutDataFitToWidth ( VARIANT_BOOL DataFitToWidth );
__declspec(implementation_key(3253)) _bstr_t _ITableColumnAuto::GetPropertyText ( );
__declspec(implementation_key(3254)) void _ITableColumnAuto::PutPropertyText ( _bstr_t PropertyText );
__declspec(implementation_key(3255)) VARIANT_BOOL _ITableColumnAuto::GetDataMergeCellsWithSameValue ( );
__declspec(implementation_key(3256)) void _ITableColumnAuto::PutDataMergeCellsWithSameValue ( VARIANT_BOOL DataMergeCellsWithSameValue );
__declspec(implementation_key(3257)) _bstr_t _ITableColumnAuto::GetHeaderRowFontName ( );
__declspec(implementation_key(3258)) void _ITableColumnAuto::PutHeaderRowFontName ( _bstr_t FontName );
__declspec(implementation_key(3259)) enum TGFrameworkSupport::DimTextFontStyleConstants _ITableColumnAuto::GetHeaderRowFontStyle ( );
__declspec(implementation_key(3260)) void _ITableColumnAuto::PutHeaderRowFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants FontStyle );
__declspec(implementation_key(3261)) VARIANT_BOOL _ITableColumnAuto::GetHeaderRowUnderline ( );
__declspec(implementation_key(3262)) void _ITableColumnAuto::PutHeaderRowUnderline ( VARIANT_BOOL Underline );
__declspec(implementation_key(3263)) _bstr_t _ITableColumnAuto::GetDataFontName ( );
__declspec(implementation_key(3264)) void _ITableColumnAuto::PutDataFontName ( _bstr_t FontName );
__declspec(implementation_key(3265)) enum TGFrameworkSupport::DimTextFontStyleConstants _ITableColumnAuto::GetDataFontStyle ( );
__declspec(implementation_key(3266)) void _ITableColumnAuto::PutDataFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants FontStyle );
__declspec(implementation_key(3267)) VARIANT_BOOL _ITableColumnAuto::GetDataUnderline ( );
__declspec(implementation_key(3268)) void _ITableColumnAuto::PutDataUnderline ( VARIANT_BOOL Underline );
__declspec(implementation_key(3269)) double _ITableColumnAuto::GetHeaderRowHeight ( );
__declspec(implementation_key(3270)) double _ITableColumnAuto::GetHeaderRowFontSize ( );
__declspec(implementation_key(3271)) VARIANT_BOOL _ITableColumnAuto::GetHeaderRowMergeWithNextVerticalCell ( );
__declspec(implementation_key(3272)) void _ITableColumnAuto::PutHeaderRowMergeWithNextVerticalCell ( VARIANT_BOOL HeaderRowMergeWithNextVerticalCell );
__declspec(implementation_key(3273)) double _ITableColumnAuto::GetDataFontSize ( );
__declspec(implementation_key(3274)) TGFramework::ApplicationPtr TableRows::GetApplication ( );
__declspec(implementation_key(3275)) IDispatchPtr TableRows::GetParent ( );
__declspec(implementation_key(3276)) long TableRows::GetCount ( );
__declspec(implementation_key(3277)) TableRowPtr TableRows::Item ( const _variant_t & Index );
__declspec(implementation_key(3278)) TableRowPtr TableRows::Add ( const _variant_t & Index, VARIANT_BOOL after );
__declspec(implementation_key(3279)) TGFramework::ApplicationPtr TableRow::GetApplication ( );
__declspec(implementation_key(3280)) IDispatchPtr TableRow::GetParent ( );
__declspec(implementation_key(3281)) HRESULT TableRow::Delete ( );
__declspec(implementation_key(3282)) long TableRow::GetIndex ( );
__declspec(implementation_key(3283)) ModelNodePtr TableRow::GetModelNode ( );
__declspec(implementation_key(3284)) VARIANT_BOOL TableRow::GetHideRow ( );
__declspec(implementation_key(3285)) void TableRow::PutHideRow ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3286)) double TableRow::GetRowHeight ( );
__declspec(implementation_key(3287)) TGFramework::ApplicationPtr _ITableRowsAuto::GetApplication ( );
__declspec(implementation_key(3288)) IDispatchPtr _ITableRowsAuto::GetParent ( );
__declspec(implementation_key(3289)) long _ITableRowsAuto::GetCount ( );
__declspec(implementation_key(3290)) TableRowPtr _ITableRowsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(3291)) IUnknownPtr _ITableRowsAuto::Get_NewEnum ( );
__declspec(implementation_key(3292)) TableRowPtr _ITableRowsAuto::Add ( const _variant_t & Index, VARIANT_BOOL after );
__declspec(implementation_key(3293)) TGFramework::ApplicationPtr _ITableRowAuto::GetApplication ( );
__declspec(implementation_key(3294)) IDispatchPtr _ITableRowAuto::GetParent ( );
__declspec(implementation_key(3295)) HRESULT _ITableRowAuto::Delete ( );
__declspec(implementation_key(3296)) long _ITableRowAuto::GetIndex ( );
__declspec(implementation_key(3297)) ModelNodePtr _ITableRowAuto::GetModelNode ( );
__declspec(implementation_key(3298)) VARIANT_BOOL _ITableRowAuto::GetHideRow ( );
__declspec(implementation_key(3299)) void _ITableRowAuto::PutHideRow ( VARIANT_BOOL HideRow );
__declspec(implementation_key(3300)) double _ITableRowAuto::GetRowHeight ( );
__declspec(implementation_key(3301)) TGFramework::ApplicationPtr TableTitles::GetApplication ( );
__declspec(implementation_key(3302)) IDispatchPtr TableTitles::GetParent ( );
__declspec(implementation_key(3303)) long TableTitles::GetCount ( );
__declspec(implementation_key(3304)) TableTitlePtr TableTitles::Item ( const _variant_t & Index );
__declspec(implementation_key(3305)) TableTitlePtr TableTitles::Add ( );
__declspec(implementation_key(3306)) TGFramework::ApplicationPtr TableTitle::GetApplication ( );
__declspec(implementation_key(3307)) IDispatchPtr TableTitle::GetParent ( );
__declspec(implementation_key(3308)) HRESULT TableTitle::Delete ( );
__declspec(implementation_key(3309)) long TableTitle::GetIndex ( );
__declspec(implementation_key(3310)) enum TitlePosition TableTitle::GetPosition ( );
__declspec(implementation_key(3311)) void TableTitle::PutPosition ( enum TitlePosition _arg1 );
__declspec(implementation_key(3312)) _bstr_t TableTitle::Getvalue ( );
__declspec(implementation_key(3313)) void TableTitle::Putvalue ( _bstr_t _arg1 );
__declspec(implementation_key(3314)) enum TGFrameworkSupport::TextHorizontalAlignmentConstants TableTitle::GetAlignment ( );
__declspec(implementation_key(3315)) void TableTitle::PutAlignment ( enum TGFrameworkSupport::TextHorizontalAlignmentConstants _arg1 );
__declspec(implementation_key(3316)) VARIANT_BOOL TableTitle::GetFitToWidth ( );
__declspec(implementation_key(3317)) void TableTitle::PutFitToWidth ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3318)) _bstr_t TableTitle::GetFontName ( );
__declspec(implementation_key(3319)) void TableTitle::PutFontName ( _bstr_t _arg1 );
__declspec(implementation_key(3320)) enum TGFrameworkSupport::DimTextFontStyleConstants TableTitle::GetFontStyle ( );
__declspec(implementation_key(3321)) void TableTitle::PutFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants _arg1 );
__declspec(implementation_key(3322)) double TableTitle::GetFontSize ( );
__declspec(implementation_key(3323)) void TableTitle::PutFontSize ( double _arg1 );
__declspec(implementation_key(3324)) double TableTitle::GetRowHeight ( );
__declspec(implementation_key(3325)) VARIANT_BOOL TableTitle::GetUnderline ( );
__declspec(implementation_key(3326)) TGFramework::ApplicationPtr _ITableTitlesAuto::GetApplication ( );
__declspec(implementation_key(3327)) IDispatchPtr _ITableTitlesAuto::GetParent ( );
__declspec(implementation_key(3328)) long _ITableTitlesAuto::GetCount ( );
__declspec(implementation_key(3329)) TableTitlePtr _ITableTitlesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(3330)) IUnknownPtr _ITableTitlesAuto::Get_NewEnum ( );
__declspec(implementation_key(3331)) TableTitlePtr _ITableTitlesAuto::Add ( );
__declspec(implementation_key(3332)) TGFramework::ApplicationPtr _ITableTitleAuto::GetApplication ( );
__declspec(implementation_key(3333)) IDispatchPtr _ITableTitleAuto::GetParent ( );
__declspec(implementation_key(3334)) HRESULT _ITableTitleAuto::Delete ( );
__declspec(implementation_key(3335)) long _ITableTitleAuto::GetIndex ( );
__declspec(implementation_key(3336)) enum TitlePosition _ITableTitleAuto::GetPosition ( );
__declspec(implementation_key(3337)) void _ITableTitleAuto::PutPosition ( enum TitlePosition Position );
__declspec(implementation_key(3338)) _bstr_t _ITableTitleAuto::Getvalue ( );
__declspec(implementation_key(3339)) void _ITableTitleAuto::Putvalue ( _bstr_t value );
__declspec(implementation_key(3340)) enum TGFrameworkSupport::TextHorizontalAlignmentConstants _ITableTitleAuto::GetAlignment ( );
__declspec(implementation_key(3341)) void _ITableTitleAuto::PutAlignment ( enum TGFrameworkSupport::TextHorizontalAlignmentConstants Alignment );
__declspec(implementation_key(3342)) VARIANT_BOOL _ITableTitleAuto::GetFitToWidth ( );
__declspec(implementation_key(3343)) void _ITableTitleAuto::PutFitToWidth ( VARIANT_BOOL FitToWidth );
__declspec(implementation_key(3344)) _bstr_t _ITableTitleAuto::GetFontName ( );
__declspec(implementation_key(3345)) void _ITableTitleAuto::PutFontName ( _bstr_t FontName );
__declspec(implementation_key(3346)) enum TGFrameworkSupport::DimTextFontStyleConstants _ITableTitleAuto::GetFontStyle ( );
__declspec(implementation_key(3347)) void _ITableTitleAuto::PutFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants FontStyle );
__declspec(implementation_key(3348)) double _ITableTitleAuto::GetFontSize ( );
__declspec(implementation_key(3349)) void _ITableTitleAuto::PutFontSize ( double FontSize );
__declspec(implementation_key(3350)) double _ITableTitleAuto::GetRowHeight ( );
__declspec(implementation_key(3351)) VARIANT_BOOL _ITableTitleAuto::GetUnderline ( );
__declspec(implementation_key(3352)) TGFramework::ApplicationPtr TablePages::GetApplication ( );
__declspec(implementation_key(3353)) IDispatchPtr TablePages::GetParent ( );
__declspec(implementation_key(3354)) long TablePages::GetCount ( );
__declspec(implementation_key(3355)) TablePagePtr TablePages::Item ( const _variant_t & Index );
__declspec(implementation_key(3356)) TGFramework::ApplicationPtr TablePage::GetApplication ( );
__declspec(implementation_key(3357)) IDispatchPtr TablePage::GetParent ( );
__declspec(implementation_key(3358)) HRESULT TablePage::GetOrigin ( double * x, double * y );
__declspec(implementation_key(3359)) HRESULT TablePage::SetOrigin ( double x, double y );
__declspec(implementation_key(3360)) _bstr_t TablePage::GetSheet ( );
__declspec(implementation_key(3361)) void TablePage::PutSheet ( _bstr_t _arg1 );
__declspec(implementation_key(3362)) double TablePage::GetHeight ( );
__declspec(implementation_key(3363)) double TablePage::GetWidth ( );
__declspec(implementation_key(3364)) double TablePage::GetRotationAngle ( );
__declspec(implementation_key(3365)) void TablePage::PutRotationAngle ( double _arg1 );
__declspec(implementation_key(3366)) _bstr_t TablePage::GetLayer ( );
__declspec(implementation_key(3367)) void TablePage::PutLayer ( _bstr_t _arg1 );
__declspec(implementation_key(3368)) TGFramework::ApplicationPtr _ITablePagesAuto::GetApplication ( );
__declspec(implementation_key(3369)) IDispatchPtr _ITablePagesAuto::GetParent ( );
__declspec(implementation_key(3370)) long _ITablePagesAuto::GetCount ( );
__declspec(implementation_key(3371)) TablePagePtr _ITablePagesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(3372)) IUnknownPtr _ITablePagesAuto::Get_NewEnum ( );
__declspec(implementation_key(3373)) TGFramework::ApplicationPtr _ITablePageAuto::GetApplication ( );
__declspec(implementation_key(3374)) IDispatchPtr _ITablePageAuto::GetParent ( );
__declspec(implementation_key(3375)) HRESULT _ITablePageAuto::GetOrigin ( double * x, double * y );
__declspec(implementation_key(3376)) HRESULT _ITablePageAuto::SetOrigin ( double x, double y );
__declspec(implementation_key(3377)) _bstr_t _ITablePageAuto::GetSheet ( );
__declspec(implementation_key(3378)) void _ITablePageAuto::PutSheet ( _bstr_t value );
__declspec(implementation_key(3379)) double _ITablePageAuto::GetHeight ( );
__declspec(implementation_key(3380)) double _ITablePageAuto::GetWidth ( );
__declspec(implementation_key(3381)) double _ITablePageAuto::GetRotationAngle ( );
__declspec(implementation_key(3382)) void _ITablePageAuto::PutRotationAngle ( double value );
__declspec(implementation_key(3383)) _bstr_t _ITablePageAuto::GetLayer ( );
__declspec(implementation_key(3384)) void _ITablePageAuto::PutLayer ( _bstr_t Layer );
__declspec(implementation_key(3385)) TGFramework::ApplicationPtr TableGroups::GetApplication ( );
__declspec(implementation_key(3386)) IDispatchPtr TableGroups::GetParent ( );
__declspec(implementation_key(3387)) long TableGroups::GetCount ( );
__declspec(implementation_key(3388)) TableGroupPtr TableGroups::Item ( const _variant_t & Index );
__declspec(implementation_key(3389)) TableGroupPtr TableGroups::Add ( );
__declspec(implementation_key(3390)) TGFramework::ApplicationPtr TableGroup::GetApplication ( );
__declspec(implementation_key(3391)) IDispatchPtr TableGroup::GetParent ( );
__declspec(implementation_key(3392)) _bstr_t TableGroup::GetName ( );
__declspec(implementation_key(3393)) void TableGroup::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(3394)) _bstr_t TableGroup::Getvalue ( );
__declspec(implementation_key(3395)) void TableGroup::Putvalue ( _bstr_t _arg1 );
__declspec(implementation_key(3396)) long TableGroup::GetSortByColumn ( );
__declspec(implementation_key(3397)) void TableGroup::PutSortByColumn ( long _arg1 );
__declspec(implementation_key(3398)) VARIANT_BOOL TableGroup::GetSortAscending ( );
__declspec(implementation_key(3399)) void TableGroup::PutSortAscending ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3400)) VARIANT_BOOL TableGroup::GetShowHeader ( );
__declspec(implementation_key(3401)) void TableGroup::PutShowHeader ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3402)) long TableGroup::GetNumberOfHeaderRows ( );
__declspec(implementation_key(3403)) void TableGroup::PutNumberOfHeaderRows ( long _arg1 );
__declspec(implementation_key(3404)) TableCellPtr TableGroup::GetHeaderCell ( const _variant_t & HeaderRowIndex, const _variant_t & ColumnIndex );
__declspec(implementation_key(3405)) TGFramework::ApplicationPtr _ITableGroupsAuto::GetApplication ( );
__declspec(implementation_key(3406)) IDispatchPtr _ITableGroupsAuto::GetParent ( );
__declspec(implementation_key(3407)) long _ITableGroupsAuto::GetCount ( );
__declspec(implementation_key(3408)) TableGroupPtr _ITableGroupsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(3409)) IUnknownPtr _ITableGroupsAuto::Get_NewEnum ( );
__declspec(implementation_key(3410)) TableGroupPtr _ITableGroupsAuto::Add ( );
__declspec(implementation_key(3411)) TGFramework::ApplicationPtr _ITableGroupAuto::GetApplication ( );
__declspec(implementation_key(3412)) IDispatchPtr _ITableGroupAuto::GetParent ( );
__declspec(implementation_key(3413)) _bstr_t _ITableGroupAuto::GetName ( );
__declspec(implementation_key(3414)) void _ITableGroupAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(3415)) _bstr_t _ITableGroupAuto::Getvalue ( );
__declspec(implementation_key(3416)) void _ITableGroupAuto::Putvalue ( _bstr_t value );
__declspec(implementation_key(3417)) long _ITableGroupAuto::GetSortByColumn ( );
__declspec(implementation_key(3418)) void _ITableGroupAuto::PutSortByColumn ( long ColumnIndex );
__declspec(implementation_key(3419)) VARIANT_BOOL _ITableGroupAuto::GetSortAscending ( );
__declspec(implementation_key(3420)) void _ITableGroupAuto::PutSortAscending ( VARIANT_BOOL SortAscending );
__declspec(implementation_key(3421)) VARIANT_BOOL _ITableGroupAuto::GetShowHeader ( );
__declspec(implementation_key(3422)) void _ITableGroupAuto::PutShowHeader ( VARIANT_BOOL ShowHeader );
__declspec(implementation_key(3423)) long _ITableGroupAuto::GetNumberOfHeaderRows ( );
__declspec(implementation_key(3424)) void _ITableGroupAuto::PutNumberOfHeaderRows ( long NumberOfHeaderRows );
__declspec(implementation_key(3425)) TableCellPtr _ITableGroupAuto::GetHeaderCell ( const _variant_t & HeaderRowIndex, const _variant_t & ColumnIndex );
__declspec(implementation_key(3426)) TGFramework::ApplicationPtr _IPartsListAuto::GetApplication ( );
__declspec(implementation_key(3427)) _bstr_t _IPartsListAuto::GetAssemblyFileName ( );
__declspec(implementation_key(3428)) IDispatchPtr _IPartsListAuto::GetParent ( );
__declspec(implementation_key(3429)) HRESULT _IPartsListAuto::Update ( );
__declspec(implementation_key(3430)) HRESULT _IPartsListAuto::CopyToClipboard ( );
__declspec(implementation_key(3431)) ModelLinkPtr _IPartsListAuto::GetModelLink ( );
__declspec(implementation_key(3432)) HRESULT _IPartsListAuto::Delete ( );
__declspec(implementation_key(3433)) void _IPartsListAuto::PutSavedSettings ( _bstr_t _arg1 );
__declspec(implementation_key(3434)) HRESULT _IPartsListAuto::SetOrigin ( double x, double y );
__declspec(implementation_key(3435)) HRESULT _IPartsListAuto::GetOrigin ( double * x, double * y );
__declspec(implementation_key(3436)) HRESULT _IPartsListAuto::GetListOfSavedSettings ( long * NumSavedSettings, SAFEARRAY * * ListOfSavedSettings );
__declspec(implementation_key(3437)) VARIANT_BOOL _IPartsListAuto::GetIsUpToDate ( );
__declspec(implementation_key(3438)) TableCellPtr _IPartsListAuto::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex );
__declspec(implementation_key(3439)) enum TitlePosition _IPartsListAuto::GetColumnHeaderPosition ( );
__declspec(implementation_key(3440)) void _IPartsListAuto::PutColumnHeaderPosition ( enum TitlePosition ColumnHeaderPosition );
__declspec(implementation_key(3441)) TableColumnsPtr _IPartsListAuto::GetColumns ( );
__declspec(implementation_key(3442)) double _IPartsListAuto::GetMargin ( );
__declspec(implementation_key(3443)) void _IPartsListAuto::PutMargin ( double Margin );
__declspec(implementation_key(3444)) long _IPartsListAuto::GetMaximumRows ( );
__declspec(implementation_key(3445)) void _IPartsListAuto::PutMaximumRows ( long MaximumRows );
__declspec(implementation_key(3446)) double _IPartsListAuto::GetPageGap ( );
__declspec(implementation_key(3447)) void _IPartsListAuto::PutPageGap ( double PageGap );
__declspec(implementation_key(3448)) VARIANT_BOOL _IPartsListAuto::GetReverseDisplayOrder ( );
__declspec(implementation_key(3449)) void _IPartsListAuto::PutReverseDisplayOrder ( VARIANT_BOOL ReverseDisplayOrder );
__declspec(implementation_key(3450)) TableRowsPtr _IPartsListAuto::GetRows ( );
__declspec(implementation_key(3451)) VARIANT_BOOL _IPartsListAuto::GetShowColumnHeader ( );
__declspec(implementation_key(3452)) void _IPartsListAuto::PutShowColumnHeader ( VARIANT_BOOL ShowColumnHeader );
__declspec(implementation_key(3453)) _bstr_t _IPartsListAuto::GetTableStyle ( );
__declspec(implementation_key(3454)) void _IPartsListAuto::PutTableStyle ( _bstr_t TableStyle );
__declspec(implementation_key(3455)) TableTitlesPtr _IPartsListAuto::GetTitles ( );
__declspec(implementation_key(3456)) enum TableAnchorPoint _IPartsListAuto::GetAnchorPoint ( );
__declspec(implementation_key(3457)) void _IPartsListAuto::PutAnchorPoint ( enum TableAnchorPoint AnchorPoint );
__declspec(implementation_key(3458)) TablePagesPtr _IPartsListAuto::GetPages ( );
__declspec(implementation_key(3459)) double _IPartsListAuto::GetHeaderFixedRowHeight ( );
__declspec(implementation_key(3460)) void _IPartsListAuto::PutHeaderFixedRowHeight ( double HeaderFixedRowHeight );
__declspec(implementation_key(3461)) double _IPartsListAuto::GetDataFixedRowHeight ( );
__declspec(implementation_key(3462)) void _IPartsListAuto::PutDataFixedRowHeight ( double DataFixedRowHeight );
__declspec(implementation_key(3463)) double _IPartsListAuto::GetMaximumHeight ( );
__declspec(implementation_key(3464)) void _IPartsListAuto::PutMaximumHeight ( double MaximumHeight );
__declspec(implementation_key(3465)) HRESULT _IPartsListAuto::ConvertToTable ( );
__declspec(implementation_key(3466)) enum PartsListType _IPartsListAuto::GetListType ( );
__declspec(implementation_key(3467)) void _IPartsListAuto::PutListType ( enum PartsListType ListType );
__declspec(implementation_key(3468)) VARIANT_BOOL _IPartsListAuto::GetUseAssemblyItemNumbers ( );
__declspec(implementation_key(3469)) void _IPartsListAuto::PutUseAssemblyItemNumbers ( VARIANT_BOOL UseAssemblyItemNumbers );
__declspec(implementation_key(3470)) VARIANT_BOOL _IPartsListAuto::GetShowTopAssembly ( );
__declspec(implementation_key(3471)) void _IPartsListAuto::PutShowTopAssembly ( VARIANT_BOOL ShowTopAssembly );
__declspec(implementation_key(3472)) VARIANT_BOOL _IPartsListAuto::GetUseLevelBasedItemNumbers ( );
__declspec(implementation_key(3473)) void _IPartsListAuto::PutUseLevelBasedItemNumbers ( VARIANT_BOOL UseLevelBasedItemNumbers );
__declspec(implementation_key(3474)) long _IPartsListAuto::GetNumberOfHeaderRows ( );
__declspec(implementation_key(3475)) void _IPartsListAuto::PutNumberOfHeaderRows ( long NumberOfHeaderRows );
__declspec(implementation_key(3476)) long _IPartsListAuto::GetMaximumRowsFirstPage ( );
__declspec(implementation_key(3477)) void _IPartsListAuto::PutMaximumRowsFirstPage ( long MaximumRowsFirstPage );
__declspec(implementation_key(3478)) long _IPartsListAuto::GetMaximumRowsAdditionalPages ( );
__declspec(implementation_key(3479)) void _IPartsListAuto::PutMaximumRowsAdditionalPages ( long MaximumRowsAdditionalPages );
__declspec(implementation_key(3480)) double _IPartsListAuto::GetMaximumHeightFirstPage ( );
__declspec(implementation_key(3481)) void _IPartsListAuto::PutMaximumHeightFirstPage ( double MaximumHeightFirstPage );
__declspec(implementation_key(3482)) double _IPartsListAuto::GetMaximumHeightAdditionalPages ( );
__declspec(implementation_key(3483)) void _IPartsListAuto::PutMaximumHeightAdditionalPages ( double MaximumHeightAdditionalPages );
__declspec(implementation_key(3484)) VARIANT_BOOL _IPartsListAuto::GetCreateNewSheetsForTable ( );
__declspec(implementation_key(3485)) void _IPartsListAuto::PutCreateNewSheetsForTable ( VARIANT_BOOL CreateNewSheetsForTable );
__declspec(implementation_key(3486)) _bstr_t _IPartsListAuto::GetFirstSheetBackgroundName ( );
__declspec(implementation_key(3487)) void _IPartsListAuto::PutFirstSheetBackgroundName ( _bstr_t FirstSheetBackgroundName );
__declspec(implementation_key(3488)) _bstr_t _IPartsListAuto::GetAdditionalSheetsBackgroundName ( );
__declspec(implementation_key(3489)) void _IPartsListAuto::PutAdditionalSheetsBackgroundName ( _bstr_t AdditionalSheetsBackgroundName );
__declspec(implementation_key(3490)) VARIANT_BOOL _IPartsListAuto::GetShowSheetBackground ( );
__declspec(implementation_key(3491)) void _IPartsListAuto::PutShowSheetBackground ( VARIANT_BOOL ShowSheetBackground );
__declspec(implementation_key(3492)) VARIANT_BOOL _IPartsListAuto::GetMaintainSheetsWithTableSize ( );
__declspec(implementation_key(3493)) void _IPartsListAuto::PutMaintainSheetsWithTableSize ( VARIANT_BOOL MaintainSheetsWithTableSize );
__declspec(implementation_key(3494)) VARIANT_BOOL _IPartsListAuto::GetEnableGroups ( );
__declspec(implementation_key(3495)) void _IPartsListAuto::PutEnableGroups ( VARIANT_BOOL EnableGroups );
__declspec(implementation_key(3496)) TableGroupsPtr _IPartsListAuto::GetGroups ( );
__declspec(implementation_key(3497)) VARIANT_BOOL _IPartsListAuto::GetWrapDataCellsToNewRow ( );
__declspec(implementation_key(3498)) void _IPartsListAuto::PutWrapDataCellsToNewRow ( VARIANT_BOOL WrapDataCellsToNewRow );
__declspec(implementation_key(3499)) VARIANT_BOOL _IPartsListAuto::GetFillEndOfTableWithBlankRows ( );
__declspec(implementation_key(3500)) void _IPartsListAuto::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL FillEndOfTableWithBlankRows );
__declspec(implementation_key(3501)) long _IPartsListAuto::GetGroupByColumn ( );
__declspec(implementation_key(3502)) void _IPartsListAuto::PutGroupByColumn ( long ColumnIndex );
__declspec(implementation_key(3503)) VARIANT_BOOL _IPartsListAuto::GetActive ( );
__declspec(implementation_key(3504)) void _IPartsListAuto::PutActive ( VARIANT_BOOL Active );
__declspec(implementation_key(3505)) long _IPartsListAuto::GetItemNumberStart ( );
__declspec(implementation_key(3506)) void _IPartsListAuto::PutItemNumberStart ( long ItemNumberStart );
__declspec(implementation_key(3507)) long _IPartsListAuto::GetItemNumberIncrement ( );
__declspec(implementation_key(3508)) void _IPartsListAuto::PutItemNumberIncrement ( long ItemNumberIncrement );
__declspec(implementation_key(3509)) VARIANT_BOOL _IPartsListAuto::GetMarkUnballoonedItems ( );
__declspec(implementation_key(3510)) void _IPartsListAuto::PutMarkUnballoonedItems ( VARIANT_BOOL MarkUnballoonedItems );
__declspec(implementation_key(3511)) _bstr_t _IPartsListAuto::GetMarkUnballoonedItemsString ( );
__declspec(implementation_key(3512)) void _IPartsListAuto::PutMarkUnballoonedItemsString ( _bstr_t MarkUnballoonedItemsString );
__declspec(implementation_key(3513)) VARIANT_BOOL _IPartsListAuto::GetRenumberAccordingToSortOrder ( );
__declspec(implementation_key(3514)) void _IPartsListAuto::PutRenumberAccordingToSortOrder ( VARIANT_BOOL RenumberAccordingToSortOrder );
__declspec(implementation_key(3515)) VARIANT_BOOL _IPartsListAuto::GetConvertDeletedPartsIntoUserDefinedRows ( );
__declspec(implementation_key(3516)) void _IPartsListAuto::PutConvertDeletedPartsIntoUserDefinedRows ( VARIANT_BOOL ConvertDeletedPartsIntoUserDefinedRows );
__declspec(implementation_key(3517)) _bstr_t _IPartsListAuto::GetConfiguration ( );
__declspec(implementation_key(3518)) void _IPartsListAuto::PutConfiguration ( _bstr_t Configuration );
__declspec(implementation_key(3519)) VARIANT_BOOL _IPartsListAuto::GetExpandWeldmentSubAssemblies ( );
__declspec(implementation_key(3520)) void _IPartsListAuto::PutExpandWeldmentSubAssemblies ( VARIANT_BOOL ExpandWeldmentSubAssemblies );
__declspec(implementation_key(3521)) VARIANT_BOOL _IPartsListAuto::GetUseUniquenessCriteria_CutLength ( );
__declspec(implementation_key(3522)) void _IPartsListAuto::PutUseUniquenessCriteria_CutLength ( VARIANT_BOOL UseUniquenessCriteria_CutLength );
__declspec(implementation_key(3523)) VARIANT_BOOL _IPartsListAuto::GetUseUniquenessCriteria_Mass ( );
__declspec(implementation_key(3524)) void _IPartsListAuto::PutUseUniquenessCriteria_Mass ( VARIANT_BOOL UseUniquenessCriteria_Mass );
__declspec(implementation_key(3525)) VARIANT_BOOL _IPartsListAuto::GetUseUniquenessCriteria_Miter ( );
__declspec(implementation_key(3526)) void _IPartsListAuto::PutUseUniquenessCriteria_Miter ( VARIANT_BOOL UseUniquenessCriteria_Miter );
__declspec(implementation_key(3527)) VARIANT_BOOL _IPartsListAuto::GetMarkAmbiguousValues ( );
__declspec(implementation_key(3528)) void _IPartsListAuto::PutMarkAmbiguousValues ( VARIANT_BOOL MarkAmbiguousValues );
__declspec(implementation_key(3529)) _bstr_t _IPartsListAuto::GetMarkAmbiguousValuesString ( );
__declspec(implementation_key(3530)) void _IPartsListAuto::PutMarkAmbiguousValuesString ( _bstr_t MarkAmbiguousValuesString );
__declspec(implementation_key(3531)) VARIANT_BOOL _IPartsListAuto::GetNonPlanerValues ( );
__declspec(implementation_key(3532)) void _IPartsListAuto::PutNonPlanerValues ( VARIANT_BOOL NonPlanerValues );
__declspec(implementation_key(3533)) _bstr_t _IPartsListAuto::GetNonPlanerValuesString ( );
__declspec(implementation_key(3534)) void _IPartsListAuto::PutNonPlanerValuesString ( _bstr_t NonPlanerValuesString );
__declspec(implementation_key(3535)) enum PartListEndAngleRepresentationType _IPartsListAuto::GetEndAngleRepresentation ( );
__declspec(implementation_key(3536)) void _IPartsListAuto::PutEndAngleRepresentation ( enum PartListEndAngleRepresentationType EndAngleRepresentation );
__declspec(implementation_key(3537)) VARIANT_BOOL _IPartsListAuto::GetUseUniquenessCriteria_AngleOrientation ( );
__declspec(implementation_key(3538)) void _IPartsListAuto::PutUseUniquenessCriteria_AngleOrientation ( VARIANT_BOOL UseUniquenessCriteria_AngleOrientation );
__declspec(implementation_key(3539)) VARIANT_BOOL _IPartsListAuto::GetTotalLengthPartsList ( );
__declspec(implementation_key(3540)) void _IPartsListAuto::PutTotalLengthPartsList ( VARIANT_BOOL TotalLengthPartsList );
__declspec(implementation_key(3541)) _bstr_t _IPartsListAuto::GetTotalLengthPartsList_ItemNumberSeparator ( );
__declspec(implementation_key(3542)) void _IPartsListAuto::PutTotalLengthPartsList_ItemNumberSeparator ( _bstr_t TotalLengthPartsList_ItemNumberSeparator );
__declspec(implementation_key(3543)) HRESULT _IPartsListAuto::SetShowComponent ( enum PartsListComponentType ComponentType, VARIANT_BOOL ShowComponent );
__declspec(implementation_key(3544)) HRESULT _IPartsListAuto::SetComponentSortPriority ( enum PartsListComponentType ComponentType, long ComponentSortPriority );
__declspec(implementation_key(3545)) double _IPartsListAuto::GetPipeRoughCutEndClearance ( );
__declspec(implementation_key(3546)) void _IPartsListAuto::PutPipeRoughCutEndClearance ( double PipeRoughCutEndClearance );
__declspec(implementation_key(3547)) double _IPartsListAuto::GetFrameRoughCutEndClearance ( );
__declspec(implementation_key(3548)) void _IPartsListAuto::PutFrameRoughCutEndClearance ( double FrameRoughCutEndClearance );
__declspec(implementation_key(3549)) double _IPartsListAuto::GetTitleFixedRowHeight ( );
__declspec(implementation_key(3550)) void _IPartsListAuto::PutTitleFixedRowHeight ( double TitleFixedRowHeight );
__declspec(implementation_key(3551)) double _IPartsListAuto::GetMarginHorizontal ( );
__declspec(implementation_key(3552)) void _IPartsListAuto::PutMarginHorizontal ( double MarginHorizontal );
__declspec(implementation_key(3553)) double _IPartsListAuto::GetMarginVertical ( );
__declspec(implementation_key(3554)) void _IPartsListAuto::PutMarginVertical ( double MarginVertical );
__declspec(implementation_key(3555)) VARIANT_BOOL _IPartsListAuto::GetUseUniquenessCriteria_TubeFlatLength ( );
__declspec(implementation_key(3556)) void _IPartsListAuto::PutUseUniquenessCriteria_TubeFlatLength ( VARIANT_BOOL UseUniquenessCriteria_TubeFlatLength );
__declspec(implementation_key(3557)) VARIANT_BOOL _IPartsListAuto::GetUseUniquenessCriteria_TubeMass ( );
__declspec(implementation_key(3558)) void _IPartsListAuto::PutUseUniquenessCriteria_TubeMass ( VARIANT_BOOL UseUniquenessCriteria_TubeMass );
__declspec(implementation_key(3559)) VARIANT_BOOL _IPartsListAuto::GetMarkAmbiguousValuesForTube ( );
__declspec(implementation_key(3560)) void _IPartsListAuto::PutMarkAmbiguousValuesForTube ( VARIANT_BOOL MarkAmbiguousValuesForTube );
__declspec(implementation_key(3561)) _bstr_t _IPartsListAuto::GetMarkAmbiguousValuesStringForTube ( );
__declspec(implementation_key(3562)) void _IPartsListAuto::PutMarkAmbiguousValuesStringForTube ( _bstr_t MarkAmbiguousValuesStringForTube );
__declspec(implementation_key(3563)) VARIANT_BOOL _IPartsListAuto::GetZeroQuantity ( );
__declspec(implementation_key(3564)) void _IPartsListAuto::PutZeroQuantity ( VARIANT_BOOL ZeroQuantityValues );
__declspec(implementation_key(3565)) _bstr_t _IPartsListAuto::GetZeroQuantityString ( );
__declspec(implementation_key(3566)) void _IPartsListAuto::PutZeroQuantityString ( _bstr_t ZeroQuantityString );
__declspec(implementation_key(3567)) VARIANT_BOOL _IPartsListAuto::IsFamilyOfAssemblyPartsList ( );
__declspec(implementation_key(3568)) HRESULT _IPartsListAuto::GetAllFamilyOfAssemblyPartsListMembers ( struct DrawingView * DrawingView, long * NumOfMembers, SAFEARRAY * * ListOfMembers );
__declspec(implementation_key(3569)) HRESULT _IPartsListAuto::GetSelectedFamilyOfAssemblyPartsListMembers ( long * NumOfMembers, SAFEARRAY * * ListOfMembers );
__declspec(implementation_key(3570)) HRESULT _IPartsListAuto::SetSelectedFamilyOfAssemblyPartsListMembers ( long * NumOfMembers, SAFEARRAY * * ListOfMembers );
__declspec(implementation_key(3571)) _bstr_t _IPartsListAuto::GetName ( );
__declspec(implementation_key(3572)) HRESULT _IPartsListAuto::GetUniquenessCriteria_Gusset ( VARIANT_BOOL * UseGussetMass, enum GussetPlateUniquenessCriteria * GussetPlateUniquenessCriteriaType );
__declspec(implementation_key(3573)) HRESULT _IPartsListAuto::SetUniquenessCriteria_Gusset ( VARIANT_BOOL UseGussetMass, enum GussetPlateUniquenessCriteria GussetPlateUniquenessCriteriaType );
__declspec(implementation_key(3574)) HRESULT _IPartsListAuto::GetGussetPlateNamingFormat ( BSTR * Name, enum GussetPlateNamingFormat * GussetPlateNamingFormat_Param1, enum GussetPlateNamingFormat * GussetPlateNamingFormat_Param2, enum GussetPlateNamingFormat * GussetPlateNamingFormat_Param3 );
__declspec(implementation_key(3575)) HRESULT _IPartsListAuto::SetGussetPlateNamingFormat ( _bstr_t Name, enum GussetPlateNamingFormat GussetPlateNamingFormat_Param1, enum GussetPlateNamingFormat GussetPlateNamingFormat_Param2, enum GussetPlateNamingFormat GussetPlateNamingFormat_Param3 );
__declspec(implementation_key(3576)) VARIANT_BOOL _IPartsListAuto::IsTableSpecifiedByHeight ( );
__declspec(implementation_key(3577)) TGFramework::ApplicationPtr HoleTables::GetApplication ( );
__declspec(implementation_key(3578)) IDispatchPtr HoleTables::GetParent ( );
__declspec(implementation_key(3579)) long HoleTables::GetCount ( );
__declspec(implementation_key(3580)) HoleTablePtr HoleTables::Item ( const _variant_t & Index );
__declspec(implementation_key(3581)) TGFramework::ApplicationPtr HoleTable::GetApplication ( );
__declspec(implementation_key(3582)) IDispatchPtr HoleTable::GetParent ( );
__declspec(implementation_key(3583)) HTHolesPtr HoleTable::GetHoles ( );
__declspec(implementation_key(3584)) HRESULT HoleTable::Update ( );
__declspec(implementation_key(3585)) HRESULT HoleTable::Delete ( );
__declspec(implementation_key(3586)) void HoleTable::PutSavedSettings ( _bstr_t _arg1 );
__declspec(implementation_key(3587)) TGFramework::ApplicationPtr _IHoleTablesAuto::GetApplication ( );
__declspec(implementation_key(3588)) IDispatchPtr _IHoleTablesAuto::GetParent ( );
__declspec(implementation_key(3589)) long _IHoleTablesAuto::GetCount ( );
__declspec(implementation_key(3590)) HoleTablePtr _IHoleTablesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(3591)) IUnknownPtr _IHoleTablesAuto::Get_NewEnum ( );
__declspec(implementation_key(3592)) TGFramework::ApplicationPtr HTHoles::GetApplication ( );
__declspec(implementation_key(3593)) IDispatchPtr HTHoles::GetParent ( );
__declspec(implementation_key(3594)) long HTHoles::GetCount ( );
__declspec(implementation_key(3595)) HTHolePtr HTHoles::Item ( const _variant_t & Index );
__declspec(implementation_key(3596)) TGFramework::ApplicationPtr _IHoleTableAuto::GetApplication ( );
__declspec(implementation_key(3597)) IDispatchPtr _IHoleTableAuto::GetParent ( );
__declspec(implementation_key(3598)) HTHolesPtr _IHoleTableAuto::GetHoles ( );
__declspec(implementation_key(3599)) HRESULT _IHoleTableAuto::Update ( );
__declspec(implementation_key(3600)) HRESULT _IHoleTableAuto::Delete ( );
__declspec(implementation_key(3601)) void _IHoleTableAuto::PutSavedSettings ( _bstr_t _arg1 );
__declspec(implementation_key(3602)) TGFramework::ApplicationPtr HTHole::GetApplication ( );
__declspec(implementation_key(3603)) IDispatchPtr HTHole::GetParent ( );
__declspec(implementation_key(3604)) double HTHole::GetXLocation ( );
__declspec(implementation_key(3605)) double HTHole::GetYLocation ( );
__declspec(implementation_key(3606)) double HTHole::GetRadialLocation ( );
__declspec(implementation_key(3607)) double HTHole::GetAngularLocation ( );
__declspec(implementation_key(3608)) double HTHole::GetSize ( );
__declspec(implementation_key(3609)) double HTHole::GetDepth ( );
__declspec(implementation_key(3610)) double HTHole::GetCounterboreSize ( );
__declspec(implementation_key(3611)) double HTHole::GetCounterboreDepth ( );
__declspec(implementation_key(3612)) double HTHole::GetCountersinkSize ( );
__declspec(implementation_key(3613)) double HTHole::GetCountersinkAngle ( );
__declspec(implementation_key(3614)) _bstr_t HTHole::GetLabel ( );
__declspec(implementation_key(3615)) enum HTHoleTypeConstants HTHole::GetType ( );
__declspec(implementation_key(3616)) _bstr_t HTHole::GetThreadSize ( );
__declspec(implementation_key(3617)) void HTHole::PutNotes1 ( _bstr_t _arg1 );
__declspec(implementation_key(3618)) _bstr_t HTHole::GetNotes1 ( );
__declspec(implementation_key(3619)) void HTHole::PutNotes2 ( _bstr_t _arg1 );
__declspec(implementation_key(3620)) _bstr_t HTHole::GetNotes2 ( );
__declspec(implementation_key(3621)) void HTHole::PutNotes3 ( _bstr_t _arg1 );
__declspec(implementation_key(3622)) _bstr_t HTHole::GetNotes3 ( );
__declspec(implementation_key(3623)) void HTHole::PutSuffix ( _bstr_t _arg1 );
__declspec(implementation_key(3624)) _bstr_t HTHole::GetSuffix ( );
__declspec(implementation_key(3625)) void HTHole::PutPrefix ( _bstr_t _arg1 );
__declspec(implementation_key(3626)) _bstr_t HTHole::GetPrefix ( );
__declspec(implementation_key(3627)) TGFramework::ApplicationPtr _IHTHolesAuto::GetApplication ( );
__declspec(implementation_key(3628)) IDispatchPtr _IHTHolesAuto::GetParent ( );
__declspec(implementation_key(3629)) long _IHTHolesAuto::GetCount ( );
__declspec(implementation_key(3630)) HTHolePtr _IHTHolesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(3631)) IUnknownPtr _IHTHolesAuto::Get_NewEnum ( );
__declspec(implementation_key(3632)) TGFramework::ApplicationPtr _IHTHoleAuto::GetApplication ( );
__declspec(implementation_key(3633)) IDispatchPtr _IHTHoleAuto::GetParent ( );
__declspec(implementation_key(3634)) double _IHTHoleAuto::GetXLocation ( );
__declspec(implementation_key(3635)) double _IHTHoleAuto::GetYLocation ( );
__declspec(implementation_key(3636)) double _IHTHoleAuto::GetRadialLocation ( );
__declspec(implementation_key(3637)) double _IHTHoleAuto::GetAngularLocation ( );
__declspec(implementation_key(3638)) double _IHTHoleAuto::GetSize ( );
__declspec(implementation_key(3639)) double _IHTHoleAuto::GetDepth ( );
__declspec(implementation_key(3640)) double _IHTHoleAuto::GetCounterboreSize ( );
__declspec(implementation_key(3641)) double _IHTHoleAuto::GetCounterboreDepth ( );
__declspec(implementation_key(3642)) double _IHTHoleAuto::GetCountersinkSize ( );
__declspec(implementation_key(3643)) double _IHTHoleAuto::GetCountersinkAngle ( );
__declspec(implementation_key(3644)) _bstr_t _IHTHoleAuto::GetLabel ( );
__declspec(implementation_key(3645)) enum HTHoleTypeConstants _IHTHoleAuto::GetType ( );
__declspec(implementation_key(3646)) _bstr_t _IHTHoleAuto::GetThreadSize ( );
__declspec(implementation_key(3647)) void _IHTHoleAuto::PutNotes1 ( _bstr_t pNotes1 );
__declspec(implementation_key(3648)) _bstr_t _IHTHoleAuto::GetNotes1 ( );
__declspec(implementation_key(3649)) void _IHTHoleAuto::PutNotes2 ( _bstr_t pNotes2 );
__declspec(implementation_key(3650)) _bstr_t _IHTHoleAuto::GetNotes2 ( );
__declspec(implementation_key(3651)) void _IHTHoleAuto::PutNotes3 ( _bstr_t pNotes3 );
__declspec(implementation_key(3652)) _bstr_t _IHTHoleAuto::GetNotes3 ( );
__declspec(implementation_key(3653)) void _IHTHoleAuto::PutSuffix ( _bstr_t pSuffix );
__declspec(implementation_key(3654)) _bstr_t _IHTHoleAuto::GetSuffix ( );
__declspec(implementation_key(3655)) void _IHTHoleAuto::PutPrefix ( _bstr_t pPrefix );
__declspec(implementation_key(3656)) _bstr_t _IHTHoleAuto::GetPrefix ( );
__declspec(implementation_key(3657)) TGFramework::ApplicationPtr Tables::GetApplication ( );
__declspec(implementation_key(3658)) IDispatchPtr Tables::GetParent ( );
__declspec(implementation_key(3659)) long Tables::GetCount ( );
__declspec(implementation_key(3660)) TablePtr Tables::Item ( const _variant_t & Index );
__declspec(implementation_key(3661)) TablePtr Tables::Add ( );
__declspec(implementation_key(3662)) TGFramework::ApplicationPtr Table::GetApplication ( );
__declspec(implementation_key(3663)) IDispatchPtr Table::GetParent ( );
__declspec(implementation_key(3664)) TableCellPtr Table::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex );
__declspec(implementation_key(3665)) enum TitlePosition Table::GetColumnHeaderPosition ( );
__declspec(implementation_key(3666)) void Table::PutColumnHeaderPosition ( enum TitlePosition _arg1 );
__declspec(implementation_key(3667)) TableColumnsPtr Table::GetColumns ( );
__declspec(implementation_key(3668)) HRESULT Table::Delete ( );
__declspec(implementation_key(3669)) double Table::GetMargin ( );
__declspec(implementation_key(3670)) void Table::PutMargin ( double _arg1 );
__declspec(implementation_key(3671)) long Table::GetMaximumRows ( );
__declspec(implementation_key(3672)) void Table::PutMaximumRows ( long _arg1 );
__declspec(implementation_key(3673)) double Table::GetPageGap ( );
__declspec(implementation_key(3674)) void Table::PutPageGap ( double _arg1 );
__declspec(implementation_key(3675)) VARIANT_BOOL Table::GetReverseDisplayOrder ( );
__declspec(implementation_key(3676)) void Table::PutReverseDisplayOrder ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3677)) TableRowsPtr Table::GetRows ( );
__declspec(implementation_key(3678)) HRESULT Table::SetOrigin ( double x, double y );
__declspec(implementation_key(3679)) VARIANT_BOOL Table::GetShowColumnHeader ( );
__declspec(implementation_key(3680)) void Table::PutShowColumnHeader ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3681)) _bstr_t Table::GetTableStyle ( );
__declspec(implementation_key(3682)) void Table::PutTableStyle ( _bstr_t _arg1 );
__declspec(implementation_key(3683)) TableTitlesPtr Table::GetTitles ( );
__declspec(implementation_key(3684)) HRESULT Table::Update ( );
__declspec(implementation_key(3685)) enum TableAnchorPoint Table::GetAnchorPoint ( );
__declspec(implementation_key(3686)) void Table::PutAnchorPoint ( enum TableAnchorPoint _arg1 );
__declspec(implementation_key(3687)) TablePagesPtr Table::GetPages ( );
__declspec(implementation_key(3688)) double Table::GetHeaderFixedRowHeight ( );
__declspec(implementation_key(3689)) void Table::PutHeaderFixedRowHeight ( double _arg1 );
__declspec(implementation_key(3690)) double Table::GetDataFixedRowHeight ( );
__declspec(implementation_key(3691)) void Table::PutDataFixedRowHeight ( double _arg1 );
__declspec(implementation_key(3692)) double Table::GetMaximumHeight ( );
__declspec(implementation_key(3693)) void Table::PutMaximumHeight ( double _arg1 );
__declspec(implementation_key(3694)) long Table::GetNumberOfHeaderRows ( );
__declspec(implementation_key(3695)) void Table::PutNumberOfHeaderRows ( long _arg1 );
__declspec(implementation_key(3696)) long Table::GetMaximumRowsFirstPage ( );
__declspec(implementation_key(3697)) void Table::PutMaximumRowsFirstPage ( long _arg1 );
__declspec(implementation_key(3698)) long Table::GetMaximumRowsAdditionalPages ( );
__declspec(implementation_key(3699)) void Table::PutMaximumRowsAdditionalPages ( long _arg1 );
__declspec(implementation_key(3700)) double Table::GetMaximumHeightFirstPage ( );
__declspec(implementation_key(3701)) void Table::PutMaximumHeightFirstPage ( double _arg1 );
__declspec(implementation_key(3702)) double Table::GetMaximumHeightAdditionalPages ( );
__declspec(implementation_key(3703)) void Table::PutMaximumHeightAdditionalPages ( double _arg1 );
__declspec(implementation_key(3704)) VARIANT_BOOL Table::GetCreateNewSheetsForTable ( );
__declspec(implementation_key(3705)) void Table::PutCreateNewSheetsForTable ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3706)) _bstr_t Table::GetFirstSheetBackgroundName ( );
__declspec(implementation_key(3707)) void Table::PutFirstSheetBackgroundName ( _bstr_t _arg1 );
__declspec(implementation_key(3708)) _bstr_t Table::GetAdditionalSheetsBackgroundName ( );
__declspec(implementation_key(3709)) void Table::PutAdditionalSheetsBackgroundName ( _bstr_t _arg1 );
__declspec(implementation_key(3710)) VARIANT_BOOL Table::GetShowSheetBackground ( );
__declspec(implementation_key(3711)) void Table::PutShowSheetBackground ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3712)) VARIANT_BOOL Table::GetMaintainSheetsWithTableSize ( );
__declspec(implementation_key(3713)) void Table::PutMaintainSheetsWithTableSize ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3714)) VARIANT_BOOL Table::GetEnableGroups ( );
__declspec(implementation_key(3715)) void Table::PutEnableGroups ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3716)) TableGroupsPtr Table::GetGroups ( );
__declspec(implementation_key(3717)) VARIANT_BOOL Table::GetWrapDataCellsToNewRow ( );
__declspec(implementation_key(3718)) void Table::PutWrapDataCellsToNewRow ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3719)) VARIANT_BOOL Table::GetFillEndOfTableWithBlankRows ( );
__declspec(implementation_key(3720)) void Table::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3721)) long Table::GetGroupByColumn ( );
__declspec(implementation_key(3722)) void Table::PutGroupByColumn ( long _arg1 );
__declspec(implementation_key(3723)) double Table::GetTitleFixedRowHeight ( );
__declspec(implementation_key(3724)) void Table::PutTitleFixedRowHeight ( double _arg1 );
__declspec(implementation_key(3725)) double Table::GetMarginHorizontal ( );
__declspec(implementation_key(3726)) void Table::PutMarginHorizontal ( double _arg1 );
__declspec(implementation_key(3727)) double Table::GetMarginVertical ( );
__declspec(implementation_key(3728)) void Table::PutMarginVertical ( double _arg1 );
__declspec(implementation_key(3729)) _bstr_t Table::GetName ( );
__declspec(implementation_key(3730)) TGFramework::ApplicationPtr _ITablesAuto::GetApplication ( );
__declspec(implementation_key(3731)) IDispatchPtr _ITablesAuto::GetParent ( );
__declspec(implementation_key(3732)) long _ITablesAuto::GetCount ( );
__declspec(implementation_key(3733)) TablePtr _ITablesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(3734)) IUnknownPtr _ITablesAuto::Get_NewEnum ( );
__declspec(implementation_key(3735)) TablePtr _ITablesAuto::Add ( );
__declspec(implementation_key(3736)) TGFramework::ApplicationPtr _ITableAuto::GetApplication ( );
__declspec(implementation_key(3737)) IDispatchPtr _ITableAuto::GetParent ( );
__declspec(implementation_key(3738)) TableCellPtr _ITableAuto::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex );
__declspec(implementation_key(3739)) enum TitlePosition _ITableAuto::GetColumnHeaderPosition ( );
__declspec(implementation_key(3740)) void _ITableAuto::PutColumnHeaderPosition ( enum TitlePosition ColumnHeaderPosition );
__declspec(implementation_key(3741)) TableColumnsPtr _ITableAuto::GetColumns ( );
__declspec(implementation_key(3742)) HRESULT _ITableAuto::Delete ( );
__declspec(implementation_key(3743)) double _ITableAuto::GetMargin ( );
__declspec(implementation_key(3744)) void _ITableAuto::PutMargin ( double Margin );
__declspec(implementation_key(3745)) long _ITableAuto::GetMaximumRows ( );
__declspec(implementation_key(3746)) void _ITableAuto::PutMaximumRows ( long MaximumRows );
__declspec(implementation_key(3747)) double _ITableAuto::GetPageGap ( );
__declspec(implementation_key(3748)) void _ITableAuto::PutPageGap ( double PageGap );
__declspec(implementation_key(3749)) VARIANT_BOOL _ITableAuto::GetReverseDisplayOrder ( );
__declspec(implementation_key(3750)) void _ITableAuto::PutReverseDisplayOrder ( VARIANT_BOOL ReverseDisplayOrder );
__declspec(implementation_key(3751)) TableRowsPtr _ITableAuto::GetRows ( );
__declspec(implementation_key(3752)) HRESULT _ITableAuto::SetOrigin ( double x, double y );
__declspec(implementation_key(3753)) VARIANT_BOOL _ITableAuto::GetShowColumnHeader ( );
__declspec(implementation_key(3754)) void _ITableAuto::PutShowColumnHeader ( VARIANT_BOOL ShowColumnHeader );
__declspec(implementation_key(3755)) _bstr_t _ITableAuto::GetTableStyle ( );
__declspec(implementation_key(3756)) void _ITableAuto::PutTableStyle ( _bstr_t TableStyle );
__declspec(implementation_key(3757)) TableTitlesPtr _ITableAuto::GetTitles ( );
__declspec(implementation_key(3758)) HRESULT _ITableAuto::Update ( );
__declspec(implementation_key(3759)) enum TableAnchorPoint _ITableAuto::GetAnchorPoint ( );
__declspec(implementation_key(3760)) void _ITableAuto::PutAnchorPoint ( enum TableAnchorPoint AnchorPoint );
__declspec(implementation_key(3761)) TablePagesPtr _ITableAuto::GetPages ( );
__declspec(implementation_key(3762)) double _ITableAuto::GetHeaderFixedRowHeight ( );
__declspec(implementation_key(3763)) void _ITableAuto::PutHeaderFixedRowHeight ( double HeaderFixedRowHeight );
__declspec(implementation_key(3764)) double _ITableAuto::GetDataFixedRowHeight ( );
__declspec(implementation_key(3765)) void _ITableAuto::PutDataFixedRowHeight ( double DataFixedRowHeight );
__declspec(implementation_key(3766)) double _ITableAuto::GetMaximumHeight ( );
__declspec(implementation_key(3767)) void _ITableAuto::PutMaximumHeight ( double MaximumHeight );
__declspec(implementation_key(3768)) long _ITableAuto::GetNumberOfHeaderRows ( );
__declspec(implementation_key(3769)) void _ITableAuto::PutNumberOfHeaderRows ( long NumberOfHeaderRows );
__declspec(implementation_key(3770)) long _ITableAuto::GetMaximumRowsFirstPage ( );
__declspec(implementation_key(3771)) void _ITableAuto::PutMaximumRowsFirstPage ( long MaximumRowsFirstPage );
__declspec(implementation_key(3772)) long _ITableAuto::GetMaximumRowsAdditionalPages ( );
__declspec(implementation_key(3773)) void _ITableAuto::PutMaximumRowsAdditionalPages ( long MaximumRowsAdditionalPages );
__declspec(implementation_key(3774)) double _ITableAuto::GetMaximumHeightFirstPage ( );
__declspec(implementation_key(3775)) void _ITableAuto::PutMaximumHeightFirstPage ( double MaximumHeightFirstPage );
__declspec(implementation_key(3776)) double _ITableAuto::GetMaximumHeightAdditionalPages ( );
__declspec(implementation_key(3777)) void _ITableAuto::PutMaximumHeightAdditionalPages ( double MaximumHeightAdditionalPages );
__declspec(implementation_key(3778)) VARIANT_BOOL _ITableAuto::GetCreateNewSheetsForTable ( );
__declspec(implementation_key(3779)) void _ITableAuto::PutCreateNewSheetsForTable ( VARIANT_BOOL CreateNewSheetsForTable );
__declspec(implementation_key(3780)) _bstr_t _ITableAuto::GetFirstSheetBackgroundName ( );
__declspec(implementation_key(3781)) void _ITableAuto::PutFirstSheetBackgroundName ( _bstr_t FirstSheetBackgroundName );
__declspec(implementation_key(3782)) _bstr_t _ITableAuto::GetAdditionalSheetsBackgroundName ( );
__declspec(implementation_key(3783)) void _ITableAuto::PutAdditionalSheetsBackgroundName ( _bstr_t AdditionalSheetsBackgroundName );
__declspec(implementation_key(3784)) VARIANT_BOOL _ITableAuto::GetShowSheetBackground ( );
__declspec(implementation_key(3785)) void _ITableAuto::PutShowSheetBackground ( VARIANT_BOOL ShowSheetBackground );
__declspec(implementation_key(3786)) VARIANT_BOOL _ITableAuto::GetMaintainSheetsWithTableSize ( );
__declspec(implementation_key(3787)) void _ITableAuto::PutMaintainSheetsWithTableSize ( VARIANT_BOOL MaintainSheetsWithTableSize );
__declspec(implementation_key(3788)) VARIANT_BOOL _ITableAuto::GetEnableGroups ( );
__declspec(implementation_key(3789)) void _ITableAuto::PutEnableGroups ( VARIANT_BOOL EnableGroups );
__declspec(implementation_key(3790)) TableGroupsPtr _ITableAuto::GetGroups ( );
__declspec(implementation_key(3791)) VARIANT_BOOL _ITableAuto::GetWrapDataCellsToNewRow ( );
__declspec(implementation_key(3792)) void _ITableAuto::PutWrapDataCellsToNewRow ( VARIANT_BOOL WrapDataCellsToNewRow );
__declspec(implementation_key(3793)) VARIANT_BOOL _ITableAuto::GetFillEndOfTableWithBlankRows ( );
__declspec(implementation_key(3794)) void _ITableAuto::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL FillEndOfTableWithBlankRows );
__declspec(implementation_key(3795)) long _ITableAuto::GetGroupByColumn ( );
__declspec(implementation_key(3796)) void _ITableAuto::PutGroupByColumn ( long ColumnIndex );
__declspec(implementation_key(3797)) double _ITableAuto::GetTitleFixedRowHeight ( );
__declspec(implementation_key(3798)) void _ITableAuto::PutTitleFixedRowHeight ( double TitleFixedRowHeight );
__declspec(implementation_key(3799)) double _ITableAuto::GetMarginHorizontal ( );
__declspec(implementation_key(3800)) void _ITableAuto::PutMarginHorizontal ( double MarginHorizontal );
__declspec(implementation_key(3801)) double _ITableAuto::GetMarginVertical ( );
__declspec(implementation_key(3802)) void _ITableAuto::PutMarginVertical ( double MarginVertical );
__declspec(implementation_key(3803)) _bstr_t _ITableAuto::GetName ( );
__declspec(implementation_key(3804)) TGFramework::ApplicationPtr DraftBendTables::GetApplication ( );
__declspec(implementation_key(3805)) long DraftBendTables::GetCount ( );
__declspec(implementation_key(3806)) DraftBendTablePtr DraftBendTables::Item ( const _variant_t & Index );
__declspec(implementation_key(3807)) DraftBendTablePtr DraftBendTables::Add ( struct DrawingView * DrawingView, _bstr_t SavedSettings, long AutoBalloon, long CreateDraftBendTable );
__declspec(implementation_key(3808)) IDispatchPtr DraftBendTables::GetParent ( );
__declspec(implementation_key(3809)) TGFramework::ApplicationPtr DraftBendTable::GetApplication ( );
__declspec(implementation_key(3810)) HRESULT DraftBendTable::Update ( );
__declspec(implementation_key(3811)) HRESULT DraftBendTable::CopyToClipboard ( );
__declspec(implementation_key(3812)) ModelLinkPtr DraftBendTable::GetModelLink ( );
__declspec(implementation_key(3813)) HRESULT DraftBendTable::Delete ( );
__declspec(implementation_key(3814)) void DraftBendTable::PutSavedSettings ( _bstr_t _arg1 );
__declspec(implementation_key(3815)) IDispatchPtr DraftBendTable::GetParent ( );
__declspec(implementation_key(3816)) TableCellPtr DraftBendTable::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex );
__declspec(implementation_key(3817)) enum TitlePosition DraftBendTable::GetColumnHeaderPosition ( );
__declspec(implementation_key(3818)) void DraftBendTable::PutColumnHeaderPosition ( enum TitlePosition _arg1 );
__declspec(implementation_key(3819)) TableColumnsPtr DraftBendTable::GetColumns ( );
__declspec(implementation_key(3820)) double DraftBendTable::GetMarginHorizontal ( );
__declspec(implementation_key(3821)) void DraftBendTable::PutMarginHorizontal ( double _arg1 );
__declspec(implementation_key(3822)) double DraftBendTable::GetMarginVertical ( );
__declspec(implementation_key(3823)) void DraftBendTable::PutMarginVertical ( double _arg1 );
__declspec(implementation_key(3824)) long DraftBendTable::GetMaximumRows ( );
__declspec(implementation_key(3825)) void DraftBendTable::PutMaximumRows ( long _arg1 );
__declspec(implementation_key(3826)) double DraftBendTable::GetPageGap ( );
__declspec(implementation_key(3827)) void DraftBendTable::PutPageGap ( double _arg1 );
__declspec(implementation_key(3828)) VARIANT_BOOL DraftBendTable::GetReverseDisplayOrder ( );
__declspec(implementation_key(3829)) void DraftBendTable::PutReverseDisplayOrder ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3830)) TableRowsPtr DraftBendTable::GetRows ( );
__declspec(implementation_key(3831)) HRESULT DraftBendTable::SetOrigin ( double x, double y );
__declspec(implementation_key(3832)) VARIANT_BOOL DraftBendTable::GetShowColumnHeader ( );
__declspec(implementation_key(3833)) void DraftBendTable::PutShowColumnHeader ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3834)) _bstr_t DraftBendTable::GetTableStyle ( );
__declspec(implementation_key(3835)) void DraftBendTable::PutTableStyle ( _bstr_t _arg1 );
__declspec(implementation_key(3836)) TableTitlesPtr DraftBendTable::GetTitles ( );
__declspec(implementation_key(3837)) enum TableAnchorPoint DraftBendTable::GetAnchorPoint ( );
__declspec(implementation_key(3838)) void DraftBendTable::PutAnchorPoint ( enum TableAnchorPoint _arg1 );
__declspec(implementation_key(3839)) TablePagesPtr DraftBendTable::GetPages ( );
__declspec(implementation_key(3840)) double DraftBendTable::GetHeaderFixedRowHeight ( );
__declspec(implementation_key(3841)) void DraftBendTable::PutHeaderFixedRowHeight ( double _arg1 );
__declspec(implementation_key(3842)) double DraftBendTable::GetDataFixedRowHeight ( );
__declspec(implementation_key(3843)) void DraftBendTable::PutDataFixedRowHeight ( double _arg1 );
__declspec(implementation_key(3844)) double DraftBendTable::GetMaximumHeight ( );
__declspec(implementation_key(3845)) void DraftBendTable::PutMaximumHeight ( double _arg1 );
__declspec(implementation_key(3846)) long DraftBendTable::GetNumberOfHeaderRows ( );
__declspec(implementation_key(3847)) void DraftBendTable::PutNumberOfHeaderRows ( long _arg1 );
__declspec(implementation_key(3848)) long DraftBendTable::GetMaximumRowsFirstPage ( );
__declspec(implementation_key(3849)) void DraftBendTable::PutMaximumRowsFirstPage ( long _arg1 );
__declspec(implementation_key(3850)) long DraftBendTable::GetMaximumRowsAdditionalPages ( );
__declspec(implementation_key(3851)) void DraftBendTable::PutMaximumRowsAdditionalPages ( long _arg1 );
__declspec(implementation_key(3852)) double DraftBendTable::GetMaximumHeightFirstPage ( );
__declspec(implementation_key(3853)) void DraftBendTable::PutMaximumHeightFirstPage ( double _arg1 );
__declspec(implementation_key(3854)) double DraftBendTable::GetMaximumHeightAdditionalPages ( );
__declspec(implementation_key(3855)) void DraftBendTable::PutMaximumHeightAdditionalPages ( double _arg1 );
__declspec(implementation_key(3856)) VARIANT_BOOL DraftBendTable::GetCreateNewSheetsForTable ( );
__declspec(implementation_key(3857)) void DraftBendTable::PutCreateNewSheetsForTable ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3858)) _bstr_t DraftBendTable::GetFirstSheetBackgroundName ( );
__declspec(implementation_key(3859)) void DraftBendTable::PutFirstSheetBackgroundName ( _bstr_t _arg1 );
__declspec(implementation_key(3860)) _bstr_t DraftBendTable::GetAdditionalSheetsBackgroundName ( );
__declspec(implementation_key(3861)) void DraftBendTable::PutAdditionalSheetsBackgroundName ( _bstr_t _arg1 );
__declspec(implementation_key(3862)) VARIANT_BOOL DraftBendTable::GetShowSheetBackground ( );
__declspec(implementation_key(3863)) void DraftBendTable::PutShowSheetBackground ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3864)) VARIANT_BOOL DraftBendTable::GetMaintainSheetsWithTableSize ( );
__declspec(implementation_key(3865)) void DraftBendTable::PutMaintainSheetsWithTableSize ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3866)) VARIANT_BOOL DraftBendTable::GetEnableGroups ( );
__declspec(implementation_key(3867)) void DraftBendTable::PutEnableGroups ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3868)) TableGroupsPtr DraftBendTable::GetGroups ( );
__declspec(implementation_key(3869)) VARIANT_BOOL DraftBendTable::GetWrapDataCellsToNewRow ( );
__declspec(implementation_key(3870)) void DraftBendTable::PutWrapDataCellsToNewRow ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3871)) VARIANT_BOOL DraftBendTable::GetFillEndOfTableWithBlankRows ( );
__declspec(implementation_key(3872)) void DraftBendTable::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3873)) long DraftBendTable::GetGroupByColumn ( );
__declspec(implementation_key(3874)) void DraftBendTable::PutGroupByColumn ( long _arg1 );
__declspec(implementation_key(3875)) double DraftBendTable::GetTitleFixedRowHeight ( );
__declspec(implementation_key(3876)) void DraftBendTable::PutTitleFixedRowHeight ( double _arg1 );
__declspec(implementation_key(3877)) HRESULT DraftBendTable::GetListOfSavedSettings ( long * NumSavedSettings, SAFEARRAY * * ListOfSavedSettings );
__declspec(implementation_key(3878)) _bstr_t DraftBendTable::GetName ( );
__declspec(implementation_key(3879)) TGFramework::ApplicationPtr _IDraftBendTablesAuto::GetApplication ( );
__declspec(implementation_key(3880)) long _IDraftBendTablesAuto::GetCount ( );
__declspec(implementation_key(3881)) DraftBendTablePtr _IDraftBendTablesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(3882)) IUnknownPtr _IDraftBendTablesAuto::Get_NewEnum ( );
__declspec(implementation_key(3883)) DraftBendTablePtr _IDraftBendTablesAuto::Add ( struct DrawingView * DrawingView, _bstr_t SavedSettings, long AutoBalloon, long CreateDraftBendTable );
__declspec(implementation_key(3884)) IDispatchPtr _IDraftBendTablesAuto::GetParent ( );
__declspec(implementation_key(3885)) TGFramework::ApplicationPtr _IDraftBendTableAuto::GetApplication ( );
__declspec(implementation_key(3886)) HRESULT _IDraftBendTableAuto::Update ( );
__declspec(implementation_key(3887)) HRESULT _IDraftBendTableAuto::CopyToClipboard ( );
__declspec(implementation_key(3888)) ModelLinkPtr _IDraftBendTableAuto::GetModelLink ( );
__declspec(implementation_key(3889)) HRESULT _IDraftBendTableAuto::Delete ( );
__declspec(implementation_key(3890)) void _IDraftBendTableAuto::PutSavedSettings ( _bstr_t _arg1 );
__declspec(implementation_key(3891)) IDispatchPtr _IDraftBendTableAuto::GetParent ( );
__declspec(implementation_key(3892)) TableCellPtr _IDraftBendTableAuto::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex );
__declspec(implementation_key(3893)) enum TitlePosition _IDraftBendTableAuto::GetColumnHeaderPosition ( );
__declspec(implementation_key(3894)) void _IDraftBendTableAuto::PutColumnHeaderPosition ( enum TitlePosition ColumnHeaderPosition );
__declspec(implementation_key(3895)) TableColumnsPtr _IDraftBendTableAuto::GetColumns ( );
__declspec(implementation_key(3896)) double _IDraftBendTableAuto::GetMarginHorizontal ( );
__declspec(implementation_key(3897)) void _IDraftBendTableAuto::PutMarginHorizontal ( double MarginHorizontal );
__declspec(implementation_key(3898)) double _IDraftBendTableAuto::GetMarginVertical ( );
__declspec(implementation_key(3899)) void _IDraftBendTableAuto::PutMarginVertical ( double MarginVertical );
__declspec(implementation_key(3900)) long _IDraftBendTableAuto::GetMaximumRows ( );
__declspec(implementation_key(3901)) void _IDraftBendTableAuto::PutMaximumRows ( long MaximumRows );
__declspec(implementation_key(3902)) double _IDraftBendTableAuto::GetPageGap ( );
__declspec(implementation_key(3903)) void _IDraftBendTableAuto::PutPageGap ( double PageGap );
__declspec(implementation_key(3904)) VARIANT_BOOL _IDraftBendTableAuto::GetReverseDisplayOrder ( );
__declspec(implementation_key(3905)) void _IDraftBendTableAuto::PutReverseDisplayOrder ( VARIANT_BOOL ReverseDisplayOrder );
__declspec(implementation_key(3906)) TableRowsPtr _IDraftBendTableAuto::GetRows ( );
__declspec(implementation_key(3907)) HRESULT _IDraftBendTableAuto::SetOrigin ( double x, double y );
__declspec(implementation_key(3908)) VARIANT_BOOL _IDraftBendTableAuto::GetShowColumnHeader ( );
__declspec(implementation_key(3909)) void _IDraftBendTableAuto::PutShowColumnHeader ( VARIANT_BOOL ShowColumnHeader );
__declspec(implementation_key(3910)) _bstr_t _IDraftBendTableAuto::GetTableStyle ( );
__declspec(implementation_key(3911)) void _IDraftBendTableAuto::PutTableStyle ( _bstr_t TableStyle );
__declspec(implementation_key(3912)) TableTitlesPtr _IDraftBendTableAuto::GetTitles ( );
__declspec(implementation_key(3913)) enum TableAnchorPoint _IDraftBendTableAuto::GetAnchorPoint ( );
__declspec(implementation_key(3914)) void _IDraftBendTableAuto::PutAnchorPoint ( enum TableAnchorPoint AnchorPoint );
__declspec(implementation_key(3915)) TablePagesPtr _IDraftBendTableAuto::GetPages ( );
__declspec(implementation_key(3916)) double _IDraftBendTableAuto::GetHeaderFixedRowHeight ( );
__declspec(implementation_key(3917)) void _IDraftBendTableAuto::PutHeaderFixedRowHeight ( double HeaderFixedRowHeight );
__declspec(implementation_key(3918)) double _IDraftBendTableAuto::GetDataFixedRowHeight ( );
__declspec(implementation_key(3919)) void _IDraftBendTableAuto::PutDataFixedRowHeight ( double DataFixedRowHeight );
__declspec(implementation_key(3920)) double _IDraftBendTableAuto::GetMaximumHeight ( );
__declspec(implementation_key(3921)) void _IDraftBendTableAuto::PutMaximumHeight ( double MaximumHeight );
__declspec(implementation_key(3922)) long _IDraftBendTableAuto::GetNumberOfHeaderRows ( );
__declspec(implementation_key(3923)) void _IDraftBendTableAuto::PutNumberOfHeaderRows ( long NumberOfHeaderRows );
__declspec(implementation_key(3924)) long _IDraftBendTableAuto::GetMaximumRowsFirstPage ( );
__declspec(implementation_key(3925)) void _IDraftBendTableAuto::PutMaximumRowsFirstPage ( long MaximumRowsFirstPage );
__declspec(implementation_key(3926)) long _IDraftBendTableAuto::GetMaximumRowsAdditionalPages ( );
__declspec(implementation_key(3927)) void _IDraftBendTableAuto::PutMaximumRowsAdditionalPages ( long MaximumRowsAdditionalPages );
__declspec(implementation_key(3928)) double _IDraftBendTableAuto::GetMaximumHeightFirstPage ( );
__declspec(implementation_key(3929)) void _IDraftBendTableAuto::PutMaximumHeightFirstPage ( double MaximumHeightFirstPage );
__declspec(implementation_key(3930)) double _IDraftBendTableAuto::GetMaximumHeightAdditionalPages ( );
__declspec(implementation_key(3931)) void _IDraftBendTableAuto::PutMaximumHeightAdditionalPages ( double MaximumHeightAdditionalPages );
__declspec(implementation_key(3932)) VARIANT_BOOL _IDraftBendTableAuto::GetCreateNewSheetsForTable ( );
__declspec(implementation_key(3933)) void _IDraftBendTableAuto::PutCreateNewSheetsForTable ( VARIANT_BOOL CreateNewSheetsForTable );
__declspec(implementation_key(3934)) _bstr_t _IDraftBendTableAuto::GetFirstSheetBackgroundName ( );
__declspec(implementation_key(3935)) void _IDraftBendTableAuto::PutFirstSheetBackgroundName ( _bstr_t FirstSheetBackgroundName );
__declspec(implementation_key(3936)) _bstr_t _IDraftBendTableAuto::GetAdditionalSheetsBackgroundName ( );
__declspec(implementation_key(3937)) void _IDraftBendTableAuto::PutAdditionalSheetsBackgroundName ( _bstr_t AdditionalSheetsBackgroundName );
__declspec(implementation_key(3938)) VARIANT_BOOL _IDraftBendTableAuto::GetShowSheetBackground ( );
__declspec(implementation_key(3939)) void _IDraftBendTableAuto::PutShowSheetBackground ( VARIANT_BOOL ShowSheetBackground );
__declspec(implementation_key(3940)) VARIANT_BOOL _IDraftBendTableAuto::GetMaintainSheetsWithTableSize ( );
__declspec(implementation_key(3941)) void _IDraftBendTableAuto::PutMaintainSheetsWithTableSize ( VARIANT_BOOL MaintainSheetsWithTableSize );
__declspec(implementation_key(3942)) VARIANT_BOOL _IDraftBendTableAuto::GetEnableGroups ( );
__declspec(implementation_key(3943)) void _IDraftBendTableAuto::PutEnableGroups ( VARIANT_BOOL EnableGroups );
__declspec(implementation_key(3944)) TableGroupsPtr _IDraftBendTableAuto::GetGroups ( );
__declspec(implementation_key(3945)) VARIANT_BOOL _IDraftBendTableAuto::GetWrapDataCellsToNewRow ( );
__declspec(implementation_key(3946)) void _IDraftBendTableAuto::PutWrapDataCellsToNewRow ( VARIANT_BOOL WrapDataCellsToNewRow );
__declspec(implementation_key(3947)) VARIANT_BOOL _IDraftBendTableAuto::GetFillEndOfTableWithBlankRows ( );
__declspec(implementation_key(3948)) void _IDraftBendTableAuto::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL FillEndOfTableWithBlankRows );
__declspec(implementation_key(3949)) long _IDraftBendTableAuto::GetGroupByColumn ( );
__declspec(implementation_key(3950)) void _IDraftBendTableAuto::PutGroupByColumn ( long ColumnIndex );
__declspec(implementation_key(3951)) double _IDraftBendTableAuto::GetTitleFixedRowHeight ( );
__declspec(implementation_key(3952)) void _IDraftBendTableAuto::PutTitleFixedRowHeight ( double TitleFixedRowHeight );
__declspec(implementation_key(3953)) HRESULT _IDraftBendTableAuto::GetListOfSavedSettings ( long * NumSavedSettings, SAFEARRAY * * ListOfSavedSettings );
__declspec(implementation_key(3954)) _bstr_t _IDraftBendTableAuto::GetName ( );
__declspec(implementation_key(3955)) TGFramework::ApplicationPtr ConnectorTables::GetApplication ( );
__declspec(implementation_key(3956)) long ConnectorTables::GetCount ( );
__declspec(implementation_key(3957)) ConnectorTablePtr ConnectorTables::Item ( const _variant_t & Index );
__declspec(implementation_key(3958)) ConnectorTablePtr ConnectorTables::Add ( struct DrawingView * DrawingView, _bstr_t SavedSettings, long AutoBalloon, long CreateConnectorTable );
__declspec(implementation_key(3959)) IDispatchPtr ConnectorTables::GetParent ( );
__declspec(implementation_key(3960)) TGFramework::ApplicationPtr ConnectorTable::GetApplication ( );
__declspec(implementation_key(3961)) HRESULT ConnectorTable::Update ( );
__declspec(implementation_key(3962)) HRESULT ConnectorTable::CopyToClipboard ( );
__declspec(implementation_key(3963)) DrawingViewPtr ConnectorTable::GetDrawingView ( );
__declspec(implementation_key(3964)) HRESULT ConnectorTable::Delete ( );
__declspec(implementation_key(3965)) void ConnectorTable::PutSavedSettings ( _bstr_t _arg1 );
__declspec(implementation_key(3966)) IDispatchPtr ConnectorTable::GetParent ( );
__declspec(implementation_key(3967)) HRESULT ConnectorTable::SetOrigin ( double x, double y );
__declspec(implementation_key(3968)) HRESULT ConnectorTable::GetOrigin ( double * x, double * y );
__declspec(implementation_key(3969)) HRESULT ConnectorTable::GetListOfSavedSettings ( long * NumSavedSettings, SAFEARRAY * * ListOfSavedSettings );
__declspec(implementation_key(3970)) VARIANT_BOOL ConnectorTable::GetIsUpToDate ( );
__declspec(implementation_key(3971)) HRESULT ConnectorTable::ConvertToTable ( );
__declspec(implementation_key(3972)) TableCellPtr ConnectorTable::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex );
__declspec(implementation_key(3973)) enum TitlePosition ConnectorTable::GetColumnHeaderPosition ( );
__declspec(implementation_key(3974)) void ConnectorTable::PutColumnHeaderPosition ( enum TitlePosition _arg1 );
__declspec(implementation_key(3975)) TableColumnsPtr ConnectorTable::GetColumns ( );
__declspec(implementation_key(3976)) double ConnectorTable::GetMargin ( );
__declspec(implementation_key(3977)) void ConnectorTable::PutMargin ( double _arg1 );
__declspec(implementation_key(3978)) long ConnectorTable::GetMaximumRows ( );
__declspec(implementation_key(3979)) void ConnectorTable::PutMaximumRows ( long _arg1 );
__declspec(implementation_key(3980)) double ConnectorTable::GetPageGap ( );
__declspec(implementation_key(3981)) void ConnectorTable::PutPageGap ( double _arg1 );
__declspec(implementation_key(3982)) VARIANT_BOOL ConnectorTable::GetReverseDisplayOrder ( );
__declspec(implementation_key(3983)) void ConnectorTable::PutReverseDisplayOrder ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3984)) TableRowsPtr ConnectorTable::GetRows ( );
__declspec(implementation_key(3985)) VARIANT_BOOL ConnectorTable::GetShowColumnHeader ( );
__declspec(implementation_key(3986)) void ConnectorTable::PutShowColumnHeader ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3987)) _bstr_t ConnectorTable::GetTableStyle ( );
__declspec(implementation_key(3988)) void ConnectorTable::PutTableStyle ( _bstr_t _arg1 );
__declspec(implementation_key(3989)) TableTitlesPtr ConnectorTable::GetTitles ( );
__declspec(implementation_key(3990)) enum TableAnchorPoint ConnectorTable::GetAnchorPoint ( );
__declspec(implementation_key(3991)) void ConnectorTable::PutAnchorPoint ( enum TableAnchorPoint _arg1 );
__declspec(implementation_key(3992)) TablePagesPtr ConnectorTable::GetPages ( );
__declspec(implementation_key(3993)) double ConnectorTable::GetHeaderFixedRowHeight ( );
__declspec(implementation_key(3994)) void ConnectorTable::PutHeaderFixedRowHeight ( double _arg1 );
__declspec(implementation_key(3995)) double ConnectorTable::GetDataFixedRowHeight ( );
__declspec(implementation_key(3996)) void ConnectorTable::PutDataFixedRowHeight ( double _arg1 );
__declspec(implementation_key(3997)) double ConnectorTable::GetMaximumHeight ( );
__declspec(implementation_key(3998)) void ConnectorTable::PutMaximumHeight ( double _arg1 );
__declspec(implementation_key(3999)) long ConnectorTable::GetNumberOfHeaderRows ( );
__declspec(implementation_key(4000)) void ConnectorTable::PutNumberOfHeaderRows ( long _arg1 );
__declspec(implementation_key(4001)) long ConnectorTable::GetMaximumRowsFirstPage ( );
__declspec(implementation_key(4002)) void ConnectorTable::PutMaximumRowsFirstPage ( long _arg1 );
__declspec(implementation_key(4003)) long ConnectorTable::GetMaximumRowsAdditionalPages ( );
__declspec(implementation_key(4004)) void ConnectorTable::PutMaximumRowsAdditionalPages ( long _arg1 );
__declspec(implementation_key(4005)) double ConnectorTable::GetMaximumHeightFirstPage ( );
__declspec(implementation_key(4006)) void ConnectorTable::PutMaximumHeightFirstPage ( double _arg1 );
__declspec(implementation_key(4007)) double ConnectorTable::GetMaximumHeightAdditionalPages ( );
__declspec(implementation_key(4008)) void ConnectorTable::PutMaximumHeightAdditionalPages ( double _arg1 );
__declspec(implementation_key(4009)) VARIANT_BOOL ConnectorTable::GetCreateNewSheetsForTable ( );
__declspec(implementation_key(4010)) void ConnectorTable::PutCreateNewSheetsForTable ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4011)) _bstr_t ConnectorTable::GetFirstSheetBackgroundName ( );
__declspec(implementation_key(4012)) void ConnectorTable::PutFirstSheetBackgroundName ( _bstr_t _arg1 );
__declspec(implementation_key(4013)) _bstr_t ConnectorTable::GetAdditionalSheetsBackgroundName ( );
__declspec(implementation_key(4014)) void ConnectorTable::PutAdditionalSheetsBackgroundName ( _bstr_t _arg1 );
__declspec(implementation_key(4015)) VARIANT_BOOL ConnectorTable::GetShowSheetBackground ( );
__declspec(implementation_key(4016)) void ConnectorTable::PutShowSheetBackground ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4017)) VARIANT_BOOL ConnectorTable::GetMaintainSheetsWithTableSize ( );
__declspec(implementation_key(4018)) void ConnectorTable::PutMaintainSheetsWithTableSize ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4019)) VARIANT_BOOL ConnectorTable::GetEnableGroups ( );
__declspec(implementation_key(4020)) void ConnectorTable::PutEnableGroups ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4021)) TableGroupsPtr ConnectorTable::GetGroups ( );
__declspec(implementation_key(4022)) VARIANT_BOOL ConnectorTable::GetWrapDataCellsToNewRow ( );
__declspec(implementation_key(4023)) void ConnectorTable::PutWrapDataCellsToNewRow ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4024)) VARIANT_BOOL ConnectorTable::GetFillEndOfTableWithBlankRows ( );
__declspec(implementation_key(4025)) void ConnectorTable::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4026)) long ConnectorTable::GetGroupByColumn ( );
__declspec(implementation_key(4027)) void ConnectorTable::PutGroupByColumn ( long _arg1 );
__declspec(implementation_key(4028)) double ConnectorTable::GetTitleFixedRowHeight ( );
__declspec(implementation_key(4029)) void ConnectorTable::PutTitleFixedRowHeight ( double _arg1 );
__declspec(implementation_key(4030)) double ConnectorTable::GetMarginHorizontal ( );
__declspec(implementation_key(4031)) void ConnectorTable::PutMarginHorizontal ( double _arg1 );
__declspec(implementation_key(4032)) double ConnectorTable::GetMarginVertical ( );
__declspec(implementation_key(4033)) void ConnectorTable::PutMarginVertical ( double _arg1 );
__declspec(implementation_key(4034)) _bstr_t ConnectorTable::GetName ( );
__declspec(implementation_key(4035)) TGFramework::ApplicationPtr _IConnectorTablesAuto::GetApplication ( );
__declspec(implementation_key(4036)) long _IConnectorTablesAuto::GetCount ( );
__declspec(implementation_key(4037)) ConnectorTablePtr _IConnectorTablesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(4038)) IUnknownPtr _IConnectorTablesAuto::Get_NewEnum ( );
__declspec(implementation_key(4039)) ConnectorTablePtr _IConnectorTablesAuto::Add ( struct DrawingView * DrawingView, _bstr_t SavedSettings, long AutoBalloon, long CreateConnectorTable );
__declspec(implementation_key(4040)) IDispatchPtr _IConnectorTablesAuto::GetParent ( );
__declspec(implementation_key(4041)) TGFramework::ApplicationPtr _IConnectorTableAuto::GetApplication ( );
__declspec(implementation_key(4042)) HRESULT _IConnectorTableAuto::Update ( );
__declspec(implementation_key(4043)) HRESULT _IConnectorTableAuto::CopyToClipboard ( );
__declspec(implementation_key(4044)) DrawingViewPtr _IConnectorTableAuto::GetDrawingView ( );
__declspec(implementation_key(4045)) HRESULT _IConnectorTableAuto::Delete ( );
__declspec(implementation_key(4046)) void _IConnectorTableAuto::PutSavedSettings ( _bstr_t _arg1 );
__declspec(implementation_key(4047)) IDispatchPtr _IConnectorTableAuto::GetParent ( );
__declspec(implementation_key(4048)) HRESULT _IConnectorTableAuto::SetOrigin ( double x, double y );
__declspec(implementation_key(4049)) HRESULT _IConnectorTableAuto::GetOrigin ( double * x, double * y );
__declspec(implementation_key(4050)) HRESULT _IConnectorTableAuto::GetListOfSavedSettings ( long * NumSavedSettings, SAFEARRAY * * ListOfSavedSettings );
__declspec(implementation_key(4051)) VARIANT_BOOL _IConnectorTableAuto::GetIsUpToDate ( );
__declspec(implementation_key(4052)) HRESULT _IConnectorTableAuto::ConvertToTable ( );
__declspec(implementation_key(4053)) TableCellPtr _IConnectorTableAuto::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex );
__declspec(implementation_key(4054)) enum TitlePosition _IConnectorTableAuto::GetColumnHeaderPosition ( );
__declspec(implementation_key(4055)) void _IConnectorTableAuto::PutColumnHeaderPosition ( enum TitlePosition ColumnHeaderPosition );
__declspec(implementation_key(4056)) TableColumnsPtr _IConnectorTableAuto::GetColumns ( );
__declspec(implementation_key(4057)) double _IConnectorTableAuto::GetMargin ( );
__declspec(implementation_key(4058)) void _IConnectorTableAuto::PutMargin ( double Margin );
__declspec(implementation_key(4059)) long _IConnectorTableAuto::GetMaximumRows ( );
__declspec(implementation_key(4060)) void _IConnectorTableAuto::PutMaximumRows ( long MaximumRows );
__declspec(implementation_key(4061)) double _IConnectorTableAuto::GetPageGap ( );
__declspec(implementation_key(4062)) void _IConnectorTableAuto::PutPageGap ( double PageGap );
__declspec(implementation_key(4063)) VARIANT_BOOL _IConnectorTableAuto::GetReverseDisplayOrder ( );
__declspec(implementation_key(4064)) void _IConnectorTableAuto::PutReverseDisplayOrder ( VARIANT_BOOL ReverseDisplayOrder );
__declspec(implementation_key(4065)) TableRowsPtr _IConnectorTableAuto::GetRows ( );
__declspec(implementation_key(4066)) VARIANT_BOOL _IConnectorTableAuto::GetShowColumnHeader ( );
__declspec(implementation_key(4067)) void _IConnectorTableAuto::PutShowColumnHeader ( VARIANT_BOOL ShowColumnHeader );
__declspec(implementation_key(4068)) _bstr_t _IConnectorTableAuto::GetTableStyle ( );
__declspec(implementation_key(4069)) void _IConnectorTableAuto::PutTableStyle ( _bstr_t TableStyle );
__declspec(implementation_key(4070)) TableTitlesPtr _IConnectorTableAuto::GetTitles ( );
__declspec(implementation_key(4071)) enum TableAnchorPoint _IConnectorTableAuto::GetAnchorPoint ( );
__declspec(implementation_key(4072)) void _IConnectorTableAuto::PutAnchorPoint ( enum TableAnchorPoint AnchorPoint );
__declspec(implementation_key(4073)) TablePagesPtr _IConnectorTableAuto::GetPages ( );
__declspec(implementation_key(4074)) double _IConnectorTableAuto::GetHeaderFixedRowHeight ( );
__declspec(implementation_key(4075)) void _IConnectorTableAuto::PutHeaderFixedRowHeight ( double HeaderFixedRowHeight );
__declspec(implementation_key(4076)) double _IConnectorTableAuto::GetDataFixedRowHeight ( );
__declspec(implementation_key(4077)) void _IConnectorTableAuto::PutDataFixedRowHeight ( double DataFixedRowHeight );
__declspec(implementation_key(4078)) double _IConnectorTableAuto::GetMaximumHeight ( );
__declspec(implementation_key(4079)) void _IConnectorTableAuto::PutMaximumHeight ( double MaximumHeight );
__declspec(implementation_key(4080)) long _IConnectorTableAuto::GetNumberOfHeaderRows ( );
__declspec(implementation_key(4081)) void _IConnectorTableAuto::PutNumberOfHeaderRows ( long NumberOfHeaderRows );
__declspec(implementation_key(4082)) long _IConnectorTableAuto::GetMaximumRowsFirstPage ( );
__declspec(implementation_key(4083)) void _IConnectorTableAuto::PutMaximumRowsFirstPage ( long MaximumRowsFirstPage );
__declspec(implementation_key(4084)) long _IConnectorTableAuto::GetMaximumRowsAdditionalPages ( );
__declspec(implementation_key(4085)) void _IConnectorTableAuto::PutMaximumRowsAdditionalPages ( long MaximumRowsAdditionalPages );
__declspec(implementation_key(4086)) double _IConnectorTableAuto::GetMaximumHeightFirstPage ( );
__declspec(implementation_key(4087)) void _IConnectorTableAuto::PutMaximumHeightFirstPage ( double MaximumHeightFirstPage );
__declspec(implementation_key(4088)) double _IConnectorTableAuto::GetMaximumHeightAdditionalPages ( );
__declspec(implementation_key(4089)) void _IConnectorTableAuto::PutMaximumHeightAdditionalPages ( double MaximumHeightAdditionalPages );
__declspec(implementation_key(4090)) VARIANT_BOOL _IConnectorTableAuto::GetCreateNewSheetsForTable ( );
__declspec(implementation_key(4091)) void _IConnectorTableAuto::PutCreateNewSheetsForTable ( VARIANT_BOOL CreateNewSheetsForTable );
__declspec(implementation_key(4092)) _bstr_t _IConnectorTableAuto::GetFirstSheetBackgroundName ( );
__declspec(implementation_key(4093)) void _IConnectorTableAuto::PutFirstSheetBackgroundName ( _bstr_t FirstSheetBackgroundName );
__declspec(implementation_key(4094)) _bstr_t _IConnectorTableAuto::GetAdditionalSheetsBackgroundName ( );
__declspec(implementation_key(4095)) void _IConnectorTableAuto::PutAdditionalSheetsBackgroundName ( _bstr_t AdditionalSheetsBackgroundName );
__declspec(implementation_key(4096)) VARIANT_BOOL _IConnectorTableAuto::GetShowSheetBackground ( );
__declspec(implementation_key(4097)) void _IConnectorTableAuto::PutShowSheetBackground ( VARIANT_BOOL ShowSheetBackground );
__declspec(implementation_key(4098)) VARIANT_BOOL _IConnectorTableAuto::GetMaintainSheetsWithTableSize ( );
__declspec(implementation_key(4099)) void _IConnectorTableAuto::PutMaintainSheetsWithTableSize ( VARIANT_BOOL MaintainSheetsWithTableSize );
__declspec(implementation_key(4100)) VARIANT_BOOL _IConnectorTableAuto::GetEnableGroups ( );
__declspec(implementation_key(4101)) void _IConnectorTableAuto::PutEnableGroups ( VARIANT_BOOL EnableGroups );
__declspec(implementation_key(4102)) TableGroupsPtr _IConnectorTableAuto::GetGroups ( );
__declspec(implementation_key(4103)) VARIANT_BOOL _IConnectorTableAuto::GetWrapDataCellsToNewRow ( );
__declspec(implementation_key(4104)) void _IConnectorTableAuto::PutWrapDataCellsToNewRow ( VARIANT_BOOL WrapDataCellsToNewRow );
__declspec(implementation_key(4105)) VARIANT_BOOL _IConnectorTableAuto::GetFillEndOfTableWithBlankRows ( );
__declspec(implementation_key(4106)) void _IConnectorTableAuto::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL FillEndOfTableWithBlankRows );
__declspec(implementation_key(4107)) long _IConnectorTableAuto::GetGroupByColumn ( );
__declspec(implementation_key(4108)) void _IConnectorTableAuto::PutGroupByColumn ( long ColumnIndex );
__declspec(implementation_key(4109)) double _IConnectorTableAuto::GetTitleFixedRowHeight ( );
__declspec(implementation_key(4110)) void _IConnectorTableAuto::PutTitleFixedRowHeight ( double TitleFixedRowHeight );
__declspec(implementation_key(4111)) double _IConnectorTableAuto::GetMarginHorizontal ( );
__declspec(implementation_key(4112)) void _IConnectorTableAuto::PutMarginHorizontal ( double MarginHorizontal );
__declspec(implementation_key(4113)) double _IConnectorTableAuto::GetMarginVertical ( );
__declspec(implementation_key(4114)) void _IConnectorTableAuto::PutMarginVertical ( double MarginVertical );
__declspec(implementation_key(4115)) _bstr_t _IConnectorTableAuto::GetName ( );
__declspec(implementation_key(4116)) TGFramework::ApplicationPtr BlockTables::GetApplication ( );
__declspec(implementation_key(4117)) long BlockTables::GetCount ( );
__declspec(implementation_key(4118)) BlockTablePtr BlockTables::Item ( const _variant_t & Index );
__declspec(implementation_key(4119)) BlockTablePtr BlockTables::AddByActiveSheet ( _bstr_t SavedSettings, long AutoBalloon );
__declspec(implementation_key(4120)) BlockTablePtr BlockTables::AddByDrawingView ( struct DrawingView * DrawingView, _bstr_t SavedSettings, long AutoBalloon, long BlocksInView );
__declspec(implementation_key(4121)) BlockTablePtr BlockTables::AddByUserSelection ( _bstr_t SavedSettings, long AutoBalloon );
__declspec(implementation_key(4122)) IDispatchPtr BlockTables::GetParent ( );
__declspec(implementation_key(4123)) TGFramework::ApplicationPtr BlockTable::GetApplication ( );
__declspec(implementation_key(4124)) HRESULT BlockTable::Update ( );
__declspec(implementation_key(4125)) HRESULT BlockTable::CopyToClipboard ( );
__declspec(implementation_key(4126)) HRESULT BlockTable::SourceBlocks ( SAFEARRAY * * ppBlocks );
__declspec(implementation_key(4127)) HRESULT BlockTable::Delete ( );
__declspec(implementation_key(4128)) void BlockTable::PutSavedSettings ( _bstr_t _arg1 );
__declspec(implementation_key(4129)) IDispatchPtr BlockTable::GetParent ( );
__declspec(implementation_key(4130)) HRESULT BlockTable::SetOrigin ( double x, double y );
__declspec(implementation_key(4131)) HRESULT BlockTable::GetOrigin ( double * x, double * y );
__declspec(implementation_key(4132)) HRESULT BlockTable::GetListOfSavedSettings ( long * NumSavedSettings, SAFEARRAY * * ListOfSavedSettings );
__declspec(implementation_key(4133)) VARIANT_BOOL BlockTable::GetIsUpToDate ( );
__declspec(implementation_key(4134)) HRESULT BlockTable::ConvertToTable ( );
__declspec(implementation_key(4135)) TableCellPtr BlockTable::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex );
__declspec(implementation_key(4136)) enum TitlePosition BlockTable::GetColumnHeaderPosition ( );
__declspec(implementation_key(4137)) void BlockTable::PutColumnHeaderPosition ( enum TitlePosition _arg1 );
__declspec(implementation_key(4138)) TableColumnsPtr BlockTable::GetColumns ( );
__declspec(implementation_key(4139)) double BlockTable::GetMargin ( );
__declspec(implementation_key(4140)) void BlockTable::PutMargin ( double _arg1 );
__declspec(implementation_key(4141)) long BlockTable::GetMaximumRows ( );
__declspec(implementation_key(4142)) void BlockTable::PutMaximumRows ( long _arg1 );
__declspec(implementation_key(4143)) double BlockTable::GetPageGap ( );
__declspec(implementation_key(4144)) void BlockTable::PutPageGap ( double _arg1 );
__declspec(implementation_key(4145)) VARIANT_BOOL BlockTable::GetReverseDisplayOrder ( );
__declspec(implementation_key(4146)) void BlockTable::PutReverseDisplayOrder ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4147)) TableRowsPtr BlockTable::GetRows ( );
__declspec(implementation_key(4148)) VARIANT_BOOL BlockTable::GetShowColumnHeader ( );
__declspec(implementation_key(4149)) void BlockTable::PutShowColumnHeader ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4150)) _bstr_t BlockTable::GetTableStyle ( );
__declspec(implementation_key(4151)) void BlockTable::PutTableStyle ( _bstr_t _arg1 );
__declspec(implementation_key(4152)) TableTitlesPtr BlockTable::GetTitles ( );
__declspec(implementation_key(4153)) enum TableAnchorPoint BlockTable::GetAnchorPoint ( );
__declspec(implementation_key(4154)) void BlockTable::PutAnchorPoint ( enum TableAnchorPoint _arg1 );
__declspec(implementation_key(4155)) TablePagesPtr BlockTable::GetPages ( );
__declspec(implementation_key(4156)) double BlockTable::GetHeaderFixedRowHeight ( );
__declspec(implementation_key(4157)) void BlockTable::PutHeaderFixedRowHeight ( double _arg1 );
__declspec(implementation_key(4158)) double BlockTable::GetDataFixedRowHeight ( );
__declspec(implementation_key(4159)) void BlockTable::PutDataFixedRowHeight ( double _arg1 );
__declspec(implementation_key(4160)) double BlockTable::GetMaximumHeight ( );
__declspec(implementation_key(4161)) void BlockTable::PutMaximumHeight ( double _arg1 );
__declspec(implementation_key(4162)) long BlockTable::GetNumberOfHeaderRows ( );
__declspec(implementation_key(4163)) void BlockTable::PutNumberOfHeaderRows ( long _arg1 );
__declspec(implementation_key(4164)) long BlockTable::GetMaximumRowsFirstPage ( );
__declspec(implementation_key(4165)) void BlockTable::PutMaximumRowsFirstPage ( long _arg1 );
__declspec(implementation_key(4166)) long BlockTable::GetMaximumRowsAdditionalPages ( );
__declspec(implementation_key(4167)) void BlockTable::PutMaximumRowsAdditionalPages ( long _arg1 );
__declspec(implementation_key(4168)) double BlockTable::GetMaximumHeightFirstPage ( );
__declspec(implementation_key(4169)) void BlockTable::PutMaximumHeightFirstPage ( double _arg1 );
__declspec(implementation_key(4170)) double BlockTable::GetMaximumHeightAdditionalPages ( );
__declspec(implementation_key(4171)) void BlockTable::PutMaximumHeightAdditionalPages ( double _arg1 );
__declspec(implementation_key(4172)) VARIANT_BOOL BlockTable::GetCreateNewSheetsForTable ( );
__declspec(implementation_key(4173)) void BlockTable::PutCreateNewSheetsForTable ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4174)) _bstr_t BlockTable::GetFirstSheetBackgroundName ( );
__declspec(implementation_key(4175)) void BlockTable::PutFirstSheetBackgroundName ( _bstr_t _arg1 );
__declspec(implementation_key(4176)) _bstr_t BlockTable::GetAdditionalSheetsBackgroundName ( );
__declspec(implementation_key(4177)) void BlockTable::PutAdditionalSheetsBackgroundName ( _bstr_t _arg1 );
__declspec(implementation_key(4178)) VARIANT_BOOL BlockTable::GetShowSheetBackground ( );
__declspec(implementation_key(4179)) void BlockTable::PutShowSheetBackground ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4180)) VARIANT_BOOL BlockTable::GetMaintainSheetsWithTableSize ( );
__declspec(implementation_key(4181)) void BlockTable::PutMaintainSheetsWithTableSize ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4182)) VARIANT_BOOL BlockTable::GetEnableGroups ( );
__declspec(implementation_key(4183)) void BlockTable::PutEnableGroups ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4184)) TableGroupsPtr BlockTable::GetGroups ( );
__declspec(implementation_key(4185)) VARIANT_BOOL BlockTable::GetWrapDataCellsToNewRow ( );
__declspec(implementation_key(4186)) void BlockTable::PutWrapDataCellsToNewRow ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4187)) VARIANT_BOOL BlockTable::GetFillEndOfTableWithBlankRows ( );
__declspec(implementation_key(4188)) void BlockTable::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4189)) long BlockTable::GetGroupByColumn ( );
__declspec(implementation_key(4190)) void BlockTable::PutGroupByColumn ( long _arg1 );
__declspec(implementation_key(4191)) double BlockTable::GetTitleFixedRowHeight ( );
__declspec(implementation_key(4192)) void BlockTable::PutTitleFixedRowHeight ( double _arg1 );
__declspec(implementation_key(4193)) long BlockTable::GetItemNumberStart ( );
__declspec(implementation_key(4194)) void BlockTable::PutItemNumberStart ( long _arg1 );
__declspec(implementation_key(4195)) long BlockTable::GetItemNumberIncrement ( );
__declspec(implementation_key(4196)) void BlockTable::PutItemNumberIncrement ( long _arg1 );
__declspec(implementation_key(4197)) VARIANT_BOOL BlockTable::GetMarkUnballoonedItems ( );
__declspec(implementation_key(4198)) void BlockTable::PutMarkUnballoonedItems ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4199)) _bstr_t BlockTable::GetMarkUnballoonedItemsString ( );
__declspec(implementation_key(4200)) void BlockTable::PutMarkUnballoonedItemsString ( _bstr_t _arg1 );
__declspec(implementation_key(4201)) VARIANT_BOOL BlockTable::GetRenumberAccordingToSortOrder ( );
__declspec(implementation_key(4202)) void BlockTable::PutRenumberAccordingToSortOrder ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4203)) VARIANT_BOOL BlockTable::GetConvertDeletedBlocksIntoUserDefinedRows ( );
__declspec(implementation_key(4204)) void BlockTable::PutConvertDeletedBlocksIntoUserDefinedRows ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4205)) enum BlockTableType BlockTable::GetListType ( );
__declspec(implementation_key(4206)) void BlockTable::PutListType ( enum BlockTableType _arg1 );
__declspec(implementation_key(4207)) VARIANT_BOOL BlockTable::GetListBlockOnSeparateRow ( );
__declspec(implementation_key(4208)) void BlockTable::PutListBlockOnSeparateRow ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4209)) VARIANT_BOOL BlockTable::GetUseSameItemNumberForBlockViews ( );
__declspec(implementation_key(4210)) void BlockTable::PutUseSameItemNumberForBlockViews ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4211)) VARIANT_BOOL BlockTable::GetListByBlockOccurrence ( );
__declspec(implementation_key(4212)) void BlockTable::PutListByBlockOccurrence ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4213)) VARIANT_BOOL BlockTable::GetListBlockOrBlockViewOnSeparateRow ( );
__declspec(implementation_key(4214)) void BlockTable::PutListBlockOrBlockViewOnSeparateRow ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4215)) VARIANT_BOOL BlockTable::GetListNestedBlocks ( );
__declspec(implementation_key(4216)) void BlockTable::PutListNestedBlocks ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4217)) VARIANT_BOOL BlockTable::GetListAllNestedBlocksSeparately ( );
__declspec(implementation_key(4218)) void BlockTable::PutListAllNestedBlocksSeparately ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4219)) VARIANT_BOOL BlockTable::GetListWithNestedStructure ( );
__declspec(implementation_key(4220)) void BlockTable::PutListWithNestedStructure ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4221)) VARIANT_BOOL BlockTable::GetUseLevelBasedItemNumbers ( );
__declspec(implementation_key(4222)) void BlockTable::PutUseLevelBasedItemNumbers ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4223)) double BlockTable::GetMarginHorizontal ( );
__declspec(implementation_key(4224)) void BlockTable::PutMarginHorizontal ( double _arg1 );
__declspec(implementation_key(4225)) double BlockTable::GetMarginVertical ( );
__declspec(implementation_key(4226)) void BlockTable::PutMarginVertical ( double _arg1 );
__declspec(implementation_key(4227)) _bstr_t BlockTable::GetName ( );
__declspec(implementation_key(4228)) TGFramework::ApplicationPtr _IBlockTablesAuto::GetApplication ( );
__declspec(implementation_key(4229)) long _IBlockTablesAuto::GetCount ( );
__declspec(implementation_key(4230)) BlockTablePtr _IBlockTablesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(4231)) IUnknownPtr _IBlockTablesAuto::Get_NewEnum ( );
__declspec(implementation_key(4232)) BlockTablePtr _IBlockTablesAuto::AddByActiveSheet ( _bstr_t SavedSettings, long AutoBalloon );
__declspec(implementation_key(4233)) BlockTablePtr _IBlockTablesAuto::AddByDrawingView ( struct DrawingView * DrawingView, _bstr_t SavedSettings, long AutoBalloon, long BlocksInView );
__declspec(implementation_key(4234)) BlockTablePtr _IBlockTablesAuto::AddByUserSelection ( _bstr_t SavedSettings, long AutoBalloon );
__declspec(implementation_key(4235)) IDispatchPtr _IBlockTablesAuto::GetParent ( );
__declspec(implementation_key(4236)) TGFramework::ApplicationPtr _IBlockTableAuto::GetApplication ( );
__declspec(implementation_key(4237)) HRESULT _IBlockTableAuto::Update ( );
__declspec(implementation_key(4238)) HRESULT _IBlockTableAuto::CopyToClipboard ( );
__declspec(implementation_key(4239)) HRESULT _IBlockTableAuto::SourceBlocks ( SAFEARRAY * * ppBlocks );
__declspec(implementation_key(4240)) HRESULT _IBlockTableAuto::Delete ( );
__declspec(implementation_key(4241)) void _IBlockTableAuto::PutSavedSettings ( _bstr_t _arg1 );
__declspec(implementation_key(4242)) IDispatchPtr _IBlockTableAuto::GetParent ( );
__declspec(implementation_key(4243)) HRESULT _IBlockTableAuto::SetOrigin ( double x, double y );
__declspec(implementation_key(4244)) HRESULT _IBlockTableAuto::GetOrigin ( double * x, double * y );
__declspec(implementation_key(4245)) HRESULT _IBlockTableAuto::GetListOfSavedSettings ( long * NumSavedSettings, SAFEARRAY * * ListOfSavedSettings );
__declspec(implementation_key(4246)) VARIANT_BOOL _IBlockTableAuto::GetIsUpToDate ( );
__declspec(implementation_key(4247)) HRESULT _IBlockTableAuto::ConvertToTable ( );
__declspec(implementation_key(4248)) TableCellPtr _IBlockTableAuto::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex );
__declspec(implementation_key(4249)) enum TitlePosition _IBlockTableAuto::GetColumnHeaderPosition ( );
__declspec(implementation_key(4250)) void _IBlockTableAuto::PutColumnHeaderPosition ( enum TitlePosition ColumnHeaderPosition );
__declspec(implementation_key(4251)) TableColumnsPtr _IBlockTableAuto::GetColumns ( );
__declspec(implementation_key(4252)) double _IBlockTableAuto::GetMargin ( );
__declspec(implementation_key(4253)) void _IBlockTableAuto::PutMargin ( double Margin );
__declspec(implementation_key(4254)) long _IBlockTableAuto::GetMaximumRows ( );
__declspec(implementation_key(4255)) void _IBlockTableAuto::PutMaximumRows ( long MaximumRows );
__declspec(implementation_key(4256)) double _IBlockTableAuto::GetPageGap ( );
__declspec(implementation_key(4257)) void _IBlockTableAuto::PutPageGap ( double PageGap );
__declspec(implementation_key(4258)) VARIANT_BOOL _IBlockTableAuto::GetReverseDisplayOrder ( );
__declspec(implementation_key(4259)) void _IBlockTableAuto::PutReverseDisplayOrder ( VARIANT_BOOL ReverseDisplayOrder );
__declspec(implementation_key(4260)) TableRowsPtr _IBlockTableAuto::GetRows ( );
__declspec(implementation_key(4261)) VARIANT_BOOL _IBlockTableAuto::GetShowColumnHeader ( );
__declspec(implementation_key(4262)) void _IBlockTableAuto::PutShowColumnHeader ( VARIANT_BOOL ShowColumnHeader );
__declspec(implementation_key(4263)) _bstr_t _IBlockTableAuto::GetTableStyle ( );
__declspec(implementation_key(4264)) void _IBlockTableAuto::PutTableStyle ( _bstr_t TableStyle );
__declspec(implementation_key(4265)) TableTitlesPtr _IBlockTableAuto::GetTitles ( );
__declspec(implementation_key(4266)) enum TableAnchorPoint _IBlockTableAuto::GetAnchorPoint ( );
__declspec(implementation_key(4267)) void _IBlockTableAuto::PutAnchorPoint ( enum TableAnchorPoint AnchorPoint );
__declspec(implementation_key(4268)) TablePagesPtr _IBlockTableAuto::GetPages ( );
__declspec(implementation_key(4269)) double _IBlockTableAuto::GetHeaderFixedRowHeight ( );
__declspec(implementation_key(4270)) void _IBlockTableAuto::PutHeaderFixedRowHeight ( double HeaderFixedRowHeight );
__declspec(implementation_key(4271)) double _IBlockTableAuto::GetDataFixedRowHeight ( );
__declspec(implementation_key(4272)) void _IBlockTableAuto::PutDataFixedRowHeight ( double DataFixedRowHeight );
__declspec(implementation_key(4273)) double _IBlockTableAuto::GetMaximumHeight ( );
__declspec(implementation_key(4274)) void _IBlockTableAuto::PutMaximumHeight ( double MaximumHeight );
__declspec(implementation_key(4275)) long _IBlockTableAuto::GetNumberOfHeaderRows ( );
__declspec(implementation_key(4276)) void _IBlockTableAuto::PutNumberOfHeaderRows ( long NumberOfHeaderRows );
__declspec(implementation_key(4277)) long _IBlockTableAuto::GetMaximumRowsFirstPage ( );
__declspec(implementation_key(4278)) void _IBlockTableAuto::PutMaximumRowsFirstPage ( long MaximumRowsFirstPage );
__declspec(implementation_key(4279)) long _IBlockTableAuto::GetMaximumRowsAdditionalPages ( );
__declspec(implementation_key(4280)) void _IBlockTableAuto::PutMaximumRowsAdditionalPages ( long MaximumRowsAdditionalPages );
__declspec(implementation_key(4281)) double _IBlockTableAuto::GetMaximumHeightFirstPage ( );
__declspec(implementation_key(4282)) void _IBlockTableAuto::PutMaximumHeightFirstPage ( double MaximumHeightFirstPage );
__declspec(implementation_key(4283)) double _IBlockTableAuto::GetMaximumHeightAdditionalPages ( );
__declspec(implementation_key(4284)) void _IBlockTableAuto::PutMaximumHeightAdditionalPages ( double MaximumHeightAdditionalPages );
__declspec(implementation_key(4285)) VARIANT_BOOL _IBlockTableAuto::GetCreateNewSheetsForTable ( );
__declspec(implementation_key(4286)) void _IBlockTableAuto::PutCreateNewSheetsForTable ( VARIANT_BOOL CreateNewSheetsForTable );
__declspec(implementation_key(4287)) _bstr_t _IBlockTableAuto::GetFirstSheetBackgroundName ( );
__declspec(implementation_key(4288)) void _IBlockTableAuto::PutFirstSheetBackgroundName ( _bstr_t FirstSheetBackgroundName );
__declspec(implementation_key(4289)) _bstr_t _IBlockTableAuto::GetAdditionalSheetsBackgroundName ( );
__declspec(implementation_key(4290)) void _IBlockTableAuto::PutAdditionalSheetsBackgroundName ( _bstr_t AdditionalSheetsBackgroundName );
__declspec(implementation_key(4291)) VARIANT_BOOL _IBlockTableAuto::GetShowSheetBackground ( );
__declspec(implementation_key(4292)) void _IBlockTableAuto::PutShowSheetBackground ( VARIANT_BOOL ShowSheetBackground );
__declspec(implementation_key(4293)) VARIANT_BOOL _IBlockTableAuto::GetMaintainSheetsWithTableSize ( );
__declspec(implementation_key(4294)) void _IBlockTableAuto::PutMaintainSheetsWithTableSize ( VARIANT_BOOL MaintainSheetsWithTableSize );
__declspec(implementation_key(4295)) VARIANT_BOOL _IBlockTableAuto::GetEnableGroups ( );
__declspec(implementation_key(4296)) void _IBlockTableAuto::PutEnableGroups ( VARIANT_BOOL EnableGroups );
__declspec(implementation_key(4297)) TableGroupsPtr _IBlockTableAuto::GetGroups ( );
__declspec(implementation_key(4298)) VARIANT_BOOL _IBlockTableAuto::GetWrapDataCellsToNewRow ( );
__declspec(implementation_key(4299)) void _IBlockTableAuto::PutWrapDataCellsToNewRow ( VARIANT_BOOL WrapDataCellsToNewRow );
__declspec(implementation_key(4300)) VARIANT_BOOL _IBlockTableAuto::GetFillEndOfTableWithBlankRows ( );
__declspec(implementation_key(4301)) void _IBlockTableAuto::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL FillEndOfTableWithBlankRows );
__declspec(implementation_key(4302)) long _IBlockTableAuto::GetGroupByColumn ( );
__declspec(implementation_key(4303)) void _IBlockTableAuto::PutGroupByColumn ( long ColumnIndex );
__declspec(implementation_key(4304)) double _IBlockTableAuto::GetTitleFixedRowHeight ( );
__declspec(implementation_key(4305)) void _IBlockTableAuto::PutTitleFixedRowHeight ( double TitleFixedRowHeight );
__declspec(implementation_key(4306)) long _IBlockTableAuto::GetItemNumberStart ( );
__declspec(implementation_key(4307)) void _IBlockTableAuto::PutItemNumberStart ( long ItemNumberStart );
__declspec(implementation_key(4308)) long _IBlockTableAuto::GetItemNumberIncrement ( );
__declspec(implementation_key(4309)) void _IBlockTableAuto::PutItemNumberIncrement ( long ItemNumberIncrement );
__declspec(implementation_key(4310)) VARIANT_BOOL _IBlockTableAuto::GetMarkUnballoonedItems ( );
__declspec(implementation_key(4311)) void _IBlockTableAuto::PutMarkUnballoonedItems ( VARIANT_BOOL MarkUnballoonedItems );
__declspec(implementation_key(4312)) _bstr_t _IBlockTableAuto::GetMarkUnballoonedItemsString ( );
__declspec(implementation_key(4313)) void _IBlockTableAuto::PutMarkUnballoonedItemsString ( _bstr_t MarkUnballoonedItemsString );
__declspec(implementation_key(4314)) VARIANT_BOOL _IBlockTableAuto::GetRenumberAccordingToSortOrder ( );
__declspec(implementation_key(4315)) void _IBlockTableAuto::PutRenumberAccordingToSortOrder ( VARIANT_BOOL RenumberAccordingToSortOrder );
__declspec(implementation_key(4316)) VARIANT_BOOL _IBlockTableAuto::GetConvertDeletedBlocksIntoUserDefinedRows ( );
__declspec(implementation_key(4317)) void _IBlockTableAuto::PutConvertDeletedBlocksIntoUserDefinedRows ( VARIANT_BOOL ConvertDeletedBlocksIntoUserDefinedRows );
__declspec(implementation_key(4318)) enum BlockTableType _IBlockTableAuto::GetListType ( );
__declspec(implementation_key(4319)) void _IBlockTableAuto::PutListType ( enum BlockTableType ListType );
__declspec(implementation_key(4320)) VARIANT_BOOL _IBlockTableAuto::GetListBlockOnSeparateRow ( );
__declspec(implementation_key(4321)) void _IBlockTableAuto::PutListBlockOnSeparateRow ( VARIANT_BOOL ListBlockOnSeparateRow );
__declspec(implementation_key(4322)) VARIANT_BOOL _IBlockTableAuto::GetUseSameItemNumberForBlockViews ( );
__declspec(implementation_key(4323)) void _IBlockTableAuto::PutUseSameItemNumberForBlockViews ( VARIANT_BOOL UseSameItemNumberForBlockViews );
__declspec(implementation_key(4324)) VARIANT_BOOL _IBlockTableAuto::GetListByBlockOccurrence ( );
__declspec(implementation_key(4325)) void _IBlockTableAuto::PutListByBlockOccurrence ( VARIANT_BOOL ListByBlockOccurrence );
__declspec(implementation_key(4326)) VARIANT_BOOL _IBlockTableAuto::GetListBlockOrBlockViewOnSeparateRow ( );
__declspec(implementation_key(4327)) void _IBlockTableAuto::PutListBlockOrBlockViewOnSeparateRow ( VARIANT_BOOL ListBlockOrBlockViewOnSeparateRow );
__declspec(implementation_key(4328)) VARIANT_BOOL _IBlockTableAuto::GetListNestedBlocks ( );
__declspec(implementation_key(4329)) void _IBlockTableAuto::PutListNestedBlocks ( VARIANT_BOOL ListNestedBlocks );
__declspec(implementation_key(4330)) VARIANT_BOOL _IBlockTableAuto::GetListAllNestedBlocksSeparately ( );
__declspec(implementation_key(4331)) void _IBlockTableAuto::PutListAllNestedBlocksSeparately ( VARIANT_BOOL ListAllNestedBlocksSeparately );
__declspec(implementation_key(4332)) VARIANT_BOOL _IBlockTableAuto::GetListWithNestedStructure ( );
__declspec(implementation_key(4333)) void _IBlockTableAuto::PutListWithNestedStructure ( VARIANT_BOOL ListWithNestedStructure );
__declspec(implementation_key(4334)) VARIANT_BOOL _IBlockTableAuto::GetUseLevelBasedItemNumbers ( );
__declspec(implementation_key(4335)) void _IBlockTableAuto::PutUseLevelBasedItemNumbers ( VARIANT_BOOL UseLevelBasedItemNumbers );
__declspec(implementation_key(4336)) double _IBlockTableAuto::GetMarginHorizontal ( );
__declspec(implementation_key(4337)) void _IBlockTableAuto::PutMarginHorizontal ( double MarginHorizontal );
__declspec(implementation_key(4338)) double _IBlockTableAuto::GetMarginVertical ( );
__declspec(implementation_key(4339)) void _IBlockTableAuto::PutMarginVertical ( double MarginVertical );
__declspec(implementation_key(4340)) _bstr_t _IBlockTableAuto::GetName ( );
__declspec(implementation_key(4341)) TGFramework::ApplicationPtr FOPTables::GetApplication ( );
__declspec(implementation_key(4342)) long FOPTables::GetCount ( );
__declspec(implementation_key(4343)) FOPTablePtr FOPTables::Item ( const _variant_t & Index );
__declspec(implementation_key(4344)) FOPTablePtr FOPTables::Add ( struct DrawingView * pDrawingView );
__declspec(implementation_key(4345)) IDispatchPtr FOPTables::GetParent ( );
__declspec(implementation_key(4346)) TGFramework::ApplicationPtr FOPTable::GetApplication ( );
__declspec(implementation_key(4347)) HRESULT FOPTable::Update ( );
__declspec(implementation_key(4348)) ModelLinkPtr FOPTable::GetModelLink ( );
__declspec(implementation_key(4349)) HRESULT FOPTable::Delete ( );
__declspec(implementation_key(4350)) IDispatchPtr FOPTable::GetParent ( );
__declspec(implementation_key(4351)) TableCellPtr FOPTable::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex );
__declspec(implementation_key(4352)) enum TitlePosition FOPTable::GetColumnHeaderPosition ( );
__declspec(implementation_key(4353)) void FOPTable::PutColumnHeaderPosition ( enum TitlePosition _arg1 );
__declspec(implementation_key(4354)) TableColumnsPtr FOPTable::GetColumns ( );
__declspec(implementation_key(4355)) double FOPTable::GetMarginHorizontal ( );
__declspec(implementation_key(4356)) void FOPTable::PutMarginHorizontal ( double _arg1 );
__declspec(implementation_key(4357)) double FOPTable::GetMarginVertical ( );
__declspec(implementation_key(4358)) void FOPTable::PutMarginVertical ( double _arg1 );
__declspec(implementation_key(4359)) long FOPTable::GetMaximumRows ( );
__declspec(implementation_key(4360)) void FOPTable::PutMaximumRows ( long _arg1 );
__declspec(implementation_key(4361)) double FOPTable::GetPageGap ( );
__declspec(implementation_key(4362)) void FOPTable::PutPageGap ( double _arg1 );
__declspec(implementation_key(4363)) VARIANT_BOOL FOPTable::GetReverseDisplayOrder ( );
__declspec(implementation_key(4364)) void FOPTable::PutReverseDisplayOrder ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4365)) TableRowsPtr FOPTable::GetRows ( );
__declspec(implementation_key(4366)) HRESULT FOPTable::SetOrigin ( double x, double y );
__declspec(implementation_key(4367)) VARIANT_BOOL FOPTable::GetShowColumnHeader ( );
__declspec(implementation_key(4368)) void FOPTable::PutShowColumnHeader ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4369)) _bstr_t FOPTable::GetTableStyle ( );
__declspec(implementation_key(4370)) void FOPTable::PutTableStyle ( _bstr_t _arg1 );
__declspec(implementation_key(4371)) TableTitlesPtr FOPTable::GetTitles ( );
__declspec(implementation_key(4372)) enum TableAnchorPoint FOPTable::GetAnchorPoint ( );
__declspec(implementation_key(4373)) void FOPTable::PutAnchorPoint ( enum TableAnchorPoint _arg1 );
__declspec(implementation_key(4374)) TablePagesPtr FOPTable::GetPages ( );
__declspec(implementation_key(4375)) double FOPTable::GetHeaderFixedRowHeight ( );
__declspec(implementation_key(4376)) void FOPTable::PutHeaderFixedRowHeight ( double _arg1 );
__declspec(implementation_key(4377)) double FOPTable::GetDataFixedRowHeight ( );
__declspec(implementation_key(4378)) void FOPTable::PutDataFixedRowHeight ( double _arg1 );
__declspec(implementation_key(4379)) double FOPTable::GetMaximumHeight ( );
__declspec(implementation_key(4380)) void FOPTable::PutMaximumHeight ( double _arg1 );
__declspec(implementation_key(4381)) long FOPTable::GetNumberOfHeaderRows ( );
__declspec(implementation_key(4382)) void FOPTable::PutNumberOfHeaderRows ( long _arg1 );
__declspec(implementation_key(4383)) long FOPTable::GetMaximumRowsFirstPage ( );
__declspec(implementation_key(4384)) void FOPTable::PutMaximumRowsFirstPage ( long _arg1 );
__declspec(implementation_key(4385)) long FOPTable::GetMaximumRowsAdditionalPages ( );
__declspec(implementation_key(4386)) void FOPTable::PutMaximumRowsAdditionalPages ( long _arg1 );
__declspec(implementation_key(4387)) double FOPTable::GetMaximumHeightFirstPage ( );
__declspec(implementation_key(4388)) void FOPTable::PutMaximumHeightFirstPage ( double _arg1 );
__declspec(implementation_key(4389)) double FOPTable::GetMaximumHeightAdditionalPages ( );
__declspec(implementation_key(4390)) void FOPTable::PutMaximumHeightAdditionalPages ( double _arg1 );
__declspec(implementation_key(4391)) VARIANT_BOOL FOPTable::GetCreateNewSheetsForTable ( );
__declspec(implementation_key(4392)) void FOPTable::PutCreateNewSheetsForTable ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4393)) _bstr_t FOPTable::GetFirstSheetBackgroundName ( );
__declspec(implementation_key(4394)) void FOPTable::PutFirstSheetBackgroundName ( _bstr_t _arg1 );
__declspec(implementation_key(4395)) _bstr_t FOPTable::GetAdditionalSheetsBackgroundName ( );
__declspec(implementation_key(4396)) void FOPTable::PutAdditionalSheetsBackgroundName ( _bstr_t _arg1 );
__declspec(implementation_key(4397)) VARIANT_BOOL FOPTable::GetShowSheetBackground ( );
__declspec(implementation_key(4398)) void FOPTable::PutShowSheetBackground ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4399)) VARIANT_BOOL FOPTable::GetMaintainSheetsWithTableSize ( );
__declspec(implementation_key(4400)) void FOPTable::PutMaintainSheetsWithTableSize ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4401)) VARIANT_BOOL FOPTable::GetEnableGroups ( );
__declspec(implementation_key(4402)) void FOPTable::PutEnableGroups ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4403)) TableGroupsPtr FOPTable::GetGroups ( );
__declspec(implementation_key(4404)) VARIANT_BOOL FOPTable::GetWrapDataCellsToNewRow ( );
__declspec(implementation_key(4405)) void FOPTable::PutWrapDataCellsToNewRow ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4406)) VARIANT_BOOL FOPTable::GetFillEndOfTableWithBlankRows ( );
__declspec(implementation_key(4407)) void FOPTable::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4408)) long FOPTable::GetGroupByColumn ( );
__declspec(implementation_key(4409)) void FOPTable::PutGroupByColumn ( long _arg1 );
__declspec(implementation_key(4410)) double FOPTable::GetTitleFixedRowHeight ( );
__declspec(implementation_key(4411)) void FOPTable::PutTitleFixedRowHeight ( double _arg1 );
__declspec(implementation_key(4412)) _bstr_t FOPTable::GetName ( );
__declspec(implementation_key(4413)) TGFramework::ApplicationPtr _IFOPTablesAuto::GetApplication ( );
__declspec(implementation_key(4414)) long _IFOPTablesAuto::GetCount ( );
__declspec(implementation_key(4415)) FOPTablePtr _IFOPTablesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(4416)) IUnknownPtr _IFOPTablesAuto::Get_NewEnum ( );
__declspec(implementation_key(4417)) FOPTablePtr _IFOPTablesAuto::Add ( struct DrawingView * pDrawingView );
__declspec(implementation_key(4418)) IDispatchPtr _IFOPTablesAuto::GetParent ( );
__declspec(implementation_key(4419)) TGFramework::ApplicationPtr _IFOPTableAuto::GetApplication ( );
__declspec(implementation_key(4420)) HRESULT _IFOPTableAuto::Update ( );
__declspec(implementation_key(4421)) ModelLinkPtr _IFOPTableAuto::GetModelLink ( );
__declspec(implementation_key(4422)) HRESULT _IFOPTableAuto::Delete ( );
__declspec(implementation_key(4423)) IDispatchPtr _IFOPTableAuto::GetParent ( );
__declspec(implementation_key(4424)) TableCellPtr _IFOPTableAuto::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex );
__declspec(implementation_key(4425)) enum TitlePosition _IFOPTableAuto::GetColumnHeaderPosition ( );
__declspec(implementation_key(4426)) void _IFOPTableAuto::PutColumnHeaderPosition ( enum TitlePosition ColumnHeaderPosition );
__declspec(implementation_key(4427)) TableColumnsPtr _IFOPTableAuto::GetColumns ( );
__declspec(implementation_key(4428)) double _IFOPTableAuto::GetMarginHorizontal ( );
__declspec(implementation_key(4429)) void _IFOPTableAuto::PutMarginHorizontal ( double MarginHorizontal );
__declspec(implementation_key(4430)) double _IFOPTableAuto::GetMarginVertical ( );
__declspec(implementation_key(4431)) void _IFOPTableAuto::PutMarginVertical ( double MarginVertical );
__declspec(implementation_key(4432)) long _IFOPTableAuto::GetMaximumRows ( );
__declspec(implementation_key(4433)) void _IFOPTableAuto::PutMaximumRows ( long MaximumRows );
__declspec(implementation_key(4434)) double _IFOPTableAuto::GetPageGap ( );
__declspec(implementation_key(4435)) void _IFOPTableAuto::PutPageGap ( double PageGap );
__declspec(implementation_key(4436)) VARIANT_BOOL _IFOPTableAuto::GetReverseDisplayOrder ( );
__declspec(implementation_key(4437)) void _IFOPTableAuto::PutReverseDisplayOrder ( VARIANT_BOOL ReverseDisplayOrder );
__declspec(implementation_key(4438)) TableRowsPtr _IFOPTableAuto::GetRows ( );
__declspec(implementation_key(4439)) HRESULT _IFOPTableAuto::SetOrigin ( double x, double y );
__declspec(implementation_key(4440)) VARIANT_BOOL _IFOPTableAuto::GetShowColumnHeader ( );
__declspec(implementation_key(4441)) void _IFOPTableAuto::PutShowColumnHeader ( VARIANT_BOOL ShowColumnHeader );
__declspec(implementation_key(4442)) _bstr_t _IFOPTableAuto::GetTableStyle ( );
__declspec(implementation_key(4443)) void _IFOPTableAuto::PutTableStyle ( _bstr_t TableStyle );
__declspec(implementation_key(4444)) TableTitlesPtr _IFOPTableAuto::GetTitles ( );
__declspec(implementation_key(4445)) enum TableAnchorPoint _IFOPTableAuto::GetAnchorPoint ( );
__declspec(implementation_key(4446)) void _IFOPTableAuto::PutAnchorPoint ( enum TableAnchorPoint AnchorPoint );
__declspec(implementation_key(4447)) TablePagesPtr _IFOPTableAuto::GetPages ( );
__declspec(implementation_key(4448)) double _IFOPTableAuto::GetHeaderFixedRowHeight ( );
__declspec(implementation_key(4449)) void _IFOPTableAuto::PutHeaderFixedRowHeight ( double HeaderFixedRowHeight );
__declspec(implementation_key(4450)) double _IFOPTableAuto::GetDataFixedRowHeight ( );
__declspec(implementation_key(4451)) void _IFOPTableAuto::PutDataFixedRowHeight ( double DataFixedRowHeight );
__declspec(implementation_key(4452)) double _IFOPTableAuto::GetMaximumHeight ( );
__declspec(implementation_key(4453)) void _IFOPTableAuto::PutMaximumHeight ( double MaximumHeight );
__declspec(implementation_key(4454)) long _IFOPTableAuto::GetNumberOfHeaderRows ( );
__declspec(implementation_key(4455)) void _IFOPTableAuto::PutNumberOfHeaderRows ( long NumberOfHeaderRows );
__declspec(implementation_key(4456)) long _IFOPTableAuto::GetMaximumRowsFirstPage ( );
__declspec(implementation_key(4457)) void _IFOPTableAuto::PutMaximumRowsFirstPage ( long MaximumRowsFirstPage );
__declspec(implementation_key(4458)) long _IFOPTableAuto::GetMaximumRowsAdditionalPages ( );
__declspec(implementation_key(4459)) void _IFOPTableAuto::PutMaximumRowsAdditionalPages ( long MaximumRowsAdditionalPages );
__declspec(implementation_key(4460)) double _IFOPTableAuto::GetMaximumHeightFirstPage ( );
__declspec(implementation_key(4461)) void _IFOPTableAuto::PutMaximumHeightFirstPage ( double MaximumHeightFirstPage );
__declspec(implementation_key(4462)) double _IFOPTableAuto::GetMaximumHeightAdditionalPages ( );
__declspec(implementation_key(4463)) void _IFOPTableAuto::PutMaximumHeightAdditionalPages ( double MaximumHeightAdditionalPages );
__declspec(implementation_key(4464)) VARIANT_BOOL _IFOPTableAuto::GetCreateNewSheetsForTable ( );
__declspec(implementation_key(4465)) void _IFOPTableAuto::PutCreateNewSheetsForTable ( VARIANT_BOOL CreateNewSheetsForTable );
__declspec(implementation_key(4466)) _bstr_t _IFOPTableAuto::GetFirstSheetBackgroundName ( );
__declspec(implementation_key(4467)) void _IFOPTableAuto::PutFirstSheetBackgroundName ( _bstr_t FirstSheetBackgroundName );
__declspec(implementation_key(4468)) _bstr_t _IFOPTableAuto::GetAdditionalSheetsBackgroundName ( );
__declspec(implementation_key(4469)) void _IFOPTableAuto::PutAdditionalSheetsBackgroundName ( _bstr_t AdditionalSheetsBackgroundName );
__declspec(implementation_key(4470)) VARIANT_BOOL _IFOPTableAuto::GetShowSheetBackground ( );
__declspec(implementation_key(4471)) void _IFOPTableAuto::PutShowSheetBackground ( VARIANT_BOOL ShowSheetBackground );
__declspec(implementation_key(4472)) VARIANT_BOOL _IFOPTableAuto::GetMaintainSheetsWithTableSize ( );
__declspec(implementation_key(4473)) void _IFOPTableAuto::PutMaintainSheetsWithTableSize ( VARIANT_BOOL MaintainSheetsWithTableSize );
__declspec(implementation_key(4474)) VARIANT_BOOL _IFOPTableAuto::GetEnableGroups ( );
__declspec(implementation_key(4475)) void _IFOPTableAuto::PutEnableGroups ( VARIANT_BOOL EnableGroups );
__declspec(implementation_key(4476)) TableGroupsPtr _IFOPTableAuto::GetGroups ( );
__declspec(implementation_key(4477)) VARIANT_BOOL _IFOPTableAuto::GetWrapDataCellsToNewRow ( );
__declspec(implementation_key(4478)) void _IFOPTableAuto::PutWrapDataCellsToNewRow ( VARIANT_BOOL WrapDataCellsToNewRow );
__declspec(implementation_key(4479)) VARIANT_BOOL _IFOPTableAuto::GetFillEndOfTableWithBlankRows ( );
__declspec(implementation_key(4480)) void _IFOPTableAuto::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL FillEndOfTableWithBlankRows );
__declspec(implementation_key(4481)) long _IFOPTableAuto::GetGroupByColumn ( );
__declspec(implementation_key(4482)) void _IFOPTableAuto::PutGroupByColumn ( long ColumnIndex );
__declspec(implementation_key(4483)) double _IFOPTableAuto::GetTitleFixedRowHeight ( );
__declspec(implementation_key(4484)) void _IFOPTableAuto::PutTitleFixedRowHeight ( double TitleFixedRowHeight );
__declspec(implementation_key(4485)) _bstr_t _IFOPTableAuto::GetName ( );
__declspec(implementation_key(4486)) TGFramework::ApplicationPtr ConductorTables::GetApplication ( );
__declspec(implementation_key(4487)) long ConductorTables::GetCount ( );
__declspec(implementation_key(4488)) ConductorTablePtr ConductorTables::Item ( const _variant_t & Index );
__declspec(implementation_key(4489)) ConductorTablePtr ConductorTables::Add ( struct DrawingView * pDrawingView );
__declspec(implementation_key(4490)) IDispatchPtr ConductorTables::GetParent ( );
__declspec(implementation_key(4491)) TGFramework::ApplicationPtr ConductorTable::GetApplication ( );
__declspec(implementation_key(4492)) HRESULT ConductorTable::Update ( );
__declspec(implementation_key(4493)) ModelLinkPtr ConductorTable::GetModelLink ( );
__declspec(implementation_key(4494)) HRESULT ConductorTable::Delete ( );
__declspec(implementation_key(4495)) IDispatchPtr ConductorTable::GetParent ( );
__declspec(implementation_key(4496)) TableCellPtr ConductorTable::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex );
__declspec(implementation_key(4497)) enum TitlePosition ConductorTable::GetColumnHeaderPosition ( );
__declspec(implementation_key(4498)) void ConductorTable::PutColumnHeaderPosition ( enum TitlePosition _arg1 );
__declspec(implementation_key(4499)) TableColumnsPtr ConductorTable::GetColumns ( );
__declspec(implementation_key(4500)) double ConductorTable::GetMarginHorizontal ( );
__declspec(implementation_key(4501)) void ConductorTable::PutMarginHorizontal ( double _arg1 );
__declspec(implementation_key(4502)) double ConductorTable::GetMarginVertical ( );
__declspec(implementation_key(4503)) void ConductorTable::PutMarginVertical ( double _arg1 );
__declspec(implementation_key(4504)) long ConductorTable::GetMaximumRows ( );
__declspec(implementation_key(4505)) void ConductorTable::PutMaximumRows ( long _arg1 );
__declspec(implementation_key(4506)) double ConductorTable::GetPageGap ( );
__declspec(implementation_key(4507)) void ConductorTable::PutPageGap ( double _arg1 );
__declspec(implementation_key(4508)) VARIANT_BOOL ConductorTable::GetReverseDisplayOrder ( );
__declspec(implementation_key(4509)) void ConductorTable::PutReverseDisplayOrder ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4510)) TableRowsPtr ConductorTable::GetRows ( );
__declspec(implementation_key(4511)) HRESULT ConductorTable::SetOrigin ( double x, double y );
__declspec(implementation_key(4512)) VARIANT_BOOL ConductorTable::GetShowColumnHeader ( );
__declspec(implementation_key(4513)) void ConductorTable::PutShowColumnHeader ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4514)) _bstr_t ConductorTable::GetTableStyle ( );
__declspec(implementation_key(4515)) void ConductorTable::PutTableStyle ( _bstr_t _arg1 );
__declspec(implementation_key(4516)) TableTitlesPtr ConductorTable::GetTitles ( );
__declspec(implementation_key(4517)) enum TableAnchorPoint ConductorTable::GetAnchorPoint ( );
__declspec(implementation_key(4518)) void ConductorTable::PutAnchorPoint ( enum TableAnchorPoint _arg1 );
__declspec(implementation_key(4519)) TablePagesPtr ConductorTable::GetPages ( );
__declspec(implementation_key(4520)) double ConductorTable::GetHeaderFixedRowHeight ( );
__declspec(implementation_key(4521)) void ConductorTable::PutHeaderFixedRowHeight ( double _arg1 );
__declspec(implementation_key(4522)) double ConductorTable::GetDataFixedRowHeight ( );
__declspec(implementation_key(4523)) void ConductorTable::PutDataFixedRowHeight ( double _arg1 );
__declspec(implementation_key(4524)) double ConductorTable::GetMaximumHeight ( );
__declspec(implementation_key(4525)) void ConductorTable::PutMaximumHeight ( double _arg1 );
__declspec(implementation_key(4526)) long ConductorTable::GetNumberOfHeaderRows ( );
__declspec(implementation_key(4527)) void ConductorTable::PutNumberOfHeaderRows ( long _arg1 );
__declspec(implementation_key(4528)) long ConductorTable::GetMaximumRowsFirstPage ( );
__declspec(implementation_key(4529)) void ConductorTable::PutMaximumRowsFirstPage ( long _arg1 );
__declspec(implementation_key(4530)) long ConductorTable::GetMaximumRowsAdditionalPages ( );
__declspec(implementation_key(4531)) void ConductorTable::PutMaximumRowsAdditionalPages ( long _arg1 );
__declspec(implementation_key(4532)) double ConductorTable::GetMaximumHeightFirstPage ( );
__declspec(implementation_key(4533)) void ConductorTable::PutMaximumHeightFirstPage ( double _arg1 );
__declspec(implementation_key(4534)) double ConductorTable::GetMaximumHeightAdditionalPages ( );
__declspec(implementation_key(4535)) void ConductorTable::PutMaximumHeightAdditionalPages ( double _arg1 );
__declspec(implementation_key(4536)) VARIANT_BOOL ConductorTable::GetCreateNewSheetsForTable ( );
__declspec(implementation_key(4537)) void ConductorTable::PutCreateNewSheetsForTable ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4538)) _bstr_t ConductorTable::GetFirstSheetBackgroundName ( );
__declspec(implementation_key(4539)) void ConductorTable::PutFirstSheetBackgroundName ( _bstr_t _arg1 );
__declspec(implementation_key(4540)) _bstr_t ConductorTable::GetAdditionalSheetsBackgroundName ( );
__declspec(implementation_key(4541)) void ConductorTable::PutAdditionalSheetsBackgroundName ( _bstr_t _arg1 );
__declspec(implementation_key(4542)) VARIANT_BOOL ConductorTable::GetShowSheetBackground ( );
__declspec(implementation_key(4543)) void ConductorTable::PutShowSheetBackground ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4544)) VARIANT_BOOL ConductorTable::GetMaintainSheetsWithTableSize ( );
__declspec(implementation_key(4545)) void ConductorTable::PutMaintainSheetsWithTableSize ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4546)) VARIANT_BOOL ConductorTable::GetEnableGroups ( );
__declspec(implementation_key(4547)) void ConductorTable::PutEnableGroups ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4548)) TableGroupsPtr ConductorTable::GetGroups ( );
__declspec(implementation_key(4549)) VARIANT_BOOL ConductorTable::GetWrapDataCellsToNewRow ( );
__declspec(implementation_key(4550)) void ConductorTable::PutWrapDataCellsToNewRow ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4551)) VARIANT_BOOL ConductorTable::GetFillEndOfTableWithBlankRows ( );
__declspec(implementation_key(4552)) void ConductorTable::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4553)) long ConductorTable::GetGroupByColumn ( );
__declspec(implementation_key(4554)) void ConductorTable::PutGroupByColumn ( long _arg1 );
__declspec(implementation_key(4555)) double ConductorTable::GetTitleFixedRowHeight ( );
__declspec(implementation_key(4556)) void ConductorTable::PutTitleFixedRowHeight ( double _arg1 );
__declspec(implementation_key(4557)) HRESULT ConductorTable::GetListOfSavedSettings ( long * NumSavedSettings, SAFEARRAY * * ListOfSavedSettings );
__declspec(implementation_key(4558)) void ConductorTable::PutSavedSettings ( _bstr_t _arg1 );
__declspec(implementation_key(4559)) _bstr_t ConductorTable::GetName ( );
__declspec(implementation_key(4560)) TGFramework::ApplicationPtr _IConductorTablesAuto::GetApplication ( );
__declspec(implementation_key(4561)) long _IConductorTablesAuto::GetCount ( );
__declspec(implementation_key(4562)) ConductorTablePtr _IConductorTablesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(4563)) IUnknownPtr _IConductorTablesAuto::Get_NewEnum ( );
__declspec(implementation_key(4564)) ConductorTablePtr _IConductorTablesAuto::Add ( struct DrawingView * pDrawingView );
__declspec(implementation_key(4565)) IDispatchPtr _IConductorTablesAuto::GetParent ( );
__declspec(implementation_key(4566)) TGFramework::ApplicationPtr _IConductorTableAuto::GetApplication ( );
__declspec(implementation_key(4567)) HRESULT _IConductorTableAuto::Update ( );
__declspec(implementation_key(4568)) ModelLinkPtr _IConductorTableAuto::GetModelLink ( );
__declspec(implementation_key(4569)) HRESULT _IConductorTableAuto::Delete ( );
__declspec(implementation_key(4570)) IDispatchPtr _IConductorTableAuto::GetParent ( );
__declspec(implementation_key(4571)) TableCellPtr _IConductorTableAuto::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex );
__declspec(implementation_key(4572)) enum TitlePosition _IConductorTableAuto::GetColumnHeaderPosition ( );
__declspec(implementation_key(4573)) void _IConductorTableAuto::PutColumnHeaderPosition ( enum TitlePosition ColumnHeaderPosition );
__declspec(implementation_key(4574)) TableColumnsPtr _IConductorTableAuto::GetColumns ( );
__declspec(implementation_key(4575)) double _IConductorTableAuto::GetMarginHorizontal ( );
__declspec(implementation_key(4576)) void _IConductorTableAuto::PutMarginHorizontal ( double MarginHorizontal );
__declspec(implementation_key(4577)) double _IConductorTableAuto::GetMarginVertical ( );
__declspec(implementation_key(4578)) void _IConductorTableAuto::PutMarginVertical ( double MarginVertical );
__declspec(implementation_key(4579)) long _IConductorTableAuto::GetMaximumRows ( );
__declspec(implementation_key(4580)) void _IConductorTableAuto::PutMaximumRows ( long MaximumRows );
__declspec(implementation_key(4581)) double _IConductorTableAuto::GetPageGap ( );
__declspec(implementation_key(4582)) void _IConductorTableAuto::PutPageGap ( double PageGap );
__declspec(implementation_key(4583)) VARIANT_BOOL _IConductorTableAuto::GetReverseDisplayOrder ( );
__declspec(implementation_key(4584)) void _IConductorTableAuto::PutReverseDisplayOrder ( VARIANT_BOOL ReverseDisplayOrder );
__declspec(implementation_key(4585)) TableRowsPtr _IConductorTableAuto::GetRows ( );
__declspec(implementation_key(4586)) HRESULT _IConductorTableAuto::SetOrigin ( double x, double y );
__declspec(implementation_key(4587)) VARIANT_BOOL _IConductorTableAuto::GetShowColumnHeader ( );
__declspec(implementation_key(4588)) void _IConductorTableAuto::PutShowColumnHeader ( VARIANT_BOOL ShowColumnHeader );
__declspec(implementation_key(4589)) _bstr_t _IConductorTableAuto::GetTableStyle ( );
__declspec(implementation_key(4590)) void _IConductorTableAuto::PutTableStyle ( _bstr_t TableStyle );
__declspec(implementation_key(4591)) TableTitlesPtr _IConductorTableAuto::GetTitles ( );
__declspec(implementation_key(4592)) enum TableAnchorPoint _IConductorTableAuto::GetAnchorPoint ( );
__declspec(implementation_key(4593)) void _IConductorTableAuto::PutAnchorPoint ( enum TableAnchorPoint AnchorPoint );
__declspec(implementation_key(4594)) TablePagesPtr _IConductorTableAuto::GetPages ( );
__declspec(implementation_key(4595)) double _IConductorTableAuto::GetHeaderFixedRowHeight ( );
__declspec(implementation_key(4596)) void _IConductorTableAuto::PutHeaderFixedRowHeight ( double HeaderFixedRowHeight );
__declspec(implementation_key(4597)) double _IConductorTableAuto::GetDataFixedRowHeight ( );
__declspec(implementation_key(4598)) void _IConductorTableAuto::PutDataFixedRowHeight ( double DataFixedRowHeight );
__declspec(implementation_key(4599)) double _IConductorTableAuto::GetMaximumHeight ( );
__declspec(implementation_key(4600)) void _IConductorTableAuto::PutMaximumHeight ( double MaximumHeight );
__declspec(implementation_key(4601)) long _IConductorTableAuto::GetNumberOfHeaderRows ( );
__declspec(implementation_key(4602)) void _IConductorTableAuto::PutNumberOfHeaderRows ( long NumberOfHeaderRows );
__declspec(implementation_key(4603)) long _IConductorTableAuto::GetMaximumRowsFirstPage ( );
__declspec(implementation_key(4604)) void _IConductorTableAuto::PutMaximumRowsFirstPage ( long MaximumRowsFirstPage );
__declspec(implementation_key(4605)) long _IConductorTableAuto::GetMaximumRowsAdditionalPages ( );
__declspec(implementation_key(4606)) void _IConductorTableAuto::PutMaximumRowsAdditionalPages ( long MaximumRowsAdditionalPages );
__declspec(implementation_key(4607)) double _IConductorTableAuto::GetMaximumHeightFirstPage ( );
__declspec(implementation_key(4608)) void _IConductorTableAuto::PutMaximumHeightFirstPage ( double MaximumHeightFirstPage );
__declspec(implementation_key(4609)) double _IConductorTableAuto::GetMaximumHeightAdditionalPages ( );
__declspec(implementation_key(4610)) void _IConductorTableAuto::PutMaximumHeightAdditionalPages ( double MaximumHeightAdditionalPages );
__declspec(implementation_key(4611)) VARIANT_BOOL _IConductorTableAuto::GetCreateNewSheetsForTable ( );
__declspec(implementation_key(4612)) void _IConductorTableAuto::PutCreateNewSheetsForTable ( VARIANT_BOOL CreateNewSheetsForTable );
__declspec(implementation_key(4613)) _bstr_t _IConductorTableAuto::GetFirstSheetBackgroundName ( );
__declspec(implementation_key(4614)) void _IConductorTableAuto::PutFirstSheetBackgroundName ( _bstr_t FirstSheetBackgroundName );
__declspec(implementation_key(4615)) _bstr_t _IConductorTableAuto::GetAdditionalSheetsBackgroundName ( );
__declspec(implementation_key(4616)) void _IConductorTableAuto::PutAdditionalSheetsBackgroundName ( _bstr_t AdditionalSheetsBackgroundName );
__declspec(implementation_key(4617)) VARIANT_BOOL _IConductorTableAuto::GetShowSheetBackground ( );
__declspec(implementation_key(4618)) void _IConductorTableAuto::PutShowSheetBackground ( VARIANT_BOOL ShowSheetBackground );
__declspec(implementation_key(4619)) VARIANT_BOOL _IConductorTableAuto::GetMaintainSheetsWithTableSize ( );
__declspec(implementation_key(4620)) void _IConductorTableAuto::PutMaintainSheetsWithTableSize ( VARIANT_BOOL MaintainSheetsWithTableSize );
__declspec(implementation_key(4621)) VARIANT_BOOL _IConductorTableAuto::GetEnableGroups ( );
__declspec(implementation_key(4622)) void _IConductorTableAuto::PutEnableGroups ( VARIANT_BOOL EnableGroups );
__declspec(implementation_key(4623)) TableGroupsPtr _IConductorTableAuto::GetGroups ( );
__declspec(implementation_key(4624)) VARIANT_BOOL _IConductorTableAuto::GetWrapDataCellsToNewRow ( );
__declspec(implementation_key(4625)) void _IConductorTableAuto::PutWrapDataCellsToNewRow ( VARIANT_BOOL WrapDataCellsToNewRow );
__declspec(implementation_key(4626)) VARIANT_BOOL _IConductorTableAuto::GetFillEndOfTableWithBlankRows ( );
__declspec(implementation_key(4627)) void _IConductorTableAuto::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL FillEndOfTableWithBlankRows );
__declspec(implementation_key(4628)) long _IConductorTableAuto::GetGroupByColumn ( );
__declspec(implementation_key(4629)) void _IConductorTableAuto::PutGroupByColumn ( long ColumnIndex );
__declspec(implementation_key(4630)) double _IConductorTableAuto::GetTitleFixedRowHeight ( );
__declspec(implementation_key(4631)) void _IConductorTableAuto::PutTitleFixedRowHeight ( double TitleFixedRowHeight );
__declspec(implementation_key(4632)) HRESULT _IConductorTableAuto::GetListOfSavedSettings ( long * NumSavedSettings, SAFEARRAY * * ListOfSavedSettings );
__declspec(implementation_key(4633)) void _IConductorTableAuto::PutSavedSettings ( _bstr_t _arg1 );
__declspec(implementation_key(4634)) _bstr_t _IConductorTableAuto::GetName ( );
__declspec(implementation_key(4635)) TGFramework::ApplicationPtr ToleranceTables::GetApplication ( );
__declspec(implementation_key(4636)) long ToleranceTables::GetCount ( );
__declspec(implementation_key(4637)) ToleranceTablePtr ToleranceTables::Item ( const _variant_t & Index );
__declspec(implementation_key(4638)) ToleranceTablePtr ToleranceTables::AddByActiveSheet ( _bstr_t SavedSettings );
__declspec(implementation_key(4639)) ToleranceTablePtr ToleranceTables::AddByDrawingView ( struct DrawingView * DrawingView, _bstr_t SavedSettings, long DimensionsInView );
__declspec(implementation_key(4640)) ToleranceTablePtr ToleranceTables::AddByUserSelection ( _bstr_t SavedSettings );
__declspec(implementation_key(4641)) IDispatchPtr ToleranceTables::GetParent ( );
__declspec(implementation_key(4642)) TGFramework::ApplicationPtr ToleranceTable::GetApplication ( );
__declspec(implementation_key(4643)) HRESULT ToleranceTable::Update ( );
__declspec(implementation_key(4644)) HRESULT ToleranceTable::CopyToClipboard ( );
__declspec(implementation_key(4645)) HRESULT ToleranceTable::SourceDimensions ( SAFEARRAY * * ppDimensions );
__declspec(implementation_key(4646)) HRESULT ToleranceTable::Delete ( );
__declspec(implementation_key(4647)) void ToleranceTable::PutSavedSettings ( _bstr_t _arg1 );
__declspec(implementation_key(4648)) IDispatchPtr ToleranceTable::GetParent ( );
__declspec(implementation_key(4649)) VARIANT_BOOL ToleranceTable::GetIncludeDimensionsInView ( );
__declspec(implementation_key(4650)) void ToleranceTable::PutIncludeDimensionsInView ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4651)) HRESULT ToleranceTable::SetOrigin ( double x, double y );
__declspec(implementation_key(4652)) HRESULT ToleranceTable::GetOrigin ( double * x, double * y );
__declspec(implementation_key(4653)) HRESULT ToleranceTable::GetListOfSavedSettings ( long * NumSavedSettings, SAFEARRAY * * ListOfSavedSettings );
__declspec(implementation_key(4654)) VARIANT_BOOL ToleranceTable::GetIsUpToDate ( );
__declspec(implementation_key(4655)) HRESULT ToleranceTable::ConvertToTable ( );
__declspec(implementation_key(4656)) TableCellPtr ToleranceTable::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex );
__declspec(implementation_key(4657)) enum TitlePosition ToleranceTable::GetColumnHeaderPosition ( );
__declspec(implementation_key(4658)) void ToleranceTable::PutColumnHeaderPosition ( enum TitlePosition _arg1 );
__declspec(implementation_key(4659)) TableColumnsPtr ToleranceTable::GetColumns ( );
__declspec(implementation_key(4660)) double ToleranceTable::GetMargin ( );
__declspec(implementation_key(4661)) void ToleranceTable::PutMargin ( double _arg1 );
__declspec(implementation_key(4662)) long ToleranceTable::GetMaximumRows ( );
__declspec(implementation_key(4663)) void ToleranceTable::PutMaximumRows ( long _arg1 );
__declspec(implementation_key(4664)) double ToleranceTable::GetPageGap ( );
__declspec(implementation_key(4665)) void ToleranceTable::PutPageGap ( double _arg1 );
__declspec(implementation_key(4666)) VARIANT_BOOL ToleranceTable::GetReverseDisplayOrder ( );
__declspec(implementation_key(4667)) void ToleranceTable::PutReverseDisplayOrder ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4668)) TableRowsPtr ToleranceTable::GetRows ( );
__declspec(implementation_key(4669)) VARIANT_BOOL ToleranceTable::GetShowColumnHeader ( );
__declspec(implementation_key(4670)) void ToleranceTable::PutShowColumnHeader ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4671)) _bstr_t ToleranceTable::GetTableStyle ( );
__declspec(implementation_key(4672)) void ToleranceTable::PutTableStyle ( _bstr_t _arg1 );
__declspec(implementation_key(4673)) TableTitlesPtr ToleranceTable::GetTitles ( );
__declspec(implementation_key(4674)) enum TableAnchorPoint ToleranceTable::GetAnchorPoint ( );
__declspec(implementation_key(4675)) void ToleranceTable::PutAnchorPoint ( enum TableAnchorPoint _arg1 );
__declspec(implementation_key(4676)) TablePagesPtr ToleranceTable::GetPages ( );
__declspec(implementation_key(4677)) double ToleranceTable::GetHeaderFixedRowHeight ( );
__declspec(implementation_key(4678)) void ToleranceTable::PutHeaderFixedRowHeight ( double _arg1 );
__declspec(implementation_key(4679)) double ToleranceTable::GetDataFixedRowHeight ( );
__declspec(implementation_key(4680)) void ToleranceTable::PutDataFixedRowHeight ( double _arg1 );
__declspec(implementation_key(4681)) double ToleranceTable::GetMaximumHeight ( );
__declspec(implementation_key(4682)) void ToleranceTable::PutMaximumHeight ( double _arg1 );
__declspec(implementation_key(4683)) long ToleranceTable::GetNumberOfHeaderRows ( );
__declspec(implementation_key(4684)) void ToleranceTable::PutNumberOfHeaderRows ( long _arg1 );
__declspec(implementation_key(4685)) long ToleranceTable::GetMaximumRowsFirstPage ( );
__declspec(implementation_key(4686)) void ToleranceTable::PutMaximumRowsFirstPage ( long _arg1 );
__declspec(implementation_key(4687)) long ToleranceTable::GetMaximumRowsAdditionalPages ( );
__declspec(implementation_key(4688)) void ToleranceTable::PutMaximumRowsAdditionalPages ( long _arg1 );
__declspec(implementation_key(4689)) double ToleranceTable::GetMaximumHeightFirstPage ( );
__declspec(implementation_key(4690)) void ToleranceTable::PutMaximumHeightFirstPage ( double _arg1 );
__declspec(implementation_key(4691)) double ToleranceTable::GetMaximumHeightAdditionalPages ( );
__declspec(implementation_key(4692)) void ToleranceTable::PutMaximumHeightAdditionalPages ( double _arg1 );
__declspec(implementation_key(4693)) VARIANT_BOOL ToleranceTable::GetCreateNewSheetsForTable ( );
__declspec(implementation_key(4694)) void ToleranceTable::PutCreateNewSheetsForTable ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4695)) _bstr_t ToleranceTable::GetFirstSheetBackgroundName ( );
__declspec(implementation_key(4696)) void ToleranceTable::PutFirstSheetBackgroundName ( _bstr_t _arg1 );
__declspec(implementation_key(4697)) _bstr_t ToleranceTable::GetAdditionalSheetsBackgroundName ( );
__declspec(implementation_key(4698)) void ToleranceTable::PutAdditionalSheetsBackgroundName ( _bstr_t _arg1 );
__declspec(implementation_key(4699)) VARIANT_BOOL ToleranceTable::GetShowSheetBackground ( );
__declspec(implementation_key(4700)) void ToleranceTable::PutShowSheetBackground ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4701)) VARIANT_BOOL ToleranceTable::GetMaintainSheetsWithTableSize ( );
__declspec(implementation_key(4702)) void ToleranceTable::PutMaintainSheetsWithTableSize ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4703)) VARIANT_BOOL ToleranceTable::GetEnableGroups ( );
__declspec(implementation_key(4704)) void ToleranceTable::PutEnableGroups ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4705)) TableGroupsPtr ToleranceTable::GetGroups ( );
__declspec(implementation_key(4706)) VARIANT_BOOL ToleranceTable::GetWrapDataCellsToNewRow ( );
__declspec(implementation_key(4707)) void ToleranceTable::PutWrapDataCellsToNewRow ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4708)) VARIANT_BOOL ToleranceTable::GetFillEndOfTableWithBlankRows ( );
__declspec(implementation_key(4709)) void ToleranceTable::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4710)) long ToleranceTable::GetGroupByColumn ( );
__declspec(implementation_key(4711)) void ToleranceTable::PutGroupByColumn ( long _arg1 );
__declspec(implementation_key(4712)) double ToleranceTable::GetTitleFixedRowHeight ( );
__declspec(implementation_key(4713)) void ToleranceTable::PutTitleFixedRowHeight ( double _arg1 );
__declspec(implementation_key(4714)) double ToleranceTable::GetMarginHorizontal ( );
__declspec(implementation_key(4715)) void ToleranceTable::PutMarginHorizontal ( double _arg1 );
__declspec(implementation_key(4716)) double ToleranceTable::GetMarginVertical ( );
__declspec(implementation_key(4717)) void ToleranceTable::PutMarginVertical ( double _arg1 );
__declspec(implementation_key(4718)) _bstr_t ToleranceTable::GetName ( );
__declspec(implementation_key(4719)) TGFramework::ApplicationPtr _IToleranceTablesAuto::GetApplication ( );
__declspec(implementation_key(4720)) long _IToleranceTablesAuto::GetCount ( );
__declspec(implementation_key(4721)) ToleranceTablePtr _IToleranceTablesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(4722)) IUnknownPtr _IToleranceTablesAuto::Get_NewEnum ( );
__declspec(implementation_key(4723)) ToleranceTablePtr _IToleranceTablesAuto::AddByActiveSheet ( _bstr_t SavedSettings );
__declspec(implementation_key(4724)) ToleranceTablePtr _IToleranceTablesAuto::AddByDrawingView ( struct DrawingView * DrawingView, _bstr_t SavedSettings, long DimensionsInView );
__declspec(implementation_key(4725)) ToleranceTablePtr _IToleranceTablesAuto::AddByUserSelection ( _bstr_t SavedSettings );
__declspec(implementation_key(4726)) IDispatchPtr _IToleranceTablesAuto::GetParent ( );
__declspec(implementation_key(4727)) TGFramework::ApplicationPtr _IToleranceTableAuto::GetApplication ( );
__declspec(implementation_key(4728)) HRESULT _IToleranceTableAuto::Update ( );
__declspec(implementation_key(4729)) HRESULT _IToleranceTableAuto::CopyToClipboard ( );
__declspec(implementation_key(4730)) HRESULT _IToleranceTableAuto::SourceDimensions ( SAFEARRAY * * ppDimensions );
__declspec(implementation_key(4731)) HRESULT _IToleranceTableAuto::Delete ( );
__declspec(implementation_key(4732)) void _IToleranceTableAuto::PutSavedSettings ( _bstr_t _arg1 );
__declspec(implementation_key(4733)) IDispatchPtr _IToleranceTableAuto::GetParent ( );
__declspec(implementation_key(4734)) VARIANT_BOOL _IToleranceTableAuto::GetIncludeDimensionsInView ( );
__declspec(implementation_key(4735)) void _IToleranceTableAuto::PutIncludeDimensionsInView ( VARIANT_BOOL value );
__declspec(implementation_key(4736)) HRESULT _IToleranceTableAuto::SetOrigin ( double x, double y );
__declspec(implementation_key(4737)) HRESULT _IToleranceTableAuto::GetOrigin ( double * x, double * y );
__declspec(implementation_key(4738)) HRESULT _IToleranceTableAuto::GetListOfSavedSettings ( long * NumSavedSettings, SAFEARRAY * * ListOfSavedSettings );
__declspec(implementation_key(4739)) VARIANT_BOOL _IToleranceTableAuto::GetIsUpToDate ( );
__declspec(implementation_key(4740)) HRESULT _IToleranceTableAuto::ConvertToTable ( );
__declspec(implementation_key(4741)) TableCellPtr _IToleranceTableAuto::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex );
__declspec(implementation_key(4742)) enum TitlePosition _IToleranceTableAuto::GetColumnHeaderPosition ( );
__declspec(implementation_key(4743)) void _IToleranceTableAuto::PutColumnHeaderPosition ( enum TitlePosition ColumnHeaderPosition );
__declspec(implementation_key(4744)) TableColumnsPtr _IToleranceTableAuto::GetColumns ( );
__declspec(implementation_key(4745)) double _IToleranceTableAuto::GetMargin ( );
__declspec(implementation_key(4746)) void _IToleranceTableAuto::PutMargin ( double Margin );
__declspec(implementation_key(4747)) long _IToleranceTableAuto::GetMaximumRows ( );
__declspec(implementation_key(4748)) void _IToleranceTableAuto::PutMaximumRows ( long MaximumRows );
__declspec(implementation_key(4749)) double _IToleranceTableAuto::GetPageGap ( );
__declspec(implementation_key(4750)) void _IToleranceTableAuto::PutPageGap ( double PageGap );
__declspec(implementation_key(4751)) VARIANT_BOOL _IToleranceTableAuto::GetReverseDisplayOrder ( );
__declspec(implementation_key(4752)) void _IToleranceTableAuto::PutReverseDisplayOrder ( VARIANT_BOOL ReverseDisplayOrder );
__declspec(implementation_key(4753)) TableRowsPtr _IToleranceTableAuto::GetRows ( );
__declspec(implementation_key(4754)) VARIANT_BOOL _IToleranceTableAuto::GetShowColumnHeader ( );
__declspec(implementation_key(4755)) void _IToleranceTableAuto::PutShowColumnHeader ( VARIANT_BOOL ShowColumnHeader );
__declspec(implementation_key(4756)) _bstr_t _IToleranceTableAuto::GetTableStyle ( );
__declspec(implementation_key(4757)) void _IToleranceTableAuto::PutTableStyle ( _bstr_t TableStyle );
__declspec(implementation_key(4758)) TableTitlesPtr _IToleranceTableAuto::GetTitles ( );
__declspec(implementation_key(4759)) enum TableAnchorPoint _IToleranceTableAuto::GetAnchorPoint ( );
__declspec(implementation_key(4760)) void _IToleranceTableAuto::PutAnchorPoint ( enum TableAnchorPoint AnchorPoint );
__declspec(implementation_key(4761)) TablePagesPtr _IToleranceTableAuto::GetPages ( );
__declspec(implementation_key(4762)) double _IToleranceTableAuto::GetHeaderFixedRowHeight ( );
__declspec(implementation_key(4763)) void _IToleranceTableAuto::PutHeaderFixedRowHeight ( double HeaderFixedRowHeight );
__declspec(implementation_key(4764)) double _IToleranceTableAuto::GetDataFixedRowHeight ( );
__declspec(implementation_key(4765)) void _IToleranceTableAuto::PutDataFixedRowHeight ( double DataFixedRowHeight );
__declspec(implementation_key(4766)) double _IToleranceTableAuto::GetMaximumHeight ( );
__declspec(implementation_key(4767)) void _IToleranceTableAuto::PutMaximumHeight ( double MaximumHeight );
__declspec(implementation_key(4768)) long _IToleranceTableAuto::GetNumberOfHeaderRows ( );
__declspec(implementation_key(4769)) void _IToleranceTableAuto::PutNumberOfHeaderRows ( long NumberOfHeaderRows );
__declspec(implementation_key(4770)) long _IToleranceTableAuto::GetMaximumRowsFirstPage ( );
__declspec(implementation_key(4771)) void _IToleranceTableAuto::PutMaximumRowsFirstPage ( long MaximumRowsFirstPage );
__declspec(implementation_key(4772)) long _IToleranceTableAuto::GetMaximumRowsAdditionalPages ( );
__declspec(implementation_key(4773)) void _IToleranceTableAuto::PutMaximumRowsAdditionalPages ( long MaximumRowsAdditionalPages );
__declspec(implementation_key(4774)) double _IToleranceTableAuto::GetMaximumHeightFirstPage ( );
__declspec(implementation_key(4775)) void _IToleranceTableAuto::PutMaximumHeightFirstPage ( double MaximumHeightFirstPage );
__declspec(implementation_key(4776)) double _IToleranceTableAuto::GetMaximumHeightAdditionalPages ( );
__declspec(implementation_key(4777)) void _IToleranceTableAuto::PutMaximumHeightAdditionalPages ( double MaximumHeightAdditionalPages );
__declspec(implementation_key(4778)) VARIANT_BOOL _IToleranceTableAuto::GetCreateNewSheetsForTable ( );
__declspec(implementation_key(4779)) void _IToleranceTableAuto::PutCreateNewSheetsForTable ( VARIANT_BOOL CreateNewSheetsForTable );
__declspec(implementation_key(4780)) _bstr_t _IToleranceTableAuto::GetFirstSheetBackgroundName ( );
__declspec(implementation_key(4781)) void _IToleranceTableAuto::PutFirstSheetBackgroundName ( _bstr_t FirstSheetBackgroundName );
__declspec(implementation_key(4782)) _bstr_t _IToleranceTableAuto::GetAdditionalSheetsBackgroundName ( );
__declspec(implementation_key(4783)) void _IToleranceTableAuto::PutAdditionalSheetsBackgroundName ( _bstr_t AdditionalSheetsBackgroundName );
__declspec(implementation_key(4784)) VARIANT_BOOL _IToleranceTableAuto::GetShowSheetBackground ( );
__declspec(implementation_key(4785)) void _IToleranceTableAuto::PutShowSheetBackground ( VARIANT_BOOL ShowSheetBackground );
__declspec(implementation_key(4786)) VARIANT_BOOL _IToleranceTableAuto::GetMaintainSheetsWithTableSize ( );
__declspec(implementation_key(4787)) void _IToleranceTableAuto::PutMaintainSheetsWithTableSize ( VARIANT_BOOL MaintainSheetsWithTableSize );
__declspec(implementation_key(4788)) VARIANT_BOOL _IToleranceTableAuto::GetEnableGroups ( );
__declspec(implementation_key(4789)) void _IToleranceTableAuto::PutEnableGroups ( VARIANT_BOOL EnableGroups );
__declspec(implementation_key(4790)) TableGroupsPtr _IToleranceTableAuto::GetGroups ( );
__declspec(implementation_key(4791)) VARIANT_BOOL _IToleranceTableAuto::GetWrapDataCellsToNewRow ( );
__declspec(implementation_key(4792)) void _IToleranceTableAuto::PutWrapDataCellsToNewRow ( VARIANT_BOOL WrapDataCellsToNewRow );
__declspec(implementation_key(4793)) VARIANT_BOOL _IToleranceTableAuto::GetFillEndOfTableWithBlankRows ( );
__declspec(implementation_key(4794)) void _IToleranceTableAuto::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL FillEndOfTableWithBlankRows );
__declspec(implementation_key(4795)) long _IToleranceTableAuto::GetGroupByColumn ( );
__declspec(implementation_key(4796)) void _IToleranceTableAuto::PutGroupByColumn ( long ColumnIndex );
__declspec(implementation_key(4797)) double _IToleranceTableAuto::GetTitleFixedRowHeight ( );
__declspec(implementation_key(4798)) void _IToleranceTableAuto::PutTitleFixedRowHeight ( double TitleFixedRowHeight );
__declspec(implementation_key(4799)) double _IToleranceTableAuto::GetMarginHorizontal ( );
__declspec(implementation_key(4800)) void _IToleranceTableAuto::PutMarginHorizontal ( double MarginHorizontal );
__declspec(implementation_key(4801)) double _IToleranceTableAuto::GetMarginVertical ( );
__declspec(implementation_key(4802)) void _IToleranceTableAuto::PutMarginVertical ( double MarginVertical );
__declspec(implementation_key(4803)) _bstr_t _IToleranceTableAuto::GetName ( );
__declspec(implementation_key(4804)) TGFramework::ApplicationPtr HoleTables2::GetApplication ( );
__declspec(implementation_key(4805)) long HoleTables2::GetCount ( );
__declspec(implementation_key(4806)) HoleTable2Ptr HoleTables2::Item ( const _variant_t & Index );
__declspec(implementation_key(4807)) HoleTable2Ptr HoleTables2::Add ( _bstr_t SavedSettings, enum HoleTableType TableType );
__declspec(implementation_key(4808)) IDispatchPtr HoleTables2::GetParent ( );
__declspec(implementation_key(4809)) TGFramework::ApplicationPtr HoleTable2::GetApplication ( );
__declspec(implementation_key(4810)) HRESULT HoleTable2::AddNewXYorigin ( IUnknown * pElement );
__declspec(implementation_key(4811)) HRESULT HoleTable2::AddNewXYoriginEx ( IUnknown * pElement, enum KeypointIndexConstants KeyPointIndex );
__declspec(implementation_key(4812)) HRESULT HoleTable2::AddHole ( IUnknown * pElement, const _variant_t & Index );
__declspec(implementation_key(4813)) HRESULT HoleTable2::RemoveXYorigin ( const _variant_t & Index );
__declspec(implementation_key(4814)) HRESULT HoleTable2::RemoveHole ( IUnknown * pElement );
__declspec(implementation_key(4815)) HRESULT HoleTable2::AttachDrawingView ( struct DrawingView * DrawingView );
__declspec(implementation_key(4816)) unsigned long HoleTable2::GetOriginCount ( );
__declspec(implementation_key(4817)) HRESULT HoleTable2::GetHoles ( const _variant_t & Index, SAFEARRAY * * ppHoles );
__declspec(implementation_key(4818)) HRESULT HoleTable2::Update ( );
__declspec(implementation_key(4819)) HRESULT HoleTable2::CopyToClipboard ( );
__declspec(implementation_key(4820)) HRESULT HoleTable2::Delete ( );
__declspec(implementation_key(4821)) void HoleTable2::PutSavedSettings ( _bstr_t _arg1 );
__declspec(implementation_key(4822)) IDispatchPtr HoleTable2::GetParent ( );
__declspec(implementation_key(4823)) HRESULT HoleTable2::SetOrigin ( double x, double y );
__declspec(implementation_key(4824)) HRESULT HoleTable2::GetOrigin ( double * x, double * y );
__declspec(implementation_key(4825)) HRESULT HoleTable2::GetListOfSavedSettings ( long * NumSavedSettings, SAFEARRAY * * ListOfSavedSettings );
__declspec(implementation_key(4826)) VARIANT_BOOL HoleTable2::GetIsUpToDate ( );
__declspec(implementation_key(4827)) HRESULT HoleTable2::ConvertToTable ( );
__declspec(implementation_key(4828)) TableCellPtr HoleTable2::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex );
__declspec(implementation_key(4829)) enum TitlePosition HoleTable2::GetColumnHeaderPosition ( );
__declspec(implementation_key(4830)) void HoleTable2::PutColumnHeaderPosition ( enum TitlePosition _arg1 );
__declspec(implementation_key(4831)) TableColumnsPtr HoleTable2::GetColumns ( );
__declspec(implementation_key(4832)) double HoleTable2::GetMargin ( );
__declspec(implementation_key(4833)) void HoleTable2::PutMargin ( double _arg1 );
__declspec(implementation_key(4834)) long HoleTable2::GetMaximumRows ( );
__declspec(implementation_key(4835)) void HoleTable2::PutMaximumRows ( long _arg1 );
__declspec(implementation_key(4836)) double HoleTable2::GetPageGap ( );
__declspec(implementation_key(4837)) void HoleTable2::PutPageGap ( double _arg1 );
__declspec(implementation_key(4838)) VARIANT_BOOL HoleTable2::GetReverseDisplayOrder ( );
__declspec(implementation_key(4839)) void HoleTable2::PutReverseDisplayOrder ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4840)) TableRowsPtr HoleTable2::GetRows ( );
__declspec(implementation_key(4841)) VARIANT_BOOL HoleTable2::GetShowColumnHeader ( );
__declspec(implementation_key(4842)) void HoleTable2::PutShowColumnHeader ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4843)) _bstr_t HoleTable2::GetTableStyle ( );
__declspec(implementation_key(4844)) void HoleTable2::PutTableStyle ( _bstr_t _arg1 );
__declspec(implementation_key(4845)) TableTitlesPtr HoleTable2::GetTitles ( );
__declspec(implementation_key(4846)) enum TableAnchorPoint HoleTable2::GetAnchorPoint ( );
__declspec(implementation_key(4847)) void HoleTable2::PutAnchorPoint ( enum TableAnchorPoint _arg1 );
__declspec(implementation_key(4848)) TablePagesPtr HoleTable2::GetPages ( );
__declspec(implementation_key(4849)) double HoleTable2::GetHeaderFixedRowHeight ( );
__declspec(implementation_key(4850)) void HoleTable2::PutHeaderFixedRowHeight ( double _arg1 );
__declspec(implementation_key(4851)) double HoleTable2::GetDataFixedRowHeight ( );
__declspec(implementation_key(4852)) void HoleTable2::PutDataFixedRowHeight ( double _arg1 );
__declspec(implementation_key(4853)) double HoleTable2::GetMaximumHeight ( );
__declspec(implementation_key(4854)) void HoleTable2::PutMaximumHeight ( double _arg1 );
__declspec(implementation_key(4855)) long HoleTable2::GetNumberOfHeaderRows ( );
__declspec(implementation_key(4856)) void HoleTable2::PutNumberOfHeaderRows ( long _arg1 );
__declspec(implementation_key(4857)) long HoleTable2::GetMaximumRowsFirstPage ( );
__declspec(implementation_key(4858)) void HoleTable2::PutMaximumRowsFirstPage ( long _arg1 );
__declspec(implementation_key(4859)) long HoleTable2::GetMaximumRowsAdditionalPages ( );
__declspec(implementation_key(4860)) void HoleTable2::PutMaximumRowsAdditionalPages ( long _arg1 );
__declspec(implementation_key(4861)) double HoleTable2::GetMaximumHeightFirstPage ( );
__declspec(implementation_key(4862)) void HoleTable2::PutMaximumHeightFirstPage ( double _arg1 );
__declspec(implementation_key(4863)) double HoleTable2::GetMaximumHeightAdditionalPages ( );
__declspec(implementation_key(4864)) void HoleTable2::PutMaximumHeightAdditionalPages ( double _arg1 );
__declspec(implementation_key(4865)) VARIANT_BOOL HoleTable2::GetCreateNewSheetsForTable ( );
__declspec(implementation_key(4866)) void HoleTable2::PutCreateNewSheetsForTable ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4867)) _bstr_t HoleTable2::GetFirstSheetBackgroundName ( );
__declspec(implementation_key(4868)) void HoleTable2::PutFirstSheetBackgroundName ( _bstr_t _arg1 );
__declspec(implementation_key(4869)) _bstr_t HoleTable2::GetAdditionalSheetsBackgroundName ( );
__declspec(implementation_key(4870)) void HoleTable2::PutAdditionalSheetsBackgroundName ( _bstr_t _arg1 );
__declspec(implementation_key(4871)) VARIANT_BOOL HoleTable2::GetShowSheetBackground ( );
__declspec(implementation_key(4872)) void HoleTable2::PutShowSheetBackground ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4873)) VARIANT_BOOL HoleTable2::GetMaintainSheetsWithTableSize ( );
__declspec(implementation_key(4874)) void HoleTable2::PutMaintainSheetsWithTableSize ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4875)) VARIANT_BOOL HoleTable2::GetEnableGroups ( );
__declspec(implementation_key(4876)) void HoleTable2::PutEnableGroups ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4877)) TableGroupsPtr HoleTable2::GetGroups ( );
__declspec(implementation_key(4878)) VARIANT_BOOL HoleTable2::GetWrapDataCellsToNewRow ( );
__declspec(implementation_key(4879)) void HoleTable2::PutWrapDataCellsToNewRow ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4880)) VARIANT_BOOL HoleTable2::GetFillEndOfTableWithBlankRows ( );
__declspec(implementation_key(4881)) void HoleTable2::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4882)) long HoleTable2::GetGroupByColumn ( );
__declspec(implementation_key(4883)) void HoleTable2::PutGroupByColumn ( long _arg1 );
__declspec(implementation_key(4884)) double HoleTable2::GetTitleFixedRowHeight ( );
__declspec(implementation_key(4885)) void HoleTable2::PutTitleFixedRowHeight ( double _arg1 );
__declspec(implementation_key(4886)) double HoleTable2::GetMarginHorizontal ( );
__declspec(implementation_key(4887)) void HoleTable2::PutMarginHorizontal ( double _arg1 );
__declspec(implementation_key(4888)) double HoleTable2::GetMarginVertical ( );
__declspec(implementation_key(4889)) void HoleTable2::PutMarginVertical ( double _arg1 );
__declspec(implementation_key(4890)) VARIANT_BOOL HoleTable2::GetListByOrigin ( );
__declspec(implementation_key(4891)) void HoleTable2::PutListByOrigin ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4892)) VARIANT_BOOL HoleTable2::GetListEachHole ( );
__declspec(implementation_key(4893)) void HoleTable2::PutListEachHole ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4894)) VARIANT_BOOL HoleTable2::GetListEachHoleSize ( );
__declspec(implementation_key(4895)) void HoleTable2::PutListEachHoleSize ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4896)) VARIANT_BOOL HoleTable2::GetShowOriginOrGroupName ( );
__declspec(implementation_key(4897)) void HoleTable2::PutShowOriginOrGroupName ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4898)) VARIANT_BOOL HoleTable2::GetRenumberOnUpdate ( );
__declspec(implementation_key(4899)) void HoleTable2::PutRenumberOnUpdate ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4900)) VARIANT_BOOL HoleTable2::GetKeepDeletedHoles ( );
__declspec(implementation_key(4901)) void HoleTable2::PutKeepDeletedHoles ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4902)) VARIANT_BOOL HoleTable2::GetShowIndexOnBlankRows ( );
__declspec(implementation_key(4903)) void HoleTable2::PutShowIndexOnBlankRows ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4904)) VARIANT_BOOL HoleTable2::GetCenterMark ( );
__declspec(implementation_key(4905)) void HoleTable2::PutCenterMark ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4906)) VARIANT_BOOL HoleTable2::GetCenterMarkProjectionLines ( );
__declspec(implementation_key(4907)) void HoleTable2::PutCenterMarkProjectionLines ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4908)) VARIANT_BOOL HoleTable2::GetShowAnnotation ( );
__declspec(implementation_key(4909)) void HoleTable2::PutShowAnnotation ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4910)) enum HoleTableAnnotPosition HoleTable2::GetAnnotationPosition ( );
__declspec(implementation_key(4911)) void HoleTable2::PutAnnotationPosition ( enum HoleTableAnnotPosition _arg1 );
__declspec(implementation_key(4912)) double HoleTable2::GetAnnotationOffset ( );
__declspec(implementation_key(4913)) void HoleTable2::PutAnnotationOffset ( double _arg1 );
__declspec(implementation_key(4914)) enum HoleTableDelimiterType HoleTable2::GetAnnotationDelimeterType ( );
__declspec(implementation_key(4915)) void HoleTable2::PutAnnotationDelimeterType ( enum HoleTableDelimiterType _arg1 );
__declspec(implementation_key(4916)) VARIANT_BOOL HoleTable2::GetLeader ( );
__declspec(implementation_key(4917)) void HoleTable2::PutLeader ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4918)) VARIANT_BOOL HoleTable2::GetBreakLine ( );
__declspec(implementation_key(4919)) void HoleTable2::PutBreakLine ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4920)) HRESULT HoleTable2::GetHoleTableCalloutText ( enum HoleTableCalloutType calloutType, enum HTHoleTypeConstants holeType, BSTR * pCalloutText );
__declspec(implementation_key(4921)) HRESULT HoleTable2::SetHoleTableCalloutText ( enum HoleTableCalloutType calloutType, enum HTHoleTypeConstants holeType, _bstr_t CalloutText );
__declspec(implementation_key(4922)) _bstr_t HoleTable2::GetSmartDepthHoleThru ( );
__declspec(implementation_key(4923)) void HoleTable2::PutSmartDepthHoleThru ( _bstr_t _arg1 );
__declspec(implementation_key(4924)) _bstr_t HoleTable2::GetSmartDepthHoleFinite ( );
__declspec(implementation_key(4925)) void HoleTable2::PutSmartDepthHoleFinite ( _bstr_t _arg1 );
__declspec(implementation_key(4926)) _bstr_t HoleTable2::GetSmartDepthThreadThru ( );
__declspec(implementation_key(4927)) void HoleTable2::PutSmartDepthThreadThru ( _bstr_t _arg1 );
__declspec(implementation_key(4928)) _bstr_t HoleTable2::GetSmartDepthThreadFinite ( );
__declspec(implementation_key(4929)) void HoleTable2::PutSmartDepthThreadFinite ( _bstr_t _arg1 );
__declspec(implementation_key(4930)) enum HoleTable2PrimaryLinearUnit HoleTable2::GetPrimaryLinearUnits ( );
__declspec(implementation_key(4931)) void HoleTable2::PutPrimaryLinearUnits ( enum HoleTable2PrimaryLinearUnit _arg1 );
__declspec(implementation_key(4932)) enum HoleTable2DecimalRoundOffTypeConstants HoleTable2::GetPrimaryLinearDecimalRoundOff ( );
__declspec(implementation_key(4933)) void HoleTable2::PutPrimaryLinearDecimalRoundOff ( enum HoleTable2DecimalRoundOffTypeConstants _arg1 );
__declspec(implementation_key(4934)) enum HoleTableDelimiterType HoleTable2::GetPrimaryDelimiter ( );
__declspec(implementation_key(4935)) void HoleTable2::PutPrimaryDelimiter ( enum HoleTableDelimiterType _arg1 );
__declspec(implementation_key(4936)) enum HoleTable2AngularUnit HoleTable2::GetPrimaryAngularUnits ( );
__declspec(implementation_key(4937)) void HoleTable2::PutPrimaryAngularUnits ( enum HoleTable2AngularUnit _arg1 );
__declspec(implementation_key(4938)) enum HoleTable2DMSRoundOffTypeConstants HoleTable2::GetPrimaryAngularDMSRoundOff ( );
__declspec(implementation_key(4939)) void HoleTable2::PutPrimaryAngularDMSRoundOff ( enum HoleTable2DMSRoundOffTypeConstants _arg1 );
__declspec(implementation_key(4940)) enum HoleTable2DecimalRoundOffTypeConstants HoleTable2::GetPrimaryAngularDecimalRoundOff ( );
__declspec(implementation_key(4941)) void HoleTable2::PutPrimaryAngularDecimalRoundOff ( enum HoleTable2DecimalRoundOffTypeConstants _arg1 );
__declspec(implementation_key(4942)) VARIANT_BOOL HoleTable2::GetPrimaryLeadingZeros ( );
__declspec(implementation_key(4943)) void HoleTable2::PutPrimaryLeadingZeros ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4944)) VARIANT_BOOL HoleTable2::GetPrimaryTrailingZeros ( );
__declspec(implementation_key(4945)) void HoleTable2::PutPrimaryTrailingZeros ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4946)) enum HoleTableType HoleTable2::GetHoleTableType ( );
__declspec(implementation_key(4947)) HRESULT HoleTable2::GetXYorigin ( const _variant_t & Index, IUnknown * * pElement, enum KeypointIndexConstants * KeyPointIndex );
__declspec(implementation_key(4948)) VARIANT_BOOL HoleTable2::GetShowHoleTableOrigin ( );
__declspec(implementation_key(4949)) void HoleTable2::PutShowHoleTableOrigin ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4950)) _bstr_t HoleTable2::GetName ( );
__declspec(implementation_key(4951)) TGFramework::ApplicationPtr _IHoleTables2Auto::GetApplication ( );
__declspec(implementation_key(4952)) long _IHoleTables2Auto::GetCount ( );
__declspec(implementation_key(4953)) HoleTable2Ptr _IHoleTables2Auto::Item ( const _variant_t & Index );
__declspec(implementation_key(4954)) IUnknownPtr _IHoleTables2Auto::Get_NewEnum ( );
__declspec(implementation_key(4955)) HoleTable2Ptr _IHoleTables2Auto::Add ( _bstr_t SavedSettings, enum HoleTableType TableType );
__declspec(implementation_key(4956)) IDispatchPtr _IHoleTables2Auto::GetParent ( );
__declspec(implementation_key(4957)) TGFramework::ApplicationPtr _IHoleTable2Auto::GetApplication ( );
__declspec(implementation_key(4958)) HRESULT _IHoleTable2Auto::AddNewXYorigin ( IUnknown * pElement );
__declspec(implementation_key(4959)) HRESULT _IHoleTable2Auto::AddNewXYoriginEx ( IUnknown * pElement, enum KeypointIndexConstants KeyPointIndex );
__declspec(implementation_key(4960)) HRESULT _IHoleTable2Auto::AddHole ( IUnknown * pElement, const _variant_t & Index );
__declspec(implementation_key(4961)) HRESULT _IHoleTable2Auto::RemoveXYorigin ( const _variant_t & Index );
__declspec(implementation_key(4962)) HRESULT _IHoleTable2Auto::RemoveHole ( IUnknown * pElement );
__declspec(implementation_key(4963)) HRESULT _IHoleTable2Auto::AttachDrawingView ( struct DrawingView * DrawingView );
__declspec(implementation_key(4964)) unsigned long _IHoleTable2Auto::GetOriginCount ( );
__declspec(implementation_key(4965)) HRESULT _IHoleTable2Auto::GetHoles ( const _variant_t & Index, SAFEARRAY * * ppHoles );
__declspec(implementation_key(4966)) HRESULT _IHoleTable2Auto::Update ( );
__declspec(implementation_key(4967)) HRESULT _IHoleTable2Auto::CopyToClipboard ( );
__declspec(implementation_key(4968)) HRESULT _IHoleTable2Auto::Delete ( );
__declspec(implementation_key(4969)) void _IHoleTable2Auto::PutSavedSettings ( _bstr_t _arg1 );
__declspec(implementation_key(4970)) IDispatchPtr _IHoleTable2Auto::GetParent ( );
__declspec(implementation_key(4971)) HRESULT _IHoleTable2Auto::SetOrigin ( double x, double y );
__declspec(implementation_key(4972)) HRESULT _IHoleTable2Auto::GetOrigin ( double * x, double * y );
__declspec(implementation_key(4973)) HRESULT _IHoleTable2Auto::GetListOfSavedSettings ( long * NumSavedSettings, SAFEARRAY * * ListOfSavedSettings );
__declspec(implementation_key(4974)) VARIANT_BOOL _IHoleTable2Auto::GetIsUpToDate ( );
__declspec(implementation_key(4975)) HRESULT _IHoleTable2Auto::ConvertToTable ( );
__declspec(implementation_key(4976)) TableCellPtr _IHoleTable2Auto::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex );
__declspec(implementation_key(4977)) enum TitlePosition _IHoleTable2Auto::GetColumnHeaderPosition ( );
__declspec(implementation_key(4978)) void _IHoleTable2Auto::PutColumnHeaderPosition ( enum TitlePosition ColumnHeaderPosition );
__declspec(implementation_key(4979)) TableColumnsPtr _IHoleTable2Auto::GetColumns ( );
__declspec(implementation_key(4980)) double _IHoleTable2Auto::GetMargin ( );
__declspec(implementation_key(4981)) void _IHoleTable2Auto::PutMargin ( double Margin );
__declspec(implementation_key(4982)) long _IHoleTable2Auto::GetMaximumRows ( );
__declspec(implementation_key(4983)) void _IHoleTable2Auto::PutMaximumRows ( long MaximumRows );
__declspec(implementation_key(4984)) double _IHoleTable2Auto::GetPageGap ( );
__declspec(implementation_key(4985)) void _IHoleTable2Auto::PutPageGap ( double PageGap );
__declspec(implementation_key(4986)) VARIANT_BOOL _IHoleTable2Auto::GetReverseDisplayOrder ( );
__declspec(implementation_key(4987)) void _IHoleTable2Auto::PutReverseDisplayOrder ( VARIANT_BOOL ReverseDisplayOrder );
__declspec(implementation_key(4988)) TableRowsPtr _IHoleTable2Auto::GetRows ( );
__declspec(implementation_key(4989)) VARIANT_BOOL _IHoleTable2Auto::GetShowColumnHeader ( );
__declspec(implementation_key(4990)) void _IHoleTable2Auto::PutShowColumnHeader ( VARIANT_BOOL ShowColumnHeader );
__declspec(implementation_key(4991)) _bstr_t _IHoleTable2Auto::GetTableStyle ( );
__declspec(implementation_key(4992)) void _IHoleTable2Auto::PutTableStyle ( _bstr_t TableStyle );
__declspec(implementation_key(4993)) TableTitlesPtr _IHoleTable2Auto::GetTitles ( );
__declspec(implementation_key(4994)) enum TableAnchorPoint _IHoleTable2Auto::GetAnchorPoint ( );
__declspec(implementation_key(4995)) void _IHoleTable2Auto::PutAnchorPoint ( enum TableAnchorPoint AnchorPoint );
__declspec(implementation_key(4996)) TablePagesPtr _IHoleTable2Auto::GetPages ( );
__declspec(implementation_key(4997)) double _IHoleTable2Auto::GetHeaderFixedRowHeight ( );
__declspec(implementation_key(4998)) void _IHoleTable2Auto::PutHeaderFixedRowHeight ( double HeaderFixedRowHeight );
__declspec(implementation_key(4999)) double _IHoleTable2Auto::GetDataFixedRowHeight ( );
__declspec(implementation_key(5000)) void _IHoleTable2Auto::PutDataFixedRowHeight ( double DataFixedRowHeight );
__declspec(implementation_key(5001)) double _IHoleTable2Auto::GetMaximumHeight ( );
__declspec(implementation_key(5002)) void _IHoleTable2Auto::PutMaximumHeight ( double MaximumHeight );
__declspec(implementation_key(5003)) long _IHoleTable2Auto::GetNumberOfHeaderRows ( );
__declspec(implementation_key(5004)) void _IHoleTable2Auto::PutNumberOfHeaderRows ( long NumberOfHeaderRows );
__declspec(implementation_key(5005)) long _IHoleTable2Auto::GetMaximumRowsFirstPage ( );
__declspec(implementation_key(5006)) void _IHoleTable2Auto::PutMaximumRowsFirstPage ( long MaximumRowsFirstPage );
__declspec(implementation_key(5007)) long _IHoleTable2Auto::GetMaximumRowsAdditionalPages ( );
__declspec(implementation_key(5008)) void _IHoleTable2Auto::PutMaximumRowsAdditionalPages ( long MaximumRowsAdditionalPages );
__declspec(implementation_key(5009)) double _IHoleTable2Auto::GetMaximumHeightFirstPage ( );
__declspec(implementation_key(5010)) void _IHoleTable2Auto::PutMaximumHeightFirstPage ( double MaximumHeightFirstPage );
__declspec(implementation_key(5011)) double _IHoleTable2Auto::GetMaximumHeightAdditionalPages ( );
__declspec(implementation_key(5012)) void _IHoleTable2Auto::PutMaximumHeightAdditionalPages ( double MaximumHeightAdditionalPages );
__declspec(implementation_key(5013)) VARIANT_BOOL _IHoleTable2Auto::GetCreateNewSheetsForTable ( );
__declspec(implementation_key(5014)) void _IHoleTable2Auto::PutCreateNewSheetsForTable ( VARIANT_BOOL CreateNewSheetsForTable );
__declspec(implementation_key(5015)) _bstr_t _IHoleTable2Auto::GetFirstSheetBackgroundName ( );
__declspec(implementation_key(5016)) void _IHoleTable2Auto::PutFirstSheetBackgroundName ( _bstr_t FirstSheetBackgroundName );
__declspec(implementation_key(5017)) _bstr_t _IHoleTable2Auto::GetAdditionalSheetsBackgroundName ( );
__declspec(implementation_key(5018)) void _IHoleTable2Auto::PutAdditionalSheetsBackgroundName ( _bstr_t AdditionalSheetsBackgroundName );
__declspec(implementation_key(5019)) VARIANT_BOOL _IHoleTable2Auto::GetShowSheetBackground ( );
__declspec(implementation_key(5020)) void _IHoleTable2Auto::PutShowSheetBackground ( VARIANT_BOOL ShowSheetBackground );
__declspec(implementation_key(5021)) VARIANT_BOOL _IHoleTable2Auto::GetMaintainSheetsWithTableSize ( );
__declspec(implementation_key(5022)) void _IHoleTable2Auto::PutMaintainSheetsWithTableSize ( VARIANT_BOOL MaintainSheetsWithTableSize );
__declspec(implementation_key(5023)) VARIANT_BOOL _IHoleTable2Auto::GetEnableGroups ( );
__declspec(implementation_key(5024)) void _IHoleTable2Auto::PutEnableGroups ( VARIANT_BOOL EnableGroups );
__declspec(implementation_key(5025)) TableGroupsPtr _IHoleTable2Auto::GetGroups ( );
__declspec(implementation_key(5026)) VARIANT_BOOL _IHoleTable2Auto::GetWrapDataCellsToNewRow ( );
__declspec(implementation_key(5027)) void _IHoleTable2Auto::PutWrapDataCellsToNewRow ( VARIANT_BOOL WrapDataCellsToNewRow );
__declspec(implementation_key(5028)) VARIANT_BOOL _IHoleTable2Auto::GetFillEndOfTableWithBlankRows ( );
__declspec(implementation_key(5029)) void _IHoleTable2Auto::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL FillEndOfTableWithBlankRows );
__declspec(implementation_key(5030)) long _IHoleTable2Auto::GetGroupByColumn ( );
__declspec(implementation_key(5031)) void _IHoleTable2Auto::PutGroupByColumn ( long ColumnIndex );
__declspec(implementation_key(5032)) double _IHoleTable2Auto::GetTitleFixedRowHeight ( );
__declspec(implementation_key(5033)) void _IHoleTable2Auto::PutTitleFixedRowHeight ( double TitleFixedRowHeight );
__declspec(implementation_key(5034)) double _IHoleTable2Auto::GetMarginHorizontal ( );
__declspec(implementation_key(5035)) void _IHoleTable2Auto::PutMarginHorizontal ( double MarginHorizontal );
__declspec(implementation_key(5036)) double _IHoleTable2Auto::GetMarginVertical ( );
__declspec(implementation_key(5037)) void _IHoleTable2Auto::PutMarginVertical ( double MarginVertical );
__declspec(implementation_key(5038)) VARIANT_BOOL _IHoleTable2Auto::GetListByOrigin ( );
__declspec(implementation_key(5039)) void _IHoleTable2Auto::PutListByOrigin ( VARIANT_BOOL ListByOrigin );
__declspec(implementation_key(5040)) VARIANT_BOOL _IHoleTable2Auto::GetListEachHole ( );
__declspec(implementation_key(5041)) void _IHoleTable2Auto::PutListEachHole ( VARIANT_BOOL ListEachHole );
__declspec(implementation_key(5042)) VARIANT_BOOL _IHoleTable2Auto::GetListEachHoleSize ( );
__declspec(implementation_key(5043)) void _IHoleTable2Auto::PutListEachHoleSize ( VARIANT_BOOL ListEachHoleSize );
__declspec(implementation_key(5044)) VARIANT_BOOL _IHoleTable2Auto::GetShowOriginOrGroupName ( );
__declspec(implementation_key(5045)) void _IHoleTable2Auto::PutShowOriginOrGroupName ( VARIANT_BOOL ShowOriginOrGroupName );
__declspec(implementation_key(5046)) VARIANT_BOOL _IHoleTable2Auto::GetRenumberOnUpdate ( );
__declspec(implementation_key(5047)) void _IHoleTable2Auto::PutRenumberOnUpdate ( VARIANT_BOOL RenumberOnUpdate );
__declspec(implementation_key(5048)) VARIANT_BOOL _IHoleTable2Auto::GetKeepDeletedHoles ( );
__declspec(implementation_key(5049)) void _IHoleTable2Auto::PutKeepDeletedHoles ( VARIANT_BOOL KeepDeletedHoles );
__declspec(implementation_key(5050)) VARIANT_BOOL _IHoleTable2Auto::GetShowIndexOnBlankRows ( );
__declspec(implementation_key(5051)) void _IHoleTable2Auto::PutShowIndexOnBlankRows ( VARIANT_BOOL ShowIndexOnBlankRows );
__declspec(implementation_key(5052)) VARIANT_BOOL _IHoleTable2Auto::GetCenterMark ( );
__declspec(implementation_key(5053)) void _IHoleTable2Auto::PutCenterMark ( VARIANT_BOOL CenterMark );
__declspec(implementation_key(5054)) VARIANT_BOOL _IHoleTable2Auto::GetCenterMarkProjectionLines ( );
__declspec(implementation_key(5055)) void _IHoleTable2Auto::PutCenterMarkProjectionLines ( VARIANT_BOOL CenterMarkProjectionLines );
__declspec(implementation_key(5056)) VARIANT_BOOL _IHoleTable2Auto::GetShowAnnotation ( );
__declspec(implementation_key(5057)) void _IHoleTable2Auto::PutShowAnnotation ( VARIANT_BOOL ShowAnnotation );
__declspec(implementation_key(5058)) enum HoleTableAnnotPosition _IHoleTable2Auto::GetAnnotationPosition ( );
__declspec(implementation_key(5059)) void _IHoleTable2Auto::PutAnnotationPosition ( enum HoleTableAnnotPosition AnnotationPosition );
__declspec(implementation_key(5060)) double _IHoleTable2Auto::GetAnnotationOffset ( );
__declspec(implementation_key(5061)) void _IHoleTable2Auto::PutAnnotationOffset ( double offset );
__declspec(implementation_key(5062)) enum HoleTableDelimiterType _IHoleTable2Auto::GetAnnotationDelimeterType ( );
__declspec(implementation_key(5063)) void _IHoleTable2Auto::PutAnnotationDelimeterType ( enum HoleTableDelimiterType AnnotationDelimeterType );
__declspec(implementation_key(5064)) VARIANT_BOOL _IHoleTable2Auto::GetLeader ( );
__declspec(implementation_key(5065)) void _IHoleTable2Auto::PutLeader ( VARIANT_BOOL Leader );
__declspec(implementation_key(5066)) VARIANT_BOOL _IHoleTable2Auto::GetBreakLine ( );
__declspec(implementation_key(5067)) void _IHoleTable2Auto::PutBreakLine ( VARIANT_BOOL BreakLine );
__declspec(implementation_key(5068)) HRESULT _IHoleTable2Auto::GetHoleTableCalloutText ( enum HoleTableCalloutType calloutType, enum HTHoleTypeConstants holeType, BSTR * pCalloutText );
__declspec(implementation_key(5069)) HRESULT _IHoleTable2Auto::SetHoleTableCalloutText ( enum HoleTableCalloutType calloutType, enum HTHoleTypeConstants holeType, _bstr_t CalloutText );
__declspec(implementation_key(5070)) _bstr_t _IHoleTable2Auto::GetSmartDepthHoleThru ( );
__declspec(implementation_key(5071)) void _IHoleTable2Auto::PutSmartDepthHoleThru ( _bstr_t HoleThru );
__declspec(implementation_key(5072)) _bstr_t _IHoleTable2Auto::GetSmartDepthHoleFinite ( );
__declspec(implementation_key(5073)) void _IHoleTable2Auto::PutSmartDepthHoleFinite ( _bstr_t HoleFinite );
__declspec(implementation_key(5074)) _bstr_t _IHoleTable2Auto::GetSmartDepthThreadThru ( );
__declspec(implementation_key(5075)) void _IHoleTable2Auto::PutSmartDepthThreadThru ( _bstr_t ThreadThru );
__declspec(implementation_key(5076)) _bstr_t _IHoleTable2Auto::GetSmartDepthThreadFinite ( );
__declspec(implementation_key(5077)) void _IHoleTable2Auto::PutSmartDepthThreadFinite ( _bstr_t ThreadFinite );
__declspec(implementation_key(5078)) enum HoleTable2PrimaryLinearUnit _IHoleTable2Auto::GetPrimaryLinearUnits ( );
__declspec(implementation_key(5079)) void _IHoleTable2Auto::PutPrimaryLinearUnits ( enum HoleTable2PrimaryLinearUnit val );
__declspec(implementation_key(5080)) enum HoleTable2DecimalRoundOffTypeConstants _IHoleTable2Auto::GetPrimaryLinearDecimalRoundOff ( );
__declspec(implementation_key(5081)) void _IHoleTable2Auto::PutPrimaryLinearDecimalRoundOff ( enum HoleTable2DecimalRoundOffTypeConstants val );
__declspec(implementation_key(5082)) enum HoleTableDelimiterType _IHoleTable2Auto::GetPrimaryDelimiter ( );
__declspec(implementation_key(5083)) void _IHoleTable2Auto::PutPrimaryDelimiter ( enum HoleTableDelimiterType val );
__declspec(implementation_key(5084)) enum HoleTable2AngularUnit _IHoleTable2Auto::GetPrimaryAngularUnits ( );
__declspec(implementation_key(5085)) void _IHoleTable2Auto::PutPrimaryAngularUnits ( enum HoleTable2AngularUnit val );
__declspec(implementation_key(5086)) enum HoleTable2DMSRoundOffTypeConstants _IHoleTable2Auto::GetPrimaryAngularDMSRoundOff ( );
__declspec(implementation_key(5087)) void _IHoleTable2Auto::PutPrimaryAngularDMSRoundOff ( enum HoleTable2DMSRoundOffTypeConstants val );
__declspec(implementation_key(5088)) enum HoleTable2DecimalRoundOffTypeConstants _IHoleTable2Auto::GetPrimaryAngularDecimalRoundOff ( );
__declspec(implementation_key(5089)) void _IHoleTable2Auto::PutPrimaryAngularDecimalRoundOff ( enum HoleTable2DecimalRoundOffTypeConstants val );
__declspec(implementation_key(5090)) VARIANT_BOOL _IHoleTable2Auto::GetPrimaryLeadingZeros ( );
__declspec(implementation_key(5091)) void _IHoleTable2Auto::PutPrimaryLeadingZeros ( VARIANT_BOOL val );
__declspec(implementation_key(5092)) VARIANT_BOOL _IHoleTable2Auto::GetPrimaryTrailingZeros ( );
__declspec(implementation_key(5093)) void _IHoleTable2Auto::PutPrimaryTrailingZeros ( VARIANT_BOOL val );
__declspec(implementation_key(5094)) enum HoleTableType _IHoleTable2Auto::GetHoleTableType ( );
__declspec(implementation_key(5095)) HRESULT _IHoleTable2Auto::GetXYorigin ( const _variant_t & Index, IUnknown * * pElement, enum KeypointIndexConstants * KeyPointIndex );
__declspec(implementation_key(5096)) VARIANT_BOOL _IHoleTable2Auto::GetShowHoleTableOrigin ( );
__declspec(implementation_key(5097)) void _IHoleTable2Auto::PutShowHoleTableOrigin ( VARIANT_BOOL ShowHoleTableOrigin );
__declspec(implementation_key(5098)) _bstr_t _IHoleTable2Auto::GetName ( );
__declspec(implementation_key(5099)) TGFramework::ApplicationPtr WeldTables::GetApplication ( );
__declspec(implementation_key(5100)) long WeldTables::GetCount ( );
__declspec(implementation_key(5101)) WeldTablePtr WeldTables::Item ( const _variant_t & Index );
__declspec(implementation_key(5102)) WeldTablePtr WeldTables::AddByActiveSheet ( _bstr_t SavedSettings, long isMerge );
__declspec(implementation_key(5103)) WeldTablePtr WeldTables::AddByDrawingView ( struct DrawingView * DrawingView, _bstr_t SavedSettings, long DimensionsInView, long isMerge );
__declspec(implementation_key(5104)) WeldTablePtr WeldTables::AddByUserSelection ( _bstr_t SavedSettings, long isMerge );
__declspec(implementation_key(5105)) IDispatchPtr WeldTables::GetParent ( );
__declspec(implementation_key(5106)) HRESULT _IDraftDocumentAuto::Activate ( );
__declspec(implementation_key(5107)) TGFramework::ApplicationPtr _IDraftDocumentAuto::GetApplication ( );
__declspec(implementation_key(5108)) HRESULT _IDraftDocumentAuto::Close ( const _variant_t & SaveChanges, const _variant_t & FileName, const _variant_t & RouteWorkbook );
__declspec(implementation_key(5109)) _bstr_t _IDraftDocumentAuto::GetFullName ( );
__declspec(implementation_key(5110)) _bstr_t _IDraftDocumentAuto::GetName ( );
__declspec(implementation_key(5111)) TGFramework::ApplicationPtr _IDraftDocumentAuto::GetParent ( );
__declspec(implementation_key(5112)) _bstr_t _IDraftDocumentAuto::GetPath ( );
__declspec(implementation_key(5113)) HRESULT _IDraftDocumentAuto::PrintOut ( const _variant_t & Printer, const _variant_t & NumCopies, const _variant_t & Orientation, const _variant_t & PaperSize, const _variant_t & Scale, const _variant_t & PrintToFile, const _variant_t & OutputFileName, const _variant_t & PrintRange, const _variant_t & Sheets, const _variant_t & ColorAsBlack, const _variant_t & Collate );
__declspec(implementation_key(5114)) VARIANT_BOOL _IDraftDocumentAuto::GetReadOnly ( );
__declspec(implementation_key(5115)) IDispatchPtr _IDraftDocumentAuto::GetRoutingSlip ( );
__declspec(implementation_key(5116)) HRESULT _IDraftDocumentAuto::Save ( );
__declspec(implementation_key(5117)) HRESULT _IDraftDocumentAuto::SaveAs ( _bstr_t NewName, const _variant_t & IsATemplate, const _variant_t & FileFormat, const _variant_t & ReadOnlyEnforced, const _variant_t & ReadOnlyRecommended, const _variant_t & NewStatus, const _variant_t & CreateBackup, const _variant_t & UpdateLinkInContainer, const _variant_t & UpdateAllLinksInContainer );
__declspec(implementation_key(5118)) HRESULT _IDraftDocumentAuto::SaveCopyAs ( _bstr_t Name );
__declspec(implementation_key(5119)) HRESULT _IDraftDocumentAuto::SaveAsJT ( _bstr_t NewName, const _variant_t & Include_PreciseGeom, const _variant_t & Prod_Structure_Option, const _variant_t & Export_PMI, const _variant_t & Export_CoordinateSystem, const _variant_t & Export_3DBodies, const _variant_t & NumberofLODs, const _variant_t & JTFileUnit, const _variant_t & Write_Which_Files, const _variant_t & Use_Simplified_TopAsm, const _variant_t & Use_Simplified_SubAsm, const _variant_t & Use_Simplified_Part, const _variant_t & EnableDefaultOutputPath, const _variant_t & IncludeSEProperties, const _variant_t & Export_VisiblePartsOnly, const _variant_t & Export_VisibleConstructionsOnly, const _variant_t & RemoveUnsafeCharacters, const _variant_t & ExportSEPartFileAsSingleJTFile );
__declspec(implementation_key(5120)) _bstr_t _IDraftDocumentAuto::SaveAsBIDM ( _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title );
__declspec(implementation_key(5121)) _bstr_t _IDraftDocumentAuto::ReviseBIDM ( _bstr_t FilePath, _bstr_t Revision, _bstr_t Title );
__declspec(implementation_key(5122)) TGFramework::SelectSetPtr _IDraftDocumentAuto::GetSelectSet ( );
__declspec(implementation_key(5123)) HRESULT _IDraftDocumentAuto::SendMail ( const _variant_t & Recipients, const _variant_t & Subject, const _variant_t & ReturnReceipt );
__declspec(implementation_key(5124)) IDispatchPtr _IDraftDocumentAuto::GetSummaryInfo ( );
__declspec(implementation_key(5125)) TGFramework::WindowsPtr _IDraftDocumentAuto::GetWindows ( );
__declspec(implementation_key(5126)) IDispatchPtr _IDraftDocumentAuto::GetProperties ( );
__declspec(implementation_key(5127)) VARIANT_BOOL _IDraftDocumentAuto::GetIsTemplate ( );
__declspec(implementation_key(5128)) void _IDraftDocumentAuto::PutIsTemplate ( VARIANT_BOOL IsTemplate );
__declspec(implementation_key(5129)) enum TGFramework::DocumentStatus _IDraftDocumentAuto::GetStatus ( );
__declspec(implementation_key(5130)) void _IDraftDocumentAuto::PutStatus ( enum TGFramework::DocumentStatus Status );
__declspec(implementation_key(5131)) HRESULT _IDraftDocumentAuto::EditProperties ( );
__declspec(implementation_key(5132)) TGFramework::UnitsOfMeasurePtr _IDraftDocumentAuto::GetUnitsOfMeasure ( );
__declspec(implementation_key(5133)) IDispatchPtr _IDraftDocumentAuto::GetActiveSketch ( );
__declspec(implementation_key(5134)) enum TGFramework::DocumentTypeConstants _IDraftDocumentAuto::GetType ( );
__declspec(implementation_key(5135)) IUnknownPtr _IDraftDocumentAuto::GetDocumentEvents ( );
__declspec(implementation_key(5136)) IUnknownPtr _IDraftDocumentAuto::GetRootStorage ( );
__declspec(implementation_key(5137)) IUnknownPtr _IDraftDocumentAuto::GetAddInsStorage ( _bstr_t Name, long grfMode );
__declspec(implementation_key(5138)) VARIANT_BOOL _IDraftDocumentAuto::GetDirty ( );
__declspec(implementation_key(5139)) void _IDraftDocumentAuto::PutDirty ( VARIANT_BOOL Dirty );
__declspec(implementation_key(5140)) TGFramework::AttributeQueryPtr _IDraftDocumentAuto::GetAttributeQuery ( );
__declspec(implementation_key(5141)) _bstr_t _IDraftDocumentAuto::GetCreatedVersion ( );
__declspec(implementation_key(5142)) _bstr_t _IDraftDocumentAuto::GetLastSavedVersion ( );
__declspec(implementation_key(5143)) TGFramework::HighlightSetsPtr _IDraftDocumentAuto::GetHighlightSets ( );
__declspec(implementation_key(5144)) VARIANT_BOOL _IDraftDocumentAuto::GetInPlaceActivated ( );
__declspec(implementation_key(5145)) HRESULT _IDraftDocumentAuto::SeekWriteAccess ( VARIANT_BOOL * WriteAccess );
__declspec(implementation_key(5146)) long _IDraftDocumentAuto::GetUndoSteps ( );
__declspec(implementation_key(5147)) void _IDraftDocumentAuto::PutUndoSteps ( long NumberOfUndoSteps );
__declspec(implementation_key(5148)) HRESULT _IDraftDocumentAuto::CreatePreview ( );
__declspec(implementation_key(5149)) void _IDraftDocumentAuto::PutReadOnly ( VARIANT_BOOL ReadOnly );
__declspec(implementation_key(5150)) HRESULT _IDraftDocumentAuto::SeekReadOnlyAccess ( VARIANT_BOOL * ReadOnlyAccess );
__declspec(implementation_key(5151)) HRESULT _IDraftDocumentAuto::ImportStyles2 ( enum TGFramework::seStyleTypeConstants StyleType, VARIANT_BOOL bReplace, IDispatch * pSrcDocument );
__declspec(implementation_key(5152)) VARIANT_BOOL _IDraftDocumentAuto::GetIsInsightFile ( );
__declspec(implementation_key(5153)) TGFramework::NamedViewsPtr _IDraftDocumentAuto::GetNamedViews ( );
__declspec(implementation_key(5154)) HRESULT _IDraftDocumentAuto::GetRegisteredCustomPropertiesBiDM ( VARIANT * varPropInfo );
__declspec(implementation_key(5155)) _bstr_t _IDraftDocumentAuto::SaveAsWithCustomPropertiesBIDM ( _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title, const _variant_t & varPropInfo );
__declspec(implementation_key(5156)) _bstr_t _IDraftDocumentAuto::ReviseWithCustomPropertiesBIDM ( _bstr_t FilePath, _bstr_t Revision, _bstr_t Title, const _variant_t & varPropInfo );
__declspec(implementation_key(5157)) HRESULT _IDraftDocumentAuto::SaveAsPRC ( _bstr_t FileName );
__declspec(implementation_key(5158)) IDispatchPtr _IDraftDocumentAuto::GetVariables ( );
__declspec(implementation_key(5159)) _variant_t _IDraftDocumentAuto::NewWindow ( const _variant_t & NewWindowOptions, const _variant_t & Environment );
__declspec(implementation_key(5160)) SheetsPtr _IDraftDocumentAuto::GetSheets ( );
__declspec(implementation_key(5161)) SectionsPtr _IDraftDocumentAuto::GetSections ( );
__declspec(implementation_key(5162)) SheetPtr _IDraftDocumentAuto::GetActiveSheet ( );
__declspec(implementation_key(5163)) SectionPtr _IDraftDocumentAuto::GetActiveSection ( );
__declspec(implementation_key(5164)) enum SheetSectionTypeConstants _IDraftDocumentAuto::GetActiveSectionType ( );
__declspec(implementation_key(5165)) HRESULT _IDraftDocumentAuto::DimensionTrackerStatistics ( long * ChangedDimCount, long * DetachedDimCount );
__declspec(implementation_key(5166)) IDispatchPtr _IDraftDocumentAuto::GetLinearStyles ( );
__declspec(implementation_key(5167)) IDispatchPtr _IDraftDocumentAuto::GetSmartFrame2dStyles ( );
__declspec(implementation_key(5168)) IDispatchPtr _IDraftDocumentAuto::GetTextStyles ( );
__declspec(implementation_key(5169)) IDispatchPtr _IDraftDocumentAuto::GetTextCharStyles ( );
__declspec(implementation_key(5170)) IDispatchPtr _IDraftDocumentAuto::GetFillStyles ( );
__declspec(implementation_key(5171)) IDispatchPtr _IDraftDocumentAuto::GetHatchPatternStyles ( );
__declspec(implementation_key(5172)) IDispatchPtr _IDraftDocumentAuto::GetDimensionStyles ( );
__declspec(implementation_key(5173)) IDispatchPtr _IDraftDocumentAuto::GetSymbolProperties ( );
__declspec(implementation_key(5174)) ModelLinksPtr _IDraftDocumentAuto::GetModelLinks ( );
__declspec(implementation_key(5175)) TGFrameworkSupport::FeatureControlFrameDataSetsPtr _IDraftDocumentAuto::GetFeatureControlFrameDataSets ( );
__declspec(implementation_key(5176)) TGFrameworkSupport::SurfaceFinishSymbolDataSetsPtr _IDraftDocumentAuto::GetSurfaceFinishSymbolDataSets ( );
__declspec(implementation_key(5177)) TGFrameworkSupport::WeldSymbolDataSetsPtr _IDraftDocumentAuto::GetWeldSymbolDataSets ( );
__declspec(implementation_key(5178)) PartsListsPtr _IDraftDocumentAuto::GetPartsLists ( );
__declspec(implementation_key(5179)) IUnknownPtr _IDraftDocumentAuto::GetDrawingViewEvents ( );
__declspec(implementation_key(5180)) SheetPtr _IDraftDocumentAuto::GetActivePrintingSheet ( );
__declspec(implementation_key(5181)) HRESULT _IDraftDocumentAuto::GetGlobalParameter ( enum DraftGlobalConstants Parameter, VARIANT * value );
__declspec(implementation_key(5182)) HRESULT _IDraftDocumentAuto::SetGlobalParameter ( enum DraftGlobalConstants Parameter, const _variant_t & value );
__declspec(implementation_key(5183)) HoleTablesPtr _IDraftDocumentAuto::GetHoleTables ( );
__declspec(implementation_key(5184)) HRESULT _IDraftDocumentAuto::AnnotationTrackerStatistics ( long * ChangedAnnotationCount, long * DetachedAnnotationCount );
__declspec(implementation_key(5185)) VARIANT_BOOL _IDraftDocumentAuto::GetMaintainRelationships ( );
__declspec(implementation_key(5186)) void _IDraftDocumentAuto::PutMaintainRelationships ( VARIANT_BOOL Enabled );
__declspec(implementation_key(5187)) HRESULT _IDraftDocumentAuto::UpdatePropertyTextDisplay ( );
__declspec(implementation_key(5188)) HRESULT _IDraftDocumentAuto::UpdatePropertyTextCacheAndDisplay ( );
__declspec(implementation_key(5189)) IUnknownPtr _IDraftDocumentAuto::GetPartsListEvents ( );
__declspec(implementation_key(5190)) IDispatchPtr _IDraftDocumentAuto::GetDashStyles ( );
__declspec(implementation_key(5191)) HRESULT _IDraftDocumentAuto::PopulateQuicksheetTemplate ( _bstr_t FileName );
__declspec(implementation_key(5192)) long _IDraftDocumentAuto::GetQuicksheetTemplateCount ( );
__declspec(implementation_key(5193)) BlocksPtr _IDraftDocumentAuto::GetBlocks ( );
__declspec(implementation_key(5194)) TablesPtr _IDraftDocumentAuto::GetTables ( );
__declspec(implementation_key(5195)) VARIANT_BOOL _IDraftDocumentAuto::GetInactiveDrawingViewMode ( );
__declspec(implementation_key(5196)) void _IDraftDocumentAuto::PutInactiveDrawingViewMode ( VARIANT_BOOL Enabled );
__declspec(implementation_key(5197)) HRESULT _IDraftDocumentAuto::DimensionTrackerStatisticsEx ( long * ChangedAnnotationCount, long * ChangedDimensionCount, long * DetachedAnnotationCount, long * DetachedDimensionCount, long * AnnotationsReattachedToAvailableGeometry, long * DimensionsReattachedToAvailableGeometry );
__declspec(implementation_key(5198)) HRESULT _IDraftDocumentAuto::DimensionTrackerNumEntries ( long * NumberOfEntries );
__declspec(implementation_key(5199)) HRESULT _IDraftDocumentAuto::DimensionTrackerEntry ( long Entry, long * BalloonID, IDispatch * * pObject, enum DimensionTrackerReasonCode * ReasonCode, double * PreviousValue, double * CurrentValue, BSTR * SheetName );
__declspec(implementation_key(5200)) HRESULT _IDraftDocumentAuto::GoalSeek ( _bstr_t NameTargetVariable, _bstr_t NameVariableToChange, double dTargetValue, double dTimeLimitInSecs, long NumIterationsLimit, double * dTimeElapsed, long * NumIterations, VARIANT_BOOL * TimeLimitExceeded, VARIANT_BOOL * IterationsLimitExceeded );
__declspec(implementation_key(5201)) HRESULT _IDraftDocumentAuto::PrintOutEx ( const _variant_t & Printer, const _variant_t & NumCopies, const _variant_t & Orientation, const _variant_t & PaperSize, const _variant_t & Scale, const _variant_t & PrintToFile, const _variant_t & OutputFileName, const _variant_t & PrintRange, const _variant_t & Sheets, const _variant_t & ColorAsBlack, const _variant_t & Collate, const _variant_t & ScaleLineWidths, const _variant_t & ScaleLineTypes, const _variant_t & UsePrinterClipping );
__declspec(implementation_key(5202)) DraftBendTablesPtr _IDraftDocumentAuto::GetDraftBendTables ( );
__declspec(implementation_key(5203)) IUnknownPtr _IDraftDocumentAuto::GetDraftBendTableEvents ( );
__declspec(implementation_key(5204)) DraftFilePreferencesPtr _IDraftDocumentAuto::GetFilePreferences ( );
__declspec(implementation_key(5205)) TGFrameworkSupport::DrawingViewStylesPtr _IDraftDocumentAuto::GetDrawingViewStyles ( );
__declspec(implementation_key(5206)) VARIANT_BOOL _IDraftDocumentAuto::GetDisplayRelationshipHandles ( );
__declspec(implementation_key(5207)) void _IDraftDocumentAuto::PutDisplayRelationshipHandles ( VARIANT_BOOL Displayed );
__declspec(implementation_key(5208)) VARIANT_BOOL _IDraftDocumentAuto::GetDisplayAlignmentIndicator ( );
__declspec(implementation_key(5209)) void _IDraftDocumentAuto::PutDisplayAlignmentIndicator ( VARIANT_BOOL Displayed );
__declspec(implementation_key(5210)) IDispatchPtr _IDraftDocumentAuto::GetObjectFromKey ( _bstr_t Key );
__declspec(implementation_key(5211)) HRESULT _IDraftDocumentAuto::ClearAllDimensionTrackerEntries ( );
__declspec(implementation_key(5212)) ConnectorTablesPtr _IDraftDocumentAuto::GetConnectorTables ( );
__declspec(implementation_key(5213)) IUnknownPtr _IDraftDocumentAuto::GetConnectorTableEvents ( );
__declspec(implementation_key(5214)) IDispatchPtr _IDraftDocumentAuto::GetSheetGroups ( );
__declspec(implementation_key(5215)) HRESULT _IDraftDocumentAuto::SetFilenameForDVWizard ( _bstr_t FileName );
__declspec(implementation_key(5216)) HRESULT _IDraftDocumentAuto::SetSymbolFileOrigin ( double XOrigin, double YOrigin );
__declspec(implementation_key(5217)) HRESULT _IDraftDocumentAuto::GetSymbolFileOrigin ( double * pxOrigin, double * pyOrigin );
__declspec(implementation_key(5218)) BlockTablesPtr _IDraftDocumentAuto::GetBlockTables ( );
__declspec(implementation_key(5219)) IUnknownPtr _IDraftDocumentAuto::GetBlockTableEvents ( );
__declspec(implementation_key(5220)) TGFrameworkSupport::TableStylesPtr _IDraftDocumentAuto::GetTableStyles ( );
__declspec(implementation_key(5221)) FOPTablesPtr _IDraftDocumentAuto::GetFOPTables ( );
__declspec(implementation_key(5222)) ConductorTablesPtr _IDraftDocumentAuto::GetConductorTables ( );
__declspec(implementation_key(5223)) ToleranceTablesPtr _IDraftDocumentAuto::GetToleranceTables ( );
__declspec(implementation_key(5224)) HoleTables2Ptr _IDraftDocumentAuto::GetHoleTables2 ( );
__declspec(implementation_key(5225)) VARIANT_BOOL _IDraftDocumentAuto::GetLocateBackgroundSheetGeometry ( );
__declspec(implementation_key(5226)) void _IDraftDocumentAuto::PutLocateBackgroundSheetGeometry ( VARIANT_BOOL pbLocate );
__declspec(implementation_key(5227)) HRESULT _IDraftDocumentAuto::UpdateRetrievedDimensionsAndAnnotations ( );
__declspec(implementation_key(5228)) void _IDraftDocumentAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(5229)) HRESULT _IDraftDocumentAuto::UpdateAll ( VARIANT_BOOL bForceUpdate );
__declspec(implementation_key(5230)) VARIANT_BOOL _IDraftDocumentAuto::GetMaintainAlignmentSet ( );
__declspec(implementation_key(5231)) void _IDraftDocumentAuto::PutMaintainAlignmentSet ( VARIANT_BOOL pbAlign );
__declspec(implementation_key(5232)) WeldTablesPtr _IDraftDocumentAuto::GetWeldTables ( );
__declspec(implementation_key(5233)) TGFramework::ApplicationPtr WeldTable::GetApplication ( );
__declspec(implementation_key(5234)) HRESULT WeldTable::Update ( );
__declspec(implementation_key(5235)) HRESULT WeldTable::CopyToClipboard ( );
__declspec(implementation_key(5236)) HRESULT WeldTable::SourceDimensions ( SAFEARRAY * * ppDimensions );
__declspec(implementation_key(5237)) HRESULT WeldTable::Delete ( );
__declspec(implementation_key(5238)) void WeldTable::PutSavedSettings ( _bstr_t _arg1 );
__declspec(implementation_key(5239)) IDispatchPtr WeldTable::GetParent ( );
__declspec(implementation_key(5240)) VARIANT_BOOL WeldTable::GetIncludeDimensionsInView ( );
__declspec(implementation_key(5241)) void WeldTable::PutIncludeDimensionsInView ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5242)) HRESULT WeldTable::SetOrigin ( double x, double y );
__declspec(implementation_key(5243)) HRESULT WeldTable::GetOrigin ( double * x, double * y );
__declspec(implementation_key(5244)) HRESULT WeldTable::GetListOfSavedSettings ( long * NumSavedSettings, SAFEARRAY * * ListOfSavedSettings );
__declspec(implementation_key(5245)) VARIANT_BOOL WeldTable::GetIsUpToDate ( );
__declspec(implementation_key(5246)) HRESULT WeldTable::ConvertToTable ( );
__declspec(implementation_key(5247)) TableCellPtr WeldTable::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex );
__declspec(implementation_key(5248)) enum TitlePosition WeldTable::GetColumnHeaderPosition ( );
__declspec(implementation_key(5249)) void WeldTable::PutColumnHeaderPosition ( enum TitlePosition _arg1 );
__declspec(implementation_key(5250)) TableColumnsPtr WeldTable::GetColumns ( );
__declspec(implementation_key(5251)) double WeldTable::GetMargin ( );
__declspec(implementation_key(5252)) void WeldTable::PutMargin ( double _arg1 );
__declspec(implementation_key(5253)) long WeldTable::GetMaximumRows ( );
__declspec(implementation_key(5254)) void WeldTable::PutMaximumRows ( long _arg1 );
__declspec(implementation_key(5255)) double WeldTable::GetPageGap ( );
__declspec(implementation_key(5256)) void WeldTable::PutPageGap ( double _arg1 );
__declspec(implementation_key(5257)) VARIANT_BOOL WeldTable::GetReverseDisplayOrder ( );
__declspec(implementation_key(5258)) void WeldTable::PutReverseDisplayOrder ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5259)) TableRowsPtr WeldTable::GetRows ( );
__declspec(implementation_key(5260)) VARIANT_BOOL WeldTable::GetShowColumnHeader ( );
__declspec(implementation_key(5261)) void WeldTable::PutShowColumnHeader ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5262)) _bstr_t WeldTable::GetTableStyle ( );
__declspec(implementation_key(5263)) void WeldTable::PutTableStyle ( _bstr_t _arg1 );
__declspec(implementation_key(5264)) TableTitlesPtr WeldTable::GetTitles ( );
__declspec(implementation_key(5265)) enum TableAnchorPoint WeldTable::GetAnchorPoint ( );
__declspec(implementation_key(5266)) void WeldTable::PutAnchorPoint ( enum TableAnchorPoint _arg1 );
__declspec(implementation_key(5267)) TablePagesPtr WeldTable::GetPages ( );
__declspec(implementation_key(5268)) double WeldTable::GetHeaderFixedRowHeight ( );
__declspec(implementation_key(5269)) void WeldTable::PutHeaderFixedRowHeight ( double _arg1 );
__declspec(implementation_key(5270)) double WeldTable::GetDataFixedRowHeight ( );
__declspec(implementation_key(5271)) void WeldTable::PutDataFixedRowHeight ( double _arg1 );
__declspec(implementation_key(5272)) double WeldTable::GetMaximumHeight ( );
__declspec(implementation_key(5273)) void WeldTable::PutMaximumHeight ( double _arg1 );
__declspec(implementation_key(5274)) long WeldTable::GetNumberOfHeaderRows ( );
__declspec(implementation_key(5275)) void WeldTable::PutNumberOfHeaderRows ( long _arg1 );
__declspec(implementation_key(5276)) long WeldTable::GetMaximumRowsFirstPage ( );
__declspec(implementation_key(5277)) void WeldTable::PutMaximumRowsFirstPage ( long _arg1 );
__declspec(implementation_key(5278)) long WeldTable::GetMaximumRowsAdditionalPages ( );
__declspec(implementation_key(5279)) void WeldTable::PutMaximumRowsAdditionalPages ( long _arg1 );
__declspec(implementation_key(5280)) double WeldTable::GetMaximumHeightFirstPage ( );
__declspec(implementation_key(5281)) void WeldTable::PutMaximumHeightFirstPage ( double _arg1 );
__declspec(implementation_key(5282)) double WeldTable::GetMaximumHeightAdditionalPages ( );
__declspec(implementation_key(5283)) void WeldTable::PutMaximumHeightAdditionalPages ( double _arg1 );
__declspec(implementation_key(5284)) VARIANT_BOOL WeldTable::GetCreateNewSheetsForTable ( );
__declspec(implementation_key(5285)) void WeldTable::PutCreateNewSheetsForTable ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5286)) _bstr_t WeldTable::GetFirstSheetBackgroundName ( );
__declspec(implementation_key(5287)) void WeldTable::PutFirstSheetBackgroundName ( _bstr_t _arg1 );
__declspec(implementation_key(5288)) _bstr_t WeldTable::GetAdditionalSheetsBackgroundName ( );
__declspec(implementation_key(5289)) void WeldTable::PutAdditionalSheetsBackgroundName ( _bstr_t _arg1 );
__declspec(implementation_key(5290)) VARIANT_BOOL WeldTable::GetShowSheetBackground ( );
__declspec(implementation_key(5291)) void WeldTable::PutShowSheetBackground ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5292)) VARIANT_BOOL WeldTable::GetMaintainSheetsWithTableSize ( );
__declspec(implementation_key(5293)) void WeldTable::PutMaintainSheetsWithTableSize ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5294)) VARIANT_BOOL WeldTable::GetEnableGroups ( );
__declspec(implementation_key(5295)) void WeldTable::PutEnableGroups ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5296)) TableGroupsPtr WeldTable::GetGroups ( );
__declspec(implementation_key(5297)) VARIANT_BOOL WeldTable::GetWrapDataCellsToNewRow ( );
__declspec(implementation_key(5298)) void WeldTable::PutWrapDataCellsToNewRow ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5299)) VARIANT_BOOL WeldTable::GetFillEndOfTableWithBlankRows ( );
__declspec(implementation_key(5300)) void WeldTable::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5301)) long WeldTable::GetGroupByColumn ( );
__declspec(implementation_key(5302)) void WeldTable::PutGroupByColumn ( long _arg1 );
__declspec(implementation_key(5303)) double WeldTable::GetTitleFixedRowHeight ( );
__declspec(implementation_key(5304)) void WeldTable::PutTitleFixedRowHeight ( double _arg1 );
__declspec(implementation_key(5305)) double WeldTable::GetMarginHorizontal ( );
__declspec(implementation_key(5306)) void WeldTable::PutMarginHorizontal ( double _arg1 );
__declspec(implementation_key(5307)) double WeldTable::GetMarginVertical ( );
__declspec(implementation_key(5308)) void WeldTable::PutMarginVertical ( double _arg1 );
__declspec(implementation_key(5309)) _bstr_t WeldTable::GetName ( );
__declspec(implementation_key(5310)) _bstr_t WeldTable::GetWeldTableDataJson ( );
__declspec(implementation_key(5311)) TGFramework::ApplicationPtr _IWeldTablesAuto::GetApplication ( );
__declspec(implementation_key(5312)) long _IWeldTablesAuto::GetCount ( );
__declspec(implementation_key(5313)) WeldTablePtr _IWeldTablesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(5314)) IUnknownPtr _IWeldTablesAuto::Get_NewEnum ( );
__declspec(implementation_key(5315)) WeldTablePtr _IWeldTablesAuto::AddByActiveSheet ( _bstr_t SavedSettings, long isMerge );
__declspec(implementation_key(5316)) WeldTablePtr _IWeldTablesAuto::AddByDrawingView ( struct DrawingView * DrawingView, _bstr_t SavedSettings, long DimensionsInView, long isMerge );
__declspec(implementation_key(5317)) WeldTablePtr _IWeldTablesAuto::AddByUserSelection ( _bstr_t SavedSettings, long isMerge );
__declspec(implementation_key(5318)) IDispatchPtr _IWeldTablesAuto::GetParent ( );
__declspec(implementation_key(5319)) TGFramework::ApplicationPtr _IWeldTableAuto::GetApplication ( );
__declspec(implementation_key(5320)) HRESULT _IWeldTableAuto::Update ( );
__declspec(implementation_key(5321)) HRESULT _IWeldTableAuto::CopyToClipboard ( );
__declspec(implementation_key(5322)) HRESULT _IWeldTableAuto::SourceDimensions ( SAFEARRAY * * ppDimensions );
__declspec(implementation_key(5323)) HRESULT _IWeldTableAuto::Delete ( );
__declspec(implementation_key(5324)) void _IWeldTableAuto::PutSavedSettings ( _bstr_t _arg1 );
__declspec(implementation_key(5325)) IDispatchPtr _IWeldTableAuto::GetParent ( );
__declspec(implementation_key(5326)) VARIANT_BOOL _IWeldTableAuto::GetIncludeDimensionsInView ( );
__declspec(implementation_key(5327)) void _IWeldTableAuto::PutIncludeDimensionsInView ( VARIANT_BOOL value );
__declspec(implementation_key(5328)) HRESULT _IWeldTableAuto::SetOrigin ( double x, double y );
__declspec(implementation_key(5329)) HRESULT _IWeldTableAuto::GetOrigin ( double * x, double * y );
__declspec(implementation_key(5330)) HRESULT _IWeldTableAuto::GetListOfSavedSettings ( long * NumSavedSettings, SAFEARRAY * * ListOfSavedSettings );
__declspec(implementation_key(5331)) VARIANT_BOOL _IWeldTableAuto::GetIsUpToDate ( );
__declspec(implementation_key(5332)) HRESULT _IWeldTableAuto::ConvertToTable ( );
__declspec(implementation_key(5333)) TableCellPtr _IWeldTableAuto::GetCell ( const _variant_t & RowIndex, const _variant_t & ColumnIndex );
__declspec(implementation_key(5334)) enum TitlePosition _IWeldTableAuto::GetColumnHeaderPosition ( );
__declspec(implementation_key(5335)) void _IWeldTableAuto::PutColumnHeaderPosition ( enum TitlePosition ColumnHeaderPosition );
__declspec(implementation_key(5336)) TableColumnsPtr _IWeldTableAuto::GetColumns ( );
__declspec(implementation_key(5337)) double _IWeldTableAuto::GetMargin ( );
__declspec(implementation_key(5338)) void _IWeldTableAuto::PutMargin ( double Margin );
__declspec(implementation_key(5339)) long _IWeldTableAuto::GetMaximumRows ( );
__declspec(implementation_key(5340)) void _IWeldTableAuto::PutMaximumRows ( long MaximumRows );
__declspec(implementation_key(5341)) double _IWeldTableAuto::GetPageGap ( );
__declspec(implementation_key(5342)) void _IWeldTableAuto::PutPageGap ( double PageGap );
__declspec(implementation_key(5343)) VARIANT_BOOL _IWeldTableAuto::GetReverseDisplayOrder ( );
__declspec(implementation_key(5344)) void _IWeldTableAuto::PutReverseDisplayOrder ( VARIANT_BOOL ReverseDisplayOrder );
__declspec(implementation_key(5345)) TableRowsPtr _IWeldTableAuto::GetRows ( );
__declspec(implementation_key(5346)) VARIANT_BOOL _IWeldTableAuto::GetShowColumnHeader ( );
__declspec(implementation_key(5347)) void _IWeldTableAuto::PutShowColumnHeader ( VARIANT_BOOL ShowColumnHeader );
__declspec(implementation_key(5348)) _bstr_t _IWeldTableAuto::GetTableStyle ( );
__declspec(implementation_key(5349)) void _IWeldTableAuto::PutTableStyle ( _bstr_t TableStyle );
__declspec(implementation_key(5350)) TableTitlesPtr _IWeldTableAuto::GetTitles ( );
__declspec(implementation_key(5351)) enum TableAnchorPoint _IWeldTableAuto::GetAnchorPoint ( );
__declspec(implementation_key(5352)) void _IWeldTableAuto::PutAnchorPoint ( enum TableAnchorPoint AnchorPoint );
__declspec(implementation_key(5353)) TablePagesPtr _IWeldTableAuto::GetPages ( );
__declspec(implementation_key(5354)) double _IWeldTableAuto::GetHeaderFixedRowHeight ( );
__declspec(implementation_key(5355)) void _IWeldTableAuto::PutHeaderFixedRowHeight ( double HeaderFixedRowHeight );
__declspec(implementation_key(5356)) double _IWeldTableAuto::GetDataFixedRowHeight ( );
__declspec(implementation_key(5357)) void _IWeldTableAuto::PutDataFixedRowHeight ( double DataFixedRowHeight );
__declspec(implementation_key(5358)) double _IWeldTableAuto::GetMaximumHeight ( );
__declspec(implementation_key(5359)) void _IWeldTableAuto::PutMaximumHeight ( double MaximumHeight );
__declspec(implementation_key(5360)) long _IWeldTableAuto::GetNumberOfHeaderRows ( );
__declspec(implementation_key(5361)) void _IWeldTableAuto::PutNumberOfHeaderRows ( long NumberOfHeaderRows );
__declspec(implementation_key(5362)) long _IWeldTableAuto::GetMaximumRowsFirstPage ( );
__declspec(implementation_key(5363)) void _IWeldTableAuto::PutMaximumRowsFirstPage ( long MaximumRowsFirstPage );
__declspec(implementation_key(5364)) long _IWeldTableAuto::GetMaximumRowsAdditionalPages ( );
__declspec(implementation_key(5365)) void _IWeldTableAuto::PutMaximumRowsAdditionalPages ( long MaximumRowsAdditionalPages );
__declspec(implementation_key(5366)) double _IWeldTableAuto::GetMaximumHeightFirstPage ( );
__declspec(implementation_key(5367)) void _IWeldTableAuto::PutMaximumHeightFirstPage ( double MaximumHeightFirstPage );
__declspec(implementation_key(5368)) double _IWeldTableAuto::GetMaximumHeightAdditionalPages ( );
__declspec(implementation_key(5369)) void _IWeldTableAuto::PutMaximumHeightAdditionalPages ( double MaximumHeightAdditionalPages );
__declspec(implementation_key(5370)) VARIANT_BOOL _IWeldTableAuto::GetCreateNewSheetsForTable ( );
__declspec(implementation_key(5371)) void _IWeldTableAuto::PutCreateNewSheetsForTable ( VARIANT_BOOL CreateNewSheetsForTable );
__declspec(implementation_key(5372)) _bstr_t _IWeldTableAuto::GetFirstSheetBackgroundName ( );
__declspec(implementation_key(5373)) void _IWeldTableAuto::PutFirstSheetBackgroundName ( _bstr_t FirstSheetBackgroundName );
__declspec(implementation_key(5374)) _bstr_t _IWeldTableAuto::GetAdditionalSheetsBackgroundName ( );
__declspec(implementation_key(5375)) void _IWeldTableAuto::PutAdditionalSheetsBackgroundName ( _bstr_t AdditionalSheetsBackgroundName );
__declspec(implementation_key(5376)) VARIANT_BOOL _IWeldTableAuto::GetShowSheetBackground ( );
__declspec(implementation_key(5377)) void _IWeldTableAuto::PutShowSheetBackground ( VARIANT_BOOL ShowSheetBackground );
__declspec(implementation_key(5378)) VARIANT_BOOL _IWeldTableAuto::GetMaintainSheetsWithTableSize ( );
__declspec(implementation_key(5379)) void _IWeldTableAuto::PutMaintainSheetsWithTableSize ( VARIANT_BOOL MaintainSheetsWithTableSize );
__declspec(implementation_key(5380)) VARIANT_BOOL _IWeldTableAuto::GetEnableGroups ( );
__declspec(implementation_key(5381)) void _IWeldTableAuto::PutEnableGroups ( VARIANT_BOOL EnableGroups );
__declspec(implementation_key(5382)) TableGroupsPtr _IWeldTableAuto::GetGroups ( );
__declspec(implementation_key(5383)) VARIANT_BOOL _IWeldTableAuto::GetWrapDataCellsToNewRow ( );
__declspec(implementation_key(5384)) void _IWeldTableAuto::PutWrapDataCellsToNewRow ( VARIANT_BOOL WrapDataCellsToNewRow );
__declspec(implementation_key(5385)) VARIANT_BOOL _IWeldTableAuto::GetFillEndOfTableWithBlankRows ( );
__declspec(implementation_key(5386)) void _IWeldTableAuto::PutFillEndOfTableWithBlankRows ( VARIANT_BOOL FillEndOfTableWithBlankRows );
__declspec(implementation_key(5387)) long _IWeldTableAuto::GetGroupByColumn ( );
__declspec(implementation_key(5388)) void _IWeldTableAuto::PutGroupByColumn ( long ColumnIndex );
__declspec(implementation_key(5389)) double _IWeldTableAuto::GetTitleFixedRowHeight ( );
__declspec(implementation_key(5390)) void _IWeldTableAuto::PutTitleFixedRowHeight ( double TitleFixedRowHeight );
__declspec(implementation_key(5391)) double _IWeldTableAuto::GetMarginHorizontal ( );
__declspec(implementation_key(5392)) void _IWeldTableAuto::PutMarginHorizontal ( double MarginHorizontal );
__declspec(implementation_key(5393)) double _IWeldTableAuto::GetMarginVertical ( );
__declspec(implementation_key(5394)) void _IWeldTableAuto::PutMarginVertical ( double MarginVertical );
__declspec(implementation_key(5395)) _bstr_t _IWeldTableAuto::GetName ( );
__declspec(implementation_key(5396)) _bstr_t _IWeldTableAuto::GetWeldTableDataJson ( );
__declspec(implementation_key(5397)) void _IViewPlaneAuto::PutDisplayCaption ( VARIANT_BOOL DisplayCaption );
__declspec(implementation_key(5398)) VARIANT_BOOL _IViewPlaneAuto::GetDisplayCaption ( );
__declspec(implementation_key(5399)) DrawingViewPtr _IViewPlaneAuto::GetSourceDrawingView ( );
__declspec(implementation_key(5400)) _bstr_t _IViewPlaneAuto::GetCaption ( );
__declspec(implementation_key(5401)) void _IViewPlaneAuto::PutCaption ( _bstr_t Caption );
__declspec(implementation_key(5402)) enum TGFrameworkSupport::DimViewPlaneDisplayTypeConstants _IViewPlaneAuto::GetDisplayType ( );
__declspec(implementation_key(5403)) void _IViewPlaneAuto::PutDisplayType ( enum TGFrameworkSupport::DimViewPlaneDisplayTypeConstants DisplayType );
__declspec(implementation_key(5404)) _bstr_t _IViewPlaneAuto::GetTextFont ( );
__declspec(implementation_key(5405)) void _IViewPlaneAuto::PutTextFont ( _bstr_t TextFont );
__declspec(implementation_key(5406)) enum TGFrameworkSupport::DimTextFontStyleConstants _IViewPlaneAuto::GetTextFontStyle ( );
__declspec(implementation_key(5407)) void _IViewPlaneAuto::PutTextFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants TextFontStyle );
__declspec(implementation_key(5408)) double _IViewPlaneAuto::GetTextHeight ( );
__declspec(implementation_key(5409)) void _IViewPlaneAuto::PutTextHeight ( double TextHeight );
__declspec(implementation_key(5410)) double _IViewPlaneAuto::GetTextRatio ( );
__declspec(implementation_key(5411)) void _IViewPlaneAuto::PutTextRatio ( double TextRatio );
__declspec(implementation_key(5412)) long _IViewPlaneAuto::GetTextColor ( );
__declspec(implementation_key(5413)) void _IViewPlaneAuto::PutTextColor ( long TextColor );
__declspec(implementation_key(5414)) _bstr_t _IViewPlaneAuto::GetStyleName ( );
__declspec(implementation_key(5415)) void _IViewPlaneAuto::PutStyleName ( _bstr_t StyleName );
__declspec(implementation_key(5416)) enum TGFrameworkSupport::DimTermTypeConstants _IViewPlaneAuto::GetTerminatorType ( );
__declspec(implementation_key(5417)) void _IViewPlaneAuto::PutTerminatorType ( enum TGFrameworkSupport::DimTermTypeConstants TerminatorType );
__declspec(implementation_key(5418)) double _IViewPlaneAuto::GetTerminatorRatio ( );
__declspec(implementation_key(5419)) void _IViewPlaneAuto::PutTerminatorRatio ( double TerminatorRatio );
__declspec(implementation_key(5420)) double _IViewPlaneAuto::GetLineWidth ( );
__declspec(implementation_key(5421)) void _IViewPlaneAuto::PutLineWidth ( double LineWidth );
__declspec(implementation_key(5422)) _bstr_t _IViewPlaneAuto::GetLineType ( );
__declspec(implementation_key(5423)) void _IViewPlaneAuto::PutLineType ( _bstr_t LineType );
__declspec(implementation_key(5424)) TGFramework::ApplicationPtr _IViewPlaneAuto::GetApplication ( );
__declspec(implementation_key(5425)) long _IViewPlaneAuto::GetIndex ( );
__declspec(implementation_key(5426)) _bstr_t _IViewPlaneAuto::GetName ( const _variant_t & Recurse, long Lcid );
__declspec(implementation_key(5427)) IDispatchPtr _IViewPlaneAuto::GetParent ( );
__declspec(implementation_key(5428)) long _IViewPlaneAuto::GetType ( );
__declspec(implementation_key(5429)) VARIANT_BOOL _IViewPlaneAuto::GetVisible ( );
__declspec(implementation_key(5430)) void _IViewPlaneAuto::PutVisible ( VARIANT_BOOL * Toggle );
__declspec(implementation_key(5431)) long _IViewPlaneAuto::GetZOrder ( );
__declspec(implementation_key(5432)) _bstr_t _IViewPlaneAuto::GetKey ( const _variant_t & Recurse );
__declspec(implementation_key(5433)) IDispatchPtr _IViewPlaneAuto::GetDocument ( );
__declspec(implementation_key(5434)) HRESULT _IViewPlaneAuto::Copy ( );
__declspec(implementation_key(5435)) HRESULT _IViewPlaneAuto::Cut ( );
__declspec(implementation_key(5436)) HRESULT _IViewPlaneAuto::Delete ( );
__declspec(implementation_key(5437)) HRESULT _IViewPlaneAuto::BringToFront ( );
__declspec(implementation_key(5438)) HRESULT _IViewPlaneAuto::BringForward ( );
__declspec(implementation_key(5439)) HRESULT _IViewPlaneAuto::SendToBack ( );
__declspec(implementation_key(5440)) HRESULT _IViewPlaneAuto::SendBackward ( );
__declspec(implementation_key(5441)) HRESULT _IViewPlaneAuto::Select ( );
__declspec(implementation_key(5442)) HRESULT _IViewPlaneAuto::Range ( double * min_x, double * min_y, double * max_x, double * max_y );
__declspec(implementation_key(5443)) _bstr_t _IViewPlaneAuto::GetCaptionDefinitionText ( );
__declspec(implementation_key(5444)) void _IViewPlaneAuto::PutCaptionDefinitionText ( _bstr_t CaptionDefinitionText );
__declspec(implementation_key(5445)) _bstr_t _IViewPlaneAuto::GetCaptionDisplayedText ( );
__declspec(implementation_key(5446)) HRESULT _IViewPlaneAuto::GetFoldLineWithViewDirection ( double * LineStartX, double * LineStartY, double * LineEndX, double * LineEndY, double * ViewDirectionX, double * ViewDirectionY );
__declspec(implementation_key(5447)) HRESULT _IViewPlaneAuto::GetViewLineWithArrowDirection ( double * LineStartX, double * LineStartY, double * LineEndX, double * LineEndY, double * ArrowDirectionX, double * ArrowDirectionY );
__declspec(implementation_key(5448)) _bstr_t _IViewPlaneAuto::GetViewSheetNumberDefinitionText ( );
__declspec(implementation_key(5449)) void _IViewPlaneAuto::PutViewSheetNumberDefinitionText ( _bstr_t ViewSheetNumberDefinitionText );
__declspec(implementation_key(5450)) VARIANT_BOOL _IViewPlaneAuto::GetDisplayViewSheetNumber ( );
__declspec(implementation_key(5451)) void _IViewPlaneAuto::PutDisplayViewSheetNumber ( VARIANT_BOOL DisplayViewSheetNumber );
__declspec(implementation_key(5452)) enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants _IViewPlaneAuto::GetViewSheetNumberLocation ( );
__declspec(implementation_key(5453)) void _IViewPlaneAuto::PutViewSheetNumberLocation ( enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants ViewSheetNumberLocation );
__declspec(implementation_key(5454)) HRESULT _IViewPlaneAuto::GetCaptionPosition ( VARIANT_BOOL CaptionAtStartOfLine, double * x, double * y );
__declspec(implementation_key(5455)) HRESULT _IViewPlaneAuto::SetCaptionPosition ( VARIANT_BOOL CaptionAtStartOfLine, double x, double y );
__declspec(implementation_key(5456)) void _IViewPlaneAuto::PutAuto ( VARIANT_BOOL value );
__declspec(implementation_key(5457)) VARIANT_BOOL _IViewPlaneAuto::GetAuto ( );
__declspec(implementation_key(5458)) IDispatchPtr _IViewPlaneAuto::GetAttributeSets ( );
__declspec(implementation_key(5459)) VARIANT_BOOL _IViewPlaneAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(5460)) HRESULT _IViewPlaneAuto::SetAuxiliaryViewArrowPosition ( double startPosX, double startPosY, double endPosX, double endPosY );
__declspec(implementation_key(5461)) TGFramework::ApplicationPtr SelectedSheets::GetApplication ( );
__declspec(implementation_key(5462)) IDispatchPtr SelectedSheets::GetParent ( );
__declspec(implementation_key(5463)) long SelectedSheets::GetCount ( );
__declspec(implementation_key(5464)) SheetPtr SelectedSheets::Item ( const _variant_t & Index );
__declspec(implementation_key(5465)) TGFramework::ApplicationPtr _ISelectedSheetsAuto::GetApplication ( );
__declspec(implementation_key(5466)) IDispatchPtr _ISelectedSheetsAuto::GetParent ( );
__declspec(implementation_key(5467)) long _ISelectedSheetsAuto::GetCount ( );
__declspec(implementation_key(5468)) IUnknownPtr _ISelectedSheetsAuto::Get_NewEnum ( );
__declspec(implementation_key(5469)) SheetPtr _ISelectedSheetsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(5470)) void _ISheetWindowAuto::PutActiveSheet ( struct Sheet * Sheet );
__declspec(implementation_key(5471)) SheetPtr _ISheetWindowAuto::GetActiveSheet ( );
__declspec(implementation_key(5472)) SectionPtr _ISheetWindowAuto::GetActiveSection ( );
__declspec(implementation_key(5473)) void _ISheetWindowAuto::PutActiveSection ( struct Section * Section );
__declspec(implementation_key(5474)) enum SheetSectionTypeConstants _ISheetWindowAuto::GetActiveSectionType ( );
__declspec(implementation_key(5475)) void _ISheetWindowAuto::PutActiveSectionType ( enum SheetSectionTypeConstants Section );
__declspec(implementation_key(5476)) void _ISheetWindowAuto::PutDisplaySheetTabs ( VARIANT_BOOL DisplaySheetTabs );
__declspec(implementation_key(5477)) VARIANT_BOOL _ISheetWindowAuto::GetDisplaySheetTabs ( );
__declspec(implementation_key(5478)) void _ISheetWindowAuto::PutDisplaySectionTabs ( VARIANT_BOOL DisplaySectionTabs );
__declspec(implementation_key(5479)) VARIANT_BOOL _ISheetWindowAuto::GetDisplaySectionTabs ( );
__declspec(implementation_key(5480)) void _ISheetWindowAuto::PutTransparentDisplay ( VARIANT_BOOL TransparentDisplay );
__declspec(implementation_key(5481)) VARIANT_BOOL _ISheetWindowAuto::GetTransparentDisplay ( );
__declspec(implementation_key(5482)) void _ISheetWindowAuto::PutSheetTabRatio ( double Ratio );
__declspec(implementation_key(5483)) double _ISheetWindowAuto::GetSheetTabRatio ( );
__declspec(implementation_key(5484)) double _ISheetWindowAuto::GetSectionTabRatio ( );
__declspec(implementation_key(5485)) void _ISheetWindowAuto::PutSectionTabRatio ( double Ratio );
__declspec(implementation_key(5486)) SelectedSheetsPtr _ISheetWindowAuto::GetSelectedSheets ( );
__declspec(implementation_key(5487)) void _ISheetWindowAuto::PutZoom ( double ZoomPercent );
__declspec(implementation_key(5488)) double _ISheetWindowAuto::GetZoom ( );
__declspec(implementation_key(5489)) int _ISheetWindowAuto::GetUsableHeight ( );
__declspec(implementation_key(5490)) int _ISheetWindowAuto::GetUsableWidth ( );
__declspec(implementation_key(5491)) VARIANT_BOOL _ISheetWindowAuto::GetDisplayHScroll ( );
__declspec(implementation_key(5492)) void _ISheetWindowAuto::PutDisplayHScroll ( VARIANT_BOOL Display );
__declspec(implementation_key(5493)) VARIANT_BOOL _ISheetWindowAuto::GetDisplayVScroll ( );
__declspec(implementation_key(5494)) void _ISheetWindowAuto::PutDisplayVScroll ( VARIANT_BOOL Display );
__declspec(implementation_key(5495)) TGFrameworkSupport::BackDropPtr _ISheetWindowAuto::GetBackdrop ( );
__declspec(implementation_key(5496)) void _ISheetWindowAuto::PutDisplayAsPrinted ( VARIANT_BOOL DisplayAsPrinted );
__declspec(implementation_key(5497)) VARIANT_BOOL _ISheetWindowAuto::GetDisplayAsPrinted ( );
__declspec(implementation_key(5498)) HRESULT _ISheetWindowAuto::Copy ( );
__declspec(implementation_key(5499)) HRESULT _ISheetWindowAuto::Cut ( );
__declspec(implementation_key(5500)) HRESULT _ISheetWindowAuto::DeselectSheet ( const _variant_t & Sheet );
__declspec(implementation_key(5501)) HRESULT _ISheetWindowAuto::Paste ( );
__declspec(implementation_key(5502)) HRESULT _ISheetWindowAuto::WindowToModel ( int WindowX, int WindowY, double * ModelX, double * ModelY );
__declspec(implementation_key(5503)) HRESULT _ISheetWindowAuto::ModelToWindow ( double ModelX, double ModelY, int * WindowX, int * WindowY );
__declspec(implementation_key(5504)) HRESULT _ISheetWindowAuto::GetOrigin ( double * x, double * y );
__declspec(implementation_key(5505)) HRESULT _ISheetWindowAuto::SetOrigin ( double x, double y );
__declspec(implementation_key(5506)) HRESULT _ISheetWindowAuto::Pan ( int x, int y );
__declspec(implementation_key(5507)) HRESULT _ISheetWindowAuto::SelectSheet ( const _variant_t & Sheet, const _variant_t & Replace );
__declspec(implementation_key(5508)) HRESULT _ISheetWindowAuto::ZoomArea ( int x1, int y1, int x2, int y2 );
__declspec(implementation_key(5509)) HRESULT _ISheetWindowAuto::Fit ( );
__declspec(implementation_key(5510)) _variant_t _ISheetWindowAuto::Key ( const _variant_t & Recurse );
__declspec(implementation_key(5511)) HRESULT _ISheetWindowAuto::Activate ( );
__declspec(implementation_key(5512)) HRESULT _ISheetWindowAuto::ActivateNext ( );
__declspec(implementation_key(5513)) HRESULT _ISheetWindowAuto::ActivatePrevious ( );
__declspec(implementation_key(5514)) TGFramework::ApplicationPtr _ISheetWindowAuto::GetApplication ( );
__declspec(implementation_key(5515)) _bstr_t _ISheetWindowAuto::GetCaption ( );
__declspec(implementation_key(5516)) void _ISheetWindowAuto::PutCaption ( _bstr_t Caption );
__declspec(implementation_key(5517)) HRESULT _ISheetWindowAuto::Close ( const _variant_t & SaveChanges, const _variant_t & FileName, const _variant_t & RouteWorkbook );
__declspec(implementation_key(5518)) _bstr_t _ISheetWindowAuto::GetEnvironment ( );
__declspec(implementation_key(5519)) void _ISheetWindowAuto::PutEnvironment ( _bstr_t Environment );
__declspec(implementation_key(5520)) int _ISheetWindowAuto::GetHeight ( );
__declspec(implementation_key(5521)) void _ISheetWindowAuto::PutHeight ( int Height );
__declspec(implementation_key(5522)) long _ISheetWindowAuto::GethWnd ( );
__declspec(implementation_key(5523)) int _ISheetWindowAuto::GetIndex ( );
__declspec(implementation_key(5524)) int _ISheetWindowAuto::GetLeft ( );
__declspec(implementation_key(5525)) void _ISheetWindowAuto::PutLeft ( int Left );
__declspec(implementation_key(5526)) IDispatchPtr _ISheetWindowAuto::GetParent ( );
__declspec(implementation_key(5527)) HRESULT _ISheetWindowAuto::PrintOut ( );
__declspec(implementation_key(5528)) TGFramework::SelectSetPtr _ISheetWindowAuto::GetSelectSet ( );
__declspec(implementation_key(5529)) int _ISheetWindowAuto::GetTop ( );
__declspec(implementation_key(5530)) void _ISheetWindowAuto::PutTop ( int Top );
__declspec(implementation_key(5531)) _bstr_t _ISheetWindowAuto::GetType ( );
__declspec(implementation_key(5532)) VARIANT_BOOL _ISheetWindowAuto::GetVisible ( );
__declspec(implementation_key(5533)) void _ISheetWindowAuto::PutVisible ( VARIANT_BOOL Visible );
__declspec(implementation_key(5534)) int _ISheetWindowAuto::GetWidth ( );
__declspec(implementation_key(5535)) void _ISheetWindowAuto::PutWidth ( int Width );
__declspec(implementation_key(5536)) int _ISheetWindowAuto::GetWindowNumber ( );
__declspec(implementation_key(5537)) int _ISheetWindowAuto::GetWindowState ( );
__declspec(implementation_key(5538)) void _ISheetWindowAuto::PutWindowState ( int WindowState );
__declspec(implementation_key(5539)) long _ISheetWindowAuto::GetIcon ( );
__declspec(implementation_key(5540)) HRESULT _ISheetWindowAuto::SaveAsImage ( _bstr_t FileName, const _variant_t & Width, const _variant_t & Height, const _variant_t & Resolution, const _variant_t & ColorDepth, enum TGFramework::SeImageQualityType ImageQuality, VARIANT_BOOL Invert );
__declspec(implementation_key(5541)) HRESULT _ISheetWindowAuto::Update ( );
__declspec(implementation_key(5542)) HRESULT _ISheetWindowAuto::FitEx ( enum SheetFitConstants FitOption );
__declspec(implementation_key(5543)) void _ISheetWindowAuto::PutDisplayBackgroundSheetTabs ( VARIANT_BOOL DisplayBackgroundSheetTabs );
__declspec(implementation_key(5544)) VARIANT_BOOL _ISheetWindowAuto::GetDisplayBackgroundSheetTabs ( );
__declspec(implementation_key(5545)) void _ISheetWindowAuto::PutDisplayWorkingSheetTabs ( VARIANT_BOOL DisplayWorkingSheetTabs );
__declspec(implementation_key(5546)) VARIANT_BOOL _ISheetWindowAuto::GetDisplayWorkingSheetTabs ( );
__declspec(implementation_key(5547)) void _ISheetWindowAuto::PutDisplay2DModelSheetTab ( VARIANT_BOOL Display2DModelSheetTab );
__declspec(implementation_key(5548)) VARIANT_BOOL _ISheetWindowAuto::GetDisplay2DModelSheetTab ( );
__declspec(implementation_key(5549)) HRESULT _ISheetWindowAuto::ZoomAreaEx ( double x1, double y1, double x2, double y2 );
__declspec(implementation_key(5550)) HRESULT _ISheetWindowAuto::BeginSheetViewDynamics ( );
__declspec(implementation_key(5551)) HRESULT _ISheetWindowAuto::EndSheetViewDynamics ( );
__declspec(implementation_key(5552)) IDispatchPtr _ISheetWindowAuto::GetAttributeSets ( );
__declspec(implementation_key(5553)) VARIANT_BOOL _ISheetWindowAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(5554)) HRESULT DraftDocument::Activate ( );
__declspec(implementation_key(5555)) TGFramework::ApplicationPtr DraftDocument::GetApplication ( );
__declspec(implementation_key(5556)) HRESULT DraftDocument::Close ( const _variant_t & SaveChanges, const _variant_t & FileName, const _variant_t & RouteWorkbook );
__declspec(implementation_key(5557)) _bstr_t DraftDocument::GetFullName ( );
__declspec(implementation_key(5558)) _bstr_t DraftDocument::GetName ( );
__declspec(implementation_key(5559)) TGFramework::ApplicationPtr DraftDocument::GetParent ( );
__declspec(implementation_key(5560)) _bstr_t DraftDocument::GetPath ( );
__declspec(implementation_key(5561)) HRESULT DraftDocument::PrintOut ( const _variant_t & Printer, const _variant_t & NumCopies, const _variant_t & Orientation, const _variant_t & PaperSize, const _variant_t & Scale, const _variant_t & PrintToFile, const _variant_t & OutputFileName, const _variant_t & PrintRange, const _variant_t & Sheets, const _variant_t & ColorAsBlack, const _variant_t & Collate );
__declspec(implementation_key(5562)) VARIANT_BOOL DraftDocument::GetReadOnly ( );
__declspec(implementation_key(5563)) IDispatchPtr DraftDocument::GetRoutingSlip ( );
__declspec(implementation_key(5564)) HRESULT DraftDocument::Save ( );
__declspec(implementation_key(5565)) HRESULT DraftDocument::SaveAs ( _bstr_t NewName, const _variant_t & IsATemplate, const _variant_t & FileFormat, const _variant_t & ReadOnlyEnforced, const _variant_t & ReadOnlyRecommended, const _variant_t & NewStatus, const _variant_t & CreateBackup, const _variant_t & UpdateLinkInContainer, const _variant_t & UpdateAllLinksInContainer );
__declspec(implementation_key(5566)) HRESULT DraftDocument::SaveCopyAs ( _bstr_t Name );
__declspec(implementation_key(5567)) HRESULT DraftDocument::SaveAsJT ( _bstr_t NewName, const _variant_t & Include_PreciseGeom, const _variant_t & Prod_Structure_Option, const _variant_t & Export_PMI, const _variant_t & Export_CoordinateSystem, const _variant_t & Export_3DBodies, const _variant_t & NumberofLODs, const _variant_t & JTFileUnit, const _variant_t & Write_Which_Files, const _variant_t & Use_Simplified_TopAsm, const _variant_t & Use_Simplified_SubAsm, const _variant_t & Use_Simplified_Part, const _variant_t & EnableDefaultOutputPath, const _variant_t & IncludeSEProperties, const _variant_t & Export_VisiblePartsOnly, const _variant_t & Export_VisibleConstructionsOnly, const _variant_t & RemoveUnsafeCharacters, const _variant_t & ExportSEPartFileAsSingleJTFile );
__declspec(implementation_key(5568)) _bstr_t DraftDocument::SaveAsBIDM ( _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title );
__declspec(implementation_key(5569)) _bstr_t DraftDocument::ReviseBIDM ( _bstr_t FilePath, _bstr_t Revision, _bstr_t Title );
__declspec(implementation_key(5570)) TGFramework::SelectSetPtr DraftDocument::GetSelectSet ( );
__declspec(implementation_key(5571)) HRESULT DraftDocument::SendMail ( const _variant_t & Recipients, const _variant_t & Subject, const _variant_t & ReturnReceipt );
__declspec(implementation_key(5572)) IDispatchPtr DraftDocument::GetSummaryInfo ( );
__declspec(implementation_key(5573)) TGFramework::WindowsPtr DraftDocument::GetWindows ( );
__declspec(implementation_key(5574)) IDispatchPtr DraftDocument::GetProperties ( );
__declspec(implementation_key(5575)) VARIANT_BOOL DraftDocument::GetIsTemplate ( );
__declspec(implementation_key(5576)) void DraftDocument::PutIsTemplate ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5577)) enum TGFramework::DocumentStatus DraftDocument::GetStatus ( );
__declspec(implementation_key(5578)) void DraftDocument::PutStatus ( enum TGFramework::DocumentStatus _arg1 );
__declspec(implementation_key(5579)) HRESULT DraftDocument::EditProperties ( );
__declspec(implementation_key(5580)) TGFramework::UnitsOfMeasurePtr DraftDocument::GetUnitsOfMeasure ( );
__declspec(implementation_key(5581)) IDispatchPtr DraftDocument::GetActiveSketch ( );
__declspec(implementation_key(5582)) enum TGFramework::DocumentTypeConstants DraftDocument::GetType ( );
__declspec(implementation_key(5583)) IUnknownPtr DraftDocument::GetDocumentEvents ( );
__declspec(implementation_key(5584)) IUnknownPtr DraftDocument::GetRootStorage ( );
__declspec(implementation_key(5585)) IUnknownPtr DraftDocument::GetAddInsStorage ( _bstr_t Name, long grfMode );
__declspec(implementation_key(5586)) VARIANT_BOOL DraftDocument::GetDirty ( );
__declspec(implementation_key(5587)) void DraftDocument::PutDirty ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5588)) TGFramework::AttributeQueryPtr DraftDocument::GetAttributeQuery ( );
__declspec(implementation_key(5589)) _bstr_t DraftDocument::GetCreatedVersion ( );
__declspec(implementation_key(5590)) _bstr_t DraftDocument::GetLastSavedVersion ( );
__declspec(implementation_key(5591)) TGFramework::HighlightSetsPtr DraftDocument::GetHighlightSets ( );
__declspec(implementation_key(5592)) VARIANT_BOOL DraftDocument::GetInPlaceActivated ( );
__declspec(implementation_key(5593)) HRESULT DraftDocument::SeekWriteAccess ( VARIANT_BOOL * WriteAccess );
__declspec(implementation_key(5594)) long DraftDocument::GetUndoSteps ( );
__declspec(implementation_key(5595)) void DraftDocument::PutUndoSteps ( long _arg1 );
__declspec(implementation_key(5596)) HRESULT DraftDocument::CreatePreview ( );
__declspec(implementation_key(5597)) void DraftDocument::PutReadOnly ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5598)) HRESULT DraftDocument::SeekReadOnlyAccess ( VARIANT_BOOL * ReadOnlyAccess );
__declspec(implementation_key(5599)) HRESULT DraftDocument::ImportStyles2 ( enum TGFramework::seStyleTypeConstants StyleType, VARIANT_BOOL bReplace, IDispatch * pSrcDocument );
__declspec(implementation_key(5600)) VARIANT_BOOL DraftDocument::GetIsInsightFile ( );
__declspec(implementation_key(5601)) TGFramework::NamedViewsPtr DraftDocument::GetNamedViews ( );
__declspec(implementation_key(5602)) HRESULT DraftDocument::GetRegisteredCustomPropertiesBiDM ( VARIANT * varPropInfo );
__declspec(implementation_key(5603)) _bstr_t DraftDocument::SaveAsWithCustomPropertiesBIDM ( _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title, const _variant_t & varPropInfo );
__declspec(implementation_key(5604)) _bstr_t DraftDocument::ReviseWithCustomPropertiesBIDM ( _bstr_t FilePath, _bstr_t Revision, _bstr_t Title, const _variant_t & varPropInfo );
__declspec(implementation_key(5605)) HRESULT DraftDocument::SaveAsPRC ( _bstr_t FileName );
__declspec(implementation_key(5606)) IDispatchPtr DraftDocument::GetVariables ( );
__declspec(implementation_key(5607)) _variant_t DraftDocument::NewWindow ( const _variant_t & NewWindowOptions, const _variant_t & Environment );
__declspec(implementation_key(5608)) SheetsPtr DraftDocument::GetSheets ( );
__declspec(implementation_key(5609)) SectionsPtr DraftDocument::GetSections ( );
__declspec(implementation_key(5610)) SheetPtr DraftDocument::GetActiveSheet ( );
__declspec(implementation_key(5611)) SectionPtr DraftDocument::GetActiveSection ( );
__declspec(implementation_key(5612)) enum SheetSectionTypeConstants DraftDocument::GetActiveSectionType ( );
__declspec(implementation_key(5613)) HRESULT DraftDocument::DimensionTrackerStatistics ( long * ChangedDimCount, long * DetachedDimCount );
__declspec(implementation_key(5614)) IDispatchPtr DraftDocument::GetLinearStyles ( );
__declspec(implementation_key(5615)) IDispatchPtr DraftDocument::GetSmartFrame2dStyles ( );
__declspec(implementation_key(5616)) IDispatchPtr DraftDocument::GetTextStyles ( );
__declspec(implementation_key(5617)) IDispatchPtr DraftDocument::GetTextCharStyles ( );
__declspec(implementation_key(5618)) IDispatchPtr DraftDocument::GetFillStyles ( );
__declspec(implementation_key(5619)) IDispatchPtr DraftDocument::GetHatchPatternStyles ( );
__declspec(implementation_key(5620)) IDispatchPtr DraftDocument::GetDimensionStyles ( );
__declspec(implementation_key(5621)) IDispatchPtr DraftDocument::GetSymbolProperties ( );
__declspec(implementation_key(5622)) ModelLinksPtr DraftDocument::GetModelLinks ( );
__declspec(implementation_key(5623)) TGFrameworkSupport::FeatureControlFrameDataSetsPtr DraftDocument::GetFeatureControlFrameDataSets ( );
__declspec(implementation_key(5624)) TGFrameworkSupport::SurfaceFinishSymbolDataSetsPtr DraftDocument::GetSurfaceFinishSymbolDataSets ( );
__declspec(implementation_key(5625)) TGFrameworkSupport::WeldSymbolDataSetsPtr DraftDocument::GetWeldSymbolDataSets ( );
__declspec(implementation_key(5626)) PartsListsPtr DraftDocument::GetPartsLists ( );
__declspec(implementation_key(5627)) IUnknownPtr DraftDocument::GetDrawingViewEvents ( );
__declspec(implementation_key(5628)) SheetPtr DraftDocument::GetActivePrintingSheet ( );
__declspec(implementation_key(5629)) HRESULT DraftDocument::GetGlobalParameter ( enum DraftGlobalConstants Parameter, VARIANT * value );
__declspec(implementation_key(5630)) HRESULT DraftDocument::SetGlobalParameter ( enum DraftGlobalConstants Parameter, const _variant_t & value );
__declspec(implementation_key(5631)) HoleTablesPtr DraftDocument::GetHoleTables ( );
__declspec(implementation_key(5632)) HRESULT DraftDocument::AnnotationTrackerStatistics ( long * ChangedAnnotationCount, long * DetachedAnnotationCount );
__declspec(implementation_key(5633)) VARIANT_BOOL DraftDocument::GetMaintainRelationships ( );
__declspec(implementation_key(5634)) void DraftDocument::PutMaintainRelationships ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5635)) HRESULT DraftDocument::UpdatePropertyTextDisplay ( );
__declspec(implementation_key(5636)) HRESULT DraftDocument::UpdatePropertyTextCacheAndDisplay ( );
__declspec(implementation_key(5637)) IUnknownPtr DraftDocument::GetPartsListEvents ( );
__declspec(implementation_key(5638)) IDispatchPtr DraftDocument::GetDashStyles ( );
__declspec(implementation_key(5639)) HRESULT DraftDocument::PopulateQuicksheetTemplate ( _bstr_t FileName );
__declspec(implementation_key(5640)) long DraftDocument::GetQuicksheetTemplateCount ( );
__declspec(implementation_key(5641)) BlocksPtr DraftDocument::GetBlocks ( );
__declspec(implementation_key(5642)) TablesPtr DraftDocument::GetTables ( );
__declspec(implementation_key(5643)) VARIANT_BOOL DraftDocument::GetInactiveDrawingViewMode ( );
__declspec(implementation_key(5644)) void DraftDocument::PutInactiveDrawingViewMode ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5645)) HRESULT DraftDocument::DimensionTrackerStatisticsEx ( long * ChangedAnnotationCount, long * ChangedDimensionCount, long * DetachedAnnotationCount, long * DetachedDimensionCount, long * AnnotationsReattachedToAvailableGeometry, long * DimensionsReattachedToAvailableGeometry );
__declspec(implementation_key(5646)) HRESULT DraftDocument::DimensionTrackerNumEntries ( long * NumberOfEntries );
__declspec(implementation_key(5647)) HRESULT DraftDocument::DimensionTrackerEntry ( long Entry, long * BalloonID, IDispatch * * pObject, enum DimensionTrackerReasonCode * ReasonCode, double * PreviousValue, double * CurrentValue, BSTR * SheetName );
__declspec(implementation_key(5648)) HRESULT DraftDocument::GoalSeek ( _bstr_t NameTargetVariable, _bstr_t NameVariableToChange, double dTargetValue, double dTimeLimitInSecs, long NumIterationsLimit, double * dTimeElapsed, long * NumIterations, VARIANT_BOOL * TimeLimitExceeded, VARIANT_BOOL * IterationsLimitExceeded );
__declspec(implementation_key(5649)) HRESULT DraftDocument::PrintOutEx ( const _variant_t & Printer, const _variant_t & NumCopies, const _variant_t & Orientation, const _variant_t & PaperSize, const _variant_t & Scale, const _variant_t & PrintToFile, const _variant_t & OutputFileName, const _variant_t & PrintRange, const _variant_t & Sheets, const _variant_t & ColorAsBlack, const _variant_t & Collate, const _variant_t & ScaleLineWidths, const _variant_t & ScaleLineTypes, const _variant_t & UsePrinterClipping );
__declspec(implementation_key(5650)) DraftBendTablesPtr DraftDocument::GetDraftBendTables ( );
__declspec(implementation_key(5651)) IUnknownPtr DraftDocument::GetDraftBendTableEvents ( );
__declspec(implementation_key(5652)) DraftFilePreferencesPtr DraftDocument::GetFilePreferences ( );
__declspec(implementation_key(5653)) TGFrameworkSupport::DrawingViewStylesPtr DraftDocument::GetDrawingViewStyles ( );
__declspec(implementation_key(5654)) VARIANT_BOOL DraftDocument::GetDisplayRelationshipHandles ( );
__declspec(implementation_key(5655)) void DraftDocument::PutDisplayRelationshipHandles ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5656)) VARIANT_BOOL DraftDocument::GetDisplayAlignmentIndicator ( );
__declspec(implementation_key(5657)) void DraftDocument::PutDisplayAlignmentIndicator ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5658)) IDispatchPtr DraftDocument::GetObjectFromKey ( _bstr_t Key );
__declspec(implementation_key(5659)) HRESULT DraftDocument::ClearAllDimensionTrackerEntries ( );
__declspec(implementation_key(5660)) ConnectorTablesPtr DraftDocument::GetConnectorTables ( );
__declspec(implementation_key(5661)) IUnknownPtr DraftDocument::GetConnectorTableEvents ( );
__declspec(implementation_key(5662)) IDispatchPtr DraftDocument::GetSheetGroups ( );
__declspec(implementation_key(5663)) HRESULT DraftDocument::SetFilenameForDVWizard ( _bstr_t FileName );
__declspec(implementation_key(5664)) HRESULT DraftDocument::SetSymbolFileOrigin ( double XOrigin, double YOrigin );
__declspec(implementation_key(5665)) HRESULT DraftDocument::GetSymbolFileOrigin ( double * pxOrigin, double * pyOrigin );
__declspec(implementation_key(5666)) BlockTablesPtr DraftDocument::GetBlockTables ( );
__declspec(implementation_key(5667)) IUnknownPtr DraftDocument::GetBlockTableEvents ( );
__declspec(implementation_key(5668)) TGFrameworkSupport::TableStylesPtr DraftDocument::GetTableStyles ( );
__declspec(implementation_key(5669)) FOPTablesPtr DraftDocument::GetFOPTables ( );
__declspec(implementation_key(5670)) ConductorTablesPtr DraftDocument::GetConductorTables ( );
__declspec(implementation_key(5671)) ToleranceTablesPtr DraftDocument::GetToleranceTables ( );
__declspec(implementation_key(5672)) HoleTables2Ptr DraftDocument::GetHoleTables2 ( );
__declspec(implementation_key(5673)) VARIANT_BOOL DraftDocument::GetLocateBackgroundSheetGeometry ( );
__declspec(implementation_key(5674)) void DraftDocument::PutLocateBackgroundSheetGeometry ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5675)) HRESULT DraftDocument::UpdateRetrievedDimensionsAndAnnotations ( );
__declspec(implementation_key(5676)) void DraftDocument::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(5677)) HRESULT DraftDocument::UpdateAll ( VARIANT_BOOL bForceUpdate );
__declspec(implementation_key(5678)) VARIANT_BOOL DraftDocument::GetMaintainAlignmentSet ( );
__declspec(implementation_key(5679)) void DraftDocument::PutMaintainAlignmentSet ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5680)) WeldTablesPtr DraftDocument::GetWeldTables ( );
__declspec(implementation_key(5681)) TGFramework::ApplicationPtr _IDraftPrintUtilityAuto::GetApplication ( );
__declspec(implementation_key(5682)) TGFramework::ApplicationPtr _IDraftPrintUtilityAuto::GetParent ( );
__declspec(implementation_key(5683)) _bstr_t _IDraftPrintUtilityAuto::GetPrinter ( );
__declspec(implementation_key(5684)) void _IDraftPrintUtilityAuto::PutPrinter ( _bstr_t pPrinter );
__declspec(implementation_key(5685)) HRESULT _IDraftPrintUtilityAuto::AddFile ( _bstr_t FileName );
__declspec(implementation_key(5686)) HRESULT _IDraftPrintUtilityAuto::AddDocument ( struct DraftDocument * pDocument );
__declspec(implementation_key(5687)) HRESULT _IDraftPrintUtilityAuto::AddSheet ( struct Sheet * pSheet );
__declspec(implementation_key(5688)) HRESULT _IDraftPrintUtilityAuto::RemoveAllDocuments ( );
__declspec(implementation_key(5689)) enum DraftPrintSheetsPerPageConstants _IDraftPrintUtilityAuto::GetSheetsPerPage ( );
__declspec(implementation_key(5690)) void _IDraftPrintUtilityAuto::PutSheetsPerPage ( enum DraftPrintSheetsPerPageConstants pSheetsPerPage );
__declspec(implementation_key(5691)) enum DraftPrintUnitsConstants _IDraftPrintUtilityAuto::GetUnits ( );
__declspec(implementation_key(5692)) void _IDraftPrintUtilityAuto::PutUnits ( enum DraftPrintUnitsConstants pUnits );
__declspec(implementation_key(5693)) VARIANT_BOOL _IDraftPrintUtilityAuto::GetPrintAsBlack ( );
__declspec(implementation_key(5694)) void _IDraftPrintUtilityAuto::PutPrintAsBlack ( VARIANT_BOOL pPrintAsBlack );
__declspec(implementation_key(5695)) VARIANT_BOOL _IDraftPrintUtilityAuto::GetScaleLineWidths ( );
__declspec(implementation_key(5696)) void _IDraftPrintUtilityAuto::PutScaleLineWidths ( VARIANT_BOOL pScaleLineWidths );
__declspec(implementation_key(5697)) VARIANT_BOOL _IDraftPrintUtilityAuto::GetScaleLineTypes ( );
__declspec(implementation_key(5698)) void _IDraftPrintUtilityAuto::PutScaleLineTypes ( VARIANT_BOOL pScaleLineTypes );
__declspec(implementation_key(5699)) VARIANT_BOOL _IDraftPrintUtilityAuto::GetUsePrinterClipping ( );
__declspec(implementation_key(5700)) void _IDraftPrintUtilityAuto::PutUsePrinterClipping ( VARIANT_BOOL pUsePrinterClipping );
__declspec(implementation_key(5701)) enum DraftPrintScaleTooLargeActionConstants _IDraftPrintUtilityAuto::GetScaleTooLarge ( );
__declspec(implementation_key(5702)) void _IDraftPrintUtilityAuto::PutScaleTooLarge ( enum DraftPrintScaleTooLargeActionConstants pAction );
__declspec(implementation_key(5703)) VARIANT_BOOL _IDraftPrintUtilityAuto::GetPrintToFile ( );
__declspec(implementation_key(5704)) void _IDraftPrintUtilityAuto::PutPrintToFile ( VARIANT_BOOL pPrintToFile );
__declspec(implementation_key(5705)) _bstr_t _IDraftPrintUtilityAuto::GetPrintToFilePath ( );
__declspec(implementation_key(5706)) void _IDraftPrintUtilityAuto::PutPrintToFilePath ( _bstr_t pPrintToFilePath );
__declspec(implementation_key(5707)) _bstr_t _IDraftPrintUtilityAuto::GetPrintToFileName ( );
__declspec(implementation_key(5708)) void _IDraftPrintUtilityAuto::PutPrintToFileName ( _bstr_t pPrintToFileName );
__declspec(implementation_key(5709)) double _IDraftPrintUtilityAuto::GetSingleSheetScale ( );
__declspec(implementation_key(5710)) void _IDraftPrintUtilityAuto::PutSingleSheetScale ( double pSingleSheetScale );
__declspec(implementation_key(5711)) VARIANT_BOOL _IDraftPrintUtilityAuto::GetCenter ( );
__declspec(implementation_key(5712)) void _IDraftPrintUtilityAuto::PutCenter ( VARIANT_BOOL pCenter );
__declspec(implementation_key(5713)) VARIANT_BOOL _IDraftPrintUtilityAuto::GetAutoOrient ( );
__declspec(implementation_key(5714)) void _IDraftPrintUtilityAuto::PutAutoOrient ( VARIANT_BOOL pAutoOrient );
__declspec(implementation_key(5715)) VARIANT_BOOL _IDraftPrintUtilityAuto::GetBestFit ( );
__declspec(implementation_key(5716)) void _IDraftPrintUtilityAuto::PutBestFit ( VARIANT_BOOL pBestFit );
__declspec(implementation_key(5717)) double _IDraftPrintUtilityAuto::GetMultipleSheetScale ( );
__declspec(implementation_key(5718)) void _IDraftPrintUtilityAuto::PutMultipleSheetScale ( double pMultipleSheetScale );
__declspec(implementation_key(5719)) double _IDraftPrintUtilityAuto::GetGap ( );
__declspec(implementation_key(5720)) void _IDraftPrintUtilityAuto::PutGap ( double pGap );
__declspec(implementation_key(5721)) VARIANT_BOOL _IDraftPrintUtilityAuto::GetDisplaySheetBoundary ( );
__declspec(implementation_key(5722)) void _IDraftPrintUtilityAuto::PutDisplaySheetBoundary ( VARIANT_BOOL pDisplaySheetBoundary );
__declspec(implementation_key(5723)) VARIANT_BOOL _IDraftPrintUtilityAuto::GetDisplayCutLine ( );
__declspec(implementation_key(5724)) void _IDraftPrintUtilityAuto::PutDisplayCutLine ( VARIANT_BOOL pDisplayCutLine );
__declspec(implementation_key(5725)) VARIANT_BOOL _IDraftPrintUtilityAuto::GetUsePrinterMargins ( );
__declspec(implementation_key(5726)) void _IDraftPrintUtilityAuto::PutUsePrinterMargins ( VARIANT_BOOL pUsePrinterMargins );
__declspec(implementation_key(5727)) HRESULT _IDraftPrintUtilityAuto::GetMargins ( double * pdLeft, double * pdTop, double * pdRight, double * pdBottom );
__declspec(implementation_key(5728)) HRESULT _IDraftPrintUtilityAuto::SetMargins ( double dLeft, double dTop, double dRight, double dBottom );
__declspec(implementation_key(5729)) HRESULT _IDraftPrintUtilityAuto::PrintOut ( );
__declspec(implementation_key(5730)) enum DraftPrintOrientationConstants _IDraftPrintUtilityAuto::GetOrientation ( );
__declspec(implementation_key(5731)) void _IDraftPrintUtilityAuto::PutOrientation ( enum DraftPrintOrientationConstants pOrientation );
__declspec(implementation_key(5732)) double _IDraftPrintUtilityAuto::GetPaperWidth ( );
__declspec(implementation_key(5733)) void _IDraftPrintUtilityAuto::PutPaperWidth ( double pPaperWidth );
__declspec(implementation_key(5734)) double _IDraftPrintUtilityAuto::GetPaperHeight ( );
__declspec(implementation_key(5735)) void _IDraftPrintUtilityAuto::PutPaperHeight ( double pPaperHeight );
__declspec(implementation_key(5736)) enum DraftPrintPaperSizeConstants _IDraftPrintUtilityAuto::GetPaperSize ( );
__declspec(implementation_key(5737)) void _IDraftPrintUtilityAuto::PutPaperSize ( enum DraftPrintPaperSizeConstants pPaperSize );
__declspec(implementation_key(5738)) short _IDraftPrintUtilityAuto::GetCopies ( );
__declspec(implementation_key(5739)) void _IDraftPrintUtilityAuto::PutCopies ( short pCopies );
__declspec(implementation_key(5740)) HRESULT _IDraftPrintUtilityAuto::SavePreferences ( );
__declspec(implementation_key(5741)) HRESULT _IDraftPrintUtilityAuto::GetOrigin ( double * pdXOrigin, double * pdYOrigin );
__declspec(implementation_key(5742)) HRESULT _IDraftPrintUtilityAuto::SetOrigin ( double dXOrigin, double dYOrigin );
__declspec(implementation_key(5743)) VARIANT_BOOL _IDraftPrintUtilityAuto::GetIncludeWatermark ( );
__declspec(implementation_key(5744)) void _IDraftPrintUtilityAuto::PutIncludeWatermark ( VARIANT_BOOL pIncludeWatermark );
__declspec(implementation_key(5745)) void ViewPlane::PutDisplayCaption ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5746)) VARIANT_BOOL ViewPlane::GetDisplayCaption ( );
__declspec(implementation_key(5747)) DrawingViewPtr ViewPlane::GetSourceDrawingView ( );
__declspec(implementation_key(5748)) _bstr_t ViewPlane::GetCaption ( );
__declspec(implementation_key(5749)) void ViewPlane::PutCaption ( _bstr_t _arg1 );
__declspec(implementation_key(5750)) enum TGFrameworkSupport::DimViewPlaneDisplayTypeConstants ViewPlane::GetDisplayType ( );
__declspec(implementation_key(5751)) void ViewPlane::PutDisplayType ( enum TGFrameworkSupport::DimViewPlaneDisplayTypeConstants _arg1 );
__declspec(implementation_key(5752)) _bstr_t ViewPlane::GetTextFont ( );
__declspec(implementation_key(5753)) void ViewPlane::PutTextFont ( _bstr_t _arg1 );
__declspec(implementation_key(5754)) enum TGFrameworkSupport::DimTextFontStyleConstants ViewPlane::GetTextFontStyle ( );
__declspec(implementation_key(5755)) void ViewPlane::PutTextFontStyle ( enum TGFrameworkSupport::DimTextFontStyleConstants _arg1 );
__declspec(implementation_key(5756)) double ViewPlane::GetTextHeight ( );
__declspec(implementation_key(5757)) void ViewPlane::PutTextHeight ( double _arg1 );
__declspec(implementation_key(5758)) double ViewPlane::GetTextRatio ( );
__declspec(implementation_key(5759)) void ViewPlane::PutTextRatio ( double _arg1 );
__declspec(implementation_key(5760)) long ViewPlane::GetTextColor ( );
__declspec(implementation_key(5761)) void ViewPlane::PutTextColor ( long _arg1 );
__declspec(implementation_key(5762)) _bstr_t ViewPlane::GetStyleName ( );
__declspec(implementation_key(5763)) void ViewPlane::PutStyleName ( _bstr_t _arg1 );
__declspec(implementation_key(5764)) enum TGFrameworkSupport::DimTermTypeConstants ViewPlane::GetTerminatorType ( );
__declspec(implementation_key(5765)) void ViewPlane::PutTerminatorType ( enum TGFrameworkSupport::DimTermTypeConstants _arg1 );
__declspec(implementation_key(5766)) double ViewPlane::GetTerminatorRatio ( );
__declspec(implementation_key(5767)) void ViewPlane::PutTerminatorRatio ( double _arg1 );
__declspec(implementation_key(5768)) double ViewPlane::GetLineWidth ( );
__declspec(implementation_key(5769)) void ViewPlane::PutLineWidth ( double _arg1 );
__declspec(implementation_key(5770)) _bstr_t ViewPlane::GetLineType ( );
__declspec(implementation_key(5771)) void ViewPlane::PutLineType ( _bstr_t _arg1 );
__declspec(implementation_key(5772)) TGFramework::ApplicationPtr ViewPlane::GetApplication ( );
__declspec(implementation_key(5773)) long ViewPlane::GetIndex ( );
__declspec(implementation_key(5774)) _bstr_t ViewPlane::GetName ( const _variant_t & Recurse );
__declspec(implementation_key(5775)) IDispatchPtr ViewPlane::GetParent ( );
__declspec(implementation_key(5776)) long ViewPlane::GetType ( );
__declspec(implementation_key(5777)) VARIANT_BOOL ViewPlane::GetVisible ( );
__declspec(implementation_key(5778)) void ViewPlane::PutVisible ( VARIANT_BOOL * _arg1 );
__declspec(implementation_key(5779)) long ViewPlane::GetZOrder ( );
__declspec(implementation_key(5780)) _bstr_t ViewPlane::GetKey ( const _variant_t & Recurse );
__declspec(implementation_key(5781)) IDispatchPtr ViewPlane::GetDocument ( );
__declspec(implementation_key(5782)) HRESULT ViewPlane::Copy ( );
__declspec(implementation_key(5783)) HRESULT ViewPlane::Cut ( );
__declspec(implementation_key(5784)) HRESULT ViewPlane::Delete ( );
__declspec(implementation_key(5785)) HRESULT ViewPlane::BringToFront ( );
__declspec(implementation_key(5786)) HRESULT ViewPlane::BringForward ( );
__declspec(implementation_key(5787)) HRESULT ViewPlane::SendToBack ( );
__declspec(implementation_key(5788)) HRESULT ViewPlane::SendBackward ( );
__declspec(implementation_key(5789)) HRESULT ViewPlane::Select ( );
__declspec(implementation_key(5790)) HRESULT ViewPlane::Range ( double * min_x, double * min_y, double * max_x, double * max_y );
__declspec(implementation_key(5791)) _bstr_t ViewPlane::GetCaptionDefinitionText ( );
__declspec(implementation_key(5792)) void ViewPlane::PutCaptionDefinitionText ( _bstr_t _arg1 );
__declspec(implementation_key(5793)) _bstr_t ViewPlane::GetCaptionDisplayedText ( );
__declspec(implementation_key(5794)) HRESULT ViewPlane::GetFoldLineWithViewDirection ( double * LineStartX, double * LineStartY, double * LineEndX, double * LineEndY, double * ViewDirectionX, double * ViewDirectionY );
__declspec(implementation_key(5795)) HRESULT ViewPlane::GetViewLineWithArrowDirection ( double * LineStartX, double * LineStartY, double * LineEndX, double * LineEndY, double * ArrowDirectionX, double * ArrowDirectionY );
__declspec(implementation_key(5796)) _bstr_t ViewPlane::GetViewSheetNumberDefinitionText ( );
__declspec(implementation_key(5797)) void ViewPlane::PutViewSheetNumberDefinitionText ( _bstr_t _arg1 );
__declspec(implementation_key(5798)) VARIANT_BOOL ViewPlane::GetDisplayViewSheetNumber ( );
__declspec(implementation_key(5799)) void ViewPlane::PutDisplayViewSheetNumber ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5800)) enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants ViewPlane::GetViewSheetNumberLocation ( );
__declspec(implementation_key(5801)) void ViewPlane::PutViewSheetNumberLocation ( enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants _arg1 );
__declspec(implementation_key(5802)) HRESULT ViewPlane::GetCaptionPosition ( VARIANT_BOOL CaptionAtStartOfLine, double * x, double * y );
__declspec(implementation_key(5803)) HRESULT ViewPlane::SetCaptionPosition ( VARIANT_BOOL CaptionAtStartOfLine, double x, double y );
__declspec(implementation_key(5804)) void ViewPlane::PutAuto ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5805)) VARIANT_BOOL ViewPlane::GetAuto ( );
__declspec(implementation_key(5806)) IDispatchPtr ViewPlane::GetAttributeSets ( );
__declspec(implementation_key(5807)) VARIANT_BOOL ViewPlane::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(5808)) HRESULT ViewPlane::SetAuxiliaryViewArrowPosition ( double startPosX, double startPosY, double endPosX, double endPosY );
__declspec(implementation_key(5809)) void SheetWindow::PutActiveSheet ( struct Sheet * _arg1 );
__declspec(implementation_key(5810)) SheetPtr SheetWindow::GetActiveSheet ( );
__declspec(implementation_key(5811)) SectionPtr SheetWindow::GetActiveSection ( );
__declspec(implementation_key(5812)) void SheetWindow::PutActiveSection ( struct Section * _arg1 );
__declspec(implementation_key(5813)) enum SheetSectionTypeConstants SheetWindow::GetActiveSectionType ( );
__declspec(implementation_key(5814)) void SheetWindow::PutActiveSectionType ( enum SheetSectionTypeConstants _arg1 );
__declspec(implementation_key(5815)) void SheetWindow::PutDisplaySheetTabs ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5816)) VARIANT_BOOL SheetWindow::GetDisplaySheetTabs ( );
__declspec(implementation_key(5817)) void SheetWindow::PutDisplaySectionTabs ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5818)) VARIANT_BOOL SheetWindow::GetDisplaySectionTabs ( );
__declspec(implementation_key(5819)) void SheetWindow::PutTransparentDisplay ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5820)) VARIANT_BOOL SheetWindow::GetTransparentDisplay ( );
__declspec(implementation_key(5821)) void SheetWindow::PutSheetTabRatio ( double _arg1 );
__declspec(implementation_key(5822)) double SheetWindow::GetSheetTabRatio ( );
__declspec(implementation_key(5823)) double SheetWindow::GetSectionTabRatio ( );
__declspec(implementation_key(5824)) void SheetWindow::PutSectionTabRatio ( double _arg1 );
__declspec(implementation_key(5825)) SelectedSheetsPtr SheetWindow::GetSelectedSheets ( );
__declspec(implementation_key(5826)) void SheetWindow::PutZoom ( double _arg1 );
__declspec(implementation_key(5827)) double SheetWindow::GetZoom ( );
__declspec(implementation_key(5828)) int SheetWindow::GetUsableHeight ( );
__declspec(implementation_key(5829)) int SheetWindow::GetUsableWidth ( );
__declspec(implementation_key(5830)) VARIANT_BOOL SheetWindow::GetDisplayHScroll ( );
__declspec(implementation_key(5831)) void SheetWindow::PutDisplayHScroll ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5832)) VARIANT_BOOL SheetWindow::GetDisplayVScroll ( );
__declspec(implementation_key(5833)) void SheetWindow::PutDisplayVScroll ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5834)) TGFrameworkSupport::BackDropPtr SheetWindow::GetBackdrop ( );
__declspec(implementation_key(5835)) void SheetWindow::PutDisplayAsPrinted ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5836)) VARIANT_BOOL SheetWindow::GetDisplayAsPrinted ( );
__declspec(implementation_key(5837)) HRESULT SheetWindow::Copy ( );
__declspec(implementation_key(5838)) HRESULT SheetWindow::Cut ( );
__declspec(implementation_key(5839)) HRESULT SheetWindow::DeselectSheet ( const _variant_t & Sheet );
__declspec(implementation_key(5840)) HRESULT SheetWindow::Paste ( );
__declspec(implementation_key(5841)) HRESULT SheetWindow::WindowToModel ( int WindowX, int WindowY, double * ModelX, double * ModelY );
__declspec(implementation_key(5842)) HRESULT SheetWindow::ModelToWindow ( double ModelX, double ModelY, int * WindowX, int * WindowY );
__declspec(implementation_key(5843)) HRESULT SheetWindow::GetOrigin ( double * x, double * y );
__declspec(implementation_key(5844)) HRESULT SheetWindow::SetOrigin ( double x, double y );
__declspec(implementation_key(5845)) HRESULT SheetWindow::Pan ( int x, int y );
__declspec(implementation_key(5846)) HRESULT SheetWindow::SelectSheet ( const _variant_t & Sheet, const _variant_t & Replace );
__declspec(implementation_key(5847)) HRESULT SheetWindow::ZoomArea ( int x1, int y1, int x2, int y2 );
__declspec(implementation_key(5848)) HRESULT SheetWindow::Fit ( );
__declspec(implementation_key(5849)) _variant_t SheetWindow::Key ( const _variant_t & Recurse );
__declspec(implementation_key(5850)) HRESULT SheetWindow::Activate ( );
__declspec(implementation_key(5851)) HRESULT SheetWindow::ActivateNext ( );
__declspec(implementation_key(5852)) HRESULT SheetWindow::ActivatePrevious ( );
__declspec(implementation_key(5853)) TGFramework::ApplicationPtr SheetWindow::GetApplication ( );
__declspec(implementation_key(5854)) _bstr_t SheetWindow::GetCaption ( );
__declspec(implementation_key(5855)) void SheetWindow::PutCaption ( _bstr_t _arg1 );
__declspec(implementation_key(5856)) HRESULT SheetWindow::Close ( const _variant_t & SaveChanges, const _variant_t & FileName, const _variant_t & RouteWorkbook );
__declspec(implementation_key(5857)) _bstr_t SheetWindow::GetEnvironment ( );
__declspec(implementation_key(5858)) void SheetWindow::PutEnvironment ( _bstr_t _arg1 );
__declspec(implementation_key(5859)) int SheetWindow::GetHeight ( );
__declspec(implementation_key(5860)) void SheetWindow::PutHeight ( int _arg1 );
__declspec(implementation_key(5861)) long SheetWindow::GethWnd ( );
__declspec(implementation_key(5862)) int SheetWindow::GetIndex ( );
__declspec(implementation_key(5863)) int SheetWindow::GetLeft ( );
__declspec(implementation_key(5864)) void SheetWindow::PutLeft ( int _arg1 );
__declspec(implementation_key(5865)) IDispatchPtr SheetWindow::GetParent ( );
__declspec(implementation_key(5866)) HRESULT SheetWindow::PrintOut ( );
__declspec(implementation_key(5867)) TGFramework::SelectSetPtr SheetWindow::GetSelectSet ( );
__declspec(implementation_key(5868)) int SheetWindow::GetTop ( );
__declspec(implementation_key(5869)) void SheetWindow::PutTop ( int _arg1 );
__declspec(implementation_key(5870)) _bstr_t SheetWindow::GetType ( );
__declspec(implementation_key(5871)) VARIANT_BOOL SheetWindow::GetVisible ( );
__declspec(implementation_key(5872)) void SheetWindow::PutVisible ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5873)) int SheetWindow::GetWidth ( );
__declspec(implementation_key(5874)) void SheetWindow::PutWidth ( int _arg1 );
__declspec(implementation_key(5875)) int SheetWindow::GetWindowNumber ( );
__declspec(implementation_key(5876)) int SheetWindow::GetWindowState ( );
__declspec(implementation_key(5877)) void SheetWindow::PutWindowState ( int _arg1 );
__declspec(implementation_key(5878)) long SheetWindow::GetIcon ( );
__declspec(implementation_key(5879)) HRESULT SheetWindow::SaveAsImage ( _bstr_t FileName, const _variant_t & Width, const _variant_t & Height, const _variant_t & Resolution, const _variant_t & ColorDepth, enum TGFramework::SeImageQualityType ImageQuality, VARIANT_BOOL Invert );
__declspec(implementation_key(5880)) HRESULT SheetWindow::Update ( );
__declspec(implementation_key(5881)) HRESULT SheetWindow::FitEx ( enum SheetFitConstants FitOption );
__declspec(implementation_key(5882)) void SheetWindow::PutDisplayBackgroundSheetTabs ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5883)) VARIANT_BOOL SheetWindow::GetDisplayBackgroundSheetTabs ( );
__declspec(implementation_key(5884)) void SheetWindow::PutDisplayWorkingSheetTabs ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5885)) VARIANT_BOOL SheetWindow::GetDisplayWorkingSheetTabs ( );
__declspec(implementation_key(5886)) void SheetWindow::PutDisplay2DModelSheetTab ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5887)) VARIANT_BOOL SheetWindow::GetDisplay2DModelSheetTab ( );
__declspec(implementation_key(5888)) HRESULT SheetWindow::ZoomAreaEx ( double x1, double y1, double x2, double y2 );
__declspec(implementation_key(5889)) HRESULT SheetWindow::BeginSheetViewDynamics ( );
__declspec(implementation_key(5890)) HRESULT SheetWindow::EndSheetViewDynamics ( );
__declspec(implementation_key(5891)) IDispatchPtr SheetWindow::GetAttributeSets ( );
__declspec(implementation_key(5892)) VARIANT_BOOL SheetWindow::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(5893)) TGFramework::ApplicationPtr DraftPrintUtility::GetApplication ( );
__declspec(implementation_key(5894)) TGFramework::ApplicationPtr DraftPrintUtility::GetParent ( );
__declspec(implementation_key(5895)) _bstr_t DraftPrintUtility::GetPrinter ( );
__declspec(implementation_key(5896)) void DraftPrintUtility::PutPrinter ( _bstr_t _arg1 );
__declspec(implementation_key(5897)) HRESULT DraftPrintUtility::AddFile ( _bstr_t FileName );
__declspec(implementation_key(5898)) HRESULT DraftPrintUtility::AddDocument ( struct DraftDocument * pDocument );
__declspec(implementation_key(5899)) HRESULT DraftPrintUtility::AddSheet ( struct Sheet * pSheet );
__declspec(implementation_key(5900)) HRESULT DraftPrintUtility::RemoveAllDocuments ( );
__declspec(implementation_key(5901)) enum DraftPrintSheetsPerPageConstants DraftPrintUtility::GetSheetsPerPage ( );
__declspec(implementation_key(5902)) void DraftPrintUtility::PutSheetsPerPage ( enum DraftPrintSheetsPerPageConstants _arg1 );
__declspec(implementation_key(5903)) enum DraftPrintUnitsConstants DraftPrintUtility::GetUnits ( );
__declspec(implementation_key(5904)) void DraftPrintUtility::PutUnits ( enum DraftPrintUnitsConstants _arg1 );
__declspec(implementation_key(5905)) VARIANT_BOOL DraftPrintUtility::GetPrintAsBlack ( );
__declspec(implementation_key(5906)) void DraftPrintUtility::PutPrintAsBlack ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5907)) VARIANT_BOOL DraftPrintUtility::GetScaleLineWidths ( );
__declspec(implementation_key(5908)) void DraftPrintUtility::PutScaleLineWidths ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5909)) VARIANT_BOOL DraftPrintUtility::GetScaleLineTypes ( );
__declspec(implementation_key(5910)) void DraftPrintUtility::PutScaleLineTypes ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5911)) VARIANT_BOOL DraftPrintUtility::GetUsePrinterClipping ( );
__declspec(implementation_key(5912)) void DraftPrintUtility::PutUsePrinterClipping ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5913)) enum DraftPrintScaleTooLargeActionConstants DraftPrintUtility::GetScaleTooLarge ( );
__declspec(implementation_key(5914)) void DraftPrintUtility::PutScaleTooLarge ( enum DraftPrintScaleTooLargeActionConstants _arg1 );
__declspec(implementation_key(5915)) VARIANT_BOOL DraftPrintUtility::GetPrintToFile ( );
__declspec(implementation_key(5916)) void DraftPrintUtility::PutPrintToFile ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5917)) _bstr_t DraftPrintUtility::GetPrintToFilePath ( );
__declspec(implementation_key(5918)) void DraftPrintUtility::PutPrintToFilePath ( _bstr_t _arg1 );
__declspec(implementation_key(5919)) _bstr_t DraftPrintUtility::GetPrintToFileName ( );
__declspec(implementation_key(5920)) void DraftPrintUtility::PutPrintToFileName ( _bstr_t _arg1 );
__declspec(implementation_key(5921)) double DraftPrintUtility::GetSingleSheetScale ( );
__declspec(implementation_key(5922)) void DraftPrintUtility::PutSingleSheetScale ( double _arg1 );
__declspec(implementation_key(5923)) VARIANT_BOOL DraftPrintUtility::GetCenter ( );
__declspec(implementation_key(5924)) void DraftPrintUtility::PutCenter ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5925)) VARIANT_BOOL DraftPrintUtility::GetAutoOrient ( );
__declspec(implementation_key(5926)) void DraftPrintUtility::PutAutoOrient ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5927)) VARIANT_BOOL DraftPrintUtility::GetBestFit ( );
__declspec(implementation_key(5928)) void DraftPrintUtility::PutBestFit ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5929)) double DraftPrintUtility::GetMultipleSheetScale ( );
__declspec(implementation_key(5930)) void DraftPrintUtility::PutMultipleSheetScale ( double _arg1 );
__declspec(implementation_key(5931)) double DraftPrintUtility::GetGap ( );
__declspec(implementation_key(5932)) void DraftPrintUtility::PutGap ( double _arg1 );
__declspec(implementation_key(5933)) VARIANT_BOOL DraftPrintUtility::GetDisplaySheetBoundary ( );
__declspec(implementation_key(5934)) void DraftPrintUtility::PutDisplaySheetBoundary ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5935)) VARIANT_BOOL DraftPrintUtility::GetDisplayCutLine ( );
__declspec(implementation_key(5936)) void DraftPrintUtility::PutDisplayCutLine ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5937)) VARIANT_BOOL DraftPrintUtility::GetUsePrinterMargins ( );
__declspec(implementation_key(5938)) void DraftPrintUtility::PutUsePrinterMargins ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5939)) HRESULT DraftPrintUtility::GetMargins ( double * pdLeft, double * pdTop, double * pdRight, double * pdBottom );
__declspec(implementation_key(5940)) HRESULT DraftPrintUtility::SetMargins ( double dLeft, double dTop, double dRight, double dBottom );
__declspec(implementation_key(5941)) HRESULT DraftPrintUtility::PrintOut ( );
__declspec(implementation_key(5942)) enum DraftPrintOrientationConstants DraftPrintUtility::GetOrientation ( );
__declspec(implementation_key(5943)) void DraftPrintUtility::PutOrientation ( enum DraftPrintOrientationConstants _arg1 );
__declspec(implementation_key(5944)) double DraftPrintUtility::GetPaperWidth ( );
__declspec(implementation_key(5945)) void DraftPrintUtility::PutPaperWidth ( double _arg1 );
__declspec(implementation_key(5946)) double DraftPrintUtility::GetPaperHeight ( );
__declspec(implementation_key(5947)) void DraftPrintUtility::PutPaperHeight ( double _arg1 );
__declspec(implementation_key(5948)) enum DraftPrintPaperSizeConstants DraftPrintUtility::GetPaperSize ( );
__declspec(implementation_key(5949)) void DraftPrintUtility::PutPaperSize ( enum DraftPrintPaperSizeConstants _arg1 );
__declspec(implementation_key(5950)) short DraftPrintUtility::GetCopies ( );
__declspec(implementation_key(5951)) void DraftPrintUtility::PutCopies ( short _arg1 );
__declspec(implementation_key(5952)) HRESULT DraftPrintUtility::SavePreferences ( );
__declspec(implementation_key(5953)) HRESULT DraftPrintUtility::GetOrigin ( double * pdXOrigin, double * pdYOrigin );
__declspec(implementation_key(5954)) HRESULT DraftPrintUtility::SetOrigin ( double dXOrigin, double dYOrigin );
__declspec(implementation_key(5955)) VARIANT_BOOL DraftPrintUtility::GetIncludeWatermark ( );
__declspec(implementation_key(5956)) void DraftPrintUtility::PutIncludeWatermark ( VARIANT_BOOL _arg1 );
#pragma stop_map_region

} // namespace TGDraft

#pragma pack(pop)

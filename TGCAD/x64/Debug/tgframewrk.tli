// Created by Microsoft (R) C/C++ Compiler Version 14.32.31332.0 (8332c2d6).
//
// D:\visualstudio\project\TGCAD\TGCAD\x64\Debug\tgframewrk.tli
//
// Wrapper implementations for type library tgframewrk.tlb
// compiler-generated file - DO NOT EDIT!


//
// dispinterface SelectSet wrapper method implementations
//

#pragma implementation_key(1)
inline TGFramework::ApplicationPtr TGFramework::SelectSet::GetApplication ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(2)
inline IDispatchPtr TGFramework::SelectSet::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3)
inline long TGFramework::SelectSet::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4)
inline HRESULT TGFramework::SelectSet::Add ( IDispatch * Dispatch ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Dispatch);
}

#pragma implementation_key(5)
inline HRESULT TGFramework::SelectSet::Remove ( const _variant_t & Index ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c", &Index);
}

#pragma implementation_key(6)
inline HRESULT TGFramework::SelectSet::RemoveAll ( ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(7)
inline IDispatchPtr TGFramework::SelectSet::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8)
inline HRESULT TGFramework::SelectSet::Copy ( ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(9)
inline HRESULT TGFramework::SelectSet::Cut ( ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(10)
inline HRESULT TGFramework::SelectSet::Delete ( ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(11)
inline HRESULT TGFramework::SelectSet::AddAll ( ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(12)
inline enum TGFramework::ObjectType TGFramework::SelectSet::GetType ( ) {
    enum ObjectType _result;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(13)
inline HRESULT TGFramework::SelectSet::CopyProfile ( ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(14)
inline HRESULT TGFramework::SelectSet::CutProfile ( ) {
    return _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(15)
inline HRESULT TGFramework::SelectSet::SuspendDisplay ( ) {
    return _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(16)
inline HRESULT TGFramework::SelectSet::ResumeDisplay ( ) {
    return _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(17)
inline HRESULT TGFramework::SelectSet::RefreshDisplay ( ) {
    return _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// dispinterface Application wrapper method implementations
//

#pragma implementation_key(18)
inline HRESULT TGFramework::Application::Activate ( ) {
    return _com_dispatch_method(this, 0x3f, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(19)
inline IDispatchPtr TGFramework::Application::GetActiveDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(20)
inline _bstr_t TGFramework::Application::GetActiveEnvironment ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(21)
inline _bstr_t TGFramework::Application::GetActivePrinter ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(22)
inline TGFramework::SelectSetPtr TGFramework::Application::GetActiveSelectSet ( ) {
    struct SelectSet * _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SelectSetPtr(_result, false);
}

#pragma implementation_key(23)
inline int TGFramework::Application::GetActiveStatusBarPart ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(24)
inline void TGFramework::Application::PutActiveStatusBarPart ( int _arg1 ) {
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(25)
inline IDispatchPtr TGFramework::Application::GetActiveWindow ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(26)
inline TGFramework::ApplicationPtr TGFramework::Application::GetApplication ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(27)
inline _bstr_t TGFramework::Application::GetCaption ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(28)
inline void TGFramework::Application::PutCaption ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(29)
inline _bstr_t TGFramework::Application::GetDefaultFilePath ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(30)
inline void TGFramework::Application::PutDefaultFilePath ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(31)
inline void TGFramework::Application::PutDelayCompute ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x49, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(32)
inline VARIANT_BOOL TGFramework::Application::GetDelayCompute ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x49, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(33)
inline VARIANT_BOOL TGFramework::Application::GetDisplayAlerts ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(34)
inline void TGFramework::Application::PutDisplayAlerts ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(35)
inline VARIANT_BOOL TGFramework::Application::GetDisplayFullScreen ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(36)
inline void TGFramework::Application::PutDisplayFullScreen ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(37)
inline VARIANT_BOOL TGFramework::Application::GetDisplayRecentFiles ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(38)
inline void TGFramework::Application::PutDisplayRecentFiles ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(39)
inline long TGFramework::Application::GetDisplayRecentFilesCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x47, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(40)
inline void TGFramework::Application::PutDisplayRecentFilesCount ( long _arg1 ) {
    _com_dispatch_method(this, 0x47, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(41)
inline TGFramework::DocumentsPtr TGFramework::Application::GetDocuments ( ) {
    struct Documents * _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DocumentsPtr(_result, false);
}

#pragma implementation_key(42)
inline TGFramework::EnvironmentsPtr TGFramework::Application::GetEnvironments ( ) {
    struct Environments * _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return EnvironmentsPtr(_result, false);
}

#pragma implementation_key(43)
inline _variant_t TGFramework::Application::SEGetOpenFileName ( enum LinksUpdateOption * LinksUpdate, BSTR * AltLinkPath, enum DocumentAccess * DocAccess, enum NotifyOption * OptNotify, IDispatch * * DocRelationAutoServer, const _variant_t & FileFilter, const _variant_t & FilterIndex, const _variant_t & Title, const _variant_t & IgnoreWarnings ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x18, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x4003\x4008\x4003\x4003\x4009\x080c\x080c\x080c\x080c", LinksUpdate, AltLinkPath, DocAccess, OptNotify, DocRelationAutoServer, &FileFilter, &FilterIndex, &Title, &IgnoreWarnings);
    return _variant_t(_result, false);
}

#pragma implementation_key(44)
inline long TGFramework::Application::SearchDocuments ( VARIANT_BOOL bUseSearchScope, _bstr_t bstrFolders, VARIANT_BOOL bIncludeSubFolders, VARIANT * ListOfFoundDocuments, long * iNumDocsFound, const _variant_t & varFileFilterOrText, const _variant_t & PropertyList, const _variant_t & ConditionList, const _variant_t & PropertyValueList, const _variant_t & varNumProps, const _variant_t & varCheckModified, const _variant_t & varNumberOfDays, VARIANT * ListOfTitles, VARIANT * ListOfSubjects, VARIANT * ListOfModifiedDates ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0008\x000b\x400c\x4003\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x480c\x480c\x480c", bUseSearchScope, (BSTR)bstrFolders, bIncludeSubFolders, ListOfFoundDocuments, iNumDocsFound, &varFileFilterOrText, &PropertyList, &ConditionList, &PropertyValueList, &varNumProps, &varCheckModified, &varNumberOfDays, ListOfTitles, ListOfSubjects, ListOfModifiedDates);
    return _result;
}

#pragma implementation_key(45)
inline _variant_t TGFramework::Application::GetSaveAsFileName ( int * LinkSaveOption, long * SelectedFilter, const _variant_t & InitialFilename, const _variant_t & FileFilter, const _variant_t & FilterIndex, const _variant_t & Title, const _variant_t & IsTemplate ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x19, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x4003\x4003\x080c\x080c\x080c\x080c\x080c", LinkSaveOption, SelectedFilter, &InitialFilename, &FileFilter, &FilterIndex, &Title, &IsTemplate);
    return _variant_t(_result, false);
}

#pragma implementation_key(46)
inline _variant_t TGFramework::Application::FindFile ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x40, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(47)
inline _variant_t TGFramework::Application::GetDirectoryName ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x41, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(48)
inline int TGFramework::Application::GetHeight ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(49)
inline void TGFramework::Application::PutHeight ( int _arg1 ) {
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(50)
inline long TGFramework::Application::GethWnd ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(51)
inline VARIANT_BOOL TGFramework::Application::GetInteractive ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(52)
inline void TGFramework::Application::PutInteractive ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(53)
inline int TGFramework::Application::GetLeft ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x1e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(54)
inline void TGFramework::Application::PutLeft ( int _arg1 ) {
    _com_dispatch_method(this, 0x1e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(55)
inline HRESULT TGFramework::Application::MailLogoff ( ) {
    return _com_dispatch_method(this, 0x20, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(56)
inline HRESULT TGFramework::Application::MailLogon ( const _variant_t & Name, const _variant_t & Password, const _variant_t & DownloadNewMail ) {
    return _com_dispatch_method(this, 0x1f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c\x080c", &Name, &Password, &DownloadNewMail);
}

#pragma implementation_key(57)
inline long TGFramework::Application::GetMailSession ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x21, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(58)
inline _bstr_t TGFramework::Application::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x25, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(59)
inline TGFramework::ApplicationPtr TGFramework::Application::GetParent ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0x26, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(60)
inline HRESULT TGFramework::Application::Quit ( ) {
    return _com_dispatch_method(this, 0x28, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(61)
inline VARIANT_BOOL TGFramework::Application::GetScreenUpdating ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(62)
inline void TGFramework::Application::PutScreenUpdating ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x2c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(63)
inline _bstr_t TGFramework::Application::GetStatusBar ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x2e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(64)
inline void TGFramework::Application::PutStatusBar ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x2e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(65)
inline VARIANT_BOOL TGFramework::Application::GetStatusBarDelayUpdate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(66)
inline void TGFramework::Application::PutStatusBarDelayUpdate ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x2f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(67)
inline int TGFramework::Application::GetStatusBarHeight ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x42, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(68)
inline int TGFramework::Application::GetStatusBarPartCount ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x30, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(69)
inline void TGFramework::Application::PutStatusBarPartCount ( int _arg1 ) {
    _com_dispatch_method(this, 0x30, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(70)
inline int TGFramework::Application::GetStatusBarPartWidth ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x31, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(71)
inline void TGFramework::Application::PutStatusBarPartWidth ( int _arg1 ) {
    _com_dispatch_method(this, 0x31, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(72)
inline VARIANT_BOOL TGFramework::Application::GetStatusBarVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x32, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(73)
inline void TGFramework::Application::PutStatusBarVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x32, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(74)
inline int TGFramework::Application::GetTop ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x34, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(75)
inline void TGFramework::Application::PutTop ( int _arg1 ) {
    _com_dispatch_method(this, 0x34, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(76)
inline int TGFramework::Application::GetUsableHeight ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(77)
inline int TGFramework::Application::GetUsableWidth ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(78)
inline _bstr_t TGFramework::Application::GetUserName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x38, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(79)
inline void TGFramework::Application::PutUserName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x38, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(80)
inline _bstr_t TGFramework::Application::GetValue ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x39, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(81)
inline _bstr_t TGFramework::Application::GetVersion ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x3a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(82)
inline VARIANT_BOOL TGFramework::Application::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(83)
inline void TGFramework::Application::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(84)
inline int TGFramework::Application::GetWidth ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x3c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(85)
inline void TGFramework::Application::PutWidth ( int _arg1 ) {
    _com_dispatch_method(this, 0x3c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(86)
inline TGFramework::WindowsPtr TGFramework::Application::GetWindows ( ) {
    struct Windows * _result = 0;
    _com_dispatch_method(this, 0x3d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return WindowsPtr(_result, false);
}

#pragma implementation_key(87)
inline int TGFramework::Application::GetWindowState ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x3e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(88)
inline void TGFramework::Application::PutWindowState ( int _arg1 ) {
    _com_dispatch_method(this, 0x3e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(89)
inline IUnknownPtr TGFramework::Application::GetApplicationEvents ( ) {
    struct IUnknown * _result = 0;
    _com_dispatch_method(this, 0x4b, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(90)
inline IUnknownPtr TGFramework::Application::GetApplicationWindowEvents ( ) {
    struct IUnknown * _result = 0;
    _com_dispatch_method(this, 0x4a, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(91)
inline enum TGFramework::DocumentTypeConstants TGFramework::Application::GetActiveDocumentType ( ) {
    enum DocumentTypeConstants _result;
    _com_dispatch_method(this, 0x4c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(92)
inline IUnknownPtr TGFramework::Application::GetFileUIEvents ( ) {
    struct IUnknown * _result = 0;
    _com_dispatch_method(this, 0x4d, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(93)
inline IUnknownPtr TGFramework::Application::GetBeforeFileSaveAsEvents ( ) {
    struct IUnknown * _result = 0;
    _com_dispatch_method(this, 0x79, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(94)
inline HRESULT TGFramework::Application::StartCommand ( enum SolidEdgeCommandConstants CommandID ) {
    return _com_dispatch_method(this, 0x4f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", CommandID);
}

#pragma implementation_key(95)
inline VARIANT_BOOL TGFramework::Application::CommandEnabled ( int CommandID, _bstr_t strEnvironment, VARIANT_BOOL * bLicensed, VARIANT_BOOL * bUnknownCmd ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_BOOL, (void*)&_result, 
        L"\x0003\x0008\x400b\x400b", CommandID, (BSTR)strEnvironment, bLicensed, bUnknownCmd);
    return _result;
}

#pragma implementation_key(96)
inline TGFramework::DISECommandPtr TGFramework::Application::CreateCommand ( long CmdFlags ) {
    struct DISECommand * _result = 0;
    _com_dispatch_method(this, 0x4e, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003", CmdFlags);
    return DISECommandPtr(_result, false);
}

#pragma implementation_key(97)
inline HRESULT TGFramework::Application::ReplaceReference ( const _variant_t & FromReference, const _variant_t & ToReference, const _variant_t & Scope, const _variant_t & Recursive ) {
    return _com_dispatch_method(this, 0x43, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c\x080c\x080c", &FromReference, &ToReference, &Scope, &Recursive);
}

#pragma implementation_key(98)
inline HRESULT TGFramework::Application::RunMacro ( _bstr_t Filename ) {
    return _com_dispatch_method(this, 0x48, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Filename);
}

#pragma implementation_key(99)
inline TGFramework::AddInsPtr TGFramework::Application::GetAddIns ( ) {
    struct AddIns * _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AddInsPtr(_result, false);
}

#pragma implementation_key(100)
inline VARIANT_BOOL TGFramework::Application::GetEnableStereo ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x50, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(101)
inline void TGFramework::Application::PutEnableStereo ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x50, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(102)
inline VARIANT_BOOL TGFramework::Application::GetEdgeBarVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x51, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(103)
inline void TGFramework::Application::PutEdgeBarVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x51, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(104)
inline IUnknownPtr TGFramework::Application::GetFeatureLibraryEvents ( ) {
    struct IUnknown * _result = 0;
    _com_dispatch_method(this, 0x52, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(105)
inline HRESULT TGFramework::Application::GetGlobalParameter ( enum ApplicationGlobalConstants Parameter, VARIANT * Value ) {
    return _com_dispatch_method(this, 0x53, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x400c", Parameter, Value);
}

#pragma implementation_key(106)
inline HRESULT TGFramework::Application::SetGlobalParameter ( enum ApplicationGlobalConstants Parameter, const _variant_t & Value ) {
    return _com_dispatch_method(this, 0x54, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x000c", Parameter, &Value);
}

#pragma implementation_key(107)
inline IDispatchPtr TGFramework::Application::GetActiveObject ( enum SeObjectType Type ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x55, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0003", Type);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(108)
inline TGFramework::InsightPtr TGFramework::Application::GetInsight ( ) {
    struct Insight * _result = 0;
    _com_dispatch_method(this, 0x56, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return InsightPtr(_result, false);
}

#pragma implementation_key(109)
inline IUnknownPtr TGFramework::Application::GetApplicationV8AfterDocumentOpenEvent ( ) {
    struct IUnknown * _result = 0;
    _com_dispatch_method(this, 0x57, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(110)
inline HRESULT TGFramework::Application::SetOLERequestPendingTimeout ( const _variant_t & SetOLERequestPendingTimeout ) {
    return _com_dispatch_method(this, 0x58, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &SetOLERequestPendingTimeout);
}

#pragma implementation_key(111)
inline HRESULT TGFramework::Application::SetOLEServerBusyTimeout ( const _variant_t & SetOLEServerBusyTimeout ) {
    return _com_dispatch_method(this, 0x59, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &SetOLEServerBusyTimeout);
}

#pragma implementation_key(112)
inline IUnknownPtr TGFramework::Application::GetFeatureSelectedFromPFEvents ( ) {
    struct IUnknown * _result = 0;
    _com_dispatch_method(this, 0x86, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(113)
inline HRESULT TGFramework::Application::CreateSEDocumentFromTDMAuto ( _bstr_t bstrHostName, _bstr_t bstrServerName, _bstr_t bstrFolderLocation, _bstr_t bstrProject, _bstr_t bstrLibrary, _bstr_t bstrItemGUID, _bstr_t bstrVersionGUID, _bstr_t bstrVersionNumber, enum DocumentTypeConstants SEDocType, _bstr_t bstrAssemblyTemplate, _bstr_t bstrPartTemplate ) {
    return _com_dispatch_method(this, 0x5a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x0008\x0008\x0008\x0008\x0008\x0003\x0008\x0008", (BSTR)bstrHostName, (BSTR)bstrServerName, (BSTR)bstrFolderLocation, (BSTR)bstrProject, (BSTR)bstrLibrary, (BSTR)bstrItemGUID, (BSTR)bstrVersionGUID, (BSTR)bstrVersionNumber, SEDocType, (BSTR)bstrAssemblyTemplate, (BSTR)bstrPartTemplate);
}

#pragma implementation_key(114)
inline HRESULT TGFramework::Application::CreateSEDraftDocFromDXFAuto ( _bstr_t bstrDxfFileName, _bstr_t bstrDraftFileLocation, _bstr_t bstrDraftTemplateFile, _bstr_t bstrclsidDoc ) {
    return _com_dispatch_method(this, 0x5b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x0008", (BSTR)bstrDxfFileName, (BSTR)bstrDraftFileLocation, (BSTR)bstrDraftTemplateFile, (BSTR)bstrclsidDoc);
}

#pragma implementation_key(115)
inline HRESULT TGFramework::Application::CreateSEDocumentFromForeignFile ( _bstr_t bstrForeignFilePath, _bstr_t bstrSEFileLocation, _bstr_t bstrTemplatePath, _bstr_t bstrClsid, enum BulkMigrationTypeConstants MigrationType ) {
    return _com_dispatch_method(this, 0x5c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x0008\x0003", (BSTR)bstrForeignFilePath, (BSTR)bstrSEFileLocation, (BSTR)bstrTemplatePath, (BSTR)bstrClsid, MigrationType);
}

#pragma implementation_key(116)
inline _bstr_t TGFramework::Application::GetTemplateFileName ( enum DocumentTypeConstants * DocType, const _variant_t & FileFilter ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x5d, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x4003\x080c", DocType, &FileFilter);
    return _bstr_t(_result, false);
}

#pragma implementation_key(117)
inline _bstr_t TGFramework::Application::GetDefaultTemplatePath ( enum DocumentTypeConstants DocType ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6c, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0003", DocType);
    return _bstr_t(_result, false);
}

#pragma implementation_key(118)
inline HRESULT TGFramework::Application::SetDefaultTemplatePath ( enum DocumentTypeConstants DocType, _bstr_t TemplatePath ) {
    return _com_dispatch_method(this, 0x6d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0008", DocType, (BSTR)TemplatePath);
}

#pragma implementation_key(119)
inline HRESULT TGFramework::Application::DoIdle ( ) {
    return _com_dispatch_method(this, 0x5e, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(120)
inline TGFramework::MatTablePtr TGFramework::Application::GetMaterialTable ( ) {
    struct MatTable * _result = 0;
    _com_dispatch_method(this, 0x60, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return MatTablePtr(_result, false);
}

#pragma implementation_key(121)
inline IUnknownPtr TGFramework::Application::GetNewFileUIEvents ( ) {
    struct IUnknown * _result = 0;
    _com_dispatch_method(this, 0x61, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(122)
inline HRESULT TGFramework::Application::SEAdminUpdate ( ) {
    return _com_dispatch_method(this, 0x62, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(123)
inline IUnknownPtr TGFramework::Application::GetShortcutMenuEvents ( ) {
    struct IUnknown * _result = 0;
    _com_dispatch_method(this, 0x63, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(124)
inline VARIANT_BOOL TGFramework::Application::GetApprenticeMode ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(125)
inline void TGFramework::Application::PutApprenticeMode ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x64, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(126)
inline VARIANT_BOOL TGFramework::Application::GetShowStartupScreen ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(127)
inline void TGFramework::Application::PutShowStartupScreen ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(128)
inline TGFramework::SolidEdgeTCEPtr TGFramework::Application::GetSolidEdgeTCE ( ) {
    struct SolidEdgeTCE * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SolidEdgeTCEPtr(_result, false);
}

#pragma implementation_key(129)
inline TGFramework::SolidEdgeInsightXTPtr TGFramework::Application::GetSolidEdgeInsightXT ( ) {
    struct SolidEdgeInsightXT * _result = 0;
    _com_dispatch_method(this, 0x76, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SolidEdgeInsightXTPtr(_result, false);
}

#pragma implementation_key(130)
inline VARIANT_BOOL TGFramework::Application::GetIsIdling ( long MilliSec ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", MilliSec);
    return _result;
}

#pragma implementation_key(131)
inline VARIANT_BOOL TGFramework::Application::GetResolveLink ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(132)
inline void TGFramework::Application::PutResolveLink ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(133)
inline HRESULT TGFramework::Application::DisableEventsForGivenAddIn ( _bstr_t bstrClsid ) {
    return _com_dispatch_method(this, 0x69, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)bstrClsid);
}

#pragma implementation_key(134)
inline HRESULT TGFramework::Application::SetAddInInterfaces ( _bstr_t bstrClsid, SAFEARRAY * * pSaUnknownPtrs ) {
    return _com_dispatch_method(this, 0x6a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x600d", (BSTR)bstrClsid, pSaUnknownPtrs);
}

#pragma implementation_key(135)
inline HRESULT TGFramework::Application::EnableEventsForGivenAddIn ( _bstr_t bstrClsid ) {
    return _com_dispatch_method(this, 0x6b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)bstrClsid);
}

#pragma implementation_key(136)
inline HRESULT TGFramework::Application::ShowCommand ( int nCmdID, VARIANT_BOOL Highlight ) {
    return _com_dispatch_method(this, 0x6e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x000b", nCmdID, Highlight);
}

#pragma implementation_key(137)
inline int TGFramework::Application::GetProcessID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(138)
inline IUnknownPtr TGFramework::Application::GetSEECEvents ( ) {
    struct IUnknown * _result = 0;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(139)
inline IUnknownPtr TGFramework::Application::GetSESPEvents ( ) {
    struct IUnknown * _result = 0;
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(140)
inline IUnknownPtr TGFramework::Application::GetBiDMEvents ( ) {
    struct IUnknown * _result = 0;
    _com_dispatch_method(this, 0x91, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(141)
inline HRESULT TGFramework::Application::WriteDocumentFormulaIntoXML ( _bstr_t outputXMLPath, _bstr_t knownResXMLPath, VARIANT_BOOL bDeepTree ) {
    return _com_dispatch_method(this, 0x71, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x000b", (BSTR)outputXMLPath, (BSTR)knownResXMLPath, bDeepTree);
}

#pragma implementation_key(142)
inline HRESULT TGFramework::Application::SetBuiltInATPRunningFlagAndATPID ( VARIANT_BOOL bRunningFlag, _bstr_t strATPID ) {
    return _com_dispatch_method(this, 0x7f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b\x0008", bRunningFlag, (BSTR)strATPID);
}

#pragma implementation_key(143)
inline HRESULT TGFramework::Application::SetValuesForBIDMCPD ( VARIANT * pvarListOfValues ) {
    return _com_dispatch_method(this, 0x8e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c", pvarListOfValues);
}

#pragma implementation_key(144)
inline HRESULT TGFramework::Application::SetMessageForBIDMCPD ( VARIANT * pvarListOfMessages ) {
    return _com_dispatch_method(this, 0x8f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c", pvarListOfMessages);
}

#pragma implementation_key(145)
inline HRESULT TGFramework::Application::SetBIDMATPInfo ( _bstr_t bstrATPClassName, _bstr_t bstrATPName, long ATPId ) {
    return _com_dispatch_method(this, 0x90, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0003", (BSTR)bstrATPClassName, (BSTR)bstrATPName, ATPId);
}

#pragma implementation_key(146)
inline int TGFramework::Application::GetCountOfOpenModelsInFemap ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x72, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(147)
inline TGFramework::CustomizationPtr TGFramework::Application::GetCustomization ( ) {
    struct Customization * _result = 0;
    _com_dispatch_method(this, 0x73, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return CustomizationPtr(_result, false);
}

#pragma implementation_key(148)
inline IDispatchPtr TGFramework::Application::GetDraftPrintUtility ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x74, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(149)
inline HRESULT TGFramework::Application::ArrangeWindows ( enum ArrangeWindowsStyles Style ) {
    return _com_dispatch_method(this, 0x77, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Style);
}

#pragma implementation_key(150)
inline _variant_t TGFramework::Application::GetOpenFileNameWithOptions ( unsigned long dwFlagForOpen, enum LinksUpdateOption * LinksUpdate, BSTR * AltLinkPath, enum DocumentAccess * DocAccess, enum NotifyOption * OptNotify, IDispatch * * DocRelationAutoServer, const _variant_t & FileFilter, const _variant_t & FilterIndex, const _variant_t & Title, const _variant_t & IgnoreWarnings ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x7a, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x0003\x4003\x4008\x4003\x4003\x4009\x080c\x080c\x080c\x080c", dwFlagForOpen, LinksUpdate, AltLinkPath, DocAccess, OptNotify, DocRelationAutoServer, &FileFilter, &FilterIndex, &Title, &IgnoreWarnings);
    return _variant_t(_result, false);
}

#pragma implementation_key(151)
inline HRESULT TGFramework::Application::SEGetFileVersionInfo ( _bstr_t Filename, enum DocumentTypeConstants * DocType, BSTR * CreatedVersion, BSTR * LastSavedVersion, unsigned long * GeometricVersion ) {
    return _com_dispatch_method(this, 0x7b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x4003\x4008\x4008\x4003", (BSTR)Filename, DocType, CreatedVersion, LastSavedVersion, GeometricVersion);
}

#pragma implementation_key(152)
inline HRESULT TGFramework::Application::GenerateMasterImportListForDataPrep ( SAFEARRAY * * psalistOfFilesFolders, VARIANT_BOOL IncludeSubFolders, unsigned long FileTypes, _bstr_t TimeStamp, _bstr_t WorkingFolderLocation, BSTR * OrderedCSVFilePath, BSTR * UnOrderedCSVFilePath, BSTR * BrokenLinkXMLFilePath, int * iNumberOfBrokenLinks, BSTR * LinkReportFilePath, BSTR * ErrorMsg, enum GenerateMasterImportListError * ErrCode ) {
    return _com_dispatch_method(this, 0x7c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x600c\x000b\x0003\x0008\x0008\x4008\x4008\x4008\x4003\x4008\x4008\x4003", psalistOfFilesFolders, IncludeSubFolders, FileTypes, (BSTR)TimeStamp, (BSTR)WorkingFolderLocation, OrderedCSVFilePath, UnOrderedCSVFilePath, BrokenLinkXMLFilePath, iNumberOfBrokenLinks, LinkReportFilePath, ErrorMsg, ErrCode);
}

#pragma implementation_key(153)
inline _variant_t TGFramework::Application::FindWhereUsedDocuments ( const _variant_t & DocumentPathName, SAFEARRAY * * psalistOfDirectories, VARIANT_BOOL IncludeSubFolders, SAFEARRAY * * psaFilterList ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x7d, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x000c\x600c\x000b\x600c", &DocumentPathName, psalistOfDirectories, IncludeSubFolders, psaFilterList);
    return _variant_t(_result, false);
}

#pragma implementation_key(154)
inline _variant_t TGFramework::Application::QuerySystemInformation ( _bstr_t Search ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x7e, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x0008", (BSTR)Search);
    return _variant_t(_result, false);
}

#pragma implementation_key(155)
inline HRESULT TGFramework::Application::DisableBuilInDataMgmt ( VARIANT_BOOL bDisableBuiltInDM ) {
    return _com_dispatch_method(this, 0x80, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", bDisableBuiltInDM);
}

#pragma implementation_key(156)
inline _bstr_t TGFramework::Application::GetRegistryPath ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(157)
inline _bstr_t TGFramework::Application::GetAppDataFolder ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x82, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(158)
inline HRESULT TGFramework::Application::GetRevisionLinkInfo ( _bstr_t bstrFilePath, VARIANT * pVarRevisionRoot, VARIANT * pVarRevisedFrom ) {
    return _com_dispatch_method(this, 0x83, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x400c\x400c", (BSTR)bstrFilePath, pVarRevisionRoot, pVarRevisedFrom);
}

#pragma implementation_key(159)
inline HRESULT TGFramework::Application::GetRevisionsHistory ( _bstr_t PathName, SAFEARRAY * * psaScope, VARIANT * psaRevHistoryFileNameList, VARIANT * psaRevHistoryRevisionFromList ) {
    return _com_dispatch_method(this, 0x84, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x600c\x400c\x400c", (BSTR)PathName, psaScope, psaRevHistoryFileNameList, psaRevHistoryRevisionFromList);
}

#pragma implementation_key(160)
inline HRESULT TGFramework::Application::OpenDraft ( ) {
    return _com_dispatch_method(this, 0x85, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(161)
inline HRESULT TGFramework::Application::GetLatestRevision ( _bstr_t PathName, SAFEARRAY * * psaScope, BSTR * bLatestRevPath, BSTR * bLatestReleasedRevPath ) {
    return _com_dispatch_method(this, 0x87, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x600c\x4008\x4008", (BSTR)PathName, psaScope, bLatestRevPath, bLatestReleasedRevPath);
}

#pragma implementation_key(162)
inline HRESULT TGFramework::Application::GetTopLevelAssemblyFileNames ( SAFEARRAY * * FileNames, SAFEARRAY * * TopLevelAssemblyFileNames ) {
    return _com_dispatch_method(this, 0x88, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6008\x6008", FileNames, TopLevelAssemblyFileNames);
}

#pragma implementation_key(163)
inline HRESULT TGFramework::Application::FindSEDocumentsContainingText ( _bstr_t text_to_search, SAFEARRAY * * psaScope, _bstr_t file_types, VARIANT_BOOL bIncludeSubFolders, SAFEARRAY * * FilesFoundInSearch ) {
    return _com_dispatch_method(this, 0x89, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x600c\x0008\x000b\x6008", (BSTR)text_to_search, psaScope, (BSTR)file_types, bIncludeSubFolders, FilesFoundInSearch);
}

#pragma implementation_key(164)
inline HRESULT TGFramework::Application::ResetConfigFile ( enum ConfigResetType eResetType, enum ConfigForForeignFileType eConfigFileType, enum FileTranslationMode eTranslationMode, _bstr_t GroupName, VARIANT * pFile, VARIANT * pTemplateName ) {
    return _com_dispatch_method(this, 0x8a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0003\x0008\x480c\x480c", eResetType, eConfigFileType, eTranslationMode, (BSTR)GroupName, pFile, pTemplateName);
}

#pragma implementation_key(165)
inline long TGFramework::Application::GetNextDocumentNumbers ( int countOfFiles, VARIANT * pVarPrefix, VARIANT * pVarDocNumbs ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x400c\x400c", countOfFiles, pVarPrefix, pVarDocNumbs);
    return _result;
}

#pragma implementation_key(166)
inline HRESULT TGFramework::Application::Get_Set_UseBiDM_SEOption ( VARIANT_BOOL bGet, VARIANT_BOOL * iValue ) {
    return _com_dispatch_method(this, 0x8c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b\x400b", bGet, iValue);
}

#pragma implementation_key(167)
inline HRESULT TGFramework::Application::Get_Set_FileNamingRule ( VARIANT_BOOL bGet, VARIANT_BOOL * bValue ) {
    return _com_dispatch_method(this, 0x8d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b\x400b", bGet, bValue);
}

#pragma implementation_key(168)
inline _bstr_t TGFramework::Application::GetDocNameFormulaForFile ( _bstr_t bFilename ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x99, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0008", (BSTR)bFilename);
    return _bstr_t(_result, false);
}

#pragma implementation_key(169)
inline HRESULT TGFramework::Application::BiDM_RegisterCustomProps ( VARIANT_BOOL bProcessCustomPropsFromPropSeed, VARIANT_BOOL bProcessCustomPropsFromTemplates ) {
    return _com_dispatch_method(this, 0x92, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b\x000b", bProcessCustomPropsFromPropSeed, bProcessCustomPropsFromTemplates);
}

#pragma implementation_key(170)
inline HRESULT TGFramework::Application::PerformSolidEdgeWorkflow ( _bstr_t bstrFilePath, struct SolidEdgeWorkflowInfo * pSEWorkflowInfo ) {
    return _com_dispatch_method(this, 0x93, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x4024", (BSTR)bstrFilePath, pSEWorkflowInfo);
}

#pragma implementation_key(171)
inline HRESULT TGFramework::Application::GetSolidEdgeWorkflowInformation ( _bstr_t bstrFilePath, struct SolidEdgeWorkflowQueryInfo * pSEWorkflowQueryInfo ) {
    return _com_dispatch_method(this, 0x94, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x4024", (BSTR)bstrFilePath, pSEWorkflowQueryInfo);
}

#pragma implementation_key(172)
inline HRESULT TGFramework::Application::SuspendMRU ( ) {
    return _com_dispatch_method(this, 0x95, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(173)
inline HRESULT TGFramework::Application::ResumeMRU ( ) {
    return _com_dispatch_method(this, 0x96, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(174)
inline HRESULT TGFramework::Application::ClearMRU ( ) {
    return _com_dispatch_method(this, 0x97, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(175)
inline HRESULT TGFramework::Application::AbortCommand ( VARIANT_BOOL AbortAllCommands ) {
    return _com_dispatch_method(this, 0x9a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", AbortAllCommands);
}

#pragma implementation_key(176)
inline VARIANT_BOOL TGFramework::Application::Publish3DPDF ( _bstr_t bstrInputFileOrFolderPath, _bstr_t bstr3DPDFTemplateFile, VARIANT_BOOL bIncludeSubFolders, _bstr_t bstrOutputFolderPath, _bstr_t bstr3DPDFFileName, VARIANT_BOOL bOpenPDFAfterPublish, VARIANT_BOOL bPublishHTML, VARIANT_BOOL bAddNextPrevButtons, VARIANT_BOOL bAddFileCustomPropsToPDF, VARIANT_BOOL bSelectAllPMIModelViewsForPDF, _bstr_t bstrDefaultModelView, VARIANT_BOOL bGenAndAttachSTEPAP242, VARIANT_BOOL bGenAndAttachJT, const _variant_t & ListOfAttachments ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x9b, DISPATCH_METHOD, VT_BOOL, (void*)&_result, 
        L"\x0008\x0008\x000b\x0008\x0008\x000b\x000b\x000b\x000b\x000b\x0008\x000b\x000b\x080c", (BSTR)bstrInputFileOrFolderPath, (BSTR)bstr3DPDFTemplateFile, bIncludeSubFolders, (BSTR)bstrOutputFolderPath, (BSTR)bstr3DPDFFileName, bOpenPDFAfterPublish, bPublishHTML, bAddNextPrevButtons, bAddFileCustomPropsToPDF, bSelectAllPMIModelViewsForPDF, (BSTR)bstrDefaultModelView, bGenAndAttachSTEPAP242, bGenAndAttachJT, &ListOfAttachments);
    return _result;
}

#pragma implementation_key(177)
inline VARIANT_BOOL TGFramework::Application::ConvertByFilePath ( _bstr_t InputFileOrFolderPath, _bstr_t OutputFileOrFolderPath ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x9c, DISPATCH_METHOD, VT_BOOL, (void*)&_result, 
        L"\x0008\x0008", (BSTR)InputFileOrFolderPath, (BSTR)OutputFileOrFolderPath);
    return _result;
}

#pragma implementation_key(178)
inline VARIANT_BOOL TGFramework::Application::GetCommandPredictionLearningMode ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x9d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(179)
inline void TGFramework::Application::PutCommandPredictionLearningMode ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x9d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(180)
inline _bstr_t TGFramework::Application::GetSoldToID ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x9e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(181)
inline HRESULT TGFramework::Application::GetListOfTopLevelAssembliesFromFolder ( _bstr_t FolderPath, SAFEARRAY * * TopAssembliesList ) {
    return _com_dispatch_method(this, 0x9f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x6008", (BSTR)FolderPath, TopAssembliesList);
}

#pragma implementation_key(182)
inline _bstr_t TGFramework::Application::GetLicenseType ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xa0, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(183)
inline HRESULT TGFramework::Application::GenerateSourceImportListForDataPrep ( SAFEARRAY * * psalistOfFilesFolders, VARIANT_BOOL IncludeSubFolders, unsigned long FileTypes, _bstr_t TimeStamp, _bstr_t WorkingFolderLocation, BSTR * OrderedCSVFilePath, BSTR * UnOrderedCSVFilePath, BSTR * BrokenLinkXMLFilePath, int * iNumberOfBrokenLinks, BSTR * LinkReportFilePath, BSTR * ErrorMsg, enum GenerateSourceImportListError * ErrCode ) {
    return _com_dispatch_method(this, 0xa1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x600c\x000b\x0003\x0008\x0008\x4008\x4008\x4008\x4003\x4008\x4008\x4003", psalistOfFilesFolders, IncludeSubFolders, FileTypes, (BSTR)TimeStamp, (BSTR)WorkingFolderLocation, OrderedCSVFilePath, UnOrderedCSVFilePath, BrokenLinkXMLFilePath, iNumberOfBrokenLinks, LinkReportFilePath, ErrorMsg, ErrCode);
}

#pragma implementation_key(184)
inline long TGFramework::Application::GetActiveFramehWnd ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(185)
inline TGFramework::DynamicVisualizationPtr TGFramework::Application::GetDynamicVisualization ( ) {
    struct DynamicVisualization * _result = 0;
    _com_dispatch_method(this, 0xa3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DynamicVisualizationPtr(_result, false);
}

#pragma implementation_key(186)
inline __int64 TGFramework::Application::GetLicenseHandle ( ) {
    __int64 _result = 0;
    _com_dispatch_method(this, 0xa4, DISPATCH_PROPERTYGET, VT_I8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(187)
inline HRESULT TGFramework::Application::OpenNoteLibrary ( ) {
    return _com_dispatch_method(this, 0xa5, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(188)
inline HRESULT TGFramework::Application::CloseNoteLibrary ( ) {
    return _com_dispatch_method(this, 0xa6, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(189)
inline HRESULT TGFramework::Application::GetSavedNoteList ( SAFEARRAY * * saSavedNote ) {
    return _com_dispatch_method(this, 0xa7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6008", saSavedNote);
}

#pragma implementation_key(190)
inline IUnknownPtr TGFramework::Application::GetSavedNote ( _bstr_t bstrNoteName ) {
    IUnknown * _result = 0;
    _com_dispatch_method(this, 0xa8, DISPATCH_METHOD, VT_UNKNOWN, (void*)&_result, 
        L"\x0008", (BSTR)bstrNoteName);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(191)
inline HRESULT TGFramework::Application::AddNote ( _bstr_t bstrNoteName, _bstr_t bstrText, VARIANT_BOOL bNoteOverWrite ) {
    return _com_dispatch_method(this, 0xa9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x000b", (BSTR)bstrNoteName, (BSTR)bstrText, bNoteOverWrite);
}

#pragma implementation_key(192)
inline VARIANT_BOOL TGFramework::Application::Publish3DPDFEx ( _bstr_t bstrInputFileOrFolderPath, _bstr_t bstr3DPDFTemplateFile, VARIANT_BOOL bIncludeSubFolders, _bstr_t bstrOutputFolderPath, _bstr_t bstr3DPDFFileName, VARIANT_BOOL bOpenPDFAfterPublish, VARIANT_BOOL bPublishHTML, VARIANT_BOOL bAddNextPrevButtons, VARIANT_BOOL bAddFileCustomPropsToPDF, VARIANT_BOOL bSelectAllPMIModelViewsForPDF, _bstr_t bstrDefaultModelView, VARIANT_BOOL bGenAndAttachSTEPAP242, VARIANT_BOOL bGenAndAttachJT, const _variant_t & ListOfAttachments, VARIANT_BOOL bSelectAllNamedViewsForPDF, const _variant_t & ListOfNamedViews, const _variant_t & ListOfPMIModelViews ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xaa, DISPATCH_METHOD, VT_BOOL, (void*)&_result, 
        L"\x0008\x0008\x000b\x0008\x0008\x000b\x000b\x000b\x000b\x000b\x0008\x000b\x000b\x000c\x000b\x080c\x080c", (BSTR)bstrInputFileOrFolderPath, (BSTR)bstr3DPDFTemplateFile, bIncludeSubFolders, (BSTR)bstrOutputFolderPath, (BSTR)bstr3DPDFFileName, bOpenPDFAfterPublish, bPublishHTML, bAddNextPrevButtons, bAddFileCustomPropsToPDF, bSelectAllPMIModelViewsForPDF, (BSTR)bstrDefaultModelView, bGenAndAttachSTEPAP242, bGenAndAttachJT, &ListOfAttachments, bSelectAllNamedViewsForPDF, &ListOfNamedViews, &ListOfPMIModelViews);
    return _result;
}

#pragma implementation_key(193)
inline long TGFramework::Application::GetActiveCommand ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xab, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(194)
inline IUnknownPtr TGFramework::Application::GetOpenNonSolidEdgeFileUIEvents ( ) {
    struct IUnknown * _result = 0;
    _com_dispatch_method(this, 0xac, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(195)
inline VARIANT_BOOL TGFramework::Application::LicenseCheck ( enum SELicenseCheck Type, _bstr_t Feature ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xad, DISPATCH_METHOD, VT_BOOL, (void*)&_result, 
        L"\x0003\x0008", Type, (BSTR)Feature);
    return _result;
}

//
// interface _ISelectSetAuto wrapper method implementations
//

#pragma implementation_key(196)
inline TGFramework::ApplicationPtr TGFramework::_ISelectSetAuto::GetApplication ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(197)
inline IDispatchPtr TGFramework::_ISelectSetAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(198)
inline long TGFramework::_ISelectSetAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(199)
inline HRESULT TGFramework::_ISelectSetAuto::Add ( IDispatch * Dispatch ) {
    HRESULT _hr = raw_Add(Dispatch);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(200)
inline HRESULT TGFramework::_ISelectSetAuto::Remove ( const _variant_t & Index ) {
    HRESULT _hr = raw_Remove(Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(201)
inline HRESULT TGFramework::_ISelectSetAuto::RemoveAll ( ) {
    HRESULT _hr = raw_RemoveAll();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(202)
inline IDispatchPtr TGFramework::_ISelectSetAuto::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(203)
inline IUnknownPtr TGFramework::_ISelectSetAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(204)
inline HRESULT TGFramework::_ISelectSetAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(205)
inline HRESULT TGFramework::_ISelectSetAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(206)
inline HRESULT TGFramework::_ISelectSetAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(207)
inline HRESULT TGFramework::_ISelectSetAuto::AddAll ( ) {
    HRESULT _hr = raw_AddAll();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(208)
inline enum TGFramework::ObjectType TGFramework::_ISelectSetAuto::GetType ( ) {
    enum ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(209)
inline HRESULT TGFramework::_ISelectSetAuto::CopyProfile ( ) {
    HRESULT _hr = raw_CopyProfile();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(210)
inline HRESULT TGFramework::_ISelectSetAuto::CutProfile ( ) {
    HRESULT _hr = raw_CutProfile();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(211)
inline HRESULT TGFramework::_ISelectSetAuto::SuspendDisplay ( ) {
    HRESULT _hr = raw_SuspendDisplay();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(212)
inline HRESULT TGFramework::_ISelectSetAuto::ResumeDisplay ( ) {
    HRESULT _hr = raw_ResumeDisplay();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(213)
inline HRESULT TGFramework::_ISelectSetAuto::RefreshDisplay ( ) {
    HRESULT _hr = raw_RefreshDisplay();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface Documents wrapper method implementations
//

#pragma implementation_key(214)
inline TGFramework::ApplicationPtr TGFramework::Documents::GetApplication ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(215)
inline HRESULT TGFramework::Documents::Close ( ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(216)
inline long TGFramework::Documents::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(217)
inline TGFramework::ApplicationPtr TGFramework::Documents::GetParent ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(218)
inline IDispatchPtr TGFramework::Documents::Add ( const _variant_t & ProgID, const _variant_t & TemplateDoc ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &ProgID, &TemplateDoc);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(219)
inline IDispatchPtr TGFramework::Documents::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(220)
inline IDispatchPtr TGFramework::Documents::Open ( _bstr_t Filename, const _variant_t & DocRelationAutoServer, const _variant_t & AltPath, const _variant_t & RecognizeFeaturesIfPartTemplate, const _variant_t & RevisionRuleOption, const _variant_t & StopFileOpenIfRevisionRuleNotApplicable ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x080c\x080c\x080c\x080c\x080c", (BSTR)Filename, &DocRelationAutoServer, &AltPath, &RecognizeFeaturesIfPartTemplate, &RevisionRuleOption, &StopFileOpenIfRevisionRuleNotApplicable);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(221)
inline IDispatchPtr TGFramework::Documents::OpenWithTemplate ( _bstr_t Filename, _bstr_t Template, const _variant_t & RecognizeFeaturesIfPartTemplate ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0008\x080c", (BSTR)Filename, (BSTR)Template, &RecognizeFeaturesIfPartTemplate);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(222)
inline _bstr_t TGFramework::Documents::GetTemplatePath ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(223)
inline _bstr_t TGFramework::Documents::GetAutoCadConfigFile ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(224)
inline void TGFramework::Documents::PutAutoCadConfigFile ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(225)
inline HRESULT TGFramework::Documents::SetForeignFileConfigValue ( _bstr_t DocumentProgID, _bstr_t Filename, _bstr_t SectionName, _bstr_t Name, _bstr_t Value ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x0008\x0008", (BSTR)DocumentProgID, (BSTR)Filename, (BSTR)SectionName, (BSTR)Name, (BSTR)Value);
}

#pragma implementation_key(226)
inline _bstr_t TGFramework::Documents::GetForeignFileConfigValue ( _bstr_t DocumentProgID, _bstr_t Filename, _bstr_t SectionName, _bstr_t Name ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0008\x0008\x0008\x0008", (BSTR)DocumentProgID, (BSTR)Filename, (BSTR)SectionName, (BSTR)Name);
    return _bstr_t(_result, false);
}

#pragma implementation_key(227)
inline HRESULT TGFramework::Documents::CloseDocument ( _bstr_t Filename, const _variant_t & SaveChanges, const _variant_t & SaveAsFileName, const _variant_t & RouteWorkbook, const _variant_t & DoIdle ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x080c\x080c\x080c\x080c", (BSTR)Filename, &SaveChanges, &SaveAsFileName, &RouteWorkbook, &DoIdle);
}

#pragma implementation_key(228)
inline TGFramework::TemplateManagerPtr TGFramework::Documents::GetTemplateManager ( ) {
    struct TemplateManager * _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TemplateManagerPtr(_result, false);
}

#pragma implementation_key(229)
inline IDispatchPtr TGFramework::Documents::OpenWithFileOpenDialog ( const _variant_t & Filename, const _variant_t & DialogTitle, const _variant_t & Flags ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c\x080c", &Filename, &DialogTitle, &Flags);
    return IDispatchPtr(_result, false);
}

//
// dispinterface TemplateManager wrapper method implementations
//

#pragma implementation_key(230)
inline TGFramework::ApplicationPtr TGFramework::TemplateManager::GetApplication ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(231)
inline IDispatchPtr TGFramework::TemplateManager::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(232)
inline HRESULT TGFramework::TemplateManager::GetActiveTemplates ( BSTR * bstrActiveListPath, enum TemplatesListType * eActiveListType, SAFEARRAY * * astrActiveTemplates ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008\x4003\x6008", bstrActiveListPath, eActiveListType, astrActiveTemplates);
}

//
// interface _IDocumentsAuto wrapper method implementations
//

#pragma implementation_key(233)
inline TGFramework::ApplicationPtr TGFramework::_IDocumentsAuto::GetApplication ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(234)
inline HRESULT TGFramework::_IDocumentsAuto::Close ( ) {
    HRESULT _hr = raw_Close();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(235)
inline long TGFramework::_IDocumentsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(236)
inline TGFramework::ApplicationPtr TGFramework::_IDocumentsAuto::GetParent ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(237)
inline IDispatchPtr TGFramework::_IDocumentsAuto::Add ( const _variant_t & ProgID, const _variant_t & TemplateDoc ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Add(ProgID, TemplateDoc, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(238)
inline IDispatchPtr TGFramework::_IDocumentsAuto::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(239)
inline IDispatchPtr TGFramework::_IDocumentsAuto::Open ( _bstr_t Filename, const _variant_t & DocRelationAutoServer, const _variant_t & AltPath, const _variant_t & RecognizeFeaturesIfPartTemplate, const _variant_t & RevisionRuleOption, const _variant_t & StopFileOpenIfRevisionRuleNotApplicable ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Open(Filename, DocRelationAutoServer, AltPath, RecognizeFeaturesIfPartTemplate, RevisionRuleOption, StopFileOpenIfRevisionRuleNotApplicable, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(240)
inline IUnknownPtr TGFramework::_IDocumentsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(241)
inline IDispatchPtr TGFramework::_IDocumentsAuto::OpenWithTemplate ( _bstr_t Filename, _bstr_t Template, const _variant_t & RecognizeFeaturesIfPartTemplate ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_OpenWithTemplate(Filename, Template, RecognizeFeaturesIfPartTemplate, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(242)
inline _bstr_t TGFramework::_IDocumentsAuto::GetTemplatePath ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TemplatePath(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(243)
inline _bstr_t TGFramework::_IDocumentsAuto::GetAutoCadConfigFile ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AutoCadConfigFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(244)
inline void TGFramework::_IDocumentsAuto::PutAutoCadConfigFile ( _bstr_t AutoCadConfigFile ) {
    HRESULT _hr = put_AutoCadConfigFile(AutoCadConfigFile);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(245)
inline HRESULT TGFramework::_IDocumentsAuto::SetForeignFileConfigValue ( _bstr_t DocumentProgID, _bstr_t Filename, _bstr_t SectionName, _bstr_t Name, _bstr_t Value ) {
    HRESULT _hr = raw_SetForeignFileConfigValue(DocumentProgID, Filename, SectionName, Name, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(246)
inline _bstr_t TGFramework::_IDocumentsAuto::GetForeignFileConfigValue ( _bstr_t DocumentProgID, _bstr_t Filename, _bstr_t SectionName, _bstr_t Name ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetForeignFileConfigValue(DocumentProgID, Filename, SectionName, Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(247)
inline HRESULT TGFramework::_IDocumentsAuto::CloseDocument ( _bstr_t Filename, const _variant_t & SaveChanges, const _variant_t & SaveAsFileName, const _variant_t & RouteWorkbook, const _variant_t & DoIdle ) {
    HRESULT _hr = raw_CloseDocument(Filename, SaveChanges, SaveAsFileName, RouteWorkbook, DoIdle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(248)
inline TGFramework::TemplateManagerPtr TGFramework::_IDocumentsAuto::GetTemplateManager ( ) {
    struct TemplateManager * _result = 0;
    HRESULT _hr = get_TemplateManager(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TemplateManagerPtr(_result, false);
}

#pragma implementation_key(249)
inline IDispatchPtr TGFramework::_IDocumentsAuto::OpenWithFileOpenDialog ( const _variant_t & Filename, const _variant_t & DialogTitle, const _variant_t & Flags ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_OpenWithFileOpenDialog(Filename, DialogTitle, Flags, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// interface _ITemplateManagerAuto wrapper method implementations
//

#pragma implementation_key(250)
inline TGFramework::ApplicationPtr TGFramework::_ITemplateManagerAuto::GetApplication ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(251)
inline IDispatchPtr TGFramework::_ITemplateManagerAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(252)
inline HRESULT TGFramework::_ITemplateManagerAuto::GetActiveTemplates ( BSTR * bstrActiveListPath, enum TemplatesListType * eActiveListType, SAFEARRAY * * astrActiveTemplates ) {
    HRESULT _hr = raw_GetActiveTemplates(bstrActiveListPath, eActiveListType, astrActiveTemplates);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface Environments wrapper method implementations
//

#pragma implementation_key(253)
inline TGFramework::ApplicationPtr TGFramework::Environments::GetApplication ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(254)
inline long TGFramework::Environments::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(255)
inline TGFramework::ApplicationPtr TGFramework::Environments::GetParent ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(256)
inline TGFramework::EnvironmentPtr TGFramework::Environments::Item ( const _variant_t & Index ) {
    struct Environment * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return EnvironmentPtr(_result, false);
}

//
// dispinterface Environment wrapper method implementations
//

#pragma implementation_key(257)
inline TGFramework::ApplicationPtr TGFramework::Environment::GetApplication ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(258)
inline _bstr_t TGFramework::Environment::GetCaption ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(259)
inline void TGFramework::Environment::PutCaption ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(260)
inline int TGFramework::Environment::GetIndex ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(261)
inline _bstr_t TGFramework::Environment::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(262)
inline TGFramework::EnvironmentsPtr TGFramework::Environment::GetParent ( ) {
    struct Environments * _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return EnvironmentsPtr(_result, false);
}

#pragma implementation_key(263)
inline TGFramework::CommandBarsPtr TGFramework::Environment::GetCommandBars ( ) {
    struct CommandBars * _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return CommandBarsPtr(_result, false);
}

#pragma implementation_key(264)
inline TGFramework::AcceleratorsPtr TGFramework::Environment::GetAccelerators ( ) {
    struct Accelerators * _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AcceleratorsPtr(_result, false);
}

#pragma implementation_key(265)
inline _bstr_t TGFramework::Environment::GetSubTypeName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(266)
inline TGFramework::CommandCategoriesPtr TGFramework::Environment::GetCommandCategories ( ) {
    struct CommandCategories * _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return CommandCategoriesPtr(_result, false);
}

#pragma implementation_key(267)
inline _bstr_t TGFramework::Environment::GetCATID ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(268)
inline _bstr_t TGFramework::Environment::GetCustomizeDisplayName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(269)
inline TGFramework::CommandInfoPtr TGFramework::Environment::GetCommandInfo ( long CommandID ) {
    struct CommandInfo * _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0003", CommandID);
    return CommandInfoPtr(_result, false);
}

//
// interface _IEnvironmentsAuto wrapper method implementations
//

#pragma implementation_key(270)
inline TGFramework::ApplicationPtr TGFramework::_IEnvironmentsAuto::GetApplication ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(271)
inline long TGFramework::_IEnvironmentsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(272)
inline TGFramework::ApplicationPtr TGFramework::_IEnvironmentsAuto::GetParent ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(273)
inline TGFramework::EnvironmentPtr TGFramework::_IEnvironmentsAuto::Item ( const _variant_t & Index ) {
    struct Environment * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return EnvironmentPtr(_result, false);
}

#pragma implementation_key(274)
inline IUnknownPtr TGFramework::_IEnvironmentsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

//
// dispinterface CommandBars wrapper method implementations
//

#pragma implementation_key(275)
inline TGFramework::CommandBarPtr TGFramework::CommandBars::GetActiveMenuBar ( ) {
    struct CommandBar * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return CommandBarPtr(_result, false);
}

#pragma implementation_key(276)
inline IDispatchPtr TGFramework::CommandBars::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(277)
inline long TGFramework::CommandBars::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(278)
inline VARIANT_BOOL TGFramework::CommandBars::GetDisplayTooltips ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(279)
inline void TGFramework::CommandBars::PutDisplayTooltips ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(280)
inline VARIANT_BOOL TGFramework::CommandBars::GetLargeButtons ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(281)
inline void TGFramework::CommandBars::PutLargeButtons ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(282)
inline IDispatchPtr TGFramework::CommandBars::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(283)
inline TGFramework::CommandBarPtr TGFramework::CommandBars::Add ( const _variant_t & Name, const _variant_t & Position, const _variant_t & MenuBar, const _variant_t & Temporary ) {
    struct CommandBar * _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c", &Name, &Position, &MenuBar, &Temporary);
    return CommandBarPtr(_result, false);
}

#pragma implementation_key(284)
inline TGFramework::CommandBarControlPtr TGFramework::CommandBars::FindControl ( const _variant_t & Type, const _variant_t & Id, const _variant_t & Tag, const _variant_t & Visible ) {
    struct CommandBarControl * _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c", &Type, &Id, &Tag, &Visible);
    return CommandBarControlPtr(_result, false);
}

#pragma implementation_key(285)
inline TGFramework::CommandBarPtr TGFramework::CommandBars::Item ( const _variant_t & Index ) {
    struct CommandBar * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return CommandBarPtr(_result, false);
}

//
// dispinterface CommandBar wrapper method implementations
//

#pragma implementation_key(286)
inline IDispatchPtr TGFramework::CommandBar::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(287)
inline VARIANT_BOOL TGFramework::CommandBar::GetBuiltIn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(288)
inline TGFramework::CommandBarControlsPtr TGFramework::CommandBar::GetControls ( ) {
    struct CommandBarControls * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return CommandBarControlsPtr(_result, false);
}

#pragma implementation_key(289)
inline VARIANT_BOOL TGFramework::CommandBar::GetEnabled ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(290)
inline void TGFramework::CommandBar::PutEnabled ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(291)
inline long TGFramework::CommandBar::GetHeight ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(292)
inline void TGFramework::CommandBar::PutHeight ( long _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(293)
inline long TGFramework::CommandBar::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(294)
inline long TGFramework::CommandBar::GetLeft ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(295)
inline void TGFramework::CommandBar::PutLeft ( long _arg1 ) {
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(296)
inline _bstr_t TGFramework::CommandBar::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(297)
inline _bstr_t TGFramework::CommandBar::GetNameLocal ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(298)
inline void TGFramework::CommandBar::PutNameLocal ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(299)
inline TGFramework::EnvironmentPtr TGFramework::CommandBar::GetParent ( ) {
    struct Environment * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return EnvironmentPtr(_result, false);
}

#pragma implementation_key(300)
inline enum TGFramework::SeBarPosition TGFramework::CommandBar::GetPosition ( ) {
    enum SeBarPosition _result;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(301)
inline void TGFramework::CommandBar::PutPosition ( enum SeBarPosition _arg1 ) {
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(302)
inline long TGFramework::CommandBar::GetTop ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(303)
inline void TGFramework::CommandBar::PutTop ( long _arg1 ) {
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(304)
inline enum TGFramework::SeBarType TGFramework::CommandBar::GetType ( ) {
    enum SeBarType _result;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(305)
inline VARIANT_BOOL TGFramework::CommandBar::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(306)
inline void TGFramework::CommandBar::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(307)
inline long TGFramework::CommandBar::GetWidth ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(308)
inline void TGFramework::CommandBar::PutWidth ( long _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(309)
inline HRESULT TGFramework::CommandBar::Delete ( ) {
    return _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(310)
inline TGFramework::CommandBarControlPtr TGFramework::CommandBar::FindControl ( const _variant_t & Type, const _variant_t & Id, const _variant_t & Tag, const _variant_t & Visible, const _variant_t & Recursive ) {
    struct CommandBarControl * _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c\x080c", &Type, &Id, &Tag, &Visible, &Recursive);
    return CommandBarControlPtr(_result, false);
}

#pragma implementation_key(311)
inline HRESULT TGFramework::CommandBar::Reset ( ) {
    return _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(312)
inline HRESULT TGFramework::CommandBar::ShowPopup ( const _variant_t & x, const _variant_t & y ) {
    return _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c", &x, &y);
}

//
// dispinterface CommandBarControls wrapper method implementations
//

#pragma implementation_key(313)
inline IDispatchPtr TGFramework::CommandBarControls::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(314)
inline long TGFramework::CommandBarControls::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(315)
inline TGFramework::CommandBarPtr TGFramework::CommandBarControls::GetParent ( ) {
    struct CommandBar * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return CommandBarPtr(_result, false);
}

#pragma implementation_key(316)
inline TGFramework::CommandBarControlPtr TGFramework::CommandBarControls::Add ( const _variant_t & Type, const _variant_t & Id, const _variant_t & Before, const _variant_t & Temporary ) {
    struct CommandBarControl * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c\x080c\x080c", &Type, &Id, &Before, &Temporary);
    return CommandBarControlPtr(_result, false);
}

#pragma implementation_key(317)
inline TGFramework::CommandBarControlPtr TGFramework::CommandBarControls::Item ( const _variant_t & Index ) {
    struct CommandBarControl * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return CommandBarControlPtr(_result, false);
}

//
// dispinterface CommandBarControl wrapper method implementations
//

#pragma implementation_key(318)
inline IDispatchPtr TGFramework::CommandBarControl::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x10010001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(319)
inline VARIANT_BOOL TGFramework::CommandBarControl::GetBeginGroup ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10010002, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(320)
inline void TGFramework::CommandBarControl::PutBeginGroup ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x10010002, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(321)
inline VARIANT_BOOL TGFramework::CommandBarControl::GetBuiltIn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10010003, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(322)
inline VARIANT_BOOL TGFramework::CommandBarControl::GetBuiltInFace ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10010004, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(323)
inline void TGFramework::CommandBarControl::PutBuiltInFace ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x10010004, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(324)
inline _bstr_t TGFramework::CommandBarControl::GetCaption ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x10010005, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(325)
inline void TGFramework::CommandBarControl::PutCaption ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x10010005, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(326)
inline _bstr_t TGFramework::CommandBarControl::GetDescriptionText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x10010006, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(327)
inline void TGFramework::CommandBarControl::PutDescriptionText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x10010006, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(328)
inline VARIANT_BOOL TGFramework::CommandBarControl::GetEnabled ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10010007, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(329)
inline void TGFramework::CommandBarControl::PutEnabled ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x10010007, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(330)
inline long TGFramework::CommandBarControl::GetFaceId ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10010008, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(331)
inline void TGFramework::CommandBarControl::PutFaceId ( long _arg1 ) {
    _com_dispatch_method(this, 0x10010008, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(332)
inline long TGFramework::CommandBarControl::GetHeight ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10010009, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(333)
inline long TGFramework::CommandBarControl::GetHelpContextId ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1001000a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(334)
inline void TGFramework::CommandBarControl::PutHelpContextId ( long _arg1 ) {
    _com_dispatch_method(this, 0x1001000a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(335)
inline _bstr_t TGFramework::CommandBarControl::GetHelpFile ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1001000b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(336)
inline void TGFramework::CommandBarControl::PutHelpFile ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1001000b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(337)
inline long TGFramework::CommandBarControl::GetId ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1001000c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(338)
inline long TGFramework::CommandBarControl::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1001000d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(339)
inline long TGFramework::CommandBarControl::GetLeft ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1001000e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(340)
inline _bstr_t TGFramework::CommandBarControl::GetOnAction ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1001000f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(341)
inline void TGFramework::CommandBarControl::PutOnAction ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1001000f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(342)
inline _bstr_t TGFramework::CommandBarControl::GetParameterText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x10010010, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(343)
inline void TGFramework::CommandBarControl::PutParameterText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x10010010, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(344)
inline TGFramework::CommandBarPtr TGFramework::CommandBarControl::GetParent ( ) {
    struct CommandBar * _result = 0;
    _com_dispatch_method(this, 0x10010011, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return CommandBarPtr(_result, false);
}

#pragma implementation_key(345)
inline _bstr_t TGFramework::CommandBarControl::GetShortcutText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x10010012, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(346)
inline void TGFramework::CommandBarControl::PutShortcutText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x10010012, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(347)
inline _bstr_t TGFramework::CommandBarControl::GetTag ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x10010013, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(348)
inline void TGFramework::CommandBarControl::PutTag ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x10010013, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(349)
inline _bstr_t TGFramework::CommandBarControl::GetTooltipText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x10010014, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(350)
inline void TGFramework::CommandBarControl::PutTooltipText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x10010014, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(351)
inline long TGFramework::CommandBarControl::GetTop ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10010015, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(352)
inline enum TGFramework::SeControlType TGFramework::CommandBarControl::GetType ( ) {
    enum SeControlType _result;
    _com_dispatch_method(this, 0x10010016, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(353)
inline VARIANT_BOOL TGFramework::CommandBarControl::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10010017, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(354)
inline void TGFramework::CommandBarControl::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x10010017, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(355)
inline long TGFramework::CommandBarControl::GetWidth ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10010018, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(356)
inline HRESULT TGFramework::CommandBarControl::Delete ( const _variant_t & Temporary ) {
    return _com_dispatch_method(this, 0x10010019, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &Temporary);
}

#pragma implementation_key(357)
inline HRESULT TGFramework::CommandBarControl::Execute ( ) {
    return _com_dispatch_method(this, 0x1001001a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(358)
inline HRESULT TGFramework::CommandBarControl::Help ( ) {
    return _com_dispatch_method(this, 0x1001001b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(359)
inline HRESULT TGFramework::CommandBarControl::LoadFace ( _bstr_t Face ) {
    return _com_dispatch_method(this, 0x1001001c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Face);
}

//
// interface ISECommandBars wrapper method implementations
//

#pragma implementation_key(360)
inline TGFramework::CommandBarPtr TGFramework::ISECommandBars::GetActiveMenuBar ( ) {
    struct CommandBar * _result = 0;
    HRESULT _hr = get_ActiveMenuBar(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CommandBarPtr(_result, false);
}

#pragma implementation_key(361)
inline IDispatchPtr TGFramework::ISECommandBars::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(362)
inline long TGFramework::ISECommandBars::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(363)
inline VARIANT_BOOL TGFramework::ISECommandBars::GetDisplayTooltips ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayTooltips(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(364)
inline void TGFramework::ISECommandBars::PutDisplayTooltips ( VARIANT_BOOL DisplayTooltips ) {
    HRESULT _hr = put_DisplayTooltips(DisplayTooltips);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(365)
inline VARIANT_BOOL TGFramework::ISECommandBars::GetLargeButtons ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_LargeButtons(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(366)
inline void TGFramework::ISECommandBars::PutLargeButtons ( VARIANT_BOOL LargeButtons ) {
    HRESULT _hr = put_LargeButtons(LargeButtons);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(367)
inline IDispatchPtr TGFramework::ISECommandBars::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(368)
inline TGFramework::CommandBarPtr TGFramework::ISECommandBars::Add ( const _variant_t & Name, const _variant_t & Position, const _variant_t & MenuBar, const _variant_t & Temporary ) {
    struct CommandBar * _result = 0;
    HRESULT _hr = raw_Add(Name, Position, MenuBar, Temporary, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CommandBarPtr(_result, false);
}

#pragma implementation_key(369)
inline TGFramework::CommandBarControlPtr TGFramework::ISECommandBars::FindControl ( const _variant_t & Type, const _variant_t & Id, const _variant_t & Tag, const _variant_t & Visible ) {
    struct CommandBarControl * _result = 0;
    HRESULT _hr = raw_FindControl(Type, Id, Tag, Visible, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CommandBarControlPtr(_result, false);
}

#pragma implementation_key(370)
inline TGFramework::CommandBarPtr TGFramework::ISECommandBars::Item ( const _variant_t & Index ) {
    struct CommandBar * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CommandBarPtr(_result, false);
}

#pragma implementation_key(371)
inline IUnknownPtr TGFramework::ISECommandBars::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

//
// interface ISECommandBarControls wrapper method implementations
//

#pragma implementation_key(372)
inline IDispatchPtr TGFramework::ISECommandBarControls::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(373)
inline long TGFramework::ISECommandBarControls::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(374)
inline TGFramework::CommandBarPtr TGFramework::ISECommandBarControls::GetParent ( ) {
    struct CommandBar * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CommandBarPtr(_result, false);
}

#pragma implementation_key(375)
inline TGFramework::CommandBarControlPtr TGFramework::ISECommandBarControls::Add ( const _variant_t & Type, const _variant_t & Id, const _variant_t & Before, const _variant_t & Temporary ) {
    struct CommandBarControl * _result = 0;
    HRESULT _hr = raw_Add(Type, Id, Before, Temporary, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CommandBarControlPtr(_result, false);
}

#pragma implementation_key(376)
inline TGFramework::CommandBarControlPtr TGFramework::ISECommandBarControls::Item ( const _variant_t & Index ) {
    struct CommandBarControl * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CommandBarControlPtr(_result, false);
}

#pragma implementation_key(377)
inline IUnknownPtr TGFramework::ISECommandBarControls::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

//
// interface ISECommandBarControl wrapper method implementations
//

#pragma implementation_key(378)
inline IDispatchPtr TGFramework::ISECommandBarControl::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(379)
inline VARIANT_BOOL TGFramework::ISECommandBarControl::GetBeginGroup ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BeginGroup(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(380)
inline void TGFramework::ISECommandBarControl::PutBeginGroup ( VARIANT_BOOL BeginGroup ) {
    HRESULT _hr = put_BeginGroup(BeginGroup);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(381)
inline VARIANT_BOOL TGFramework::ISECommandBarControl::GetBuiltIn ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BuiltIn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(382)
inline VARIANT_BOOL TGFramework::ISECommandBarControl::GetBuiltInFace ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BuiltInFace(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(383)
inline void TGFramework::ISECommandBarControl::PutBuiltInFace ( VARIANT_BOOL BuiltInFace ) {
    HRESULT _hr = put_BuiltInFace(BuiltInFace);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(384)
inline _bstr_t TGFramework::ISECommandBarControl::GetCaption ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Caption(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(385)
inline void TGFramework::ISECommandBarControl::PutCaption ( _bstr_t Caption ) {
    HRESULT _hr = put_Caption(Caption);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(386)
inline _bstr_t TGFramework::ISECommandBarControl::GetDescriptionText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DescriptionText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(387)
inline void TGFramework::ISECommandBarControl::PutDescriptionText ( _bstr_t DescriptionText ) {
    HRESULT _hr = put_DescriptionText(DescriptionText);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(388)
inline VARIANT_BOOL TGFramework::ISECommandBarControl::GetEnabled ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Enabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(389)
inline void TGFramework::ISECommandBarControl::PutEnabled ( VARIANT_BOOL Enabled ) {
    HRESULT _hr = put_Enabled(Enabled);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(390)
inline long TGFramework::ISECommandBarControl::GetFaceId ( ) {
    long _result = 0;
    HRESULT _hr = get_FaceId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(391)
inline void TGFramework::ISECommandBarControl::PutFaceId ( long FaceId ) {
    HRESULT _hr = put_FaceId(FaceId);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(392)
inline long TGFramework::ISECommandBarControl::GetHeight ( ) {
    long _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(393)
inline long TGFramework::ISECommandBarControl::GetHelpContextId ( ) {
    long _result = 0;
    HRESULT _hr = get_HelpContextId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(394)
inline void TGFramework::ISECommandBarControl::PutHelpContextId ( long HelpContextId ) {
    HRESULT _hr = put_HelpContextId(HelpContextId);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(395)
inline _bstr_t TGFramework::ISECommandBarControl::GetHelpFile ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HelpFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(396)
inline void TGFramework::ISECommandBarControl::PutHelpFile ( _bstr_t HelpFile ) {
    HRESULT _hr = put_HelpFile(HelpFile);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(397)
inline long TGFramework::ISECommandBarControl::GetId ( ) {
    long _result = 0;
    HRESULT _hr = get_Id(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(398)
inline long TGFramework::ISECommandBarControl::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(399)
inline long TGFramework::ISECommandBarControl::GetLeft ( ) {
    long _result = 0;
    HRESULT _hr = get_Left(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(400)
inline _bstr_t TGFramework::ISECommandBarControl::GetOnAction ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_OnAction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(401)
inline void TGFramework::ISECommandBarControl::PutOnAction ( _bstr_t OnAction ) {
    HRESULT _hr = put_OnAction(OnAction);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(402)
inline _bstr_t TGFramework::ISECommandBarControl::GetParameterText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ParameterText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(403)
inline void TGFramework::ISECommandBarControl::PutParameterText ( _bstr_t ParameterText ) {
    HRESULT _hr = put_ParameterText(ParameterText);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(404)
inline TGFramework::CommandBarPtr TGFramework::ISECommandBarControl::GetParent ( ) {
    struct CommandBar * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CommandBarPtr(_result, false);
}

#pragma implementation_key(405)
inline _bstr_t TGFramework::ISECommandBarControl::GetShortcutText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShortcutText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(406)
inline void TGFramework::ISECommandBarControl::PutShortcutText ( _bstr_t ShortcutText ) {
    HRESULT _hr = put_ShortcutText(ShortcutText);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(407)
inline _bstr_t TGFramework::ISECommandBarControl::GetTag ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Tag(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(408)
inline void TGFramework::ISECommandBarControl::PutTag ( _bstr_t Tag ) {
    HRESULT _hr = put_Tag(Tag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(409)
inline _bstr_t TGFramework::ISECommandBarControl::GetTooltipText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TooltipText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(410)
inline void TGFramework::ISECommandBarControl::PutTooltipText ( _bstr_t TooltipText ) {
    HRESULT _hr = put_TooltipText(TooltipText);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(411)
inline long TGFramework::ISECommandBarControl::GetTop ( ) {
    long _result = 0;
    HRESULT _hr = get_Top(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(412)
inline enum TGFramework::SeControlType TGFramework::ISECommandBarControl::GetType ( ) {
    enum SeControlType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(413)
inline VARIANT_BOOL TGFramework::ISECommandBarControl::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(414)
inline void TGFramework::ISECommandBarControl::PutVisible ( VARIANT_BOOL Visible ) {
    HRESULT _hr = put_Visible(Visible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(415)
inline long TGFramework::ISECommandBarControl::GetWidth ( ) {
    long _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(416)
inline HRESULT TGFramework::ISECommandBarControl::Delete ( const _variant_t & Temporary ) {
    HRESULT _hr = raw_Delete(Temporary);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(417)
inline HRESULT TGFramework::ISECommandBarControl::Execute ( ) {
    HRESULT _hr = raw_Execute();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(418)
inline HRESULT TGFramework::ISECommandBarControl::Help ( ) {
    HRESULT _hr = raw_Help();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(419)
inline HRESULT TGFramework::ISECommandBarControl::LoadFace ( _bstr_t Face ) {
    HRESULT _hr = raw_LoadFace(Face);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISECommandBar wrapper method implementations
//

#pragma implementation_key(420)
inline IDispatchPtr TGFramework::ISECommandBar::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(421)
inline VARIANT_BOOL TGFramework::ISECommandBar::GetBuiltIn ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BuiltIn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(422)
inline TGFramework::CommandBarControlsPtr TGFramework::ISECommandBar::GetControls ( ) {
    struct CommandBarControls * _result = 0;
    HRESULT _hr = get_Controls(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CommandBarControlsPtr(_result, false);
}

#pragma implementation_key(423)
inline VARIANT_BOOL TGFramework::ISECommandBar::GetEnabled ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Enabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(424)
inline void TGFramework::ISECommandBar::PutEnabled ( VARIANT_BOOL Enabled ) {
    HRESULT _hr = put_Enabled(Enabled);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(425)
inline long TGFramework::ISECommandBar::GetHeight ( ) {
    long _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(426)
inline void TGFramework::ISECommandBar::PutHeight ( long Height ) {
    HRESULT _hr = put_Height(Height);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(427)
inline long TGFramework::ISECommandBar::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(428)
inline long TGFramework::ISECommandBar::GetLeft ( ) {
    long _result = 0;
    HRESULT _hr = get_Left(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(429)
inline void TGFramework::ISECommandBar::PutLeft ( long Left ) {
    HRESULT _hr = put_Left(Left);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(430)
inline _bstr_t TGFramework::ISECommandBar::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(431)
inline _bstr_t TGFramework::ISECommandBar::GetNameLocal ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_NameLocal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(432)
inline void TGFramework::ISECommandBar::PutNameLocal ( _bstr_t NameLocal ) {
    HRESULT _hr = put_NameLocal(NameLocal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(433)
inline TGFramework::EnvironmentPtr TGFramework::ISECommandBar::GetParent ( ) {
    struct Environment * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return EnvironmentPtr(_result, false);
}

#pragma implementation_key(434)
inline enum TGFramework::SeBarPosition TGFramework::ISECommandBar::GetPosition ( ) {
    enum SeBarPosition _result;
    HRESULT _hr = get_Position(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(435)
inline void TGFramework::ISECommandBar::PutPosition ( enum SeBarPosition Position ) {
    HRESULT _hr = put_Position(Position);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(436)
inline long TGFramework::ISECommandBar::GetTop ( ) {
    long _result = 0;
    HRESULT _hr = get_Top(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(437)
inline void TGFramework::ISECommandBar::PutTop ( long Top ) {
    HRESULT _hr = put_Top(Top);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(438)
inline enum TGFramework::SeBarType TGFramework::ISECommandBar::GetType ( ) {
    enum SeBarType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(439)
inline VARIANT_BOOL TGFramework::ISECommandBar::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(440)
inline void TGFramework::ISECommandBar::PutVisible ( VARIANT_BOOL Visible ) {
    HRESULT _hr = put_Visible(Visible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(441)
inline long TGFramework::ISECommandBar::GetWidth ( ) {
    long _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(442)
inline void TGFramework::ISECommandBar::PutWidth ( long Width ) {
    HRESULT _hr = put_Width(Width);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(443)
inline HRESULT TGFramework::ISECommandBar::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(444)
inline TGFramework::CommandBarControlPtr TGFramework::ISECommandBar::FindControl ( const _variant_t & Type, const _variant_t & Id, const _variant_t & Tag, const _variant_t & Visible, const _variant_t & Recursive ) {
    struct CommandBarControl * _result = 0;
    HRESULT _hr = raw_FindControl(Type, Id, Tag, Visible, Recursive, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CommandBarControlPtr(_result, false);
}

#pragma implementation_key(445)
inline HRESULT TGFramework::ISECommandBar::Reset ( ) {
    HRESULT _hr = raw_Reset();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(446)
inline HRESULT TGFramework::ISECommandBar::ShowPopup ( const _variant_t & x, const _variant_t & y ) {
    HRESULT _hr = raw_ShowPopup(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface Accelerators wrapper method implementations
//

#pragma implementation_key(447)
inline long TGFramework::Accelerators::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(448)
inline IDispatchPtr TGFramework::Accelerators::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(449)
inline TGFramework::AcceleratorPtr TGFramework::Accelerators::Item ( const _variant_t & Index ) {
    struct Accelerator * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AcceleratorPtr(_result, false);
}

//
// dispinterface Accelerator wrapper method implementations
//

#pragma implementation_key(450)
inline long TGFramework::Accelerator::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(451)
inline IDispatchPtr TGFramework::Accelerator::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(452)
inline TGFramework::KeyBindingPtr TGFramework::Accelerator::Item ( const _variant_t & Index ) {
    struct KeyBinding * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return KeyBindingPtr(_result, false);
}

#pragma implementation_key(453)
inline enum TGFramework::AcceleratorTypeConstants TGFramework::Accelerator::GetType ( ) {
    enum AcceleratorTypeConstants _result;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(454)
inline HRESULT TGFramework::Accelerator::Reset ( ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(455)
inline HRESULT TGFramework::Accelerator::Remove ( long KeyCode ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", KeyCode);
}

#pragma implementation_key(456)
inline TGFramework::KeyBindingPtr TGFramework::Accelerator::Add ( long CommandID, long KeyCode ) {
    struct KeyBinding * _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0003", CommandID, KeyCode);
    return KeyBindingPtr(_result, false);
}

#pragma implementation_key(457)
inline TGFramework::KeyBindingPtr TGFramework::Accelerator::KeyBinding ( long KeyCode ) {
    struct KeyBinding * _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003", KeyCode);
    return KeyBindingPtr(_result, false);
}

#pragma implementation_key(458)
inline long TGFramework::Accelerator::BuildKeyCode ( long KeyModifier, long Key ) {
    long _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", KeyModifier, Key);
    return _result;
}

//
// interface ISEAccelerators wrapper method implementations
//

#pragma implementation_key(459)
inline long TGFramework::ISEAccelerators::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(460)
inline IDispatchPtr TGFramework::ISEAccelerators::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(461)
inline TGFramework::AcceleratorPtr TGFramework::ISEAccelerators::Item ( const _variant_t & Index ) {
    struct Accelerator * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AcceleratorPtr(_result, false);
}

#pragma implementation_key(462)
inline IUnknownPtr TGFramework::ISEAccelerators::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

//
// dispinterface KeyBinding wrapper method implementations
//

#pragma implementation_key(463)
inline IDispatchPtr TGFramework::KeyBinding::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(464)
inline long TGFramework::KeyBinding::GetCommandID ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(465)
inline _bstr_t TGFramework::KeyBinding::GetCommandString ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(466)
inline _bstr_t TGFramework::KeyBinding::GetKeyString ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(467)
inline long TGFramework::KeyBinding::GetKeyCode ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

//
// interface ISEKeyBinding wrapper method implementations
//

#pragma implementation_key(468)
inline IDispatchPtr TGFramework::ISEKeyBinding::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(469)
inline long TGFramework::ISEKeyBinding::GetCommandID ( ) {
    long _result = 0;
    HRESULT _hr = get_CommandID(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(470)
inline _bstr_t TGFramework::ISEKeyBinding::GetCommandString ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CommandString(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(471)
inline _bstr_t TGFramework::ISEKeyBinding::GetKeyString ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_KeyString(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(472)
inline long TGFramework::ISEKeyBinding::GetKeyCode ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyCode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface ISEAccelerator wrapper method implementations
//

#pragma implementation_key(473)
inline long TGFramework::ISEAccelerator::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(474)
inline IDispatchPtr TGFramework::ISEAccelerator::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(475)
inline TGFramework::KeyBindingPtr TGFramework::ISEAccelerator::Item ( const _variant_t & Index ) {
    struct KeyBinding * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return KeyBindingPtr(_result, false);
}

#pragma implementation_key(476)
inline IUnknownPtr TGFramework::ISEAccelerator::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(477)
inline enum TGFramework::AcceleratorTypeConstants TGFramework::ISEAccelerator::GetType ( ) {
    enum AcceleratorTypeConstants _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(478)
inline HRESULT TGFramework::ISEAccelerator::Reset ( ) {
    HRESULT _hr = raw_Reset();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(479)
inline HRESULT TGFramework::ISEAccelerator::Remove ( long KeyCode ) {
    HRESULT _hr = raw_Remove(KeyCode);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(480)
inline TGFramework::KeyBindingPtr TGFramework::ISEAccelerator::Add ( long CommandID, long KeyCode ) {
    struct KeyBinding * _result = 0;
    HRESULT _hr = raw_Add(CommandID, KeyCode, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return KeyBindingPtr(_result, false);
}

#pragma implementation_key(481)
inline TGFramework::KeyBindingPtr TGFramework::ISEAccelerator::KeyBinding ( long KeyCode ) {
    struct KeyBinding * _result = 0;
    HRESULT _hr = raw_KeyBinding(KeyCode, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return KeyBindingPtr(_result, false);
}

#pragma implementation_key(482)
inline long TGFramework::ISEAccelerator::BuildKeyCode ( long KeyModifier, long Key ) {
    long _result = 0;
    HRESULT _hr = raw_BuildKeyCode(KeyModifier, Key, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface CommandCategories wrapper method implementations
//

#pragma implementation_key(483)
inline IDispatchPtr TGFramework::CommandCategories::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(484)
inline long TGFramework::CommandCategories::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(485)
inline TGFramework::CommandCategoryPtr TGFramework::CommandCategories::Item ( const _variant_t & Index ) {
    struct CommandCategory * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return CommandCategoryPtr(_result, false);
}

//
// dispinterface CommandCategory wrapper method implementations
//

#pragma implementation_key(486)
inline _bstr_t TGFramework::CommandCategory::GetCaption ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(487)
inline long TGFramework::CommandCategory::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(488)
inline TGFramework::CommandInfoPtr TGFramework::CommandCategory::Item ( const _variant_t & Index ) {
    struct CommandInfo * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return CommandInfoPtr(_result, false);
}

//
// interface ISECommandCategories wrapper method implementations
//

#pragma implementation_key(489)
inline IDispatchPtr TGFramework::ISECommandCategories::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(490)
inline long TGFramework::ISECommandCategories::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(491)
inline TGFramework::CommandCategoryPtr TGFramework::ISECommandCategories::Item ( const _variant_t & Index ) {
    struct CommandCategory * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CommandCategoryPtr(_result, false);
}

#pragma implementation_key(492)
inline IUnknownPtr TGFramework::ISECommandCategories::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

//
// dispinterface CommandInfo wrapper method implementations
//

#pragma implementation_key(493)
inline _bstr_t TGFramework::CommandInfo::GetCaption ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(494)
inline long TGFramework::CommandInfo::GetId ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(495)
inline _bstr_t TGFramework::CommandInfo::GetTooltip ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(496)
inline _bstr_t TGFramework::CommandInfo::GetDescription ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(497)
inline VARIANT_BOOL TGFramework::CommandInfo::GetBuiltIn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(498)
inline long TGFramework::CommandInfo::GetIcon ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(499)
inline HRESULT TGFramework::CommandInfo::SaveImage ( _bstr_t Filename, const _variant_t & Background ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x080c", (BSTR)Filename, &Background);
}

//
// interface _IEnvironmentAuto wrapper method implementations
//

#pragma implementation_key(500)
inline TGFramework::ApplicationPtr TGFramework::_IEnvironmentAuto::GetApplication ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(501)
inline _bstr_t TGFramework::_IEnvironmentAuto::GetCaption ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Caption(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(502)
inline void TGFramework::_IEnvironmentAuto::PutCaption ( _bstr_t Caption ) {
    HRESULT _hr = put_Caption(Caption);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(503)
inline int TGFramework::_IEnvironmentAuto::GetIndex ( ) {
    int _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(504)
inline _bstr_t TGFramework::_IEnvironmentAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(505)
inline TGFramework::EnvironmentsPtr TGFramework::_IEnvironmentAuto::GetParent ( ) {
    struct Environments * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return EnvironmentsPtr(_result, false);
}

#pragma implementation_key(506)
inline TGFramework::CommandBarsPtr TGFramework::_IEnvironmentAuto::GetCommandBars ( ) {
    struct CommandBars * _result = 0;
    HRESULT _hr = get_CommandBars(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CommandBarsPtr(_result, false);
}

#pragma implementation_key(507)
inline TGFramework::AcceleratorsPtr TGFramework::_IEnvironmentAuto::GetAccelerators ( ) {
    struct Accelerators * _result = 0;
    HRESULT _hr = get_Accelerators(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AcceleratorsPtr(_result, false);
}

#pragma implementation_key(508)
inline _bstr_t TGFramework::_IEnvironmentAuto::GetSubTypeName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SubTypeName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(509)
inline TGFramework::CommandCategoriesPtr TGFramework::_IEnvironmentAuto::GetCommandCategories ( ) {
    struct CommandCategories * _result = 0;
    HRESULT _hr = get_CommandCategories(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CommandCategoriesPtr(_result, false);
}

#pragma implementation_key(510)
inline _bstr_t TGFramework::_IEnvironmentAuto::GetCATID ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CATID(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(511)
inline _bstr_t TGFramework::_IEnvironmentAuto::GetCustomizeDisplayName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CustomizeDisplayName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(512)
inline TGFramework::CommandInfoPtr TGFramework::_IEnvironmentAuto::GetCommandInfo ( long CommandID ) {
    struct CommandInfo * _result = 0;
    HRESULT _hr = get_CommandInfo(CommandID, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CommandInfoPtr(_result, false);
}

//
// interface ISECommandCategory wrapper method implementations
//

#pragma implementation_key(513)
inline _bstr_t TGFramework::ISECommandCategory::GetCaption ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Caption(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(514)
inline long TGFramework::ISECommandCategory::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(515)
inline TGFramework::CommandInfoPtr TGFramework::ISECommandCategory::Item ( const _variant_t & Index ) {
    struct CommandInfo * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CommandInfoPtr(_result, false);
}

#pragma implementation_key(516)
inline IUnknownPtr TGFramework::ISECommandCategory::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

//
// interface ISECommandInfo wrapper method implementations
//

#pragma implementation_key(517)
inline _bstr_t TGFramework::ISECommandInfo::GetCaption ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Caption(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(518)
inline long TGFramework::ISECommandInfo::GetId ( ) {
    long _result = 0;
    HRESULT _hr = get_Id(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(519)
inline _bstr_t TGFramework::ISECommandInfo::GetTooltip ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Tooltip(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(520)
inline _bstr_t TGFramework::ISECommandInfo::GetDescription ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Description(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(521)
inline VARIANT_BOOL TGFramework::ISECommandInfo::GetBuiltIn ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BuiltIn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(522)
inline long TGFramework::ISECommandInfo::GetIcon ( ) {
    long _result = 0;
    HRESULT _hr = get_Icon(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(523)
inline HRESULT TGFramework::ISECommandInfo::SaveImage ( _bstr_t Filename, const _variant_t & Background ) {
    HRESULT _hr = raw_SaveImage(Filename, Background);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface Windows wrapper method implementations
//

#pragma implementation_key(524)
inline TGFramework::ApplicationPtr TGFramework::Windows::GetApplication ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(525)
inline long TGFramework::Windows::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(526)
inline IDispatchPtr TGFramework::Windows::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(527)
inline IDispatchPtr TGFramework::Windows::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return IDispatchPtr(_result, false);
}

//
// interface _IWindowsAuto wrapper method implementations
//

#pragma implementation_key(528)
inline TGFramework::ApplicationPtr TGFramework::_IWindowsAuto::GetApplication ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(529)
inline long TGFramework::_IWindowsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(530)
inline IDispatchPtr TGFramework::_IWindowsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(531)
inline IDispatchPtr TGFramework::_IWindowsAuto::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(532)
inline IUnknownPtr TGFramework::_IWindowsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

//
// dispinterface DISEApplicationEvents wrapper method implementations
//

#pragma implementation_key(533)
inline HRESULT TGFramework::DISEApplicationEvents::AfterActiveDocumentChange ( IDispatch * theDocument ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", theDocument);
}

#pragma implementation_key(534)
inline HRESULT TGFramework::DISEApplicationEvents::AfterCommandRun ( long theCommandID ) {
    return _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", theCommandID);
}

#pragma implementation_key(535)
inline HRESULT TGFramework::DISEApplicationEvents::AfterDocumentOpen ( IDispatch * theDocument ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", theDocument);
}

#pragma implementation_key(536)
inline HRESULT TGFramework::DISEApplicationEvents::AfterDocumentPrint ( IDispatch * theDocument, long hDC, SAFEARRAY * * ModelToDC, SAFEARRAY * * Rect ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0003\x6005\x6003", theDocument, hDC, ModelToDC, Rect);
}

#pragma implementation_key(537)
inline HRESULT TGFramework::DISEApplicationEvents::AfterDocumentSave ( IDispatch * theDocument ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", theDocument);
}

#pragma implementation_key(538)
inline HRESULT TGFramework::DISEApplicationEvents::AfterEnvironmentActivate ( IDispatch * theEnvironment ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", theEnvironment);
}

#pragma implementation_key(539)
inline HRESULT TGFramework::DISEApplicationEvents::AfterNewDocumentOpen ( IDispatch * theDocument ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", theDocument);
}

#pragma implementation_key(540)
inline HRESULT TGFramework::DISEApplicationEvents::AfterNewWindow ( IDispatch * theWindow ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", theWindow);
}

#pragma implementation_key(541)
inline HRESULT TGFramework::DISEApplicationEvents::AfterWindowActivate ( IDispatch * theWindow ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", theWindow);
}

#pragma implementation_key(542)
inline HRESULT TGFramework::DISEApplicationEvents::BeforeCommandRun ( long theCommandID ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", theCommandID);
}

#pragma implementation_key(543)
inline HRESULT TGFramework::DISEApplicationEvents::BeforeDocumentClose ( IDispatch * theDocument ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", theDocument);
}

#pragma implementation_key(544)
inline HRESULT TGFramework::DISEApplicationEvents::BeforeDocumentPrint ( IDispatch * theDocument, long hDC, SAFEARRAY * * ModelToDC, SAFEARRAY * * Rect ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0003\x6005\x6003", theDocument, hDC, ModelToDC, Rect);
}

#pragma implementation_key(545)
inline HRESULT TGFramework::DISEApplicationEvents::BeforeEnvironmentDeactivate ( IDispatch * theEnvironment ) {
    return _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", theEnvironment);
}

#pragma implementation_key(546)
inline HRESULT TGFramework::DISEApplicationEvents::BeforeWindowDeactivate ( IDispatch * theWindow ) {
    return _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", theWindow);
}

#pragma implementation_key(547)
inline HRESULT TGFramework::DISEApplicationEvents::BeforeQuit ( ) {
    return _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(548)
inline HRESULT TGFramework::DISEApplicationEvents::BeforeDocumentSave ( IDispatch * theDocument ) {
    return _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", theDocument);
}

//
// interface ISEApplicationEvents wrapper method implementations
//

#pragma implementation_key(549)
inline HRESULT TGFramework::ISEApplicationEvents::AfterActiveDocumentChange ( IDispatch * theDocument ) {
    HRESULT _hr = raw_AfterActiveDocumentChange(theDocument);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(550)
inline HRESULT TGFramework::ISEApplicationEvents::AfterCommandRun ( long theCommandID ) {
    HRESULT _hr = raw_AfterCommandRun(theCommandID);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(551)
inline HRESULT TGFramework::ISEApplicationEvents::AfterDocumentOpen ( IDispatch * theDocument ) {
    HRESULT _hr = raw_AfterDocumentOpen(theDocument);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(552)
inline HRESULT TGFramework::ISEApplicationEvents::AfterDocumentPrint ( IDispatch * theDocument, long hDC, double * ModelToDC, long * Rect ) {
    HRESULT _hr = raw_AfterDocumentPrint(theDocument, hDC, ModelToDC, Rect);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(553)
inline HRESULT TGFramework::ISEApplicationEvents::AfterDocumentSave ( IDispatch * theDocument ) {
    HRESULT _hr = raw_AfterDocumentSave(theDocument);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(554)
inline HRESULT TGFramework::ISEApplicationEvents::AfterEnvironmentActivate ( IDispatch * theEnvironment ) {
    HRESULT _hr = raw_AfterEnvironmentActivate(theEnvironment);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(555)
inline HRESULT TGFramework::ISEApplicationEvents::AfterNewDocumentOpen ( IDispatch * theDocument ) {
    HRESULT _hr = raw_AfterNewDocumentOpen(theDocument);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(556)
inline HRESULT TGFramework::ISEApplicationEvents::AfterNewWindow ( IDispatch * theWindow ) {
    HRESULT _hr = raw_AfterNewWindow(theWindow);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(557)
inline HRESULT TGFramework::ISEApplicationEvents::AfterWindowActivate ( IDispatch * theWindow ) {
    HRESULT _hr = raw_AfterWindowActivate(theWindow);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(558)
inline HRESULT TGFramework::ISEApplicationEvents::BeforeCommandRun ( long theCommandID ) {
    HRESULT _hr = raw_BeforeCommandRun(theCommandID);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(559)
inline HRESULT TGFramework::ISEApplicationEvents::BeforeDocumentClose ( IDispatch * theDocument ) {
    HRESULT _hr = raw_BeforeDocumentClose(theDocument);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(560)
inline HRESULT TGFramework::ISEApplicationEvents::BeforeDocumentPrint ( IDispatch * theDocument, long hDC, double * ModelToDC, long * Rect ) {
    HRESULT _hr = raw_BeforeDocumentPrint(theDocument, hDC, ModelToDC, Rect);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(561)
inline HRESULT TGFramework::ISEApplicationEvents::BeforeEnvironmentDeactivate ( IDispatch * theEnvironment ) {
    HRESULT _hr = raw_BeforeEnvironmentDeactivate(theEnvironment);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(562)
inline HRESULT TGFramework::ISEApplicationEvents::BeforeWindowDeactivate ( IDispatch * theWindow ) {
    HRESULT _hr = raw_BeforeWindowDeactivate(theWindow);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(563)
inline HRESULT TGFramework::ISEApplicationEvents::BeforeQuit ( ) {
    HRESULT _hr = raw_BeforeQuit();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(564)
inline HRESULT TGFramework::ISEApplicationEvents::BeforeDocumentSave ( IDispatch * theDocument ) {
    HRESULT _hr = raw_BeforeDocumentSave(theDocument);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface DISEApplicationWindowEvents wrapper method implementations
//

#pragma implementation_key(565)
inline HRESULT TGFramework::DISEApplicationWindowEvents::WindowProc ( long hWnd, long nMsg, long wParam, long lParam ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0003\x0003", hWnd, nMsg, wParam, lParam);
}

//
// interface ISEApplicationWindowEvents wrapper method implementations
//

#pragma implementation_key(566)
inline HRESULT TGFramework::ISEApplicationWindowEvents::WindowProc ( long hWnd, long nMsg, long wParam, long lParam ) {
    HRESULT _hr = raw_WindowProc(hWnd, nMsg, wParam, lParam);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface DISEFileUIEvents wrapper method implementations
//

#pragma implementation_key(567)
inline HRESULT TGFramework::DISEFileUIEvents::OnFileOpenUI ( BSTR * Filename, BSTR * AppendToTitle ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008\x4008", Filename, AppendToTitle);
}

#pragma implementation_key(568)
inline HRESULT TGFramework::DISEFileUIEvents::OnFileSaveAsUI ( BSTR * Filename, BSTR * AppendToTitle ) {
    return _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008\x4008", Filename, AppendToTitle);
}

#pragma implementation_key(569)
inline HRESULT TGFramework::DISEFileUIEvents::OnFileNewUI ( BSTR * Filename, BSTR * AppendToTitle ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008\x4008", Filename, AppendToTitle);
}

#pragma implementation_key(570)
inline HRESULT TGFramework::DISEFileUIEvents::OnFileSaveAsImageUI ( BSTR * Filename, BSTR * AppendToTitle, long * Width, long * Height, enum SeImageQualityType * ImageQuality ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008\x4008\x4003\x4003\x4003", Filename, AppendToTitle, Width, Height, ImageQuality);
}

#pragma implementation_key(571)
inline HRESULT TGFramework::DISEFileUIEvents::OnPlacePartUI ( BSTR * Filename, BSTR * AppendToTitle ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008\x4008", Filename, AppendToTitle);
}

#pragma implementation_key(572)
inline HRESULT TGFramework::DISEFileUIEvents::OnCreateInPlacePartUI ( BSTR * Filename, BSTR * AppendToTitle, BSTR * Template ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008\x4008\x4008", Filename, AppendToTitle, Template);
}

//
// interface ISEFileUIEvents wrapper method implementations
//

#pragma implementation_key(573)
inline HRESULT TGFramework::ISEFileUIEvents::OnFileOpenUI ( BSTR * Filename, BSTR * AppendToTitle ) {
    HRESULT _hr = raw_OnFileOpenUI(Filename, AppendToTitle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(574)
inline HRESULT TGFramework::ISEFileUIEvents::OnFileSaveAsUI ( BSTR * Filename, BSTR * AppendToTitle ) {
    HRESULT _hr = raw_OnFileSaveAsUI(Filename, AppendToTitle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(575)
inline HRESULT TGFramework::ISEFileUIEvents::OnFileNewUI ( BSTR * Filename, BSTR * AppendToTitle ) {
    HRESULT _hr = raw_OnFileNewUI(Filename, AppendToTitle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(576)
inline HRESULT TGFramework::ISEFileUIEvents::OnFileSaveAsImageUI ( BSTR * Filename, BSTR * AppendToTitle, long * Width, long * Height, enum SeImageQualityType * ImageQuality ) {
    HRESULT _hr = raw_OnFileSaveAsImageUI(Filename, AppendToTitle, Width, Height, ImageQuality);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(577)
inline HRESULT TGFramework::ISEFileUIEvents::OnPlacePartUI ( BSTR * Filename, BSTR * AppendToTitle ) {
    HRESULT _hr = raw_OnPlacePartUI(Filename, AppendToTitle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(578)
inline HRESULT TGFramework::ISEFileUIEvents::OnCreateInPlacePartUI ( BSTR * Filename, BSTR * AppendToTitle, BSTR * Template ) {
    HRESULT _hr = raw_OnCreateInPlacePartUI(Filename, AppendToTitle, Template);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface DISEBeforeFileSaveAsEvents wrapper method implementations
//

#pragma implementation_key(579)
inline HRESULT TGFramework::DISEBeforeFileSaveAsEvents::OnBeforeFileSaveAsUI ( _bstr_t TemplatePath ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)TemplatePath);
}

//
// interface ISEBeforeFileSaveAsEvents wrapper method implementations
//

#pragma implementation_key(580)
inline HRESULT TGFramework::ISEBeforeFileSaveAsEvents::OnBeforeFileSaveAsUI ( _bstr_t TemplatePath ) {
    HRESULT _hr = raw_OnBeforeFileSaveAsUI(TemplatePath);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface DISECommand wrapper method implementations
//

#pragma implementation_key(581)
inline TGFramework::DISEMousePtr TGFramework::DISECommand::GetMouse ( ) {
    struct DISEMouse * _result = 0;
    _com_dispatch_method(this, 0x60010000, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DISEMousePtr(_result, false);
}

#pragma implementation_key(582)
inline IUnknownPtr TGFramework::DISECommand::GetWindow ( ) {
    struct IUnknown * _result = 0;
    _com_dispatch_method(this, 0x60010001, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(583)
inline VARIANT_BOOL TGFramework::DISECommand::GetDone ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60010002, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(584)
inline void TGFramework::DISECommand::PutDone ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x60010002, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(585)
inline long TGFramework::DISECommand::GetOnEditOwnerChange ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x60010004, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(586)
inline void TGFramework::DISECommand::PutOnEditOwnerChange ( long _arg1 ) {
    _com_dispatch_method(this, 0x60010004, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(587)
inline long TGFramework::DISECommand::GetOnEnvironmentChange ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x60010006, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(588)
inline void TGFramework::DISECommand::PutOnEnvironmentChange ( long _arg1 ) {
    _com_dispatch_method(this, 0x60010006, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(589)
inline HRESULT TGFramework::DISECommand::Start ( ) {
    return _com_dispatch_method(this, 0x60010008, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// dispinterface DISEMouse wrapper method implementations
//

#pragma implementation_key(590)
inline void TGFramework::DISEMouse::PutScaleMode ( long _arg1 ) {
    _com_dispatch_method(this, 0x60010000, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(591)
inline long TGFramework::DISEMouse::GetScaleMode ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x60010000, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(592)
inline VARIANT_BOOL TGFramework::DISEMouse::GetEnabledMove ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60010002, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(593)
inline void TGFramework::DISEMouse::PutEnabledMove ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x60010002, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(594)
inline IDispatchPtr TGFramework::DISEMouse::GetLastEventWindow ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60010004, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(595)
inline IDispatchPtr TGFramework::DISEMouse::GetLastUpEventWindow ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60010005, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(596)
inline IDispatchPtr TGFramework::DISEMouse::GetLastDownEventWindow ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60010006, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(597)
inline IDispatchPtr TGFramework::DISEMouse::GetLastMoveEventWindow ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60010007, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(598)
inline short TGFramework::DISEMouse::GetLastEventShift ( ) {
    short _result = 0;
    _com_dispatch_method(this, 0x60010008, DISPATCH_PROPERTYGET, VT_I2, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(599)
inline short TGFramework::DISEMouse::GetLastUpEventShift ( ) {
    short _result = 0;
    _com_dispatch_method(this, 0x60010009, DISPATCH_PROPERTYGET, VT_I2, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(600)
inline short TGFramework::DISEMouse::GetLastDownEventShift ( ) {
    short _result = 0;
    _com_dispatch_method(this, 0x6001000a, DISPATCH_PROPERTYGET, VT_I2, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(601)
inline short TGFramework::DISEMouse::GetLastMoveEventShift ( ) {
    short _result = 0;
    _com_dispatch_method(this, 0x6001000b, DISPATCH_PROPERTYGET, VT_I2, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(602)
inline short TGFramework::DISEMouse::GetLastEventButton ( ) {
    short _result = 0;
    _com_dispatch_method(this, 0x6001000c, DISPATCH_PROPERTYGET, VT_I2, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(603)
inline short TGFramework::DISEMouse::GetLastUpEventButton ( ) {
    short _result = 0;
    _com_dispatch_method(this, 0x6001000d, DISPATCH_PROPERTYGET, VT_I2, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(604)
inline short TGFramework::DISEMouse::GetLastDownEventButton ( ) {
    short _result = 0;
    _com_dispatch_method(this, 0x6001000e, DISPATCH_PROPERTYGET, VT_I2, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(605)
inline short TGFramework::DISEMouse::GetLastMoveEventButton ( ) {
    short _result = 0;
    _com_dispatch_method(this, 0x6001000f, DISPATCH_PROPERTYGET, VT_I2, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(606)
inline double TGFramework::DISEMouse::GetLastEventX ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x60010010, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(607)
inline double TGFramework::DISEMouse::GetLastEventY ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x60010011, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(608)
inline double TGFramework::DISEMouse::GetLastEventZ ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x60010012, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(609)
inline double TGFramework::DISEMouse::GetLastUpEventX ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x60010013, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(610)
inline double TGFramework::DISEMouse::GetLastUpEventY ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x60010014, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(611)
inline double TGFramework::DISEMouse::GetLastUpEventZ ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x60010015, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(612)
inline double TGFramework::DISEMouse::GetLastDownEventX ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x60010016, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(613)
inline double TGFramework::DISEMouse::GetLastDownEventY ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x60010017, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(614)
inline double TGFramework::DISEMouse::GetLastDownEventZ ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x60010018, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(615)
inline double TGFramework::DISEMouse::GetLastMoveEventX ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x60010019, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(616)
inline double TGFramework::DISEMouse::GetLastMoveEventY ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6001001a, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(617)
inline double TGFramework::DISEMouse::GetLastMoveEventZ ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6001001b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(618)
inline long TGFramework::DISEMouse::GetWindowTypes ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6001001c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(619)
inline void TGFramework::DISEMouse::PutWindowTypes ( long _arg1 ) {
    _com_dispatch_method(this, 0x6001001c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(620)
inline long TGFramework::DISEMouse::GetLastEventType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6001001e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(621)
inline VARIANT_BOOL TGFramework::DISEMouse::GetEnabledDrag ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6001001f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(622)
inline void TGFramework::DISEMouse::PutEnabledDrag ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6001001f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(623)
inline long TGFramework::DISEMouse::GetLocateMode ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x60010021, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(624)
inline void TGFramework::DISEMouse::PutLocateMode ( long _arg1 ) {
    _com_dispatch_method(this, 0x60010021, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(625)
inline long TGFramework::DISEMouse::GetDynamicsMode ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x60010023, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(626)
inline void TGFramework::DISEMouse::PutDynamicsMode ( long _arg1 ) {
    _com_dispatch_method(this, 0x60010023, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(627)
inline long TGFramework::DISEMouse::GetPauseLocate ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x60010025, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(628)
inline void TGFramework::DISEMouse::PutPauseLocate ( long _arg1 ) {
    _com_dispatch_method(this, 0x60010025, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(629)
inline HRESULT TGFramework::DISEMouse::ClearLocateFilter ( ) {
    return _com_dispatch_method(this, 0x60010027, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(630)
inline HRESULT TGFramework::DISEMouse::AddToLocateFilter ( long lFilter ) {
    return _com_dispatch_method(this, 0x60010028, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", lFilter);
}

#pragma implementation_key(631)
inline HRESULT TGFramework::DISEMouse::PointOnGraphic ( long * PointOnGraphicFlag, double * PointOnGraphic_X, double * PointOnGraphic_Y, double * PointOnGraphic_Z ) {
    return _com_dispatch_method(this, 0x60020000, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4005\x4005\x4005", PointOnGraphicFlag, PointOnGraphic_X, PointOnGraphic_Y, PointOnGraphic_Z);
}

#pragma implementation_key(632)
inline VARIANT_BOOL TGFramework::DISEMouse::GetInterDocumentLocate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60020001, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(633)
inline void TGFramework::DISEMouse::PutInterDocumentLocate ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x60020001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(634)
inline VARIANT_BOOL TGFramework::DISEMouse::GetLocateFrontToBack ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60030000, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(635)
inline void TGFramework::DISEMouse::PutLocateFrontToBack ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x60030000, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(636)
inline VARIANT_BOOL TGFramework::DISEMouse::GetPathfinderLocate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60040000, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(637)
inline void TGFramework::DISEMouse::PutPathfinderLocate ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x60040000, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

//
// interface ISEMouse wrapper method implementations
//

#pragma implementation_key(638)
inline void TGFramework::ISEMouse::PutScaleMode ( long plScaleMode ) {
    HRESULT _hr = put_ScaleMode(plScaleMode);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(639)
inline long TGFramework::ISEMouse::GetScaleMode ( ) {
    long _result = 0;
    HRESULT _hr = get_ScaleMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(640)
inline VARIANT_BOOL TGFramework::ISEMouse::GetEnabledMove ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_EnabledMove(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(641)
inline void TGFramework::ISEMouse::PutEnabledMove ( VARIANT_BOOL pbMoveEnabled ) {
    HRESULT _hr = put_EnabledMove(pbMoveEnabled);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(642)
inline IDispatchPtr TGFramework::ISEMouse::GetLastEventWindow ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_LastEventWindow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(643)
inline IDispatchPtr TGFramework::ISEMouse::GetLastUpEventWindow ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_LastUpEventWindow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(644)
inline IDispatchPtr TGFramework::ISEMouse::GetLastDownEventWindow ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_LastDownEventWindow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(645)
inline IDispatchPtr TGFramework::ISEMouse::GetLastMoveEventWindow ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_LastMoveEventWindow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(646)
inline short TGFramework::ISEMouse::GetLastEventShift ( ) {
    short _result = 0;
    HRESULT _hr = get_LastEventShift(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(647)
inline short TGFramework::ISEMouse::GetLastUpEventShift ( ) {
    short _result = 0;
    HRESULT _hr = get_LastUpEventShift(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(648)
inline short TGFramework::ISEMouse::GetLastDownEventShift ( ) {
    short _result = 0;
    HRESULT _hr = get_LastDownEventShift(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(649)
inline short TGFramework::ISEMouse::GetLastMoveEventShift ( ) {
    short _result = 0;
    HRESULT _hr = get_LastMoveEventShift(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(650)
inline short TGFramework::ISEMouse::GetLastEventButton ( ) {
    short _result = 0;
    HRESULT _hr = get_LastEventButton(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(651)
inline short TGFramework::ISEMouse::GetLastUpEventButton ( ) {
    short _result = 0;
    HRESULT _hr = get_LastUpEventButton(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(652)
inline short TGFramework::ISEMouse::GetLastDownEventButton ( ) {
    short _result = 0;
    HRESULT _hr = get_LastDownEventButton(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(653)
inline short TGFramework::ISEMouse::GetLastMoveEventButton ( ) {
    short _result = 0;
    HRESULT _hr = get_LastMoveEventButton(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(654)
inline double TGFramework::ISEMouse::GetLastEventX ( ) {
    double _result = 0;
    HRESULT _hr = get_LastEventX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(655)
inline double TGFramework::ISEMouse::GetLastEventY ( ) {
    double _result = 0;
    HRESULT _hr = get_LastEventY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(656)
inline double TGFramework::ISEMouse::GetLastEventZ ( ) {
    double _result = 0;
    HRESULT _hr = get_LastEventZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(657)
inline double TGFramework::ISEMouse::GetLastUpEventX ( ) {
    double _result = 0;
    HRESULT _hr = get_LastUpEventX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(658)
inline double TGFramework::ISEMouse::GetLastUpEventY ( ) {
    double _result = 0;
    HRESULT _hr = get_LastUpEventY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(659)
inline double TGFramework::ISEMouse::GetLastUpEventZ ( ) {
    double _result = 0;
    HRESULT _hr = get_LastUpEventZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(660)
inline double TGFramework::ISEMouse::GetLastDownEventX ( ) {
    double _result = 0;
    HRESULT _hr = get_LastDownEventX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(661)
inline double TGFramework::ISEMouse::GetLastDownEventY ( ) {
    double _result = 0;
    HRESULT _hr = get_LastDownEventY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(662)
inline double TGFramework::ISEMouse::GetLastDownEventZ ( ) {
    double _result = 0;
    HRESULT _hr = get_LastDownEventZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(663)
inline double TGFramework::ISEMouse::GetLastMoveEventX ( ) {
    double _result = 0;
    HRESULT _hr = get_LastMoveEventX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(664)
inline double TGFramework::ISEMouse::GetLastMoveEventY ( ) {
    double _result = 0;
    HRESULT _hr = get_LastMoveEventY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(665)
inline double TGFramework::ISEMouse::GetLastMoveEventZ ( ) {
    double _result = 0;
    HRESULT _hr = get_LastMoveEventZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(666)
inline long TGFramework::ISEMouse::GetWindowTypes ( ) {
    long _result = 0;
    HRESULT _hr = get_WindowTypes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(667)
inline void TGFramework::ISEMouse::PutWindowTypes ( long plTypes ) {
    HRESULT _hr = put_WindowTypes(plTypes);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(668)
inline long TGFramework::ISEMouse::GetLastEventType ( ) {
    long _result = 0;
    HRESULT _hr = get_LastEventType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(669)
inline VARIANT_BOOL TGFramework::ISEMouse::GetEnabledDrag ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_EnabledDrag(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(670)
inline void TGFramework::ISEMouse::PutEnabledDrag ( VARIANT_BOOL pbEnabledDrag ) {
    HRESULT _hr = put_EnabledDrag(pbEnabledDrag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(671)
inline long TGFramework::ISEMouse::GetLocateMode ( ) {
    long _result = 0;
    HRESULT _hr = get_LocateMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(672)
inline void TGFramework::ISEMouse::PutLocateMode ( long plLocateMode ) {
    HRESULT _hr = put_LocateMode(plLocateMode);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(673)
inline long TGFramework::ISEMouse::GetDynamicsMode ( ) {
    long _result = 0;
    HRESULT _hr = get_DynamicsMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(674)
inline void TGFramework::ISEMouse::PutDynamicsMode ( long plDynamicsMode ) {
    HRESULT _hr = put_DynamicsMode(plDynamicsMode);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(675)
inline long TGFramework::ISEMouse::GetPauseLocate ( ) {
    long _result = 0;
    HRESULT _hr = get_PauseLocate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(676)
inline void TGFramework::ISEMouse::PutPauseLocate ( long plPauseLocate ) {
    HRESULT _hr = put_PauseLocate(plPauseLocate);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(677)
inline HRESULT TGFramework::ISEMouse::ClearLocateFilter ( ) {
    HRESULT _hr = raw_ClearLocateFilter();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(678)
inline HRESULT TGFramework::ISEMouse::AddToLocateFilter ( long lFilter ) {
    HRESULT _hr = raw_AddToLocateFilter(lFilter);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISEMouseEx wrapper method implementations
//

#pragma implementation_key(679)
inline HRESULT TGFramework::ISEMouseEx::PointOnGraphic ( long * PointOnGraphicFlag, double * PointOnGraphic_X, double * PointOnGraphic_Y, double * PointOnGraphic_Z ) {
    HRESULT _hr = raw_PointOnGraphic(PointOnGraphicFlag, PointOnGraphic_X, PointOnGraphic_Y, PointOnGraphic_Z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(680)
inline VARIANT_BOOL TGFramework::ISEMouseEx::GetInterDocumentLocate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_InterDocumentLocate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(681)
inline void TGFramework::ISEMouseEx::PutInterDocumentLocate ( VARIANT_BOOL plInterDocumentLocate ) {
    HRESULT _hr = put_InterDocumentLocate(plInterDocumentLocate);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISEMouseEx2 wrapper method implementations
//

#pragma implementation_key(682)
inline VARIANT_BOOL TGFramework::ISEMouseEx2::GetLocateFrontToBack ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_LocateFrontToBack(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(683)
inline void TGFramework::ISEMouseEx2::PutLocateFrontToBack ( VARIANT_BOOL LocateFrontToBack ) {
    HRESULT _hr = put_LocateFrontToBack(LocateFrontToBack);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISEMouseEx3 wrapper method implementations
//

#pragma implementation_key(684)
inline VARIANT_BOOL TGFramework::ISEMouseEx3::GetPathfinderLocate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_PathfinderLocate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(685)
inline void TGFramework::ISEMouseEx3::PutPathfinderLocate ( VARIANT_BOOL PathfinderLocate ) {
    HRESULT _hr = put_PathfinderLocate(PathfinderLocate);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// dispinterface DISEMouseEvents wrapper method implementations
//

#pragma implementation_key(686)
inline HRESULT TGFramework::DISEMouseEvents::MouseDown ( short sButton, short sShift, double dX, double dY, double dZ, IDispatch * pWindowDispatch, long lKeyPointType, IDispatch * pGraphicDispatch ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0002\x0002\x0005\x0005\x0005\x0009\x0003\x0009", sButton, sShift, dX, dY, dZ, pWindowDispatch, lKeyPointType, pGraphicDispatch);
}

#pragma implementation_key(687)
inline HRESULT TGFramework::DISEMouseEvents::MouseUp ( short sButton, short sShift, double dX, double dY, double dZ, IDispatch * pWindowDispatch, long lKeyPointType, IDispatch * pGraphicDispatch ) {
    return _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0002\x0002\x0005\x0005\x0005\x0009\x0003\x0009", sButton, sShift, dX, dY, dZ, pWindowDispatch, lKeyPointType, pGraphicDispatch);
}

#pragma implementation_key(688)
inline HRESULT TGFramework::DISEMouseEvents::MouseMove ( short sButton, short sShift, double dX, double dY, double dZ, IDispatch * pWindowDispatch, long lKeyPointType, IDispatch * pGraphicDispatch ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0002\x0002\x0005\x0005\x0005\x0009\x0003\x0009", sButton, sShift, dX, dY, dZ, pWindowDispatch, lKeyPointType, pGraphicDispatch);
}

#pragma implementation_key(689)
inline HRESULT TGFramework::DISEMouseEvents::MouseClick ( short sButton, short sShift, double dX, double dY, double dZ, IDispatch * pWindowDispatch, long lKeyPointType, IDispatch * pGraphicDispatch ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0002\x0002\x0005\x0005\x0005\x0009\x0003\x0009", sButton, sShift, dX, dY, dZ, pWindowDispatch, lKeyPointType, pGraphicDispatch);
}

#pragma implementation_key(690)
inline HRESULT TGFramework::DISEMouseEvents::MouseDblClick ( short sButton, short sShift, double dX, double dY, double dZ, IDispatch * pWindowDispatch, long lKeyPointType, IDispatch * pGraphicDispatch ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0002\x0002\x0005\x0005\x0005\x0009\x0003\x0009", sButton, sShift, dX, dY, dZ, pWindowDispatch, lKeyPointType, pGraphicDispatch);
}

#pragma implementation_key(691)
inline HRESULT TGFramework::DISEMouseEvents::MouseDrag ( short sButton, short sShift, double dX, double dY, double dZ, IDispatch * pWindowDispatch, short DragState, long lKeyPointType, IDispatch * pGraphicDispatch ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0002\x0002\x0005\x0005\x0005\x0009\x0002\x0003\x0009", sButton, sShift, dX, dY, dZ, pWindowDispatch, DragState, lKeyPointType, pGraphicDispatch);
}

//
// interface ISEMouseEvents wrapper method implementations
//

#pragma implementation_key(692)
inline HRESULT TGFramework::ISEMouseEvents::MouseDown ( short sButton, short sShift, double dX, double dY, double dZ, IDispatch * pWindowDispatch, long lKeyPointType, IDispatch * pGraphicDispatch ) {
    HRESULT _hr = raw_MouseDown(sButton, sShift, dX, dY, dZ, pWindowDispatch, lKeyPointType, pGraphicDispatch);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(693)
inline HRESULT TGFramework::ISEMouseEvents::MouseUp ( short sButton, short sShift, double dX, double dY, double dZ, IDispatch * pWindowDispatch, long lKeyPointType, IDispatch * pGraphicDispatch ) {
    HRESULT _hr = raw_MouseUp(sButton, sShift, dX, dY, dZ, pWindowDispatch, lKeyPointType, pGraphicDispatch);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(694)
inline HRESULT TGFramework::ISEMouseEvents::MouseMove ( short sButton, short sShift, double dX, double dY, double dZ, IDispatch * pWindowDispatch, long lKeyPointType, IDispatch * pGraphicDispatch ) {
    HRESULT _hr = raw_MouseMove(sButton, sShift, dX, dY, dZ, pWindowDispatch, lKeyPointType, pGraphicDispatch);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(695)
inline HRESULT TGFramework::ISEMouseEvents::MouseClick ( short sButton, short sShift, double dX, double dY, double dZ, IDispatch * pWindowDispatch, long lKeyPointType, IDispatch * pGraphicDispatch ) {
    HRESULT _hr = raw_MouseClick(sButton, sShift, dX, dY, dZ, pWindowDispatch, lKeyPointType, pGraphicDispatch);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(696)
inline HRESULT TGFramework::ISEMouseEvents::MouseDblClick ( short sButton, short sShift, double dX, double dY, double dZ, IDispatch * pWindowDispatch, long lKeyPointType, IDispatch * pGraphicDispatch ) {
    HRESULT _hr = raw_MouseDblClick(sButton, sShift, dX, dY, dZ, pWindowDispatch, lKeyPointType, pGraphicDispatch);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(697)
inline HRESULT TGFramework::ISEMouseEvents::MouseDrag ( short sButton, short sShift, double dX, double dY, double dZ, IDispatch * pWindowDispatch, short DragState, long lKeyPointType, IDispatch * pGraphicDispatch ) {
    HRESULT _hr = raw_MouseDrag(sButton, sShift, dX, dY, dZ, pWindowDispatch, DragState, lKeyPointType, pGraphicDispatch);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISECommand wrapper method implementations
//

#pragma implementation_key(698)
inline TGFramework::DISEMousePtr TGFramework::ISECommand::GetMouse ( ) {
    struct DISEMouse * _result = 0;
    HRESULT _hr = get_Mouse(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DISEMousePtr(_result, false);
}

#pragma implementation_key(699)
inline IUnknownPtr TGFramework::ISECommand::GetWindow ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_Window(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(700)
inline VARIANT_BOOL TGFramework::ISECommand::GetDone ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Done(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(701)
inline void TGFramework::ISECommand::PutDone ( VARIANT_BOOL pbDone ) {
    HRESULT _hr = put_Done(pbDone);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(702)
inline long TGFramework::ISECommand::GetOnEditOwnerChange ( ) {
    long _result = 0;
    HRESULT _hr = get_OnEditOwnerChange(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(703)
inline void TGFramework::ISECommand::PutOnEditOwnerChange ( long plContinueOnChange ) {
    HRESULT _hr = put_OnEditOwnerChange(plContinueOnChange);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(704)
inline long TGFramework::ISECommand::GetOnEnvironmentChange ( ) {
    long _result = 0;
    HRESULT _hr = get_OnEnvironmentChange(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(705)
inline void TGFramework::ISECommand::PutOnEnvironmentChange ( long plContinueOnChange ) {
    HRESULT _hr = put_OnEnvironmentChange(plContinueOnChange);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(706)
inline HRESULT TGFramework::ISECommand::Start ( ) {
    HRESULT _hr = raw_Start();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface DISECommandWindowEvents wrapper method implementations
//

#pragma implementation_key(707)
inline HRESULT TGFramework::DISECommandWindowEvents::WindowProc ( IDispatch * pUnkDoc, IDispatch * pUnkView, long nMsg, long wParam, long lParam, long * lResult ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0009\x0003\x0003\x0003\x4003", pUnkDoc, pUnkView, nMsg, wParam, lParam, lResult);
}

//
// interface ISECommandWindowEvents wrapper method implementations
//

#pragma implementation_key(708)
inline TGFramework::LONG_PTR TGFramework::ISECommandWindowEvents::WindowProc ( IDispatch * pTheDoc, IDispatch * pTheView, unsigned int nMsg, UINT_PTR wParam, LONG_PTR lParam ) {
    LONG_PTR _result;
    HRESULT _hr = raw_WindowProc(pTheDoc, pTheView, nMsg, wParam, lParam, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface DISECommandEvents wrapper method implementations
//

#pragma implementation_key(709)
inline HRESULT TGFramework::DISECommandEvents::Activate ( ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(710)
inline HRESULT TGFramework::DISECommandEvents::Deactivate ( ) {
    return _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(711)
inline HRESULT TGFramework::DISECommandEvents::Terminate ( ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(712)
inline HRESULT TGFramework::DISECommandEvents::Idle ( long lCount, VARIANT_BOOL * pbMore ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x400b", lCount, pbMore);
}

#pragma implementation_key(713)
inline HRESULT TGFramework::DISECommandEvents::KeyDown ( short * KeyCode, short Shift ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4002\x0002", KeyCode, Shift);
}

#pragma implementation_key(714)
inline HRESULT TGFramework::DISECommandEvents::KeyPress ( short * KeyAscii ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4002", KeyAscii);
}

#pragma implementation_key(715)
inline HRESULT TGFramework::DISECommandEvents::KeyUp ( short * KeyCode, short Shift ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4002\x0002", KeyCode, Shift);
}

//
// interface ISECommandEvents wrapper method implementations
//

#pragma implementation_key(716)
inline HRESULT TGFramework::ISECommandEvents::Activate ( ) {
    HRESULT _hr = raw_Activate();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(717)
inline HRESULT TGFramework::ISECommandEvents::Deactivate ( ) {
    HRESULT _hr = raw_Deactivate();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(718)
inline HRESULT TGFramework::ISECommandEvents::Terminate ( ) {
    HRESULT _hr = raw_Terminate();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(719)
inline HRESULT TGFramework::ISECommandEvents::Idle ( long lCount, VARIANT_BOOL * pbMore ) {
    HRESULT _hr = raw_Idle(lCount, pbMore);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(720)
inline HRESULT TGFramework::ISECommandEvents::KeyDown ( short * KeyCode, short Shift ) {
    HRESULT _hr = raw_KeyDown(KeyCode, Shift);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(721)
inline HRESULT TGFramework::ISECommandEvents::KeyPress ( short * KeyAscii ) {
    HRESULT _hr = raw_KeyPress(KeyAscii);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(722)
inline HRESULT TGFramework::ISECommandEvents::KeyUp ( short * KeyCode, short Shift ) {
    HRESULT _hr = raw_KeyUp(KeyCode, Shift);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface AddIns wrapper method implementations
//

#pragma implementation_key(723)
inline IDispatchPtr TGFramework::AddIns::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(724)
inline long TGFramework::AddIns::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(725)
inline TGFramework::AddInPtr TGFramework::AddIns::Item ( const _variant_t & Index ) {
    struct AddIn * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AddInPtr(_result, false);
}

#pragma implementation_key(726)
inline HRESULT TGFramework::AddIns::Update ( ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// dispinterface AddIn wrapper method implementations
//

#pragma implementation_key(727)
inline IDispatchPtr TGFramework::AddIn::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(728)
inline IUnknownPtr TGFramework::AddIn::GetAddInEvents ( ) {
    struct IUnknown * _result = 0;
    _com_dispatch_method(this, 0x10030002, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(729)
inline VARIANT_BOOL TGFramework::AddIn::GetConnect ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(730)
inline void TGFramework::AddIn::PutConnect ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(731)
inline _bstr_t TGFramework::AddIn::GetDescription ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(732)
inline void TGFramework::AddIn::PutDescription ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(733)
inline _bstr_t TGFramework::AddIn::GetGUID ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(734)
inline long TGFramework::AddIn::GetGuiVersion ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(735)
inline void TGFramework::AddIn::PutGuiVersion ( long _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(736)
inline IDispatchPtr TGFramework::AddIn::GetObject ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(737)
inline void TGFramework::AddIn::PutObject ( IDispatch * _arg1 ) {
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(738)
inline _bstr_t TGFramework::AddIn::GetProgID ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(739)
inline VARIANT_BOOL TGFramework::AddIn::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(740)
inline void TGFramework::AddIn::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(741)
inline HRESULT TGFramework::AddIn::SetAddInInfo ( long InstanceHandle, _bstr_t EnvironmentCatID, _bstr_t CategoryName, long IDColorBitmapMedium, long IDColorBitmapLarge, long IDMonochromeBitmapMedium, long IDMonochromeBitmapLarge, long NumberOfCommands, SAFEARRAY * * CommandNames, SAFEARRAY * * CommandIDs ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0008\x0008\x0003\x0003\x0003\x0003\x0003\x6008\x6003", InstanceHandle, (BSTR)EnvironmentCatID, (BSTR)CategoryName, IDColorBitmapMedium, IDColorBitmapLarge, IDMonochromeBitmapMedium, IDMonochromeBitmapLarge, NumberOfCommands, CommandNames, CommandIDs);
}

#pragma implementation_key(742)
inline long TGFramework::AddIn::AddCommand ( _bstr_t EnvironmentCatID, _bstr_t CommandName, long CommandID ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0003", (BSTR)EnvironmentCatID, (BSTR)CommandName, CommandID);
    return _result;
}

#pragma implementation_key(743)
inline TGFramework::CommandBarButtonPtr TGFramework::AddIn::AddCommandBarButton ( _bstr_t EnvironmentCatID, _bstr_t CommandBarName, long CommandID ) {
    struct CommandBarButton * _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0008\x0003", (BSTR)EnvironmentCatID, (BSTR)CommandBarName, CommandID);
    return CommandBarButtonPtr(_result, false);
}

//
// interface ISEAddIns wrapper method implementations
//

#pragma implementation_key(744)
inline IDispatchPtr TGFramework::ISEAddIns::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(745)
inline long TGFramework::ISEAddIns::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(746)
inline IUnknownPtr TGFramework::ISEAddIns::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(747)
inline TGFramework::AddInPtr TGFramework::ISEAddIns::Item ( const _variant_t & Index ) {
    struct AddIn * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AddInPtr(_result, false);
}

#pragma implementation_key(748)
inline HRESULT TGFramework::ISEAddIns::Update ( ) {
    HRESULT _hr = raw_Update();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISEAddInEvents wrapper method implementations
//

#pragma implementation_key(749)
inline HRESULT TGFramework::ISEAddInEvents::OnCommand ( long CommandID ) {
    HRESULT _hr = raw_OnCommand(CommandID);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(750)
inline HRESULT TGFramework::ISEAddInEvents::OnCommandHelp ( long hFrameWnd, long HelpCommandID, long CommandID ) {
    HRESULT _hr = raw_OnCommandHelp(hFrameWnd, HelpCommandID, CommandID);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(751)
inline HRESULT TGFramework::ISEAddInEvents::OnCommandUpdateUI ( long CommandID, long * CommandFlags, BSTR * MenuItemText, long * BitmapID ) {
    HRESULT _hr = raw_OnCommandUpdateUI(CommandID, CommandFlags, MenuItemText, BitmapID);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface DISEAddInEvents wrapper method implementations
//

#pragma implementation_key(752)
inline HRESULT TGFramework::DISEAddInEvents::OnCommand ( long nCmdID ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", nCmdID);
}

#pragma implementation_key(753)
inline HRESULT TGFramework::DISEAddInEvents::OnCommandHelp ( long hFrameWnd, long uHelpCommand, long nCmdID ) {
    return _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0003", hFrameWnd, uHelpCommand, nCmdID);
}

#pragma implementation_key(754)
inline HRESULT TGFramework::DISEAddInEvents::OnCommandUpdateUI ( long nCmdID, long * lCmdFlags, BSTR * MenuItemText, long * nIDBitmap ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4003\x4008\x4003", nCmdID, lCmdFlags, MenuItemText, nIDBitmap);
}

//
// dispinterface CommandBarButton wrapper method implementations
//

#pragma implementation_key(755)
inline IDispatchPtr TGFramework::CommandBarButton::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x10010001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(756)
inline VARIANT_BOOL TGFramework::CommandBarButton::GetBeginGroup ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10010002, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(757)
inline void TGFramework::CommandBarButton::PutBeginGroup ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x10010002, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(758)
inline VARIANT_BOOL TGFramework::CommandBarButton::GetBuiltIn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10010003, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(759)
inline VARIANT_BOOL TGFramework::CommandBarButton::GetBuiltInFace ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10010004, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(760)
inline void TGFramework::CommandBarButton::PutBuiltInFace ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x10010004, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(761)
inline _bstr_t TGFramework::CommandBarButton::GetCaption ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x10010005, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(762)
inline void TGFramework::CommandBarButton::PutCaption ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x10010005, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(763)
inline _bstr_t TGFramework::CommandBarButton::GetDescriptionText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x10010006, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(764)
inline void TGFramework::CommandBarButton::PutDescriptionText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x10010006, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(765)
inline VARIANT_BOOL TGFramework::CommandBarButton::GetEnabled ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10010007, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(766)
inline void TGFramework::CommandBarButton::PutEnabled ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x10010007, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(767)
inline long TGFramework::CommandBarButton::GetFaceId ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10010008, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(768)
inline void TGFramework::CommandBarButton::PutFaceId ( long _arg1 ) {
    _com_dispatch_method(this, 0x10010008, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(769)
inline long TGFramework::CommandBarButton::GetHeight ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10010009, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(770)
inline long TGFramework::CommandBarButton::GetHelpContextId ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1001000a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(771)
inline void TGFramework::CommandBarButton::PutHelpContextId ( long _arg1 ) {
    _com_dispatch_method(this, 0x1001000a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(772)
inline _bstr_t TGFramework::CommandBarButton::GetHelpFile ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1001000b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(773)
inline void TGFramework::CommandBarButton::PutHelpFile ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1001000b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(774)
inline long TGFramework::CommandBarButton::GetId ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1001000c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(775)
inline long TGFramework::CommandBarButton::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1001000d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(776)
inline long TGFramework::CommandBarButton::GetLeft ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1001000e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(777)
inline _bstr_t TGFramework::CommandBarButton::GetOnAction ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1001000f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(778)
inline void TGFramework::CommandBarButton::PutOnAction ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1001000f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(779)
inline _bstr_t TGFramework::CommandBarButton::GetParameterText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x10010010, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(780)
inline void TGFramework::CommandBarButton::PutParameterText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x10010010, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(781)
inline TGFramework::CommandBarPtr TGFramework::CommandBarButton::GetParent ( ) {
    struct CommandBar * _result = 0;
    _com_dispatch_method(this, 0x10010011, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return CommandBarPtr(_result, false);
}

#pragma implementation_key(782)
inline _bstr_t TGFramework::CommandBarButton::GetShortcutText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x10010012, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(783)
inline void TGFramework::CommandBarButton::PutShortcutText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x10010012, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(784)
inline _bstr_t TGFramework::CommandBarButton::GetTag ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x10010013, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(785)
inline void TGFramework::CommandBarButton::PutTag ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x10010013, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(786)
inline _bstr_t TGFramework::CommandBarButton::GetTooltipText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x10010014, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(787)
inline void TGFramework::CommandBarButton::PutTooltipText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x10010014, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(788)
inline long TGFramework::CommandBarButton::GetTop ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10010015, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(789)
inline enum TGFramework::SeControlType TGFramework::CommandBarButton::GetType ( ) {
    enum SeControlType _result;
    _com_dispatch_method(this, 0x10010016, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(790)
inline VARIANT_BOOL TGFramework::CommandBarButton::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10010017, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(791)
inline void TGFramework::CommandBarButton::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x10010017, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(792)
inline long TGFramework::CommandBarButton::GetWidth ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10010018, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(793)
inline HRESULT TGFramework::CommandBarButton::Delete ( const _variant_t & Temporary ) {
    return _com_dispatch_method(this, 0x10010019, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &Temporary);
}

#pragma implementation_key(794)
inline HRESULT TGFramework::CommandBarButton::Execute ( ) {
    return _com_dispatch_method(this, 0x1001001a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(795)
inline HRESULT TGFramework::CommandBarButton::Help ( ) {
    return _com_dispatch_method(this, 0x1001001b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(796)
inline HRESULT TGFramework::CommandBarButton::LoadFace ( _bstr_t Face ) {
    return _com_dispatch_method(this, 0x1001001c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Face);
}

#pragma implementation_key(797)
inline IUnknownPtr TGFramework::CommandBarButton::GetCommandBarButtonEvents ( ) {
    struct IUnknown * _result = 0;
    _com_dispatch_method(this, 0x10030002, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(798)
inline enum TGFramework::SeButtonState TGFramework::CommandBarButton::GetState ( ) {
    enum SeButtonState _result;
    _com_dispatch_method(this, 0x10030006, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(799)
inline void TGFramework::CommandBarButton::PutState ( enum SeButtonState _arg1 ) {
    _com_dispatch_method(this, 0x10030006, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(800)
inline enum TGFramework::SeButtonStyle TGFramework::CommandBarButton::GetStyle ( ) {
    enum SeButtonStyle _result;
    _com_dispatch_method(this, 0x10030007, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(801)
inline void TGFramework::CommandBarButton::PutStyle ( enum SeButtonStyle _arg1 ) {
    _com_dispatch_method(this, 0x10030007, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

//
// interface ISEAddIn wrapper method implementations
//

#pragma implementation_key(802)
inline IDispatchPtr TGFramework::ISEAddIn::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(803)
inline IUnknownPtr TGFramework::ISEAddIn::GetAddInEvents ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_AddInEvents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(804)
inline VARIANT_BOOL TGFramework::ISEAddIn::GetConnect ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Connect(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(805)
inline void TGFramework::ISEAddIn::PutConnect ( VARIANT_BOOL Connect ) {
    HRESULT _hr = put_Connect(Connect);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(806)
inline _bstr_t TGFramework::ISEAddIn::GetDescription ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Description(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(807)
inline void TGFramework::ISEAddIn::PutDescription ( _bstr_t Description ) {
    HRESULT _hr = put_Description(Description);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(808)
inline _bstr_t TGFramework::ISEAddIn::GetGUID ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_GUID(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(809)
inline long TGFramework::ISEAddIn::GetGuiVersion ( ) {
    long _result = 0;
    HRESULT _hr = get_GuiVersion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(810)
inline void TGFramework::ISEAddIn::PutGuiVersion ( long GuiVersion ) {
    HRESULT _hr = put_GuiVersion(GuiVersion);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(811)
inline IDispatchPtr TGFramework::ISEAddIn::GetObject ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Object(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(812)
inline void TGFramework::ISEAddIn::PutObject ( IDispatch * Object ) {
    HRESULT _hr = put_Object(Object);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(813)
inline _bstr_t TGFramework::ISEAddIn::GetProgID ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ProgID(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(814)
inline VARIANT_BOOL TGFramework::ISEAddIn::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(815)
inline void TGFramework::ISEAddIn::PutVisible ( VARIANT_BOOL Visible ) {
    HRESULT _hr = put_Visible(Visible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(816)
inline HRESULT TGFramework::ISEAddIn::SetAddInInfo ( long InstanceHandle, _bstr_t EnvironmentCatID, _bstr_t CategoryName, long IDColorBitmapMedium, long IDColorBitmapLarge, long IDMonochromeBitmapMedium, long IDMonochromeBitmapLarge, long NumberOfCommands, SAFEARRAY * * CommandNames, SAFEARRAY * * CommandIDs ) {
    HRESULT _hr = raw_SetAddInInfo(InstanceHandle, EnvironmentCatID, CategoryName, IDColorBitmapMedium, IDColorBitmapLarge, IDMonochromeBitmapMedium, IDMonochromeBitmapLarge, NumberOfCommands, CommandNames, CommandIDs);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(817)
inline long TGFramework::ISEAddIn::AddCommand ( _bstr_t EnvironmentCatID, _bstr_t CommandName, long CommandID ) {
    long _result = 0;
    HRESULT _hr = raw_AddCommand(EnvironmentCatID, CommandName, CommandID, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(818)
inline TGFramework::CommandBarButtonPtr TGFramework::ISEAddIn::AddCommandBarButton ( _bstr_t EnvironmentCatID, _bstr_t CommandBarName, long CommandID ) {
    struct CommandBarButton * _result = 0;
    HRESULT _hr = raw_AddCommandBarButton(EnvironmentCatID, CommandBarName, CommandID, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CommandBarButtonPtr(_result, false);
}

//
// interface ISECommandBarButtonEvents wrapper method implementations
//

#pragma implementation_key(819)
inline HRESULT TGFramework::ISECommandBarButtonEvents::Click ( ) {
    HRESULT _hr = raw_Click();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(820)
inline HRESULT TGFramework::ISECommandBarButtonEvents::Help ( long hFrameWnd, long HelpCommandID ) {
    HRESULT _hr = raw_Help(hFrameWnd, HelpCommandID);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(821)
inline HRESULT TGFramework::ISECommandBarButtonEvents::UpdateUI ( ) {
    HRESULT _hr = raw_UpdateUI();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface DISECommandBarButtonEvents wrapper method implementations
//

#pragma implementation_key(822)
inline HRESULT TGFramework::DISECommandBarButtonEvents::Click ( ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(823)
inline HRESULT TGFramework::DISECommandBarButtonEvents::Help ( long hFrameWnd, long uHelpCommand ) {
    return _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", hFrameWnd, uHelpCommand);
}

#pragma implementation_key(824)
inline HRESULT TGFramework::DISECommandBarButtonEvents::UpdateUI ( ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// interface ISECommandBarButton wrapper method implementations
//

#pragma implementation_key(825)
inline IUnknownPtr TGFramework::ISECommandBarButton::GetCommandBarButtonEvents ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_CommandBarButtonEvents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(826)
inline enum TGFramework::SeButtonState TGFramework::ISECommandBarButton::GetState ( ) {
    enum SeButtonState _result;
    HRESULT _hr = get_State(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(827)
inline void TGFramework::ISECommandBarButton::PutState ( enum SeButtonState State ) {
    HRESULT _hr = put_State(State);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(828)
inline enum TGFramework::SeButtonStyle TGFramework::ISECommandBarButton::GetStyle ( ) {
    enum SeButtonStyle _result;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(829)
inline void TGFramework::ISECommandBarButton::PutStyle ( enum SeButtonStyle Style ) {
    HRESULT _hr = put_Style(Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISEFeatureLibraryEvents wrapper method implementations
//

#pragma implementation_key(830)
inline HRESULT TGFramework::ISEFeatureLibraryEvents::AfterFeatureLibraryDocumentCreated ( _bstr_t Name ) {
    HRESULT _hr = raw_AfterFeatureLibraryDocumentCreated(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(831)
inline HRESULT TGFramework::ISEFeatureLibraryEvents::AfterFeatureLibraryDocumentRenamed ( _bstr_t NewName, _bstr_t OldName ) {
    HRESULT _hr = raw_AfterFeatureLibraryDocumentRenamed(NewName, OldName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(832)
inline HRESULT TGFramework::ISEFeatureLibraryEvents::AfterFeatureLibraryDocumentDeleted ( _bstr_t Name ) {
    HRESULT _hr = raw_AfterFeatureLibraryDocumentDeleted(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface Insight wrapper method implementations
//

#pragma implementation_key(833)
inline HRESULT TGFramework::Insight::DownloadDocumentFromServer ( _bstr_t DocumentToDownLoadFromServer, enum DocumentAccess DocumentAccessMode, BSTR * LocalPath, const _variant_t & GetLatestDocuments, const _variant_t & ProcessIndirectDocuments, const _variant_t & RevisionRuleOption, const _variant_t & StopFileOpenIfRevisionRuleNotApplicable ) {
    return _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0003\x4008\x080c\x080c\x080c\x080c", (BSTR)DocumentToDownLoadFromServer, DocumentAccessMode, LocalPath, &GetLatestDocuments, &ProcessIndirectDocuments, &RevisionRuleOption, &StopFileOpenIfRevisionRuleNotApplicable);
}

#pragma implementation_key(834)
inline HRESULT TGFramework::Insight::ImportDocumentsToServer ( long NumberOfDocumentsFoldersToImport, const _variant_t & ListOfDocumentsFoldersToImport, _bstr_t ImportLocation, enum UploadType TypeOfUpload, enum CheckInOptions CheckInOption ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x000c\x0008\x0003\x0003", NumberOfDocumentsFoldersToImport, &ListOfDocumentsFoldersToImport, (BSTR)ImportLocation, TypeOfUpload, CheckInOption);
}

#pragma implementation_key(835)
inline HRESULT TGFramework::Insight::UploadDocumentsToServer ( long NumberOfDocumentsToUpload, const _variant_t & DocumentsToUpload ) {
    return _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x000c", NumberOfDocumentsToUpload, &DocumentsToUpload);
}

#pragma implementation_key(836)
inline HRESULT TGFramework::Insight::ExportDocumentsFromServer ( long NumberOfDocumentsToExport, const _variant_t & ListOfDocumentsToExport, _bstr_t ExportToLocation, VARIANT_BOOL SetDocToReadOnly, enum OverWriteFilesOption OverWriteOption ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x000c\x0008\x000b\x0003", NumberOfDocumentsToExport, &ListOfDocumentsToExport, (BSTR)ExportToLocation, SetDocToReadOnly, OverWriteOption);
}

#pragma implementation_key(837)
inline HRESULT TGFramework::Insight::DeleteDocumentsFromServer ( long NumberOfDocumentsToBeDeleted, const _variant_t & ListOfDocumentsToBeDeleted, long * NumberOfSuccessfullyDeletedDocuments, VARIANT * SuccessfullyDeletedDocuments ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x000c\x4003\x400c", NumberOfDocumentsToBeDeleted, &ListOfDocumentsToBeDeleted, NumberOfSuccessfullyDeletedDocuments, SuccessfullyDeletedDocuments);
}

#pragma implementation_key(838)
inline HRESULT TGFramework::Insight::FindWhereUsedOnServer ( long NumberOfProperties, const _variant_t & ListOfProperties, long NumberOfSharePointDirectories, const _variant_t & ListOfSharePointDirectories, long NumberOfDocuments, const _variant_t & ListOfDocumentsForWhereUsed, long * NumberOfUserFiles, VARIANT * DocumentsUsedByList, const _variant_t & TypeOfSearch ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x000c\x0003\x000c\x0003\x000c\x4003\x400c\x080c", NumberOfProperties, &ListOfProperties, NumberOfSharePointDirectories, &ListOfSharePointDirectories, NumberOfDocuments, &ListOfDocumentsForWhereUsed, NumberOfUserFiles, DocumentsUsedByList, &TypeOfSearch);
}

#pragma implementation_key(839)
inline HRESULT TGFramework::Insight::CheckOutDocumentsFromServer ( long NumberOfDocumentsToCheckOutFromServer, const _variant_t & ListOfDocumentsToCheckOutFromServer ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x000c", NumberOfDocumentsToCheckOutFromServer, &ListOfDocumentsToCheckOutFromServer);
}

#pragma implementation_key(840)
inline HRESULT TGFramework::Insight::CheckInDocumentsToServer ( long NumberOfDocumentsToCheckInToServer, const _variant_t & ListOfDocumentsToCheckInFromServer, const _variant_t & FailIfDocumentsOpenInSolidEdge ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x000c\x080c", NumberOfDocumentsToCheckInToServer, &ListOfDocumentsToCheckInFromServer, &FailIfDocumentsOpenInSolidEdge);
}

#pragma implementation_key(841)
inline HRESULT TGFramework::Insight::UndoCheckOutDocumentsFromServer ( long NumberOfDocumentsToUndoCheckOutFromServer, const _variant_t & ListOfDocumentsToUndoCheckOutFromServer ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x000c", NumberOfDocumentsToUndoCheckOutFromServer, &ListOfDocumentsToUndoCheckOutFromServer);
}

#pragma implementation_key(842)
inline HRESULT TGFramework::Insight::ShowRevisionsForServerDocument ( _bstr_t DocumentNameToShowRevisions, long * NumberOfRevisions, VARIANT * DocumentNamesOfRevisions ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x4003\x400c", (BSTR)DocumentNameToShowRevisions, NumberOfRevisions, DocumentNamesOfRevisions);
}

#pragma implementation_key(843)
inline HRESULT TGFramework::Insight::GetRevisedFrom ( _bstr_t RevisedDocumentName, BSTR * RevisedFromDocument ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x4008", (BSTR)RevisedDocumentName, RevisedFromDocument);
}

#pragma implementation_key(844)
inline HRESULT TGFramework::Insight::SetInsightUserNamePassword ( _bstr_t WorkspaceUrl, _bstr_t UserName, _bstr_t Password, _bstr_t DomainName ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x0008", (BSTR)WorkspaceUrl, (BSTR)UserName, (BSTR)Password, (BSTR)DomainName);
}

#pragma implementation_key(845)
inline HRESULT TGFramework::Insight::GetLastInsightTransactionMessages ( BSTR * TransactionString, long * NumberOfDocuments, VARIANT * ListofDocumentNamesWithPath, VARIANT * ListofMessages, VARIANT * ListofSeverityCodes ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008\x4003\x400c\x400c\x400c", TransactionString, NumberOfDocuments, ListofDocumentNamesWithPath, ListofMessages, ListofSeverityCodes);
}

#pragma implementation_key(846)
inline HRESULT TGFramework::Insight::GetOutOfDateDocuments ( long * NumberOfOutOfDateDocuments, VARIANT * ListOfOutOfDateDocuments ) {
    return _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x400c", NumberOfOutOfDateDocuments, ListOfOutOfDateDocuments);
}

#pragma implementation_key(847)
inline HRESULT TGFramework::Insight::ClearCache ( ) {
    return _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(848)
inline HRESULT TGFramework::Insight::DeleteDocumentsFromCache ( long NumberOfDocumentsToBeDeletedFromCache, const _variant_t & ListOfDocumentsToBeDeletedFromCache, long * NumberOfNotDeletedDocuments, VARIANT * ListOfNotDeletedDocuments ) {
    return _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x000c\x4003\x400c", NumberOfDocumentsToBeDeletedFromCache, &ListOfDocumentsToBeDeletedFromCache, NumberOfNotDeletedDocuments, ListOfNotDeletedDocuments);
}

#pragma implementation_key(849)
inline HRESULT TGFramework::Insight::PutUserNameAndPasswordIntoCache ( _bstr_t WorkspaceUrl ) {
    return _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)WorkspaceUrl);
}

#pragma implementation_key(850)
inline HRESULT TGFramework::Insight::EnableDeveloperLog ( VARIANT_BOOL bCreateFlag ) {
    return _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", bCreateFlag);
}

#pragma implementation_key(851)
inline HRESULT TGFramework::Insight::SynchronizeDocumentsInCache ( long NumberOfDocumentsToBeSynchronizedWithServer, const _variant_t & ListOfDocumentsInCacheToBeSynchronized ) {
    return _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x000c", NumberOfDocumentsToBeSynchronizedWithServer, &ListOfDocumentsInCacheToBeSynchronized);
}

#pragma implementation_key(852)
inline HRESULT TGFramework::Insight::SynchronizeAllDocumentsInCache ( ) {
    return _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(853)
inline HRESULT TGFramework::Insight::CheckInAllCheckedOutDocumentsInCache ( ) {
    return _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(854)
inline HRESULT TGFramework::Insight::GetFilePropertiesFromServer ( long NumberOfFilesToBeQueriedForProperties, const _variant_t & FileUrlsList, long NumberOfPropertiesTobeQueried, const _variant_t & PropertyUrisList, long * numberOfPropertiesValues, VARIANT * PropertyValueList ) {
    return _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x000c\x0003\x000c\x4003\x400c", NumberOfFilesToBeQueriedForProperties, &FileUrlsList, NumberOfPropertiesTobeQueried, &PropertyUrisList, numberOfPropertiesValues, PropertyValueList);
}

#pragma implementation_key(855)
inline HRESULT TGFramework::Insight::MoveDocumentsThroughWorkFlow ( _bstr_t Filename, enum DocumentStatus newstatus, const _variant_t & NumberOfDraftFiles, const _variant_t & draftFileList, const _variant_t & draftFileStatusList, const _variant_t & NumberOfRevisionFiles, const _variant_t & revisionFileList, const _variant_t & RevisionFileStatusList ) {
    return _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0003\x080c\x080c\x080c\x080c\x080c\x080c", (BSTR)Filename, newstatus, &NumberOfDraftFiles, &draftFileList, &draftFileStatusList, &NumberOfRevisionFiles, &revisionFileList, &RevisionFileStatusList);
}

#pragma implementation_key(856)
inline HRESULT TGFramework::Insight::MoveAllDocumentsThroughWorkFlow ( _bstr_t Filename, enum DocumentStatus newstatus ) {
    return _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0003", (BSTR)Filename, newstatus);
}

#pragma implementation_key(857)
inline HRESULT TGFramework::Insight::GetSharePointServerType ( _bstr_t Filename, enum SPServerType * SPServerType, VARIANT * bProcessChecks ) {
    return _com_dispatch_method(this, 0x18, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x4003\x480c", (BSTR)Filename, SPServerType, bProcessChecks);
}

#pragma implementation_key(858)
inline HRESULT TGFramework::Insight::FileExists ( _bstr_t FileUrl, VARIANT_BOOL * bFileExists ) {
    return _com_dispatch_method(this, 0x19, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x400b", (BSTR)FileUrl, bFileExists);
}

#pragma implementation_key(859)
inline HRESULT TGFramework::Insight::CreateFolder ( long numberOfFoldersToCreate, const _variant_t & varListOfFoldersToCreate ) {
    return _com_dispatch_method(this, 0x1a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x000c", numberOfFoldersToCreate, &varListOfFoldersToCreate);
}

#pragma implementation_key(860)
inline HRESULT TGFramework::Insight::DeleteFolder ( long NumberOfDocumentsToBeDeleted, const _variant_t & varlistOfFilesToDelete, long * NumberOfSuccessfullyDeletedDocuments, VARIANT * listOfFoldersSuccessfullyDeleted ) {
    return _com_dispatch_method(this, 0x1b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x000c\x4003\x400c", NumberOfDocumentsToBeDeleted, &varlistOfFilesToDelete, NumberOfSuccessfullyDeletedDocuments, listOfFoldersSuccessfullyDeleted);
}

#pragma implementation_key(861)
inline HRESULT TGFramework::Insight::FolderExists ( _bstr_t bstrFolderName, VARIANT_BOOL * bFolderExists ) {
    return _com_dispatch_method(this, 0x1c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x400b", (BSTR)bstrFolderName, bFolderExists);
}

#pragma implementation_key(862)
inline HRESULT TGFramework::Insight::GetDirs ( _bstr_t ParentUrl, long * numberOfSubFoldersFound, VARIANT * ListOfSubFoldersFound ) {
    return _com_dispatch_method(this, 0x1d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x4003\x400c", (BSTR)ParentUrl, numberOfSubFoldersFound, ListOfSubFoldersFound);
}

#pragma implementation_key(863)
inline HRESULT TGFramework::Insight::GetFiles ( _bstr_t ParentUrl, long * numberOfFilesFound, VARIANT * ListOfFilesFound, const _variant_t & FileFilter ) {
    return _com_dispatch_method(this, 0x1e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x4003\x400c\x080c", (BSTR)ParentUrl, numberOfFilesFound, ListOfFilesFound, &FileFilter);
}

#pragma implementation_key(864)
inline HRESULT TGFramework::Insight::DoesUserHaveAdminRights ( _bstr_t FileOrFolderUrl, _bstr_t UserName, VARIANT_BOOL * bUserHasAdminRights ) {
    return _com_dispatch_method(this, 0x1f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x400b", (BSTR)FileOrFolderUrl, (BSTR)UserName, bUserHasAdminRights);
}

#pragma implementation_key(865)
inline HRESULT TGFramework::Insight::IsInsightSupported ( VARIANT_BOOL * bInsightIsSupported ) {
    return _com_dispatch_method(this, 0x20, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b", bInsightIsSupported);
}

#pragma implementation_key(866)
inline HRESULT TGFramework::Insight::IsFileCheckedOut ( _bstr_t FileUrl, VARIANT_BOOL * bFileIsCheckedOut, BSTR * UserName ) {
    return _com_dispatch_method(this, 0x21, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x400b\x4008", (BSTR)FileUrl, bFileIsCheckedOut, UserName);
}

#pragma implementation_key(867)
inline HRESULT TGFramework::Insight::GetCachePath ( long numberOfFilesToGetPathFor, const _variant_t & varListOfFilePaths, long * numberOfFilesReturned, VARIANT * varListOfFilesContainingCachePaths ) {
    return _com_dispatch_method(this, 0x22, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x000c\x4003\x400c", numberOfFilesToGetPathFor, &varListOfFilePaths, numberOfFilesReturned, varListOfFilesContainingCachePaths);
}

#pragma implementation_key(868)
inline HRESULT TGFramework::Insight::GetUserRole ( _bstr_t FileOrFolderUrl, _bstr_t UserName, BSTR * UserRole ) {
    return _com_dispatch_method(this, 0x23, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x4008", (BSTR)FileOrFolderUrl, (BSTR)UserName, UserRole);
}

#pragma implementation_key(869)
inline HRESULT TGFramework::Insight::GetDocState ( _bstr_t UrlToGetStateFor, VARIANT * docState ) {
    return _com_dispatch_method(this, 0x24, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x400c", (BSTR)UrlToGetStateFor, docState);
}

#pragma implementation_key(870)
inline HRESULT TGFramework::Insight::CheckSupport ( _bstr_t ServerUrl, VARIANT_BOOL * bSPSIsSupported ) {
    return _com_dispatch_method(this, 0x25, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x400b", (BSTR)ServerUrl, bSPSIsSupported);
}

#pragma implementation_key(871)
inline HRESULT TGFramework::Insight::GetUserRights ( _bstr_t FileOrFolderUrl, enum InsightSPUserRights * UserRights ) {
    return _com_dispatch_method(this, 0x26, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x4003", (BSTR)FileOrFolderUrl, UserRights);
}

#pragma implementation_key(872)
inline HRESULT TGFramework::Insight::GetIndirectFilesTree ( _bstr_t containerFileName, VARIANT * pIndirectFilesTree ) {
    return _com_dispatch_method(this, 0x27, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x400c", (BSTR)containerFileName, pIndirectFilesTree);
}

#pragma implementation_key(873)
inline HRESULT TGFramework::Insight::UsePathAsDefaultFolderMapPath ( _bstr_t WorkspaceUrl ) {
    return _com_dispatch_method(this, 0x28, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)WorkspaceUrl);
}

#pragma implementation_key(874)
inline HRESULT TGFramework::Insight::RemoveAllFilesFromRecycleBin ( _bstr_t bstrDocLibUrl ) {
    return _com_dispatch_method(this, 0x29, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)bstrDocLibUrl);
}

#pragma implementation_key(875)
inline HRESULT TGFramework::Insight::RestoreAllFilesFromRecycleBin ( _bstr_t bstrDocLibUrl ) {
    return _com_dispatch_method(this, 0x2a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)bstrDocLibUrl);
}

#pragma implementation_key(876)
inline HRESULT TGFramework::Insight::DownloadDocumentFromServerWithAllLinks ( _bstr_t DocumentToDownLoadFromServer, enum DocumentAccess DocumentAccessMode, BSTR * LocalPath, const _variant_t & GetLatestDocuments, const _variant_t & ProcessIndirectDocuments, const _variant_t & RevisionRuleOption, const _variant_t & StopFileOpenIfRevisionRuleNotApplicable ) {
    return _com_dispatch_method(this, 0x2b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0003\x4008\x080c\x080c\x080c\x080c", (BSTR)DocumentToDownLoadFromServer, DocumentAccessMode, LocalPath, &GetLatestDocuments, &ProcessIndirectDocuments, &RevisionRuleOption, &StopFileOpenIfRevisionRuleNotApplicable);
}

#pragma implementation_key(877)
inline HRESULT TGFramework::Insight::SetInsightATPRunning ( VARIANT_BOOL bRunningInsightATP ) {
    return _com_dispatch_method(this, 0x2c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", bRunningInsightATP);
}

#pragma implementation_key(878)
inline HRESULT TGFramework::Insight::SetInsightATPInfo ( _bstr_t bstrATPLevel1, _bstr_t bstrATPClassName, _bstr_t bstrATPName, long ATPId ) {
    return _com_dispatch_method(this, 0x2d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x0003", (BSTR)bstrATPLevel1, (BSTR)bstrATPClassName, (BSTR)bstrATPName, ATPId);
}

#pragma implementation_key(879)
inline HRESULT TGFramework::Insight::ValidateDocsOnLCA ( _bstr_t bstrInputURL, long numberOfDocumentstoValidate, const _variant_t & varlistOfDocsToValidate, _bstr_t bstrInputData ) {
    return _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0003\x000c\x0008", (BSTR)bstrInputURL, numberOfDocumentstoValidate, &varlistOfDocsToValidate, (BSTR)bstrInputData);
}

#pragma implementation_key(880)
inline HRESULT TGFramework::Insight::IsVersioningEnabledForTheInputDocLib ( _bstr_t docLibName, VARIANT_BOOL * pbIsVersioningOnForTheInputDocLib ) {
    return _com_dispatch_method(this, 0x2f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x400b", (BSTR)docLibName, pbIsVersioningOnForTheInputDocLib);
}

#pragma implementation_key(881)
inline HRESULT TGFramework::Insight::IsFileCheckedOutToSameUser ( _bstr_t filePath, _bstr_t UserName, _bstr_t Password, BSTR * checkedoutby, VARIANT_BOOL UpdateCache ) {
    return _com_dispatch_method(this, 0x30, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x4008\x000b", (BSTR)filePath, (BSTR)UserName, (BSTR)Password, checkedoutby, UpdateCache);
}

#pragma implementation_key(882)
inline HRESULT TGFramework::Insight::IsDocumentLibraryContainsRequiredProperty ( _bstr_t docLibName, VARIANT_BOOL * pbIsRequiredPropertyExist ) {
    return _com_dispatch_method(this, 0x31, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x400b", (BSTR)docLibName, pbIsRequiredPropertyExist);
}

#pragma implementation_key(883)
inline HRESULT TGFramework::Insight::SetInsightOfflineMode ( VARIANT_BOOL bOfflineModeVal ) {
    return _com_dispatch_method(this, 0x32, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", bOfflineModeVal);
}

#pragma implementation_key(884)
inline HRESULT TGFramework::Insight::DisplayPropertyManagerDlg ( _bstr_t bstrFilename ) {
    return _com_dispatch_method(this, 0x33, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)bstrFilename);
}

#pragma implementation_key(885)
inline HRESULT TGFramework::Insight::GetCookieData ( _bstr_t bstrFilename, enum CookieDataToGet valCookieDataToGet, enum RevisionRuleType * varRevisionRule ) {
    return _com_dispatch_method(this, 0x34, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0003\x4003", (BSTR)bstrFilename, valCookieDataToGet, varRevisionRule);
}

#pragma implementation_key(886)
inline HRESULT TGFramework::Insight::SetFilePropertiesOnServer ( _bstr_t bstrInputURL, long NumberOfPropertiesToSet, const _variant_t & PropertyUrIList, const _variant_t & PropertyValueList ) {
    return _com_dispatch_method(this, 0x35, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0003\x000c\x000c", (BSTR)bstrInputURL, NumberOfPropertiesToSet, &PropertyUrIList, &PropertyValueList);
}

#pragma implementation_key(887)
inline HRESULT TGFramework::Insight::ISDocumentParserEnabled ( _bstr_t bstrInputURL, VARIANT_BOOL * bDocParserEnabled ) {
    return _com_dispatch_method(this, 0x36, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x400b", (BSTR)bstrInputURL, bDocParserEnabled);
}

#pragma implementation_key(888)
inline HRESULT TGFramework::Insight::GetLWFPathForUrl ( _bstr_t bstrUrl, BSTR * bstrLWFPath ) {
    return _com_dispatch_method(this, 0x37, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x4008", (BSTR)bstrUrl, bstrLWFPath);
}

#pragma implementation_key(889)
inline HRESULT TGFramework::Insight::DisplaySEPackNGoDlg ( _bstr_t bstrFilename ) {
    return _com_dispatch_method(this, 0x38, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)bstrFilename);
}

//
// interface _IInsightAuto wrapper method implementations
//

#pragma implementation_key(890)
inline HRESULT TGFramework::_IInsightAuto::DownloadDocumentFromServer ( _bstr_t DocumentToDownLoadFromServer, enum DocumentAccess DocumentAccessMode, BSTR * LocalPath, const _variant_t & GetLatestDocuments, const _variant_t & ProcessIndirectDocuments, const _variant_t & RevisionRuleOption, const _variant_t & StopFileOpenIfRevisionRuleNotApplicable ) {
    HRESULT _hr = raw_DownloadDocumentFromServer(DocumentToDownLoadFromServer, DocumentAccessMode, LocalPath, GetLatestDocuments, ProcessIndirectDocuments, RevisionRuleOption, StopFileOpenIfRevisionRuleNotApplicable);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(891)
inline HRESULT TGFramework::_IInsightAuto::ImportDocumentsToServer ( long NumberOfDocumentsFoldersToImport, const _variant_t & ListOfDocumentsFoldersToImport, _bstr_t ImportLocation, enum UploadType TypeOfUpload, enum CheckInOptions CheckInOption ) {
    HRESULT _hr = raw_ImportDocumentsToServer(NumberOfDocumentsFoldersToImport, ListOfDocumentsFoldersToImport, ImportLocation, TypeOfUpload, CheckInOption);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(892)
inline HRESULT TGFramework::_IInsightAuto::UploadDocumentsToServer ( long NumberOfDocumentsToUpload, const _variant_t & DocumentsToUpload ) {
    HRESULT _hr = raw_UploadDocumentsToServer(NumberOfDocumentsToUpload, DocumentsToUpload);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(893)
inline HRESULT TGFramework::_IInsightAuto::ExportDocumentsFromServer ( long NumberOfDocumentsToExport, const _variant_t & ListOfDocumentsToExport, _bstr_t ExportToLocation, VARIANT_BOOL SetDocToReadOnly, enum OverWriteFilesOption OverWriteOption ) {
    HRESULT _hr = raw_ExportDocumentsFromServer(NumberOfDocumentsToExport, ListOfDocumentsToExport, ExportToLocation, SetDocToReadOnly, OverWriteOption);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(894)
inline HRESULT TGFramework::_IInsightAuto::DeleteDocumentsFromServer ( long NumberOfDocumentsToBeDeleted, const _variant_t & ListOfDocumentsToBeDeleted, long * NumberOfSuccessfullyDeletedDocuments, VARIANT * SuccessfullyDeletedDocuments ) {
    HRESULT _hr = raw_DeleteDocumentsFromServer(NumberOfDocumentsToBeDeleted, ListOfDocumentsToBeDeleted, NumberOfSuccessfullyDeletedDocuments, SuccessfullyDeletedDocuments);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(895)
inline HRESULT TGFramework::_IInsightAuto::FindWhereUsedOnServer ( long NumberOfProperties, const _variant_t & ListOfProperties, long NumberOfSharePointDirectories, const _variant_t & ListOfSharePointDirectories, long NumberOfDocuments, const _variant_t & ListOfDocumentsForWhereUsed, long * NumberOfUserFiles, VARIANT * DocumentsUsedByList, const _variant_t & TypeOfSearch ) {
    HRESULT _hr = raw_FindWhereUsedOnServer(NumberOfProperties, ListOfProperties, NumberOfSharePointDirectories, ListOfSharePointDirectories, NumberOfDocuments, ListOfDocumentsForWhereUsed, NumberOfUserFiles, DocumentsUsedByList, TypeOfSearch);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(896)
inline HRESULT TGFramework::_IInsightAuto::CheckOutDocumentsFromServer ( long NumberOfDocumentsToCheckOutFromServer, const _variant_t & ListOfDocumentsToCheckOutFromServer ) {
    HRESULT _hr = raw_CheckOutDocumentsFromServer(NumberOfDocumentsToCheckOutFromServer, ListOfDocumentsToCheckOutFromServer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(897)
inline HRESULT TGFramework::_IInsightAuto::CheckInDocumentsToServer ( long NumberOfDocumentsToCheckInToServer, const _variant_t & ListOfDocumentsToCheckInFromServer, const _variant_t & FailIfDocumentsOpenInSolidEdge ) {
    HRESULT _hr = raw_CheckInDocumentsToServer(NumberOfDocumentsToCheckInToServer, ListOfDocumentsToCheckInFromServer, FailIfDocumentsOpenInSolidEdge);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(898)
inline HRESULT TGFramework::_IInsightAuto::UndoCheckOutDocumentsFromServer ( long NumberOfDocumentsToUndoCheckOutFromServer, const _variant_t & ListOfDocumentsToUndoCheckOutFromServer ) {
    HRESULT _hr = raw_UndoCheckOutDocumentsFromServer(NumberOfDocumentsToUndoCheckOutFromServer, ListOfDocumentsToUndoCheckOutFromServer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(899)
inline HRESULT TGFramework::_IInsightAuto::ShowRevisionsForServerDocument ( _bstr_t DocumentNameToShowRevisions, long * NumberOfRevisions, VARIANT * DocumentNamesOfRevisions ) {
    HRESULT _hr = raw_ShowRevisionsForServerDocument(DocumentNameToShowRevisions, NumberOfRevisions, DocumentNamesOfRevisions);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(900)
inline HRESULT TGFramework::_IInsightAuto::GetRevisedFrom ( _bstr_t RevisedDocumentName, BSTR * RevisedFromDocument ) {
    HRESULT _hr = raw_GetRevisedFrom(RevisedDocumentName, RevisedFromDocument);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(901)
inline HRESULT TGFramework::_IInsightAuto::SetInsightUserNamePassword ( _bstr_t WorkspaceUrl, _bstr_t UserName, _bstr_t Password, _bstr_t DomainName ) {
    HRESULT _hr = raw_SetInsightUserNamePassword(WorkspaceUrl, UserName, Password, DomainName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(902)
inline HRESULT TGFramework::_IInsightAuto::GetLastInsightTransactionMessages ( BSTR * TransactionString, long * NumberOfDocuments, VARIANT * ListofDocumentNamesWithPath, VARIANT * ListofMessages, VARIANT * ListofSeverityCodes ) {
    HRESULT _hr = raw_GetLastInsightTransactionMessages(TransactionString, NumberOfDocuments, ListofDocumentNamesWithPath, ListofMessages, ListofSeverityCodes);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(903)
inline HRESULT TGFramework::_IInsightAuto::GetOutOfDateDocuments ( long * NumberOfOutOfDateDocuments, VARIANT * ListOfOutOfDateDocuments ) {
    HRESULT _hr = raw_GetOutOfDateDocuments(NumberOfOutOfDateDocuments, ListOfOutOfDateDocuments);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(904)
inline HRESULT TGFramework::_IInsightAuto::ClearCache ( ) {
    HRESULT _hr = raw_ClearCache();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(905)
inline HRESULT TGFramework::_IInsightAuto::DeleteDocumentsFromCache ( long NumberOfDocumentsToBeDeletedFromCache, const _variant_t & ListOfDocumentsToBeDeletedFromCache, long * NumberOfNotDeletedDocuments, VARIANT * ListOfNotDeletedDocuments ) {
    HRESULT _hr = raw_DeleteDocumentsFromCache(NumberOfDocumentsToBeDeletedFromCache, ListOfDocumentsToBeDeletedFromCache, NumberOfNotDeletedDocuments, ListOfNotDeletedDocuments);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(906)
inline HRESULT TGFramework::_IInsightAuto::PutUserNameAndPasswordIntoCache ( _bstr_t WorkspaceUrl ) {
    HRESULT _hr = raw_PutUserNameAndPasswordIntoCache(WorkspaceUrl);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(907)
inline HRESULT TGFramework::_IInsightAuto::EnableDeveloperLog ( VARIANT_BOOL bCreateFlag ) {
    HRESULT _hr = raw_EnableDeveloperLog(bCreateFlag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(908)
inline HRESULT TGFramework::_IInsightAuto::SynchronizeDocumentsInCache ( long NumberOfDocumentsToBeSynchronizedWithServer, const _variant_t & ListOfDocumentsInCacheToBeSynchronized ) {
    HRESULT _hr = raw_SynchronizeDocumentsInCache(NumberOfDocumentsToBeSynchronizedWithServer, ListOfDocumentsInCacheToBeSynchronized);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(909)
inline HRESULT TGFramework::_IInsightAuto::SynchronizeAllDocumentsInCache ( ) {
    HRESULT _hr = raw_SynchronizeAllDocumentsInCache();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(910)
inline HRESULT TGFramework::_IInsightAuto::CheckInAllCheckedOutDocumentsInCache ( ) {
    HRESULT _hr = raw_CheckInAllCheckedOutDocumentsInCache();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(911)
inline HRESULT TGFramework::_IInsightAuto::GetFilePropertiesFromServer ( long NumberOfFilesToBeQueriedForProperties, const _variant_t & FileUrlsList, long NumberOfPropertiesTobeQueried, const _variant_t & PropertyUrisList, long * numberOfPropertiesValues, VARIANT * PropertyValueList ) {
    HRESULT _hr = raw_GetFilePropertiesFromServer(NumberOfFilesToBeQueriedForProperties, FileUrlsList, NumberOfPropertiesTobeQueried, PropertyUrisList, numberOfPropertiesValues, PropertyValueList);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(912)
inline HRESULT TGFramework::_IInsightAuto::MoveDocumentsThroughWorkFlow ( _bstr_t Filename, enum DocumentStatus newstatus, const _variant_t & NumberOfDraftFiles, const _variant_t & draftFileList, const _variant_t & draftFileStatusList, const _variant_t & NumberOfRevisionFiles, const _variant_t & revisionFileList, const _variant_t & RevisionFileStatusList ) {
    HRESULT _hr = raw_MoveDocumentsThroughWorkFlow(Filename, newstatus, NumberOfDraftFiles, draftFileList, draftFileStatusList, NumberOfRevisionFiles, revisionFileList, RevisionFileStatusList);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(913)
inline HRESULT TGFramework::_IInsightAuto::MoveAllDocumentsThroughWorkFlow ( _bstr_t Filename, enum DocumentStatus newstatus ) {
    HRESULT _hr = raw_MoveAllDocumentsThroughWorkFlow(Filename, newstatus);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(914)
inline HRESULT TGFramework::_IInsightAuto::GetSharePointServerType ( _bstr_t Filename, enum SPServerType * SPServerType, VARIANT * bProcessChecks ) {
    HRESULT _hr = raw_GetSharePointServerType(Filename, SPServerType, bProcessChecks);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(915)
inline HRESULT TGFramework::_IInsightAuto::FileExists ( _bstr_t FileUrl, VARIANT_BOOL * bFileExists ) {
    HRESULT _hr = raw_FileExists(FileUrl, bFileExists);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(916)
inline HRESULT TGFramework::_IInsightAuto::CreateFolder ( long numberOfFoldersToCreate, const _variant_t & varListOfFoldersToCreate ) {
    HRESULT _hr = raw_CreateFolder(numberOfFoldersToCreate, varListOfFoldersToCreate);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(917)
inline HRESULT TGFramework::_IInsightAuto::DeleteFolder ( long NumberOfDocumentsToBeDeleted, const _variant_t & varlistOfFilesToDelete, long * NumberOfSuccessfullyDeletedDocuments, VARIANT * listOfFoldersSuccessfullyDeleted ) {
    HRESULT _hr = raw_DeleteFolder(NumberOfDocumentsToBeDeleted, varlistOfFilesToDelete, NumberOfSuccessfullyDeletedDocuments, listOfFoldersSuccessfullyDeleted);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(918)
inline HRESULT TGFramework::_IInsightAuto::FolderExists ( _bstr_t bstrFolderName, VARIANT_BOOL * bFolderExists ) {
    HRESULT _hr = raw_FolderExists(bstrFolderName, bFolderExists);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(919)
inline HRESULT TGFramework::_IInsightAuto::GetDirs ( _bstr_t ParentUrl, long * numberOfSubFoldersFound, VARIANT * ListOfSubFoldersFound ) {
    HRESULT _hr = raw_GetDirs(ParentUrl, numberOfSubFoldersFound, ListOfSubFoldersFound);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(920)
inline HRESULT TGFramework::_IInsightAuto::GetFiles ( _bstr_t ParentUrl, long * numberOfFilesFound, VARIANT * ListOfFilesFound, const _variant_t & FileFilter ) {
    HRESULT _hr = raw_GetFiles(ParentUrl, numberOfFilesFound, ListOfFilesFound, FileFilter);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(921)
inline HRESULT TGFramework::_IInsightAuto::DoesUserHaveAdminRights ( _bstr_t FileOrFolderUrl, _bstr_t UserName, VARIANT_BOOL * bUserHasAdminRights ) {
    HRESULT _hr = raw_DoesUserHaveAdminRights(FileOrFolderUrl, UserName, bUserHasAdminRights);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(922)
inline HRESULT TGFramework::_IInsightAuto::IsInsightSupported ( VARIANT_BOOL * bInsightIsSupported ) {
    HRESULT _hr = raw_IsInsightSupported(bInsightIsSupported);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(923)
inline HRESULT TGFramework::_IInsightAuto::IsFileCheckedOut ( _bstr_t FileUrl, VARIANT_BOOL * bFileIsCheckedOut, BSTR * UserName ) {
    HRESULT _hr = raw_IsFileCheckedOut(FileUrl, bFileIsCheckedOut, UserName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(924)
inline HRESULT TGFramework::_IInsightAuto::GetCachePath ( long numberOfFilesToGetPathFor, const _variant_t & varListOfFilePaths, long * numberOfFilesReturned, VARIANT * varListOfFilesContainingCachePaths ) {
    HRESULT _hr = raw_GetCachePath(numberOfFilesToGetPathFor, varListOfFilePaths, numberOfFilesReturned, varListOfFilesContainingCachePaths);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(925)
inline HRESULT TGFramework::_IInsightAuto::GetUserRole ( _bstr_t FileOrFolderUrl, _bstr_t UserName, BSTR * UserRole ) {
    HRESULT _hr = raw_GetUserRole(FileOrFolderUrl, UserName, UserRole);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(926)
inline HRESULT TGFramework::_IInsightAuto::GetDocState ( _bstr_t UrlToGetStateFor, VARIANT * docState ) {
    HRESULT _hr = raw_GetDocState(UrlToGetStateFor, docState);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(927)
inline HRESULT TGFramework::_IInsightAuto::CheckSupport ( _bstr_t ServerUrl, VARIANT_BOOL * bSPSIsSupported ) {
    HRESULT _hr = raw_CheckSupport(ServerUrl, bSPSIsSupported);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(928)
inline HRESULT TGFramework::_IInsightAuto::GetUserRights ( _bstr_t FileOrFolderUrl, enum InsightSPUserRights * UserRights ) {
    HRESULT _hr = raw_GetUserRights(FileOrFolderUrl, UserRights);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(929)
inline HRESULT TGFramework::_IInsightAuto::GetIndirectFilesTree ( _bstr_t containerFileName, VARIANT * pIndirectFilesTree ) {
    HRESULT _hr = raw_GetIndirectFilesTree(containerFileName, pIndirectFilesTree);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(930)
inline HRESULT TGFramework::_IInsightAuto::UsePathAsDefaultFolderMapPath ( _bstr_t WorkspaceUrl ) {
    HRESULT _hr = raw_UsePathAsDefaultFolderMapPath(WorkspaceUrl);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(931)
inline HRESULT TGFramework::_IInsightAuto::RemoveAllFilesFromRecycleBin ( _bstr_t bstrDocLibUrl ) {
    HRESULT _hr = raw_RemoveAllFilesFromRecycleBin(bstrDocLibUrl);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(932)
inline HRESULT TGFramework::_IInsightAuto::RestoreAllFilesFromRecycleBin ( _bstr_t bstrDocLibUrl ) {
    HRESULT _hr = raw_RestoreAllFilesFromRecycleBin(bstrDocLibUrl);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(933)
inline HRESULT TGFramework::_IInsightAuto::DownloadDocumentFromServerWithAllLinks ( _bstr_t DocumentToDownLoadFromServer, enum DocumentAccess DocumentAccessMode, BSTR * LocalPath, const _variant_t & GetLatestDocuments, const _variant_t & ProcessIndirectDocuments, const _variant_t & RevisionRuleOption, const _variant_t & StopFileOpenIfRevisionRuleNotApplicable ) {
    HRESULT _hr = raw_DownloadDocumentFromServerWithAllLinks(DocumentToDownLoadFromServer, DocumentAccessMode, LocalPath, GetLatestDocuments, ProcessIndirectDocuments, RevisionRuleOption, StopFileOpenIfRevisionRuleNotApplicable);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(934)
inline HRESULT TGFramework::_IInsightAuto::SetInsightATPRunning ( VARIANT_BOOL bRunningInsightATP ) {
    HRESULT _hr = raw_SetInsightATPRunning(bRunningInsightATP);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(935)
inline HRESULT TGFramework::_IInsightAuto::SetInsightATPInfo ( _bstr_t bstrATPLevel1, _bstr_t bstrATPClassName, _bstr_t bstrATPName, long ATPId ) {
    HRESULT _hr = raw_SetInsightATPInfo(bstrATPLevel1, bstrATPClassName, bstrATPName, ATPId);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(936)
inline HRESULT TGFramework::_IInsightAuto::ValidateDocsOnLCA ( _bstr_t bstrInputURL, long numberOfDocumentstoValidate, const _variant_t & varlistOfDocsToValidate, _bstr_t bstrInputData ) {
    HRESULT _hr = raw_ValidateDocsOnLCA(bstrInputURL, numberOfDocumentstoValidate, varlistOfDocsToValidate, bstrInputData);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(937)
inline HRESULT TGFramework::_IInsightAuto::IsVersioningEnabledForTheInputDocLib ( _bstr_t docLibName, VARIANT_BOOL * pbIsVersioningOnForTheInputDocLib ) {
    HRESULT _hr = raw_IsVersioningEnabledForTheInputDocLib(docLibName, pbIsVersioningOnForTheInputDocLib);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(938)
inline HRESULT TGFramework::_IInsightAuto::IsFileCheckedOutToSameUser ( _bstr_t filePath, _bstr_t UserName, _bstr_t Password, BSTR * checkedoutby, VARIANT_BOOL UpdateCache ) {
    HRESULT _hr = raw_IsFileCheckedOutToSameUser(filePath, UserName, Password, checkedoutby, UpdateCache);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(939)
inline HRESULT TGFramework::_IInsightAuto::IsDocumentLibraryContainsRequiredProperty ( _bstr_t docLibName, VARIANT_BOOL * pbIsRequiredPropertyExist ) {
    HRESULT _hr = raw_IsDocumentLibraryContainsRequiredProperty(docLibName, pbIsRequiredPropertyExist);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(940)
inline HRESULT TGFramework::_IInsightAuto::SetInsightOfflineMode ( VARIANT_BOOL bOfflineModeVal ) {
    HRESULT _hr = raw_SetInsightOfflineMode(bOfflineModeVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(941)
inline HRESULT TGFramework::_IInsightAuto::DisplayPropertyManagerDlg ( _bstr_t bstrFilename ) {
    HRESULT _hr = raw_DisplayPropertyManagerDlg(bstrFilename);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(942)
inline HRESULT TGFramework::_IInsightAuto::GetCookieData ( _bstr_t bstrFilename, enum CookieDataToGet valCookieDataToGet, enum RevisionRuleType * varRevisionRule ) {
    HRESULT _hr = raw_GetCookieData(bstrFilename, valCookieDataToGet, varRevisionRule);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(943)
inline HRESULT TGFramework::_IInsightAuto::SetFilePropertiesOnServer ( _bstr_t bstrInputURL, long NumberOfPropertiesToSet, const _variant_t & PropertyUrIList, const _variant_t & PropertyValueList ) {
    HRESULT _hr = raw_SetFilePropertiesOnServer(bstrInputURL, NumberOfPropertiesToSet, PropertyUrIList, PropertyValueList);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(944)
inline HRESULT TGFramework::_IInsightAuto::ISDocumentParserEnabled ( _bstr_t bstrInputURL, VARIANT_BOOL * bDocParserEnabled ) {
    HRESULT _hr = raw_ISDocumentParserEnabled(bstrInputURL, bDocParserEnabled);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(945)
inline HRESULT TGFramework::_IInsightAuto::GetLWFPathForUrl ( _bstr_t bstrUrl, BSTR * bstrLWFPath ) {
    HRESULT _hr = raw_GetLWFPathForUrl(bstrUrl, bstrLWFPath);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(946)
inline HRESULT TGFramework::_IInsightAuto::DisplaySEPackNGoDlg ( _bstr_t bstrFilename ) {
    HRESULT _hr = raw_DisplaySEPackNGoDlg(bstrFilename);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISEApplicationV8AfterDocumentOpenEvent wrapper method implementations
//

#pragma implementation_key(947)
inline HRESULT TGFramework::ISEApplicationV8AfterDocumentOpenEvent::AfterDocumentOpen ( IDispatch * theDocument ) {
    HRESULT _hr = raw_AfterDocumentOpen(theDocument);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface DISEFeatureSelectedFromPFEvents wrapper method implementations
//

#pragma implementation_key(948)
inline HRESULT TGFramework::DISEFeatureSelectedFromPFEvents::AfterFeatureSelectedFromPF ( IDispatch * theDocument, IDispatch * SelectedFeature, long lFeatureType ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0009\x0003", theDocument, SelectedFeature, lFeatureType);
}

//
// interface ISEFeatureSelectedFromPFEvents wrapper method implementations
//

#pragma implementation_key(949)
inline HRESULT TGFramework::ISEFeatureSelectedFromPFEvents::AfterFeatureSelectedFromPF ( IDispatch * theDocument, IDispatch * SelectedFeature, long lFeatureType ) {
    HRESULT _hr = raw_AfterFeatureSelectedFromPF(theDocument, SelectedFeature, lFeatureType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface MatTable wrapper method implementations
//

#pragma implementation_key(950)
inline HRESULT TGFramework::MatTable::GetMaterialList ( long * plNumMaterials, VARIANT * listOfMaterials ) {
    return _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x400c", plNumMaterials, listOfMaterials);
}

#pragma implementation_key(951)
inline HRESULT TGFramework::MatTable::SetActiveDocument ( IDispatch * pDocument ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", pDocument);
}

#pragma implementation_key(952)
inline HRESULT TGFramework::MatTable::AddMaterial ( _bstr_t bstrMatName, long lNumProps, const _variant_t & varPropList, _bstr_t bstrFaceStyle, _bstr_t bstrFillStyle, _bstr_t bstrVSPlusStyle ) {
    return _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0003\x000c\x0008\x0008\x0008", (BSTR)bstrMatName, lNumProps, &varPropList, (BSTR)bstrFaceStyle, (BSTR)bstrFillStyle, (BSTR)bstrVSPlusStyle);
}

#pragma implementation_key(953)
inline HRESULT TGFramework::MatTable::GetMatPropValue ( _bstr_t bstrMatName, MatTablePropIndex lPropIndex, VARIANT * varPropValue ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0003\x400c", (BSTR)bstrMatName, lPropIndex, varPropValue);
}

#pragma implementation_key(954)
inline HRESULT TGFramework::MatTable::SetMatPropValue ( _bstr_t bstrMatName, MatTablePropIndex lPropIndex, const _variant_t & varPropValue ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0003\x000c", (BSTR)bstrMatName, lPropIndex, &varPropValue);
}

#pragma implementation_key(955)
inline HRESULT TGFramework::MatTable::DeleteMaterial ( _bstr_t bstrMatName ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)bstrMatName);
}

#pragma implementation_key(956)
inline HRESULT TGFramework::MatTable::ApplyMaterial ( IDispatch * pDocument, _bstr_t bstrMatName ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0008", pDocument, (BSTR)bstrMatName);
}

#pragma implementation_key(957)
inline HRESULT TGFramework::MatTable::GetMatLibFileName ( VARIANT * varMatLibName ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c", varMatLibName);
}

#pragma implementation_key(958)
inline HRESULT TGFramework::MatTable::WriteMatLibFileFromXML ( _bstr_t bstrXMLFile, _bstr_t bstrMatLibName ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008", (BSTR)bstrXMLFile, (BSTR)bstrMatLibName);
}

#pragma implementation_key(959)
inline HRESULT TGFramework::MatTable::WriteMaterialDataToXML ( _bstr_t bstrXMLFile ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)bstrXMLFile);
}

#pragma implementation_key(960)
inline HRESULT TGFramework::MatTable::GetPSMGaugeListFromExcel ( _bstr_t bstrGageTableName, long * plNumGages, VARIANT * listOfGages ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x4003\x400c", (BSTR)bstrGageTableName, plNumGages, listOfGages);
}

#pragma implementation_key(961)
inline HRESULT TGFramework::MatTable::GetPSMGaugeInfoForDoc ( IDispatch * pDocument, BSTR * bstrGageName, BSTR * bstrGageFilePath, int * iMTLUsingExcel, BSTR * bstrMTLGageTableName, int * iDocUsingExcel, BSTR * bstrDocGageTableName, int * iCountBendRadiusVals, int * iCountBendAngleVals, int * iCountNFVals ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x4008\x4008\x4003\x4008\x4003\x4008\x4003\x4003\x4003", pDocument, bstrGageName, bstrGageFilePath, iMTLUsingExcel, bstrMTLGageTableName, iDocUsingExcel, bstrDocGageTableName, iCountBendRadiusVals, iCountBendAngleVals, iCountNFVals);
}

#pragma implementation_key(962)
inline HRESULT TGFramework::MatTable::GetDefaultGageFileName ( BSTR * strGageFileName ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008", strGageFileName);
}

#pragma implementation_key(963)
inline VARIANT_BOOL TGFramework::MatTable::PerformGageDataValidation ( _bstr_t strExcelFile, _bstr_t strGageTable, _bstr_t strGage ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_BOOL, (void*)&_result, 
        L"\x0008\x0008\x0008", (BSTR)strExcelFile, (BSTR)strGageTable, (BSTR)strGage);
    return _result;
}

#pragma implementation_key(964)
inline HRESULT TGFramework::MatTable::SetMaterialToGageTableAssociation ( IDispatch * pDocument, _bstr_t bstrMaterialName, _bstr_t bstrMaterialGageTableName, VARIANT_BOOL bAddAssociation ) {
    return _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0008\x0008\x000b", pDocument, (BSTR)bstrMaterialName, (BSTR)bstrMaterialGageTableName, bAddAssociation);
}

#pragma implementation_key(965)
inline HRESULT TGFramework::MatTable::SetDocumentToGageTableAssociation ( IDispatch * pDocument, _bstr_t bstrDocGageName, _bstr_t bstrDocGageTableName, VARIANT_BOOL bUseNeutralFactorFromExcel, VARIANT_BOOL bAddAssociation ) {
    return _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0008\x0008\x000b\x000b", pDocument, (BSTR)bstrDocGageName, (BSTR)bstrDocGageTableName, bUseNeutralFactorFromExcel, bAddAssociation);
}

#pragma implementation_key(966)
inline HRESULT TGFramework::MatTable::UseNeutralFactorFromExcel ( IDispatch * pDocument, VARIANT_BOOL bUseNeutralFactorFromExcel ) {
    return _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x000b", pDocument, bUseNeutralFactorFromExcel);
}

#pragma implementation_key(967)
inline HRESULT TGFramework::MatTable::EditOpenGageExcelFile ( _bstr_t bstrDocGageTableName ) {
    return _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)bstrDocGageTableName);
}

#pragma implementation_key(968)
inline HRESULT TGFramework::MatTable::GetCurrentGageName ( IDispatch * pDocument, BSTR * bstrGageName ) {
    return _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x4008", pDocument, bstrGageName);
}

#pragma implementation_key(969)
inline HRESULT TGFramework::MatTable::GetCurrentMaterialName ( IDispatch * pDocument, BSTR * bstrMaterialName ) {
    return _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x4008", pDocument, bstrMaterialName);
}

#pragma implementation_key(970)
inline HRESULT TGFramework::MatTable::GetMaterialListFromLibrary ( _bstr_t bstrLibraryName, long * plNumMaterials, VARIANT * listOfMaterials ) {
    return _com_dispatch_method(this, 0x20, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x4003\x400c", (BSTR)bstrLibraryName, plNumMaterials, listOfMaterials);
}

#pragma implementation_key(971)
inline HRESULT TGFramework::MatTable::AddMaterialToLibrary ( _bstr_t bstrMatName, _bstr_t bstrLibrary, _bstr_t bstrMaterialPath, long lNumProps, const _variant_t & varPropList, _bstr_t bstrFaceStyle, _bstr_t bstrFillStyle ) {
    return _com_dispatch_method(this, 0x21, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x0003\x000c\x0008\x0008", (BSTR)bstrMatName, (BSTR)bstrLibrary, (BSTR)bstrMaterialPath, lNumProps, &varPropList, (BSTR)bstrFaceStyle, (BSTR)bstrFillStyle);
}

#pragma implementation_key(972)
inline HRESULT TGFramework::MatTable::DeleteMaterialFromLibrary ( _bstr_t bstrMatName, _bstr_t bstrLibraryName ) {
    return _com_dispatch_method(this, 0x22, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008", (BSTR)bstrMatName, (BSTR)bstrLibraryName);
}

#pragma implementation_key(973)
inline HRESULT TGFramework::MatTable::GetMaterialPropValueFromLibrary ( _bstr_t bstrMatName, _bstr_t bstrLibraryName, MatTablePropIndex lPropIndex, VARIANT * varPropValue ) {
    return _com_dispatch_method(this, 0x23, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0003\x400c", (BSTR)bstrMatName, (BSTR)bstrLibraryName, lPropIndex, varPropValue);
}

#pragma implementation_key(974)
inline HRESULT TGFramework::MatTable::SetMaterialPropValueToLibrary ( _bstr_t bstrMatName, _bstr_t bstrLibraryName, MatTablePropIndex lPropIndex, const _variant_t & varPropValue ) {
    return _com_dispatch_method(this, 0x24, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0003\x000c", (BSTR)bstrMatName, (BSTR)bstrLibraryName, lPropIndex, &varPropValue);
}

#pragma implementation_key(975)
inline HRESULT TGFramework::MatTable::GetMaterialPropValueFromDoc ( IDispatch * pDocument, MatTablePropIndex lPropIndex, VARIANT * varPropValue ) {
    return _com_dispatch_method(this, 0x25, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0003\x400c", pDocument, lPropIndex, varPropValue);
}

#pragma implementation_key(976)
inline HRESULT TGFramework::MatTable::ApplyMaterialToDoc ( IDispatch * pDocument, _bstr_t bstrMatName, _bstr_t bstrLibraryName ) {
    return _com_dispatch_method(this, 0x26, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0008\x0008", pDocument, (BSTR)bstrMatName, (BSTR)bstrLibraryName);
}

#pragma implementation_key(977)
inline HRESULT TGFramework::MatTable::AddMaterialToFavorites ( _bstr_t bstrMaterialName, _bstr_t bstrLibraryName ) {
    return _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008", (BSTR)bstrMaterialName, (BSTR)bstrLibraryName);
}

#pragma implementation_key(978)
inline HRESULT TGFramework::MatTable::GetFavoriteMaterialList ( VARIANT * MaterialNames, VARIANT * LibraryNames, long * plNumMaterials ) {
    return _com_dispatch_method(this, 0x19, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x400c\x4003", MaterialNames, LibraryNames, plNumMaterials);
}

#pragma implementation_key(979)
inline HRESULT TGFramework::MatTable::GetMRUMaterialList ( VARIANT * MaterialNames, VARIANT * LibraryNames, long * plNumMaterials ) {
    return _com_dispatch_method(this, 0x1a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x400c\x4003", MaterialNames, LibraryNames, plNumMaterials);
}

#pragma implementation_key(980)
inline HRESULT TGFramework::MatTable::SetMRUMaterialLimit ( int nNoOfMRUMtls ) {
    return _com_dispatch_method(this, 0x27, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", nNoOfMRUMtls);
}

#pragma implementation_key(981)
inline HRESULT TGFramework::MatTable::GetMRUMaterialLimit ( int * nNoOfMRUMtls ) {
    return _com_dispatch_method(this, 0x28, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003", nNoOfMRUMtls);
}

#pragma implementation_key(982)
inline HRESULT TGFramework::MatTable::ClearMRUList ( ) {
    return _com_dispatch_method(this, 0x29, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(983)
inline HRESULT TGFramework::MatTable::AddCustomProperty ( _bstr_t bstrMatName, _bstr_t bstrMatLibName, _bstr_t bstrPropName, enum UnitTypeConstants ePropUnitType, const _variant_t & varPropValue ) {
    return _com_dispatch_method(this, 0x1b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x0003\x000c", (BSTR)bstrMatName, (BSTR)bstrMatLibName, (BSTR)bstrPropName, ePropUnitType, &varPropValue);
}

#pragma implementation_key(984)
inline HRESULT TGFramework::MatTable::DeleteCustomProperty ( _bstr_t bstrMatName, _bstr_t bstrMatLibName, int nPropIndex ) {
    return _com_dispatch_method(this, 0x1c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0003", (BSTR)bstrMatName, (BSTR)bstrMatLibName, nPropIndex);
}

#pragma implementation_key(985)
inline HRESULT TGFramework::MatTable::GetCountOfCustomProperties ( _bstr_t bstrMatName, _bstr_t bstrMatLibName, int * nNumOfCustProps ) {
    return _com_dispatch_method(this, 0x2a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x4003", (BSTR)bstrMatName, (BSTR)bstrMatLibName, nNumOfCustProps);
}

#pragma implementation_key(986)
inline HRESULT TGFramework::MatTable::GetCustomMaterialPropertyFromLibrary ( _bstr_t bstrMatName, _bstr_t bstrMatLibName, int nPropIndex, BSTR * bstrPropName, enum UnitTypeConstants * ePropUnitType, VARIANT * varPropValue ) {
    return _com_dispatch_method(this, 0x2b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0003\x4008\x4003\x400c", (BSTR)bstrMatName, (BSTR)bstrMatLibName, nPropIndex, bstrPropName, ePropUnitType, varPropValue);
}

#pragma implementation_key(987)
inline HRESULT TGFramework::MatTable::GetCustomMaterialPropertyFromDoc ( IDispatch * pDocument, int nPropIndex, BSTR * bstrPropName, enum UnitTypeConstants * ePropUnitType, VARIANT * varPropValue ) {
    return _com_dispatch_method(this, 0x2c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0003\x4008\x4003\x400c", pDocument, nPropIndex, bstrPropName, ePropUnitType, varPropValue);
}

#pragma implementation_key(988)
inline HRESULT TGFramework::MatTable::GetMaterialsFolderPath ( BSTR * bstrMtlFolderPath ) {
    return _com_dispatch_method(this, 0x1d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008", bstrMtlFolderPath);
}

#pragma implementation_key(989)
inline HRESULT TGFramework::MatTable::GetMaterialLibraryFileList ( VARIANT * MaterialLibList, long * plNumMaterialLibraries ) {
    return _com_dispatch_method(this, 0x1e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x4003", MaterialLibList, plNumMaterialLibraries);
}

#pragma implementation_key(990)
inline HRESULT TGFramework::MatTable::CreateNewMaterialLibrary ( _bstr_t bstrLibInputName ) {
    return _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)bstrLibInputName);
}

#pragma implementation_key(991)
inline HRESULT TGFramework::MatTable::CreateNewDirectory ( _bstr_t bstrLibname, _bstr_t bstrDirectoryPath ) {
    return _com_dispatch_method(this, 0x1f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008", (BSTR)bstrLibname, (BSTR)bstrDirectoryPath);
}

#pragma implementation_key(992)
inline HRESULT TGFramework::MatTable::RenameMaterial ( _bstr_t bstrMatOldName, _bstr_t bstrLibname, _bstr_t bstrMatNewName ) {
    return _com_dispatch_method(this, 0x2d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008", (BSTR)bstrMatOldName, (BSTR)bstrLibname, (BSTR)bstrMatNewName);
}

#pragma implementation_key(993)
inline HRESULT TGFramework::MatTable::RenameLibrary ( _bstr_t bstrLibOldName, _bstr_t bstrLibNeName ) {
    return _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008", (BSTR)bstrLibOldName, (BSTR)bstrLibNeName);
}

#pragma implementation_key(994)
inline HRESULT TGFramework::MatTable::RenameDirectory ( _bstr_t bstrDirOldName, _bstr_t bstrLibname, _bstr_t bstrDirNewName ) {
    return _com_dispatch_method(this, 0x2f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008", (BSTR)bstrDirOldName, (BSTR)bstrLibname, (BSTR)bstrDirNewName);
}

#pragma implementation_key(995)
inline HRESULT TGFramework::MatTable::ExportMaterialDataToFile ( _bstr_t bstrMaterialLibraryName, _bstr_t bstrXMLFile ) {
    return _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008", (BSTR)bstrMaterialLibraryName, (BSTR)bstrXMLFile);
}

#pragma implementation_key(996)
inline HRESULT TGFramework::MatTable::ImportMaterialDataFromFile ( _bstr_t bstrXMLFile, _bstr_t bstrMatLibFile ) {
    return _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008", (BSTR)bstrXMLFile, (BSTR)bstrMatLibFile);
}

#pragma implementation_key(997)
inline HRESULT TGFramework::MatTable::SetMaterialsFolderPath ( _bstr_t bstrMtlFolderPath ) {
    return _com_dispatch_method(this, 0x30, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)bstrMtlFolderPath);
}

#pragma implementation_key(998)
inline HRESULT TGFramework::MatTable::DeleteDirectory ( _bstr_t bstrDirName, _bstr_t bstrLibname ) {
    return _com_dispatch_method(this, 0x31, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008", (BSTR)bstrDirName, (BSTR)bstrLibname);
}

#pragma implementation_key(999)
inline HRESULT TGFramework::MatTable::GetMaterialLibraryList ( VARIANT * MaterialLibList, long * plNumMaterialLibraries ) {
    return _com_dispatch_method(this, 0x32, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x4003", MaterialLibList, plNumMaterialLibraries);
}

#pragma implementation_key(1000)
inline HRESULT TGFramework::MatTable::ApplyMaterialToFile ( _bstr_t bstrFilename, _bstr_t bstrMatName, _bstr_t bstrLibraryName ) {
    return _com_dispatch_method(this, 0x33, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008", (BSTR)bstrFilename, (BSTR)bstrMatName, (BSTR)bstrLibraryName);
}

#pragma implementation_key(1001)
inline HRESULT TGFramework::MatTable::GetOODStatusofMaterialAndGage ( IDispatch * pDoc, VARIANT_BOOL * vbMaterialPropOOD, VARIANT_BOOL * vbGagePropOOD ) {
    return _com_dispatch_method(this, 0x34, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x400b\x400b", pDoc, vbMaterialPropOOD, vbGagePropOOD);
}

#pragma implementation_key(1002)
inline HRESULT TGFramework::MatTable::UpdateOODMaterialAndGageProperties ( IDispatch * pDoc, VARIANT_BOOL vbUpdateMaterialProp, VARIANT_BOOL vbUpdateGageProp ) {
    return _com_dispatch_method(this, 0x35, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x000b\x000b", pDoc, vbUpdateMaterialProp, vbUpdateGageProp);
}

#pragma implementation_key(1003)
inline HRESULT TGFramework::MatTable::GetNeutralFactor ( IDispatch * pDoc, double dBendAngle, double dBendRadius, double * dNeutralFactor ) {
    return _com_dispatch_method(this, 0x36, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0005\x0005\x4005", pDoc, dBendAngle, dBendRadius, dNeutralFactor);
}

#pragma implementation_key(1004)
inline HRESULT TGFramework::MatTable::ApplyGageFromLibraryToDoc ( IDispatch * pDocument, _bstr_t bstrGage, _bstr_t bstrLibraryName ) {
    return _com_dispatch_method(this, 0x37, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0008\x0008", pDocument, (BSTR)bstrGage, (BSTR)bstrLibraryName);
}

#pragma implementation_key(1005)
inline HRESULT TGFramework::MatTable::ApplyGageFromGageTableToDoc ( IDispatch * pDocument, _bstr_t bstrGage, _bstr_t bstrGageTableName ) {
    return _com_dispatch_method(this, 0x38, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0008\x0008", pDocument, (BSTR)bstrGage, (BSTR)bstrGageTableName);
}

#pragma implementation_key(1006)
inline HRESULT TGFramework::MatTable::ApplyMaterialToInternalComponents ( IDispatch * pDocument, long NumOfInternalComponents, SAFEARRAY * * psaInternalComponents, _bstr_t bstrMatName, _bstr_t bstrLibraryName ) {
    return _com_dispatch_method(this, 0x39, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0003\x6009\x0008\x0008", pDocument, NumOfInternalComponents, psaInternalComponents, (BSTR)bstrMatName, (BSTR)bstrLibraryName);
}

#pragma implementation_key(1007)
inline HRESULT TGFramework::MatTable::ApplyGageFromLibraryToInternalComponents ( IDispatch * pDocument, long NumOfInternalComponents, SAFEARRAY * * psaInternalComponents, _bstr_t bstrGage, _bstr_t bstrLibraryName ) {
    return _com_dispatch_method(this, 0x3a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0003\x6009\x0008\x0008", pDocument, NumOfInternalComponents, psaInternalComponents, (BSTR)bstrGage, (BSTR)bstrLibraryName);
}

#pragma implementation_key(1008)
inline HRESULT TGFramework::MatTable::ApplyGageFromGageTableToInternalComponents ( IDispatch * pDocument, long NumOfInternalComponents, SAFEARRAY * * psaInternalComponents, _bstr_t bstrGage, _bstr_t bstrGageTableName ) {
    return _com_dispatch_method(this, 0x3b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0003\x6009\x0008\x0008", pDocument, NumOfInternalComponents, psaInternalComponents, (BSTR)bstrGage, (BSTR)bstrGageTableName);
}

//
// interface _IMatTableAuto wrapper method implementations
//

#pragma implementation_key(1009)
inline HRESULT TGFramework::_IMatTableAuto::GetMaterialList ( long * plNumMaterials, VARIANT * listOfMaterials ) {
    HRESULT _hr = raw_GetMaterialList(plNumMaterials, listOfMaterials);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1010)
inline HRESULT TGFramework::_IMatTableAuto::SetActiveDocument ( IDispatch * pDocument ) {
    HRESULT _hr = raw_SetActiveDocument(pDocument);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1011)
inline HRESULT TGFramework::_IMatTableAuto::AddMaterial ( _bstr_t bstrMatName, long lNumProps, const _variant_t & varPropList, _bstr_t bstrFaceStyle, _bstr_t bstrFillStyle, _bstr_t bstrVSPlusStyle ) {
    HRESULT _hr = raw_AddMaterial(bstrMatName, lNumProps, varPropList, bstrFaceStyle, bstrFillStyle, bstrVSPlusStyle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1012)
inline HRESULT TGFramework::_IMatTableAuto::GetMatPropValue ( _bstr_t bstrMatName, MatTablePropIndex lPropIndex, VARIANT * varPropValue ) {
    HRESULT _hr = raw_GetMatPropValue(bstrMatName, lPropIndex, varPropValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1013)
inline HRESULT TGFramework::_IMatTableAuto::SetMatPropValue ( _bstr_t bstrMatName, MatTablePropIndex lPropIndex, const _variant_t & varPropValue ) {
    HRESULT _hr = raw_SetMatPropValue(bstrMatName, lPropIndex, varPropValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1014)
inline HRESULT TGFramework::_IMatTableAuto::DeleteMaterial ( _bstr_t bstrMatName ) {
    HRESULT _hr = raw_DeleteMaterial(bstrMatName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1015)
inline HRESULT TGFramework::_IMatTableAuto::ApplyMaterial ( IDispatch * pDocument, _bstr_t bstrMatName ) {
    HRESULT _hr = raw_ApplyMaterial(pDocument, bstrMatName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1016)
inline HRESULT TGFramework::_IMatTableAuto::GetMatLibFileName ( VARIANT * varMatLibName ) {
    HRESULT _hr = raw_GetMatLibFileName(varMatLibName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1017)
inline HRESULT TGFramework::_IMatTableAuto::WriteMatLibFileFromXML ( _bstr_t bstrXMLFile, _bstr_t bstrMatLibName ) {
    HRESULT _hr = raw_WriteMatLibFileFromXML(bstrXMLFile, bstrMatLibName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1018)
inline HRESULT TGFramework::_IMatTableAuto::WriteMaterialDataToXML ( _bstr_t bstrXMLFile ) {
    HRESULT _hr = raw_WriteMaterialDataToXML(bstrXMLFile);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1019)
inline HRESULT TGFramework::_IMatTableAuto::GetPSMGaugeListFromExcel ( _bstr_t bstrGageTableName, long * plNumGages, VARIANT * listOfGages ) {
    HRESULT _hr = raw_GetPSMGaugeListFromExcel(bstrGageTableName, plNumGages, listOfGages);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1020)
inline HRESULT TGFramework::_IMatTableAuto::GetPSMGaugeInfoForDoc ( IDispatch * pDocument, BSTR * bstrGageName, BSTR * bstrGageFilePath, int * iMTLUsingExcel, BSTR * bstrMTLGageTableName, int * iDocUsingExcel, BSTR * bstrDocGageTableName, int * iCountBendRadiusVals, int * iCountBendAngleVals, int * iCountNFVals ) {
    HRESULT _hr = raw_GetPSMGaugeInfoForDoc(pDocument, bstrGageName, bstrGageFilePath, iMTLUsingExcel, bstrMTLGageTableName, iDocUsingExcel, bstrDocGageTableName, iCountBendRadiusVals, iCountBendAngleVals, iCountNFVals);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1021)
inline HRESULT TGFramework::_IMatTableAuto::GetDefaultGageFileName ( BSTR * strGageFileName ) {
    HRESULT _hr = raw_GetDefaultGageFileName(strGageFileName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1022)
inline VARIANT_BOOL TGFramework::_IMatTableAuto::PerformGageDataValidation ( _bstr_t strExcelFile, _bstr_t strGageTable, _bstr_t strGage ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_PerformGageDataValidation(strExcelFile, strGageTable, strGage, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1023)
inline HRESULT TGFramework::_IMatTableAuto::SetMaterialToGageTableAssociation ( IDispatch * pDocument, _bstr_t bstrMaterialName, _bstr_t bstrMaterialGageTableName, VARIANT_BOOL bAddAssociation ) {
    HRESULT _hr = raw_SetMaterialToGageTableAssociation(pDocument, bstrMaterialName, bstrMaterialGageTableName, bAddAssociation);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1024)
inline HRESULT TGFramework::_IMatTableAuto::SetDocumentToGageTableAssociation ( IDispatch * pDocument, _bstr_t bstrDocGageName, _bstr_t bstrDocGageTableName, VARIANT_BOOL bUseNeutralFactorFromExcel, VARIANT_BOOL bAddAssociation ) {
    HRESULT _hr = raw_SetDocumentToGageTableAssociation(pDocument, bstrDocGageName, bstrDocGageTableName, bUseNeutralFactorFromExcel, bAddAssociation);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1025)
inline HRESULT TGFramework::_IMatTableAuto::UseNeutralFactorFromExcel ( IDispatch * pDocument, VARIANT_BOOL bUseNeutralFactorFromExcel ) {
    HRESULT _hr = raw_UseNeutralFactorFromExcel(pDocument, bUseNeutralFactorFromExcel);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1026)
inline HRESULT TGFramework::_IMatTableAuto::EditOpenGageExcelFile ( _bstr_t bstrDocGageTableName ) {
    HRESULT _hr = raw_EditOpenGageExcelFile(bstrDocGageTableName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1027)
inline HRESULT TGFramework::_IMatTableAuto::GetCurrentGageName ( IDispatch * pDocument, BSTR * bstrGageName ) {
    HRESULT _hr = raw_GetCurrentGageName(pDocument, bstrGageName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1028)
inline HRESULT TGFramework::_IMatTableAuto::GetCurrentMaterialName ( IDispatch * pDocument, BSTR * bstrMaterialName ) {
    HRESULT _hr = raw_GetCurrentMaterialName(pDocument, bstrMaterialName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1029)
inline HRESULT TGFramework::_IMatTableAuto::GetMaterialListFromLibrary ( _bstr_t bstrLibraryName, long * plNumMaterials, VARIANT * listOfMaterials ) {
    HRESULT _hr = raw_GetMaterialListFromLibrary(bstrLibraryName, plNumMaterials, listOfMaterials);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1030)
inline HRESULT TGFramework::_IMatTableAuto::AddMaterialToLibrary ( _bstr_t bstrMatName, _bstr_t bstrLibrary, _bstr_t bstrMaterialPath, long lNumProps, const _variant_t & varPropList, _bstr_t bstrFaceStyle, _bstr_t bstrFillStyle ) {
    HRESULT _hr = raw_AddMaterialToLibrary(bstrMatName, bstrLibrary, bstrMaterialPath, lNumProps, varPropList, bstrFaceStyle, bstrFillStyle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1031)
inline HRESULT TGFramework::_IMatTableAuto::DeleteMaterialFromLibrary ( _bstr_t bstrMatName, _bstr_t bstrLibraryName ) {
    HRESULT _hr = raw_DeleteMaterialFromLibrary(bstrMatName, bstrLibraryName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1032)
inline HRESULT TGFramework::_IMatTableAuto::GetMaterialPropValueFromLibrary ( _bstr_t bstrMatName, _bstr_t bstrLibraryName, MatTablePropIndex lPropIndex, VARIANT * varPropValue ) {
    HRESULT _hr = raw_GetMaterialPropValueFromLibrary(bstrMatName, bstrLibraryName, lPropIndex, varPropValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1033)
inline HRESULT TGFramework::_IMatTableAuto::SetMaterialPropValueToLibrary ( _bstr_t bstrMatName, _bstr_t bstrLibraryName, MatTablePropIndex lPropIndex, const _variant_t & varPropValue ) {
    HRESULT _hr = raw_SetMaterialPropValueToLibrary(bstrMatName, bstrLibraryName, lPropIndex, varPropValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1034)
inline HRESULT TGFramework::_IMatTableAuto::GetMaterialPropValueFromDoc ( IDispatch * pDocument, MatTablePropIndex lPropIndex, VARIANT * varPropValue ) {
    HRESULT _hr = raw_GetMaterialPropValueFromDoc(pDocument, lPropIndex, varPropValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1035)
inline HRESULT TGFramework::_IMatTableAuto::ApplyMaterialToDoc ( IDispatch * pDocument, _bstr_t bstrMatName, _bstr_t bstrLibraryName ) {
    HRESULT _hr = raw_ApplyMaterialToDoc(pDocument, bstrMatName, bstrLibraryName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1036)
inline HRESULT TGFramework::_IMatTableAuto::AddMaterialToFavorites ( _bstr_t bstrMaterialName, _bstr_t bstrLibraryName ) {
    HRESULT _hr = raw_AddMaterialToFavorites(bstrMaterialName, bstrLibraryName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1037)
inline HRESULT TGFramework::_IMatTableAuto::GetFavoriteMaterialList ( VARIANT * MaterialNames, VARIANT * LibraryNames, long * plNumMaterials ) {
    HRESULT _hr = raw_GetFavoriteMaterialList(MaterialNames, LibraryNames, plNumMaterials);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1038)
inline HRESULT TGFramework::_IMatTableAuto::GetMRUMaterialList ( VARIANT * MaterialNames, VARIANT * LibraryNames, long * plNumMaterials ) {
    HRESULT _hr = raw_GetMRUMaterialList(MaterialNames, LibraryNames, plNumMaterials);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1039)
inline HRESULT TGFramework::_IMatTableAuto::SetMRUMaterialLimit ( int nNoOfMRUMtls ) {
    HRESULT _hr = raw_SetMRUMaterialLimit(nNoOfMRUMtls);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1040)
inline HRESULT TGFramework::_IMatTableAuto::GetMRUMaterialLimit ( int * nNoOfMRUMtls ) {
    HRESULT _hr = raw_GetMRUMaterialLimit(nNoOfMRUMtls);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1041)
inline HRESULT TGFramework::_IMatTableAuto::ClearMRUList ( ) {
    HRESULT _hr = raw_ClearMRUList();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1042)
inline HRESULT TGFramework::_IMatTableAuto::AddCustomProperty ( _bstr_t bstrMatName, _bstr_t bstrMatLibName, _bstr_t bstrPropName, enum UnitTypeConstants ePropUnitType, const _variant_t & varPropValue ) {
    HRESULT _hr = raw_AddCustomProperty(bstrMatName, bstrMatLibName, bstrPropName, ePropUnitType, varPropValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1043)
inline HRESULT TGFramework::_IMatTableAuto::DeleteCustomProperty ( _bstr_t bstrMatName, _bstr_t bstrMatLibName, int nPropIndex ) {
    HRESULT _hr = raw_DeleteCustomProperty(bstrMatName, bstrMatLibName, nPropIndex);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1044)
inline HRESULT TGFramework::_IMatTableAuto::GetCountOfCustomProperties ( _bstr_t bstrMatName, _bstr_t bstrMatLibName, int * nNumOfCustProps ) {
    HRESULT _hr = raw_GetCountOfCustomProperties(bstrMatName, bstrMatLibName, nNumOfCustProps);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1045)
inline HRESULT TGFramework::_IMatTableAuto::GetCustomMaterialPropertyFromLibrary ( _bstr_t bstrMatName, _bstr_t bstrMatLibName, int nPropIndex, BSTR * bstrPropName, enum UnitTypeConstants * ePropUnitType, VARIANT * varPropValue ) {
    HRESULT _hr = raw_GetCustomMaterialPropertyFromLibrary(bstrMatName, bstrMatLibName, nPropIndex, bstrPropName, ePropUnitType, varPropValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1046)
inline HRESULT TGFramework::_IMatTableAuto::GetCustomMaterialPropertyFromDoc ( IDispatch * pDocument, int nPropIndex, BSTR * bstrPropName, enum UnitTypeConstants * ePropUnitType, VARIANT * varPropValue ) {
    HRESULT _hr = raw_GetCustomMaterialPropertyFromDoc(pDocument, nPropIndex, bstrPropName, ePropUnitType, varPropValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1047)
inline HRESULT TGFramework::_IMatTableAuto::GetMaterialsFolderPath ( BSTR * bstrMtlFolderPath ) {
    HRESULT _hr = raw_GetMaterialsFolderPath(bstrMtlFolderPath);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1048)
inline HRESULT TGFramework::_IMatTableAuto::GetMaterialLibraryFileList ( VARIANT * MaterialLibList, long * plNumMaterialLibraries ) {
    HRESULT _hr = raw_GetMaterialLibraryFileList(MaterialLibList, plNumMaterialLibraries);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1049)
inline HRESULT TGFramework::_IMatTableAuto::CreateNewMaterialLibrary ( _bstr_t bstrLibInputName ) {
    HRESULT _hr = raw_CreateNewMaterialLibrary(bstrLibInputName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1050)
inline HRESULT TGFramework::_IMatTableAuto::CreateNewDirectory ( _bstr_t bstrLibname, _bstr_t bstrDirectoryPath ) {
    HRESULT _hr = raw_CreateNewDirectory(bstrLibname, bstrDirectoryPath);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1051)
inline HRESULT TGFramework::_IMatTableAuto::RenameMaterial ( _bstr_t bstrMatOldName, _bstr_t bstrLibname, _bstr_t bstrMatNewName ) {
    HRESULT _hr = raw_RenameMaterial(bstrMatOldName, bstrLibname, bstrMatNewName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1052)
inline HRESULT TGFramework::_IMatTableAuto::RenameLibrary ( _bstr_t bstrLibOldName, _bstr_t bstrLibNeName ) {
    HRESULT _hr = raw_RenameLibrary(bstrLibOldName, bstrLibNeName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1053)
inline HRESULT TGFramework::_IMatTableAuto::RenameDirectory ( _bstr_t bstrDirOldName, _bstr_t bstrLibname, _bstr_t bstrDirNewName ) {
    HRESULT _hr = raw_RenameDirectory(bstrDirOldName, bstrLibname, bstrDirNewName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1054)
inline HRESULT TGFramework::_IMatTableAuto::ExportMaterialDataToFile ( _bstr_t bstrMaterialLibraryName, _bstr_t bstrXMLFile ) {
    HRESULT _hr = raw_ExportMaterialDataToFile(bstrMaterialLibraryName, bstrXMLFile);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1055)
inline HRESULT TGFramework::_IMatTableAuto::ImportMaterialDataFromFile ( _bstr_t bstrXMLFile, _bstr_t bstrMatLibFile ) {
    HRESULT _hr = raw_ImportMaterialDataFromFile(bstrXMLFile, bstrMatLibFile);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1056)
inline HRESULT TGFramework::_IMatTableAuto::SetMaterialsFolderPath ( _bstr_t bstrMtlFolderPath ) {
    HRESULT _hr = raw_SetMaterialsFolderPath(bstrMtlFolderPath);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1057)
inline HRESULT TGFramework::_IMatTableAuto::DeleteDirectory ( _bstr_t bstrDirName, _bstr_t bstrLibname ) {
    HRESULT _hr = raw_DeleteDirectory(bstrDirName, bstrLibname);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1058)
inline HRESULT TGFramework::_IMatTableAuto::GetMaterialLibraryList ( VARIANT * MaterialLibList, long * plNumMaterialLibraries ) {
    HRESULT _hr = raw_GetMaterialLibraryList(MaterialLibList, plNumMaterialLibraries);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1059)
inline HRESULT TGFramework::_IMatTableAuto::ApplyMaterialToFile ( _bstr_t bstrFilename, _bstr_t bstrMatName, _bstr_t bstrLibraryName ) {
    HRESULT _hr = raw_ApplyMaterialToFile(bstrFilename, bstrMatName, bstrLibraryName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1060)
inline HRESULT TGFramework::_IMatTableAuto::GetOODStatusofMaterialAndGage ( IDispatch * pDoc, VARIANT_BOOL * vbMaterialPropOOD, VARIANT_BOOL * vbGagePropOOD ) {
    HRESULT _hr = raw_GetOODStatusofMaterialAndGage(pDoc, vbMaterialPropOOD, vbGagePropOOD);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1061)
inline HRESULT TGFramework::_IMatTableAuto::UpdateOODMaterialAndGageProperties ( IDispatch * pDoc, VARIANT_BOOL vbUpdateMaterialProp, VARIANT_BOOL vbUpdateGageProp ) {
    HRESULT _hr = raw_UpdateOODMaterialAndGageProperties(pDoc, vbUpdateMaterialProp, vbUpdateGageProp);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1062)
inline HRESULT TGFramework::_IMatTableAuto::GetNeutralFactor ( IDispatch * pDoc, double dBendAngle, double dBendRadius, double * dNeutralFactor ) {
    HRESULT _hr = raw_GetNeutralFactor(pDoc, dBendAngle, dBendRadius, dNeutralFactor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1063)
inline HRESULT TGFramework::_IMatTableAuto::ApplyGageFromLibraryToDoc ( IDispatch * pDocument, _bstr_t bstrGage, _bstr_t bstrLibraryName ) {
    HRESULT _hr = raw_ApplyGageFromLibraryToDoc(pDocument, bstrGage, bstrLibraryName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1064)
inline HRESULT TGFramework::_IMatTableAuto::ApplyGageFromGageTableToDoc ( IDispatch * pDocument, _bstr_t bstrGage, _bstr_t bstrGageTableName ) {
    HRESULT _hr = raw_ApplyGageFromGageTableToDoc(pDocument, bstrGage, bstrGageTableName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1065)
inline HRESULT TGFramework::_IMatTableAuto::ApplyMaterialToInternalComponents ( IDispatch * pDocument, long NumOfInternalComponents, SAFEARRAY * * psaInternalComponents, _bstr_t bstrMatName, _bstr_t bstrLibraryName ) {
    HRESULT _hr = raw_ApplyMaterialToInternalComponents(pDocument, NumOfInternalComponents, psaInternalComponents, bstrMatName, bstrLibraryName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1066)
inline HRESULT TGFramework::_IMatTableAuto::ApplyGageFromLibraryToInternalComponents ( IDispatch * pDocument, long NumOfInternalComponents, SAFEARRAY * * psaInternalComponents, _bstr_t bstrGage, _bstr_t bstrLibraryName ) {
    HRESULT _hr = raw_ApplyGageFromLibraryToInternalComponents(pDocument, NumOfInternalComponents, psaInternalComponents, bstrGage, bstrLibraryName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1067)
inline HRESULT TGFramework::_IMatTableAuto::ApplyGageFromGageTableToInternalComponents ( IDispatch * pDocument, long NumOfInternalComponents, SAFEARRAY * * psaInternalComponents, _bstr_t bstrGage, _bstr_t bstrGageTableName ) {
    HRESULT _hr = raw_ApplyGageFromGageTableToInternalComponents(pDocument, NumOfInternalComponents, psaInternalComponents, bstrGage, bstrGageTableName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISENewFileUIEvents wrapper method implementations
//

#pragma implementation_key(1068)
inline HRESULT TGFramework::ISENewFileUIEvents::OnNewFileUI ( enum DocumentTypeConstants DocumentType, BSTR * Filename, BSTR * AppendToTitle ) {
    HRESULT _hr = raw_OnNewFileUI(DocumentType, Filename, AppendToTitle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISEShortCutMenuEvents wrapper method implementations
//

#pragma implementation_key(1069)
inline HRESULT TGFramework::ISEShortCutMenuEvents::BuildMenu ( _bstr_t EnvCatID, enum ShortCutMenuContextConstants Context, IDispatch * pGraphicDispatch, SAFEARRAY * * MenuStrings, SAFEARRAY * * CommandIDs ) {
    HRESULT _hr = raw_BuildMenu(EnvCatID, Context, pGraphicDispatch, MenuStrings, CommandIDs);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface SolidEdgeTCE wrapper method implementations
//

#pragma implementation_key(1070)
inline HRESULT TGFramework::SolidEdgeTCE::GetPDMCachePath ( BSTR * bStrCachePath ) {
    return _com_dispatch_method(this, 0x60010000, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008", bStrCachePath);
}

#pragma implementation_key(1071)
inline HRESULT TGFramework::SolidEdgeTCE::CheckInDocumentsToTeamCenterServer ( SAFEARRAY * * ppsaFileList, VARIANT_BOOL bOnlyUpload ) {
    return _com_dispatch_method(this, 0x60010001, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x600c\x000b", ppsaFileList, bOnlyUpload);
}

#pragma implementation_key(1072)
inline HRESULT TGFramework::SolidEdgeTCE::CheckOutDocumentsFromTeamCenterServer ( _bstr_t bstrDirctFileItemId, _bstr_t bstrDirctFileItemRevId, VARIANT_BOOL bOnlyDownload, _bstr_t bstrFilename, enum DocumentDownloadLevel enumDownloadLevel ) {
    return _com_dispatch_method(this, 0x60010002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x000b\x0008\x0003", (BSTR)bstrDirctFileItemId, (BSTR)bstrDirctFileItemRevId, bOnlyDownload, (BSTR)bstrFilename, enumDownloadLevel);
}

#pragma implementation_key(1073)
inline int TGFramework::SolidEdgeTCE::IsTeamCenterFileCheckedOut ( _bstr_t bstrFilename ) {
    int _result = 0;
    _com_dispatch_method(this, 0x60010003, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)bstrFilename);
    return _result;
}

#pragma implementation_key(1074)
inline HRESULT TGFramework::SolidEdgeTCE::GetDocumentUID ( _bstr_t bstrFilename, BSTR * bstrItemId, BSTR * bstrItemRev ) {
    return _com_dispatch_method(this, 0x60010004, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x4008\x4008", (BSTR)bstrFilename, bstrItemId, bstrItemRev);
}

#pragma implementation_key(1075)
inline HRESULT TGFramework::SolidEdgeTCE::DoesTeamCenterFileExists ( _bstr_t bstrItemId, _bstr_t bstrItemRev, VARIANT_BOOL * bFileExists ) {
    return _com_dispatch_method(this, 0x60010005, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x400b", (BSTR)bstrItemId, (BSTR)bstrItemRev, bFileExists);
}

#pragma implementation_key(1076)
inline HRESULT TGFramework::SolidEdgeTCE::GetTeamCenterMode ( VARIANT_BOOL * bIsTeamCenterMode ) {
    return _com_dispatch_method(this, 0x60010006, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b", bIsTeamCenterMode);
}

#pragma implementation_key(1077)
inline HRESULT TGFramework::SolidEdgeTCE::SetTeamCenterMode ( VARIANT_BOOL bMode ) {
    return _com_dispatch_method(this, 0x60010007, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", bMode);
}

#pragma implementation_key(1078)
inline HRESULT TGFramework::SolidEdgeTCE::ValidateLogin ( _bstr_t bstrUserName, _bstr_t bstrPassword, _bstr_t bstrGroup, _bstr_t bstrUserRole, _bstr_t bstrDBUrl ) {
    return _com_dispatch_method(this, 0x60010008, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x0008\x0008", (BSTR)bstrUserName, (BSTR)bstrPassword, (BSTR)bstrGroup, (BSTR)bstrUserRole, (BSTR)bstrDBUrl);
}

#pragma implementation_key(1079)
inline HRESULT TGFramework::SolidEdgeTCE::AssignItemID ( _bstr_t bstrItemType, BSTR * bstrItemId, BSTR * bstrItemRev ) {
    return _com_dispatch_method(this, 0x60010009, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x4008\x4008", (BSTR)bstrItemType, bstrItemId, bstrItemRev);
}

#pragma implementation_key(1080)
inline HRESULT TGFramework::SolidEdgeTCE::PutItemTypeAsCustomProp ( _bstr_t bstrFilename, _bstr_t bstrItemType ) {
    return _com_dispatch_method(this, 0x6001000a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008", (BSTR)bstrFilename, (BSTR)bstrItemType);
}

#pragma implementation_key(1081)
inline HRESULT TGFramework::SolidEdgeTCE::GetDatasetNameFromCookie ( _bstr_t bstrFilename, BSTR * bstrDatasetName ) {
    return _com_dispatch_method(this, 0x6001000b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x4008", (BSTR)bstrFilename, bstrDatasetName);
}

#pragma implementation_key(1082)
inline HRESULT TGFramework::SolidEdgeTCE::DeleteFilesFromCache ( SAFEARRAY * * psaCacheFiles ) {
    return _com_dispatch_method(this, 0x6001000c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x600c", psaCacheFiles);
}

#pragma implementation_key(1083)
inline HRESULT TGFramework::SolidEdgeTCE::ImportDocumentsToServer ( long lnumberOfDocumentsFoldersToImport, SAFEARRAY * * psalistOfFilesFoldersToImport, _bstr_t bstrUserName, _bstr_t bstrPassword, _bstr_t bstrGroup, _bstr_t bstrUserRole, _bstr_t bstrDBUrl, VARIANT_BOOL bImportAsPrecise, VARIANT_BOOL bPerformOnlyDryRun, VARIANT_BOOL bDisplayAlert, VARIANT_BOOL bIsFromATP, VARIANT_BOOL bIsOverwrite, VARIANT_BOOL brestart, VARIANT_BOOL bLinkTraversal, VARIANT_BOOL bIncludeSubFolders, BSTR * bstrFolderUID ) {
    return _com_dispatch_method(this, 0x6001000d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x600c\x0008\x0008\x0008\x0008\x0008\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x4008", lnumberOfDocumentsFoldersToImport, psalistOfFilesFoldersToImport, (BSTR)bstrUserName, (BSTR)bstrPassword, (BSTR)bstrGroup, (BSTR)bstrUserRole, (BSTR)bstrDBUrl, bImportAsPrecise, bPerformOnlyDryRun, bDisplayAlert, bIsFromATP, bIsOverwrite, brestart, bLinkTraversal, bIncludeSubFolders, bstrFolderUID);
}

#pragma implementation_key(1084)
inline HRESULT TGFramework::SolidEdgeTCE::OnUndoCheckOutDocuments ( SAFEARRAY * * psaCacheFiles ) {
    return _com_dispatch_method(this, 0x6001000e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x600c", psaCacheFiles);
}

#pragma implementation_key(1085)
inline HRESULT TGFramework::SolidEdgeTCE::OnSynchronizeFile ( SAFEARRAY * * psaSynchFiles, enum SyncOption enumSyncOption ) {
    return _com_dispatch_method(this, 0x6001000f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x600c\x0003", psaSynchFiles, enumSyncOption);
}

#pragma implementation_key(1086)
inline HRESULT TGFramework::SolidEdgeTCE::GetOutOfDateDocuments ( VARIANT * pvarListOfOutOfDateDocuments ) {
    return _com_dispatch_method(this, 0x60010010, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c", pvarListOfOutOfDateDocuments);
}

#pragma implementation_key(1087)
inline HRESULT TGFramework::SolidEdgeTCE::GetUserLogMessages ( VARIANT * pvarUserLogMessages ) {
    return _com_dispatch_method(this, 0x60010011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c", pvarUserLogMessages);
}

#pragma implementation_key(1088)
inline HRESULT TGFramework::SolidEdgeTCE::SaveAsToTeamCenter ( _bstr_t bstrItemId, _bstr_t bstrItemRev, _bstr_t bstrDataSetFileName, _bstr_t bstrRevisionRule, _bstr_t bstrFolderName, VARIANT * pvarListOldAndNewItemIDRevsFileNames ) {
    return _com_dispatch_method(this, 0x60010012, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x0008\x0008\x400c", (BSTR)bstrItemId, (BSTR)bstrItemRev, (BSTR)bstrDataSetFileName, (BSTR)bstrRevisionRule, (BSTR)bstrFolderName, pvarListOldAndNewItemIDRevsFileNames);
}

#pragma implementation_key(1089)
inline HRESULT TGFramework::SolidEdgeTCE::ReviseToTeamCenter ( _bstr_t bstrItemId, _bstr_t bstrItemRev, _bstr_t bstrDataSetFileName, _bstr_t bstrRevisionRule, _bstr_t bstrFolderName, VARIANT * pvarListOldAndNewItemIDRevsFileNames ) {
    return _com_dispatch_method(this, 0x60010013, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x0008\x0008\x400c", (BSTR)bstrItemId, (BSTR)bstrItemRev, (BSTR)bstrDataSetFileName, (BSTR)bstrRevisionRule, (BSTR)bstrFolderName, pvarListOldAndNewItemIDRevsFileNames);
}

#pragma implementation_key(1090)
inline HRESULT TGFramework::SolidEdgeTCE::OnGetWhereUsedForAutomation ( _bstr_t bstrItemId, _bstr_t bstrItemRev, _bstr_t bstrDataSetFileName, VARIANT * pvarListOfWhereUsedDocuments ) {
    return _com_dispatch_method(this, 0x60010014, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x400c", (BSTR)bstrItemId, (BSTR)bstrItemRev, (BSTR)bstrDataSetFileName, pvarListOfWhereUsedDocuments);
}

#pragma implementation_key(1091)
inline HRESULT TGFramework::SolidEdgeTCE::CreateNewProject ( _bstr_t bstrProjectName ) {
    return _com_dispatch_method(this, 0x60010015, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)bstrProjectName);
}

#pragma implementation_key(1092)
inline HRESULT TGFramework::SolidEdgeTCE::DeleteProject ( _bstr_t bstrProjectName ) {
    return _com_dispatch_method(this, 0x60010016, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)bstrProjectName);
}

#pragma implementation_key(1093)
inline HRESULT TGFramework::SolidEdgeTCE::DeleteAllProjects ( ) {
    return _com_dispatch_method(this, 0x60010017, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1094)
inline HRESULT TGFramework::SolidEdgeTCE::DownladDocumentsFromServerWithOptions ( _bstr_t bstrItemId, _bstr_t bstrItemRev, _bstr_t bstrDataSetFileName, _bstr_t bstrRevisionRule, _bstr_t bstrVariantRule, VARIANT_BOOL vbReadOnly, VARIANT_BOOL vbAllLevel, unsigned long dwDownloadOption, SAFEARRAY * * pvarListOfFiles ) {
    return _com_dispatch_method(this, 0x60010018, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x0008\x0008\x000b\x000b\x0003\x680c", (BSTR)bstrItemId, (BSTR)bstrItemRev, (BSTR)bstrDataSetFileName, (BSTR)bstrRevisionRule, (BSTR)bstrVariantRule, vbReadOnly, vbAllLevel, dwDownloadOption, pvarListOfFiles);
}

#pragma implementation_key(1095)
inline HRESULT TGFramework::SolidEdgeTCE::GetListOfIndirectFilesForGivenFile ( _bstr_t bstrItemId, _bstr_t bstrItemRev, _bstr_t bstrDataSetFileName, _bstr_t bstrRevisionRule, _bstr_t bstrVariantRule, VARIANT * pvarListOfIndirectFiles ) {
    return _com_dispatch_method(this, 0x60010019, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x0008\x0008\x400c", (BSTR)bstrItemId, (BSTR)bstrItemRev, (BSTR)bstrDataSetFileName, (BSTR)bstrRevisionRule, (BSTR)bstrVariantRule, pvarListOfIndirectFiles);
}

#pragma implementation_key(1096)
inline HRESULT TGFramework::SolidEdgeTCE::GetMappedPropertiesForGivenFile ( _bstr_t bstrItemId, _bstr_t bstrItemRev, _bstr_t bstrDataSetFileName, VARIANT * pvarListOfProperties ) {
    return _com_dispatch_method(this, 0x6001001a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x400c", (BSTR)bstrItemId, (BSTR)bstrItemRev, (BSTR)bstrDataSetFileName, pvarListOfProperties);
}

#pragma implementation_key(1097)
inline HRESULT TGFramework::SolidEdgeTCE::GetListOfFilesFromTeamcenterServer ( _bstr_t bstrDirctFileItemId, _bstr_t bstrDirctFileItemRevId, VARIANT * vFileNames, long * nFiles ) {
    return _com_dispatch_method(this, 0x6001001b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x400c\x4003", (BSTR)bstrDirctFileItemId, (BSTR)bstrDirctFileItemRevId, vFileNames, nFiles);
}

#pragma implementation_key(1098)
inline HRESULT TGFramework::SolidEdgeTCE::GetTALLogFileName ( BSTR * bstrLogFileName ) {
    return _com_dispatch_method(this, 0x6001001c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008", bstrLogFileName);
}

#pragma implementation_key(1099)
inline HRESULT TGFramework::SolidEdgeTCE::ValidateTcObjectModel ( _bstr_t bstrFilename, _bstr_t bstrOldItemID, _bstr_t bstrOldRev, VARIANT_BOOL * bIsTcModelCorrect, BSTR * bsrtCompResult, VARIANT * vRevisionRule, VARIANT * vValidateBOMOnly, long * nNoOfServerComponents ) {
    return _com_dispatch_method(this, 0x6001001d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x400b\x4008\x400c\x400c\x4003", (BSTR)bstrFilename, (BSTR)bstrOldItemID, (BSTR)bstrOldRev, bIsTcModelCorrect, bsrtCompResult, vRevisionRule, vValidateBOMOnly, nNoOfServerComponents);
}

#pragma implementation_key(1100)
inline HRESULT TGFramework::SolidEdgeTCE::GetBomStructure ( _bstr_t bstrItemId, _bstr_t bstrItemRevId, _bstr_t bstrRevisionRule, VARIANT_BOOL bDeepList, long * NoOfComponents, VARIANT * ListOfItemRevIds, VARIANT * ListOfFileSpecs ) {
    return _com_dispatch_method(this, 0x6001001e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x000b\x4003\x400c\x400c", (BSTR)bstrItemId, (BSTR)bstrItemRevId, (BSTR)bstrRevisionRule, bDeepList, NoOfComponents, ListOfItemRevIds, ListOfFileSpecs);
}

#pragma implementation_key(1101)
inline HRESULT TGFramework::SolidEdgeTCE::GetItemRevBasedOnSEType ( enum TCESETypes nSEType, _bstr_t bstrUserName, VARIANT * ListOfItemRevIds ) {
    return _com_dispatch_method(this, 0x6001001f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0008\x400c", nSEType, (BSTR)bstrUserName, ListOfItemRevIds);
}

#pragma implementation_key(1102)
inline HRESULT TGFramework::SolidEdgeTCE::GetItemTypesInfo ( BSTR * pbstrXML, BSTR * pbstrDefaultItemType ) {
    return _com_dispatch_method(this, 0x60010020, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008\x4008", pbstrXML, pbstrDefaultItemType);
}

#pragma implementation_key(1103)
inline HRESULT TGFramework::SolidEdgeTCE::GetSmartCodes ( VARIANT * pvarSmartCodesInfo ) {
    return _com_dispatch_method(this, 0x60010021, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c", pvarSmartCodesInfo);
}

#pragma implementation_key(1104)
inline HRESULT TGFramework::SolidEdgeTCE::UnGetSmartCodes ( SAFEARRAY * * ppsaUnGetInfo ) {
    return _com_dispatch_method(this, 0x60010022, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x600c", ppsaUnGetInfo);
}

#pragma implementation_key(1105)
inline HRESULT TGFramework::SolidEdgeTCE::CheckInDocumentsToTeamCenterServerEx ( VARIANT * pvarFilesToBeCheckedInInfo, VARIANT * pvarArguments ) {
    return _com_dispatch_method(this, 0x60010023, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x400c", pvarFilesToBeCheckedInInfo, pvarArguments);
}

#pragma implementation_key(1106)
inline HRESULT TGFramework::SolidEdgeTCE::IsItemTypeSmartCodesConfigured ( _bstr_t bstrItemType, VARIANT_BOOL * pvbIsSmartCodesConfigured ) {
    return _com_dispatch_method(this, 0x60010024, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x400b", (BSTR)bstrItemType, pvbIsSmartCodesConfigured);
}

#pragma implementation_key(1107)
inline HRESULT TGFramework::SolidEdgeTCE::GetSEECOrTCPreferenceValues ( VARIANT * pvarPreferenceInfo ) {
    return _com_dispatch_method(this, 0x60010025, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c", pvarPreferenceInfo);
}

#pragma implementation_key(1108)
inline HRESULT TGFramework::SolidEdgeTCE::UpdateStatusInformation ( SAFEARRAY * * psaCacheFiles ) {
    return _com_dispatch_method(this, 0x60010026, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x600c", psaCacheFiles);
}

#pragma implementation_key(1109)
inline HRESULT TGFramework::SolidEdgeTCE::GetProjectsForLoggedInUSer ( VARIANT * pvarListOfUserProjects, VARIANT * pvarListOfUserProjectUIDs ) {
    return _com_dispatch_method(this, 0x60010027, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x400c", pvarListOfUserProjects, pvarListOfUserProjectUIDs);
}

#pragma implementation_key(1110)
inline HRESULT TGFramework::SolidEdgeTCE::GetProjectsForGivenItemIDs ( VARIANT * pvarListOfItemIDsAndProjects ) {
    return _com_dispatch_method(this, 0x60010028, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c", pvarListOfItemIDsAndProjects);
}

#pragma implementation_key(1111)
inline HRESULT TGFramework::SolidEdgeTCE::AddOrRemoveItemsToOrFromProjects ( VARIANT * pvarItemInfoToAddOrRemoveToProjects ) {
    return _com_dispatch_method(this, 0x60010029, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c", pvarItemInfoToAddOrRemoveToProjects);
}

#pragma implementation_key(1112)
inline HRESULT TGFramework::SolidEdgeTCE::CheckBomStructure ( _bstr_t bstrItemId, _bstr_t bstrItemRevId, _bstr_t bstrRevisionRule, VARIANT_BOOL * bIsDuplicateBOMLineExists, VARIANT * ListOfDupliacteObjIDs ) {
    return _com_dispatch_method(this, 0x6001002a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x400b\x400c", (BSTR)bstrItemId, (BSTR)bstrItemRevId, (BSTR)bstrRevisionRule, bIsDuplicateBOMLineExists, ListOfDupliacteObjIDs);
}

#pragma implementation_key(1113)
inline HRESULT TGFramework::SolidEdgeTCE::AutoAssign ( VARIANT_BOOL vbAutoAssign ) {
    return _com_dispatch_method(this, 0x6001002b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", vbAutoAssign);
}

#pragma implementation_key(1114)
inline HRESULT TGFramework::SolidEdgeTCE::GetMFKAttributesForGivenItemType ( _bstr_t bstrItemType, VARIANT * pvMFKAttributes ) {
    return _com_dispatch_method(this, 0x6001002c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x400c", (BSTR)bstrItemType, pvMFKAttributes);
}

#pragma implementation_key(1115)
inline HRESULT TGFramework::SolidEdgeTCE::SetPDMProperties ( _bstr_t bstrOldFileName, VARIANT * pvarListOfPropsForFileSaveAs, BSTR * bstrNewFileName ) {
    return _com_dispatch_method(this, 0x6001002d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x400c\x4008", (BSTR)bstrOldFileName, pvarListOfPropsForFileSaveAs, bstrNewFileName);
}

#pragma implementation_key(1116)
inline HRESULT TGFramework::SolidEdgeTCE::GetCurrentUserName ( BSTR * bStrCurrentUser ) {
    return _com_dispatch_method(this, 0x6001002e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008", bStrCurrentUser);
}

#pragma implementation_key(1117)
inline HRESULT TGFramework::SolidEdgeTCE::GetDocumentUIDEx ( _bstr_t bstrFilename, BSTR * bstrItemId, BSTR * bstrItemRev, BSTR * bstrItemUID, BSTR * bstrRevUID ) {
    return _com_dispatch_method(this, 0x6001002f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x4008\x4008\x4008\x4008", (BSTR)bstrFilename, bstrItemId, bstrItemRev, bstrItemUID, bstrRevUID);
}

#pragma implementation_key(1118)
inline HRESULT TGFramework::SolidEdgeTCE::DoesTeamCenterFileExistsUsingKeyProperties ( _bstr_t bstrItemType, VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemRev, VARIANT_BOOL * bFileExists ) {
    return _com_dispatch_method(this, 0x60010030, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x400c\x0008\x400b", (BSTR)bstrItemType, pvarMFKAttrInfo, (BSTR)bstrItemRev, bFileExists);
}

#pragma implementation_key(1119)
inline HRESULT TGFramework::SolidEdgeTCE::CheckOutDocumentsFromTeamCenterServerUsingKeyProperties ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemType, _bstr_t bstrDirctFileItemRevId, VARIANT_BOOL bOnlyDownload, _bstr_t bstrFilename, enum DocumentDownloadLevel enumDownloadLevel ) {
    return _com_dispatch_method(this, 0x60010031, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x0008\x0008\x000b\x0008\x0003", pvarMFKAttrInfo, (BSTR)bstrItemType, (BSTR)bstrDirctFileItemRevId, bOnlyDownload, (BSTR)bstrFilename, enumDownloadLevel);
}

#pragma implementation_key(1120)
inline HRESULT TGFramework::SolidEdgeTCE::GetTeamcenterVersion ( BSTR * bstrMajorVersion, BSTR * bstrCompleteVersion ) {
    return _com_dispatch_method(this, 0x60010032, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008\x4008", bstrMajorVersion, bstrCompleteVersion);
}

#pragma implementation_key(1121)
inline HRESULT TGFramework::SolidEdgeTCE::GetItemIDAndRevisionPatterns ( _bstr_t bstrItemType, VARIANT * pvarItemIDPattern, VARIANT * pvarRevisionPattern ) {
    return _com_dispatch_method(this, 0x60010033, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x400c\x400c", (BSTR)bstrItemType, pvarItemIDPattern, pvarRevisionPattern);
}

#pragma implementation_key(1122)
inline HRESULT TGFramework::SolidEdgeTCE::AssignItemIDAndRevUsingPatterns ( _bstr_t bstrItemType, _bstr_t bstrItemIDPattern, _bstr_t bstrRevisionPattern, BSTR * pItemIDPattern, BSTR * pRevisionPattern ) {
    return _com_dispatch_method(this, 0x60010034, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x4008\x4008", (BSTR)bstrItemType, (BSTR)bstrItemIDPattern, (BSTR)bstrRevisionPattern, pItemIDPattern, pRevisionPattern);
}

#pragma implementation_key(1123)
inline HRESULT TGFramework::SolidEdgeTCE::GetItemTypesInfoEx ( _bstr_t bstrFilename, VARIANT * pvarItemTypeList ) {
    return _com_dispatch_method(this, 0x60010035, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x400c", (BSTR)bstrFilename, pvarItemTypeList);
}

#pragma implementation_key(1124)
inline HRESULT TGFramework::SolidEdgeTCE::MapMFKAttributtesToFileProperties ( _bstr_t bstrFilename, SAFEARRAY * * psaMFKAttributes, VARIANT * pvarPropertyInfo ) {
    return _com_dispatch_method(this, 0x60010036, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x600c\x400c", (BSTR)bstrFilename, psaMFKAttributes, pvarPropertyInfo);
}

#pragma implementation_key(1125)
inline HRESULT TGFramework::SolidEdgeTCE::GetListOfFilesFromTeamcenterServerUsingKeyProperties ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrDirctFileItemRevId, _bstr_t bstrItemType, VARIANT * vFileNames, long * nFiles ) {
    return _com_dispatch_method(this, 0x60010037, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x0008\x0008\x400c\x4003", pvarMFKAttrInfo, (BSTR)bstrDirctFileItemRevId, (BSTR)bstrItemType, vFileNames, nFiles);
}

#pragma implementation_key(1126)
inline HRESULT TGFramework::SolidEdgeTCE::GetBomStructureUsingKeyProperties ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemRevId, _bstr_t bstrItemType, _bstr_t bstrRevisionRule, VARIANT_BOOL bDeepList, long * NoOfComponents, VARIANT * ListOfItemRevIds, VARIANT * ListOfFileSpecs ) {
    return _com_dispatch_method(this, 0x60010038, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x0008\x0008\x0008\x000b\x4003\x400c\x400c", pvarMFKAttrInfo, (BSTR)bstrItemRevId, (BSTR)bstrItemType, (BSTR)bstrRevisionRule, bDeepList, NoOfComponents, ListOfItemRevIds, ListOfFileSpecs);
}

#pragma implementation_key(1127)
inline HRESULT TGFramework::SolidEdgeTCE::CheckBomStructureUsingKeyProperties ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemRevId, _bstr_t bstrItemType, _bstr_t bstrRevisionRule, VARIANT_BOOL * bIsDuplicateBOMLineExists, VARIANT * ListOfDupliacteObjIDs ) {
    return _com_dispatch_method(this, 0x60010039, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x0008\x0008\x0008\x400b\x400c", pvarMFKAttrInfo, (BSTR)bstrItemRevId, (BSTR)bstrItemType, (BSTR)bstrRevisionRule, bIsDuplicateBOMLineExists, ListOfDupliacteObjIDs);
}

#pragma implementation_key(1128)
inline HRESULT TGFramework::SolidEdgeTCE::SaveAsToTeamCenterUsingKeyProperties ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemRev, _bstr_t bstrItemType, _bstr_t bstrDataSetFileName, _bstr_t bstrRevisionRule, _bstr_t bstrFolderName, VARIANT * pvarListOldAndNewItemIDRevsFileNames ) {
    return _com_dispatch_method(this, 0x6001003a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x0008\x0008\x0008\x0008\x0008\x400c", pvarMFKAttrInfo, (BSTR)bstrItemRev, (BSTR)bstrItemType, (BSTR)bstrDataSetFileName, (BSTR)bstrRevisionRule, (BSTR)bstrFolderName, pvarListOldAndNewItemIDRevsFileNames);
}

#pragma implementation_key(1129)
inline HRESULT TGFramework::SolidEdgeTCE::ReviseToTeamCenterUsingKeyProperties ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemRev, _bstr_t bstrItemType, _bstr_t bstrDataSetFileName, _bstr_t bstrRevisionRule, _bstr_t bstrFolderName, VARIANT * pvarListOldAndNewItemIDRevsFileNames ) {
    return _com_dispatch_method(this, 0x6001003b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x0008\x0008\x0008\x0008\x0008\x400c", pvarMFKAttrInfo, (BSTR)bstrItemRev, (BSTR)bstrItemType, (BSTR)bstrDataSetFileName, (BSTR)bstrRevisionRule, (BSTR)bstrFolderName, pvarListOldAndNewItemIDRevsFileNames);
}

#pragma implementation_key(1130)
inline HRESULT TGFramework::SolidEdgeTCE::GetListOfIndirectFilesForGivenFileUsingKeyProperties ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemRev, _bstr_t bstrItemType, _bstr_t bstrDataSetFileName, _bstr_t bstrRevisionRule, VARIANT * pvarListOfIndirectFiles ) {
    return _com_dispatch_method(this, 0x6001003c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x0008\x0008\x0008\x0008\x400c", pvarMFKAttrInfo, (BSTR)bstrItemRev, (BSTR)bstrItemType, (BSTR)bstrDataSetFileName, (BSTR)bstrRevisionRule, pvarListOfIndirectFiles);
}

#pragma implementation_key(1131)
inline HRESULT TGFramework::SolidEdgeTCE::GetMappedPropertiesForGivenFileUsingKeyProperties ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemRev, _bstr_t bstrItemType, _bstr_t bstrDataSetFileName, VARIANT * pvarListOfProperties ) {
    return _com_dispatch_method(this, 0x6001003d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x0008\x0008\x0008\x400c", pvarMFKAttrInfo, (BSTR)bstrItemRev, (BSTR)bstrItemType, (BSTR)bstrDataSetFileName, pvarListOfProperties);
}

#pragma implementation_key(1132)
inline HRESULT TGFramework::SolidEdgeTCE::ValidateTcObjectModelUsingKeyProperties ( _bstr_t bstrFilename, VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemType, _bstr_t bstrOldRev, VARIANT_BOOL * bIsTcModelCorrect, BSTR * bsrtCompResult, VARIANT * vRevisionRule, VARIANT * vValidateBOMOnly, long * nNoOfServerComponents ) {
    return _com_dispatch_method(this, 0x6001003e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x400c\x0008\x0008\x400b\x4008\x400c\x400c\x4003", (BSTR)bstrFilename, pvarMFKAttrInfo, (BSTR)bstrItemType, (BSTR)bstrOldRev, bIsTcModelCorrect, bsrtCompResult, vRevisionRule, vValidateBOMOnly, nNoOfServerComponents);
}

#pragma implementation_key(1133)
inline HRESULT TGFramework::SolidEdgeTCE::OnGetWhereUsedForAutomationUsingKeyProperties ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemRev, _bstr_t bstrItemType, _bstr_t bstrDataSetFileName, VARIANT * pvarListOfWhereUsedDocuments ) {
    return _com_dispatch_method(this, 0x6001003f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x0008\x0008\x0008\x400c", pvarMFKAttrInfo, (BSTR)bstrItemRev, (BSTR)bstrItemType, (BSTR)bstrDataSetFileName, pvarListOfWhereUsedDocuments);
}

#pragma implementation_key(1134)
inline HRESULT TGFramework::SolidEdgeTCE::DownloadDocumentsFromServerWithOptionsUsingKeyProperties ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemRev, _bstr_t bstrDataSetFileName, _bstr_t bstrRevisionRule, _bstr_t bstrItemType, VARIANT_BOOL vbReadOnly, VARIANT_BOOL vbAllLevel, unsigned long dwDownloadOption, SAFEARRAY * * pvarListOfFiles ) {
    return _com_dispatch_method(this, 0x60010040, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x0008\x0008\x0008\x0008\x000b\x000b\x0003\x680c", pvarMFKAttrInfo, (BSTR)bstrItemRev, (BSTR)bstrDataSetFileName, (BSTR)bstrRevisionRule, (BSTR)bstrItemType, vbReadOnly, vbAllLevel, dwDownloadOption, pvarListOfFiles);
}

#pragma implementation_key(1135)
inline HRESULT TGFramework::SolidEdgeTCE::ValidateKeyProperties ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrRevID, _bstr_t bstrItemType, VARIANT * pvarListOfPropsVsStatus ) {
    return _com_dispatch_method(this, 0x60010041, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x0008\x0008\x400c", pvarMFKAttrInfo, (BSTR)bstrRevID, (BSTR)bstrItemType, pvarListOfPropsVsStatus);
}

#pragma implementation_key(1136)
inline HRESULT TGFramework::SolidEdgeTCE::GetStorageNameForProperties ( _bstr_t bstrFilename, VARIANT * pvarListOfPropInfo ) {
    return _com_dispatch_method(this, 0x60010042, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x400c", (BSTR)bstrFilename, pvarListOfPropInfo);
}

#pragma implementation_key(1137)
inline HRESULT TGFramework::SolidEdgeTCE::GetErrorMessages ( VARIANT * pvarListOfErrorMsgs, VARIANT * pvarListOfWarningMsgs, VARIANT * pvarListOfInformationalMsgs ) {
    return _com_dispatch_method(this, 0x60010043, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x400c\x400c", pvarListOfErrorMsgs, pvarListOfWarningMsgs, pvarListOfInformationalMsgs);
}

#pragma implementation_key(1138)
inline HRESULT TGFramework::SolidEdgeTCE::GetAllRevisions ( VARIANT * pvarMFKAttributes, _bstr_t bstrItemType, VARIANT * pvarRevisionList ) {
    return _com_dispatch_method(this, 0x60010044, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x0008\x400c", pvarMFKAttributes, (BSTR)bstrItemType, pvarRevisionList);
}

#pragma implementation_key(1139)
inline HRESULT TGFramework::SolidEdgeTCE::CreateZipOfCache ( _bstr_t bstrSourceCachePath, _bstr_t bstrDestinationZipPath ) {
    return _com_dispatch_method(this, 0x60010045, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008", (BSTR)bstrSourceCachePath, (BSTR)bstrDestinationZipPath);
}

#pragma implementation_key(1140)
inline HRESULT TGFramework::SolidEdgeTCE::GetListOfWorkflows ( VARIANT * pvarMFKAttributes, _bstr_t bstrItemType, _bstr_t bstrItemRev, VARIANT_BOOL bGetFiltered, VARIANT * pVarWorkflows ) {
    return _com_dispatch_method(this, 0x60010046, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x0008\x0008\x000b\x400c", pvarMFKAttributes, (BSTR)bstrItemType, (BSTR)bstrItemRev, bGetFiltered, pVarWorkflows);
}

#pragma implementation_key(1141)
inline HRESULT TGFramework::SolidEdgeTCE::ExecuteWorkflow ( VARIANT * pvarMFKAttributes, _bstr_t bstrItemType, _bstr_t bstrItemRev, _bstr_t bstrprocessName, _bstr_t bstrProcessDesr, _bstr_t bstrTemplate, VARIANT * pVarOut ) {
    return _com_dispatch_method(this, 0x60010047, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x0008\x0008\x0008\x0008\x0008\x400c", pvarMFKAttributes, (BSTR)bstrItemType, (BSTR)bstrItemRev, (BSTR)bstrprocessName, (BSTR)bstrProcessDesr, (BSTR)bstrTemplate, pVarOut);
}

#pragma implementation_key(1142)
inline HRESULT TGFramework::SolidEdgeTCE::GetActivePDMMode ( unsigned long * activePDM ) {
    return _com_dispatch_method(this, 0x60010048, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003", activePDM);
}

#pragma implementation_key(1143)
inline HRESULT TGFramework::SolidEdgeTCE::GetSolidEdgePreferencePath ( BSTR * lpSEPreferencePath ) {
    return _com_dispatch_method(this, 0x60010049, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008", lpSEPreferencePath);
}

#pragma implementation_key(1144)
inline HRESULT TGFramework::SolidEdgeTCE::SetSEECOptions ( enum SEECOptions enumSEECDialog, unsigned long * dwValue ) {
    return _com_dispatch_method(this, 0x6001004a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4003", enumSEECDialog, dwValue);
}

#pragma implementation_key(1145)
inline HRESULT TGFramework::SolidEdgeTCE::GetBOMProperties ( VARIANT * pvarMFKAttributes, _bstr_t bstrItemRevId, _bstr_t bstrItemType, _bstr_t bstrRevisionRule, long * NoOfComponents, VARIANT * FileOccProp ) {
    return _com_dispatch_method(this, 0x6001004b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x0008\x0008\x0008\x4003\x400c", pvarMFKAttributes, (BSTR)bstrItemRevId, (BSTR)bstrItemType, (BSTR)bstrRevisionRule, NoOfComponents, FileOccProp);
}

#pragma implementation_key(1146)
inline HRESULT TGFramework::SolidEdgeTCE::PublishFamilyOfAssemblyMembers ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemRev, _bstr_t bstrDataSetFileName, _bstr_t bstrRevisionRule, _bstr_t bstrItemType, SAFEARRAY * * psaMemberInfo, VARIANT * pvarListOfWhereUsedDocuments ) {
    return _com_dispatch_method(this, 0x6001004c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x0008\x0008\x0008\x0008\x600c\x400c", pvarMFKAttrInfo, (BSTR)bstrItemRev, (BSTR)bstrDataSetFileName, (BSTR)bstrRevisionRule, (BSTR)bstrItemType, psaMemberInfo, pvarListOfWhereUsedDocuments);
}

#pragma implementation_key(1147)
inline HRESULT TGFramework::SolidEdgeTCE::GetFamilyOfAssemblyMembers ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemRev, _bstr_t bstrItemType, VARIANT * psaPublishedMemberInfo, VARIANT * psaUnpublishedMemberInfo ) {
    return _com_dispatch_method(this, 0x6001004d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x0008\x0008\x400c\x400c", pvarMFKAttrInfo, (BSTR)bstrItemRev, (BSTR)bstrItemType, psaPublishedMemberInfo, psaUnpublishedMemberInfo);
}

#pragma implementation_key(1148)
inline HRESULT TGFramework::SolidEdgeTCE::GetWhereUsedInfoForPublishedFamilyOfAssembly ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemRev, _bstr_t bstrDataSetFileName, _bstr_t bstrRevisionRule, _bstr_t bstrItemType, VARIANT * pvarListOfWhereUsedDocuments ) {
    return _com_dispatch_method(this, 0x6001004e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x0008\x0008\x0008\x0008\x400c", pvarMFKAttrInfo, (BSTR)bstrItemRev, (BSTR)bstrDataSetFileName, (BSTR)bstrRevisionRule, (BSTR)bstrItemType, pvarListOfWhereUsedDocuments);
}

#pragma implementation_key(1149)
inline HRESULT TGFramework::SolidEdgeTCE::GetWhereUsedInfo ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemRev, _bstr_t bstrItemType, _bstr_t bstrDataSetFileName, VARIANT * pvarListFilesWithMFKAttributes ) {
    return _com_dispatch_method(this, 0x6001004f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x0008\x0008\x0008\x400c", pvarMFKAttrInfo, (BSTR)bstrItemRev, (BSTR)bstrItemType, (BSTR)bstrDataSetFileName, pvarListFilesWithMFKAttributes);
}

#pragma implementation_key(1150)
inline HRESULT TGFramework::SolidEdgeTCE::PublishMembersOfActiveFamilyOfAssemblyDocument ( SAFEARRAY * * psaMemberInfo, VARIANT * pvarListOfWhereUsedDocuments ) {
    return _com_dispatch_method(this, 0x60010050, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x600c\x400c", psaMemberInfo, pvarListOfWhereUsedDocuments);
}

#pragma implementation_key(1151)
inline HRESULT TGFramework::SolidEdgeTCE::GetWhereUsedInfoForPublishedActiveFamilyOfAssemblyDocument ( VARIANT * pvarListOfWhereUsedDocuments ) {
    return _com_dispatch_method(this, 0x60010051, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c", pvarListOfWhereUsedDocuments);
}

#pragma implementation_key(1152)
inline HRESULT TGFramework::SolidEdgeTCE::GetFamilyOfAssemblyMembersOfActiveDocument ( VARIANT * psaPublishedMemberInfo, VARIANT * psaUnpublishedMemberInfo ) {
    return _com_dispatch_method(this, 0x60010052, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x400c", psaPublishedMemberInfo, psaUnpublishedMemberInfo);
}

#pragma implementation_key(1153)
inline HRESULT TGFramework::SolidEdgeTCE::GetTeamcenterDefaultItemTypePreference ( _bstr_t bstrFilename, BSTR * bstrDefaultItemType ) {
    return _com_dispatch_method(this, 0x60010053, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x4008", (BSTR)bstrFilename, bstrDefaultItemType);
}

#pragma implementation_key(1154)
inline HRESULT TGFramework::SolidEdgeTCE::CreateBOMAndRelations ( VARIANT * pvarContainerInfo, SAFEARRAY * * psaComponentsInfo, VARIANT_BOOL bUploadFile, VARIANT_BOOL bCreatePreciseBOM, _bstr_t bstrRevRule, VARIANT_BOOL * bHasOverrideBody ) {
    return _com_dispatch_method(this, 0x60010054, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x600c\x000b\x000b\x0008\x400b", pvarContainerInfo, psaComponentsInfo, bUploadFile, bCreatePreciseBOM, (BSTR)bstrRevRule, bHasOverrideBody);
}

#pragma implementation_key(1155)
inline HRESULT TGFramework::SolidEdgeTCE::UploadModelViewsOfActiveAssemblyDocument ( ) {
    return _com_dispatch_method(this, 0x60010055, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1156)
inline HRESULT TGFramework::SolidEdgeTCE::ExtractTranslatedFiles ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemRev, _bstr_t bstrRevisionRule, _bstr_t bstrItemType, _bstr_t bstrEtractLocation, _bstr_t bstrDataSetFileName, unsigned long dwExpandSelectionOptions, VARIANT * pvarSEFiletypeFilters, VARIANT * pvarRelationFilters, VARIANT * pvarReferanceFilters, VARIANT * pvarExportFileextensions, VARIANT * pvarListOfFiles ) {
    return _com_dispatch_method(this, 0x60010056, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x0008\x0008\x0008\x0008\x0008\x0003\x400c\x400c\x400c\x400c\x400c", pvarMFKAttrInfo, (BSTR)bstrItemRev, (BSTR)bstrRevisionRule, (BSTR)bstrItemType, (BSTR)bstrEtractLocation, (BSTR)bstrDataSetFileName, dwExpandSelectionOptions, pvarSEFiletypeFilters, pvarRelationFilters, pvarReferanceFilters, pvarExportFileextensions, pvarListOfFiles);
}

#pragma implementation_key(1157)
inline HRESULT TGFramework::SolidEdgeTCE::ExtractTranslatedFilesOfActiveDocument ( _bstr_t bstrEtractLocation, unsigned long dwExpandSelectionOptions, VARIANT * pvarSEFiletypeFilters, VARIANT * pvarRelationFilters, VARIANT * pvarReferanceFilters, VARIANT * pvarExportFileextensions, VARIANT * pvarListOfFiles ) {
    return _com_dispatch_method(this, 0x60010057, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0003\x400c\x400c\x400c\x400c\x400c", (BSTR)bstrEtractLocation, dwExpandSelectionOptions, pvarSEFiletypeFilters, pvarRelationFilters, pvarReferanceFilters, pvarExportFileextensions, pvarListOfFiles);
}

#pragma implementation_key(1158)
inline HRESULT TGFramework::SolidEdgeTCE::CloneDraftDocument ( VARIANT_BOOL vbOpenCloneDocument ) {
    return _com_dispatch_method(this, 0x60010058, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", vbOpenCloneDocument);
}

#pragma implementation_key(1159)
inline HRESULT TGFramework::SolidEdgeTCE::GetMFKAttributesAndItemTypeForGivenFile ( _bstr_t bstrFilename, BSTR * bstrItemType, VARIANT * pvarMFKAttributeValues ) {
    return _com_dispatch_method(this, 0x60010059, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x4008\x400c", (BSTR)bstrFilename, bstrItemType, pvarMFKAttributeValues);
}

#pragma implementation_key(1160)
inline HRESULT TGFramework::SolidEdgeTCE::SetPDMPropsAndUploadTranslatedFile ( _bstr_t bstrOldFileName, VARIANT * pvarListOfPropsForFileSaveAs, BSTR * bstrNewFileName ) {
    return _com_dispatch_method(this, 0x6001005a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x400c\x4008", (BSTR)bstrOldFileName, pvarListOfPropsForFileSaveAs, bstrNewFileName);
}

#pragma implementation_key(1161)
inline HRESULT TGFramework::SolidEdgeTCE::GetListOfFilesUnderItemRevision ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemRev, _bstr_t bstrItemType, VARIANT * pvarSEFileListUnderItemRev, VARIANT * pvarAllFileListUnderItemRev ) {
    return _com_dispatch_method(this, 0x6001005b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x0008\x0008\x400c\x400c", pvarMFKAttrInfo, (BSTR)bstrItemRev, (BSTR)bstrItemType, pvarSEFileListUnderItemRev, pvarAllFileListUnderItemRev);
}

#pragma implementation_key(1162)
inline HRESULT TGFramework::SolidEdgeTCE::GetTCSaveAsTranslationMBDPrefValues ( BSTR * bRelation, BSTR * bDatasetType, BSTR * bNamedReference, BSTR * bStringToAppend, VARIANT_BOOL * bIncludeRevName ) {
    return _com_dispatch_method(this, 0x6001005c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008\x4008\x4008\x4008\x400b", bRelation, bDatasetType, bNamedReference, bStringToAppend, bIncludeRevName);
}

#pragma implementation_key(1163)
inline HRESULT TGFramework::SolidEdgeTCE::GetRequiredPDMProperties ( _bstr_t bstrFilename, VARIANT * pvarProperties, VARIANT * pvarPropertiesWithValues ) {
    return _com_dispatch_method(this, 0x6001005d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x400c\x400c", (BSTR)bstrFilename, pvarProperties, pvarPropertiesWithValues);
}

#pragma implementation_key(1164)
inline HRESULT TGFramework::SolidEdgeTCE::GetActiveDocumentFilename ( BSTR * bstrFilename, BSTR * bstrDisplayname, BSTR * bstrReservedname ) {
    return _com_dispatch_method(this, 0x6001005e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008\x4008\x4008", bstrFilename, bstrDisplayname, bstrReservedname);
}

#pragma implementation_key(1165)
inline HRESULT TGFramework::SolidEdgeTCE::GetTeamcenterInformation ( _bstr_t bstrFilename, VARIANT * psaTCInfo ) {
    return _com_dispatch_method(this, 0x6001005f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x400c", (BSTR)bstrFilename, psaTCInfo);
}

#pragma implementation_key(1166)
inline HRESULT TGFramework::SolidEdgeTCE::OnUndoCheckOutDocumentsEx ( SAFEARRAY * * psaCacheFiles, VARIANT_BOOL bIgnoreFileModifiedStatus ) {
    return _com_dispatch_method(this, 0x60010060, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x600c\x000b", psaCacheFiles, bIgnoreFileModifiedStatus);
}

#pragma implementation_key(1167)
inline HRESULT TGFramework::SolidEdgeTCE::GetTCSaveAsTranslationPrefValues ( _bstr_t bstrExportType, BSTR * bRelation, BSTR * bDatasetType, BSTR * bNamedReference, BSTR * bStringToAppend, VARIANT_BOOL * bIncludeRevName ) {
    return _com_dispatch_method(this, 0x60010061, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x4008\x4008\x4008\x4008\x400b", (BSTR)bstrExportType, bRelation, bDatasetType, bNamedReference, bStringToAppend, bIncludeRevName);
}

#pragma implementation_key(1168)
inline HRESULT TGFramework::SolidEdgeTCE::DownloadDocumentsFromServerWithOptionsUsingKeyPropertiesEx ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemRev, _bstr_t bstrDataSetFileName, _bstr_t bstrRevisionRule, _bstr_t bstrVariantRule, _bstr_t bstrItemType, VARIANT_BOOL vbReadOnly, VARIANT_BOOL vbAllLevel, unsigned long dwDownloadOption, SAFEARRAY * * pvarListOfFiles ) {
    return _com_dispatch_method(this, 0x60010062, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x0008\x0008\x0008\x0008\x0008\x000b\x000b\x0003\x680c", pvarMFKAttrInfo, (BSTR)bstrItemRev, (BSTR)bstrDataSetFileName, (BSTR)bstrRevisionRule, (BSTR)bstrVariantRule, (BSTR)bstrItemType, vbReadOnly, vbAllLevel, dwDownloadOption, pvarListOfFiles);
}

#pragma implementation_key(1169)
inline HRESULT TGFramework::SolidEdgeTCE::ValidateLogin_TCCS ( _bstr_t bstrUserName, _bstr_t bstrPassword, _bstr_t bstrGroup, _bstr_t bstrUserRole, _bstr_t bstrDBUrl, _bstr_t bstrDBDesc ) {
    return _com_dispatch_method(this, 0x60010063, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x0008\x0008\x0008", (BSTR)bstrUserName, (BSTR)bstrPassword, (BSTR)bstrGroup, (BSTR)bstrUserRole, (BSTR)bstrDBUrl, (BSTR)bstrDBDesc);
}

#pragma implementation_key(1170)
inline HRESULT TGFramework::SolidEdgeTCE::GetTCSaveAsTranslationPrefValuesEx ( _bstr_t bstrExportType, BSTR * bRelation, BSTR * bDatasetType, BSTR * bNamedReference, BSTR * bStringToAppend, BSTR * bAutomaticVsManualTranslation, VARIANT_BOOL * bIncludeRevName ) {
    return _com_dispatch_method(this, 0x60010064, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x4008\x4008\x4008\x4008\x4008\x400b", (BSTR)bstrExportType, bRelation, bDatasetType, bNamedReference, bStringToAppend, bAutomaticVsManualTranslation, bIncludeRevName);
}

#pragma implementation_key(1171)
inline HRESULT TGFramework::SolidEdgeTCE::CheckInStdPartsToTeamcenter ( SAFEARRAY * * ppsaFileList, VARIANT_BOOL bOnlyUpload ) {
    return _com_dispatch_method(this, 0x60010065, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x600c\x000b", ppsaFileList, bOnlyUpload);
}

//
// interface _ISolidEdgeTCEAuto wrapper method implementations
//

#pragma implementation_key(1172)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetPDMCachePath ( BSTR * bStrCachePath ) {
    HRESULT _hr = raw_GetPDMCachePath(bStrCachePath);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1173)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::CheckInDocumentsToTeamCenterServer ( SAFEARRAY * * ppsaFileList, VARIANT_BOOL bOnlyUpload ) {
    HRESULT _hr = raw_CheckInDocumentsToTeamCenterServer(ppsaFileList, bOnlyUpload);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1174)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::CheckOutDocumentsFromTeamCenterServer ( _bstr_t bstrDirctFileItemId, _bstr_t bstrDirctFileItemRevId, VARIANT_BOOL bOnlyDownload, _bstr_t bstrFilename, enum DocumentDownloadLevel enumDownloadLevel ) {
    HRESULT _hr = raw_CheckOutDocumentsFromTeamCenterServer(bstrDirctFileItemId, bstrDirctFileItemRevId, bOnlyDownload, bstrFilename, enumDownloadLevel);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1175)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetDocumentUID ( _bstr_t bstrFilename, BSTR * bstrItemId, BSTR * bstrItemRev ) {
    HRESULT _hr = raw_GetDocumentUID(bstrFilename, bstrItemId, bstrItemRev);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1176)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::DoesTeamCenterFileExists ( _bstr_t bstrItemId, _bstr_t bstrItemRev, VARIANT_BOOL * bFileExists ) {
    HRESULT _hr = raw_DoesTeamCenterFileExists(bstrItemId, bstrItemRev, bFileExists);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1177)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetTeamCenterMode ( VARIANT_BOOL * bIsTeamCenterMode ) {
    HRESULT _hr = raw_GetTeamCenterMode(bIsTeamCenterMode);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1178)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::SetTeamCenterMode ( VARIANT_BOOL bMode ) {
    HRESULT _hr = raw_SetTeamCenterMode(bMode);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1179)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::ValidateLogin ( _bstr_t bstrUserName, _bstr_t bstrPassword, _bstr_t bstrGroup, _bstr_t bstrUserRole, _bstr_t bstrDBUrl ) {
    HRESULT _hr = raw_ValidateLogin(bstrUserName, bstrPassword, bstrGroup, bstrUserRole, bstrDBUrl);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1180)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::AssignItemID ( _bstr_t bstrItemType, BSTR * bstrItemId, BSTR * bstrItemRev ) {
    HRESULT _hr = raw_AssignItemID(bstrItemType, bstrItemId, bstrItemRev);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1181)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::PutItemTypeAsCustomProp ( _bstr_t bstrFilename, _bstr_t bstrItemType ) {
    HRESULT _hr = raw_PutItemTypeAsCustomProp(bstrFilename, bstrItemType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1182)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetDatasetNameFromCookie ( _bstr_t bstrFilename, BSTR * bstrDatasetName ) {
    HRESULT _hr = raw_GetDatasetNameFromCookie(bstrFilename, bstrDatasetName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1183)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::DeleteFilesFromCache ( SAFEARRAY * * psaCacheFiles ) {
    HRESULT _hr = raw_DeleteFilesFromCache(psaCacheFiles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1184)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::ImportDocumentsToServer ( long lnumberOfDocumentsFoldersToImport, SAFEARRAY * * psalistOfFilesFoldersToImport, _bstr_t bstrUserName, _bstr_t bstrPassword, _bstr_t bstrGroup, _bstr_t bstrUserRole, _bstr_t bstrDBUrl, VARIANT_BOOL bImportAsPrecise, VARIANT_BOOL bPerformOnlyDryRun, VARIANT_BOOL bDisplayAlert, VARIANT_BOOL bIsFromATP, VARIANT_BOOL bIsOverwrite, VARIANT_BOOL brestart, VARIANT_BOOL bLinkTraversal, VARIANT_BOOL bIncludeSubFolders, BSTR * bstrFolderUID ) {
    HRESULT _hr = raw_ImportDocumentsToServer(lnumberOfDocumentsFoldersToImport, psalistOfFilesFoldersToImport, bstrUserName, bstrPassword, bstrGroup, bstrUserRole, bstrDBUrl, bImportAsPrecise, bPerformOnlyDryRun, bDisplayAlert, bIsFromATP, bIsOverwrite, brestart, bLinkTraversal, bIncludeSubFolders, bstrFolderUID);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1185)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::OnUndoCheckOutDocuments ( SAFEARRAY * * psaCacheFiles ) {
    HRESULT _hr = raw_OnUndoCheckOutDocuments(psaCacheFiles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1186)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::OnSynchronizeFile ( SAFEARRAY * * psaSynchFiles, enum SyncOption enumSyncOption ) {
    HRESULT _hr = raw_OnSynchronizeFile(psaSynchFiles, enumSyncOption);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1187)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetOutOfDateDocuments ( VARIANT * pvarListOfOutOfDateDocuments ) {
    HRESULT _hr = raw_GetOutOfDateDocuments(pvarListOfOutOfDateDocuments);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1188)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetUserLogMessages ( VARIANT * pvarUserLogMessages ) {
    HRESULT _hr = raw_GetUserLogMessages(pvarUserLogMessages);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1189)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::SaveAsToTeamCenter ( _bstr_t bstrItemId, _bstr_t bstrItemRev, _bstr_t bstrDataSetFileName, _bstr_t bstrRevisionRule, _bstr_t bstrFolderName, VARIANT * pvarListOldAndNewItemIDRevsFileNames ) {
    HRESULT _hr = raw_SaveAsToTeamCenter(bstrItemId, bstrItemRev, bstrDataSetFileName, bstrRevisionRule, bstrFolderName, pvarListOldAndNewItemIDRevsFileNames);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1190)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::ReviseToTeamCenter ( _bstr_t bstrItemId, _bstr_t bstrItemRev, _bstr_t bstrDataSetFileName, _bstr_t bstrRevisionRule, _bstr_t bstrFolderName, VARIANT * pvarListOldAndNewItemIDRevsFileNames ) {
    HRESULT _hr = raw_ReviseToTeamCenter(bstrItemId, bstrItemRev, bstrDataSetFileName, bstrRevisionRule, bstrFolderName, pvarListOldAndNewItemIDRevsFileNames);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1191)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::OnGetWhereUsedForAutomation ( _bstr_t bstrItemId, _bstr_t bstrItemRev, _bstr_t bstrDataSetFileName, VARIANT * pvarListOfWhereUsedDocuments ) {
    HRESULT _hr = raw_OnGetWhereUsedForAutomation(bstrItemId, bstrItemRev, bstrDataSetFileName, pvarListOfWhereUsedDocuments);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1192)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::CreateNewProject ( _bstr_t bstrProjectName ) {
    HRESULT _hr = raw_CreateNewProject(bstrProjectName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1193)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::DeleteProject ( _bstr_t bstrProjectName ) {
    HRESULT _hr = raw_DeleteProject(bstrProjectName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1194)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::DeleteAllProjects ( ) {
    HRESULT _hr = raw_DeleteAllProjects();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1195)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::DownladDocumentsFromServerWithOptions ( _bstr_t bstrItemId, _bstr_t bstrItemRev, _bstr_t bstrDataSetFileName, _bstr_t bstrRevisionRule, _bstr_t bstrVariantRule, VARIANT_BOOL vbReadOnly, VARIANT_BOOL vbAllLevel, unsigned long dwDownloadOption, SAFEARRAY * * pvarListOfFiles ) {
    HRESULT _hr = raw_DownladDocumentsFromServerWithOptions(bstrItemId, bstrItemRev, bstrDataSetFileName, bstrRevisionRule, bstrVariantRule, vbReadOnly, vbAllLevel, dwDownloadOption, pvarListOfFiles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1196)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetListOfIndirectFilesForGivenFile ( _bstr_t bstrItemId, _bstr_t bstrItemRev, _bstr_t bstrDataSetFileName, _bstr_t bstrRevisionRule, _bstr_t bstrVariantRule, VARIANT * pvarListOfIndirectFiles ) {
    HRESULT _hr = raw_GetListOfIndirectFilesForGivenFile(bstrItemId, bstrItemRev, bstrDataSetFileName, bstrRevisionRule, bstrVariantRule, pvarListOfIndirectFiles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1197)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetMappedPropertiesForGivenFile ( _bstr_t bstrItemId, _bstr_t bstrItemRev, _bstr_t bstrDataSetFileName, VARIANT * pvarListOfProperties ) {
    HRESULT _hr = raw_GetMappedPropertiesForGivenFile(bstrItemId, bstrItemRev, bstrDataSetFileName, pvarListOfProperties);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1198)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetListOfFilesFromTeamcenterServer ( _bstr_t bstrDirctFileItemId, _bstr_t bstrDirctFileItemRevId, VARIANT * vFileNames, long * nFiles ) {
    HRESULT _hr = raw_GetListOfFilesFromTeamcenterServer(bstrDirctFileItemId, bstrDirctFileItemRevId, vFileNames, nFiles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1199)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetTALLogFileName ( BSTR * bstrLogFileName ) {
    HRESULT _hr = raw_GetTALLogFileName(bstrLogFileName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1200)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::ValidateTcObjectModel ( _bstr_t bstrFilename, _bstr_t bstrOldItemID, _bstr_t bstrOldRev, VARIANT_BOOL * bIsTcModelCorrect, BSTR * bsrtCompResult, VARIANT * vRevisionRule, VARIANT * vValidateBOMOnly, long * nNoOfServerComponents ) {
    HRESULT _hr = raw_ValidateTcObjectModel(bstrFilename, bstrOldItemID, bstrOldRev, bIsTcModelCorrect, bsrtCompResult, vRevisionRule, vValidateBOMOnly, nNoOfServerComponents);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1201)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetBomStructure ( _bstr_t bstrItemId, _bstr_t bstrItemRevId, _bstr_t bstrRevisionRule, VARIANT_BOOL bDeepList, long * NoOfComponents, VARIANT * ListOfItemRevIds, VARIANT * ListOfFileSpecs ) {
    HRESULT _hr = raw_GetBomStructure(bstrItemId, bstrItemRevId, bstrRevisionRule, bDeepList, NoOfComponents, ListOfItemRevIds, ListOfFileSpecs);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1202)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetItemRevBasedOnSEType ( enum TCESETypes nSEType, _bstr_t bstrUserName, VARIANT * ListOfItemRevIds ) {
    HRESULT _hr = raw_GetItemRevBasedOnSEType(nSEType, bstrUserName, ListOfItemRevIds);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1203)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetItemTypesInfo ( BSTR * pbstrXML, BSTR * pbstrDefaultItemType ) {
    HRESULT _hr = raw_GetItemTypesInfo(pbstrXML, pbstrDefaultItemType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1204)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetSmartCodes ( VARIANT * pvarSmartCodesInfo ) {
    HRESULT _hr = raw_GetSmartCodes(pvarSmartCodesInfo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1205)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::UnGetSmartCodes ( SAFEARRAY * * ppsaUnGetInfo ) {
    HRESULT _hr = raw_UnGetSmartCodes(ppsaUnGetInfo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1206)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::CheckInDocumentsToTeamCenterServerEx ( VARIANT * pvarFilesToBeCheckedInInfo, VARIANT * pvarArguments ) {
    HRESULT _hr = raw_CheckInDocumentsToTeamCenterServerEx(pvarFilesToBeCheckedInInfo, pvarArguments);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1207)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::IsItemTypeSmartCodesConfigured ( _bstr_t bstrItemType, VARIANT_BOOL * pvbIsSmartCodesConfigured ) {
    HRESULT _hr = raw_IsItemTypeSmartCodesConfigured(bstrItemType, pvbIsSmartCodesConfigured);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1208)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetSEECOrTCPreferenceValues ( VARIANT * pvarPreferenceInfo ) {
    HRESULT _hr = raw_GetSEECOrTCPreferenceValues(pvarPreferenceInfo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1209)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::UpdateStatusInformation ( SAFEARRAY * * psaCacheFiles ) {
    HRESULT _hr = raw_UpdateStatusInformation(psaCacheFiles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1210)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetProjectsForLoggedInUSer ( VARIANT * pvarListOfUserProjects, VARIANT * pvarListOfUserProjectUIDs ) {
    HRESULT _hr = raw_GetProjectsForLoggedInUSer(pvarListOfUserProjects, pvarListOfUserProjectUIDs);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1211)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetProjectsForGivenItemIDs ( VARIANT * pvarListOfItemIDsAndProjects ) {
    HRESULT _hr = raw_GetProjectsForGivenItemIDs(pvarListOfItemIDsAndProjects);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1212)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::AddOrRemoveItemsToOrFromProjects ( VARIANT * pvarItemInfoToAddOrRemoveToProjects ) {
    HRESULT _hr = raw_AddOrRemoveItemsToOrFromProjects(pvarItemInfoToAddOrRemoveToProjects);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1213)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::CheckBomStructure ( _bstr_t bstrItemId, _bstr_t bstrItemRevId, _bstr_t bstrRevisionRule, VARIANT_BOOL * bIsDuplicateBOMLineExists, VARIANT * ListOfDupliacteObjIDs ) {
    HRESULT _hr = raw_CheckBomStructure(bstrItemId, bstrItemRevId, bstrRevisionRule, bIsDuplicateBOMLineExists, ListOfDupliacteObjIDs);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1214)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::AutoAssign ( VARIANT_BOOL vbAutoAssign ) {
    HRESULT _hr = raw_AutoAssign(vbAutoAssign);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1215)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetMFKAttributesForGivenItemType ( _bstr_t bstrItemType, VARIANT * pvMFKAttributes ) {
    HRESULT _hr = raw_GetMFKAttributesForGivenItemType(bstrItemType, pvMFKAttributes);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1216)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::SetPDMProperties ( _bstr_t bstrOldFileName, VARIANT * pvarListOfPropsForFileSaveAs, BSTR * bstrNewFileName ) {
    HRESULT _hr = raw_SetPDMProperties(bstrOldFileName, pvarListOfPropsForFileSaveAs, bstrNewFileName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1217)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetCurrentUserName ( BSTR * bStrCurrentUser ) {
    HRESULT _hr = raw_GetCurrentUserName(bStrCurrentUser);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1218)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetDocumentUIDEx ( _bstr_t bstrFilename, BSTR * bstrItemId, BSTR * bstrItemRev, BSTR * bstrItemUID, BSTR * bstrRevUID ) {
    HRESULT _hr = raw_GetDocumentUIDEx(bstrFilename, bstrItemId, bstrItemRev, bstrItemUID, bstrRevUID);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1219)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::DoesTeamCenterFileExistsUsingKeyProperties ( _bstr_t bstrItemType, VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemRev, VARIANT_BOOL * bFileExists ) {
    HRESULT _hr = raw_DoesTeamCenterFileExistsUsingKeyProperties(bstrItemType, pvarMFKAttrInfo, bstrItemRev, bFileExists);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1220)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::CheckOutDocumentsFromTeamCenterServerUsingKeyProperties ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemType, _bstr_t bstrDirctFileItemRevId, VARIANT_BOOL bOnlyDownload, _bstr_t bstrFilename, enum DocumentDownloadLevel enumDownloadLevel ) {
    HRESULT _hr = raw_CheckOutDocumentsFromTeamCenterServerUsingKeyProperties(pvarMFKAttrInfo, bstrItemType, bstrDirctFileItemRevId, bOnlyDownload, bstrFilename, enumDownloadLevel);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1221)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetTeamcenterVersion ( BSTR * bstrMajorVersion, BSTR * bstrCompleteVersion ) {
    HRESULT _hr = raw_GetTeamcenterVersion(bstrMajorVersion, bstrCompleteVersion);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1222)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetItemIDAndRevisionPatterns ( _bstr_t bstrItemType, VARIANT * pvarItemIDPattern, VARIANT * pvarRevisionPattern ) {
    HRESULT _hr = raw_GetItemIDAndRevisionPatterns(bstrItemType, pvarItemIDPattern, pvarRevisionPattern);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1223)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::AssignItemIDAndRevUsingPatterns ( _bstr_t bstrItemType, _bstr_t bstrItemIDPattern, _bstr_t bstrRevisionPattern, BSTR * pItemIDPattern, BSTR * pRevisionPattern ) {
    HRESULT _hr = raw_AssignItemIDAndRevUsingPatterns(bstrItemType, bstrItemIDPattern, bstrRevisionPattern, pItemIDPattern, pRevisionPattern);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1224)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetItemTypesInfoEx ( _bstr_t bstrFilename, VARIANT * pvarItemTypeList ) {
    HRESULT _hr = raw_GetItemTypesInfoEx(bstrFilename, pvarItemTypeList);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1225)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::MapMFKAttributtesToFileProperties ( _bstr_t bstrFilename, SAFEARRAY * * psaMFKAttributes, VARIANT * pvarPropertyInfo ) {
    HRESULT _hr = raw_MapMFKAttributtesToFileProperties(bstrFilename, psaMFKAttributes, pvarPropertyInfo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1226)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetListOfFilesFromTeamcenterServerUsingKeyProperties ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrDirctFileItemRevId, _bstr_t bstrItemType, VARIANT * vFileNames, long * nFiles ) {
    HRESULT _hr = raw_GetListOfFilesFromTeamcenterServerUsingKeyProperties(pvarMFKAttrInfo, bstrDirctFileItemRevId, bstrItemType, vFileNames, nFiles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1227)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetBomStructureUsingKeyProperties ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemRevId, _bstr_t bstrItemType, _bstr_t bstrRevisionRule, VARIANT_BOOL bDeepList, long * NoOfComponents, VARIANT * ListOfItemRevIds, VARIANT * ListOfFileSpecs ) {
    HRESULT _hr = raw_GetBomStructureUsingKeyProperties(pvarMFKAttrInfo, bstrItemRevId, bstrItemType, bstrRevisionRule, bDeepList, NoOfComponents, ListOfItemRevIds, ListOfFileSpecs);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1228)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::CheckBomStructureUsingKeyProperties ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemRevId, _bstr_t bstrItemType, _bstr_t bstrRevisionRule, VARIANT_BOOL * bIsDuplicateBOMLineExists, VARIANT * ListOfDupliacteObjIDs ) {
    HRESULT _hr = raw_CheckBomStructureUsingKeyProperties(pvarMFKAttrInfo, bstrItemRevId, bstrItemType, bstrRevisionRule, bIsDuplicateBOMLineExists, ListOfDupliacteObjIDs);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1229)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::SaveAsToTeamCenterUsingKeyProperties ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemRev, _bstr_t bstrItemType, _bstr_t bstrDataSetFileName, _bstr_t bstrRevisionRule, _bstr_t bstrFolderName, VARIANT * pvarListOldAndNewItemIDRevsFileNames ) {
    HRESULT _hr = raw_SaveAsToTeamCenterUsingKeyProperties(pvarMFKAttrInfo, bstrItemRev, bstrItemType, bstrDataSetFileName, bstrRevisionRule, bstrFolderName, pvarListOldAndNewItemIDRevsFileNames);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1230)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::ReviseToTeamCenterUsingKeyProperties ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemRev, _bstr_t bstrItemType, _bstr_t bstrDataSetFileName, _bstr_t bstrRevisionRule, _bstr_t bstrFolderName, VARIANT * pvarListOldAndNewItemIDRevsFileNames ) {
    HRESULT _hr = raw_ReviseToTeamCenterUsingKeyProperties(pvarMFKAttrInfo, bstrItemRev, bstrItemType, bstrDataSetFileName, bstrRevisionRule, bstrFolderName, pvarListOldAndNewItemIDRevsFileNames);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1231)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetListOfIndirectFilesForGivenFileUsingKeyProperties ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemRev, _bstr_t bstrItemType, _bstr_t bstrDataSetFileName, _bstr_t bstrRevisionRule, VARIANT * pvarListOfIndirectFiles ) {
    HRESULT _hr = raw_GetListOfIndirectFilesForGivenFileUsingKeyProperties(pvarMFKAttrInfo, bstrItemRev, bstrItemType, bstrDataSetFileName, bstrRevisionRule, pvarListOfIndirectFiles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1232)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetMappedPropertiesForGivenFileUsingKeyProperties ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemRev, _bstr_t bstrItemType, _bstr_t bstrDataSetFileName, VARIANT * pvarListOfProperties ) {
    HRESULT _hr = raw_GetMappedPropertiesForGivenFileUsingKeyProperties(pvarMFKAttrInfo, bstrItemRev, bstrItemType, bstrDataSetFileName, pvarListOfProperties);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1233)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::ValidateTcObjectModelUsingKeyProperties ( _bstr_t bstrFilename, VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemType, _bstr_t bstrOldRev, VARIANT_BOOL * bIsTcModelCorrect, BSTR * bsrtCompResult, VARIANT * vRevisionRule, VARIANT * vValidateBOMOnly, long * nNoOfServerComponents ) {
    HRESULT _hr = raw_ValidateTcObjectModelUsingKeyProperties(bstrFilename, pvarMFKAttrInfo, bstrItemType, bstrOldRev, bIsTcModelCorrect, bsrtCompResult, vRevisionRule, vValidateBOMOnly, nNoOfServerComponents);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1234)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::OnGetWhereUsedForAutomationUsingKeyProperties ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemRev, _bstr_t bstrItemType, _bstr_t bstrDataSetFileName, VARIANT * pvarListOfWhereUsedDocuments ) {
    HRESULT _hr = raw_OnGetWhereUsedForAutomationUsingKeyProperties(pvarMFKAttrInfo, bstrItemRev, bstrItemType, bstrDataSetFileName, pvarListOfWhereUsedDocuments);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1235)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::DownloadDocumentsFromServerWithOptionsUsingKeyProperties ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemRev, _bstr_t bstrDataSetFileName, _bstr_t bstrRevisionRule, _bstr_t bstrItemType, VARIANT_BOOL vbReadOnly, VARIANT_BOOL vbAllLevel, unsigned long dwDownloadOption, SAFEARRAY * * pvarListOfFiles ) {
    HRESULT _hr = raw_DownloadDocumentsFromServerWithOptionsUsingKeyProperties(pvarMFKAttrInfo, bstrItemRev, bstrDataSetFileName, bstrRevisionRule, bstrItemType, vbReadOnly, vbAllLevel, dwDownloadOption, pvarListOfFiles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1236)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::ValidateKeyProperties ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrRevID, _bstr_t bstrItemType, VARIANT * pvarListOfPropsVsStatus ) {
    HRESULT _hr = raw_ValidateKeyProperties(pvarMFKAttrInfo, bstrRevID, bstrItemType, pvarListOfPropsVsStatus);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1237)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetStorageNameForProperties ( _bstr_t bstrFilename, VARIANT * pvarListOfPropInfo ) {
    HRESULT _hr = raw_GetStorageNameForProperties(bstrFilename, pvarListOfPropInfo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1238)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetErrorMessages ( VARIANT * pvarListOfErrorMsgs, VARIANT * pvarListOfWarningMsgs, VARIANT * pvarListOfInformationalMsgs ) {
    HRESULT _hr = raw_GetErrorMessages(pvarListOfErrorMsgs, pvarListOfWarningMsgs, pvarListOfInformationalMsgs);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1239)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetAllRevisions ( VARIANT * pvarMFKAttributes, _bstr_t bstrItemType, VARIANT * pvarRevisionList ) {
    HRESULT _hr = raw_GetAllRevisions(pvarMFKAttributes, bstrItemType, pvarRevisionList);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1240)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::CreateZipOfCache ( _bstr_t bstrSourceCachePath, _bstr_t bstrDestinationZipPath ) {
    HRESULT _hr = raw_CreateZipOfCache(bstrSourceCachePath, bstrDestinationZipPath);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1241)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetListOfWorkflows ( VARIANT * pvarMFKAttributes, _bstr_t bstrItemType, _bstr_t bstrItemRev, VARIANT_BOOL bGetFiltered, VARIANT * pVarWorkflows ) {
    HRESULT _hr = raw_GetListOfWorkflows(pvarMFKAttributes, bstrItemType, bstrItemRev, bGetFiltered, pVarWorkflows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1242)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::ExecuteWorkflow ( VARIANT * pvarMFKAttributes, _bstr_t bstrItemType, _bstr_t bstrItemRev, _bstr_t bstrprocessName, _bstr_t bstrProcessDesr, _bstr_t bstrTemplate, VARIANT * pVarOut ) {
    HRESULT _hr = raw_ExecuteWorkflow(pvarMFKAttributes, bstrItemType, bstrItemRev, bstrprocessName, bstrProcessDesr, bstrTemplate, pVarOut);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1243)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetActivePDMMode ( unsigned long * activePDM ) {
    HRESULT _hr = raw_GetActivePDMMode(activePDM);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1244)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetSolidEdgePreferencePath ( BSTR * lpSEPreferencePath ) {
    HRESULT _hr = raw_GetSolidEdgePreferencePath(lpSEPreferencePath);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1245)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::SetSEECOptions ( enum SEECOptions enumSEECDialog, unsigned long * dwValue ) {
    HRESULT _hr = raw_SetSEECOptions(enumSEECDialog, dwValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1246)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetBOMProperties ( VARIANT * pvarMFKAttributes, _bstr_t bstrItemRevId, _bstr_t bstrItemType, _bstr_t bstrRevisionRule, long * NoOfComponents, VARIANT * FileOccProp ) {
    HRESULT _hr = raw_GetBOMProperties(pvarMFKAttributes, bstrItemRevId, bstrItemType, bstrRevisionRule, NoOfComponents, FileOccProp);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1247)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::PublishFamilyOfAssemblyMembers ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemRev, _bstr_t bstrDataSetFileName, _bstr_t bstrRevisionRule, _bstr_t bstrItemType, SAFEARRAY * * psaMemberInfo, VARIANT * pvarListOfWhereUsedDocuments ) {
    HRESULT _hr = raw_PublishFamilyOfAssemblyMembers(pvarMFKAttrInfo, bstrItemRev, bstrDataSetFileName, bstrRevisionRule, bstrItemType, psaMemberInfo, pvarListOfWhereUsedDocuments);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1248)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetFamilyOfAssemblyMembers ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemRev, _bstr_t bstrItemType, VARIANT * psaPublishedMemberInfo, VARIANT * psaUnpublishedMemberInfo ) {
    HRESULT _hr = raw_GetFamilyOfAssemblyMembers(pvarMFKAttrInfo, bstrItemRev, bstrItemType, psaPublishedMemberInfo, psaUnpublishedMemberInfo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1249)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetWhereUsedInfoForPublishedFamilyOfAssembly ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemRev, _bstr_t bstrDataSetFileName, _bstr_t bstrRevisionRule, _bstr_t bstrItemType, VARIANT * pvarListOfWhereUsedDocuments ) {
    HRESULT _hr = raw_GetWhereUsedInfoForPublishedFamilyOfAssembly(pvarMFKAttrInfo, bstrItemRev, bstrDataSetFileName, bstrRevisionRule, bstrItemType, pvarListOfWhereUsedDocuments);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1250)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetWhereUsedInfo ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemRev, _bstr_t bstrItemType, _bstr_t bstrDataSetFileName, VARIANT * pvarListFilesWithMFKAttributes ) {
    HRESULT _hr = raw_GetWhereUsedInfo(pvarMFKAttrInfo, bstrItemRev, bstrItemType, bstrDataSetFileName, pvarListFilesWithMFKAttributes);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1251)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::PublishMembersOfActiveFamilyOfAssemblyDocument ( SAFEARRAY * * psaMemberInfo, VARIANT * pvarListOfWhereUsedDocuments ) {
    HRESULT _hr = raw_PublishMembersOfActiveFamilyOfAssemblyDocument(psaMemberInfo, pvarListOfWhereUsedDocuments);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1252)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetWhereUsedInfoForPublishedActiveFamilyOfAssemblyDocument ( VARIANT * pvarListOfWhereUsedDocuments ) {
    HRESULT _hr = raw_GetWhereUsedInfoForPublishedActiveFamilyOfAssemblyDocument(pvarListOfWhereUsedDocuments);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1253)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetFamilyOfAssemblyMembersOfActiveDocument ( VARIANT * psaPublishedMemberInfo, VARIANT * psaUnpublishedMemberInfo ) {
    HRESULT _hr = raw_GetFamilyOfAssemblyMembersOfActiveDocument(psaPublishedMemberInfo, psaUnpublishedMemberInfo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1254)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetTeamcenterDefaultItemTypePreference ( _bstr_t bstrFilename, BSTR * bstrDefaultItemType ) {
    HRESULT _hr = raw_GetTeamcenterDefaultItemTypePreference(bstrFilename, bstrDefaultItemType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1255)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::CreateBOMAndRelations ( VARIANT * pvarContainerInfo, SAFEARRAY * * psaComponentsInfo, VARIANT_BOOL bUploadFile, VARIANT_BOOL bCreatePreciseBOM, _bstr_t bstrRevRule, VARIANT_BOOL * bHasOverrideBody ) {
    HRESULT _hr = raw_CreateBOMAndRelations(pvarContainerInfo, psaComponentsInfo, bUploadFile, bCreatePreciseBOM, bstrRevRule, bHasOverrideBody);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1256)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::UploadModelViewsOfActiveAssemblyDocument ( ) {
    HRESULT _hr = raw_UploadModelViewsOfActiveAssemblyDocument();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1257)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::ExtractTranslatedFiles ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemRev, _bstr_t bstrRevisionRule, _bstr_t bstrItemType, _bstr_t bstrEtractLocation, _bstr_t bstrDataSetFileName, unsigned long dwExpandSelectionOptions, VARIANT * pvarSEFiletypeFilters, VARIANT * pvarRelationFilters, VARIANT * pvarReferanceFilters, VARIANT * pvarExportFileextensions, VARIANT * pvarListOfFiles ) {
    HRESULT _hr = raw_ExtractTranslatedFiles(pvarMFKAttrInfo, bstrItemRev, bstrRevisionRule, bstrItemType, bstrEtractLocation, bstrDataSetFileName, dwExpandSelectionOptions, pvarSEFiletypeFilters, pvarRelationFilters, pvarReferanceFilters, pvarExportFileextensions, pvarListOfFiles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1258)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::ExtractTranslatedFilesOfActiveDocument ( _bstr_t bstrEtractLocation, unsigned long dwExpandSelectionOptions, VARIANT * pvarSEFiletypeFilters, VARIANT * pvarRelationFilters, VARIANT * pvarReferanceFilters, VARIANT * pvarExportFileextensions, VARIANT * pvarListOfFiles ) {
    HRESULT _hr = raw_ExtractTranslatedFilesOfActiveDocument(bstrEtractLocation, dwExpandSelectionOptions, pvarSEFiletypeFilters, pvarRelationFilters, pvarReferanceFilters, pvarExportFileextensions, pvarListOfFiles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1259)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::CloneDraftDocument ( VARIANT_BOOL vbOpenCloneDocument ) {
    HRESULT _hr = raw_CloneDraftDocument(vbOpenCloneDocument);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1260)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetMFKAttributesAndItemTypeForGivenFile ( _bstr_t bstrFilename, BSTR * bstrItemType, VARIANT * pvarMFKAttributeValues ) {
    HRESULT _hr = raw_GetMFKAttributesAndItemTypeForGivenFile(bstrFilename, bstrItemType, pvarMFKAttributeValues);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1261)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::SetPDMPropsAndUploadTranslatedFile ( _bstr_t bstrOldFileName, VARIANT * pvarListOfPropsForFileSaveAs, BSTR * bstrNewFileName ) {
    HRESULT _hr = raw_SetPDMPropsAndUploadTranslatedFile(bstrOldFileName, pvarListOfPropsForFileSaveAs, bstrNewFileName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1262)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetListOfFilesUnderItemRevision ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemRev, _bstr_t bstrItemType, VARIANT * pvarSEFileListUnderItemRev, VARIANT * pvarAllFileListUnderItemRev ) {
    HRESULT _hr = raw_GetListOfFilesUnderItemRevision(pvarMFKAttrInfo, bstrItemRev, bstrItemType, pvarSEFileListUnderItemRev, pvarAllFileListUnderItemRev);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1263)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetTCSaveAsTranslationMBDPrefValues ( BSTR * bRelation, BSTR * bDatasetType, BSTR * bNamedReference, BSTR * bStringToAppend, VARIANT_BOOL * bIncludeRevName ) {
    HRESULT _hr = raw_GetTCSaveAsTranslationMBDPrefValues(bRelation, bDatasetType, bNamedReference, bStringToAppend, bIncludeRevName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1264)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetRequiredPDMProperties ( _bstr_t bstrFilename, VARIANT * pvarProperties, VARIANT * pvarPropertiesWithValues ) {
    HRESULT _hr = raw_GetRequiredPDMProperties(bstrFilename, pvarProperties, pvarPropertiesWithValues);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1265)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetActiveDocumentFilename ( BSTR * bstrFilename, BSTR * bstrDisplayname, BSTR * bstrReservedname ) {
    HRESULT _hr = raw_GetActiveDocumentFilename(bstrFilename, bstrDisplayname, bstrReservedname);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1266)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetTeamcenterInformation ( _bstr_t bstrFilename, VARIANT * psaTCInfo ) {
    HRESULT _hr = raw_GetTeamcenterInformation(bstrFilename, psaTCInfo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1267)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::OnUndoCheckOutDocumentsEx ( SAFEARRAY * * psaCacheFiles, VARIANT_BOOL bIgnoreFileModifiedStatus ) {
    HRESULT _hr = raw_OnUndoCheckOutDocumentsEx(psaCacheFiles, bIgnoreFileModifiedStatus);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1268)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetTCSaveAsTranslationPrefValues ( _bstr_t bstrExportType, BSTR * bRelation, BSTR * bDatasetType, BSTR * bNamedReference, BSTR * bStringToAppend, VARIANT_BOOL * bIncludeRevName ) {
    HRESULT _hr = raw_GetTCSaveAsTranslationPrefValues(bstrExportType, bRelation, bDatasetType, bNamedReference, bStringToAppend, bIncludeRevName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1269)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::DownloadDocumentsFromServerWithOptionsUsingKeyPropertiesEx ( VARIANT * pvarMFKAttrInfo, _bstr_t bstrItemRev, _bstr_t bstrDataSetFileName, _bstr_t bstrRevisionRule, _bstr_t bstrVariantRule, _bstr_t bstrItemType, VARIANT_BOOL vbReadOnly, VARIANT_BOOL vbAllLevel, unsigned long dwDownloadOption, SAFEARRAY * * pvarListOfFiles ) {
    HRESULT _hr = raw_DownloadDocumentsFromServerWithOptionsUsingKeyPropertiesEx(pvarMFKAttrInfo, bstrItemRev, bstrDataSetFileName, bstrRevisionRule, bstrVariantRule, bstrItemType, vbReadOnly, vbAllLevel, dwDownloadOption, pvarListOfFiles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1270)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::ValidateLogin_TCCS ( _bstr_t bstrUserName, _bstr_t bstrPassword, _bstr_t bstrGroup, _bstr_t bstrUserRole, _bstr_t bstrDBUrl, _bstr_t bstrDBDesc ) {
    HRESULT _hr = raw_ValidateLogin_TCCS(bstrUserName, bstrPassword, bstrGroup, bstrUserRole, bstrDBUrl, bstrDBDesc);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1271)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::GetTCSaveAsTranslationPrefValuesEx ( _bstr_t bstrExportType, BSTR * bRelation, BSTR * bDatasetType, BSTR * bNamedReference, BSTR * bStringToAppend, BSTR * bAutomaticVsManualTranslation, VARIANT_BOOL * bIncludeRevName ) {
    HRESULT _hr = raw_GetTCSaveAsTranslationPrefValuesEx(bstrExportType, bRelation, bDatasetType, bNamedReference, bStringToAppend, bAutomaticVsManualTranslation, bIncludeRevName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1272)
inline HRESULT TGFramework::_ISolidEdgeTCEAuto::CheckInStdPartsToTeamcenter ( SAFEARRAY * * ppsaFileList, VARIANT_BOOL bOnlyUpload ) {
    HRESULT _hr = raw_CheckInStdPartsToTeamcenter(ppsaFileList, bOnlyUpload);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface SolidEdgeInsightXT wrapper method implementations
//

#pragma implementation_key(1273)
inline HRESULT TGFramework::SolidEdgeInsightXT::GetPDMCachePath ( BSTR * bStrCachePath ) {
    return _com_dispatch_method(this, 0x60010000, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008", bStrCachePath);
}

#pragma implementation_key(1274)
inline HRESULT TGFramework::SolidEdgeInsightXT::CheckInDocumentsToInsightXTServer ( SAFEARRAY * * ppsaFileList, VARIANT_BOOL bOnlyUpload, _bstr_t bstrUrl ) {
    return _com_dispatch_method(this, 0x60010001, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x600c\x000b\x0008", ppsaFileList, bOnlyUpload, (BSTR)bstrUrl);
}

#pragma implementation_key(1275)
inline HRESULT TGFramework::SolidEdgeInsightXT::CheckOutDocumentsFromInsightXTServer ( _bstr_t bstrDirctFileItemId, _bstr_t bstrDirctFileItemRevId, VARIANT_BOOL bOnlyDownload, _bstr_t bstrFilename, enum DocumentDownloadLevel enumDownloadLevel ) {
    return _com_dispatch_method(this, 0x60010002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x000b\x0008\x0003", (BSTR)bstrDirctFileItemId, (BSTR)bstrDirctFileItemRevId, bOnlyDownload, (BSTR)bstrFilename, enumDownloadLevel);
}

#pragma implementation_key(1276)
inline int TGFramework::SolidEdgeInsightXT::IsInsightXTFileCheckedOut ( _bstr_t bstrFilename ) {
    int _result = 0;
    _com_dispatch_method(this, 0x60010003, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)bstrFilename);
    return _result;
}

#pragma implementation_key(1277)
inline HRESULT TGFramework::SolidEdgeInsightXT::GetDocumentUID ( _bstr_t bstrFilename, BSTR * bstrItemId, BSTR * bstrItemRev ) {
    return _com_dispatch_method(this, 0x60010004, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x4008\x4008", (BSTR)bstrFilename, bstrItemId, bstrItemRev);
}

#pragma implementation_key(1278)
inline HRESULT TGFramework::SolidEdgeInsightXT::DoesInsightXTFileExists ( _bstr_t bstrItemId, _bstr_t bstrItemRev, VARIANT_BOOL * bFileExists ) {
    return _com_dispatch_method(this, 0x60010005, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x400b", (BSTR)bstrItemId, (BSTR)bstrItemRev, bFileExists);
}

#pragma implementation_key(1279)
inline HRESULT TGFramework::SolidEdgeInsightXT::GetInsightXTMode ( VARIANT_BOOL * bIsInsightXTMode ) {
    return _com_dispatch_method(this, 0x60010006, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b", bIsInsightXTMode);
}

#pragma implementation_key(1280)
inline HRESULT TGFramework::SolidEdgeInsightXT::SetInsightXTMode ( VARIANT_BOOL bMode ) {
    return _com_dispatch_method(this, 0x60010007, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", bMode);
}

#pragma implementation_key(1281)
inline HRESULT TGFramework::SolidEdgeInsightXT::ValidateLogin ( _bstr_t bstrUserName, _bstr_t bstrPassword, _bstr_t bstrGroup, _bstr_t bstrUserRole, _bstr_t bstrDBUrl ) {
    return _com_dispatch_method(this, 0x60010008, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x0008\x0008", (BSTR)bstrUserName, (BSTR)bstrPassword, (BSTR)bstrGroup, (BSTR)bstrUserRole, (BSTR)bstrDBUrl);
}

#pragma implementation_key(1282)
inline HRESULT TGFramework::SolidEdgeInsightXT::AssignItemID ( _bstr_t bstrItemType, BSTR * bstrItemId, BSTR * bstrItemRev ) {
    return _com_dispatch_method(this, 0x60010009, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x4008\x4008", (BSTR)bstrItemType, bstrItemId, bstrItemRev);
}

#pragma implementation_key(1283)
inline HRESULT TGFramework::SolidEdgeInsightXT::SESP_GetItemAndRevisionNo ( _bstr_t bstrItemContentType, _bstr_t bstrItemRevContentType, BSTR * bstrPartno, BSTR * bstrPartRevno ) {
    return _com_dispatch_method(this, 0x6001000a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x4008\x4008", (BSTR)bstrItemContentType, (BSTR)bstrItemRevContentType, bstrPartno, bstrPartRevno);
}

#pragma implementation_key(1284)
inline HRESULT TGFramework::SolidEdgeInsightXT::PutItemTypeAsCustomProp ( _bstr_t bstrFilename, _bstr_t bstrItemType ) {
    return _com_dispatch_method(this, 0x6001000b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008", (BSTR)bstrFilename, (BSTR)bstrItemType);
}

#pragma implementation_key(1285)
inline HRESULT TGFramework::SolidEdgeInsightXT::GetDatasetNameFromCookie ( _bstr_t bstrFilename, BSTR * bstrDatasetName ) {
    return _com_dispatch_method(this, 0x6001000c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x4008", (BSTR)bstrFilename, bstrDatasetName);
}

#pragma implementation_key(1286)
inline HRESULT TGFramework::SolidEdgeInsightXT::DeleteFilesFromCache ( SAFEARRAY * * psaCacheFiles ) {
    return _com_dispatch_method(this, 0x6001000d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x600c", psaCacheFiles);
}

#pragma implementation_key(1287)
inline HRESULT TGFramework::SolidEdgeInsightXT::ImportDocumentsToServer ( long lnumberOfDocumentsFoldersToImport, SAFEARRAY * * psalistOfFilesFoldersToImport, _bstr_t bstrUserName, _bstr_t bstrPassword, _bstr_t bstrGroup, _bstr_t bstrUserRole, _bstr_t bstrDBUrl, VARIANT_BOOL bImportAsPrecise, VARIANT_BOOL bPerformOnlyDryRun, VARIANT_BOOL bDisplayAlert, VARIANT_BOOL bIsFromATP, VARIANT_BOOL bIsOverwrite, VARIANT_BOOL brestart, VARIANT_BOOL bLinkTraversal, VARIANT_BOOL bIncludeSubFolders, BSTR * bstrFolderUID ) {
    return _com_dispatch_method(this, 0x6001000e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x600c\x0008\x0008\x0008\x0008\x0008\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x4008", lnumberOfDocumentsFoldersToImport, psalistOfFilesFoldersToImport, (BSTR)bstrUserName, (BSTR)bstrPassword, (BSTR)bstrGroup, (BSTR)bstrUserRole, (BSTR)bstrDBUrl, bImportAsPrecise, bPerformOnlyDryRun, bDisplayAlert, bIsFromATP, bIsOverwrite, brestart, bLinkTraversal, bIncludeSubFolders, bstrFolderUID);
}

#pragma implementation_key(1288)
inline HRESULT TGFramework::SolidEdgeInsightXT::OnUndoCheckOutDocuments ( SAFEARRAY * * psaCacheFiles ) {
    return _com_dispatch_method(this, 0x6001000f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x600c", psaCacheFiles);
}

#pragma implementation_key(1289)
inline HRESULT TGFramework::SolidEdgeInsightXT::OnSynchronizeFile ( SAFEARRAY * * psaSynchFiles, enum SyncOption enumSyncOption ) {
    return _com_dispatch_method(this, 0x60010010, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x600c\x0003", psaSynchFiles, enumSyncOption);
}

#pragma implementation_key(1290)
inline HRESULT TGFramework::SolidEdgeInsightXT::GetOutOfDateDocuments ( VARIANT * pvarListOfOutOfDateDocuments ) {
    return _com_dispatch_method(this, 0x60010011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c", pvarListOfOutOfDateDocuments);
}

#pragma implementation_key(1291)
inline HRESULT TGFramework::SolidEdgeInsightXT::GetUserLogMessages ( VARIANT * pvarUserLogMessages ) {
    return _com_dispatch_method(this, 0x60010012, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c", pvarUserLogMessages);
}

#pragma implementation_key(1292)
inline HRESULT TGFramework::SolidEdgeInsightXT::SaveAsToInsightXT ( _bstr_t bstrItemId, _bstr_t bstrItemRev, _bstr_t bstrDataSetFileName, _bstr_t bstrRevisionRule, _bstr_t bstrFolderName, VARIANT * pvarListOldAndNewItemIDRevsFileNames ) {
    return _com_dispatch_method(this, 0x60010013, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x0008\x0008\x400c", (BSTR)bstrItemId, (BSTR)bstrItemRev, (BSTR)bstrDataSetFileName, (BSTR)bstrRevisionRule, (BSTR)bstrFolderName, pvarListOldAndNewItemIDRevsFileNames);
}

#pragma implementation_key(1293)
inline HRESULT TGFramework::SolidEdgeInsightXT::ReviseToInsightXT ( _bstr_t bstrItemId, _bstr_t bstrItemRev, _bstr_t bstrDataSetFileName, _bstr_t bstrRevisionRule, _bstr_t bstrFolderName, VARIANT * pvarListOldAndNewItemIDRevsFileNames ) {
    return _com_dispatch_method(this, 0x60010014, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x0008\x0008\x400c", (BSTR)bstrItemId, (BSTR)bstrItemRev, (BSTR)bstrDataSetFileName, (BSTR)bstrRevisionRule, (BSTR)bstrFolderName, pvarListOldAndNewItemIDRevsFileNames);
}

#pragma implementation_key(1294)
inline HRESULT TGFramework::SolidEdgeInsightXT::OnGetWhereUsedForAutomation ( _bstr_t bstrItemId, _bstr_t bstrItemRev, _bstr_t bstrDataSetFileName, VARIANT * pvarListOfWhereUsedDocuments ) {
    return _com_dispatch_method(this, 0x60010015, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x400c", (BSTR)bstrItemId, (BSTR)bstrItemRev, (BSTR)bstrDataSetFileName, pvarListOfWhereUsedDocuments);
}

#pragma implementation_key(1295)
inline HRESULT TGFramework::SolidEdgeInsightXT::CreateNewProject ( _bstr_t bstrProjectName ) {
    return _com_dispatch_method(this, 0x60010016, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)bstrProjectName);
}

#pragma implementation_key(1296)
inline HRESULT TGFramework::SolidEdgeInsightXT::DeleteProject ( _bstr_t bstrProjectName ) {
    return _com_dispatch_method(this, 0x60010017, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)bstrProjectName);
}

#pragma implementation_key(1297)
inline HRESULT TGFramework::SolidEdgeInsightXT::DeleteAllProjects ( ) {
    return _com_dispatch_method(this, 0x60010018, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1298)
inline HRESULT TGFramework::SolidEdgeInsightXT::DownladDocumentsFromServerWithOptions ( _bstr_t bstrItemId, _bstr_t bstrItemRev, _bstr_t bstrDataSetFileName, _bstr_t bstrRevisionRule, _bstr_t bstrVariantRule, VARIANT_BOOL vbReadOnly, VARIANT_BOOL vbAllLevel, unsigned long dwDownloadOption, SAFEARRAY * * pvarListOfFiles ) {
    return _com_dispatch_method(this, 0x60010019, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x0008\x0008\x000b\x000b\x0003\x680c", (BSTR)bstrItemId, (BSTR)bstrItemRev, (BSTR)bstrDataSetFileName, (BSTR)bstrRevisionRule, (BSTR)bstrVariantRule, vbReadOnly, vbAllLevel, dwDownloadOption, pvarListOfFiles);
}

#pragma implementation_key(1299)
inline HRESULT TGFramework::SolidEdgeInsightXT::GetListOfIndirectFilesForGivenFile ( _bstr_t bstrItemId, _bstr_t bstrItemRev, _bstr_t bstrDataSetFileName, _bstr_t bstrRevisionRule, _bstr_t bstrVariantRule, VARIANT * pvarListOfIndirectFiles ) {
    return _com_dispatch_method(this, 0x6001001a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x0008\x0008\x400c", (BSTR)bstrItemId, (BSTR)bstrItemRev, (BSTR)bstrDataSetFileName, (BSTR)bstrRevisionRule, (BSTR)bstrVariantRule, pvarListOfIndirectFiles);
}

#pragma implementation_key(1300)
inline HRESULT TGFramework::SolidEdgeInsightXT::GetMappedPropertiesForGivenFile ( _bstr_t bstrItemId, _bstr_t bstrItemRev, _bstr_t bstrDataSetFileName, VARIANT * pvarListOfProperties ) {
    return _com_dispatch_method(this, 0x6001001b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x400c", (BSTR)bstrItemId, (BSTR)bstrItemRev, (BSTR)bstrDataSetFileName, pvarListOfProperties);
}

#pragma implementation_key(1301)
inline HRESULT TGFramework::SolidEdgeInsightXT::GetListOfFilesFromInsightXTServer ( _bstr_t bstrDirctFileItemId, _bstr_t bstrDirctFileItemRevId, VARIANT * vFileNames, long * nFiles ) {
    return _com_dispatch_method(this, 0x6001001c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x400c\x4003", (BSTR)bstrDirctFileItemId, (BSTR)bstrDirctFileItemRevId, vFileNames, nFiles);
}

#pragma implementation_key(1302)
inline HRESULT TGFramework::SolidEdgeInsightXT::GetTALLogFileName ( BSTR * bstrLogFileName ) {
    return _com_dispatch_method(this, 0x6001001d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008", bstrLogFileName);
}

#pragma implementation_key(1303)
inline HRESULT TGFramework::SolidEdgeInsightXT::ValidateTcObjectModel ( _bstr_t bstrFilename, _bstr_t bstrOldItemID, _bstr_t bstrOldRev, VARIANT_BOOL * bIsTcModelCorrect, BSTR * bsrtCompResult, VARIANT * vRevisionRule, VARIANT * vValidateBOMOnly, long * nNoOfServerComponents ) {
    return _com_dispatch_method(this, 0x6001001e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x400b\x4008\x400c\x400c\x4003", (BSTR)bstrFilename, (BSTR)bstrOldItemID, (BSTR)bstrOldRev, bIsTcModelCorrect, bsrtCompResult, vRevisionRule, vValidateBOMOnly, nNoOfServerComponents);
}

#pragma implementation_key(1304)
inline HRESULT TGFramework::SolidEdgeInsightXT::GetBomStructure ( _bstr_t bstrItemId, _bstr_t bstrItemRevId, _bstr_t bstrRevisionRule, VARIANT_BOOL bDeepList, long * NoOfComponents, VARIANT * ListOfItemRevIds, VARIANT * ListOfFileSpecs ) {
    return _com_dispatch_method(this, 0x6001001f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x000b\x4003\x400c\x400c", (BSTR)bstrItemId, (BSTR)bstrItemRevId, (BSTR)bstrRevisionRule, bDeepList, NoOfComponents, ListOfItemRevIds, ListOfFileSpecs);
}

#pragma implementation_key(1305)
inline HRESULT TGFramework::SolidEdgeInsightXT::GetItemRevBasedOnSEType ( enum TCESETypes nSEType, _bstr_t bstrUserName, VARIANT * ListOfItemRevIds ) {
    return _com_dispatch_method(this, 0x60010020, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0008\x400c", nSEType, (BSTR)bstrUserName, ListOfItemRevIds);
}

#pragma implementation_key(1306)
inline HRESULT TGFramework::SolidEdgeInsightXT::GetItemTypesInfo ( BSTR * pbstrXML, BSTR * pbstrDefaultItemType ) {
    return _com_dispatch_method(this, 0x60010021, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008\x4008", pbstrXML, pbstrDefaultItemType);
}

#pragma implementation_key(1307)
inline HRESULT TGFramework::SolidEdgeInsightXT::GetSmartCodes ( VARIANT * pvarSmartCodesInfo ) {
    return _com_dispatch_method(this, 0x60010022, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c", pvarSmartCodesInfo);
}

#pragma implementation_key(1308)
inline HRESULT TGFramework::SolidEdgeInsightXT::UnGetSmartCodes ( SAFEARRAY * * ppsaUnGetInfo ) {
    return _com_dispatch_method(this, 0x60010023, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x600c", ppsaUnGetInfo);
}

#pragma implementation_key(1309)
inline HRESULT TGFramework::SolidEdgeInsightXT::CheckInDocumentsToInsightXTServerEx ( VARIANT * pvarFilesToBeCheckedInInfo, VARIANT * pvarArguments ) {
    return _com_dispatch_method(this, 0x60010024, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x400c", pvarFilesToBeCheckedInInfo, pvarArguments);
}

#pragma implementation_key(1310)
inline HRESULT TGFramework::SolidEdgeInsightXT::IsItemTypeSmartCodesConfigured ( _bstr_t bstrItemType, VARIANT_BOOL * pvbIsSmartCodesConfigured ) {
    return _com_dispatch_method(this, 0x60010025, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x400b", (BSTR)bstrItemType, pvbIsSmartCodesConfigured);
}

#pragma implementation_key(1311)
inline HRESULT TGFramework::SolidEdgeInsightXT::GetInsightXTOrTCPreferenceValues ( VARIANT * pvarPreferenceInfo ) {
    return _com_dispatch_method(this, 0x60010026, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c", pvarPreferenceInfo);
}

#pragma implementation_key(1312)
inline HRESULT TGFramework::SolidEdgeInsightXT::UpdateStatusInformation ( SAFEARRAY * * psaCacheFiles ) {
    return _com_dispatch_method(this, 0x60010027, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x600c", psaCacheFiles);
}

#pragma implementation_key(1313)
inline HRESULT TGFramework::SolidEdgeInsightXT::GetProjectsForLoggedInUSer ( VARIANT * pvarListOfUserProjects, VARIANT * pvarListOfUserProjectUIDs ) {
    return _com_dispatch_method(this, 0x60010028, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x400c", pvarListOfUserProjects, pvarListOfUserProjectUIDs);
}

#pragma implementation_key(1314)
inline HRESULT TGFramework::SolidEdgeInsightXT::GetProjectsForGivenItemIDs ( VARIANT * pvarListOfItemIDsAndProjects ) {
    return _com_dispatch_method(this, 0x60010029, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c", pvarListOfItemIDsAndProjects);
}

#pragma implementation_key(1315)
inline HRESULT TGFramework::SolidEdgeInsightXT::AddOrRemoveItemsToOrFromProjects ( VARIANT * pvarItemInfoToAddOrRemoveToProjects ) {
    return _com_dispatch_method(this, 0x60010032, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c", pvarItemInfoToAddOrRemoveToProjects);
}

#pragma implementation_key(1316)
inline HRESULT TGFramework::SolidEdgeInsightXT::CheckBomStructure ( _bstr_t bstrItemId, _bstr_t bstrItemRevId, _bstr_t bstrRevisionRule, VARIANT_BOOL * bIsDuplicateBOMLineExists, VARIANT * ListOfDupliacteObjIDs ) {
    return _com_dispatch_method(this, 0x6001002a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x400b\x400c", (BSTR)bstrItemId, (BSTR)bstrItemRevId, (BSTR)bstrRevisionRule, bIsDuplicateBOMLineExists, ListOfDupliacteObjIDs);
}

#pragma implementation_key(1317)
inline HRESULT TGFramework::SolidEdgeInsightXT::GetItemContentTypesSupportingRevisioning ( VARIANT * pvarListOfContentTypes ) {
    return _com_dispatch_method(this, 0x6001002c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c", pvarListOfContentTypes);
}

#pragma implementation_key(1318)
inline HRESULT TGFramework::SolidEdgeInsightXT::ProcessUpdateDrawing ( VARIANT_BOOL * bTerminateProcess ) {
    return _com_dispatch_method(this, 0x6001002d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b", bTerminateProcess);
}

#pragma implementation_key(1319)
inline HRESULT TGFramework::SolidEdgeInsightXT::SESPUpdateWFCallouts ( VARIANT * plistItemAndRevId, VARIANT * pListOldAndNewPropName, VARIANT * ListOfFailedDrafts, VARIANT_BOOL * bTerminateProcess ) {
    return _com_dispatch_method(this, 0x6001002e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x400c\x400c\x400b", plistItemAndRevId, pListOldAndNewPropName, ListOfFailedDrafts, bTerminateProcess);
}

#pragma implementation_key(1320)
inline HRESULT TGFramework::SolidEdgeInsightXT::SESPGetActiveUrl ( VARIANT * activeUrl ) {
    return _com_dispatch_method(this, 0x6001002f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c", activeUrl);
}

#pragma implementation_key(1321)
inline HRESULT TGFramework::SolidEdgeInsightXT::IsInsightXTLicenseAvailable ( VARIANT_BOOL * bIsInsightXTLicenseAvailable ) {
    return _com_dispatch_method(this, 0x60010030, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b", bIsInsightXTLicenseAvailable);
}

#pragma implementation_key(1322)
inline HRESULT TGFramework::SolidEdgeInsightXT::PutContentTypeIntoStorage ( _bstr_t bstrFilename, _bstr_t bstrItemType, _bstr_t bItemRevType, _bstr_t bContentType ) {
    return _com_dispatch_method(this, 0x60010031, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x0008", (BSTR)bstrFilename, (BSTR)bstrItemType, (BSTR)bItemRevType, (BSTR)bContentType);
}

//
// interface _ISolidEdgeInsightXTAuto wrapper method implementations
//

#pragma implementation_key(1323)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::GetPDMCachePath ( BSTR * bStrCachePath ) {
    HRESULT _hr = raw_GetPDMCachePath(bStrCachePath);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1324)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::CheckInDocumentsToInsightXTServer ( SAFEARRAY * * ppsaFileList, VARIANT_BOOL bOnlyUpload, _bstr_t bstrUrl ) {
    HRESULT _hr = raw_CheckInDocumentsToInsightXTServer(ppsaFileList, bOnlyUpload, bstrUrl);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1325)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::CheckOutDocumentsFromInsightXTServer ( _bstr_t bstrDirctFileItemId, _bstr_t bstrDirctFileItemRevId, VARIANT_BOOL bOnlyDownload, _bstr_t bstrFilename, enum DocumentDownloadLevel enumDownloadLevel ) {
    HRESULT _hr = raw_CheckOutDocumentsFromInsightXTServer(bstrDirctFileItemId, bstrDirctFileItemRevId, bOnlyDownload, bstrFilename, enumDownloadLevel);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1326)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::GetDocumentUID ( _bstr_t bstrFilename, BSTR * bstrItemId, BSTR * bstrItemRev ) {
    HRESULT _hr = raw_GetDocumentUID(bstrFilename, bstrItemId, bstrItemRev);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1327)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::DoesInsightXTFileExists ( _bstr_t bstrItemId, _bstr_t bstrItemRev, VARIANT_BOOL * bFileExists ) {
    HRESULT _hr = raw_DoesInsightXTFileExists(bstrItemId, bstrItemRev, bFileExists);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1328)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::GetInsightXTMode ( VARIANT_BOOL * bIsInsightXTMode ) {
    HRESULT _hr = raw_GetInsightXTMode(bIsInsightXTMode);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1329)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::SetInsightXTMode ( VARIANT_BOOL bMode ) {
    HRESULT _hr = raw_SetInsightXTMode(bMode);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1330)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::ValidateLogin ( _bstr_t bstrUserName, _bstr_t bstrPassword, _bstr_t bstrGroup, _bstr_t bstrUserRole, _bstr_t bstrDBUrl ) {
    HRESULT _hr = raw_ValidateLogin(bstrUserName, bstrPassword, bstrGroup, bstrUserRole, bstrDBUrl);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1331)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::AssignItemID ( _bstr_t bstrItemType, BSTR * bstrItemId, BSTR * bstrItemRev ) {
    HRESULT _hr = raw_AssignItemID(bstrItemType, bstrItemId, bstrItemRev);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1332)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::SESP_GetItemAndRevisionNo ( _bstr_t bstrItemContentType, _bstr_t bstrItemRevContentType, BSTR * bstrPartno, BSTR * bstrPartRevno ) {
    HRESULT _hr = raw_SESP_GetItemAndRevisionNo(bstrItemContentType, bstrItemRevContentType, bstrPartno, bstrPartRevno);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1333)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::PutItemTypeAsCustomProp ( _bstr_t bstrFilename, _bstr_t bstrItemType ) {
    HRESULT _hr = raw_PutItemTypeAsCustomProp(bstrFilename, bstrItemType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1334)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::GetDatasetNameFromCookie ( _bstr_t bstrFilename, BSTR * bstrDatasetName ) {
    HRESULT _hr = raw_GetDatasetNameFromCookie(bstrFilename, bstrDatasetName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1335)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::DeleteFilesFromCache ( SAFEARRAY * * psaCacheFiles ) {
    HRESULT _hr = raw_DeleteFilesFromCache(psaCacheFiles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1336)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::ImportDocumentsToServer ( long lnumberOfDocumentsFoldersToImport, SAFEARRAY * * psalistOfFilesFoldersToImport, _bstr_t bstrUserName, _bstr_t bstrPassword, _bstr_t bstrGroup, _bstr_t bstrUserRole, _bstr_t bstrDBUrl, VARIANT_BOOL bImportAsPrecise, VARIANT_BOOL bPerformOnlyDryRun, VARIANT_BOOL bDisplayAlert, VARIANT_BOOL bIsFromATP, VARIANT_BOOL bIsOverwrite, VARIANT_BOOL brestart, VARIANT_BOOL bLinkTraversal, VARIANT_BOOL bIncludeSubFolders, BSTR * bstrFolderUID ) {
    HRESULT _hr = raw_ImportDocumentsToServer(lnumberOfDocumentsFoldersToImport, psalistOfFilesFoldersToImport, bstrUserName, bstrPassword, bstrGroup, bstrUserRole, bstrDBUrl, bImportAsPrecise, bPerformOnlyDryRun, bDisplayAlert, bIsFromATP, bIsOverwrite, brestart, bLinkTraversal, bIncludeSubFolders, bstrFolderUID);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1337)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::OnUndoCheckOutDocuments ( SAFEARRAY * * psaCacheFiles ) {
    HRESULT _hr = raw_OnUndoCheckOutDocuments(psaCacheFiles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1338)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::OnSynchronizeFile ( SAFEARRAY * * psaSynchFiles, enum SyncOption enumSyncOption ) {
    HRESULT _hr = raw_OnSynchronizeFile(psaSynchFiles, enumSyncOption);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1339)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::GetOutOfDateDocuments ( VARIANT * pvarListOfOutOfDateDocuments ) {
    HRESULT _hr = raw_GetOutOfDateDocuments(pvarListOfOutOfDateDocuments);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1340)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::GetUserLogMessages ( VARIANT * pvarUserLogMessages ) {
    HRESULT _hr = raw_GetUserLogMessages(pvarUserLogMessages);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1341)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::SaveAsToInsightXT ( _bstr_t bstrItemId, _bstr_t bstrItemRev, _bstr_t bstrDataSetFileName, _bstr_t bstrRevisionRule, _bstr_t bstrFolderName, VARIANT * pvarListOldAndNewItemIDRevsFileNames ) {
    HRESULT _hr = raw_SaveAsToInsightXT(bstrItemId, bstrItemRev, bstrDataSetFileName, bstrRevisionRule, bstrFolderName, pvarListOldAndNewItemIDRevsFileNames);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1342)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::ReviseToInsightXT ( _bstr_t bstrItemId, _bstr_t bstrItemRev, _bstr_t bstrDataSetFileName, _bstr_t bstrRevisionRule, _bstr_t bstrFolderName, VARIANT * pvarListOldAndNewItemIDRevsFileNames ) {
    HRESULT _hr = raw_ReviseToInsightXT(bstrItemId, bstrItemRev, bstrDataSetFileName, bstrRevisionRule, bstrFolderName, pvarListOldAndNewItemIDRevsFileNames);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1343)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::OnGetWhereUsedForAutomation ( _bstr_t bstrItemId, _bstr_t bstrItemRev, _bstr_t bstrDataSetFileName, VARIANT * pvarListOfWhereUsedDocuments ) {
    HRESULT _hr = raw_OnGetWhereUsedForAutomation(bstrItemId, bstrItemRev, bstrDataSetFileName, pvarListOfWhereUsedDocuments);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1344)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::CreateNewProject ( _bstr_t bstrProjectName ) {
    HRESULT _hr = raw_CreateNewProject(bstrProjectName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1345)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::DeleteProject ( _bstr_t bstrProjectName ) {
    HRESULT _hr = raw_DeleteProject(bstrProjectName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1346)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::DeleteAllProjects ( ) {
    HRESULT _hr = raw_DeleteAllProjects();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1347)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::DownladDocumentsFromServerWithOptions ( _bstr_t bstrItemId, _bstr_t bstrItemRev, _bstr_t bstrDataSetFileName, _bstr_t bstrRevisionRule, _bstr_t bstrVariantRule, VARIANT_BOOL vbReadOnly, VARIANT_BOOL vbAllLevel, unsigned long dwDownloadOption, SAFEARRAY * * pvarListOfFiles ) {
    HRESULT _hr = raw_DownladDocumentsFromServerWithOptions(bstrItemId, bstrItemRev, bstrDataSetFileName, bstrRevisionRule, bstrVariantRule, vbReadOnly, vbAllLevel, dwDownloadOption, pvarListOfFiles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1348)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::GetListOfIndirectFilesForGivenFile ( _bstr_t bstrItemId, _bstr_t bstrItemRev, _bstr_t bstrDataSetFileName, _bstr_t bstrRevisionRule, _bstr_t bstrVariantRule, VARIANT * pvarListOfIndirectFiles ) {
    HRESULT _hr = raw_GetListOfIndirectFilesForGivenFile(bstrItemId, bstrItemRev, bstrDataSetFileName, bstrRevisionRule, bstrVariantRule, pvarListOfIndirectFiles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1349)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::GetMappedPropertiesForGivenFile ( _bstr_t bstrItemId, _bstr_t bstrItemRev, _bstr_t bstrDataSetFileName, VARIANT * pvarListOfProperties ) {
    HRESULT _hr = raw_GetMappedPropertiesForGivenFile(bstrItemId, bstrItemRev, bstrDataSetFileName, pvarListOfProperties);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1350)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::GetListOfFilesFromInsightXTServer ( _bstr_t bstrDirctFileItemId, _bstr_t bstrDirctFileItemRevId, VARIANT * vFileNames, long * nFiles ) {
    HRESULT _hr = raw_GetListOfFilesFromInsightXTServer(bstrDirctFileItemId, bstrDirctFileItemRevId, vFileNames, nFiles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1351)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::GetTALLogFileName ( BSTR * bstrLogFileName ) {
    HRESULT _hr = raw_GetTALLogFileName(bstrLogFileName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1352)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::ValidateTcObjectModel ( _bstr_t bstrFilename, _bstr_t bstrOldItemID, _bstr_t bstrOldRev, VARIANT_BOOL * bIsTcModelCorrect, BSTR * bsrtCompResult, VARIANT * vRevisionRule, VARIANT * vValidateBOMOnly, long * nNoOfServerComponents ) {
    HRESULT _hr = raw_ValidateTcObjectModel(bstrFilename, bstrOldItemID, bstrOldRev, bIsTcModelCorrect, bsrtCompResult, vRevisionRule, vValidateBOMOnly, nNoOfServerComponents);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1353)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::GetBomStructure ( _bstr_t bstrItemId, _bstr_t bstrItemRevId, _bstr_t bstrRevisionRule, VARIANT_BOOL bDeepList, long * NoOfComponents, VARIANT * ListOfItemRevIds, VARIANT * ListOfFileSpecs ) {
    HRESULT _hr = raw_GetBomStructure(bstrItemId, bstrItemRevId, bstrRevisionRule, bDeepList, NoOfComponents, ListOfItemRevIds, ListOfFileSpecs);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1354)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::GetItemRevBasedOnSEType ( enum TCESETypes nSEType, _bstr_t bstrUserName, VARIANT * ListOfItemRevIds ) {
    HRESULT _hr = raw_GetItemRevBasedOnSEType(nSEType, bstrUserName, ListOfItemRevIds);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1355)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::GetItemTypesInfo ( BSTR * pbstrXML, BSTR * pbstrDefaultItemType ) {
    HRESULT _hr = raw_GetItemTypesInfo(pbstrXML, pbstrDefaultItemType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1356)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::GetSmartCodes ( VARIANT * pvarSmartCodesInfo ) {
    HRESULT _hr = raw_GetSmartCodes(pvarSmartCodesInfo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1357)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::UnGetSmartCodes ( SAFEARRAY * * ppsaUnGetInfo ) {
    HRESULT _hr = raw_UnGetSmartCodes(ppsaUnGetInfo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1358)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::CheckInDocumentsToInsightXTServerEx ( VARIANT * pvarFilesToBeCheckedInInfo, VARIANT * pvarArguments ) {
    HRESULT _hr = raw_CheckInDocumentsToInsightXTServerEx(pvarFilesToBeCheckedInInfo, pvarArguments);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1359)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::IsItemTypeSmartCodesConfigured ( _bstr_t bstrItemType, VARIANT_BOOL * pvbIsSmartCodesConfigured ) {
    HRESULT _hr = raw_IsItemTypeSmartCodesConfigured(bstrItemType, pvbIsSmartCodesConfigured);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1360)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::GetInsightXTOrTCPreferenceValues ( VARIANT * pvarPreferenceInfo ) {
    HRESULT _hr = raw_GetInsightXTOrTCPreferenceValues(pvarPreferenceInfo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1361)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::UpdateStatusInformation ( SAFEARRAY * * psaCacheFiles ) {
    HRESULT _hr = raw_UpdateStatusInformation(psaCacheFiles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1362)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::GetProjectsForLoggedInUSer ( VARIANT * pvarListOfUserProjects, VARIANT * pvarListOfUserProjectUIDs ) {
    HRESULT _hr = raw_GetProjectsForLoggedInUSer(pvarListOfUserProjects, pvarListOfUserProjectUIDs);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1363)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::GetProjectsForGivenItemIDs ( VARIANT * pvarListOfItemIDsAndProjects ) {
    HRESULT _hr = raw_GetProjectsForGivenItemIDs(pvarListOfItemIDsAndProjects);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1364)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::AddOrRemoveItemsToOrFromProjects ( VARIANT * pvarItemInfoToAddOrRemoveToProjects ) {
    HRESULT _hr = raw_AddOrRemoveItemsToOrFromProjects(pvarItemInfoToAddOrRemoveToProjects);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1365)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::CheckBomStructure ( _bstr_t bstrItemId, _bstr_t bstrItemRevId, _bstr_t bstrRevisionRule, VARIANT_BOOL * bIsDuplicateBOMLineExists, VARIANT * ListOfDupliacteObjIDs ) {
    HRESULT _hr = raw_CheckBomStructure(bstrItemId, bstrItemRevId, bstrRevisionRule, bIsDuplicateBOMLineExists, ListOfDupliacteObjIDs);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1366)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::GetItemContentTypesSupportingRevisioning ( VARIANT * pvarListOfContentTypes ) {
    HRESULT _hr = raw_GetItemContentTypesSupportingRevisioning(pvarListOfContentTypes);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1367)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::ProcessUpdateDrawing ( VARIANT_BOOL * bTerminateProcess ) {
    HRESULT _hr = raw_ProcessUpdateDrawing(bTerminateProcess);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1368)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::SESPUpdateWFCallouts ( VARIANT * plistItemAndRevId, VARIANT * pListOldAndNewPropName, VARIANT * ListOfFailedDrafts, VARIANT_BOOL * bTerminateProcess ) {
    HRESULT _hr = raw_SESPUpdateWFCallouts(plistItemAndRevId, pListOldAndNewPropName, ListOfFailedDrafts, bTerminateProcess);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1369)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::SESPGetActiveUrl ( VARIANT * activeUrl ) {
    HRESULT _hr = raw_SESPGetActiveUrl(activeUrl);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1370)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::IsInsightXTLicenseAvailable ( VARIANT_BOOL * bIsInsightXTLicenseAvailable ) {
    HRESULT _hr = raw_IsInsightXTLicenseAvailable(bIsInsightXTLicenseAvailable);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1371)
inline HRESULT TGFramework::_ISolidEdgeInsightXTAuto::PutContentTypeIntoStorage ( _bstr_t bstrFilename, _bstr_t bstrItemType, _bstr_t bItemRevType, _bstr_t bContentType ) {
    HRESULT _hr = raw_PutContentTypeIntoStorage(bstrFilename, bstrItemType, bItemRevType, bContentType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISEECEvents wrapper method implementations
//

#pragma implementation_key(1372)
inline HRESULT TGFramework::ISEECEvents::SEEC_IsPreCPDEventSupported ( VARIANT_BOOL * pvbPreCPDEventSupported ) {
    HRESULT _hr = raw_SEEC_IsPreCPDEventSupported(pvbPreCPDEventSupported);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1373)
inline HRESULT TGFramework::ISEECEvents::SEEC_BeforeCPDDisplay ( IDispatch * pCPDInitializer, enum eCPDMode eCPDMode ) {
    HRESULT _hr = raw_SEEC_BeforeCPDDisplay(pCPDInitializer, eCPDMode);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1374)
inline HRESULT TGFramework::ISEECEvents::PDM_OnFileOpenUI ( BSTR * bstrFilename ) {
    HRESULT _hr = raw_PDM_OnFileOpenUI(bstrFilename);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISESPEvents wrapper method implementations
//

#pragma implementation_key(1375)
inline HRESULT TGFramework::ISESPEvents::SESP_IsPreCPDEventSupported ( VARIANT_BOOL * pvbPreCPDEventSupported ) {
    HRESULT _hr = raw_SESP_IsPreCPDEventSupported(pvbPreCPDEventSupported);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1376)
inline HRESULT TGFramework::ISESPEvents::SESP_BeforeCPDDisplay ( IDispatch * pCPDInitializer, enum eCPDMode eCPDMode ) {
    HRESULT _hr = raw_SESP_BeforeCPDDisplay(pCPDInitializer, eCPDMode);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1377)
inline HRESULT TGFramework::ISESPEvents::SESPPDM_OnFileOpenUI ( BSTR * bstrFilename ) {
    HRESULT _hr = raw_SESPPDM_OnFileOpenUI(bstrFilename);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface IBiDMEvents wrapper method implementations
//

#pragma implementation_key(1378)
inline HRESULT TGFramework::IBiDMEvents::BiDM_IsPreCPDEventSupported ( VARIANT_BOOL * pvbPreCPDEventSupported ) {
    HRESULT _hr = raw_BiDM_IsPreCPDEventSupported(pvbPreCPDEventSupported);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1379)
inline HRESULT TGFramework::IBiDMEvents::BiDM_BeforeCPDDisplay ( IDispatch * pCPDInitializer, enum eCPDMode eCPDMode ) {
    HRESULT _hr = raw_BiDM_BeforeCPDDisplay(pCPDInitializer, eCPDMode);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface Customization wrapper method implementations
//

#pragma implementation_key(1380)
inline TGFramework::ApplicationPtr TGFramework::Customization::GetApplication ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0xcc, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(1381)
inline TGFramework::ApplicationPtr TGFramework::Customization::GetParent ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0xcd, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(1382)
inline TGFramework::RibbonBarThemesPtr TGFramework::Customization::GetRibbonBarThemes ( ) {
    struct RibbonBarThemes * _result = 0;
    _com_dispatch_method(this, 0x12c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return RibbonBarThemesPtr(_result, false);
}

#pragma implementation_key(1383)
inline TGFramework::RadialMenuPtr TGFramework::Customization::GetRadialMenu ( ) {
    struct RadialMenu * _result = 0;
    _com_dispatch_method(this, 0x12d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return RadialMenuPtr(_result, false);
}

#pragma implementation_key(1384)
inline TGFramework::SwitchWindowCustPtr TGFramework::Customization::GetSwitchWindowCust ( ) {
    struct SwitchWindowCust * _result = 0;
    _com_dispatch_method(this, 0x130, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SwitchWindowCustPtr(_result, false);
}

#pragma implementation_key(1385)
inline HRESULT TGFramework::Customization::BeginCustomization ( ) {
    return _com_dispatch_method(this, 0x12e, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1386)
inline HRESULT TGFramework::Customization::EndCustomization ( ) {
    return _com_dispatch_method(this, 0x12f, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// dispinterface RibbonBarThemes wrapper method implementations
//

#pragma implementation_key(1387)
inline TGFramework::ApplicationPtr TGFramework::RibbonBarThemes::GetApplication ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0xcc, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(1388)
inline TGFramework::CustomizationPtr TGFramework::RibbonBarThemes::GetParent ( ) {
    struct Customization * _result = 0;
    _com_dispatch_method(this, 0xcd, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return CustomizationPtr(_result, false);
}

#pragma implementation_key(1389)
inline long TGFramework::RibbonBarThemes::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc9, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1390)
inline TGFramework::RibbonBarThemePtr TGFramework::RibbonBarThemes::Item ( const _variant_t & Index ) {
    struct RibbonBarTheme * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return RibbonBarThemePtr(_result, false);
}

#pragma implementation_key(1391)
inline TGFramework::RibbonBarThemePtr TGFramework::RibbonBarThemes::Create ( const _variant_t & BasedOffTheme ) {
    struct RibbonBarTheme * _result = 0;
    _com_dispatch_method(this, 0x190, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &BasedOffTheme);
    return RibbonBarThemePtr(_result, false);
}

#pragma implementation_key(1392)
inline HRESULT TGFramework::RibbonBarThemes::Commit ( ) {
    return _com_dispatch_method(this, 0x191, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1393)
inline HRESULT TGFramework::RibbonBarThemes::Remove ( const _variant_t & Theme ) {
    return _com_dispatch_method(this, 0x192, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c", &Theme);
}

#pragma implementation_key(1394)
inline HRESULT TGFramework::RibbonBarThemes::ActivateTheme ( const _variant_t & Theme ) {
    return _com_dispatch_method(this, 0x193, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c", &Theme);
}

//
// dispinterface RibbonBarTheme wrapper method implementations
//

#pragma implementation_key(1395)
inline TGFramework::ApplicationPtr TGFramework::RibbonBarTheme::GetApplication ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(1396)
inline TGFramework::RibbonBarThemesPtr TGFramework::RibbonBarTheme::GetParent ( ) {
    struct RibbonBarThemes * _result = 0;
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return RibbonBarThemesPtr(_result, false);
}

#pragma implementation_key(1397)
inline TGFramework::RibbonBarsPtr TGFramework::RibbonBarTheme::GetRibbonBars ( ) {
    struct RibbonBars * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return RibbonBarsPtr(_result, false);
}

#pragma implementation_key(1398)
inline _bstr_t TGFramework::RibbonBarTheme::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1399)
inline void TGFramework::RibbonBarTheme::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1400)
inline enum TGFramework::RibbonBarControlSize TGFramework::RibbonBarTheme::GetGlobalControlSize ( ) {
    enum RibbonBarControlSize _result;
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1401)
inline void TGFramework::RibbonBarTheme::PutGlobalControlSize ( enum RibbonBarControlSize _arg1 ) {
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1402)
inline enum TGFramework::RibbonBarControlText TGFramework::RibbonBarTheme::GetGlobalControlText ( ) {
    enum RibbonBarControlText _result;
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1403)
inline void TGFramework::RibbonBarTheme::PutGlobalControlText ( enum RibbonBarControlText _arg1 ) {
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1404)
inline VARIANT_BOOL TGFramework::RibbonBarTheme::GetActive ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// interface _IRibbonBarThemesAuto wrapper method implementations
//

#pragma implementation_key(1405)
inline TGFramework::ApplicationPtr TGFramework::_IRibbonBarThemesAuto::GetApplication ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(1406)
inline TGFramework::CustomizationPtr TGFramework::_IRibbonBarThemesAuto::GetParent ( ) {
    struct Customization * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CustomizationPtr(_result, false);
}

#pragma implementation_key(1407)
inline long TGFramework::_IRibbonBarThemesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1408)
inline TGFramework::RibbonBarThemePtr TGFramework::_IRibbonBarThemesAuto::Item ( const _variant_t & Index ) {
    struct RibbonBarTheme * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return RibbonBarThemePtr(_result, false);
}

#pragma implementation_key(1409)
inline IUnknownPtr TGFramework::_IRibbonBarThemesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1410)
inline TGFramework::RibbonBarThemePtr TGFramework::_IRibbonBarThemesAuto::Create ( const _variant_t & BasedOffTheme ) {
    struct RibbonBarTheme * _result = 0;
    HRESULT _hr = raw_Create(BasedOffTheme, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return RibbonBarThemePtr(_result, false);
}

#pragma implementation_key(1411)
inline HRESULT TGFramework::_IRibbonBarThemesAuto::Commit ( ) {
    HRESULT _hr = raw_Commit();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1412)
inline HRESULT TGFramework::_IRibbonBarThemesAuto::Remove ( const _variant_t & Theme ) {
    HRESULT _hr = raw_Remove(Theme);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1413)
inline HRESULT TGFramework::_IRibbonBarThemesAuto::ActivateTheme ( const _variant_t & Theme ) {
    HRESULT _hr = raw_ActivateTheme(Theme);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface RibbonBars wrapper method implementations
//

#pragma implementation_key(1414)
inline TGFramework::ApplicationPtr TGFramework::RibbonBars::GetApplication ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0xcc, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(1415)
inline TGFramework::RibbonBarThemePtr TGFramework::RibbonBars::GetParent ( ) {
    struct RibbonBarTheme * _result = 0;
    _com_dispatch_method(this, 0xcd, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return RibbonBarThemePtr(_result, false);
}

#pragma implementation_key(1416)
inline long TGFramework::RibbonBars::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc9, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1417)
inline TGFramework::RibbonBarPtr TGFramework::RibbonBars::Item ( const _variant_t & Index ) {
    struct RibbonBar * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return RibbonBarPtr(_result, false);
}

//
// dispinterface RibbonBar wrapper method implementations
//

#pragma implementation_key(1418)
inline TGFramework::ApplicationPtr TGFramework::RibbonBar::GetApplication ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(1419)
inline TGFramework::RibbonBarsPtr TGFramework::RibbonBar::GetParent ( ) {
    struct RibbonBars * _result = 0;
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return RibbonBarsPtr(_result, false);
}

#pragma implementation_key(1420)
inline TGFramework::RibbonBarTabsPtr TGFramework::RibbonBar::GetRibbonBarTabs ( ) {
    struct RibbonBarTabs * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return RibbonBarTabsPtr(_result, false);
}

#pragma implementation_key(1421)
inline _bstr_t TGFramework::RibbonBar::GetEnvironment ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

//
// interface _IRibbonBarsAuto wrapper method implementations
//

#pragma implementation_key(1422)
inline TGFramework::ApplicationPtr TGFramework::_IRibbonBarsAuto::GetApplication ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(1423)
inline TGFramework::RibbonBarThemePtr TGFramework::_IRibbonBarsAuto::GetParent ( ) {
    struct RibbonBarTheme * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return RibbonBarThemePtr(_result, false);
}

#pragma implementation_key(1424)
inline long TGFramework::_IRibbonBarsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1425)
inline TGFramework::RibbonBarPtr TGFramework::_IRibbonBarsAuto::Item ( const _variant_t & Index ) {
    struct RibbonBar * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return RibbonBarPtr(_result, false);
}

#pragma implementation_key(1426)
inline IUnknownPtr TGFramework::_IRibbonBarsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

//
// dispinterface RibbonBarTabs wrapper method implementations
//

#pragma implementation_key(1427)
inline TGFramework::ApplicationPtr TGFramework::RibbonBarTabs::GetApplication ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0xcc, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(1428)
inline TGFramework::RibbonBarPtr TGFramework::RibbonBarTabs::GetParent ( ) {
    struct RibbonBar * _result = 0;
    _com_dispatch_method(this, 0xcd, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return RibbonBarPtr(_result, false);
}

#pragma implementation_key(1429)
inline long TGFramework::RibbonBarTabs::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc9, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1430)
inline TGFramework::RibbonBarTabPtr TGFramework::RibbonBarTabs::Item ( const _variant_t & Index ) {
    struct RibbonBarTab * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return RibbonBarTabPtr(_result, false);
}

#pragma implementation_key(1431)
inline TGFramework::RibbonBarTabPtr TGFramework::RibbonBarTabs::Insert ( const _variant_t & Item, const _variant_t & AtItem, enum RibbonBarInsertMode mode ) {
    struct RibbonBarTab * _result = 0;
    _com_dispatch_method(this, 0xca, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c\x000c\x0003", &Item, &AtItem, mode);
    return RibbonBarTabPtr(_result, false);
}

#pragma implementation_key(1432)
inline HRESULT TGFramework::RibbonBarTabs::Remove ( const _variant_t & Item ) {
    return _com_dispatch_method(this, 0xcb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c", &Item);
}

//
// interface _IRibbonBarAuto wrapper method implementations
//

#pragma implementation_key(1433)
inline TGFramework::ApplicationPtr TGFramework::_IRibbonBarAuto::GetApplication ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(1434)
inline TGFramework::RibbonBarsPtr TGFramework::_IRibbonBarAuto::GetParent ( ) {
    struct RibbonBars * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return RibbonBarsPtr(_result, false);
}

#pragma implementation_key(1435)
inline TGFramework::RibbonBarTabsPtr TGFramework::_IRibbonBarAuto::GetRibbonBarTabs ( ) {
    struct RibbonBarTabs * _result = 0;
    HRESULT _hr = get_RibbonBarTabs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return RibbonBarTabsPtr(_result, false);
}

#pragma implementation_key(1436)
inline _bstr_t TGFramework::_IRibbonBarAuto::GetEnvironment ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Environment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// dispinterface RibbonBarTab wrapper method implementations
//

#pragma implementation_key(1437)
inline TGFramework::ApplicationPtr TGFramework::RibbonBarTab::GetApplication ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(1438)
inline TGFramework::RibbonBarTabsPtr TGFramework::RibbonBarTab::GetParent ( ) {
    struct RibbonBarTabs * _result = 0;
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return RibbonBarTabsPtr(_result, false);
}

#pragma implementation_key(1439)
inline TGFramework::RibbonBarGroupsPtr TGFramework::RibbonBarTab::GetRibbonBarGroups ( ) {
    struct RibbonBarGroups * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return RibbonBarGroupsPtr(_result, false);
}

#pragma implementation_key(1440)
inline _bstr_t TGFramework::RibbonBarTab::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1441)
inline void TGFramework::RibbonBarTab::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1442)
inline long TGFramework::RibbonBarTab::GetId ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1443)
inline VARIANT_BOOL TGFramework::RibbonBarTab::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1444)
inline void TGFramework::RibbonBarTab::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1445)
inline HRESULT TGFramework::RibbonBarTab::Activate ( ) {
    return _com_dispatch_method(this, 0x12c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// dispinterface RibbonBarGroups wrapper method implementations
//

#pragma implementation_key(1446)
inline TGFramework::ApplicationPtr TGFramework::RibbonBarGroups::GetApplication ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0xcc, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(1447)
inline TGFramework::RibbonBarTabPtr TGFramework::RibbonBarGroups::GetParent ( ) {
    struct RibbonBarTab * _result = 0;
    _com_dispatch_method(this, 0xcd, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return RibbonBarTabPtr(_result, false);
}

#pragma implementation_key(1448)
inline long TGFramework::RibbonBarGroups::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc9, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1449)
inline TGFramework::RibbonBarGroupPtr TGFramework::RibbonBarGroups::Item ( const _variant_t & Index ) {
    struct RibbonBarGroup * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return RibbonBarGroupPtr(_result, false);
}

#pragma implementation_key(1450)
inline TGFramework::RibbonBarGroupPtr TGFramework::RibbonBarGroups::Insert ( const _variant_t & Item, const _variant_t & AtItem, enum RibbonBarInsertMode mode ) {
    struct RibbonBarGroup * _result = 0;
    _com_dispatch_method(this, 0xca, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c\x000c\x0003", &Item, &AtItem, mode);
    return RibbonBarGroupPtr(_result, false);
}

#pragma implementation_key(1451)
inline HRESULT TGFramework::RibbonBarGroups::Remove ( const _variant_t & Item ) {
    return _com_dispatch_method(this, 0xcb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c", &Item);
}

//
// interface _IRibbonBarTabAuto wrapper method implementations
//

#pragma implementation_key(1452)
inline TGFramework::ApplicationPtr TGFramework::_IRibbonBarTabAuto::GetApplication ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(1453)
inline TGFramework::RibbonBarTabsPtr TGFramework::_IRibbonBarTabAuto::GetParent ( ) {
    struct RibbonBarTabs * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return RibbonBarTabsPtr(_result, false);
}

#pragma implementation_key(1454)
inline TGFramework::RibbonBarGroupsPtr TGFramework::_IRibbonBarTabAuto::GetRibbonBarGroups ( ) {
    struct RibbonBarGroups * _result = 0;
    HRESULT _hr = get_RibbonBarGroups(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return RibbonBarGroupsPtr(_result, false);
}

#pragma implementation_key(1455)
inline _bstr_t TGFramework::_IRibbonBarTabAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1456)
inline void TGFramework::_IRibbonBarTabAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1457)
inline long TGFramework::_IRibbonBarTabAuto::GetId ( ) {
    long _result = 0;
    HRESULT _hr = get_Id(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1458)
inline VARIANT_BOOL TGFramework::_IRibbonBarTabAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1459)
inline void TGFramework::_IRibbonBarTabAuto::PutVisible ( VARIANT_BOOL Visible ) {
    HRESULT _hr = put_Visible(Visible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1460)
inline HRESULT TGFramework::_IRibbonBarTabAuto::Activate ( ) {
    HRESULT _hr = raw_Activate();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface RibbonBarGroup wrapper method implementations
//

#pragma implementation_key(1461)
inline TGFramework::ApplicationPtr TGFramework::RibbonBarGroup::GetApplication ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(1462)
inline TGFramework::RibbonBarGroupsPtr TGFramework::RibbonBarGroup::GetParent ( ) {
    struct RibbonBarGroups * _result = 0;
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return RibbonBarGroupsPtr(_result, false);
}

#pragma implementation_key(1463)
inline TGFramework::RibbonBarControlsPtr TGFramework::RibbonBarGroup::GetRibbonBarControls ( ) {
    struct RibbonBarControls * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return RibbonBarControlsPtr(_result, false);
}

#pragma implementation_key(1464)
inline _bstr_t TGFramework::RibbonBarGroup::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1465)
inline void TGFramework::RibbonBarGroup::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1466)
inline long TGFramework::RibbonBarGroup::GetId ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1467)
inline VARIANT_BOOL TGFramework::RibbonBarGroup::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1468)
inline void TGFramework::RibbonBarGroup::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

//
// dispinterface RibbonBarControls wrapper method implementations
//

#pragma implementation_key(1469)
inline TGFramework::ApplicationPtr TGFramework::RibbonBarControls::GetApplication ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0xcc, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(1470)
inline TGFramework::RibbonBarGroupPtr TGFramework::RibbonBarControls::GetParentRibbonBarGroup ( ) {
    struct RibbonBarGroup * _result = 0;
    _com_dispatch_method(this, 0x4b1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return RibbonBarGroupPtr(_result, false);
}

#pragma implementation_key(1471)
inline TGFramework::RibbonBarControlPtr TGFramework::RibbonBarControls::GetParentRibbonBarControl ( ) {
    struct RibbonBarControl * _result = 0;
    _com_dispatch_method(this, 0x4b2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return RibbonBarControlPtr(_result, false);
}

#pragma implementation_key(1472)
inline long TGFramework::RibbonBarControls::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc9, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1473)
inline TGFramework::RibbonBarControlPtr TGFramework::RibbonBarControls::Item ( const _variant_t & Index ) {
    struct RibbonBarControl * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return RibbonBarControlPtr(_result, false);
}

#pragma implementation_key(1474)
inline TGFramework::RibbonBarControlPtr TGFramework::RibbonBarControls::Insert ( const _variant_t & Item, const _variant_t & AtItem, enum RibbonBarInsertMode mode ) {
    struct RibbonBarControl * _result = 0;
    _com_dispatch_method(this, 0xca, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c\x000c\x0003", &Item, &AtItem, mode);
    return RibbonBarControlPtr(_result, false);
}

#pragma implementation_key(1475)
inline HRESULT TGFramework::RibbonBarControls::Remove ( const _variant_t & Item ) {
    return _com_dispatch_method(this, 0xcb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c", &Item);
}

//
// interface _IRibbonBarGroupAuto wrapper method implementations
//

#pragma implementation_key(1476)
inline TGFramework::ApplicationPtr TGFramework::_IRibbonBarGroupAuto::GetApplication ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(1477)
inline TGFramework::RibbonBarGroupsPtr TGFramework::_IRibbonBarGroupAuto::GetParent ( ) {
    struct RibbonBarGroups * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return RibbonBarGroupsPtr(_result, false);
}

#pragma implementation_key(1478)
inline TGFramework::RibbonBarControlsPtr TGFramework::_IRibbonBarGroupAuto::GetRibbonBarControls ( ) {
    struct RibbonBarControls * _result = 0;
    HRESULT _hr = get_RibbonBarControls(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return RibbonBarControlsPtr(_result, false);
}

#pragma implementation_key(1479)
inline _bstr_t TGFramework::_IRibbonBarGroupAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1480)
inline void TGFramework::_IRibbonBarGroupAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1481)
inline long TGFramework::_IRibbonBarGroupAuto::GetId ( ) {
    long _result = 0;
    HRESULT _hr = get_Id(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1482)
inline VARIANT_BOOL TGFramework::_IRibbonBarGroupAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1483)
inline void TGFramework::_IRibbonBarGroupAuto::PutVisible ( VARIANT_BOOL Visible ) {
    HRESULT _hr = put_Visible(Visible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// dispinterface RibbonBarControl wrapper method implementations
//

#pragma implementation_key(1484)
inline TGFramework::ApplicationPtr TGFramework::RibbonBarControl::GetApplication ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(1485)
inline TGFramework::RibbonBarControlsPtr TGFramework::RibbonBarControl::GetParent ( ) {
    struct RibbonBarControls * _result = 0;
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return RibbonBarControlsPtr(_result, false);
}

#pragma implementation_key(1486)
inline TGFramework::RibbonBarControlsPtr TGFramework::RibbonBarControl::GetRibbonBarControls ( ) {
    struct RibbonBarControls * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return RibbonBarControlsPtr(_result, false);
}

#pragma implementation_key(1487)
inline _bstr_t TGFramework::RibbonBarControl::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1488)
inline void TGFramework::RibbonBarControl::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1489)
inline VARIANT_BOOL TGFramework::RibbonBarControl::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1490)
inline void TGFramework::RibbonBarControl::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1491)
inline enum TGFramework::RibbonBarControlSize TGFramework::RibbonBarControl::GetSize ( ) {
    enum RibbonBarControlSize _result;
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1492)
inline void TGFramework::RibbonBarControl::PutSize ( enum RibbonBarControlSize _arg1 ) {
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1493)
inline enum TGFramework::RibbonBarControlText TGFramework::RibbonBarControl::GetText ( ) {
    enum RibbonBarControlText _result;
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1494)
inline void TGFramework::RibbonBarControl::PutText ( enum RibbonBarControlText _arg1 ) {
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1495)
inline long TGFramework::RibbonBarControl::GetId ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1496)
inline long TGFramework::RibbonBarControl::GetIconId ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

//
// interface _IRibbonBarThemeAuto wrapper method implementations
//

#pragma implementation_key(1497)
inline TGFramework::ApplicationPtr TGFramework::_IRibbonBarThemeAuto::GetApplication ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(1498)
inline TGFramework::RibbonBarThemesPtr TGFramework::_IRibbonBarThemeAuto::GetParent ( ) {
    struct RibbonBarThemes * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return RibbonBarThemesPtr(_result, false);
}

#pragma implementation_key(1499)
inline TGFramework::RibbonBarsPtr TGFramework::_IRibbonBarThemeAuto::GetRibbonBars ( ) {
    struct RibbonBars * _result = 0;
    HRESULT _hr = get_RibbonBars(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return RibbonBarsPtr(_result, false);
}

#pragma implementation_key(1500)
inline _bstr_t TGFramework::_IRibbonBarThemeAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1501)
inline void TGFramework::_IRibbonBarThemeAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1502)
inline enum TGFramework::RibbonBarControlSize TGFramework::_IRibbonBarThemeAuto::GetGlobalControlSize ( ) {
    enum RibbonBarControlSize _result;
    HRESULT _hr = get_GlobalControlSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1503)
inline void TGFramework::_IRibbonBarThemeAuto::PutGlobalControlSize ( enum RibbonBarControlSize SizeType ) {
    HRESULT _hr = put_GlobalControlSize(SizeType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1504)
inline enum TGFramework::RibbonBarControlText TGFramework::_IRibbonBarThemeAuto::GetGlobalControlText ( ) {
    enum RibbonBarControlText _result;
    HRESULT _hr = get_GlobalControlText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1505)
inline void TGFramework::_IRibbonBarThemeAuto::PutGlobalControlText ( enum RibbonBarControlText TextType ) {
    HRESULT _hr = put_GlobalControlText(TextType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1506)
inline VARIANT_BOOL TGFramework::_IRibbonBarThemeAuto::GetActive ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Active(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface _IRibbonBarControlAuto wrapper method implementations
//

#pragma implementation_key(1507)
inline TGFramework::ApplicationPtr TGFramework::_IRibbonBarControlAuto::GetApplication ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(1508)
inline TGFramework::RibbonBarControlsPtr TGFramework::_IRibbonBarControlAuto::GetParent ( ) {
    struct RibbonBarControls * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return RibbonBarControlsPtr(_result, false);
}

#pragma implementation_key(1509)
inline TGFramework::RibbonBarControlsPtr TGFramework::_IRibbonBarControlAuto::GetRibbonBarControls ( ) {
    struct RibbonBarControls * _result = 0;
    HRESULT _hr = get_RibbonBarControls(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return RibbonBarControlsPtr(_result, false);
}

#pragma implementation_key(1510)
inline _bstr_t TGFramework::_IRibbonBarControlAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1511)
inline void TGFramework::_IRibbonBarControlAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1512)
inline VARIANT_BOOL TGFramework::_IRibbonBarControlAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1513)
inline void TGFramework::_IRibbonBarControlAuto::PutVisible ( VARIANT_BOOL Visible ) {
    HRESULT _hr = put_Visible(Visible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1514)
inline enum TGFramework::RibbonBarControlSize TGFramework::_IRibbonBarControlAuto::GetSize ( ) {
    enum RibbonBarControlSize _result;
    HRESULT _hr = get_Size(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1515)
inline void TGFramework::_IRibbonBarControlAuto::PutSize ( enum RibbonBarControlSize SizeType ) {
    HRESULT _hr = put_Size(SizeType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1516)
inline enum TGFramework::RibbonBarControlText TGFramework::_IRibbonBarControlAuto::GetText ( ) {
    enum RibbonBarControlText _result;
    HRESULT _hr = get_Text(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1517)
inline void TGFramework::_IRibbonBarControlAuto::PutText ( enum RibbonBarControlText TextType ) {
    HRESULT _hr = put_Text(TextType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1518)
inline long TGFramework::_IRibbonBarControlAuto::GetId ( ) {
    long _result = 0;
    HRESULT _hr = get_Id(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1519)
inline long TGFramework::_IRibbonBarControlAuto::GetIconId ( ) {
    long _result = 0;
    HRESULT _hr = get_IconId(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface _IRibbonBarTabsAuto wrapper method implementations
//

#pragma implementation_key(1520)
inline TGFramework::ApplicationPtr TGFramework::_IRibbonBarTabsAuto::GetApplication ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(1521)
inline TGFramework::RibbonBarPtr TGFramework::_IRibbonBarTabsAuto::GetParent ( ) {
    struct RibbonBar * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return RibbonBarPtr(_result, false);
}

#pragma implementation_key(1522)
inline long TGFramework::_IRibbonBarTabsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1523)
inline TGFramework::RibbonBarTabPtr TGFramework::_IRibbonBarTabsAuto::Item ( const _variant_t & Index ) {
    struct RibbonBarTab * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return RibbonBarTabPtr(_result, false);
}

#pragma implementation_key(1524)
inline IUnknownPtr TGFramework::_IRibbonBarTabsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1525)
inline TGFramework::RibbonBarTabPtr TGFramework::_IRibbonBarTabsAuto::Insert ( const _variant_t & Item, const _variant_t & AtItem, enum RibbonBarInsertMode mode ) {
    struct RibbonBarTab * _result = 0;
    HRESULT _hr = raw_Insert(Item, AtItem, mode, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return RibbonBarTabPtr(_result, false);
}

#pragma implementation_key(1526)
inline HRESULT TGFramework::_IRibbonBarTabsAuto::Remove ( const _variant_t & Item ) {
    HRESULT _hr = raw_Remove(Item);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _IRibbonBarGroupsAuto wrapper method implementations
//

#pragma implementation_key(1527)
inline TGFramework::ApplicationPtr TGFramework::_IRibbonBarGroupsAuto::GetApplication ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(1528)
inline TGFramework::RibbonBarTabPtr TGFramework::_IRibbonBarGroupsAuto::GetParent ( ) {
    struct RibbonBarTab * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return RibbonBarTabPtr(_result, false);
}

#pragma implementation_key(1529)
inline long TGFramework::_IRibbonBarGroupsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1530)
inline TGFramework::RibbonBarGroupPtr TGFramework::_IRibbonBarGroupsAuto::Item ( const _variant_t & Index ) {
    struct RibbonBarGroup * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return RibbonBarGroupPtr(_result, false);
}

#pragma implementation_key(1531)
inline IUnknownPtr TGFramework::_IRibbonBarGroupsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1532)
inline TGFramework::RibbonBarGroupPtr TGFramework::_IRibbonBarGroupsAuto::Insert ( const _variant_t & Item, const _variant_t & AtItem, enum RibbonBarInsertMode mode ) {
    struct RibbonBarGroup * _result = 0;
    HRESULT _hr = raw_Insert(Item, AtItem, mode, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return RibbonBarGroupPtr(_result, false);
}

#pragma implementation_key(1533)
inline HRESULT TGFramework::_IRibbonBarGroupsAuto::Remove ( const _variant_t & Item ) {
    HRESULT _hr = raw_Remove(Item);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _IRibbonBarControlsAuto wrapper method implementations
//

#pragma implementation_key(1534)
inline TGFramework::ApplicationPtr TGFramework::_IRibbonBarControlsAuto::GetApplication ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(1535)
inline TGFramework::RibbonBarGroupPtr TGFramework::_IRibbonBarControlsAuto::GetParentRibbonBarGroup ( ) {
    struct RibbonBarGroup * _result = 0;
    HRESULT _hr = get_ParentRibbonBarGroup(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return RibbonBarGroupPtr(_result, false);
}

#pragma implementation_key(1536)
inline TGFramework::RibbonBarControlPtr TGFramework::_IRibbonBarControlsAuto::GetParentRibbonBarControl ( ) {
    struct RibbonBarControl * _result = 0;
    HRESULT _hr = get_ParentRibbonBarControl(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return RibbonBarControlPtr(_result, false);
}

#pragma implementation_key(1537)
inline long TGFramework::_IRibbonBarControlsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1538)
inline TGFramework::RibbonBarControlPtr TGFramework::_IRibbonBarControlsAuto::Item ( const _variant_t & Index ) {
    struct RibbonBarControl * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return RibbonBarControlPtr(_result, false);
}

#pragma implementation_key(1539)
inline IUnknownPtr TGFramework::_IRibbonBarControlsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1540)
inline TGFramework::RibbonBarControlPtr TGFramework::_IRibbonBarControlsAuto::Insert ( const _variant_t & Item, const _variant_t & AtItem, enum RibbonBarInsertMode mode ) {
    struct RibbonBarControl * _result = 0;
    HRESULT _hr = raw_Insert(Item, AtItem, mode, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return RibbonBarControlPtr(_result, false);
}

#pragma implementation_key(1541)
inline HRESULT TGFramework::_IRibbonBarControlsAuto::Remove ( const _variant_t & Item ) {
    HRESULT _hr = raw_Remove(Item);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface RadialMenu wrapper method implementations
//

#pragma implementation_key(1542)
inline TGFramework::ApplicationPtr TGFramework::RadialMenu::GetApplication ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0xcc, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(1543)
inline TGFramework::CustomizationPtr TGFramework::RadialMenu::GetParent ( ) {
    struct Customization * _result = 0;
    _com_dispatch_method(this, 0xcd, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return CustomizationPtr(_result, false);
}

#pragma implementation_key(1544)
inline long TGFramework::RadialMenu::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc9, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1545)
inline TGFramework::RibbonBarThemePtr TGFramework::RadialMenu::Item ( const _variant_t & Index ) {
    struct RibbonBarTheme * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return RibbonBarThemePtr(_result, false);
}

#pragma implementation_key(1546)
inline TGFramework::RibbonBarThemePtr TGFramework::RadialMenu::Create ( const _variant_t & BasedOffTheme ) {
    struct RibbonBarTheme * _result = 0;
    _com_dispatch_method(this, 0x193, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &BasedOffTheme);
    return RibbonBarThemePtr(_result, false);
}

#pragma implementation_key(1547)
inline HRESULT TGFramework::RadialMenu::Commit ( ) {
    return _com_dispatch_method(this, 0x194, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1548)
inline HRESULT TGFramework::RadialMenu::Remove ( const _variant_t & Theme ) {
    return _com_dispatch_method(this, 0x195, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c", &Theme);
}

#pragma implementation_key(1549)
inline HRESULT TGFramework::RadialMenu::LoadPallets ( BSTR * strConfigFilename ) {
    return _com_dispatch_method(this, 0x196, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008", strConfigFilename);
}

#pragma implementation_key(1550)
inline HRESULT TGFramework::RadialMenu::SavePallets ( BSTR * strConfigFilename ) {
    return _com_dispatch_method(this, 0x197, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008", strConfigFilename);
}

#pragma implementation_key(1551)
inline HRESULT TGFramework::RadialMenu::DumpPallets ( BSTR * strLogfileName ) {
    return _com_dispatch_method(this, 0x198, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008", strLogfileName);
}

#pragma implementation_key(1552)
inline HRESULT TGFramework::RadialMenu::DumpPallet ( BSTR * strEnvironmentName, BSTR * strLogfileName ) {
    return _com_dispatch_method(this, 0x199, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008\x4008", strEnvironmentName, strLogfileName);
}

#pragma implementation_key(1553)
inline HRESULT TGFramework::RadialMenu::SetCommand ( BSTR * strEnvironmentName, int ring, int wedge, int cmdID, int imageID ) {
    return _com_dispatch_method(this, 0x19a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008\x0003\x0003\x0003\x0003", strEnvironmentName, ring, wedge, cmdID, imageID);
}

#pragma implementation_key(1554)
inline HRESULT TGFramework::RadialMenu::RemoveCommand ( BSTR * strEnvironmentName, int ring, int wedge ) {
    return _com_dispatch_method(this, 0x19b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008\x0003\x0003", strEnvironmentName, ring, wedge);
}

#pragma implementation_key(1555)
inline HRESULT TGFramework::RadialMenu::SwapCommands ( BSTR * strEnvironmentName, int ring1, int wedge1, int ring2, int wedge2 ) {
    return _com_dispatch_method(this, 0x19c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008\x0003\x0003\x0003\x0003", strEnvironmentName, ring1, wedge1, ring2, wedge2);
}

//
// interface _IRadialMenuAuto wrapper method implementations
//

#pragma implementation_key(1556)
inline TGFramework::ApplicationPtr TGFramework::_IRadialMenuAuto::GetApplication ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(1557)
inline TGFramework::CustomizationPtr TGFramework::_IRadialMenuAuto::GetParent ( ) {
    struct Customization * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CustomizationPtr(_result, false);
}

#pragma implementation_key(1558)
inline long TGFramework::_IRadialMenuAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1559)
inline TGFramework::RibbonBarThemePtr TGFramework::_IRadialMenuAuto::Item ( const _variant_t & Index ) {
    struct RibbonBarTheme * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return RibbonBarThemePtr(_result, false);
}

#pragma implementation_key(1560)
inline IUnknownPtr TGFramework::_IRadialMenuAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1561)
inline TGFramework::RibbonBarThemePtr TGFramework::_IRadialMenuAuto::Create ( const _variant_t & BasedOffTheme ) {
    struct RibbonBarTheme * _result = 0;
    HRESULT _hr = raw_Create(BasedOffTheme, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return RibbonBarThemePtr(_result, false);
}

#pragma implementation_key(1562)
inline HRESULT TGFramework::_IRadialMenuAuto::Commit ( ) {
    HRESULT _hr = raw_Commit();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1563)
inline HRESULT TGFramework::_IRadialMenuAuto::Remove ( const _variant_t & Theme ) {
    HRESULT _hr = raw_Remove(Theme);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1564)
inline HRESULT TGFramework::_IRadialMenuAuto::LoadPallets ( BSTR * strConfigFilename ) {
    HRESULT _hr = raw_LoadPallets(strConfigFilename);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1565)
inline HRESULT TGFramework::_IRadialMenuAuto::SavePallets ( BSTR * strConfigFilename ) {
    HRESULT _hr = raw_SavePallets(strConfigFilename);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1566)
inline HRESULT TGFramework::_IRadialMenuAuto::DumpPallets ( BSTR * strLogfileName ) {
    HRESULT _hr = raw_DumpPallets(strLogfileName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1567)
inline HRESULT TGFramework::_IRadialMenuAuto::DumpPallet ( BSTR * strEnvironmentName, BSTR * strLogfileName ) {
    HRESULT _hr = raw_DumpPallet(strEnvironmentName, strLogfileName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1568)
inline HRESULT TGFramework::_IRadialMenuAuto::SetCommand ( BSTR * strEnvironmentName, int ring, int wedge, int cmdID, int imageID ) {
    HRESULT _hr = raw_SetCommand(strEnvironmentName, ring, wedge, cmdID, imageID);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1569)
inline HRESULT TGFramework::_IRadialMenuAuto::RemoveCommand ( BSTR * strEnvironmentName, int ring, int wedge ) {
    HRESULT _hr = raw_RemoveCommand(strEnvironmentName, ring, wedge);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1570)
inline HRESULT TGFramework::_IRadialMenuAuto::SwapCommands ( BSTR * strEnvironmentName, int ring1, int wedge1, int ring2, int wedge2 ) {
    HRESULT _hr = raw_SwapCommands(strEnvironmentName, ring1, wedge1, ring2, wedge2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface SwitchWindowCust wrapper method implementations
//

#pragma implementation_key(1571)
inline TGFramework::ApplicationPtr TGFramework::SwitchWindowCust::GetApplication ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0xcc, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(1572)
inline TGFramework::CustomizationPtr TGFramework::SwitchWindowCust::GetParent ( ) {
    struct Customization * _result = 0;
    _com_dispatch_method(this, 0xcd, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return CustomizationPtr(_result, false);
}

#pragma implementation_key(1573)
inline long TGFramework::SwitchWindowCust::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc9, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1574)
inline TGFramework::RibbonBarThemePtr TGFramework::SwitchWindowCust::Item ( const _variant_t & Index ) {
    struct RibbonBarTheme * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return RibbonBarThemePtr(_result, false);
}

#pragma implementation_key(1575)
inline TGFramework::RibbonBarThemePtr TGFramework::SwitchWindowCust::Create ( const _variant_t & BasedOffTheme ) {
    struct RibbonBarTheme * _result = 0;
    _com_dispatch_method(this, 0x19d, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &BasedOffTheme);
    return RibbonBarThemePtr(_result, false);
}

#pragma implementation_key(1576)
inline HRESULT TGFramework::SwitchWindowCust::Commit ( ) {
    return _com_dispatch_method(this, 0x19e, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1577)
inline HRESULT TGFramework::SwitchWindowCust::Remove ( const _variant_t & Theme ) {
    return _com_dispatch_method(this, 0x19f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c", &Theme);
}

#pragma implementation_key(1578)
inline HRESULT TGFramework::SwitchWindowCust::EnumGraphicViews ( int * pNumGraphicViews ) {
    return _com_dispatch_method(this, 0x1a0, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003", pNumGraphicViews);
}

#pragma implementation_key(1579)
inline HRESULT TGFramework::SwitchWindowCust::NextGraphicView ( BSTR * strTitle, BSTR * strFullName, int * fileType, unsigned long * hWnd, unsigned long * bActive, unsigned long * bDirty ) {
    return _com_dispatch_method(this, 0x1a1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008\x4008\x4003\x4003\x4003\x4003", strTitle, strFullName, fileType, hWnd, bActive, bDirty);
}

#pragma implementation_key(1580)
inline HRESULT TGFramework::SwitchWindowCust::ActivateGraphicView ( unsigned long hWnd ) {
    return _com_dispatch_method(this, 0x1a2, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", hWnd);
}

//
// interface _ICustomizationAuto wrapper method implementations
//

#pragma implementation_key(1581)
inline TGFramework::ApplicationPtr TGFramework::_ICustomizationAuto::GetApplication ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(1582)
inline TGFramework::ApplicationPtr TGFramework::_ICustomizationAuto::GetParent ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(1583)
inline TGFramework::RibbonBarThemesPtr TGFramework::_ICustomizationAuto::GetRibbonBarThemes ( ) {
    struct RibbonBarThemes * _result = 0;
    HRESULT _hr = get_RibbonBarThemes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return RibbonBarThemesPtr(_result, false);
}

#pragma implementation_key(1584)
inline TGFramework::RadialMenuPtr TGFramework::_ICustomizationAuto::GetRadialMenu ( ) {
    struct RadialMenu * _result = 0;
    HRESULT _hr = get_RadialMenu(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return RadialMenuPtr(_result, false);
}

#pragma implementation_key(1585)
inline TGFramework::SwitchWindowCustPtr TGFramework::_ICustomizationAuto::GetSwitchWindowCust ( ) {
    struct SwitchWindowCust * _result = 0;
    HRESULT _hr = get_SwitchWindowCust(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SwitchWindowCustPtr(_result, false);
}

#pragma implementation_key(1586)
inline HRESULT TGFramework::_ICustomizationAuto::BeginCustomization ( ) {
    HRESULT _hr = raw_BeginCustomization();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1587)
inline HRESULT TGFramework::_ICustomizationAuto::EndCustomization ( ) {
    HRESULT _hr = raw_EndCustomization();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _ISwitchWindowCustAuto wrapper method implementations
//

#pragma implementation_key(1588)
inline TGFramework::ApplicationPtr TGFramework::_ISwitchWindowCustAuto::GetApplication ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(1589)
inline TGFramework::CustomizationPtr TGFramework::_ISwitchWindowCustAuto::GetParent ( ) {
    struct Customization * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CustomizationPtr(_result, false);
}

#pragma implementation_key(1590)
inline long TGFramework::_ISwitchWindowCustAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1591)
inline TGFramework::RibbonBarThemePtr TGFramework::_ISwitchWindowCustAuto::Item ( const _variant_t & Index ) {
    struct RibbonBarTheme * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return RibbonBarThemePtr(_result, false);
}

#pragma implementation_key(1592)
inline IUnknownPtr TGFramework::_ISwitchWindowCustAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1593)
inline TGFramework::RibbonBarThemePtr TGFramework::_ISwitchWindowCustAuto::Create ( const _variant_t & BasedOffTheme ) {
    struct RibbonBarTheme * _result = 0;
    HRESULT _hr = raw_Create(BasedOffTheme, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return RibbonBarThemePtr(_result, false);
}

#pragma implementation_key(1594)
inline HRESULT TGFramework::_ISwitchWindowCustAuto::Commit ( ) {
    HRESULT _hr = raw_Commit();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1595)
inline HRESULT TGFramework::_ISwitchWindowCustAuto::Remove ( const _variant_t & Theme ) {
    HRESULT _hr = raw_Remove(Theme);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1596)
inline HRESULT TGFramework::_ISwitchWindowCustAuto::EnumGraphicViews ( int * pNumGraphicViews ) {
    HRESULT _hr = raw_EnumGraphicViews(pNumGraphicViews);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1597)
inline HRESULT TGFramework::_ISwitchWindowCustAuto::NextGraphicView ( BSTR * strTitle, BSTR * strFullName, int * fileType, unsigned long * hWnd, unsigned long * bActive, unsigned long * bDirty ) {
    HRESULT _hr = raw_NextGraphicView(strTitle, strFullName, fileType, hWnd, bActive, bDirty);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1598)
inline HRESULT TGFramework::_ISwitchWindowCustAuto::ActivateGraphicView ( unsigned long hWnd ) {
    HRESULT _hr = raw_ActivateGraphicView(hWnd);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface DynamicVisualization wrapper method implementations
//

#pragma implementation_key(1599)
inline HRESULT TGFramework::DynamicVisualization::EnableDelayedIndexing ( VARIANT_BOOL bEnableDelayedIndexing ) {
    return _com_dispatch_method(this, 0x60010000, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", bEnableDelayedIndexing);
}

//
// interface _IDynamicVisualizationAuto wrapper method implementations
//

#pragma implementation_key(1600)
inline HRESULT TGFramework::_IDynamicVisualizationAuto::EnableDelayedIndexing ( VARIANT_BOOL bEnableDelayedIndexing ) {
    HRESULT _hr = raw_EnableDelayedIndexing(bEnableDelayedIndexing);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISEOpenNonSolidEdgeFileUIEvents wrapper method implementations
//

#pragma implementation_key(1601)
inline HRESULT TGFramework::ISEOpenNonSolidEdgeFileUIEvents::OnOpenNonSolidEdgeFileUI ( enum OpenNonSolidEdgeFileContext FileContext, _bstr_t FileFilter, BSTR * Filename ) {
    HRESULT _hr = raw_OnOpenNonSolidEdgeFileUI(FileContext, FileFilter, Filename);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _IApplicationAuto wrapper method implementations
//

#pragma implementation_key(1602)
inline HRESULT TGFramework::_IApplicationAuto::Activate ( ) {
    HRESULT _hr = raw_Activate();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1603)
inline IDispatchPtr TGFramework::_IApplicationAuto::GetActiveDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_ActiveDocument(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1604)
inline _bstr_t TGFramework::_IApplicationAuto::GetActiveEnvironment ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ActiveEnvironment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1605)
inline _bstr_t TGFramework::_IApplicationAuto::GetActivePrinter ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ActivePrinter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1606)
inline TGFramework::SelectSetPtr TGFramework::_IApplicationAuto::GetActiveSelectSet ( ) {
    struct SelectSet * _result = 0;
    HRESULT _hr = get_ActiveSelectSet(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SelectSetPtr(_result, false);
}

#pragma implementation_key(1607)
inline int TGFramework::_IApplicationAuto::GetActiveStatusBarPart ( ) {
    int _result = 0;
    HRESULT _hr = get_ActiveStatusBarPart(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1608)
inline void TGFramework::_IApplicationAuto::PutActiveStatusBarPart ( int ActiveStatusBarPart ) {
    HRESULT _hr = put_ActiveStatusBarPart(ActiveStatusBarPart);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1609)
inline IDispatchPtr TGFramework::_IApplicationAuto::GetActiveWindow ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_ActiveWindow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1610)
inline TGFramework::ApplicationPtr TGFramework::_IApplicationAuto::GetApplication ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(1611)
inline _bstr_t TGFramework::_IApplicationAuto::GetCaption ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Caption(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1612)
inline void TGFramework::_IApplicationAuto::PutCaption ( _bstr_t Caption ) {
    HRESULT _hr = put_Caption(Caption);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1613)
inline _bstr_t TGFramework::_IApplicationAuto::GetDefaultFilePath ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DefaultFilePath(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1614)
inline void TGFramework::_IApplicationAuto::PutDefaultFilePath ( _bstr_t Path ) {
    HRESULT _hr = put_DefaultFilePath(Path);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1615)
inline void TGFramework::_IApplicationAuto::PutDelayCompute ( VARIANT_BOOL DelayCompute ) {
    HRESULT _hr = put_DelayCompute(DelayCompute);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1616)
inline VARIANT_BOOL TGFramework::_IApplicationAuto::GetDelayCompute ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DelayCompute(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1617)
inline VARIANT_BOOL TGFramework::_IApplicationAuto::GetDisplayAlerts ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayAlerts(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1618)
inline void TGFramework::_IApplicationAuto::PutDisplayAlerts ( VARIANT_BOOL DisplayAlerts ) {
    HRESULT _hr = put_DisplayAlerts(DisplayAlerts);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1619)
inline VARIANT_BOOL TGFramework::_IApplicationAuto::GetDisplayFullScreen ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayFullScreen(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1620)
inline void TGFramework::_IApplicationAuto::PutDisplayFullScreen ( VARIANT_BOOL DisplayFullScreen ) {
    HRESULT _hr = put_DisplayFullScreen(DisplayFullScreen);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1621)
inline VARIANT_BOOL TGFramework::_IApplicationAuto::GetDisplayRecentFiles ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayRecentFiles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1622)
inline void TGFramework::_IApplicationAuto::PutDisplayRecentFiles ( VARIANT_BOOL DisplayRecentFiles ) {
    HRESULT _hr = put_DisplayRecentFiles(DisplayRecentFiles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1623)
inline long TGFramework::_IApplicationAuto::GetDisplayRecentFilesCount ( ) {
    long _result = 0;
    HRESULT _hr = get_DisplayRecentFilesCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1624)
inline void TGFramework::_IApplicationAuto::PutDisplayRecentFilesCount ( long DisplayRecentFilesCount ) {
    HRESULT _hr = put_DisplayRecentFilesCount(DisplayRecentFilesCount);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1625)
inline TGFramework::DocumentsPtr TGFramework::_IApplicationAuto::GetDocuments ( ) {
    struct Documents * _result = 0;
    HRESULT _hr = get_Documents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DocumentsPtr(_result, false);
}

#pragma implementation_key(1626)
inline TGFramework::EnvironmentsPtr TGFramework::_IApplicationAuto::GetEnvironments ( ) {
    struct Environments * _result = 0;
    HRESULT _hr = get_Environments(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return EnvironmentsPtr(_result, false);
}

#pragma implementation_key(1627)
inline _variant_t TGFramework::_IApplicationAuto::SEGetOpenFileName ( enum LinksUpdateOption * LinksUpdate, BSTR * AltLinkPath, enum DocumentAccess * DocAccess, enum NotifyOption * OptNotify, IDispatch * * DocRelationAutoServer, const _variant_t & FileFilter, const _variant_t & FilterIndex, const _variant_t & Title, const _variant_t & IgnoreWarnings ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = raw_SEGetOpenFileName(LinksUpdate, AltLinkPath, DocAccess, OptNotify, DocRelationAutoServer, FileFilter, FilterIndex, Title, IgnoreWarnings, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(1628)
inline _variant_t TGFramework::_IApplicationAuto::GetSaveAsFileName ( int * LinkSaveOption, long * SelectedFilter, const _variant_t & InitialFilename, const _variant_t & FileFilter, const _variant_t & FilterIndex, const _variant_t & Title, const _variant_t & IsTemplate ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = raw_GetSaveAsFileName(LinkSaveOption, SelectedFilter, InitialFilename, FileFilter, FilterIndex, Title, IsTemplate, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(1629)
inline _variant_t TGFramework::_IApplicationAuto::FindFile ( ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = raw_FindFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(1630)
inline _variant_t TGFramework::_IApplicationAuto::GetDirectoryName ( ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = raw_GetDirectoryName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(1631)
inline int TGFramework::_IApplicationAuto::GetHeight ( ) {
    int _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1632)
inline void TGFramework::_IApplicationAuto::PutHeight ( int Height ) {
    HRESULT _hr = put_Height(Height);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1633)
inline long TGFramework::_IApplicationAuto::GethWnd ( ) {
    long _result = 0;
    HRESULT _hr = get_hWnd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1634)
inline VARIANT_BOOL TGFramework::_IApplicationAuto::GetInteractive ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Interactive(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1635)
inline void TGFramework::_IApplicationAuto::PutInteractive ( VARIANT_BOOL Interactive ) {
    HRESULT _hr = put_Interactive(Interactive);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1636)
inline int TGFramework::_IApplicationAuto::GetLeft ( ) {
    int _result = 0;
    HRESULT _hr = get_Left(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1637)
inline void TGFramework::_IApplicationAuto::PutLeft ( int Left ) {
    HRESULT _hr = put_Left(Left);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1638)
inline HRESULT TGFramework::_IApplicationAuto::MailLogoff ( ) {
    HRESULT _hr = raw_MailLogoff();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1639)
inline HRESULT TGFramework::_IApplicationAuto::MailLogon ( const _variant_t & Name, const _variant_t & Password, const _variant_t & DownloadNewMail ) {
    HRESULT _hr = raw_MailLogon(Name, Password, DownloadNewMail);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1640)
inline long TGFramework::_IApplicationAuto::GetMailSession ( ) {
    long _result = 0;
    HRESULT _hr = get_MailSession(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1641)
inline _bstr_t TGFramework::_IApplicationAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1642)
inline TGFramework::ApplicationPtr TGFramework::_IApplicationAuto::GetParent ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(1643)
inline HRESULT TGFramework::_IApplicationAuto::Quit ( ) {
    HRESULT _hr = raw_Quit();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1644)
inline VARIANT_BOOL TGFramework::_IApplicationAuto::GetScreenUpdating ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ScreenUpdating(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1645)
inline void TGFramework::_IApplicationAuto::PutScreenUpdating ( VARIANT_BOOL ScreenUpdating ) {
    HRESULT _hr = put_ScreenUpdating(ScreenUpdating);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1646)
inline _bstr_t TGFramework::_IApplicationAuto::GetStatusBar ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StatusBar(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1647)
inline void TGFramework::_IApplicationAuto::PutStatusBar ( _bstr_t StatusBar ) {
    HRESULT _hr = put_StatusBar(StatusBar);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1648)
inline VARIANT_BOOL TGFramework::_IApplicationAuto::GetStatusBarDelayUpdate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_StatusBarDelayUpdate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1649)
inline void TGFramework::_IApplicationAuto::PutStatusBarDelayUpdate ( VARIANT_BOOL StatusBarDelayUpdate ) {
    HRESULT _hr = put_StatusBarDelayUpdate(StatusBarDelayUpdate);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1650)
inline int TGFramework::_IApplicationAuto::GetStatusBarHeight ( ) {
    int _result = 0;
    HRESULT _hr = get_StatusBarHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1651)
inline int TGFramework::_IApplicationAuto::GetStatusBarPartCount ( ) {
    int _result = 0;
    HRESULT _hr = get_StatusBarPartCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1652)
inline void TGFramework::_IApplicationAuto::PutStatusBarPartCount ( int StatusBarPartCount ) {
    HRESULT _hr = put_StatusBarPartCount(StatusBarPartCount);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1653)
inline int TGFramework::_IApplicationAuto::GetStatusBarPartWidth ( ) {
    int _result = 0;
    HRESULT _hr = get_StatusBarPartWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1654)
inline void TGFramework::_IApplicationAuto::PutStatusBarPartWidth ( int StatusBarPartWidth ) {
    HRESULT _hr = put_StatusBarPartWidth(StatusBarPartWidth);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1655)
inline VARIANT_BOOL TGFramework::_IApplicationAuto::GetStatusBarVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_StatusBarVisible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1656)
inline void TGFramework::_IApplicationAuto::PutStatusBarVisible ( VARIANT_BOOL StatusBarVisible ) {
    HRESULT _hr = put_StatusBarVisible(StatusBarVisible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1657)
inline int TGFramework::_IApplicationAuto::GetTop ( ) {
    int _result = 0;
    HRESULT _hr = get_Top(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1658)
inline void TGFramework::_IApplicationAuto::PutTop ( int Top ) {
    HRESULT _hr = put_Top(Top);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1659)
inline int TGFramework::_IApplicationAuto::GetUsableHeight ( ) {
    int _result = 0;
    HRESULT _hr = get_UsableHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1660)
inline int TGFramework::_IApplicationAuto::GetUsableWidth ( ) {
    int _result = 0;
    HRESULT _hr = get_UsableWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1661)
inline _bstr_t TGFramework::_IApplicationAuto::GetUserName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_UserName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1662)
inline void TGFramework::_IApplicationAuto::PutUserName ( _bstr_t UserName ) {
    HRESULT _hr = put_UserName(UserName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1663)
inline _bstr_t TGFramework::_IApplicationAuto::GetValue ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Value(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1664)
inline _bstr_t TGFramework::_IApplicationAuto::GetVersion ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Version(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1665)
inline VARIANT_BOOL TGFramework::_IApplicationAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1666)
inline void TGFramework::_IApplicationAuto::PutVisible ( VARIANT_BOOL Visible ) {
    HRESULT _hr = put_Visible(Visible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1667)
inline int TGFramework::_IApplicationAuto::GetWidth ( ) {
    int _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1668)
inline void TGFramework::_IApplicationAuto::PutWidth ( int Width ) {
    HRESULT _hr = put_Width(Width);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1669)
inline TGFramework::WindowsPtr TGFramework::_IApplicationAuto::GetWindows ( ) {
    struct Windows * _result = 0;
    HRESULT _hr = get_Windows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return WindowsPtr(_result, false);
}

#pragma implementation_key(1670)
inline int TGFramework::_IApplicationAuto::GetWindowState ( ) {
    int _result = 0;
    HRESULT _hr = get_WindowState(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1671)
inline void TGFramework::_IApplicationAuto::PutWindowState ( int WindowState ) {
    HRESULT _hr = put_WindowState(WindowState);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1672)
inline IUnknownPtr TGFramework::_IApplicationAuto::GetApplicationEvents ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_ApplicationEvents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1673)
inline IUnknownPtr TGFramework::_IApplicationAuto::GetApplicationWindowEvents ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_ApplicationWindowEvents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1674)
inline enum TGFramework::DocumentTypeConstants TGFramework::_IApplicationAuto::GetActiveDocumentType ( ) {
    enum DocumentTypeConstants _result;
    HRESULT _hr = get_ActiveDocumentType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1675)
inline IUnknownPtr TGFramework::_IApplicationAuto::GetFileUIEvents ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_FileUIEvents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1676)
inline IUnknownPtr TGFramework::_IApplicationAuto::GetBeforeFileSaveAsEvents ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_BeforeFileSaveAsEvents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1677)
inline HRESULT TGFramework::_IApplicationAuto::StartCommand ( enum SolidEdgeCommandConstants CommandID ) {
    HRESULT _hr = raw_StartCommand(CommandID);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1678)
inline VARIANT_BOOL TGFramework::_IApplicationAuto::CommandEnabled ( int CommandID, _bstr_t strEnvironment, VARIANT_BOOL * bLicensed, VARIANT_BOOL * bUnknownCmd ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_CommandEnabled(CommandID, strEnvironment, bLicensed, bUnknownCmd, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1679)
inline TGFramework::DISECommandPtr TGFramework::_IApplicationAuto::CreateCommand ( long CmdFlags ) {
    struct DISECommand * _result = 0;
    HRESULT _hr = raw_CreateCommand(CmdFlags, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DISECommandPtr(_result, false);
}

#pragma implementation_key(1680)
inline HRESULT TGFramework::_IApplicationAuto::ReplaceReference ( const _variant_t & FromReference, const _variant_t & ToReference, const _variant_t & Scope, const _variant_t & Recursive ) {
    HRESULT _hr = raw_ReplaceReference(FromReference, ToReference, Scope, Recursive);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1681)
inline HRESULT TGFramework::_IApplicationAuto::RunMacro ( _bstr_t Filename ) {
    HRESULT _hr = raw_RunMacro(Filename);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1682)
inline TGFramework::AddInsPtr TGFramework::_IApplicationAuto::GetAddIns ( ) {
    struct AddIns * _result = 0;
    HRESULT _hr = get_AddIns(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AddInsPtr(_result, false);
}

#pragma implementation_key(1683)
inline VARIANT_BOOL TGFramework::_IApplicationAuto::GetEnableStereo ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_EnableStereo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1684)
inline void TGFramework::_IApplicationAuto::PutEnableStereo ( VARIANT_BOOL EnableStereo ) {
    HRESULT _hr = put_EnableStereo(EnableStereo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1685)
inline VARIANT_BOOL TGFramework::_IApplicationAuto::GetEdgeBarVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_EdgeBarVisible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1686)
inline void TGFramework::_IApplicationAuto::PutEdgeBarVisible ( VARIANT_BOOL EdgeBarVisible ) {
    HRESULT _hr = put_EdgeBarVisible(EdgeBarVisible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1687)
inline IUnknownPtr TGFramework::_IApplicationAuto::GetFeatureLibraryEvents ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_FeatureLibraryEvents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1688)
inline HRESULT TGFramework::_IApplicationAuto::GetGlobalParameter ( enum ApplicationGlobalConstants Parameter, VARIANT * Value ) {
    HRESULT _hr = raw_GetGlobalParameter(Parameter, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1689)
inline HRESULT TGFramework::_IApplicationAuto::SetGlobalParameter ( enum ApplicationGlobalConstants Parameter, const _variant_t & Value ) {
    HRESULT _hr = raw_SetGlobalParameter(Parameter, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1690)
inline IDispatchPtr TGFramework::_IApplicationAuto::GetActiveObject ( enum SeObjectType Type ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_ActiveObject(Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1691)
inline TGFramework::InsightPtr TGFramework::_IApplicationAuto::GetInsight ( ) {
    struct Insight * _result = 0;
    HRESULT _hr = get_Insight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return InsightPtr(_result, false);
}

#pragma implementation_key(1692)
inline IUnknownPtr TGFramework::_IApplicationAuto::GetApplicationV8AfterDocumentOpenEvent ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_ApplicationV8AfterDocumentOpenEvent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1693)
inline HRESULT TGFramework::_IApplicationAuto::SetOLERequestPendingTimeout ( const _variant_t & SetOLERequestPendingTimeout ) {
    HRESULT _hr = raw_SetOLERequestPendingTimeout(SetOLERequestPendingTimeout);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1694)
inline HRESULT TGFramework::_IApplicationAuto::SetOLEServerBusyTimeout ( const _variant_t & SetOLEServerBusyTimeout ) {
    HRESULT _hr = raw_SetOLEServerBusyTimeout(SetOLEServerBusyTimeout);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1695)
inline IUnknownPtr TGFramework::_IApplicationAuto::GetFeatureSelectedFromPFEvents ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_FeatureSelectedFromPFEvents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1696)
inline HRESULT TGFramework::_IApplicationAuto::CreateSEDocumentFromTDMAuto ( _bstr_t bstrHostName, _bstr_t bstrServerName, _bstr_t bstrFolderLocation, _bstr_t bstrProject, _bstr_t bstrLibrary, _bstr_t bstrItemGUID, _bstr_t bstrVersionGUID, _bstr_t bstrVersionNumber, enum DocumentTypeConstants SEDocType, _bstr_t bstrAssemblyTemplate, _bstr_t bstrPartTemplate ) {
    HRESULT _hr = raw_CreateSEDocumentFromTDMAuto(bstrHostName, bstrServerName, bstrFolderLocation, bstrProject, bstrLibrary, bstrItemGUID, bstrVersionGUID, bstrVersionNumber, SEDocType, bstrAssemblyTemplate, bstrPartTemplate);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1697)
inline HRESULT TGFramework::_IApplicationAuto::CreateSEDraftDocFromDXFAuto ( _bstr_t bstrDxfFileName, _bstr_t bstrDraftFileLocation, _bstr_t bstrDraftTemplateFile, _bstr_t bstrclsidDoc ) {
    HRESULT _hr = raw_CreateSEDraftDocFromDXFAuto(bstrDxfFileName, bstrDraftFileLocation, bstrDraftTemplateFile, bstrclsidDoc);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1698)
inline HRESULT TGFramework::_IApplicationAuto::CreateSEDocumentFromForeignFile ( _bstr_t bstrForeignFilePath, _bstr_t bstrSEFileLocation, _bstr_t bstrTemplatePath, _bstr_t bstrClsid, enum BulkMigrationTypeConstants MigrationType ) {
    HRESULT _hr = raw_CreateSEDocumentFromForeignFile(bstrForeignFilePath, bstrSEFileLocation, bstrTemplatePath, bstrClsid, MigrationType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1699)
inline _bstr_t TGFramework::_IApplicationAuto::GetTemplateFileName ( enum DocumentTypeConstants * DocType, const _variant_t & FileFilter ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetTemplateFileName(DocType, FileFilter, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1700)
inline _bstr_t TGFramework::_IApplicationAuto::GetDefaultTemplatePath ( enum DocumentTypeConstants DocType ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetDefaultTemplatePath(DocType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1701)
inline HRESULT TGFramework::_IApplicationAuto::SetDefaultTemplatePath ( enum DocumentTypeConstants DocType, _bstr_t TemplatePath ) {
    HRESULT _hr = raw_SetDefaultTemplatePath(DocType, TemplatePath);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1702)
inline HRESULT TGFramework::_IApplicationAuto::DoIdle ( ) {
    HRESULT _hr = raw_DoIdle();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1703)
inline TGFramework::MatTablePtr TGFramework::_IApplicationAuto::GetMaterialTable ( ) {
    struct MatTable * _result = 0;
    HRESULT _hr = raw_GetMaterialTable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return MatTablePtr(_result, false);
}

#pragma implementation_key(1704)
inline IUnknownPtr TGFramework::_IApplicationAuto::GetNewFileUIEvents ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_NewFileUIEvents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1705)
inline HRESULT TGFramework::_IApplicationAuto::SEAdminUpdate ( ) {
    HRESULT _hr = raw_SEAdminUpdate();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1706)
inline IUnknownPtr TGFramework::_IApplicationAuto::GetShortcutMenuEvents ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_ShortcutMenuEvents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1707)
inline VARIANT_BOOL TGFramework::_IApplicationAuto::GetApprenticeMode ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ApprenticeMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1708)
inline void TGFramework::_IApplicationAuto::PutApprenticeMode ( VARIANT_BOOL ApprenticeModeOn ) {
    HRESULT _hr = put_ApprenticeMode(ApprenticeModeOn);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1709)
inline VARIANT_BOOL TGFramework::_IApplicationAuto::GetShowStartupScreen ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowStartupScreen(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1710)
inline void TGFramework::_IApplicationAuto::PutShowStartupScreen ( VARIANT_BOOL ShowStartupScreen ) {
    HRESULT _hr = put_ShowStartupScreen(ShowStartupScreen);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1711)
inline TGFramework::SolidEdgeTCEPtr TGFramework::_IApplicationAuto::GetSolidEdgeTCE ( ) {
    struct SolidEdgeTCE * _result = 0;
    HRESULT _hr = get_SolidEdgeTCE(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SolidEdgeTCEPtr(_result, false);
}

#pragma implementation_key(1712)
inline TGFramework::SolidEdgeInsightXTPtr TGFramework::_IApplicationAuto::GetSolidEdgeInsightXT ( ) {
    struct SolidEdgeInsightXT * _result = 0;
    HRESULT _hr = get_SolidEdgeInsightXT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SolidEdgeInsightXTPtr(_result, false);
}

#pragma implementation_key(1713)
inline VARIANT_BOOL TGFramework::_IApplicationAuto::GetIsIdling ( long MilliSec ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsIdling(MilliSec, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1714)
inline VARIANT_BOOL TGFramework::_IApplicationAuto::GetResolveLink ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ResolveLink(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1715)
inline void TGFramework::_IApplicationAuto::PutResolveLink ( VARIANT_BOOL ResolveLink ) {
    HRESULT _hr = put_ResolveLink(ResolveLink);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1716)
inline HRESULT TGFramework::_IApplicationAuto::DisableEventsForGivenAddIn ( _bstr_t bstrClsid ) {
    HRESULT _hr = raw_DisableEventsForGivenAddIn(bstrClsid);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1717)
inline HRESULT TGFramework::_IApplicationAuto::SetAddInInterfaces ( _bstr_t bstrClsid, SAFEARRAY * * pSaUnknownPtrs ) {
    HRESULT _hr = raw_SetAddInInterfaces(bstrClsid, pSaUnknownPtrs);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1718)
inline HRESULT TGFramework::_IApplicationAuto::EnableEventsForGivenAddIn ( _bstr_t bstrClsid ) {
    HRESULT _hr = raw_EnableEventsForGivenAddIn(bstrClsid);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1719)
inline HRESULT TGFramework::_IApplicationAuto::ShowCommand ( int nCmdID, VARIANT_BOOL Highlight ) {
    HRESULT _hr = raw_ShowCommand(nCmdID, Highlight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1720)
inline int TGFramework::_IApplicationAuto::GetProcessID ( ) {
    int _result = 0;
    HRESULT _hr = get_ProcessID(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1721)
inline IUnknownPtr TGFramework::_IApplicationAuto::GetSEECEvents ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_SEECEvents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1722)
inline IUnknownPtr TGFramework::_IApplicationAuto::GetSESPEvents ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_SESPEvents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1723)
inline IUnknownPtr TGFramework::_IApplicationAuto::GetBiDMEvents ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_BiDMEvents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1724)
inline HRESULT TGFramework::_IApplicationAuto::WriteDocumentFormulaIntoXML ( _bstr_t outputXMLPath, _bstr_t knownResXMLPath, VARIANT_BOOL bDeepTree ) {
    HRESULT _hr = raw_WriteDocumentFormulaIntoXML(outputXMLPath, knownResXMLPath, bDeepTree);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1725)
inline HRESULT TGFramework::_IApplicationAuto::SetBuiltInATPRunningFlagAndATPID ( VARIANT_BOOL bRunningFlag, _bstr_t strATPID ) {
    HRESULT _hr = raw_SetBuiltInATPRunningFlagAndATPID(bRunningFlag, strATPID);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1726)
inline HRESULT TGFramework::_IApplicationAuto::SetValuesForBIDMCPD ( VARIANT * pvarListOfValues ) {
    HRESULT _hr = raw_SetValuesForBIDMCPD(pvarListOfValues);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1727)
inline HRESULT TGFramework::_IApplicationAuto::SetMessageForBIDMCPD ( VARIANT * pvarListOfMessages ) {
    HRESULT _hr = raw_SetMessageForBIDMCPD(pvarListOfMessages);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1728)
inline HRESULT TGFramework::_IApplicationAuto::SetBIDMATPInfo ( _bstr_t bstrATPClassName, _bstr_t bstrATPName, long ATPId ) {
    HRESULT _hr = raw_SetBIDMATPInfo(bstrATPClassName, bstrATPName, ATPId);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1729)
inline int TGFramework::_IApplicationAuto::GetCountOfOpenModelsInFemap ( ) {
    int _result = 0;
    HRESULT _hr = raw_GetCountOfOpenModelsInFemap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1730)
inline TGFramework::CustomizationPtr TGFramework::_IApplicationAuto::GetCustomization ( ) {
    struct Customization * _result = 0;
    HRESULT _hr = get_Customization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CustomizationPtr(_result, false);
}

#pragma implementation_key(1731)
inline IDispatchPtr TGFramework::_IApplicationAuto::GetDraftPrintUtility ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_GetDraftPrintUtility(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1732)
inline HRESULT TGFramework::_IApplicationAuto::ArrangeWindows ( enum ArrangeWindowsStyles Style ) {
    HRESULT _hr = raw_ArrangeWindows(Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1733)
inline _variant_t TGFramework::_IApplicationAuto::GetOpenFileNameWithOptions ( unsigned long dwFlagForOpen, enum LinksUpdateOption * LinksUpdate, BSTR * AltLinkPath, enum DocumentAccess * DocAccess, enum NotifyOption * OptNotify, IDispatch * * DocRelationAutoServer, const _variant_t & FileFilter, const _variant_t & FilterIndex, const _variant_t & Title, const _variant_t & IgnoreWarnings ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = raw_GetOpenFileNameWithOptions(dwFlagForOpen, LinksUpdate, AltLinkPath, DocAccess, OptNotify, DocRelationAutoServer, FileFilter, FilterIndex, Title, IgnoreWarnings, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(1734)
inline HRESULT TGFramework::_IApplicationAuto::SEGetFileVersionInfo ( _bstr_t Filename, enum DocumentTypeConstants * DocType, BSTR * CreatedVersion, BSTR * LastSavedVersion, unsigned long * GeometricVersion ) {
    HRESULT _hr = raw_SEGetFileVersionInfo(Filename, DocType, CreatedVersion, LastSavedVersion, GeometricVersion);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1735)
inline HRESULT TGFramework::_IApplicationAuto::GenerateMasterImportListForDataPrep ( SAFEARRAY * * psalistOfFilesFolders, VARIANT_BOOL IncludeSubFolders, unsigned long FileTypes, _bstr_t TimeStamp, _bstr_t WorkingFolderLocation, BSTR * OrderedCSVFilePath, BSTR * UnOrderedCSVFilePath, BSTR * BrokenLinkXMLFilePath, int * iNumberOfBrokenLinks, BSTR * LinkReportFilePath, BSTR * ErrorMsg, enum GenerateMasterImportListError * ErrCode ) {
    HRESULT _hr = raw_GenerateMasterImportListForDataPrep(psalistOfFilesFolders, IncludeSubFolders, FileTypes, TimeStamp, WorkingFolderLocation, OrderedCSVFilePath, UnOrderedCSVFilePath, BrokenLinkXMLFilePath, iNumberOfBrokenLinks, LinkReportFilePath, ErrorMsg, ErrCode);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1736)
inline _variant_t TGFramework::_IApplicationAuto::FindWhereUsedDocuments ( const _variant_t & DocumentPathName, SAFEARRAY * * psalistOfDirectories, VARIANT_BOOL IncludeSubFolders, SAFEARRAY * * psaFilterList ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = raw_FindWhereUsedDocuments(DocumentPathName, psalistOfDirectories, IncludeSubFolders, psaFilterList, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(1737)
inline _variant_t TGFramework::_IApplicationAuto::QuerySystemInformation ( _bstr_t Search ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = raw_QuerySystemInformation(Search, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(1738)
inline HRESULT TGFramework::_IApplicationAuto::DisableBuilInDataMgmt ( VARIANT_BOOL bDisableBuiltInDM ) {
    HRESULT _hr = raw_DisableBuilInDataMgmt(bDisableBuiltInDM);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1739)
inline _bstr_t TGFramework::_IApplicationAuto::GetRegistryPath ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RegistryPath(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1740)
inline _bstr_t TGFramework::_IApplicationAuto::GetAppDataFolder ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AppDataFolder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1741)
inline HRESULT TGFramework::_IApplicationAuto::GetRevisionLinkInfo ( _bstr_t bstrFilePath, VARIANT * pVarRevisionRoot, VARIANT * pVarRevisedFrom ) {
    HRESULT _hr = raw_GetRevisionLinkInfo(bstrFilePath, pVarRevisionRoot, pVarRevisedFrom);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1742)
inline HRESULT TGFramework::_IApplicationAuto::GetRevisionsHistory ( _bstr_t PathName, SAFEARRAY * * psaScope, VARIANT * psaRevHistoryFileNameList, VARIANT * psaRevHistoryRevisionFromList ) {
    HRESULT _hr = raw_GetRevisionsHistory(PathName, psaScope, psaRevHistoryFileNameList, psaRevHistoryRevisionFromList);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1743)
inline HRESULT TGFramework::_IApplicationAuto::OpenDraft ( ) {
    HRESULT _hr = raw_OpenDraft();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1744)
inline HRESULT TGFramework::_IApplicationAuto::GetLatestRevision ( _bstr_t PathName, SAFEARRAY * * psaScope, BSTR * bLatestRevPath, BSTR * bLatestReleasedRevPath ) {
    HRESULT _hr = raw_GetLatestRevision(PathName, psaScope, bLatestRevPath, bLatestReleasedRevPath);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1745)
inline HRESULT TGFramework::_IApplicationAuto::GetTopLevelAssemblyFileNames ( SAFEARRAY * * FileNames, SAFEARRAY * * TopLevelAssemblyFileNames ) {
    HRESULT _hr = raw_GetTopLevelAssemblyFileNames(FileNames, TopLevelAssemblyFileNames);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1746)
inline HRESULT TGFramework::_IApplicationAuto::FindSEDocumentsContainingText ( _bstr_t text_to_search, SAFEARRAY * * psaScope, _bstr_t file_types, VARIANT_BOOL bIncludeSubFolders, SAFEARRAY * * FilesFoundInSearch ) {
    HRESULT _hr = raw_FindSEDocumentsContainingText(text_to_search, psaScope, file_types, bIncludeSubFolders, FilesFoundInSearch);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1747)
inline HRESULT TGFramework::_IApplicationAuto::ResetConfigFile ( enum ConfigResetType eResetType, enum ConfigForForeignFileType eConfigFileType, enum FileTranslationMode eTranslationMode, _bstr_t GroupName, VARIANT * pFile, VARIANT * pTemplateName ) {
    HRESULT _hr = raw_ResetConfigFile(eResetType, eConfigFileType, eTranslationMode, GroupName, pFile, pTemplateName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1748)
inline long TGFramework::_IApplicationAuto::GetNextDocumentNumbers ( int countOfFiles, VARIANT * pVarPrefix, VARIANT * pVarDocNumbs ) {
    long _result = 0;
    HRESULT _hr = raw_GetNextDocumentNumbers(countOfFiles, pVarPrefix, pVarDocNumbs, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1749)
inline HRESULT TGFramework::_IApplicationAuto::Get_Set_UseBiDM_SEOption ( VARIANT_BOOL bGet, VARIANT_BOOL * iValue ) {
    HRESULT _hr = raw_Get_Set_UseBiDM_SEOption(bGet, iValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1750)
inline HRESULT TGFramework::_IApplicationAuto::Get_Set_FileNamingRule ( VARIANT_BOOL bGet, VARIANT_BOOL * bValue ) {
    HRESULT _hr = raw_Get_Set_FileNamingRule(bGet, bValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1751)
inline _bstr_t TGFramework::_IApplicationAuto::GetDocNameFormulaForFile ( _bstr_t bFilename ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetDocNameFormulaForFile(bFilename, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1752)
inline HRESULT TGFramework::_IApplicationAuto::BiDM_RegisterCustomProps ( VARIANT_BOOL bProcessCustomPropsFromPropSeed, VARIANT_BOOL bProcessCustomPropsFromTemplates ) {
    HRESULT _hr = raw_BiDM_RegisterCustomProps(bProcessCustomPropsFromPropSeed, bProcessCustomPropsFromTemplates);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1753)
inline HRESULT TGFramework::_IApplicationAuto::PerformSolidEdgeWorkflow ( _bstr_t bstrFilePath, struct SolidEdgeWorkflowInfo * pSEWorkflowInfo ) {
    HRESULT _hr = raw_PerformSolidEdgeWorkflow(bstrFilePath, pSEWorkflowInfo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1754)
inline HRESULT TGFramework::_IApplicationAuto::GetSolidEdgeWorkflowInformation ( _bstr_t bstrFilePath, struct SolidEdgeWorkflowQueryInfo * pSEWorkflowQueryInfo ) {
    HRESULT _hr = raw_GetSolidEdgeWorkflowInformation(bstrFilePath, pSEWorkflowQueryInfo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1755)
inline HRESULT TGFramework::_IApplicationAuto::SuspendMRU ( ) {
    HRESULT _hr = raw_SuspendMRU();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1756)
inline HRESULT TGFramework::_IApplicationAuto::ResumeMRU ( ) {
    HRESULT _hr = raw_ResumeMRU();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1757)
inline HRESULT TGFramework::_IApplicationAuto::ClearMRU ( ) {
    HRESULT _hr = raw_ClearMRU();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1758)
inline HRESULT TGFramework::_IApplicationAuto::AbortCommand ( VARIANT_BOOL AbortAllCommands ) {
    HRESULT _hr = raw_AbortCommand(AbortAllCommands);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1759)
inline VARIANT_BOOL TGFramework::_IApplicationAuto::Publish3DPDF ( _bstr_t bstrInputFileOrFolderPath, _bstr_t bstr3DPDFTemplateFile, VARIANT_BOOL bIncludeSubFolders, _bstr_t bstrOutputFolderPath, _bstr_t bstr3DPDFFileName, VARIANT_BOOL bOpenPDFAfterPublish, VARIANT_BOOL bPublishHTML, VARIANT_BOOL bAddNextPrevButtons, VARIANT_BOOL bAddFileCustomPropsToPDF, VARIANT_BOOL bSelectAllPMIModelViewsForPDF, _bstr_t bstrDefaultModelView, VARIANT_BOOL bGenAndAttachSTEPAP242, VARIANT_BOOL bGenAndAttachJT, const _variant_t & ListOfAttachments ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Publish3DPDF(bstrInputFileOrFolderPath, bstr3DPDFTemplateFile, bIncludeSubFolders, bstrOutputFolderPath, bstr3DPDFFileName, bOpenPDFAfterPublish, bPublishHTML, bAddNextPrevButtons, bAddFileCustomPropsToPDF, bSelectAllPMIModelViewsForPDF, bstrDefaultModelView, bGenAndAttachSTEPAP242, bGenAndAttachJT, ListOfAttachments, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1760)
inline VARIANT_BOOL TGFramework::_IApplicationAuto::ConvertByFilePath ( _bstr_t InputFileOrFolderPath, _bstr_t OutputFileOrFolderPath ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_ConvertByFilePath(InputFileOrFolderPath, OutputFileOrFolderPath, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1761)
inline VARIANT_BOOL TGFramework::_IApplicationAuto::GetCommandPredictionLearningMode ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CommandPredictionLearningMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1762)
inline void TGFramework::_IApplicationAuto::PutCommandPredictionLearningMode ( VARIANT_BOOL pbEnabled ) {
    HRESULT _hr = put_CommandPredictionLearningMode(pbEnabled);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1763)
inline _bstr_t TGFramework::_IApplicationAuto::GetSoldToID ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SoldToID(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1764)
inline HRESULT TGFramework::_IApplicationAuto::GetListOfTopLevelAssembliesFromFolder ( _bstr_t FolderPath, SAFEARRAY * * TopAssembliesList ) {
    HRESULT _hr = raw_GetListOfTopLevelAssembliesFromFolder(FolderPath, TopAssembliesList);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1765)
inline _bstr_t TGFramework::_IApplicationAuto::GetLicenseType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LicenseType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1766)
inline HRESULT TGFramework::_IApplicationAuto::GenerateSourceImportListForDataPrep ( SAFEARRAY * * psalistOfFilesFolders, VARIANT_BOOL IncludeSubFolders, unsigned long FileTypes, _bstr_t TimeStamp, _bstr_t WorkingFolderLocation, BSTR * OrderedCSVFilePath, BSTR * UnOrderedCSVFilePath, BSTR * BrokenLinkXMLFilePath, int * iNumberOfBrokenLinks, BSTR * LinkReportFilePath, BSTR * ErrorMsg, enum GenerateSourceImportListError * ErrCode ) {
    HRESULT _hr = raw_GenerateSourceImportListForDataPrep(psalistOfFilesFolders, IncludeSubFolders, FileTypes, TimeStamp, WorkingFolderLocation, OrderedCSVFilePath, UnOrderedCSVFilePath, BrokenLinkXMLFilePath, iNumberOfBrokenLinks, LinkReportFilePath, ErrorMsg, ErrCode);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1767)
inline long TGFramework::_IApplicationAuto::GetActiveFramehWnd ( ) {
    long _result = 0;
    HRESULT _hr = get_ActiveFramehWnd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1768)
inline TGFramework::DynamicVisualizationPtr TGFramework::_IApplicationAuto::GetDynamicVisualization ( ) {
    struct DynamicVisualization * _result = 0;
    HRESULT _hr = get_DynamicVisualization(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DynamicVisualizationPtr(_result, false);
}

#pragma implementation_key(1769)
inline __int64 TGFramework::_IApplicationAuto::GetLicenseHandle ( ) {
    __int64 _result = 0;
    HRESULT _hr = get_LicenseHandle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1770)
inline HRESULT TGFramework::_IApplicationAuto::OpenNoteLibrary ( ) {
    HRESULT _hr = raw_OpenNoteLibrary();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1771)
inline HRESULT TGFramework::_IApplicationAuto::CloseNoteLibrary ( ) {
    HRESULT _hr = raw_CloseNoteLibrary();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1772)
inline HRESULT TGFramework::_IApplicationAuto::GetSavedNoteList ( SAFEARRAY * * saSavedNote ) {
    HRESULT _hr = raw_GetSavedNoteList(saSavedNote);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1773)
inline IUnknownPtr TGFramework::_IApplicationAuto::GetSavedNote ( _bstr_t bstrNoteName ) {
    IUnknown * _result = 0;
    HRESULT _hr = raw_GetSavedNote(bstrNoteName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1774)
inline HRESULT TGFramework::_IApplicationAuto::AddNote ( _bstr_t bstrNoteName, _bstr_t bstrText, VARIANT_BOOL bNoteOverWrite ) {
    HRESULT _hr = raw_AddNote(bstrNoteName, bstrText, bNoteOverWrite);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1775)
inline VARIANT_BOOL TGFramework::_IApplicationAuto::Publish3DPDFEx ( _bstr_t bstrInputFileOrFolderPath, _bstr_t bstr3DPDFTemplateFile, VARIANT_BOOL bIncludeSubFolders, _bstr_t bstrOutputFolderPath, _bstr_t bstr3DPDFFileName, VARIANT_BOOL bOpenPDFAfterPublish, VARIANT_BOOL bPublishHTML, VARIANT_BOOL bAddNextPrevButtons, VARIANT_BOOL bAddFileCustomPropsToPDF, VARIANT_BOOL bSelectAllPMIModelViewsForPDF, _bstr_t bstrDefaultModelView, VARIANT_BOOL bGenAndAttachSTEPAP242, VARIANT_BOOL bGenAndAttachJT, const _variant_t & ListOfAttachments, VARIANT_BOOL bSelectAllNamedViewsForPDF, const _variant_t & ListOfNamedViews, const _variant_t & ListOfPMIModelViews ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_Publish3DPDFEx(bstrInputFileOrFolderPath, bstr3DPDFTemplateFile, bIncludeSubFolders, bstrOutputFolderPath, bstr3DPDFFileName, bOpenPDFAfterPublish, bPublishHTML, bAddNextPrevButtons, bAddFileCustomPropsToPDF, bSelectAllPMIModelViewsForPDF, bstrDefaultModelView, bGenAndAttachSTEPAP242, bGenAndAttachJT, ListOfAttachments, bSelectAllNamedViewsForPDF, ListOfNamedViews, ListOfPMIModelViews, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1776)
inline long TGFramework::_IApplicationAuto::GetActiveCommand ( ) {
    long _result = 0;
    HRESULT _hr = raw_GetActiveCommand(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1777)
inline IUnknownPtr TGFramework::_IApplicationAuto::GetOpenNonSolidEdgeFileUIEvents ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_OpenNonSolidEdgeFileUIEvents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1778)
inline VARIANT_BOOL TGFramework::_IApplicationAuto::LicenseCheck ( enum SELicenseCheck Type, _bstr_t Feature ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_LicenseCheck(Type, Feature, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface View wrapper method implementations
//

#pragma implementation_key(1779)
inline HRESULT TGFramework::View::Fit ( ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1780)
inline TGFramework::WindowPtr TGFramework::View::GetWindow ( ) {
    struct Window * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return WindowPtr(_result, false);
}

#pragma implementation_key(1781)
inline HRESULT TGFramework::View::ModelToDC ( SAFEARRAY * * Matrix ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6005", Matrix);
}

#pragma implementation_key(1782)
inline HRESULT TGFramework::View::ModelToView ( SAFEARRAY * * Matrix ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6005", Matrix);
}

#pragma implementation_key(1783)
inline HRESULT TGFramework::View::ViewToGLProjection ( SAFEARRAY * * Matrix ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6005", Matrix);
}

#pragma implementation_key(1784)
inline HRESULT TGFramework::View::Update ( ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1785)
inline HRESULT TGFramework::View::ShowDrawDC ( ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1786)
inline HRESULT TGFramework::View::SwapBuffers ( ) {
    return _com_dispatch_method(this, 0x1c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1787)
inline long TGFramework::View::GetDrawDC ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1788)
inline HRESULT TGFramework::View::GetCamera ( double * EyeX, double * EyeY, double * EyeZ, double * TargetX, double * TargetY, double * TargetZ, double * UpX, double * UpY, double * UpZ, VARIANT_BOOL * Perspective, double * ScaleOrAngle ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x400b\x4005", EyeX, EyeY, EyeZ, TargetX, TargetY, TargetZ, UpX, UpY, UpZ, Perspective, ScaleOrAngle);
}

#pragma implementation_key(1789)
inline HRESULT TGFramework::View::BeginCameraDynamics ( ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1790)
inline HRESULT TGFramework::View::SetCamera ( double EyeX, double EyeY, double EyeZ, double TargetX, double TargetY, double TargetZ, double UpX, double UpY, double UpZ, VARIANT_BOOL Perspective, double ScaleOrAngle ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x000b\x0005", EyeX, EyeY, EyeZ, TargetX, TargetY, TargetZ, UpX, UpY, UpZ, Perspective, ScaleOrAngle);
}

#pragma implementation_key(1791)
inline HRESULT TGFramework::View::EndCameraDynamics ( ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1792)
inline HRESULT TGFramework::View::RotateCamera ( double Angle, double CenterX, double CenterY, double CenterZ, double AxisX, double AxisY, double AxisZ ) {
    return _com_dispatch_method(this, 0x1f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005\x0005", Angle, CenterX, CenterY, CenterZ, AxisX, AxisY, AxisZ);
}

#pragma implementation_key(1793)
inline HRESULT TGFramework::View::PanCamera ( int dX, int dY ) {
    return _com_dispatch_method(this, 0x20, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", dX, dY);
}

#pragma implementation_key(1794)
inline HRESULT TGFramework::View::ZoomCamera ( double __MIDL___IViewAuto0000 ) {
    return _com_dispatch_method(this, 0x21, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", __MIDL___IViewAuto0000);
}

#pragma implementation_key(1795)
inline HRESULT TGFramework::View::OrientCamera ( int cmdtype, int X1, int Y1, int X2, int Y2, int X3, int Y3 ) {
    return _com_dispatch_method(this, 0x22, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0003\x0003\x0003\x0003\x0003", cmdtype, X1, Y1, X2, Y2, X3, Y3);
}

#pragma implementation_key(1796)
inline IUnknownPtr TGFramework::View::GetViewEvents ( ) {
    struct IUnknown * _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1797)
inline IUnknownPtr TGFramework::View::GetDisplayEvents ( ) {
    struct IUnknown * _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1798)
inline IUnknownPtr TGFramework::View::GetGLDisplayEvents ( ) {
    struct IUnknown * _result = 0;
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1799)
inline IUnknownPtr TGFramework::View::GetRenderEvents ( ) {
    struct IUnknown * _result = 0;
    _com_dispatch_method(this, 0x32, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1800)
inline IUnknownPtr TGFramework::View::GetAnimationEvents ( ) {
    struct IUnknown * _result = 0;
    _com_dispatch_method(this, 0x56, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(1801)
inline VARIANT_BOOL TGFramework::View::GetDisplayEnabled ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1802)
inline void TGFramework::View::PutDisplayEnabled ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1803)
inline VARIANT_BOOL TGFramework::View::GetCullingEnabled ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1804)
inline void TGFramework::View::PutCullingEnabled ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1805)
inline VARIANT_BOOL TGFramework::View::GetStyleFallbackEnabled ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1806)
inline void TGFramework::View::PutStyleFallbackEnabled ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1807)
inline int TGFramework::View::GetSharpnessLevelCount ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1808)
inline int TGFramework::View::GetSharpnessLevel ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1809)
inline void TGFramework::View::PutSharpnessLevel ( int _arg1 ) {
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1810)
inline VARIANT_BOOL TGFramework::View::GetStereoEnabled ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1811)
inline void TGFramework::View::PutStereoEnabled ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1812)
inline double TGFramework::View::GetStereoAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1813)
inline void TGFramework::View::PutStereoAngle ( double _arg1 ) {
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1814)
inline double TGFramework::View::GetStereoDeviation ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1815)
inline void TGFramework::View::PutStereoDeviation ( double _arg1 ) {
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1816)
inline HRESULT TGFramework::View::TransformModelToDC ( double ModelX, double ModelY, double ModelZ, long * DeviceX, long * DeviceY ) {
    return _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x4003\x4003", ModelX, ModelY, ModelZ, DeviceX, DeviceY);
}

#pragma implementation_key(1817)
inline HRESULT TGFramework::View::TransformDCToModel ( long DeviceX, long DeviceY, double * ModelX, double * ModelY, double * ModelZ ) {
    return _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x4005\x4005\x4005", DeviceX, DeviceY, ModelX, ModelY, ModelZ);
}

#pragma implementation_key(1818)
inline HRESULT TGFramework::View::TransformModelToView ( double ModelX, double ModelY, double ModelZ, double * ViewX, double * ViewY, double * ViewZ ) {
    return _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x4005\x4005\x4005", ModelX, ModelY, ModelZ, ViewX, ViewY, ViewZ);
}

#pragma implementation_key(1819)
inline HRESULT TGFramework::View::TransformViewToModel ( double ViewX, double ViewY, double ViewZ, double * ModelX, double * ModelY, double * ModelZ ) {
    return _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x4005\x4005\x4005", ViewX, ViewY, ViewZ, ModelX, ModelY, ModelZ);
}

#pragma implementation_key(1820)
inline HRESULT TGFramework::View::TransformGLProjectionToView ( double GLX, double GLY, double GLlZ, double * ViewX, double * ViewY, double * ViewZ ) {
    return _com_dispatch_method(this, 0x18, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x4005\x4005\x4005", GLX, GLY, GLlZ, ViewX, ViewY, ViewZ);
}

#pragma implementation_key(1821)
inline HRESULT TGFramework::View::TransformViewToGLProjection ( double ViewX, double ViewY, double ViewZ, double * GLX, double * GLY, double * GLZ ) {
    return _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x4005\x4005\x4005", ViewX, ViewY, ViewZ, GLX, GLY, GLZ);
}

#pragma implementation_key(1822)
inline HRESULT TGFramework::View::GetCounter ( int Type, VARIANT_BOOL bReset, double * dCounter ) {
    return _com_dispatch_method(this, 0x23, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x000b\x4005", Type, bReset, dCounter);
}

#pragma implementation_key(1823)
inline VARIANT_BOOL TGFramework::View::GetGDIBufferModified ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x24, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1824)
inline void TGFramework::View::PutGDIBufferModified ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x24, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1825)
inline HRESULT TGFramework::View::SaveAsImage ( _bstr_t Filename, const _variant_t & Width, const _variant_t & Height, const _variant_t & AltViewStyle, const _variant_t & Resolution, const _variant_t & ColorDepth, enum SeImageQualityType ImageQuality, VARIANT_BOOL Invert ) {
    return _com_dispatch_method(this, 0x25, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x000c\x000c\x000c\x000c\x000c\x0003\x000b", (BSTR)Filename, &Width, &Height, &AltViewStyle, &Resolution, &ColorDepth, ImageQuality, Invert);
}

#pragma implementation_key(1826)
inline IDispatchPtr TGFramework::View::GetViewStyle ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x26, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1827)
inline void TGFramework::View::PutViewStyle ( IDispatch * _arg1 ) {
    _com_dispatch_method(this, 0x26, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(1828)
inline _bstr_t TGFramework::View::GetStyle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x27, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1829)
inline void TGFramework::View::PutStyle ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x27, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1830)
inline HRESULT TGFramework::View::SetRenderMode ( const _variant_t & mode ) {
    return _com_dispatch_method(this, 0x28, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c", &mode);
}

#pragma implementation_key(1831)
inline enum TGFramework::SeRenderModeType TGFramework::View::GetRenderModeType ( ) {
    enum SeRenderModeType _result;
    _com_dispatch_method(this, 0x29, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1832)
inline void TGFramework::View::PutRenderModeType ( enum SeRenderModeType _arg1 ) {
    _com_dispatch_method(this, 0x29, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1833)
inline VARIANT_BOOL TGFramework::View::GetSilhouettesEnabled ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1834)
inline void TGFramework::View::PutSilhouettesEnabled ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x2a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1835)
inline VARIANT_BOOL TGFramework::View::GetSectionPlanesEnabled ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1836)
inline void TGFramework::View::PutSectionPlanesEnabled ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x2b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1837)
inline HRESULT TGFramework::View::SetDisplayDepths ( double dFront, double dBack, VARIANT * FrontFaceStyle, VARIANT * BackFaceStyle, VARIANT * Monument ) {
    return _com_dispatch_method(this, 0x2c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x480c\x480c\x480c", dFront, dBack, FrontFaceStyle, BackFaceStyle, Monument);
}

#pragma implementation_key(1838)
inline HRESULT TGFramework::View::GetDisplayDepths ( double * pdFront, double * pdBack, VARIANT * FrontFaceStyle, VARIANT * BackFaceStyle, VARIANT * Monument ) {
    return _com_dispatch_method(this, 0x2d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x480c\x480c\x480c", pdFront, pdBack, FrontFaceStyle, BackFaceStyle, Monument);
}

#pragma implementation_key(1839)
inline HRESULT TGFramework::View::SetSectionPlanes ( long nPlanes, VARIANT * Positions, VARIANT * Normals, VARIANT * FaceStyles ) {
    return _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x480c\x480c\x480c", nPlanes, Positions, Normals, FaceStyles);
}

#pragma implementation_key(1840)
inline HRESULT TGFramework::View::GetSectionPlanes ( long * pnPlanes, VARIANT * Positions, VARIANT * Normals, VARIANT * FaceStyles ) {
    return _com_dispatch_method(this, 0x2f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x480c\x480c\x480c", pnPlanes, Positions, Normals, FaceStyles);
}

#pragma implementation_key(1841)
inline HRESULT TGFramework::View::SetAttribute ( long Attribute, const _variant_t & AttributeData ) {
    return _com_dispatch_method(this, 0x30, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x000c", Attribute, &AttributeData);
}

#pragma implementation_key(1842)
inline HRESULT TGFramework::View::GetAttribute ( long Attribute, VARIANT * AttributeData ) {
    return _com_dispatch_method(this, 0x31, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x400c", Attribute, AttributeData);
}

#pragma implementation_key(1843)
inline HRESULT TGFramework::View::ClearRotationFocus ( ) {
    return _com_dispatch_method(this, 0x33, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1844)
inline HRESULT TGFramework::View::GetRotationFocus ( double * pdPointX, double * pdPointY, double * pdPointZ, double * pdDirectionX, double * pdDirectionZ, double * pdDirectionY, double * pdFront, double * pdBack, double * pdRadius, long * puOptions ) {
    return _com_dispatch_method(this, 0x34, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4003", pdPointX, pdPointY, pdPointZ, pdDirectionX, pdDirectionZ, pdDirectionY, pdFront, pdBack, pdRadius, puOptions);
}

#pragma implementation_key(1845)
inline HRESULT TGFramework::View::SetRotationPoint ( double dPointX, double dPointY, double dPointZ ) {
    return _com_dispatch_method(this, 0x35, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", dPointX, dPointY, dPointZ);
}

#pragma implementation_key(1846)
inline HRESULT TGFramework::View::SetRotationAxis ( double dPointX, double dPointY, double dPointZ, double dDirectionX, double dDirectionY, double dDirectionZ ) {
    return _com_dispatch_method(this, 0x36, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005", dPointX, dPointY, dPointZ, dDirectionX, dDirectionY, dDirectionZ);
}

#pragma implementation_key(1847)
inline HRESULT TGFramework::View::SetRotationFocus ( double dPointX, double dPointY, double dPointZ, double dDirectionX, double dDirectionZ, double dDirectionY, double dFront, double dBack, double dRadius, long uOptions ) {
    return _com_dispatch_method(this, 0x37, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0003", dPointX, dPointY, dPointZ, dDirectionX, dDirectionZ, dDirectionY, dFront, dBack, dRadius, uOptions);
}

#pragma implementation_key(1848)
inline HRESULT TGFramework::View::Locate ( long lPointX, long lPointY, long lRadius, double * pdHitPointX, double * pdHitPointY, double * pdHitPointZ ) {
    return _com_dispatch_method(this, 0x38, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0003\x4005\x4005\x4005", lPointX, lPointY, lRadius, pdHitPointX, pdHitPointY, pdHitPointZ);
}

#pragma implementation_key(1849)
inline HRESULT TGFramework::View::GetModelRange ( double * pdLowX, double * pdLowY, double * pdLowZ, double * pdHighX, double * pdHighY, double * pdHighZ ) {
    return _com_dispatch_method(this, 0x39, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005", pdLowX, pdLowY, pdLowZ, pdHighX, pdHighY, pdHighZ);
}

#pragma implementation_key(1850)
inline HRESULT TGFramework::View::OrientCameraEx ( long lFlags, long lButtons, double dX, double dY, double dZ, double dYaw, double dPitch, double dRoll ) {
    return _com_dispatch_method(this, 0x3a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0005\x0005\x0005\x0005\x0005\x0005", lFlags, lButtons, dX, dY, dZ, dYaw, dPitch, dRoll);
}

#pragma implementation_key(1851)
inline HRESULT TGFramework::View::GetCameraEx ( long * lFlags, double * dEyeX, double * dEyeY, double * dEyeZ, double * dTargetX, double * dTargetY, double * dTargetZ, double * dUpX, double * dUpY, double * dUpZ, double * dNearClip, double * dFarClip, double * dFrameWidth, double * dFrameHeight, double * dFrameEyeX, double * dFrameEyeY, double * dFrameScale ) {
    return _com_dispatch_method(this, 0x3b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005", lFlags, dEyeX, dEyeY, dEyeZ, dTargetX, dTargetY, dTargetZ, dUpX, dUpY, dUpZ, dNearClip, dFarClip, dFrameWidth, dFrameHeight, dFrameEyeX, dFrameEyeY, dFrameScale);
}

#pragma implementation_key(1852)
inline HRESULT TGFramework::View::SetCameraEx ( long lFlags, double dEyeX, double dEyeY, double dEyeZ, double dTargetX, double dTargetY, double dTargetZ, double dUpX, double dUpY, double dUpZ, double dNearClip, double dFarClip, double dFrameWidth, double dFrameHeight, double dFrameEyeX, double dFrameEyeY, double dFrameScale ) {
    return _com_dispatch_method(this, 0x3c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005", lFlags, dEyeX, dEyeY, dEyeZ, dTargetX, dTargetY, dTargetZ, dUpX, dUpY, dUpZ, dNearClip, dFarClip, dFrameWidth, dFrameHeight, dFrameEyeX, dFrameEyeY, dFrameScale);
}

#pragma implementation_key(1853)
inline HRESULT TGFramework::View::SaveCurrentView ( const _variant_t & Name ) {
    return _com_dispatch_method(this, 0x3d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c", &Name);
}

#pragma implementation_key(1854)
inline HRESULT TGFramework::View::ApplyNamedView ( const _variant_t & Name ) {
    return _com_dispatch_method(this, 0x3e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c", &Name);
}

#pragma implementation_key(1855)
inline HRESULT TGFramework::View::AreaZoomCamera ( int X1, int Y1, int X2, int Y2 ) {
    return _com_dispatch_method(this, 0x3f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0003\x0003", X1, Y1, X2, Y2);
}

#pragma implementation_key(1856)
inline HRESULT TGFramework::View::CreateUserRange ( long * pidUserRange ) {
    return _com_dispatch_method(this, 0x40, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003", pidUserRange);
}

#pragma implementation_key(1857)
inline HRESULT TGFramework::View::DeleteUserRange ( long idUserRange ) {
    return _com_dispatch_method(this, 0x41, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", idUserRange);
}

#pragma implementation_key(1858)
inline HRESULT TGFramework::View::GetUserRange ( long idUserRange, double * pdLowX, double * pdLowY, double * pdLowZ, double * pdHighX, double * pdHighY, double * pdHighZ ) {
    return _com_dispatch_method(this, 0x42, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4005\x4005\x4005", idUserRange, pdLowX, pdLowY, pdLowZ, pdHighX, pdHighY, pdHighZ);
}

#pragma implementation_key(1859)
inline HRESULT TGFramework::View::SetUserRange ( long idUserRange, double dLowX, double dLowY, double dLowZ, double dHighX, double dHighY, double dHighZ ) {
    return _com_dispatch_method(this, 0x43, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005\x0005\x0005\x0005", idUserRange, dLowX, dLowY, dLowZ, dHighX, dHighY, dHighZ);
}

#pragma implementation_key(1860)
inline unsigned long TGFramework::View::GetMovieFrameRate ( ) {
    unsigned long _result = 0;
    _com_dispatch_method(this, 0x45, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1861)
inline void TGFramework::View::PutMovieFrameRate ( unsigned long _arg1 ) {
    _com_dispatch_method(this, 0x45, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1862)
inline unsigned long TGFramework::View::GetMovieBitRate ( ) {
    unsigned long _result = 0;
    _com_dispatch_method(this, 0x46, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1863)
inline void TGFramework::View::PutMovieBitRate ( unsigned long _arg1 ) {
    _com_dispatch_method(this, 0x46, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1864)
inline _bstr_t TGFramework::View::GetMovieCodec ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x44, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1865)
inline void TGFramework::View::PutMovieCodec ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x44, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1866)
inline unsigned long TGFramework::View::GetMovieQuality ( ) {
    unsigned long _result = 0;
    _com_dispatch_method(this, 0x47, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1867)
inline void TGFramework::View::PutMovieQuality ( unsigned long _arg1 ) {
    _com_dispatch_method(this, 0x47, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1868)
inline _bstr_t TGFramework::View::GetMovieTitle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x48, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1869)
inline void TGFramework::View::PutMovieTitle ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x48, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1870)
inline _bstr_t TGFramework::View::GetMovieSubTitle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x49, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1871)
inline void TGFramework::View::PutMovieSubTitle ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x49, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1872)
inline _bstr_t TGFramework::View::GetMovieCopyright ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1873)
inline void TGFramework::View::PutMovieCopyright ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x4a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1874)
inline _bstr_t TGFramework::View::GetMovieAuthor ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1875)
inline void TGFramework::View::PutMovieAuthor ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x4b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1876)
inline _bstr_t TGFramework::View::GetMovieAuthorURL ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1877)
inline void TGFramework::View::PutMovieAuthorURL ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x4c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1878)
inline _bstr_t TGFramework::View::GetMovieDescription ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1879)
inline void TGFramework::View::PutMovieDescription ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x4d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1880)
inline HRESULT TGFramework::View::GetAvailableMovieCodecs ( SAFEARRAY * * AvailableCodecs ) {
    return _com_dispatch_method(this, 0x4e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6008", AvailableCodecs);
}

#pragma implementation_key(1881)
inline HRESULT TGFramework::View::SetMovieResolution ( enum seMovieStandardResolutionConstants StandardMovieResolution ) {
    return _com_dispatch_method(this, 0x4f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", StandardMovieResolution);
}

#pragma implementation_key(1882)
inline HRESULT TGFramework::View::SetCustomMovieResolution ( int nWidth, int nHeight ) {
    return _com_dispatch_method(this, 0x50, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", nWidth, nHeight);
}

#pragma implementation_key(1883)
inline HRESULT TGFramework::View::CreateMovieRecorder ( enum seMovieFormatConstants Format ) {
    return _com_dispatch_method(this, 0x51, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Format);
}

#pragma implementation_key(1884)
inline HRESULT TGFramework::View::DestroyMovieRecorder ( ) {
    return _com_dispatch_method(this, 0x52, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1885)
inline HRESULT TGFramework::View::BeginMovieRecording ( _bstr_t Filename ) {
    return _com_dispatch_method(this, 0x53, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Filename);
}

#pragma implementation_key(1886)
inline HRESULT TGFramework::View::AddFrameToMovie ( VARIANT_BOOL KeyFrame, int * pNewFrameCount ) {
    return _com_dispatch_method(this, 0x54, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b\x4003", KeyFrame, pNewFrameCount);
}

#pragma implementation_key(1887)
inline HRESULT TGFramework::View::EndMovieRecording ( ) {
    return _com_dispatch_method(this, 0x55, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1888)
inline HRESULT TGFramework::View::RangeZoomCamera ( double dLowX, double dLowY, double dLowZ, double dHighX, double dHighY, double dHighZ ) {
    return _com_dispatch_method(this, 0x57, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005", dLowX, dLowY, dLowZ, dHighX, dHighY, dHighZ);
}

#pragma implementation_key(1889)
inline HRESULT TGFramework::View::UserRangeZoomCamera ( long idUserRange ) {
    return _com_dispatch_method(this, 0x58, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", idUserRange);
}

#pragma implementation_key(1890)
inline HRESULT TGFramework::View::RefreshView ( long nOptions ) {
    return _com_dispatch_method(this, 0x59, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", nOptions);
}

#pragma implementation_key(1891)
inline enum TGFramework::seSharpenLevelConstants TGFramework::View::GetSharpenLevel ( ) {
    enum seSharpenLevelConstants _result;
    _com_dispatch_method(this, 0x5a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1892)
inline void TGFramework::View::PutSharpenLevel ( enum seSharpenLevelConstants _arg1 ) {
    _com_dispatch_method(this, 0x5a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1893)
inline _variant_t TGFramework::View::GetSectionPlanesOptions ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x5b, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(1894)
inline void TGFramework::View::PutSectionPlanesOptions ( const _variant_t & _arg1 ) {
    _com_dispatch_method(this, 0x5b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000c", &_arg1);
}

#pragma implementation_key(1895)
inline HRESULT TGFramework::View::SetSectionPlanesParams ( const _variant_t & Options, const _variant_t & PlaneCount, VARIANT * Positions, VARIANT * Normals, VARIANT * Colors ) {
    return _com_dispatch_method(this, 0x5c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c\x000c\x480c\x480c\x480c", &Options, &PlaneCount, Positions, Normals, Colors);
}

#pragma implementation_key(1896)
inline HRESULT TGFramework::View::GetSectionPlanesParams ( VARIANT * Options, VARIANT * PlaneCount, VARIANT * Positions, VARIANT * Normals, VARIANT * Colors ) {
    return _com_dispatch_method(this, 0x5d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x480c\x480c\x480c\x480c", Options, PlaneCount, Positions, Normals, Colors);
}

//
// interface _IWindowAuto wrapper method implementations
//

#pragma implementation_key(1897)
inline HRESULT TGFramework::_IWindowAuto::Activate ( ) {
    HRESULT _hr = raw_Activate();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1898)
inline HRESULT TGFramework::_IWindowAuto::ActivateNext ( ) {
    HRESULT _hr = raw_ActivateNext();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1899)
inline HRESULT TGFramework::_IWindowAuto::ActivatePrevious ( ) {
    HRESULT _hr = raw_ActivatePrevious();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1900)
inline TGFramework::ApplicationPtr TGFramework::_IWindowAuto::GetApplication ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(1901)
inline _bstr_t TGFramework::_IWindowAuto::GetCaption ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Caption(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1902)
inline void TGFramework::_IWindowAuto::PutCaption ( _bstr_t Caption ) {
    HRESULT _hr = put_Caption(Caption);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1903)
inline HRESULT TGFramework::_IWindowAuto::Close ( const _variant_t & SaveChanges, const _variant_t & Filename, const _variant_t & RouteWorkbook ) {
    HRESULT _hr = raw_Close(SaveChanges, Filename, RouteWorkbook);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1904)
inline _bstr_t TGFramework::_IWindowAuto::GetEnvironment ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Environment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1905)
inline void TGFramework::_IWindowAuto::PutEnvironment ( _bstr_t Environment ) {
    HRESULT _hr = put_Environment(Environment);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1906)
inline int TGFramework::_IWindowAuto::GetHeight ( ) {
    int _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1907)
inline void TGFramework::_IWindowAuto::PutHeight ( int Height ) {
    HRESULT _hr = put_Height(Height);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1908)
inline long TGFramework::_IWindowAuto::GethWnd ( ) {
    long _result = 0;
    HRESULT _hr = get_hWnd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1909)
inline int TGFramework::_IWindowAuto::GetIndex ( ) {
    int _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1910)
inline int TGFramework::_IWindowAuto::GetLeft ( ) {
    int _result = 0;
    HRESULT _hr = get_Left(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1911)
inline void TGFramework::_IWindowAuto::PutLeft ( int Left ) {
    HRESULT _hr = put_Left(Left);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1912)
inline IDispatchPtr TGFramework::_IWindowAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1913)
inline HRESULT TGFramework::_IWindowAuto::PrintOut ( ) {
    HRESULT _hr = raw_PrintOut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1914)
inline TGFramework::SelectSetPtr TGFramework::_IWindowAuto::GetSelectSet ( ) {
    struct SelectSet * _result = 0;
    HRESULT _hr = get_SelectSet(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SelectSetPtr(_result, false);
}

#pragma implementation_key(1915)
inline int TGFramework::_IWindowAuto::GetTop ( ) {
    int _result = 0;
    HRESULT _hr = get_Top(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1916)
inline void TGFramework::_IWindowAuto::PutTop ( int Top ) {
    HRESULT _hr = put_Top(Top);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1917)
inline _bstr_t TGFramework::_IWindowAuto::GetType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1918)
inline VARIANT_BOOL TGFramework::_IWindowAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1919)
inline void TGFramework::_IWindowAuto::PutVisible ( VARIANT_BOOL Visible ) {
    HRESULT _hr = put_Visible(Visible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1920)
inline int TGFramework::_IWindowAuto::GetWidth ( ) {
    int _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1921)
inline void TGFramework::_IWindowAuto::PutWidth ( int Width ) {
    HRESULT _hr = put_Width(Width);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1922)
inline int TGFramework::_IWindowAuto::GetWindowNumber ( ) {
    int _result = 0;
    HRESULT _hr = get_WindowNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1923)
inline int TGFramework::_IWindowAuto::GetWindowState ( ) {
    int _result = 0;
    HRESULT _hr = get_WindowState(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1924)
inline void TGFramework::_IWindowAuto::PutWindowState ( int WindowState ) {
    HRESULT _hr = put_WindowState(WindowState);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1925)
inline long TGFramework::_IWindowAuto::GetIcon ( ) {
    long _result = 0;
    HRESULT _hr = get_Icon(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1926)
inline HRESULT TGFramework::_IWindowAuto::Paste ( ) {
    HRESULT _hr = raw_Paste();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1927)
inline int TGFramework::_IWindowAuto::GetUsableHeight ( ) {
    int _result = 0;
    HRESULT _hr = get_UsableHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1928)
inline int TGFramework::_IWindowAuto::GetUsableWidth ( ) {
    int _result = 0;
    HRESULT _hr = get_UsableWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1929)
inline TGFramework::ViewPtr TGFramework::_IWindowAuto::GetView ( ) {
    struct View * _result = 0;
    HRESULT _hr = get_View(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ViewPtr(_result, false);
}

#pragma implementation_key(1930)
inline long TGFramework::_IWindowAuto::GetDrawHwnd ( ) {
    long _result = 0;
    HRESULT _hr = get_DrawHwnd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1931)
inline IDispatchPtr TGFramework::_IWindowAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1932)
inline VARIANT_BOOL TGFramework::_IWindowAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1933)
inline VARIANT_BOOL TGFramework::_IWindowAuto::GetFloating ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Floating(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1934)
inline HRESULT TGFramework::_IWindowAuto::FloatWindow ( ) {
    HRESULT _hr = raw_FloatWindow();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1935)
inline HRESULT TGFramework::_IWindowAuto::DockWindow ( ) {
    HRESULT _hr = raw_DockWindow();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1936)
inline int TGFramework::_IWindowAuto::GetWidthEx ( ) {
    int _result = 0;
    HRESULT _hr = get_WidthEx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1937)
inline void TGFramework::_IWindowAuto::PutWidthEx ( int Width ) {
    HRESULT _hr = put_WidthEx(Width);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1938)
inline int TGFramework::_IWindowAuto::GetHeightEx ( ) {
    int _result = 0;
    HRESULT _hr = get_HeightEx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1939)
inline void TGFramework::_IWindowAuto::PutHeightEx ( int Height ) {
    HRESULT _hr = put_HeightEx(Height);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// dispinterface Window wrapper method implementations
//

#pragma implementation_key(1940)
inline HRESULT TGFramework::Window::Activate ( ) {
    return _com_dispatch_method(this, 0x4001, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1941)
inline HRESULT TGFramework::Window::ActivateNext ( ) {
    return _com_dispatch_method(this, 0x4002, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1942)
inline HRESULT TGFramework::Window::ActivatePrevious ( ) {
    return _com_dispatch_method(this, 0x4003, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1943)
inline TGFramework::ApplicationPtr TGFramework::Window::GetApplication ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0x4004, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(1944)
inline _bstr_t TGFramework::Window::GetCaption ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4005, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1945)
inline void TGFramework::Window::PutCaption ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x4005, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1946)
inline HRESULT TGFramework::Window::Close ( const _variant_t & SaveChanges, const _variant_t & Filename, const _variant_t & RouteWorkbook ) {
    return _com_dispatch_method(this, 0x4006, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c\x080c", &SaveChanges, &Filename, &RouteWorkbook);
}

#pragma implementation_key(1947)
inline _bstr_t TGFramework::Window::GetEnvironment ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x401b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1948)
inline void TGFramework::Window::PutEnvironment ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x401b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1949)
inline int TGFramework::Window::GetHeight ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4007, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1950)
inline void TGFramework::Window::PutHeight ( int _arg1 ) {
    _com_dispatch_method(this, 0x4007, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1951)
inline long TGFramework::Window::GethWnd ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4008, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1952)
inline int TGFramework::Window::GetIndex ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4009, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1953)
inline int TGFramework::Window::GetLeft ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x400a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1954)
inline void TGFramework::Window::PutLeft ( int _arg1 ) {
    _com_dispatch_method(this, 0x400a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1955)
inline IDispatchPtr TGFramework::Window::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x400d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1956)
inline HRESULT TGFramework::Window::PrintOut ( ) {
    return _com_dispatch_method(this, 0x400e, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1957)
inline TGFramework::SelectSetPtr TGFramework::Window::GetSelectSet ( ) {
    struct SelectSet * _result = 0;
    _com_dispatch_method(this, 0x4010, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SelectSetPtr(_result, false);
}

#pragma implementation_key(1958)
inline int TGFramework::Window::GetTop ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4011, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1959)
inline void TGFramework::Window::PutTop ( int _arg1 ) {
    _com_dispatch_method(this, 0x4011, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1960)
inline _bstr_t TGFramework::Window::GetType ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4012, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1961)
inline VARIANT_BOOL TGFramework::Window::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4015, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1962)
inline void TGFramework::Window::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4015, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1963)
inline int TGFramework::Window::GetWidth ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4016, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1964)
inline void TGFramework::Window::PutWidth ( int _arg1 ) {
    _com_dispatch_method(this, 0x4016, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1965)
inline int TGFramework::Window::GetWindowNumber ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4017, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1966)
inline int TGFramework::Window::GetWindowState ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4018, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1967)
inline void TGFramework::Window::PutWindowState ( int _arg1 ) {
    _com_dispatch_method(this, 0x4018, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1968)
inline long TGFramework::Window::GetIcon ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x401c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1969)
inline HRESULT TGFramework::Window::Paste ( ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1970)
inline int TGFramework::Window::GetUsableHeight ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1971)
inline int TGFramework::Window::GetUsableWidth ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1972)
inline TGFramework::ViewPtr TGFramework::Window::GetView ( ) {
    struct View * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ViewPtr(_result, false);
}

#pragma implementation_key(1973)
inline long TGFramework::Window::GetDrawHwnd ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1974)
inline IDispatchPtr TGFramework::Window::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1975)
inline VARIANT_BOOL TGFramework::Window::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(1976)
inline VARIANT_BOOL TGFramework::Window::GetFloating ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x401d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1977)
inline HRESULT TGFramework::Window::FloatWindow ( ) {
    return _com_dispatch_method(this, 0x401e, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1978)
inline HRESULT TGFramework::Window::DockWindow ( ) {
    return _com_dispatch_method(this, 0x401f, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1979)
inline int TGFramework::Window::GetWidthEx ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4020, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1980)
inline void TGFramework::Window::PutWidthEx ( int _arg1 ) {
    _com_dispatch_method(this, 0x4020, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1981)
inline int TGFramework::Window::GetHeightEx ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4021, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1982)
inline void TGFramework::Window::PutHeightEx ( int _arg1 ) {
    _com_dispatch_method(this, 0x4021, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

//
// dispinterface DISEViewEvents wrapper method implementations
//

#pragma implementation_key(1983)
inline HRESULT TGFramework::DISEViewEvents::Changed ( ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1984)
inline HRESULT TGFramework::DISEViewEvents::Destroyed ( ) {
    return _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1985)
inline HRESULT TGFramework::DISEViewEvents::StyleChanged ( ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// interface ISEViewEvents wrapper method implementations
//

#pragma implementation_key(1986)
inline HRESULT TGFramework::ISEViewEvents::Changed ( ) {
    HRESULT _hr = raw_Changed();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1987)
inline HRESULT TGFramework::ISEViewEvents::Destroyed ( ) {
    HRESULT _hr = raw_Destroyed();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1988)
inline HRESULT TGFramework::ISEViewEvents::StyleChanged ( ) {
    HRESULT _hr = raw_StyleChanged();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface DISEhDCDisplayEvents wrapper method implementations
//

#pragma implementation_key(1989)
inline HRESULT TGFramework::DISEhDCDisplayEvents::BeginDisplay ( ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1990)
inline HRESULT TGFramework::DISEhDCDisplayEvents::EndDisplay ( ) {
    return _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(1991)
inline HRESULT TGFramework::DISEhDCDisplayEvents::BeginhDCMainDisplay ( long hDC, SAFEARRAY * * ModelToDC, SAFEARRAY * * Rect ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6005\x6003", hDC, ModelToDC, Rect);
}

#pragma implementation_key(1992)
inline HRESULT TGFramework::DISEhDCDisplayEvents::EndhDCMainDisplay ( long hDC, SAFEARRAY * * ModelToDC, SAFEARRAY * * Rect ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6005\x6003", hDC, ModelToDC, Rect);
}

//
// interface ISEhDCDisplayEvents wrapper method implementations
//

#pragma implementation_key(1993)
inline HRESULT TGFramework::ISEhDCDisplayEvents::BeginDisplay ( ) {
    HRESULT _hr = raw_BeginDisplay();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1994)
inline HRESULT TGFramework::ISEhDCDisplayEvents::EndDisplay ( ) {
    HRESULT _hr = raw_EndDisplay();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1995)
inline HRESULT TGFramework::ISEhDCDisplayEvents::BeginhDCMainDisplay ( long hDC, double * ModelToDC, long * Rect ) {
    HRESULT _hr = raw_BeginhDCMainDisplay(hDC, ModelToDC, Rect);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1996)
inline HRESULT TGFramework::ISEhDCDisplayEvents::EndhDCMainDisplay ( long hDC, double * ModelToDC, long * Rect ) {
    HRESULT _hr = raw_EndhDCMainDisplay(hDC, ModelToDC, Rect);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISEIGLDisplayEvents wrapper method implementations
//

#pragma implementation_key(1997)
inline HRESULT TGFramework::ISEIGLDisplayEvents::BeginDisplay ( ) {
    HRESULT _hr = raw_BeginDisplay();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1998)
inline HRESULT TGFramework::ISEIGLDisplayEvents::EndDisplay ( ) {
    HRESULT _hr = raw_EndDisplay();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1999)
inline HRESULT TGFramework::ISEIGLDisplayEvents::BeginIGLMainDisplay ( IUnknown * pUnknownIGL ) {
    HRESULT _hr = raw_BeginIGLMainDisplay(pUnknownIGL);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2000)
inline HRESULT TGFramework::ISEIGLDisplayEvents::EndIGLMainDisplay ( IUnknown * pUnknownIGL ) {
    HRESULT _hr = raw_EndIGLMainDisplay(pUnknownIGL);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISERenderEvents wrapper method implementations
//

#pragma implementation_key(2001)
inline HRESULT TGFramework::ISERenderEvents::PreRender ( IUnknown * pDevice, IUnknown * pScene ) {
    HRESULT _hr = raw_PreRender(pDevice, pScene);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2002)
inline HRESULT TGFramework::ISERenderEvents::Render ( IUnknown * pDevice, IUnknown * pScene, IUnknown * pProgress ) {
    HRESULT _hr = raw_Render(pDevice, pScene, pProgress);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2003)
inline HRESULT TGFramework::ISERenderEvents::PostRender ( IUnknown * pDevice, IUnknown * pScene ) {
    HRESULT _hr = raw_PostRender(pDevice, pScene);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface DISEAnimationEvents wrapper method implementations
//

#pragma implementation_key(2004)
inline HRESULT TGFramework::DISEAnimationEvents::AnimationEvent ( enum AnimationEventConstants AnimationEventType, int nFrame ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", AnimationEventType, nFrame);
}

//
// interface ISEAnimationEvents wrapper method implementations
//

#pragma implementation_key(2005)
inline HRESULT TGFramework::ISEAnimationEvents::AnimationEvent ( enum AnimationEventConstants AnimationEventType, int nFrame ) {
    HRESULT _hr = raw_AnimationEvent(AnimationEventType, nFrame);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _IViewAuto wrapper method implementations
//

#pragma implementation_key(2006)
inline HRESULT TGFramework::_IViewAuto::Fit ( ) {
    HRESULT _hr = raw_Fit();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2007)
inline TGFramework::WindowPtr TGFramework::_IViewAuto::GetWindow ( ) {
    struct Window * _result = 0;
    HRESULT _hr = get_Window(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return WindowPtr(_result, false);
}

#pragma implementation_key(2008)
inline HRESULT TGFramework::_IViewAuto::ModelToDC ( SAFEARRAY * * Matrix ) {
    HRESULT _hr = raw_ModelToDC(Matrix);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2009)
inline HRESULT TGFramework::_IViewAuto::ModelToView ( SAFEARRAY * * Matrix ) {
    HRESULT _hr = raw_ModelToView(Matrix);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2010)
inline HRESULT TGFramework::_IViewAuto::ViewToGLProjection ( SAFEARRAY * * Matrix ) {
    HRESULT _hr = raw_ViewToGLProjection(Matrix);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2011)
inline HRESULT TGFramework::_IViewAuto::Update ( ) {
    HRESULT _hr = raw_Update();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2012)
inline HRESULT TGFramework::_IViewAuto::ShowDrawDC ( ) {
    HRESULT _hr = raw_ShowDrawDC();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2013)
inline HRESULT TGFramework::_IViewAuto::SwapBuffers ( ) {
    HRESULT _hr = raw_SwapBuffers();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2014)
inline long TGFramework::_IViewAuto::GetDrawDC ( ) {
    long _result = 0;
    HRESULT _hr = get_DrawDC(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2015)
inline HRESULT TGFramework::_IViewAuto::GetCamera ( double * EyeX, double * EyeY, double * EyeZ, double * TargetX, double * TargetY, double * TargetZ, double * UpX, double * UpY, double * UpZ, VARIANT_BOOL * Perspective, double * ScaleOrAngle ) {
    HRESULT _hr = raw_GetCamera(EyeX, EyeY, EyeZ, TargetX, TargetY, TargetZ, UpX, UpY, UpZ, Perspective, ScaleOrAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2016)
inline HRESULT TGFramework::_IViewAuto::BeginCameraDynamics ( ) {
    HRESULT _hr = raw_BeginCameraDynamics();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2017)
inline HRESULT TGFramework::_IViewAuto::SetCamera ( double EyeX, double EyeY, double EyeZ, double TargetX, double TargetY, double TargetZ, double UpX, double UpY, double UpZ, VARIANT_BOOL Perspective, double ScaleOrAngle ) {
    HRESULT _hr = raw_SetCamera(EyeX, EyeY, EyeZ, TargetX, TargetY, TargetZ, UpX, UpY, UpZ, Perspective, ScaleOrAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2018)
inline HRESULT TGFramework::_IViewAuto::EndCameraDynamics ( ) {
    HRESULT _hr = raw_EndCameraDynamics();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2019)
inline HRESULT TGFramework::_IViewAuto::RotateCamera ( double Angle, double CenterX, double CenterY, double CenterZ, double AxisX, double AxisY, double AxisZ ) {
    HRESULT _hr = raw_RotateCamera(Angle, CenterX, CenterY, CenterZ, AxisX, AxisY, AxisZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2020)
inline HRESULT TGFramework::_IViewAuto::PanCamera ( int dX, int dY ) {
    HRESULT _hr = raw_PanCamera(dX, dY);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2021)
inline HRESULT TGFramework::_IViewAuto::ZoomCamera ( double __MIDL___IViewAuto0000 ) {
    HRESULT _hr = raw_ZoomCamera(__MIDL___IViewAuto0000);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2022)
inline HRESULT TGFramework::_IViewAuto::OrientCamera ( int cmdtype, int X1, int Y1, int X2, int Y2, int X3, int Y3 ) {
    HRESULT _hr = raw_OrientCamera(cmdtype, X1, Y1, X2, Y2, X3, Y3);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2023)
inline IUnknownPtr TGFramework::_IViewAuto::GetViewEvents ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_ViewEvents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2024)
inline IUnknownPtr TGFramework::_IViewAuto::GetDisplayEvents ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_DisplayEvents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2025)
inline IUnknownPtr TGFramework::_IViewAuto::GetGLDisplayEvents ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_GLDisplayEvents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2026)
inline IUnknownPtr TGFramework::_IViewAuto::GetRenderEvents ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_RenderEvents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2027)
inline IUnknownPtr TGFramework::_IViewAuto::GetAnimationEvents ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_AnimationEvents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2028)
inline VARIANT_BOOL TGFramework::_IViewAuto::GetDisplayEnabled ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2029)
inline void TGFramework::_IViewAuto::PutDisplayEnabled ( VARIANT_BOOL Enabled ) {
    HRESULT _hr = put_DisplayEnabled(Enabled);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2030)
inline VARIANT_BOOL TGFramework::_IViewAuto::GetCullingEnabled ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CullingEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2031)
inline void TGFramework::_IViewAuto::PutCullingEnabled ( VARIANT_BOOL Enabled ) {
    HRESULT _hr = put_CullingEnabled(Enabled);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2032)
inline VARIANT_BOOL TGFramework::_IViewAuto::GetStyleFallbackEnabled ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_StyleFallbackEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2033)
inline void TGFramework::_IViewAuto::PutStyleFallbackEnabled ( VARIANT_BOOL Enabled ) {
    HRESULT _hr = put_StyleFallbackEnabled(Enabled);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2034)
inline int TGFramework::_IViewAuto::GetSharpnessLevelCount ( ) {
    int _result = 0;
    HRESULT _hr = get_SharpnessLevelCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2035)
inline int TGFramework::_IViewAuto::GetSharpnessLevel ( ) {
    int _result = 0;
    HRESULT _hr = get_SharpnessLevel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2036)
inline void TGFramework::_IViewAuto::PutSharpnessLevel ( int Level ) {
    HRESULT _hr = put_SharpnessLevel(Level);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2037)
inline VARIANT_BOOL TGFramework::_IViewAuto::GetStereoEnabled ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_StereoEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2038)
inline void TGFramework::_IViewAuto::PutStereoEnabled ( VARIANT_BOOL Stereo ) {
    HRESULT _hr = put_StereoEnabled(Stereo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2039)
inline double TGFramework::_IViewAuto::GetStereoAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_StereoAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2040)
inline void TGFramework::_IViewAuto::PutStereoAngle ( double Angle ) {
    HRESULT _hr = put_StereoAngle(Angle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2041)
inline double TGFramework::_IViewAuto::GetStereoDeviation ( ) {
    double _result = 0;
    HRESULT _hr = get_StereoDeviation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2042)
inline void TGFramework::_IViewAuto::PutStereoDeviation ( double Deviation ) {
    HRESULT _hr = put_StereoDeviation(Deviation);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2043)
inline HRESULT TGFramework::_IViewAuto::TransformModelToDC ( double ModelX, double ModelY, double ModelZ, long * DeviceX, long * DeviceY ) {
    HRESULT _hr = raw_TransformModelToDC(ModelX, ModelY, ModelZ, DeviceX, DeviceY);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2044)
inline HRESULT TGFramework::_IViewAuto::TransformDCToModel ( long DeviceX, long DeviceY, double * ModelX, double * ModelY, double * ModelZ ) {
    HRESULT _hr = raw_TransformDCToModel(DeviceX, DeviceY, ModelX, ModelY, ModelZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2045)
inline HRESULT TGFramework::_IViewAuto::TransformModelToView ( double ModelX, double ModelY, double ModelZ, double * ViewX, double * ViewY, double * ViewZ ) {
    HRESULT _hr = raw_TransformModelToView(ModelX, ModelY, ModelZ, ViewX, ViewY, ViewZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2046)
inline HRESULT TGFramework::_IViewAuto::TransformViewToModel ( double ViewX, double ViewY, double ViewZ, double * ModelX, double * ModelY, double * ModelZ ) {
    HRESULT _hr = raw_TransformViewToModel(ViewX, ViewY, ViewZ, ModelX, ModelY, ModelZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2047)
inline HRESULT TGFramework::_IViewAuto::TransformGLProjectionToView ( double GLX, double GLY, double GLlZ, double * ViewX, double * ViewY, double * ViewZ ) {
    HRESULT _hr = raw_TransformGLProjectionToView(GLX, GLY, GLlZ, ViewX, ViewY, ViewZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2048)
inline HRESULT TGFramework::_IViewAuto::TransformViewToGLProjection ( double ViewX, double ViewY, double ViewZ, double * GLX, double * GLY, double * GLZ ) {
    HRESULT _hr = raw_TransformViewToGLProjection(ViewX, ViewY, ViewZ, GLX, GLY, GLZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2049)
inline HRESULT TGFramework::_IViewAuto::GetCounter ( int Type, VARIANT_BOOL bReset, double * dCounter ) {
    HRESULT _hr = raw_GetCounter(Type, bReset, dCounter);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2050)
inline VARIANT_BOOL TGFramework::_IViewAuto::GetGDIBufferModified ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_GDIBufferModified(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2051)
inline void TGFramework::_IViewAuto::PutGDIBufferModified ( VARIANT_BOOL GDIBufferModified ) {
    HRESULT _hr = put_GDIBufferModified(GDIBufferModified);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2052)
inline HRESULT TGFramework::_IViewAuto::SaveAsImage ( _bstr_t Filename, const _variant_t & Width, const _variant_t & Height, const _variant_t & AltViewStyle, const _variant_t & Resolution, const _variant_t & ColorDepth, enum SeImageQualityType ImageQuality, VARIANT_BOOL Invert ) {
    HRESULT _hr = raw_SaveAsImage(Filename, Width, Height, AltViewStyle, Resolution, ColorDepth, ImageQuality, Invert);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2053)
inline IDispatchPtr TGFramework::_IViewAuto::GetViewStyle ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_ViewStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2054)
inline void TGFramework::_IViewAuto::PutViewStyle ( IDispatch * ViewStyle ) {
    HRESULT _hr = put_ViewStyle(ViewStyle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2055)
inline _bstr_t TGFramework::_IViewAuto::GetStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2056)
inline void TGFramework::_IViewAuto::PutStyle ( _bstr_t Style ) {
    HRESULT _hr = put_Style(Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2057)
inline HRESULT TGFramework::_IViewAuto::SetRenderMode ( const _variant_t & mode ) {
    HRESULT _hr = raw_SetRenderMode(mode);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2058)
inline enum TGFramework::SeRenderModeType TGFramework::_IViewAuto::GetRenderModeType ( ) {
    enum SeRenderModeType _result;
    HRESULT _hr = get_RenderModeType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2059)
inline void TGFramework::_IViewAuto::PutRenderModeType ( enum SeRenderModeType pbEnabled ) {
    HRESULT _hr = put_RenderModeType(pbEnabled);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2060)
inline VARIANT_BOOL TGFramework::_IViewAuto::GetSilhouettesEnabled ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SilhouettesEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2061)
inline void TGFramework::_IViewAuto::PutSilhouettesEnabled ( VARIANT_BOOL pbEnabled ) {
    HRESULT _hr = put_SilhouettesEnabled(pbEnabled);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2062)
inline VARIANT_BOOL TGFramework::_IViewAuto::GetSectionPlanesEnabled ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SectionPlanesEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2063)
inline void TGFramework::_IViewAuto::PutSectionPlanesEnabled ( VARIANT_BOOL pbEnabled ) {
    HRESULT _hr = put_SectionPlanesEnabled(pbEnabled);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2064)
inline HRESULT TGFramework::_IViewAuto::SetDisplayDepths ( double dFront, double dBack, VARIANT * FrontFaceStyle, VARIANT * BackFaceStyle, VARIANT * Monument ) {
    HRESULT _hr = raw_SetDisplayDepths(dFront, dBack, FrontFaceStyle, BackFaceStyle, Monument);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2065)
inline HRESULT TGFramework::_IViewAuto::GetDisplayDepths ( double * pdFront, double * pdBack, VARIANT * FrontFaceStyle, VARIANT * BackFaceStyle, VARIANT * Monument ) {
    HRESULT _hr = raw_GetDisplayDepths(pdFront, pdBack, FrontFaceStyle, BackFaceStyle, Monument);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2066)
inline HRESULT TGFramework::_IViewAuto::SetSectionPlanes ( long nPlanes, VARIANT * Positions, VARIANT * Normals, VARIANT * FaceStyles ) {
    HRESULT _hr = raw_SetSectionPlanes(nPlanes, Positions, Normals, FaceStyles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2067)
inline HRESULT TGFramework::_IViewAuto::GetSectionPlanes ( long * pnPlanes, VARIANT * Positions, VARIANT * Normals, VARIANT * FaceStyles ) {
    HRESULT _hr = raw_GetSectionPlanes(pnPlanes, Positions, Normals, FaceStyles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2068)
inline HRESULT TGFramework::_IViewAuto::SetAttribute ( long Attribute, const _variant_t & AttributeData ) {
    HRESULT _hr = raw_SetAttribute(Attribute, AttributeData);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2069)
inline HRESULT TGFramework::_IViewAuto::GetAttribute ( long Attribute, VARIANT * AttributeData ) {
    HRESULT _hr = raw_GetAttribute(Attribute, AttributeData);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2070)
inline HRESULT TGFramework::_IViewAuto::ClearRotationFocus ( ) {
    HRESULT _hr = raw_ClearRotationFocus();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2071)
inline HRESULT TGFramework::_IViewAuto::GetRotationFocus ( double * pdPointX, double * pdPointY, double * pdPointZ, double * pdDirectionX, double * pdDirectionZ, double * pdDirectionY, double * pdFront, double * pdBack, double * pdRadius, long * puOptions ) {
    HRESULT _hr = raw_GetRotationFocus(pdPointX, pdPointY, pdPointZ, pdDirectionX, pdDirectionZ, pdDirectionY, pdFront, pdBack, pdRadius, puOptions);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2072)
inline HRESULT TGFramework::_IViewAuto::SetRotationPoint ( double dPointX, double dPointY, double dPointZ ) {
    HRESULT _hr = raw_SetRotationPoint(dPointX, dPointY, dPointZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2073)
inline HRESULT TGFramework::_IViewAuto::SetRotationAxis ( double dPointX, double dPointY, double dPointZ, double dDirectionX, double dDirectionY, double dDirectionZ ) {
    HRESULT _hr = raw_SetRotationAxis(dPointX, dPointY, dPointZ, dDirectionX, dDirectionY, dDirectionZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2074)
inline HRESULT TGFramework::_IViewAuto::SetRotationFocus ( double dPointX, double dPointY, double dPointZ, double dDirectionX, double dDirectionZ, double dDirectionY, double dFront, double dBack, double dRadius, long uOptions ) {
    HRESULT _hr = raw_SetRotationFocus(dPointX, dPointY, dPointZ, dDirectionX, dDirectionZ, dDirectionY, dFront, dBack, dRadius, uOptions);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2075)
inline HRESULT TGFramework::_IViewAuto::Locate ( long lPointX, long lPointY, long lRadius, double * pdHitPointX, double * pdHitPointY, double * pdHitPointZ ) {
    HRESULT _hr = raw_Locate(lPointX, lPointY, lRadius, pdHitPointX, pdHitPointY, pdHitPointZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2076)
inline HRESULT TGFramework::_IViewAuto::GetModelRange ( double * pdLowX, double * pdLowY, double * pdLowZ, double * pdHighX, double * pdHighY, double * pdHighZ ) {
    HRESULT _hr = raw_GetModelRange(pdLowX, pdLowY, pdLowZ, pdHighX, pdHighY, pdHighZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2077)
inline HRESULT TGFramework::_IViewAuto::OrientCameraEx ( long lFlags, long lButtons, double dX, double dY, double dZ, double dYaw, double dPitch, double dRoll ) {
    HRESULT _hr = raw_OrientCameraEx(lFlags, lButtons, dX, dY, dZ, dYaw, dPitch, dRoll);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2078)
inline HRESULT TGFramework::_IViewAuto::GetCameraEx ( long * lFlags, double * dEyeX, double * dEyeY, double * dEyeZ, double * dTargetX, double * dTargetY, double * dTargetZ, double * dUpX, double * dUpY, double * dUpZ, double * dNearClip, double * dFarClip, double * dFrameWidth, double * dFrameHeight, double * dFrameEyeX, double * dFrameEyeY, double * dFrameScale ) {
    HRESULT _hr = raw_GetCameraEx(lFlags, dEyeX, dEyeY, dEyeZ, dTargetX, dTargetY, dTargetZ, dUpX, dUpY, dUpZ, dNearClip, dFarClip, dFrameWidth, dFrameHeight, dFrameEyeX, dFrameEyeY, dFrameScale);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2079)
inline HRESULT TGFramework::_IViewAuto::SetCameraEx ( long lFlags, double dEyeX, double dEyeY, double dEyeZ, double dTargetX, double dTargetY, double dTargetZ, double dUpX, double dUpY, double dUpZ, double dNearClip, double dFarClip, double dFrameWidth, double dFrameHeight, double dFrameEyeX, double dFrameEyeY, double dFrameScale ) {
    HRESULT _hr = raw_SetCameraEx(lFlags, dEyeX, dEyeY, dEyeZ, dTargetX, dTargetY, dTargetZ, dUpX, dUpY, dUpZ, dNearClip, dFarClip, dFrameWidth, dFrameHeight, dFrameEyeX, dFrameEyeY, dFrameScale);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2080)
inline HRESULT TGFramework::_IViewAuto::SaveCurrentView ( const _variant_t & Name ) {
    HRESULT _hr = raw_SaveCurrentView(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2081)
inline HRESULT TGFramework::_IViewAuto::ApplyNamedView ( const _variant_t & Name ) {
    HRESULT _hr = raw_ApplyNamedView(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2082)
inline HRESULT TGFramework::_IViewAuto::AreaZoomCamera ( int X1, int Y1, int X2, int Y2 ) {
    HRESULT _hr = raw_AreaZoomCamera(X1, Y1, X2, Y2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2083)
inline HRESULT TGFramework::_IViewAuto::CreateUserRange ( long * pidUserRange ) {
    HRESULT _hr = raw_CreateUserRange(pidUserRange);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2084)
inline HRESULT TGFramework::_IViewAuto::DeleteUserRange ( long idUserRange ) {
    HRESULT _hr = raw_DeleteUserRange(idUserRange);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2085)
inline HRESULT TGFramework::_IViewAuto::GetUserRange ( long idUserRange, double * pdLowX, double * pdLowY, double * pdLowZ, double * pdHighX, double * pdHighY, double * pdHighZ ) {
    HRESULT _hr = raw_GetUserRange(idUserRange, pdLowX, pdLowY, pdLowZ, pdHighX, pdHighY, pdHighZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2086)
inline HRESULT TGFramework::_IViewAuto::SetUserRange ( long idUserRange, double dLowX, double dLowY, double dLowZ, double dHighX, double dHighY, double dHighZ ) {
    HRESULT _hr = raw_SetUserRange(idUserRange, dLowX, dLowY, dLowZ, dHighX, dHighY, dHighZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2087)
inline unsigned long TGFramework::_IViewAuto::GetMovieFrameRate ( ) {
    unsigned long _result = 0;
    HRESULT _hr = get_MovieFrameRate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2088)
inline void TGFramework::_IViewAuto::PutMovieFrameRate ( unsigned long pdwMovieFrameRate ) {
    HRESULT _hr = put_MovieFrameRate(pdwMovieFrameRate);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2089)
inline unsigned long TGFramework::_IViewAuto::GetMovieBitRate ( ) {
    unsigned long _result = 0;
    HRESULT _hr = get_MovieBitRate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2090)
inline void TGFramework::_IViewAuto::PutMovieBitRate ( unsigned long pdwMovieBitRate ) {
    HRESULT _hr = put_MovieBitRate(pdwMovieBitRate);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2091)
inline _bstr_t TGFramework::_IViewAuto::GetMovieCodec ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_MovieCodec(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2092)
inline void TGFramework::_IViewAuto::PutMovieCodec ( _bstr_t pCodec ) {
    HRESULT _hr = put_MovieCodec(pCodec);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2093)
inline unsigned long TGFramework::_IViewAuto::GetMovieQuality ( ) {
    unsigned long _result = 0;
    HRESULT _hr = get_MovieQuality(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2094)
inline void TGFramework::_IViewAuto::PutMovieQuality ( unsigned long pdwMovieQuality ) {
    HRESULT _hr = put_MovieQuality(pdwMovieQuality);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2095)
inline _bstr_t TGFramework::_IViewAuto::GetMovieTitle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_MovieTitle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2096)
inline void TGFramework::_IViewAuto::PutMovieTitle ( _bstr_t pTitle ) {
    HRESULT _hr = put_MovieTitle(pTitle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2097)
inline _bstr_t TGFramework::_IViewAuto::GetMovieSubTitle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_MovieSubTitle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2098)
inline void TGFramework::_IViewAuto::PutMovieSubTitle ( _bstr_t pSubTitle ) {
    HRESULT _hr = put_MovieSubTitle(pSubTitle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2099)
inline _bstr_t TGFramework::_IViewAuto::GetMovieCopyright ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_MovieCopyright(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2100)
inline void TGFramework::_IViewAuto::PutMovieCopyright ( _bstr_t pCopyright ) {
    HRESULT _hr = put_MovieCopyright(pCopyright);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2101)
inline _bstr_t TGFramework::_IViewAuto::GetMovieAuthor ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_MovieAuthor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2102)
inline void TGFramework::_IViewAuto::PutMovieAuthor ( _bstr_t pAuthor ) {
    HRESULT _hr = put_MovieAuthor(pAuthor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2103)
inline _bstr_t TGFramework::_IViewAuto::GetMovieAuthorURL ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_MovieAuthorURL(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2104)
inline void TGFramework::_IViewAuto::PutMovieAuthorURL ( _bstr_t pAuthorURL ) {
    HRESULT _hr = put_MovieAuthorURL(pAuthorURL);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2105)
inline _bstr_t TGFramework::_IViewAuto::GetMovieDescription ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_MovieDescription(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2106)
inline void TGFramework::_IViewAuto::PutMovieDescription ( _bstr_t pDescription ) {
    HRESULT _hr = put_MovieDescription(pDescription);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2107)
inline HRESULT TGFramework::_IViewAuto::GetAvailableMovieCodecs ( SAFEARRAY * * AvailableCodecs ) {
    HRESULT _hr = raw_GetAvailableMovieCodecs(AvailableCodecs);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2108)
inline HRESULT TGFramework::_IViewAuto::SetMovieResolution ( enum seMovieStandardResolutionConstants StandardMovieResolution ) {
    HRESULT _hr = raw_SetMovieResolution(StandardMovieResolution);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2109)
inline HRESULT TGFramework::_IViewAuto::SetCustomMovieResolution ( int nWidth, int nHeight ) {
    HRESULT _hr = raw_SetCustomMovieResolution(nWidth, nHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2110)
inline HRESULT TGFramework::_IViewAuto::CreateMovieRecorder ( enum seMovieFormatConstants Format ) {
    HRESULT _hr = raw_CreateMovieRecorder(Format);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2111)
inline HRESULT TGFramework::_IViewAuto::DestroyMovieRecorder ( ) {
    HRESULT _hr = raw_DestroyMovieRecorder();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2112)
inline HRESULT TGFramework::_IViewAuto::BeginMovieRecording ( _bstr_t Filename ) {
    HRESULT _hr = raw_BeginMovieRecording(Filename);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2113)
inline HRESULT TGFramework::_IViewAuto::AddFrameToMovie ( VARIANT_BOOL KeyFrame, int * pNewFrameCount ) {
    HRESULT _hr = raw_AddFrameToMovie(KeyFrame, pNewFrameCount);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2114)
inline HRESULT TGFramework::_IViewAuto::EndMovieRecording ( ) {
    HRESULT _hr = raw_EndMovieRecording();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2115)
inline HRESULT TGFramework::_IViewAuto::RangeZoomCamera ( double dLowX, double dLowY, double dLowZ, double dHighX, double dHighY, double dHighZ ) {
    HRESULT _hr = raw_RangeZoomCamera(dLowX, dLowY, dLowZ, dHighX, dHighY, dHighZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2116)
inline HRESULT TGFramework::_IViewAuto::UserRangeZoomCamera ( long idUserRange ) {
    HRESULT _hr = raw_UserRangeZoomCamera(idUserRange);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2117)
inline HRESULT TGFramework::_IViewAuto::RefreshView ( long nOptions ) {
    HRESULT _hr = raw_RefreshView(nOptions);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2118)
inline enum TGFramework::seSharpenLevelConstants TGFramework::_IViewAuto::GetSharpenLevel ( ) {
    enum seSharpenLevelConstants _result;
    HRESULT _hr = get_SharpenLevel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2119)
inline void TGFramework::_IViewAuto::PutSharpenLevel ( enum seSharpenLevelConstants peLevel ) {
    HRESULT _hr = put_SharpenLevel(peLevel);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2120)
inline _variant_t TGFramework::_IViewAuto::GetSectionPlanesOptions ( ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = get_SectionPlanesOptions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(2121)
inline void TGFramework::_IViewAuto::PutSectionPlanesOptions ( const _variant_t & Options ) {
    HRESULT _hr = put_SectionPlanesOptions(Options);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2122)
inline HRESULT TGFramework::_IViewAuto::SetSectionPlanesParams ( const _variant_t & Options, const _variant_t & PlaneCount, VARIANT * Positions, VARIANT * Normals, VARIANT * Colors ) {
    HRESULT _hr = raw_SetSectionPlanesParams(Options, PlaneCount, Positions, Normals, Colors);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2123)
inline HRESULT TGFramework::_IViewAuto::GetSectionPlanesParams ( VARIANT * Options, VARIANT * PlaneCount, VARIANT * Positions, VARIANT * Normals, VARIANT * Colors ) {
    HRESULT _hr = raw_GetSectionPlanesParams(Options, PlaneCount, Positions, Normals, Colors);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface NamedView wrapper method implementations
//

#pragma implementation_key(2124)
inline _bstr_t TGFramework::NamedView::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2125)
inline void TGFramework::NamedView::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2126)
inline _bstr_t TGFramework::NamedView::GetDescription ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2127)
inline void TGFramework::NamedView::PutDescription ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2128)
inline HRESULT TGFramework::NamedView::GetCamera ( double * EyeX, double * EyeY, double * EyeZ, double * TargetX, double * TargetY, double * TargetZ, double * UpX, double * UpY, double * UpZ, VARIANT_BOOL * Perspective, double * ScaleOrAngle ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x400b\x4005", EyeX, EyeY, EyeZ, TargetX, TargetY, TargetZ, UpX, UpY, UpZ, Perspective, ScaleOrAngle);
}

#pragma implementation_key(2129)
inline HRESULT TGFramework::NamedView::SetCamera ( double EyeX, double EyeY, double EyeZ, double TargetX, double TargetY, double TargetZ, double UpX, double UpY, double UpZ, VARIANT_BOOL Perspective, double ScaleOrAngle ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x000b\x0005", EyeX, EyeY, EyeZ, TargetX, TargetY, TargetZ, UpX, UpY, UpZ, Perspective, ScaleOrAngle);
}

#pragma implementation_key(2130)
inline HRESULT TGFramework::NamedView::GetCameraEx ( long * plFlags, double * pdEyeX, double * pdEyeY, double * pdEyeZ, double * pdTargetX, double * pdTargetY, double * pdTargetZ, double * pdUpX, double * pdUpY, double * pdUpZ, double * pdNearClip, double * pdFarClip, double * pdFrameWidth, double * pdFrameHeight, double * pdFrameEyeX, double * pdFrameEyeY, double * pdFrameScale ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005", plFlags, pdEyeX, pdEyeY, pdEyeZ, pdTargetX, pdTargetY, pdTargetZ, pdUpX, pdUpY, pdUpZ, pdNearClip, pdFarClip, pdFrameWidth, pdFrameHeight, pdFrameEyeX, pdFrameEyeY, pdFrameScale);
}

#pragma implementation_key(2131)
inline HRESULT TGFramework::NamedView::SetCameraEx ( long lFlags, double dEyeX, double dEyeY, double dEyeZ, double dTargetX, double dTargetY, double dTargetZ, double dUpX, double dUpY, double dUpZ, double dNearClip, double dFarClip, double dFrameWidth, double dFrameHeight, double dFrameEyeX, double dFrameEyeY, double dFrameScale ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005", lFlags, dEyeX, dEyeY, dEyeZ, dTargetX, dTargetY, dTargetZ, dUpX, dUpY, dUpZ, dNearClip, dFarClip, dFrameWidth, dFrameHeight, dFrameEyeX, dFrameEyeY, dFrameScale);
}

//
// interface _INamedViewsAuto wrapper method implementations
//

#pragma implementation_key(2132)
inline long TGFramework::_INamedViewsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2133)
inline SAFEARRAY * TGFramework::_INamedViewsAuto::GetNames ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = get_Names(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2134)
inline TGFramework::NamedViewPtr TGFramework::_INamedViewsAuto::Create ( _bstr_t Name ) {
    struct NamedView * _result = 0;
    HRESULT _hr = raw_Create(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return NamedViewPtr(_result, false);
}

#pragma implementation_key(2135)
inline TGFramework::NamedViewPtr TGFramework::_INamedViewsAuto::GetByName ( _bstr_t Name ) {
    struct NamedView * _result = 0;
    HRESULT _hr = raw_GetByName(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return NamedViewPtr(_result, false);
}

#pragma implementation_key(2136)
inline HRESULT TGFramework::_INamedViewsAuto::Remove ( _bstr_t Name ) {
    HRESULT _hr = raw_Remove(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2137)
inline HRESULT TGFramework::_INamedViewsAuto::Rename ( _bstr_t currName, _bstr_t NewName ) {
    HRESULT _hr = raw_Rename(currName, NewName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2138)
inline IUnknownPtr TGFramework::_INamedViewsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2139)
inline TGFramework::NamedViewPtr TGFramework::_INamedViewsAuto::Item ( const _variant_t & Index ) {
    struct NamedView * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return NamedViewPtr(_result, false);
}

//
// interface _INamedViewAuto wrapper method implementations
//

#pragma implementation_key(2140)
inline _bstr_t TGFramework::_INamedViewAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2141)
inline void TGFramework::_INamedViewAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2142)
inline _bstr_t TGFramework::_INamedViewAuto::GetDescription ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Description(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2143)
inline void TGFramework::_INamedViewAuto::PutDescription ( _bstr_t Description ) {
    HRESULT _hr = put_Description(Description);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2144)
inline HRESULT TGFramework::_INamedViewAuto::GetCamera ( double * EyeX, double * EyeY, double * EyeZ, double * TargetX, double * TargetY, double * TargetZ, double * UpX, double * UpY, double * UpZ, VARIANT_BOOL * Perspective, double * ScaleOrAngle ) {
    HRESULT _hr = raw_GetCamera(EyeX, EyeY, EyeZ, TargetX, TargetY, TargetZ, UpX, UpY, UpZ, Perspective, ScaleOrAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2145)
inline HRESULT TGFramework::_INamedViewAuto::SetCamera ( double EyeX, double EyeY, double EyeZ, double TargetX, double TargetY, double TargetZ, double UpX, double UpY, double UpZ, VARIANT_BOOL Perspective, double ScaleOrAngle ) {
    HRESULT _hr = raw_SetCamera(EyeX, EyeY, EyeZ, TargetX, TargetY, TargetZ, UpX, UpY, UpZ, Perspective, ScaleOrAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2146)
inline HRESULT TGFramework::_INamedViewAuto::GetCameraEx ( long * plFlags, double * pdEyeX, double * pdEyeY, double * pdEyeZ, double * pdTargetX, double * pdTargetY, double * pdTargetZ, double * pdUpX, double * pdUpY, double * pdUpZ, double * pdNearClip, double * pdFarClip, double * pdFrameWidth, double * pdFrameHeight, double * pdFrameEyeX, double * pdFrameEyeY, double * pdFrameScale ) {
    HRESULT _hr = raw_GetCameraEx(plFlags, pdEyeX, pdEyeY, pdEyeZ, pdTargetX, pdTargetY, pdTargetZ, pdUpX, pdUpY, pdUpZ, pdNearClip, pdFarClip, pdFrameWidth, pdFrameHeight, pdFrameEyeX, pdFrameEyeY, pdFrameScale);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2147)
inline HRESULT TGFramework::_INamedViewAuto::SetCameraEx ( long lFlags, double dEyeX, double dEyeY, double dEyeZ, double dTargetX, double dTargetY, double dTargetZ, double dUpX, double dUpY, double dUpZ, double dNearClip, double dFarClip, double dFrameWidth, double dFrameHeight, double dFrameEyeX, double dFrameEyeY, double dFrameScale ) {
    HRESULT _hr = raw_SetCameraEx(lFlags, dEyeX, dEyeY, dEyeZ, dTargetX, dTargetY, dTargetZ, dUpX, dUpY, dUpZ, dNearClip, dFarClip, dFrameWidth, dFrameHeight, dFrameEyeX, dFrameEyeY, dFrameScale);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface UnitOfMeasure wrapper method implementations
//

#pragma implementation_key(2148)
inline enum TGFramework::UnitTypeConstants TGFramework::UnitOfMeasure::GetType ( ) {
    enum UnitTypeConstants _result;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2149)
inline int TGFramework::UnitOfMeasure::GetUnits ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2150)
inline void TGFramework::UnitOfMeasure::PutUnits ( int _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2151)
inline int TGFramework::UnitOfMeasure::GetPrecision ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2152)
inline void TGFramework::UnitOfMeasure::PutPrecision ( int _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

//
// interface _IUnitsOfMeasureAuto wrapper method implementations
//

#pragma implementation_key(2153)
inline _variant_t TGFramework::_IUnitsOfMeasureAuto::ParseUnit ( int Index, _bstr_t UnitString ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = raw_ParseUnit(Index, UnitString, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(2154)
inline _variant_t TGFramework::_IUnitsOfMeasureAuto::FormatUnit ( int Index, double Dbus, const _variant_t & PrecisionConstant ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = raw_FormatUnit(Index, Dbus, PrecisionConstant, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(2155)
inline TGFramework::ApplicationPtr TGFramework::_IUnitsOfMeasureAuto::GetApplication ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(2156)
inline IDispatchPtr TGFramework::_IUnitsOfMeasureAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2157)
inline long TGFramework::_IUnitsOfMeasureAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2158)
inline IUnknownPtr TGFramework::_IUnitsOfMeasureAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2159)
inline TGFramework::UnitOfMeasurePtr TGFramework::_IUnitsOfMeasureAuto::Item ( const _variant_t & Index ) {
    struct UnitOfMeasure * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return UnitOfMeasurePtr(_result, false);
}

//
// interface _IUnitOfMeasureAuto wrapper method implementations
//

#pragma implementation_key(2160)
inline enum TGFramework::UnitTypeConstants TGFramework::_IUnitOfMeasureAuto::GetType ( ) {
    enum UnitTypeConstants _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2161)
inline int TGFramework::_IUnitOfMeasureAuto::GetUnits ( ) {
    int _result = 0;
    HRESULT _hr = get_Units(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2162)
inline void TGFramework::_IUnitOfMeasureAuto::PutUnits ( int Units ) {
    HRESULT _hr = put_Units(Units);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2163)
inline int TGFramework::_IUnitOfMeasureAuto::GetPrecision ( ) {
    int _result = 0;
    HRESULT _hr = get_Precision(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2164)
inline void TGFramework::_IUnitOfMeasureAuto::PutPrecision ( int Precision ) {
    HRESULT _hr = put_Precision(Precision);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface _ICPDInitializerBiDMAuto wrapper method implementations
//

#pragma implementation_key(2165)
inline HRESULT TGFramework::_ICPDInitializerBiDMAuto::GetDocuments ( SAFEARRAY * * psaDocs ) {
    HRESULT _hr = raw_GetDocuments(psaDocs);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2166)
inline HRESULT TGFramework::_ICPDInitializerBiDMAuto::GetPropertiesInfo ( _bstr_t bstrDocName, VARIANT * pvPropInfo ) {
    HRESULT _hr = raw_GetPropertiesInfo(bstrDocName, pvPropInfo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2167)
inline HRESULT TGFramework::_ICPDInitializerBiDMAuto::SetPropertiesInfo ( _bstr_t bstrDocName, const _variant_t & vPropInfo ) {
    HRESULT _hr = raw_SetPropertiesInfo(bstrDocName, vPropInfo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2168)
inline HRESULT TGFramework::_ICPDInitializerBiDMAuto::SetControlsBehavior ( VARIANT_BOOL vbDisableAssignAllButtonAndMenu, VARIANT_BOOL vbDisableDocumentNumberCell, VARIANT_BOOL vbDisableRevisionIDCell ) {
    HRESULT _hr = raw_SetControlsBehavior(vbDisableAssignAllButtonAndMenu, vbDisableDocumentNumberCell, vbDisableRevisionIDCell);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface CommandBarPopup wrapper method implementations
//

#pragma implementation_key(2169)
inline IDispatchPtr TGFramework::CommandBarPopup::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x10010001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2170)
inline VARIANT_BOOL TGFramework::CommandBarPopup::GetBeginGroup ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10010002, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2171)
inline void TGFramework::CommandBarPopup::PutBeginGroup ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x10010002, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2172)
inline VARIANT_BOOL TGFramework::CommandBarPopup::GetBuiltIn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10010003, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2173)
inline VARIANT_BOOL TGFramework::CommandBarPopup::GetBuiltInFace ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10010004, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2174)
inline void TGFramework::CommandBarPopup::PutBuiltInFace ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x10010004, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2175)
inline _bstr_t TGFramework::CommandBarPopup::GetCaption ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x10010005, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2176)
inline void TGFramework::CommandBarPopup::PutCaption ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x10010005, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2177)
inline _bstr_t TGFramework::CommandBarPopup::GetDescriptionText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x10010006, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2178)
inline void TGFramework::CommandBarPopup::PutDescriptionText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x10010006, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2179)
inline VARIANT_BOOL TGFramework::CommandBarPopup::GetEnabled ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10010007, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2180)
inline void TGFramework::CommandBarPopup::PutEnabled ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x10010007, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2181)
inline long TGFramework::CommandBarPopup::GetFaceId ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10010008, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2182)
inline void TGFramework::CommandBarPopup::PutFaceId ( long _arg1 ) {
    _com_dispatch_method(this, 0x10010008, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2183)
inline long TGFramework::CommandBarPopup::GetHeight ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10010009, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2184)
inline long TGFramework::CommandBarPopup::GetHelpContextId ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1001000a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2185)
inline void TGFramework::CommandBarPopup::PutHelpContextId ( long _arg1 ) {
    _com_dispatch_method(this, 0x1001000a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2186)
inline _bstr_t TGFramework::CommandBarPopup::GetHelpFile ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1001000b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2187)
inline void TGFramework::CommandBarPopup::PutHelpFile ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1001000b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2188)
inline long TGFramework::CommandBarPopup::GetId ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1001000c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2189)
inline long TGFramework::CommandBarPopup::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1001000d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2190)
inline long TGFramework::CommandBarPopup::GetLeft ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1001000e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2191)
inline _bstr_t TGFramework::CommandBarPopup::GetOnAction ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1001000f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2192)
inline void TGFramework::CommandBarPopup::PutOnAction ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1001000f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2193)
inline _bstr_t TGFramework::CommandBarPopup::GetParameterText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x10010010, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2194)
inline void TGFramework::CommandBarPopup::PutParameterText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x10010010, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2195)
inline TGFramework::CommandBarPtr TGFramework::CommandBarPopup::GetParent ( ) {
    struct CommandBar * _result = 0;
    _com_dispatch_method(this, 0x10010011, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return CommandBarPtr(_result, false);
}

#pragma implementation_key(2196)
inline _bstr_t TGFramework::CommandBarPopup::GetShortcutText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x10010012, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2197)
inline void TGFramework::CommandBarPopup::PutShortcutText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x10010012, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2198)
inline _bstr_t TGFramework::CommandBarPopup::GetTag ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x10010013, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2199)
inline void TGFramework::CommandBarPopup::PutTag ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x10010013, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2200)
inline _bstr_t TGFramework::CommandBarPopup::GetTooltipText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x10010014, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2201)
inline void TGFramework::CommandBarPopup::PutTooltipText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x10010014, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2202)
inline long TGFramework::CommandBarPopup::GetTop ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10010015, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2203)
inline enum TGFramework::SeControlType TGFramework::CommandBarPopup::GetType ( ) {
    enum SeControlType _result;
    _com_dispatch_method(this, 0x10010016, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2204)
inline VARIANT_BOOL TGFramework::CommandBarPopup::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10010017, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2205)
inline void TGFramework::CommandBarPopup::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x10010017, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2206)
inline long TGFramework::CommandBarPopup::GetWidth ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10010018, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2207)
inline HRESULT TGFramework::CommandBarPopup::Delete ( const _variant_t & Temporary ) {
    return _com_dispatch_method(this, 0x10010019, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &Temporary);
}

#pragma implementation_key(2208)
inline HRESULT TGFramework::CommandBarPopup::Execute ( ) {
    return _com_dispatch_method(this, 0x1001001a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2209)
inline HRESULT TGFramework::CommandBarPopup::Help ( ) {
    return _com_dispatch_method(this, 0x1001001b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2210)
inline HRESULT TGFramework::CommandBarPopup::LoadFace ( _bstr_t Face ) {
    return _com_dispatch_method(this, 0x1001001c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Face);
}

#pragma implementation_key(2211)
inline TGFramework::CommandBarPtr TGFramework::CommandBarPopup::GetCommandBar ( ) {
    struct CommandBar * _result = 0;
    _com_dispatch_method(this, 0x10020001, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return CommandBarPtr(_result, false);
}

#pragma implementation_key(2212)
inline TGFramework::CommandBarControlsPtr TGFramework::CommandBarPopup::GetControls ( ) {
    struct CommandBarControls * _result = 0;
    _com_dispatch_method(this, 0x10020002, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return CommandBarControlsPtr(_result, false);
}

//
// interface ISECommandBarPopup wrapper method implementations
//

#pragma implementation_key(2213)
inline TGFramework::CommandBarPtr TGFramework::ISECommandBarPopup::GetCommandBar ( ) {
    struct CommandBar * _result = 0;
    HRESULT _hr = get_CommandBar(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CommandBarPtr(_result, false);
}

#pragma implementation_key(2214)
inline TGFramework::CommandBarControlsPtr TGFramework::ISECommandBarPopup::GetControls ( ) {
    struct CommandBarControls * _result = 0;
    HRESULT _hr = get_Controls(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CommandBarControlsPtr(_result, false);
}

//
// dispinterface DISEBendTableEvents wrapper method implementations
//

#pragma implementation_key(2215)
inline HRESULT TGFramework::DISEBendTableEvents::BendTableStart ( ) {
    HRESULT _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_ERROR, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2216)
inline HRESULT TGFramework::DISEBendTableEvents::BendTableEnd ( ) {
    HRESULT _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_ERROR, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2217)
inline HRESULT TGFramework::DISEBendTableEvents::BendSelect ( long BendIndex, long ColumnId ) {
    HRESULT _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x0003\x0003", BendIndex, ColumnId);
    return _result;
}

#pragma implementation_key(2218)
inline HRESULT TGFramework::DISEBendTableEvents::BendUserDataChanged ( long BendIndex, long ColumnId ) {
    HRESULT _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_ERROR, (void*)&_result, 
        L"\x0003\x0003", BendIndex, ColumnId);
    return _result;
}

//
// interface ISEDocumentEvents wrapper method implementations
//

#pragma implementation_key(2219)
inline HRESULT TGFramework::ISEDocumentEvents::BeforeClose ( ) {
    HRESULT _hr = raw_BeforeClose();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2220)
inline HRESULT TGFramework::ISEDocumentEvents::BeforeSave ( ) {
    HRESULT _hr = raw_BeforeSave();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2221)
inline HRESULT TGFramework::ISEDocumentEvents::AfterSave ( ) {
    HRESULT _hr = raw_AfterSave();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2222)
inline HRESULT TGFramework::ISEDocumentEvents::SelectSetChanged ( IDispatch * SelectSet ) {
    HRESULT _hr = raw_SelectSetChanged(SelectSet);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISEDocumentEventsEx wrapper method implementations
//

#pragma implementation_key(2223)
inline HRESULT TGFramework::ISEDocumentEventsEx::CanSave ( VARIANT_BOOL * bCanSave ) {
    HRESULT _hr = raw_CanSave(bCanSave);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2224)
inline HRESULT TGFramework::ISEDocumentEventsEx::CanClose ( VARIANT_BOOL * bCanClose ) {
    HRESULT _hr = raw_CanClose(bCanClose);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISEBendTableEvents wrapper method implementations
//

#pragma implementation_key(2225)
inline HRESULT TGFramework::ISEBendTableEvents::BendTableStart ( ) {
    HRESULT _hr = raw_BendTableStart();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2226)
inline HRESULT TGFramework::ISEBendTableEvents::BendTableEnd ( ) {
    HRESULT _hr = raw_BendTableEnd();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2227)
inline HRESULT TGFramework::ISEBendTableEvents::BendSelect ( long BendIndex, long ColumnId ) {
    HRESULT _hr = raw_BendSelect(BendIndex, ColumnId);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2228)
inline HRESULT TGFramework::ISEBendTableEvents::BendUserDataChanged ( long BendIndex, long ColumnId ) {
    HRESULT _hr = raw_BendUserDataChanged(BendIndex, ColumnId);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISEModelRecomputeEvents wrapper method implementations
//

#pragma implementation_key(2229)
inline HRESULT TGFramework::ISEModelRecomputeEvents::BeforeRecompute ( ) {
    HRESULT _hr = raw_BeforeRecompute();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2230)
inline HRESULT TGFramework::ISEModelRecomputeEvents::AfterFeatureIsAdded ( enum SeFeatureAddFlag AddFlag, IDispatch * Feature ) {
    HRESULT _hr = raw_AfterFeatureIsAdded(AddFlag, Feature);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2231)
inline HRESULT TGFramework::ISEModelRecomputeEvents::BeforeFeatureIsDeleted ( enum SeFeatureDeleteFlag DeleteFlag, IDispatch * Feature ) {
    HRESULT _hr = raw_BeforeFeatureIsDeleted(DeleteFlag, Feature);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2232)
inline HRESULT TGFramework::ISEModelRecomputeEvents::AfterFeatureIsModified ( enum SeFeatureModifyFlag ModifyFlag, IDispatch * Feature ) {
    HRESULT _hr = raw_AfterFeatureIsModified(ModifyFlag, Feature);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2233)
inline HRESULT TGFramework::ISEModelRecomputeEvents::AfterRecompute ( ) {
    HRESULT _hr = raw_AfterRecompute();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2234)
inline HRESULT TGFramework::ISEModelRecomputeEvents::BeforeModelIsDeleted ( IDispatch * Model ) {
    HRESULT _hr = raw_BeforeModelIsDeleted(Model);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISEDynamicEditEvents wrapper method implementations
//

#pragma implementation_key(2235)
inline HRESULT TGFramework::ISEDynamicEditEvents::BeginDynamicEdit ( ) {
    HRESULT _hr = raw_BeginDynamicEdit();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2236)
inline HRESULT TGFramework::ISEDynamicEditEvents::EndDynamicEdit ( ) {
    HRESULT _hr = raw_EndDynamicEdit();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISEApplicationEventsEx wrapper method implementations
//

#pragma implementation_key(2237)
inline HRESULT TGFramework::ISEApplicationEventsEx::OnCommandUpdateUI ( long CommandID, long * CommandFlags, BSTR * MenuItemTextD ) {
    HRESULT _hr = raw_OnCommandUpdateUI(CommandID, CommandFlags, MenuItemTextD);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISEApplicationEventsEx2 wrapper method implementations
//

#pragma implementation_key(2238)
inline HRESULT TGFramework::ISEApplicationEventsEx2::OnBeforeDocumentOpen ( enum ApplicationBeforeDocumentOpenEvent Context, _bstr_t Filename, VARIANT_BOOL * CancelOpen ) {
    HRESULT _hr = raw_OnBeforeDocumentOpen(Context, Filename, CancelOpen);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISEApplicationReadyEvents wrapper method implementations
//

#pragma implementation_key(2239)
inline HRESULT TGFramework::ISEApplicationReadyEvents::OnApplicationReady ( enum ApplicationReadyEvent Context ) {
    HRESULT _hr = raw_OnApplicationReady(Context);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISEApplicationActiveFrameSwitchingEvents wrapper method implementations
//

#pragma implementation_key(2240)
inline HRESULT TGFramework::ISEApplicationActiveFrameSwitchingEvents::OnApplicationActiveFrameSwitching ( enum ApplicationActiveFrameSwitchingEvent Context, long hWndPreviouslyActiveFrame, long hWndNewlyActiveFrame ) {
    HRESULT _hr = raw_OnApplicationActiveFrameSwitching(Context, hWndPreviouslyActiveFrame, hWndNewlyActiveFrame);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISEApplicationLicenseEvents wrapper method implementations
//

#pragma implementation_key(2241)
inline HRESULT TGFramework::ISEApplicationLicenseEvents::OnApplicationLicense ( enum ApplicationLicenseEvent Context, _bstr_t FeatureName ) {
    HRESULT _hr = raw_OnApplicationLicense(Context, FeatureName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISEApplicationDocumentLoadingEvents wrapper method implementations
//

#pragma implementation_key(2242)
inline HRESULT TGFramework::ISEApplicationDocumentLoadingEvents::OnApplicationDocumentLoading ( _bstr_t TopLevelFilename, enum ApplicationDocumentLoadingEvent Context, unsigned long Level, VARIANT_BOOL * Cancel ) {
    HRESULT _hr = raw_OnApplicationDocumentLoading(TopLevelFilename, Context, Level, Cancel);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISEAddInEventsEx wrapper method implementations
//

#pragma implementation_key(2243)
inline HRESULT TGFramework::ISEAddInEventsEx::OnCommandOnLineHelp ( long HelpCommandID, long CommandID, BSTR * HelpURL ) {
    HRESULT _hr = raw_OnCommandOnLineHelp(HelpCommandID, CommandID, HelpURL);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISEAddInEventsEx2 wrapper method implementations
//

#pragma implementation_key(2244)
inline HRESULT TGFramework::ISEAddInEventsEx2::OnCommand ( long CommandID, enum ShortCutMenuContextConstants Context, enum DocumentTypeConstants ActiveDocumentType, IDispatch * pActiveDocument, IDispatch * pActiveWindow, IDispatch * pActiveSelectSet ) {
    HRESULT _hr = raw_OnCommand(CommandID, Context, ActiveDocumentType, pActiveDocument, pActiveWindow, pActiveSelectSet);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2245)
inline HRESULT TGFramework::ISEAddInEventsEx2::OnCommandHelp ( long hFrameWnd, long HelpCommandID, long CommandID ) {
    HRESULT _hr = raw_OnCommandHelp(hFrameWnd, HelpCommandID, CommandID);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2246)
inline HRESULT TGFramework::ISEAddInEventsEx2::OnCommandUpdateUI ( long CommandID, enum ShortCutMenuContextConstants Context, enum DocumentTypeConstants ActiveDocumentType, IDispatch * pActiveDocument, IDispatch * pActiveWindow, IDispatch * pActiveSelectSet, long * CommandFlags, BSTR * MenuItemText, long * BitmapID ) {
    HRESULT _hr = raw_OnCommandUpdateUI(CommandID, Context, ActiveDocumentType, pActiveDocument, pActiveWindow, pActiveSelectSet, CommandFlags, MenuItemText, BitmapID);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2247)
inline HRESULT TGFramework::ISEAddInEventsEx2::OnCommandOnLineHelp ( long HelpCommandID, long CommandID, BSTR * HelpURL ) {
    HRESULT _hr = raw_OnCommandOnLineHelp(HelpCommandID, CommandID, HelpURL);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISEAddInEdgeBarEvents wrapper method implementations
//

#pragma implementation_key(2248)
inline HRESULT TGFramework::ISEAddInEdgeBarEvents::AddPage ( IDispatch * theDocument ) {
    HRESULT _hr = raw_AddPage(theDocument);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2249)
inline HRESULT TGFramework::ISEAddInEdgeBarEvents::RemovePage ( IDispatch * theDocument ) {
    HRESULT _hr = raw_RemovePage(theDocument);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2250)
inline HRESULT TGFramework::ISEAddInEdgeBarEvents::IsPageDisplayable ( IDispatch * theDocument, _bstr_t EnvironmentCatID, VARIANT_BOOL * vbIsPageDisplayable ) {
    HRESULT _hr = raw_IsPageDisplayable(theDocument, EnvironmentCatID, vbIsPageDisplayable);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISEAddInEdgeBarEventsEx wrapper method implementations
//

#pragma implementation_key(2251)
inline HRESULT TGFramework::ISEAddInEdgeBarEventsEx::AddPage ( IDispatch * theDocument ) {
    HRESULT _hr = raw_AddPage(theDocument);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2252)
inline HRESULT TGFramework::ISEAddInEdgeBarEventsEx::RemovePage ( IDispatch * theDocument ) {
    HRESULT _hr = raw_RemovePage(theDocument);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2253)
inline HRESULT TGFramework::ISEAddInEdgeBarEventsEx::IsPageDisplayable ( IDispatch * theDocument, _bstr_t EnvironmentCatID, VARIANT_BOOL * vbIsPageDisplayable ) {
    HRESULT _hr = raw_IsPageDisplayable(theDocument, EnvironmentCatID, vbIsPageDisplayable);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISEAssemblyChangeEvents wrapper method implementations
//

#pragma implementation_key(2254)
inline HRESULT TGFramework::ISEAssemblyChangeEvents::BeforeChange ( IDispatch * theDocument, IDispatch * Object, enum ObjectType Type, seAssemblyChangeEventsConstants ChangeType ) {
    HRESULT _hr = raw_BeforeChange(theDocument, Object, Type, ChangeType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2255)
inline HRESULT TGFramework::ISEAssemblyChangeEvents::AfterChange ( IDispatch * theDocument, IDispatch * Object, enum ObjectType Type, seAssemblyChangeEventsConstants ChangeType ) {
    HRESULT _hr = raw_AfterChange(theDocument, Object, Type, ChangeType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface DISEAssemblyChangeEvents wrapper method implementations
//

#pragma implementation_key(2256)
inline HRESULT TGFramework::DISEAssemblyChangeEvents::BeforeChange ( IDispatch * theDocument, IDispatch * Object, enum ObjectType Type, seAssemblyChangeEventsConstants ChangeType ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0009\x0003\x0003", theDocument, Object, Type, ChangeType);
}

#pragma implementation_key(2257)
inline HRESULT TGFramework::DISEAssemblyChangeEvents::AfterChange ( IDispatch * theDocument, IDispatch * Object, enum ObjectType Type, seAssemblyChangeEventsConstants ChangeType ) {
    return _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0009\x0003\x0003", theDocument, Object, Type, ChangeType);
}

//
// interface ISEAssemblyConfigurationChangeEvents wrapper method implementations
//

#pragma implementation_key(2258)
inline HRESULT TGFramework::ISEAssemblyConfigurationChangeEvents::OnBeforeAssemblyConfigurationChange ( IDispatch * theDocument, VARIANT * varConfigNames, int nConfigNameCount ) {
    HRESULT _hr = raw_OnBeforeAssemblyConfigurationChange(theDocument, varConfigNames, nConfigNameCount);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2259)
inline HRESULT TGFramework::ISEAssemblyConfigurationChangeEvents::OnAfterAssemblyConfigurationChange ( IDispatch * theDocument, VARIANT * varConfigNames, int nConfigNameCount ) {
    HRESULT _hr = raw_OnAfterAssemblyConfigurationChange(theDocument, varConfigNames, nConfigNameCount);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface DISEAssemblyConfigurationChangeEvents wrapper method implementations
//

#pragma implementation_key(2260)
inline HRESULT TGFramework::DISEAssemblyConfigurationChangeEvents::OnBeforeAssemblyConfigurationChange ( IDispatch * theDocument, VARIANT * varConfigNames, int nConfigNameCount ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x400c\x0003", theDocument, varConfigNames, nConfigNameCount);
}

#pragma implementation_key(2261)
inline HRESULT TGFramework::DISEAssemblyConfigurationChangeEvents::OnAfterAssemblyConfigurationChange ( IDispatch * theDocument, VARIANT * varConfigNames, int nConfigNameCount ) {
    return _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x400c\x0003", theDocument, varConfigNames, nConfigNameCount);
}

//
// interface ISEAssemblyRecomputeEvents wrapper method implementations
//

#pragma implementation_key(2262)
inline HRESULT TGFramework::ISEAssemblyRecomputeEvents::BeforeRecompute ( IDispatch * theDocument ) {
    HRESULT _hr = raw_BeforeRecompute(theDocument);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2263)
inline HRESULT TGFramework::ISEAssemblyRecomputeEvents::AfterRecompute ( IDispatch * theDocument ) {
    HRESULT _hr = raw_AfterRecompute(theDocument);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2264)
inline HRESULT TGFramework::ISEAssemblyRecomputeEvents::AfterAdd ( IDispatch * theDocument, IDispatch * Object, enum ObjectType Type ) {
    HRESULT _hr = raw_AfterAdd(theDocument, Object, Type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2265)
inline HRESULT TGFramework::ISEAssemblyRecomputeEvents::BeforeDelete ( IDispatch * theDocument, IDispatch * Object, enum ObjectType Type ) {
    HRESULT _hr = raw_BeforeDelete(theDocument, Object, Type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2266)
inline HRESULT TGFramework::ISEAssemblyRecomputeEvents::AfterModify ( IDispatch * theDocument, IDispatch * Object, enum ObjectType Type, seAssemblyEventConstants ModifyType ) {
    HRESULT _hr = raw_AfterModify(theDocument, Object, Type, ModifyType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface DISEAssemblyRecomputeEvents wrapper method implementations
//

#pragma implementation_key(2267)
inline HRESULT TGFramework::DISEAssemblyRecomputeEvents::BeforeRecompute ( IDispatch * theDocument ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", theDocument);
}

#pragma implementation_key(2268)
inline HRESULT TGFramework::DISEAssemblyRecomputeEvents::AfterRecompute ( IDispatch * theDocument ) {
    return _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", theDocument);
}

#pragma implementation_key(2269)
inline HRESULT TGFramework::DISEAssemblyRecomputeEvents::AfterAdd ( IDispatch * theDocument, IDispatch * Object, enum ObjectType Type ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0009\x0003", theDocument, Object, Type);
}

#pragma implementation_key(2270)
inline HRESULT TGFramework::DISEAssemblyRecomputeEvents::BeforeDelete ( IDispatch * theDocument, IDispatch * Object, enum ObjectType Type ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0009\x0003", theDocument, Object, Type);
}

#pragma implementation_key(2271)
inline HRESULT TGFramework::DISEAssemblyRecomputeEvents::AfterModify ( IDispatch * theDocument, IDispatch * Object, enum ObjectType Type, seAssemblyEventConstants ModifyType ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0009\x0003\x0003", theDocument, Object, Type, ModifyType);
}

//
// interface ISEAssemblyFamilyEvents wrapper method implementations
//

#pragma implementation_key(2272)
inline HRESULT TGFramework::ISEAssemblyFamilyEvents::BeforeMemberActivate ( IDispatch * theDocument, _bstr_t memberName ) {
    HRESULT _hr = raw_BeforeMemberActivate(theDocument, memberName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2273)
inline HRESULT TGFramework::ISEAssemblyFamilyEvents::AfterMemberActivate ( IDispatch * theDocument, _bstr_t memberName ) {
    HRESULT _hr = raw_AfterMemberActivate(theDocument, memberName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2274)
inline HRESULT TGFramework::ISEAssemblyFamilyEvents::BeforeMemberCreate ( IDispatch * theDocument, _bstr_t memberName ) {
    HRESULT _hr = raw_BeforeMemberCreate(theDocument, memberName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2275)
inline HRESULT TGFramework::ISEAssemblyFamilyEvents::AfterMemberCreate ( IDispatch * theDocument, _bstr_t memberName ) {
    HRESULT _hr = raw_AfterMemberCreate(theDocument, memberName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2276)
inline HRESULT TGFramework::ISEAssemblyFamilyEvents::BeforeMemberDelete ( IDispatch * theDocument, _bstr_t memberName ) {
    HRESULT _hr = raw_BeforeMemberDelete(theDocument, memberName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2277)
inline HRESULT TGFramework::ISEAssemblyFamilyEvents::AfterMemberDelete ( IDispatch * theDocument, _bstr_t memberName ) {
    HRESULT _hr = raw_AfterMemberDelete(theDocument, memberName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISEAssemblyFamilyEvents2 wrapper method implementations
//

#pragma implementation_key(2278)
inline HRESULT TGFramework::ISEAssemblyFamilyEvents2::BeforeMemberActivate ( IDispatch * theDocument, _bstr_t memberName ) {
    HRESULT _hr = raw_BeforeMemberActivate(theDocument, memberName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2279)
inline HRESULT TGFramework::ISEAssemblyFamilyEvents2::AfterMemberActivate ( IDispatch * theDocument, _bstr_t memberName ) {
    HRESULT _hr = raw_AfterMemberActivate(theDocument, memberName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2280)
inline HRESULT TGFramework::ISEAssemblyFamilyEvents2::BeforeMemberCreate ( IDispatch * theDocument, _bstr_t memberName ) {
    HRESULT _hr = raw_BeforeMemberCreate(theDocument, memberName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2281)
inline HRESULT TGFramework::ISEAssemblyFamilyEvents2::AfterMemberCreate ( IDispatch * theDocument, _bstr_t memberName ) {
    HRESULT _hr = raw_AfterMemberCreate(theDocument, memberName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2282)
inline HRESULT TGFramework::ISEAssemblyFamilyEvents2::BeforeMemberDelete ( IDispatch * theDocument, _bstr_t memberName ) {
    HRESULT _hr = raw_BeforeMemberDelete(theDocument, memberName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2283)
inline HRESULT TGFramework::ISEAssemblyFamilyEvents2::AfterMemberDelete ( IDispatch * theDocument, _bstr_t memberName ) {
    HRESULT _hr = raw_AfterMemberDelete(theDocument, memberName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2284)
inline HRESULT TGFramework::ISEAssemblyFamilyEvents2::BeforeMemberRename ( IDispatch * theDocument, _bstr_t OldMemberName ) {
    HRESULT _hr = raw_BeforeMemberRename(theDocument, OldMemberName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2285)
inline HRESULT TGFramework::ISEAssemblyFamilyEvents2::AfterMemberRename ( IDispatch * theDocument, _bstr_t NewMemberName ) {
    HRESULT _hr = raw_AfterMemberRename(theDocument, NewMemberName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISEFamilyOfPartsEvents wrapper method implementations
//

#pragma implementation_key(2286)
inline HRESULT TGFramework::ISEFamilyOfPartsEvents::AfterMemberDocumentCreated ( IDispatch * theMember ) {
    HRESULT _hr = raw_AfterMemberDocumentCreated(theMember);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2287)
inline HRESULT TGFramework::ISEFamilyOfPartsEvents::AfterMemberDocumentRenamed ( IDispatch * theMember, _bstr_t OldName ) {
    HRESULT _hr = raw_AfterMemberDocumentRenamed(theMember, OldName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2288)
inline HRESULT TGFramework::ISEFamilyOfPartsEvents::BeforeMemberDocumentDeleted ( IDispatch * theMember ) {
    HRESULT _hr = raw_BeforeMemberDocumentDeleted(theMember);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISEFamilyOfPartsExEvents wrapper method implementations
//

#pragma implementation_key(2289)
inline HRESULT TGFramework::ISEFamilyOfPartsExEvents::AfterMemberDocumentCreated ( IDispatch * theMember, VARIANT_BOOL DocumentExists ) {
    HRESULT _hr = raw_AfterMemberDocumentCreated(theMember, DocumentExists);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2290)
inline HRESULT TGFramework::ISEFamilyOfPartsExEvents::AfterMemberDocumentRenamed ( IDispatch * theMember, _bstr_t OldName ) {
    HRESULT _hr = raw_AfterMemberDocumentRenamed(theMember, OldName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2291)
inline HRESULT TGFramework::ISEFamilyOfPartsExEvents::BeforeMemberDocumentDeleted ( IDispatch * theMember ) {
    HRESULT _hr = raw_BeforeMemberDocumentDeleted(theMember);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISEDividePartEvents wrapper method implementations
//

#pragma implementation_key(2292)
inline HRESULT TGFramework::ISEDividePartEvents::AfterDividePartDocumentCreated ( IDispatch * theMember ) {
    HRESULT _hr = raw_AfterDividePartDocumentCreated(theMember);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2293)
inline HRESULT TGFramework::ISEDividePartEvents::AfterDividePartDocumentRenamed ( IDispatch * theMember, _bstr_t OldName ) {
    HRESULT _hr = raw_AfterDividePartDocumentRenamed(theMember, OldName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2294)
inline HRESULT TGFramework::ISEDividePartEvents::BeforeDividePartDocumentDeleted ( IDispatch * theMember ) {
    HRESULT _hr = raw_BeforeDividePartDocumentDeleted(theMember);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISEDrawingViewEvents wrapper method implementations
//

#pragma implementation_key(2295)
inline HRESULT TGFramework::ISEDrawingViewEvents::AfterUpdate ( IDispatch * DrawingView ) {
    HRESULT _hr = raw_AfterUpdate(DrawingView);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISEPartsListEvents wrapper method implementations
//

#pragma implementation_key(2296)
inline HRESULT TGFramework::ISEPartsListEvents::AfterUpdate ( IDispatch * PartsList ) {
    HRESULT _hr = raw_AfterUpdate(PartsList);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISEDraftBendTableEvents wrapper method implementations
//

#pragma implementation_key(2297)
inline HRESULT TGFramework::ISEDraftBendTableEvents::AfterUpdate ( IDispatch * DraftBendTable ) {
    HRESULT _hr = raw_AfterUpdate(DraftBendTable);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISEConnectorTableEvents wrapper method implementations
//

#pragma implementation_key(2298)
inline HRESULT TGFramework::ISEConnectorTableEvents::AfterUpdate ( IDispatch * ConnectorTable ) {
    HRESULT _hr = raw_AfterUpdate(ConnectorTable);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISEBlockTableEvents wrapper method implementations
//

#pragma implementation_key(2299)
inline HRESULT TGFramework::ISEBlockTableEvents::AfterUpdate ( IDispatch * BlockTable ) {
    HRESULT _hr = raw_AfterUpdate(BlockTable);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface DISEDocumentEvents wrapper method implementations
//

#pragma implementation_key(2300)
inline HRESULT TGFramework::DISEDocumentEvents::BeforeClose ( ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2301)
inline HRESULT TGFramework::DISEDocumentEvents::BeforeSave ( ) {
    return _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2302)
inline HRESULT TGFramework::DISEDocumentEvents::AfterSave ( ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2303)
inline HRESULT TGFramework::DISEDocumentEvents::SelectSetChanged ( IDispatch * SelectSet ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", SelectSet);
}

//
// interface ISECommandInfoEx wrapper method implementations
//

#pragma implementation_key(2304)
inline long TGFramework::ISECommandInfoEx::GetimageID ( ) {
    long _result = 0;
    HRESULT _hr = get_imageID(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface ISEAssemblyPhysicalPropertiesChangeEvents wrapper method implementations
//

#pragma implementation_key(2305)
inline HRESULT TGFramework::ISEAssemblyPhysicalPropertiesChangeEvents::OnAfterAssemblyPhysicalPropertiesChange ( IDispatch * theDocument ) {
    HRESULT _hr = raw_OnAfterAssemblyPhysicalPropertiesChange(theDocument);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2306)
inline HRESULT TGFramework::ISEAssemblyPhysicalPropertiesChangeEvents::OnBeforeAssemblyPhysicalPropertiesChange ( IDispatch * theDocument ) {
    HRESULT _hr = raw_OnBeforeAssemblyPhysicalPropertiesChange(theDocument);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface DISEAssemblyPhysicalPropertiesChangeEvents wrapper method implementations
//

#pragma implementation_key(2307)
inline HRESULT TGFramework::DISEAssemblyPhysicalPropertiesChangeEvents::OnAfterAssemblyPhysicalPropertiesChange ( IDispatch * theDocument ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", theDocument);
}

#pragma implementation_key(2308)
inline HRESULT TGFramework::DISEAssemblyPhysicalPropertiesChangeEvents::OnBeforeAssemblyPhysicalPropertiesChange ( IDispatch * theDocument ) {
    return _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", theDocument);
}

//
// interface ISEPhysicalPropertiesChangeEvents wrapper method implementations
//

#pragma implementation_key(2309)
inline HRESULT TGFramework::ISEPhysicalPropertiesChangeEvents::OnAfterPartPhysicalPropertiesChange ( IDispatch * theMember ) {
    HRESULT _hr = raw_OnAfterPartPhysicalPropertiesChange(theMember);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2310)
inline HRESULT TGFramework::ISEPhysicalPropertiesChangeEvents::OnBeforePartPhysicalPropertiesChange ( IDispatch * theMember ) {
    HRESULT _hr = raw_OnBeforePartPhysicalPropertiesChange(theMember);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISELocateFilterEvents wrapper method implementations
//

#pragma implementation_key(2311)
inline HRESULT TGFramework::ISELocateFilterEvents::Filter ( IDispatch * pGraphicDispatch, VARIANT_BOOL * vbValid ) {
    HRESULT _hr = raw_Filter(pGraphicDispatch, vbValid);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISECommandEx wrapper method implementations
//

#pragma implementation_key(2312)
inline HRESULT TGFramework::ISECommandEx::BeginUndoTransaction ( _bstr_t TransactionName ) {
    HRESULT _hr = raw_BeginUndoTransaction(TransactionName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISECommandEx2 wrapper method implementations
//

#pragma implementation_key(2313)
inline HRESULT TGFramework::ISECommandEx2::BeginTransparentUndoTransaction ( _bstr_t TransactionName ) {
    HRESULT _hr = raw_BeginTransparentUndoTransaction(TransactionName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2314)
inline HRESULT TGFramework::ISECommandEx2::EndUndoTransaction ( ) {
    HRESULT _hr = raw_EndUndoTransaction();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface DISEAddInEventsEx wrapper method implementations
//

#pragma implementation_key(2315)
inline HRESULT TGFramework::DISEAddInEventsEx::OnCommand ( long nCmdID ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", nCmdID);
}

#pragma implementation_key(2316)
inline HRESULT TGFramework::DISEAddInEventsEx::OnCommandHelp ( long hFrameWnd, long uHelpCommand, long nCmdID ) {
    return _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0003", hFrameWnd, uHelpCommand, nCmdID);
}

#pragma implementation_key(2317)
inline HRESULT TGFramework::DISEAddInEventsEx::OnCommandUpdateUI ( long nCmdID, long * lCmdFlags, BSTR * MenuItemText, long * nIDBitmap ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4003\x4008\x4003", nCmdID, lCmdFlags, MenuItemText, nIDBitmap);
}

#pragma implementation_key(2318)
inline HRESULT TGFramework::DISEAddInEventsEx::OnCommandOnLineHelp ( long uHelpCommand, long nCmdID, BSTR * HelpURL ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x4008", uHelpCommand, nCmdID, HelpURL);
}

//
// dispinterface DISEAddInEventsEx2 wrapper method implementations
//

#pragma implementation_key(2319)
inline HRESULT TGFramework::DISEAddInEventsEx2::OnCommand ( long nCmdID, long Context, long ActiveDocumentType, IDispatch * pActiveDocument, IDispatch * pActiveWindow, IDispatch * pActiveSelectSet ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0003\x0009\x0009\x0009", nCmdID, Context, ActiveDocumentType, pActiveDocument, pActiveWindow, pActiveSelectSet);
}

#pragma implementation_key(2320)
inline HRESULT TGFramework::DISEAddInEventsEx2::OnCommandHelp ( long hFrameWnd, long uHelpCommand, long nCmdID ) {
    return _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0003", hFrameWnd, uHelpCommand, nCmdID);
}

#pragma implementation_key(2321)
inline HRESULT TGFramework::DISEAddInEventsEx2::OnCommandUpdateUI ( long nCmdID, long Context, long ActiveDocumentType, IDispatch * pActiveDocument, IDispatch * pActiveWindow, IDispatch * pActiveSelectSet, long * lCmdFlags, BSTR * MenuItemText, long * nIDBitmap ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0003\x0009\x0009\x0009\x4003\x4008\x4003", nCmdID, Context, ActiveDocumentType, pActiveDocument, pActiveWindow, pActiveSelectSet, lCmdFlags, MenuItemText, nIDBitmap);
}

#pragma implementation_key(2322)
inline HRESULT TGFramework::DISEAddInEventsEx2::OnCommandOnLineHelp ( long uHelpCommand, long nCmdID, BSTR * HelpURL ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x4008", uHelpCommand, nCmdID, HelpURL);
}

//
// interface ISEAddInEx wrapper method implementations
//

#pragma implementation_key(2323)
inline HRESULT TGFramework::ISEAddInEx::SetAddInInfoEx ( _bstr_t ResourceFilename, _bstr_t EnvironmentCatID, _bstr_t CategoryName, long IDColorBitmapMedium, long IDColorBitmapLarge, long IDMonochromeBitmapMedium, long IDMonochromeBitmapLarge, long NumberOfCommands, SAFEARRAY * * CommandNames, SAFEARRAY * * CommandIDs ) {
    HRESULT _hr = raw_SetAddInInfoEx(ResourceFilename, EnvironmentCatID, CategoryName, IDColorBitmapMedium, IDColorBitmapLarge, IDMonochromeBitmapMedium, IDMonochromeBitmapLarge, NumberOfCommands, CommandNames, CommandIDs);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2324)
inline IUnknownPtr TGFramework::ISEAddInEx::GetAddInEdgeBarEvents ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_AddInEdgeBarEvents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

//
// interface ISEAddInEx2 wrapper method implementations
//

#pragma implementation_key(2325)
inline HRESULT TGFramework::ISEAddInEx2::SetAddInInfoEx2 ( _bstr_t ResourceFilename, _bstr_t EnvironmentCatID, _bstr_t CategoryName, long IDColorBitmapMedium, long IDColorBitmapLarge, long IDMonochromeBitmapMedium, long IDMonochromeBitmapLarge, long NumberOfCommands, SAFEARRAY * * CommandNames, SAFEARRAY * * CommandIDs, SAFEARRAY * * CommandButtonStyles ) {
    HRESULT _hr = raw_SetAddInInfoEx2(ResourceFilename, EnvironmentCatID, CategoryName, IDColorBitmapMedium, IDColorBitmapLarge, IDMonochromeBitmapMedium, IDMonochromeBitmapLarge, NumberOfCommands, CommandNames, CommandIDs, CommandButtonStyles);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISEAddInSaveAsTranslatorEvents wrapper method implementations
//

#pragma implementation_key(2326)
inline HRESULT TGFramework::ISEAddInSaveAsTranslatorEvents::OnOptions ( IDispatch * theDocument, _bstr_t FileExtension ) {
    HRESULT _hr = raw_OnOptions(theDocument, FileExtension);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2327)
inline HRESULT TGFramework::ISEAddInSaveAsTranslatorEvents::OnOptionsUpdateUI ( IDispatch * theDocument, _bstr_t FileExtension, long * Flags ) {
    HRESULT _hr = raw_OnOptionsUpdateUI(theDocument, FileExtension, Flags);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2328)
inline HRESULT TGFramework::ISEAddInSaveAsTranslatorEvents::OnSaveAs ( IDispatch * theDocument, _bstr_t SaveAsFileName, long * hResult ) {
    HRESULT _hr = raw_OnSaveAs(theDocument, SaveAsFileName, hResult);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISEAddInSaveAsTranslator wrapper method implementations
//

#pragma implementation_key(2329)
inline HRESULT TGFramework::ISEAddInSaveAsTranslator::SetSaveAsTranlatorInfo ( enum DocumentTypeConstants DocumentType, _bstr_t Filter ) {
    HRESULT _hr = raw_SetSaveAsTranlatorInfo(DocumentType, Filter);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2330)
inline IUnknownPtr TGFramework::ISEAddInSaveAsTranslator::GetAddInSaveAsTranslatorEvents ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_AddInSaveAsTranslatorEvents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

//
// interface ISolidEdgeAddIn wrapper method implementations
//

#pragma implementation_key(2331)
inline HRESULT TGFramework::ISolidEdgeAddIn::OnConnection ( IDispatch * Application, enum SeConnectMode ConnectMode, struct AddIn * AddInInstance ) {
    HRESULT _hr = raw_OnConnection(Application, ConnectMode, AddInInstance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2332)
inline HRESULT TGFramework::ISolidEdgeAddIn::OnConnectToEnvironment ( _bstr_t EnvCatID, IDispatch * pEnvironmentDispatch, VARIANT_BOOL bFirstTime ) {
    HRESULT _hr = raw_OnConnectToEnvironment(EnvCatID, pEnvironmentDispatch, bFirstTime);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2333)
inline HRESULT TGFramework::ISolidEdgeAddIn::OnDisconnection ( enum SeDisconnectMode DisconnectMode ) {
    HRESULT _hr = raw_OnDisconnection(DisconnectMode);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISolidEdgeBar wrapper method implementations
//

#pragma implementation_key(2334)
inline long TGFramework::ISolidEdgeBar::AddPage ( IDispatch * theDocument, long InstanceHandle, long nBitmapID, _bstr_t Tooltip, long nOptions ) {
    long _result = 0;
    HRESULT _hr = raw_AddPage(theDocument, InstanceHandle, nBitmapID, Tooltip, nOptions, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2335)
inline HRESULT TGFramework::ISolidEdgeBar::RemovePage ( IDispatch * theDocument, long hWnd, long nOptions ) {
    HRESULT _hr = raw_RemovePage(theDocument, hWnd, nOptions);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2336)
inline HRESULT TGFramework::ISolidEdgeBar::SetActivePage ( IDispatch * theDocument, long hWnd, long nOptions ) {
    HRESULT _hr = raw_SetActivePage(theDocument, hWnd, nOptions);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISolidEdgeBarEx wrapper method implementations
//

#pragma implementation_key(2337)
inline long TGFramework::ISolidEdgeBarEx::AddPageEx ( IDispatch * theDocument, _bstr_t ResourceFilename, long nBitmapID, _bstr_t Tooltip, long nOptions ) {
    long _result = 0;
    HRESULT _hr = raw_AddPageEx(theDocument, ResourceFilename, nBitmapID, Tooltip, nOptions, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface ISolidEdgeBarEx2 wrapper method implementations
//

#pragma implementation_key(2338)
inline long TGFramework::ISolidEdgeBarEx2::AddPageEx2 ( IDispatch * theDocument, _bstr_t ResourceFilename, long Index, long nBitmapID, _bstr_t Tooltip, _bstr_t Title, _bstr_t Caption, long nOptions, const _variant_t & Direction, const _variant_t & InitialWidth, const _variant_t & InitialHeight ) {
    long _result = 0;
    HRESULT _hr = raw_AddPageEx2(theDocument, ResourceFilename, Index, nBitmapID, Tooltip, Title, Caption, nOptions, Direction, InitialWidth, InitialHeight, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2339)
inline HRESULT TGFramework::ISolidEdgeBarEx2::RemovePageEx2 ( IDispatch * theDocument, long Index, long hWnd, long nOptions ) {
    HRESULT _hr = raw_RemovePageEx2(theDocument, Index, hWnd, nOptions);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2340)
inline HRESULT TGFramework::ISolidEdgeBarEx2::SetActivePageEx2 ( IDispatch * theDocument, long Index, long hWnd, long nOptions ) {
    HRESULT _hr = raw_SetActivePageEx2(theDocument, Index, hWnd, nOptions);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISolidEdgeRibbonBar wrapper method implementations
//

#pragma implementation_key(2341)
inline long TGFramework::ISolidEdgeRibbonBar::AddRibbon ( int DialogId, long InstanceHandle ) {
    long _result = 0;
    HRESULT _hr = raw_AddRibbon(DialogId, InstanceHandle, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2342)
inline HRESULT TGFramework::ISolidEdgeRibbonBar::ShowRibbon ( ) {
    HRESULT _hr = raw_ShowRibbon();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2343)
inline HRESULT TGFramework::ISolidEdgeRibbonBar::HideRibbon ( ) {
    HRESULT _hr = raw_HideRibbon();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2344)
inline HRESULT TGFramework::ISolidEdgeRibbonBar::RemoveRibbon ( ) {
    HRESULT _hr = raw_RemoveRibbon();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2345)
inline HRESULT TGFramework::ISolidEdgeRibbonBar::AddEditField ( int Id ) {
    HRESULT _hr = raw_AddEditField(Id);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2346)
inline HRESULT TGFramework::ISolidEdgeRibbonBar::SetCurrentFocus ( ) {
    HRESULT _hr = raw_SetCurrentFocus();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2347)
inline HRESULT TGFramework::ISolidEdgeRibbonBar::GetCurrentFocus ( int * Id ) {
    HRESULT _hr = raw_GetCurrentFocus(Id);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2348)
inline HRESULT TGFramework::ISolidEdgeRibbonBar::NextFocus ( ) {
    HRESULT _hr = raw_NextFocus();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2349)
inline HRESULT TGFramework::ISolidEdgeRibbonBar::SetAccelerators ( SAFEARRAY * * Accelerators ) {
    HRESULT _hr = raw_SetAccelerators(Accelerators);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISolidEdgeRibbonBarEx wrapper method implementations
//

#pragma implementation_key(2350)
inline long TGFramework::ISolidEdgeRibbonBarEx::AddRibbonEx ( int DialogId, _bstr_t ResourceFilename ) {
    long _result = 0;
    HRESULT _hr = raw_AddRibbonEx(DialogId, ResourceFilename, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface ISolidEdgeCommandBar wrapper method implementations
//

#pragma implementation_key(2351)
inline long TGFramework::ISolidEdgeCommandBar::AddGroup ( int nTitleID, int nDialogId, int nBitmapID, _bstr_t ResourceFilename, VARIANT_BOOL bExpandable, VARIANT_BOOL bExpanded, VARIANT_BOOL bEnabled, VARIANT_BOOL bRedraw ) {
    long _result = 0;
    HRESULT _hr = raw_AddGroup(nTitleID, nDialogId, nBitmapID, ResourceFilename, bExpandable, bExpanded, bEnabled, bRedraw, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2352)
inline HRESULT TGFramework::ISolidEdgeCommandBar::AddCommandBarHeader ( VARIANT_BOOL bDoIt, VARIANT_BOOL bOptions, _bstr_t DoitText, _bstr_t OptionsText ) {
    HRESULT _hr = raw_AddCommandBarHeader(bDoIt, bOptions, DoitText, OptionsText);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2353)
inline HRESULT TGFramework::ISolidEdgeCommandBar::SetCommandBarHeaderText ( _bstr_t DoitText, _bstr_t OptionsText ) {
    HRESULT _hr = raw_SetCommandBarHeaderText(DoitText, OptionsText);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2354)
inline HRESULT TGFramework::ISolidEdgeCommandBar::RemoveGroup ( int nTitleID, const _variant_t & hWndGroupDialog ) {
    HRESULT _hr = raw_RemoveGroup(nTitleID, hWndGroupDialog);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2355)
inline HRESULT TGFramework::ISolidEdgeCommandBar::ShowGroup ( int nTitleID, const _variant_t & hWndGroupDialog ) {
    HRESULT _hr = raw_ShowGroup(nTitleID, hWndGroupDialog);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2356)
inline HRESULT TGFramework::ISolidEdgeCommandBar::HideGroup ( int nTitleID, const _variant_t & hWndGroupDialog ) {
    HRESULT _hr = raw_HideGroup(nTitleID, hWndGroupDialog);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2357)
inline HRESULT TGFramework::ISolidEdgeCommandBar::EnableGroup ( int nTitleID, VARIANT_BOOL bEnabled, VARIANT_BOOL bDisableAllOthers ) {
    HRESULT _hr = raw_EnableGroup(nTitleID, bEnabled, bDisableAllOthers);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2358)
inline VARIANT_BOOL TGFramework::ISolidEdgeCommandBar::IsGroupEnabled ( int nTitleID ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsGroupEnabled(nTitleID, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2359)
inline HRESULT TGFramework::ISolidEdgeCommandBar::ExpandGroup ( int nTitleID, VARIANT_BOOL bExpanded, VARIANT_BOOL bCollapseAllOthers ) {
    HRESULT _hr = raw_ExpandGroup(nTitleID, bExpanded, bCollapseAllOthers);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2360)
inline VARIANT_BOOL TGFramework::ISolidEdgeCommandBar::IsGroupExpanded ( int nTitleID ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsGroupExpanded(nTitleID, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2361)
inline HRESULT TGFramework::ISolidEdgeCommandBar::EnsureVisible ( int nTitleID, const _variant_t & hWndGroupDialog ) {
    HRESULT _hr = raw_EnsureVisible(nTitleID, hWndGroupDialog);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2362)
inline HRESULT TGFramework::ISolidEdgeCommandBar::ShowGroups ( ) {
    HRESULT _hr = raw_ShowGroups();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2363)
inline HRESULT TGFramework::ISolidEdgeCommandBar::HideGroups ( ) {
    HRESULT _hr = raw_HideGroups();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2364)
inline HRESULT TGFramework::ISolidEdgeCommandBar::RemoveGroups ( ) {
    HRESULT _hr = raw_RemoveGroups();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2365)
inline HRESULT TGFramework::ISolidEdgeCommandBar::AddBitmapToButton ( long hWndGroupDialog, int nButtonID, int nBitmapID, const _variant_t & ResourceFilename ) {
    HRESULT _hr = raw_AddBitmapToButton(hWndGroupDialog, nButtonID, nBitmapID, ResourceFilename);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2366)
inline HRESULT TGFramework::ISolidEdgeCommandBar::AddEditField ( long hWndGroupDialog, int Id ) {
    HRESULT _hr = raw_AddEditField(hWndGroupDialog, Id);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2367)
inline HRESULT TGFramework::ISolidEdgeCommandBar::SetCurrentFocus ( long hWndGroupDialog ) {
    HRESULT _hr = raw_SetCurrentFocus(hWndGroupDialog);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2368)
inline HRESULT TGFramework::ISolidEdgeCommandBar::GetCurrentFocus ( long hWndGroupDialog, int * Id ) {
    HRESULT _hr = raw_GetCurrentFocus(hWndGroupDialog, Id);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2369)
inline HRESULT TGFramework::ISolidEdgeCommandBar::NextFocus ( long hWndGroupDialog ) {
    HRESULT _hr = raw_NextFocus(hWndGroupDialog);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2370)
inline HRESULT TGFramework::ISolidEdgeCommandBar::SetAccelerators ( long hWndGroupDialog, SAFEARRAY * * Accelerators ) {
    HRESULT _hr = raw_SetAccelerators(hWndGroupDialog, Accelerators);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface DISEAssemblyFamilyEvents wrapper method implementations
//

#pragma implementation_key(2371)
inline HRESULT TGFramework::DISEAssemblyFamilyEvents::BeforeMemberActivate ( IDispatch * theDocument, _bstr_t memberName ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0008", theDocument, (BSTR)memberName);
}

#pragma implementation_key(2372)
inline HRESULT TGFramework::DISEAssemblyFamilyEvents::AfterMemberActivate ( IDispatch * theDocument, _bstr_t memberName ) {
    return _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0008", theDocument, (BSTR)memberName);
}

#pragma implementation_key(2373)
inline HRESULT TGFramework::DISEAssemblyFamilyEvents::BeforeMemberCreate ( IDispatch * theDocument, _bstr_t memberName ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0008", theDocument, (BSTR)memberName);
}

#pragma implementation_key(2374)
inline HRESULT TGFramework::DISEAssemblyFamilyEvents::AfterMemberCreate ( IDispatch * theDocument, _bstr_t memberName ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0008", theDocument, (BSTR)memberName);
}

#pragma implementation_key(2375)
inline HRESULT TGFramework::DISEAssemblyFamilyEvents::BeforeMemberDelete ( IDispatch * theDocument, _bstr_t memberName ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0008", theDocument, (BSTR)memberName);
}

#pragma implementation_key(2376)
inline HRESULT TGFramework::DISEAssemblyFamilyEvents::AfterMemberDelete ( IDispatch * theDocument, _bstr_t memberName ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0008", theDocument, (BSTR)memberName);
}

//
// dispinterface DISEAssemblyFamilyEvents2 wrapper method implementations
//

#pragma implementation_key(2377)
inline HRESULT TGFramework::DISEAssemblyFamilyEvents2::BeforeMemberActivate ( IDispatch * theDocument, _bstr_t memberName ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0008", theDocument, (BSTR)memberName);
}

#pragma implementation_key(2378)
inline HRESULT TGFramework::DISEAssemblyFamilyEvents2::AfterMemberActivate ( IDispatch * theDocument, _bstr_t memberName ) {
    return _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0008", theDocument, (BSTR)memberName);
}

#pragma implementation_key(2379)
inline HRESULT TGFramework::DISEAssemblyFamilyEvents2::BeforeMemberCreate ( IDispatch * theDocument, _bstr_t memberName ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0008", theDocument, (BSTR)memberName);
}

#pragma implementation_key(2380)
inline HRESULT TGFramework::DISEAssemblyFamilyEvents2::AfterMemberCreate ( IDispatch * theDocument, _bstr_t memberName ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0008", theDocument, (BSTR)memberName);
}

#pragma implementation_key(2381)
inline HRESULT TGFramework::DISEAssemblyFamilyEvents2::BeforeMemberDelete ( IDispatch * theDocument, _bstr_t memberName ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0008", theDocument, (BSTR)memberName);
}

#pragma implementation_key(2382)
inline HRESULT TGFramework::DISEAssemblyFamilyEvents2::AfterMemberDelete ( IDispatch * theDocument, _bstr_t memberName ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0008", theDocument, (BSTR)memberName);
}

#pragma implementation_key(2383)
inline HRESULT TGFramework::DISEAssemblyFamilyEvents2::BeforeMemberRename ( IDispatch * theDocument, _bstr_t OldMemberName ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0008", theDocument, (BSTR)OldMemberName);
}

#pragma implementation_key(2384)
inline HRESULT TGFramework::DISEAssemblyFamilyEvents2::AfterMemberRename ( IDispatch * theDocument, _bstr_t NewMemberName ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0008", theDocument, (BSTR)NewMemberName);
}

//
// interface ISEECEventsEx wrapper method implementations
//

#pragma implementation_key(2385)
inline HRESULT TGFramework::ISEECEventsEx::PDM_OnAfterDocumentUpload ( VARIANT * varUploadFileList ) {
    HRESULT _hr = raw_PDM_OnAfterDocumentUpload(varUploadFileList);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface ISESketchRecomputeEvents wrapper method implementations
//

#pragma implementation_key(2386)
inline HRESULT TGFramework::ISESketchRecomputeEvents::BeforeRecompute ( IDispatch * Sketch ) {
    HRESULT _hr = raw_BeforeRecompute(Sketch);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2387)
inline HRESULT TGFramework::ISESketchRecomputeEvents::AfterRecompute ( IDispatch * Sketch ) {
    HRESULT _hr = raw_AfterRecompute(Sketch);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2388)
inline HRESULT TGFramework::ISESketchRecomputeEvents::AfterSketchIsModified ( enum SeModifySketchFlag ModifySkFlag, IDispatch * Entity, IDispatch * Sketch ) {
    HRESULT _hr = raw_AfterSketchIsModified(ModifySkFlag, Entity, Sketch);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2389)
inline HRESULT TGFramework::ISESketchRecomputeEvents::BeforeSketchIsDeleted ( ) {
    HRESULT _hr = raw_BeforeSketchIsDeleted();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface DISESketchRecomputeEvents wrapper method implementations
//

#pragma implementation_key(2390)
inline HRESULT TGFramework::DISESketchRecomputeEvents::BeforeRecompute ( IDispatch * Sketch ) {
    return _com_dispatch_method(this, 0x60010000, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Sketch);
}

#pragma implementation_key(2391)
inline HRESULT TGFramework::DISESketchRecomputeEvents::AfterRecompute ( IDispatch * Sketch ) {
    return _com_dispatch_method(this, 0x60010001, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Sketch);
}

#pragma implementation_key(2392)
inline HRESULT TGFramework::DISESketchRecomputeEvents::AfterSketchIsModified ( enum SeModifySketchFlag ModifySkFlag, IDispatch * Entity, IDispatch * Sketch ) {
    return _com_dispatch_method(this, 0x60010002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0009\x0009", ModifySkFlag, Entity, Sketch);
}

#pragma implementation_key(2393)
inline HRESULT TGFramework::DISESketchRecomputeEvents::BeforeSketchIsDeleted ( ) {
    return _com_dispatch_method(this, 0x60010003, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// interface _IVariableAuto wrapper method implementations
//

#pragma implementation_key(2394)
inline void TGFramework::_IVariableAuto::PutName ( _bstr_t pName ) {
    HRESULT _hr = put_Name(pName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2395)
inline _bstr_t TGFramework::_IVariableAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2396)
inline int TGFramework::_IVariableAuto::GetUnitsType ( ) {
    int _result = 0;
    HRESULT _hr = get_UnitsType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2397)
inline void TGFramework::_IVariableAuto::PutUnitsType ( int pUnitType ) {
    HRESULT _hr = put_UnitsType(pUnitType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2398)
inline void TGFramework::_IVariableAuto::PutValue ( double pDoubleValue ) {
    HRESULT _hr = put_Value(pDoubleValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2399)
inline double TGFramework::_IVariableAuto::GetValue ( ) {
    double _result = 0;
    HRESULT _hr = get_Value(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2400)
inline void TGFramework::_IVariableAuto::PutProperties ( int pProperties ) {
    HRESULT _hr = put_Properties(pProperties);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2401)
inline int TGFramework::_IVariableAuto::GetProperties ( ) {
    int _result = 0;
    HRESULT _hr = get_Properties(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2402)
inline void TGFramework::_IVariableAuto::PutFormula ( _bstr_t pFormula ) {
    HRESULT _hr = put_Formula(pFormula);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2403)
inline _bstr_t TGFramework::_IVariableAuto::GetFormula ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Formula(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2404)
inline HRESULT TGFramework::_IVariableAuto::SetRange ( _bstr_t LowValue, int Condition, _bstr_t HighValue ) {
    HRESULT _hr = raw_SetRange(LowValue, Condition, HighValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2405)
inline HRESULT TGFramework::_IVariableAuto::GetRange ( BSTR * LowValue, int * Condition, BSTR * HighValue ) {
    HRESULT _hr = raw_GetRange(LowValue, Condition, HighValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2406)
inline HRESULT TGFramework::_IVariableAuto::SetRangeEx ( _bstr_t LowValue, _bstr_t LowLimitVarName, _bstr_t HighValue, _bstr_t HighLimitVarName, int Condition, long bSkipSettingInitialValue ) {
    HRESULT _hr = raw_SetRangeEx(LowValue, LowLimitVarName, HighValue, HighLimitVarName, Condition, bSkipSettingInitialValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2407)
inline HRESULT TGFramework::_IVariableAuto::SetValue ( _bstr_t Value ) {
    HRESULT _hr = raw_SetValue(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2408)
inline HRESULT TGFramework::_IVariableAuto::GetValue ( BSTR * Value ) {
    HRESULT _hr = raw_GetValue(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2409)
inline HRESULT TGFramework::_IVariableAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2410)
inline enum TGFramework::ObjectType TGFramework::_IVariableAuto::GetType ( ) {
    enum ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2411)
inline void TGFramework::_IVariableAuto::PutVariableTableName ( _bstr_t pName ) {
    HRESULT _hr = put_VariableTableName(pName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2412)
inline _bstr_t TGFramework::_IVariableAuto::GetVariableTableName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_VariableTableName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2413)
inline void TGFramework::_IVariableAuto::PutExpose ( long pbExpose ) {
    HRESULT _hr = put_Expose(pbExpose);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2414)
inline long TGFramework::_IVariableAuto::GetExpose ( ) {
    long _result = 0;
    HRESULT _hr = get_Expose(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2415)
inline void TGFramework::_IVariableAuto::PutExposeName ( _bstr_t pbsName ) {
    HRESULT _hr = put_ExposeName(pbsName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2416)
inline _bstr_t TGFramework::_IVariableAuto::GetExposeName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ExposeName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2417)
inline _bstr_t TGFramework::_IVariableAuto::GetDisplayName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DisplayName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2418)
inline _bstr_t TGFramework::_IVariableAuto::GetSystemName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SystemName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2419)
inline VARIANT_BOOL TGFramework::_IVariableAuto::GetIsSuppressVariable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsSuppressVariable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2420)
inline double TGFramework::_IVariableAuto::GetValueOutOfRange ( ) {
    double _result = 0;
    HRESULT _hr = raw_GetValueOutOfRange(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2421)
inline HRESULT TGFramework::_IVariableAuto::GetDiscreteValues ( SAFEARRAY * * DiscreteValues ) {
    HRESULT _hr = raw_GetDiscreteValues(DiscreteValues);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2422)
inline HRESULT TGFramework::_IVariableAuto::SetDiscreteValues ( SAFEARRAY * * DiscreteValues ) {
    HRESULT _hr = raw_SetDiscreteValues(DiscreteValues);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2423)
inline HRESULT TGFramework::_IVariableAuto::AddDiscreteValue ( double DiscreteValue ) {
    HRESULT _hr = raw_AddDiscreteValue(DiscreteValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2424)
inline HRESULT TGFramework::_IVariableAuto::RemoveDiscreteValue ( double DiscreteValue ) {
    HRESULT _hr = raw_RemoveDiscreteValue(DiscreteValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2425)
inline HRESULT TGFramework::_IVariableAuto::ClearLimitsOrDiscreteValues ( ) {
    HRESULT _hr = raw_ClearLimitsOrDiscreteValues();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2426)
inline HRESULT TGFramework::_IVariableAuto::AddDiscreteVariables ( SAFEARRAY * * DiscreteVariables ) {
    HRESULT _hr = raw_AddDiscreteVariables(DiscreteVariables);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2427)
inline HRESULT TGFramework::_IVariableAuto::GetDiscreteVariables ( VARIANT * DiscreteVariables, int * numDiscreteVariables ) {
    HRESULT _hr = raw_GetDiscreteVariables(DiscreteVariables, numDiscreteVariables);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2428)
inline HRESULT TGFramework::_IVariableAuto::RemoveDiscreteVariables ( SAFEARRAY * * DiscreteVariables ) {
    HRESULT _hr = raw_RemoveDiscreteVariables(DiscreteVariables);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2429)
inline _bstr_t TGFramework::_IVariableAuto::GetComment ( ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetComment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2430)
inline HRESULT TGFramework::_IVariableAuto::SetComment ( _bstr_t Comment ) {
    HRESULT _hr = raw_SetComment(Comment);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2431)
inline HRESULT TGFramework::_IVariableAuto::HasExternalLink ( VARIANT_BOOL * bLinked ) {
    HRESULT _hr = raw_HasExternalLink(bLinked);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2432)
inline HRESULT TGFramework::_IVariableAuto::IsExternalLinkFrozen ( VARIANT_BOOL * bFrozen ) {
    HRESULT _hr = raw_IsExternalLinkFrozen(bFrozen);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2433)
inline HRESULT TGFramework::_IVariableAuto::GetExternalLinkInfo ( BSTR * SourceVariableName, BSTR * SourceDocumenetName ) {
    HRESULT _hr = raw_GetExternalLinkInfo(SourceVariableName, SourceDocumenetName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2434)
inline HRESULT TGFramework::_IVariableAuto::FreezeExternalLink ( ) {
    HRESULT _hr = raw_FreezeExternalLink();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2435)
inline HRESULT TGFramework::_IVariableAuto::ThawExternalLink ( ) {
    HRESULT _hr = raw_ThawExternalLink();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2436)
inline HRESULT TGFramework::_IVariableAuto::BreakExternalLink ( ) {
    HRESULT _hr = raw_BreakExternalLink();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2437)
inline VARIANT_BOOL TGFramework::_IVariableAuto::GetIsReadOnly ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsReadOnly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2438)
inline enum TGFramework::seVariableTypeConstants TGFramework::_IVariableAuto::GetVariableType ( ) {
    enum seVariableTypeConstants _result;
    HRESULT _hr = get_VariableType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2439)
inline HRESULT TGFramework::_IVariableAuto::GetValueRangeHighValue ( double * pdHighValue ) {
    HRESULT _hr = raw_GetValueRangeHighValue(pdHighValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2440)
inline HRESULT TGFramework::_IVariableAuto::SetValueRangeHighValue ( double dHighValue ) {
    HRESULT _hr = raw_SetValueRangeHighValue(dHighValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2441)
inline HRESULT TGFramework::_IVariableAuto::GetValueRangeLowValue ( double * pdHighValue ) {
    HRESULT _hr = raw_GetValueRangeLowValue(pdHighValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2442)
inline HRESULT TGFramework::_IVariableAuto::SetValueRangeLowValue ( double dHighValue ) {
    HRESULT _hr = raw_SetValueRangeLowValue(dHighValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2443)
inline HRESULT TGFramework::_IVariableAuto::SetValueRangeValues ( double LowValue, int Condition, double HighValue ) {
    HRESULT _hr = raw_SetValueRangeValues(LowValue, Condition, HighValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2444)
inline HRESULT TGFramework::_IVariableAuto::GetValueRangeValues ( double * LowValue, int * Condition, double * HighValue ) {
    HRESULT _hr = raw_GetValueRangeValues(LowValue, Condition, HighValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2445)
inline HRESULT TGFramework::_IVariableAuto::GetValueDiscreteValues ( SAFEARRAY * * DiscreteValues ) {
    HRESULT _hr = raw_GetValueDiscreteValues(DiscreteValues);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2446)
inline HRESULT TGFramework::_IVariableAuto::SetValueDiscreteValues ( SAFEARRAY * * DiscreteValues ) {
    HRESULT _hr = raw_SetValueDiscreteValues(DiscreteValues);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2447)
inline HRESULT TGFramework::_IVariableAuto::GetValueEx ( double * pdValue, enum seUnitsTypeConstants seUnitsType ) {
    HRESULT _hr = raw_GetValueEx(pdValue, seUnitsType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2448)
inline HRESULT TGFramework::_IVariableAuto::SetValueEx ( double dValue, enum seUnitsTypeConstants seUnitsType ) {
    HRESULT _hr = raw_SetValueEx(dValue, seUnitsType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2449)
inline HRESULT TGFramework::_IVariableAuto::GetRangeEx ( BSTR * LowValue, BSTR * LowLimitVarName, BSTR * HighValue, BSTR * HighLimitVarName, int * Condition ) {
    HRESULT _hr = raw_GetRangeEx(LowValue, LowLimitVarName, HighValue, HighLimitVarName, Condition);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2450)
inline HRESULT TGFramework::_IVariableAuto::HasVariableLimit ( VARIANT_BOOL * bVariableLimit, enum VariableLimitValueConstant * LimitValue ) {
    HRESULT _hr = raw_HasVariableLimit(bVariableLimit, LimitValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2451)
inline IDispatchPtr TGFramework::_IVariableAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2452)
inline VARIANT_BOOL TGFramework::_IVariableAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface _IVariableListAuto wrapper method implementations
//

#pragma implementation_key(2453)
inline int TGFramework::_IVariableListAuto::GetCount ( ) {
    int _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2454)
inline IDispatchPtr TGFramework::_IVariableListAuto::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2455)
inline IUnknownPtr TGFramework::_IVariableListAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2456)
inline HRESULT TGFramework::_IVariableListAuto::Remove ( const _variant_t & Index ) {
    HRESULT _hr = raw_Remove(Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2457)
inline HRESULT TGFramework::_IVariableListAuto::Add ( const _variant_t & variable ) {
    HRESULT _hr = raw_Add(variable);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _IVariablesAuto wrapper method implementations
//

#pragma implementation_key(2458)
inline int TGFramework::_IVariablesAuto::GetCount ( ) {
    int _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2459)
inline IDispatchPtr TGFramework::_IVariablesAuto::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2460)
inline IUnknownPtr TGFramework::_IVariablesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2461)
inline IDispatchPtr TGFramework::_IVariablesAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2462)
inline IDispatchPtr TGFramework::_IVariablesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2463)
inline IDispatchPtr TGFramework::_IVariablesAuto::Add ( _bstr_t pName, _bstr_t pFormula, const _variant_t & UnitsType ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Add(pName, pFormula, UnitsType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2464)
inline IDispatchPtr TGFramework::_IVariablesAuto::AddFromClipboard ( _bstr_t pName, const _variant_t & UnitsType ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_AddFromClipboard(pName, UnitsType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2465)
inline HRESULT TGFramework::_IVariablesAuto::Edit ( _bstr_t pName, _bstr_t pFormula ) {
    HRESULT _hr = raw_Edit(pName, pFormula);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2466)
inline HRESULT TGFramework::_IVariablesAuto::EditFromClipboard ( _bstr_t pName ) {
    HRESULT _hr = raw_EditFromClipboard(pName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2467)
inline HRESULT TGFramework::_IVariablesAuto::PutName ( IDispatch * pVariable, _bstr_t pName ) {
    HRESULT _hr = raw_PutName(pVariable, pName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2468)
inline _bstr_t TGFramework::_IVariablesAuto::GetName ( IDispatch * pVariable ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetName(pVariable, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2469)
inline IDispatchPtr TGFramework::_IVariablesAuto::Translate ( _bstr_t pName ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Translate(pName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2470)
inline IDispatchPtr TGFramework::_IVariablesAuto::Query ( _bstr_t pFindCriterium, const _variant_t & NamedBy, const _variant_t & VarType, const _variant_t & CaseInsensitive ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Query(pFindCriterium, NamedBy, VarType, CaseInsensitive, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2471)
inline _bstr_t TGFramework::_IVariablesAuto::GetFormula ( _bstr_t wcpName ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetFormula(wcpName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2472)
inline _bstr_t TGFramework::_IVariablesAuto::GetDisplayName ( IDispatch * pVariable ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetDisplayName(pVariable, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2473)
inline _bstr_t TGFramework::_IVariablesAuto::GetSystemName ( IDispatch * pVariable ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetSystemName(pVariable, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2474)
inline HRESULT TGFramework::_IVariablesAuto::CopyToClipboard ( _bstr_t bsName ) {
    HRESULT _hr = raw_CopyToClipboard(bsName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _IInterpartLinkAuto wrapper method implementations
//

#pragma implementation_key(2475)
inline HRESULT TGFramework::_IInterpartLinkAuto::IsFrozen ( VARIANT_BOOL * bFrozen ) {
    HRESULT _hr = raw_IsFrozen(bFrozen);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2476)
inline HRESULT TGFramework::_IInterpartLinkAuto::GetInfo ( BSTR * SourceFeatureName, BSTR * SourceDocumenetName ) {
    HRESULT _hr = raw_GetInfo(SourceFeatureName, SourceDocumenetName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2477)
inline HRESULT TGFramework::_IInterpartLinkAuto::Freeze ( ) {
    HRESULT _hr = raw_Freeze();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2478)
inline HRESULT TGFramework::_IInterpartLinkAuto::Thaw ( ) {
    HRESULT _hr = raw_Thaw();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2479)
inline HRESULT TGFramework::_IInterpartLinkAuto::BreakLink ( ) {
    HRESULT _hr = raw_BreakLink();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _IInterpartLinksAuto wrapper method implementations
//

#pragma implementation_key(2480)
inline int TGFramework::_IInterpartLinksAuto::GetCount ( ) {
    int _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2481)
inline IDispatchPtr TGFramework::_IInterpartLinksAuto::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2482)
inline IDispatchPtr TGFramework::_IInterpartLinksAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2483)
inline IDispatchPtr TGFramework::_IInterpartLinksAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// interface _ISensorAuto wrapper method implementations
//

#pragma implementation_key(2484)
inline enum TGFramework::SensorTypeConstants TGFramework::_ISensorAuto::GetSensorType ( ) {
    enum SensorTypeConstants _result;
    HRESULT _hr = get_SensorType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2485)
inline enum TGFramework::SensorStatusConstants TGFramework::_ISensorAuto::GetStatus ( ) {
    enum SensorStatusConstants _result;
    HRESULT _hr = get_Status(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2486)
inline VARIANT_BOOL TGFramework::_ISensorAuto::GetIsInRange ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsInRange(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2487)
inline double TGFramework::_ISensorAuto::GetCurrentValue ( ) {
    double _result = 0;
    HRESULT _hr = get_CurrentValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2488)
inline void TGFramework::_ISensorAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2489)
inline _bstr_t TGFramework::_ISensorAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2490)
inline void TGFramework::_ISensorAuto::PutDescription ( _bstr_t Description ) {
    HRESULT _hr = put_Description(Description);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2491)
inline _bstr_t TGFramework::_ISensorAuto::GetDescription ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Description(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2492)
inline void TGFramework::_ISensorAuto::PutLowerRange ( double LowerRange ) {
    HRESULT _hr = put_LowerRange(LowerRange);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2493)
inline double TGFramework::_ISensorAuto::GetLowerRange ( ) {
    double _result = 0;
    HRESULT _hr = get_LowerRange(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2494)
inline void TGFramework::_ISensorAuto::PutUpperRange ( double UpperRange ) {
    HRESULT _hr = put_UpperRange(UpperRange);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2495)
inline double TGFramework::_ISensorAuto::GetUpperRange ( ) {
    double _result = 0;
    HRESULT _hr = get_UpperRange(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2496)
inline void TGFramework::_ISensorAuto::PutOperator ( enum SensorOperatorConstants Operator ) {
    HRESULT _hr = put_Operator(Operator);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2497)
inline enum TGFramework::SensorOperatorConstants TGFramework::_ISensorAuto::GetOperator ( ) {
    enum SensorOperatorConstants _result;
    HRESULT _hr = get_Operator(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2498)
inline void TGFramework::_ISensorAuto::PutMinimumThreshold ( double MinimumThreshold ) {
    HRESULT _hr = put_MinimumThreshold(MinimumThreshold);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2499)
inline double TGFramework::_ISensorAuto::GetMinimumThreshold ( ) {
    double _result = 0;
    HRESULT _hr = get_MinimumThreshold(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2500)
inline void TGFramework::_ISensorAuto::PutMaximumThreshold ( double MaximumThreshold ) {
    HRESULT _hr = put_MaximumThreshold(MaximumThreshold);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2501)
inline double TGFramework::_ISensorAuto::GetMaximumThreshold ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumThreshold(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2502)
inline void TGFramework::_ISensorAuto::PutDisplayType ( enum SensorDisplayTypeConstants DisplayType ) {
    HRESULT _hr = put_DisplayType(DisplayType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2503)
inline enum TGFramework::SensorDisplayTypeConstants TGFramework::_ISensorAuto::GetDisplayType ( ) {
    enum SensorDisplayTypeConstants _result;
    HRESULT _hr = get_DisplayType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2504)
inline void TGFramework::_ISensorAuto::PutUpdateMechanism ( enum SensorUpdateMechanismConstants UpdateMechanism ) {
    HRESULT _hr = put_UpdateMechanism(UpdateMechanism);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2505)
inline enum TGFramework::SensorUpdateMechanismConstants TGFramework::_ISensorAuto::GetUpdateMechanism ( ) {
    enum SensorUpdateMechanismConstants _result;
    HRESULT _hr = get_UpdateMechanism(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2506)
inline HRESULT TGFramework::_ISensorAuto::Update ( ) {
    HRESULT _hr = raw_Update();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2507)
inline HRESULT TGFramework::_ISensorAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2508)
inline IDispatchPtr TGFramework::_ISensorAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2509)
inline VARIANT_BOOL TGFramework::_ISensorAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface _ISensorsAuto wrapper method implementations
//

#pragma implementation_key(2510)
inline int TGFramework::_ISensorsAuto::GetCount ( ) {
    int _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2511)
inline IDispatchPtr TGFramework::_ISensorsAuto::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2512)
inline IUnknownPtr TGFramework::_ISensorsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2513)
inline IDispatchPtr TGFramework::_ISensorsAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2514)
inline IDispatchPtr TGFramework::_ISensorsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2515)
inline IDispatchPtr TGFramework::_ISensorsAuto::AddVariableSensor ( IDispatch * variable, _bstr_t Name, _bstr_t Description, double LowerRange, double UpperRange, double MinimumThreshold, double MaximumThreshold, enum SensorOperatorConstants Operator, enum SensorDisplayTypeConstants DisplayType, enum SensorUpdateMechanismConstants UpdateMechanism ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_AddVariableSensor(variable, Name, Description, LowerRange, UpperRange, MinimumThreshold, MaximumThreshold, Operator, DisplayType, UpdateMechanism, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2516)
inline IDispatchPtr TGFramework::_ISensorsAuto::AddMinimumDistanceSensor ( IDispatch * Element1, IDispatch * Element2, _bstr_t Name, _bstr_t Description, double LowerRange, double UpperRange, double MinimumThreshold, double MaximumThreshold, enum SensorOperatorConstants Operator, enum SensorDisplayTypeConstants DisplayType, enum SensorUpdateMechanismConstants UpdateMechanism ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_AddMinimumDistanceSensor(Element1, Element2, Name, Description, LowerRange, UpperRange, MinimumThreshold, MaximumThreshold, Operator, DisplayType, UpdateMechanism, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2517)
inline IDispatchPtr TGFramework::_ISensorsAuto::AddSurfaceAreaSensor ( enum SurfaceAreaSensorAreaTypeConstants iSensorType, enum SurfaceAreaSensorSelectionTypeConstants iSelectionType, _bstr_t Name, _bstr_t Description, double LowerRange, double UpperRange, double MinimumThreshold, double MaximumThreshold, enum SensorOperatorConstants Operator, enum SensorDisplayTypeConstants DisplayType, enum SensorUpdateMechanismConstants UpdateMechanism, VARIANT * Element ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_AddSurfaceAreaSensor(iSensorType, iSelectionType, Name, Description, LowerRange, UpperRange, MinimumThreshold, MaximumThreshold, Operator, DisplayType, UpdateMechanism, Element, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// interface _ISheetMetalSensorsAuto wrapper method implementations
//

#pragma implementation_key(2518)
inline int TGFramework::_ISheetMetalSensorsAuto::GetCount ( ) {
    int _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2519)
inline IDispatchPtr TGFramework::_ISheetMetalSensorsAuto::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2520)
inline IUnknownPtr TGFramework::_ISheetMetalSensorsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2521)
inline IDispatchPtr TGFramework::_ISheetMetalSensorsAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2522)
inline IDispatchPtr TGFramework::_ISheetMetalSensorsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2523)
inline IDispatchPtr TGFramework::_ISheetMetalSensorsAuto::AddVariableSensor ( IDispatch * variable, _bstr_t Name, _bstr_t Description, double LowerRange, double UpperRange, double MinimumThreshold, double MaximumThreshold, enum SensorOperatorConstants Operator, enum SensorDisplayTypeConstants DisplayType, enum SensorUpdateMechanismConstants UpdateMechanism ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_AddVariableSensor(variable, Name, Description, LowerRange, UpperRange, MinimumThreshold, MaximumThreshold, Operator, DisplayType, UpdateMechanism, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2524)
inline IDispatchPtr TGFramework::_ISheetMetalSensorsAuto::AddMinimumDistanceSensor ( IDispatch * Element1, IDispatch * Element2, _bstr_t Name, _bstr_t Description, double LowerRange, double UpperRange, double MinimumThreshold, double MaximumThreshold, enum SensorOperatorConstants Operator, enum SensorDisplayTypeConstants DisplayType, enum SensorUpdateMechanismConstants UpdateMechanism ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_AddMinimumDistanceSensor(Element1, Element2, Name, Description, LowerRange, UpperRange, MinimumThreshold, MaximumThreshold, Operator, DisplayType, UpdateMechanism, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2525)
inline IDispatchPtr TGFramework::_ISheetMetalSensorsAuto::AddSheetMetalCheckerSensor ( enum SheetMetalSensorFeatureTypeConstants LeftFeatureType, enum SheetMetalSensorFeatureTypeConstants RightFeatureType, _bstr_t Name, _bstr_t Description, double Threshold, enum SensorUpdateMechanismConstants UpdateMechanism, VARIANT * Element ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_AddSheetMetalCheckerSensor(LeftFeatureType, RightFeatureType, Name, Description, Threshold, UpdateMechanism, Element, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2526)
inline IDispatchPtr TGFramework::_ISheetMetalSensorsAuto::AddSurfaceAreaSensor ( enum SurfaceAreaSensorAreaTypeConstants iSensorType, enum SurfaceAreaSensorSelectionTypeConstants iSelectionType, _bstr_t Name, _bstr_t Description, double LowerRange, double UpperRange, double MinimumThreshold, double MaximumThreshold, enum SensorOperatorConstants Operator, enum SensorDisplayTypeConstants DisplayType, enum SensorUpdateMechanismConstants UpdateMechanism, VARIANT * Element ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_AddSurfaceAreaSensor(iSensorType, iSelectionType, Name, Description, LowerRange, UpperRange, MinimumThreshold, MaximumThreshold, Operator, DisplayType, UpdateMechanism, Element, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// interface _ISectionViewAuto wrapper method implementations
//

#pragma implementation_key(2527)
inline void TGFramework::_ISectionViewAuto::PutCaption ( _bstr_t Caption ) {
    HRESULT _hr = put_Caption(Caption);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2528)
inline _bstr_t TGFramework::_ISectionViewAuto::GetCaption ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Caption(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2529)
inline HRESULT TGFramework::_ISectionViewAuto::Show ( VARIANT_BOOL bShowSectionView ) {
    HRESULT _hr = raw_Show(bShowSectionView);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2530)
inline HRESULT TGFramework::_ISectionViewAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2531)
inline void TGFramework::_ISectionViewAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2532)
inline _bstr_t TGFramework::_ISectionViewAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2533)
inline void TGFramework::_ISectionViewAuto::PutStyle ( _bstr_t Style ) {
    HRESULT _hr = put_Style(Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2534)
inline _bstr_t TGFramework::_ISectionViewAuto::GetStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2535)
inline void TGFramework::_ISectionViewAuto::PutCuttingPlaneColor ( long PlaneColor ) {
    HRESULT _hr = put_CuttingPlaneColor(PlaneColor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2536)
inline long TGFramework::_ISectionViewAuto::GetCuttingPlaneColor ( ) {
    long _result = 0;
    HRESULT _hr = get_CuttingPlaneColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2537)
inline void TGFramework::_ISectionViewAuto::PutCuttingPlaneEdgeColor ( long EdgeColor ) {
    HRESULT _hr = put_CuttingPlaneEdgeColor(EdgeColor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2538)
inline long TGFramework::_ISectionViewAuto::GetCuttingPlaneEdgeColor ( ) {
    long _result = 0;
    HRESULT _hr = get_CuttingPlaneEdgeColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2539)
inline void TGFramework::_ISectionViewAuto::PutOpacity ( double pdOpacity ) {
    HRESULT _hr = put_Opacity(pdOpacity);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2540)
inline double TGFramework::_ISectionViewAuto::GetOpacity ( ) {
    double _result = 0;
    HRESULT _hr = get_Opacity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2541)
inline void TGFramework::_ISectionViewAuto::PutThroughAllExtent ( double pdExtent ) {
    HRESULT _hr = put_ThroughAllExtent(pdExtent);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2542)
inline double TGFramework::_ISectionViewAuto::GetThroughAllExtent ( ) {
    double _result = 0;
    HRESULT _hr = get_ThroughAllExtent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2543)
inline void TGFramework::_ISectionViewAuto::PutCutHardware ( long pbCutHardware ) {
    HRESULT _hr = put_CutHardware(pbCutHardware);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2544)
inline long TGFramework::_ISectionViewAuto::GetCutHardware ( ) {
    long _result = 0;
    HRESULT _hr = get_CutHardware(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2545)
inline void TGFramework::_ISectionViewAuto::PutSectionDisplayMode ( enum PMISectionDisplayModeConstants val ) {
    HRESULT _hr = put_SectionDisplayMode(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2546)
inline enum TGFramework::PMISectionDisplayModeConstants TGFramework::_ISectionViewAuto::GetSectionDisplayMode ( ) {
    enum PMISectionDisplayModeConstants _result;
    HRESULT _hr = get_SectionDisplayMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2547)
inline void TGFramework::_ISectionViewAuto::PutShowCuttingPlane ( long pbShowCuttingPlane ) {
    HRESULT _hr = put_ShowCuttingPlane(pbShowCuttingPlane);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2548)
inline long TGFramework::_ISectionViewAuto::GetShowCuttingPlane ( ) {
    long _result = 0;
    HRESULT _hr = get_ShowCuttingPlane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2549)
inline HRESULT TGFramework::_ISectionViewAuto::AddToModelView ( IUnknown * ModelView ) {
    HRESULT _hr = raw_AddToModelView(ModelView);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2550)
inline HRESULT TGFramework::_ISectionViewAuto::RemoveFromModelView ( IUnknown * ModelView ) {
    HRESULT _hr = raw_RemoveFromModelView(ModelView);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2551)
inline HRESULT TGFramework::_ISectionViewAuto::EditByPlane ( long nNumPlanes, SAFEARRAY * * pPlanes, SAFEARRAY * * PlaneCutDirections, enum SectionViewPlaneExtentTypeConstant eExtentType, long bCutHardwareParts ) {
    HRESULT _hr = raw_EditByPlane(nNumPlanes, pPlanes, PlaneCutDirections, eExtentType, bCutHardwareParts);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2552)
inline void TGFramework::_ISectionViewAuto::PutPlaneExtentType ( enum SectionViewPlaneExtentTypeConstant peExtentType ) {
    HRESULT _hr = put_PlaneExtentType(peExtentType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2553)
inline enum TGFramework::SectionViewPlaneExtentTypeConstant TGFramework::_ISectionViewAuto::GetPlaneExtentType ( ) {
    enum SectionViewPlaneExtentTypeConstant _result;
    HRESULT _hr = get_PlaneExtentType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2554)
inline IDispatchPtr TGFramework::_ISectionViewAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2555)
inline VARIANT_BOOL TGFramework::_ISectionViewAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2556)
inline HRESULT TGFramework::_ISectionViewAuto::EditByPlaneEx ( long nNumPlanes, SAFEARRAY * * pPlanes, SAFEARRAY * * PlaneCutDirections, SAFEARRAY * * SectionViewPlaneTypes, enum SectionViewPlaneExtentTypeConstant eExtentType, VARIANT_BOOL bCutHardwareParts ) {
    HRESULT _hr = raw_EditByPlaneEx(nNumPlanes, pPlanes, PlaneCutDirections, SectionViewPlaneTypes, eExtentType, bCutHardwareParts);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2557)
inline long TGFramework::_ISectionViewAuto::GetIsCutByPlane ( ) {
    long _result = 0;
    HRESULT _hr = get_IsCutByPlane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface _ISectionViewsAuto wrapper method implementations
//

#pragma implementation_key(2558)
inline int TGFramework::_ISectionViewsAuto::GetCount ( ) {
    int _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2559)
inline IDispatchPtr TGFramework::_ISectionViewsAuto::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2560)
inline IUnknownPtr TGFramework::_ISectionViewsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2561)
inline IDispatchPtr TGFramework::_ISectionViewsAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2562)
inline IDispatchPtr TGFramework::_ISectionViewsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2563)
inline IDispatchPtr TGFramework::_ISectionViewsAuto::Add ( long nNumProfiles, SAFEARRAY * * pProfiles, _bstr_t szCaption, double dExtent, enum SectionViewExtentSide eExtentSide, enum SectionViewProfileSide eProfileSide, long bCutHardwareParts ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Add(nNumProfiles, pProfiles, szCaption, dExtent, eExtentSide, eProfileSide, bCutHardwareParts, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2564)
inline IDispatchPtr TGFramework::_ISectionViewsAuto::AddByPlane ( long nNumPlanes, SAFEARRAY * * pPlanes, SAFEARRAY * * PlaneCutDirections, enum SectionViewPlaneExtentTypeConstant eExtentType, _bstr_t szCaption, long bCutHardwareParts ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_AddByPlane(nNumPlanes, pPlanes, PlaneCutDirections, eExtentType, szCaption, bCutHardwareParts, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2565)
inline IDispatchPtr TGFramework::_ISectionViewsAuto::AddByPlaneEx ( long nNumPlanes, SAFEARRAY * * pPlanes, SAFEARRAY * * PlaneCutDirections, SAFEARRAY * * SectionViewPlaneTypes, enum SectionViewPlaneExtentTypeConstant eExtentType, _bstr_t szCaption, VARIANT_BOOL bCutHardwareParts ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_AddByPlaneEx(nNumPlanes, pPlanes, PlaneCutDirections, SectionViewPlaneTypes, eExtentType, szCaption, bCutHardwareParts, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// interface _ILayerAuto wrapper method implementations
//

#pragma implementation_key(2566)
inline TGFramework::ApplicationPtr TGFramework::_ILayerAuto::GetApplication ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(2567)
inline IDispatchPtr TGFramework::_ILayerAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2568)
inline HRESULT TGFramework::_ILayerAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2569)
inline VARIANT_BOOL TGFramework::_ILayerAuto::GetIsEmpty ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsEmpty(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2570)
inline _bstr_t TGFramework::_ILayerAuto::GetKey ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2571)
inline void TGFramework::_ILayerAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2572)
inline _bstr_t TGFramework::_ILayerAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2573)
inline void TGFramework::_ILayerAuto::PutDescription ( _bstr_t Description ) {
    HRESULT _hr = put_Description(Description);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2574)
inline _bstr_t TGFramework::_ILayerAuto::GetDescription ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Description(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2575)
inline HRESULT TGFramework::_ILayerAuto::Activate ( ) {
    HRESULT _hr = raw_Activate();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2576)
inline VARIANT_BOOL TGFramework::_ILayerAuto::GetShow ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Show(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2577)
inline void TGFramework::_ILayerAuto::PutShow ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_Show(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2578)
inline VARIANT_BOOL TGFramework::_ILayerAuto::GetLocatable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Locatable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2579)
inline void TGFramework::_ILayerAuto::PutLocatable ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_Locatable(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2580)
inline HRESULT TGFramework::_ILayerAuto::ShowInContext ( IDispatch * Context ) {
    HRESULT _hr = raw_ShowInContext(Context);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2581)
inline HRESULT TGFramework::_ILayerAuto::HideInContext ( IDispatch * Context ) {
    HRESULT _hr = raw_HideInContext(Context);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2582)
inline HRESULT TGFramework::_ILayerAuto::MakeLocatableInContext ( IDispatch * Context ) {
    HRESULT _hr = raw_MakeLocatableInContext(Context);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2583)
inline HRESULT TGFramework::_ILayerAuto::MakeNonLocatableInContext ( IDispatch * Context ) {
    HRESULT _hr = raw_MakeNonLocatableInContext(Context);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2584)
inline HRESULT TGFramework::_ILayerAuto::ActivateInContext ( IDispatch * Context ) {
    HRESULT _hr = raw_ActivateInContext(Context);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2585)
inline VARIANT_BOOL TGFramework::_ILayerAuto::IsShownInContext ( IDispatch * Context ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsShownInContext(Context, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2586)
inline VARIANT_BOOL TGFramework::_ILayerAuto::IsLocatableInContext ( IDispatch * Context ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsLocatableInContext(Context, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2587)
inline HRESULT TGFramework::_ILayerAuto::ShowOnly ( ) {
    HRESULT _hr = raw_ShowOnly();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2588)
inline HRESULT TGFramework::_ILayerAuto::ShowOnlyInContext ( IDispatch * Context ) {
    HRESULT _hr = raw_ShowOnlyInContext(Context);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2589)
inline HRESULT TGFramework::_ILayerAuto::DeleteLayerAndObjects ( ) {
    HRESULT _hr = raw_DeleteLayerAndObjects();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2590)
inline HRESULT TGFramework::_ILayerAuto::ShowEverywhere ( ) {
    HRESULT _hr = raw_ShowEverywhere();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2591)
inline HRESULT TGFramework::_ILayerAuto::HideEverywhere ( ) {
    HRESULT _hr = raw_HideEverywhere();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2592)
inline HRESULT TGFramework::_ILayerAuto::MoveAllObjectsToLayer ( IDispatch * NewLayerDispatch ) {
    HRESULT _hr = raw_MoveAllObjectsToLayer(NewLayerDispatch);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2593)
inline IDispatchPtr TGFramework::_ILayerAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2594)
inline VARIANT_BOOL TGFramework::_ILayerAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface Layer wrapper method implementations
//

#pragma implementation_key(2595)
inline TGFramework::ApplicationPtr TGFramework::Layer::GetApplication ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(2596)
inline IDispatchPtr TGFramework::Layer::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2597)
inline HRESULT TGFramework::Layer::Delete ( ) {
    return _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2598)
inline VARIANT_BOOL TGFramework::Layer::GetIsEmpty ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2599)
inline _bstr_t TGFramework::Layer::GetKey ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2600)
inline void TGFramework::Layer::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2601)
inline _bstr_t TGFramework::Layer::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2602)
inline void TGFramework::Layer::PutDescription ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2603)
inline _bstr_t TGFramework::Layer::GetDescription ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2604)
inline HRESULT TGFramework::Layer::Activate ( ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2605)
inline VARIANT_BOOL TGFramework::Layer::GetShow ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2606)
inline void TGFramework::Layer::PutShow ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2607)
inline VARIANT_BOOL TGFramework::Layer::GetLocatable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2608)
inline void TGFramework::Layer::PutLocatable ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2609)
inline HRESULT TGFramework::Layer::ShowInContext ( IDispatch * Context ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Context);
}

#pragma implementation_key(2610)
inline HRESULT TGFramework::Layer::HideInContext ( IDispatch * Context ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Context);
}

#pragma implementation_key(2611)
inline HRESULT TGFramework::Layer::MakeLocatableInContext ( IDispatch * Context ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Context);
}

#pragma implementation_key(2612)
inline HRESULT TGFramework::Layer::MakeNonLocatableInContext ( IDispatch * Context ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Context);
}

#pragma implementation_key(2613)
inline HRESULT TGFramework::Layer::ActivateInContext ( IDispatch * Context ) {
    return _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Context);
}

#pragma implementation_key(2614)
inline VARIANT_BOOL TGFramework::Layer::IsShownInContext ( IDispatch * Context ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_BOOL, (void*)&_result, 
        L"\x0009", Context);
    return _result;
}

#pragma implementation_key(2615)
inline VARIANT_BOOL TGFramework::Layer::IsLocatableInContext ( IDispatch * Context ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_BOOL, (void*)&_result, 
        L"\x0009", Context);
    return _result;
}

#pragma implementation_key(2616)
inline HRESULT TGFramework::Layer::ShowOnly ( ) {
    return _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2617)
inline HRESULT TGFramework::Layer::ShowOnlyInContext ( IDispatch * Context ) {
    return _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Context);
}

#pragma implementation_key(2618)
inline HRESULT TGFramework::Layer::DeleteLayerAndObjects ( ) {
    return _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2619)
inline HRESULT TGFramework::Layer::ShowEverywhere ( ) {
    return _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2620)
inline HRESULT TGFramework::Layer::HideEverywhere ( ) {
    return _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2621)
inline HRESULT TGFramework::Layer::MoveAllObjectsToLayer ( IDispatch * NewLayerDispatch ) {
    return _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", NewLayerDispatch);
}

#pragma implementation_key(2622)
inline IDispatchPtr TGFramework::Layer::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2623)
inline VARIANT_BOOL TGFramework::Layer::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _ILayersAuto wrapper method implementations
//

#pragma implementation_key(2624)
inline TGFramework::LayerPtr TGFramework::_ILayersAuto::Item ( const _variant_t & Index ) {
    struct Layer * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return LayerPtr(_result, false);
}

#pragma implementation_key(2625)
inline TGFramework::ApplicationPtr TGFramework::_ILayersAuto::GetApplication ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(2626)
inline IDispatchPtr TGFramework::_ILayersAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2627)
inline long TGFramework::_ILayersAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2628)
inline TGFramework::LayerPtr TGFramework::_ILayersAuto::Add ( _bstr_t Name ) {
    struct Layer * _result = 0;
    HRESULT _hr = raw_Add(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return LayerPtr(_result, false);
}

#pragma implementation_key(2629)
inline TGFramework::LayerPtr TGFramework::_ILayersAuto::GetActiveLayer ( ) {
    struct Layer * _result = 0;
    HRESULT _hr = get_ActiveLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return LayerPtr(_result, false);
}

#pragma implementation_key(2630)
inline IUnknownPtr TGFramework::_ILayersAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

//
// interface _ILinearStyleAuto wrapper method implementations
//

#pragma implementation_key(2631)
inline void TGFramework::_ILinearStyleAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2632)
inline _bstr_t TGFramework::_ILinearStyleAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2633)
inline void TGFramework::_ILinearStyleAuto::PutParent ( _bstr_t Name ) {
    HRESULT _hr = put_Parent(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2634)
inline _bstr_t TGFramework::_ILinearStyleAuto::GetParent ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2635)
inline _bstr_t TGFramework::_ILinearStyleAuto::GetDescription ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Description(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2636)
inline void TGFramework::_ILinearStyleAuto::PutUnits ( enum StyleUnitsConstant Units ) {
    HRESULT _hr = put_Units(Units);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2637)
inline enum TGFramework::StyleUnitsConstant TGFramework::_ILinearStyleAuto::GetUnits ( ) {
    enum StyleUnitsConstant _result;
    HRESULT _hr = get_Units(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2638)
inline void TGFramework::_ILinearStyleAuto::PutColor ( long Color ) {
    HRESULT _hr = put_Color(Color);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2639)
inline long TGFramework::_ILinearStyleAuto::GetColor ( ) {
    long _result = 0;
    HRESULT _hr = get_Color(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2640)
inline void TGFramework::_ILinearStyleAuto::PutWidth ( double Width ) {
    HRESULT _hr = put_Width(Width);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2641)
inline double TGFramework::_ILinearStyleAuto::GetWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2642)
inline HRESULT TGFramework::_ILinearStyleAuto::SetDashGap ( long nCount, SAFEARRAY * * dDashGap, VARIANT_BOOL fAutoPhase ) {
    HRESULT _hr = raw_SetDashGap(nCount, dDashGap, fAutoPhase);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2643)
inline long TGFramework::_ILinearStyleAuto::GetDashGapCount ( ) {
    long _result = 0;
    HRESULT _hr = get_DashGapCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2644)
inline HRESULT TGFramework::_ILinearStyleAuto::GetDashGap ( long * pnCount, SAFEARRAY * * dDashGap, VARIANT_BOOL * pfAutoPhase ) {
    HRESULT _hr = raw_GetDashGap(pnCount, dDashGap, pfAutoPhase);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2645)
inline void TGFramework::_ILinearStyleAuto::PutDashType ( _bstr_t Name ) {
    HRESULT _hr = put_DashType(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2646)
inline _bstr_t TGFramework::_ILinearStyleAuto::GetDashType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DashType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2647)
inline IDispatchPtr TGFramework::_ILinearStyleAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2648)
inline VARIANT_BOOL TGFramework::_ILinearStyleAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface _IFillStyleAuto wrapper method implementations
//

#pragma implementation_key(2649)
inline void TGFramework::_IFillStyleAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2650)
inline _bstr_t TGFramework::_IFillStyleAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2651)
inline _bstr_t TGFramework::_IFillStyleAuto::GetDescription ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Description(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2652)
inline void TGFramework::_IFillStyleAuto::PutPatternName ( _bstr_t Name ) {
    HRESULT _hr = put_PatternName(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2653)
inline _bstr_t TGFramework::_IFillStyleAuto::GetPatternName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PatternName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2654)
inline long TGFramework::_IFillStyleAuto::GetPatternType ( ) {
    long _result = 0;
    HRESULT _hr = get_PatternType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2655)
inline void TGFramework::_IFillStyleAuto::PutColor ( long Color ) {
    HRESULT _hr = put_Color(Color);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2656)
inline long TGFramework::_IFillStyleAuto::GetColor ( ) {
    long _result = 0;
    HRESULT _hr = get_Color(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2657)
inline void TGFramework::_IFillStyleAuto::PutFillBackground ( long flag ) {
    HRESULT _hr = put_FillBackground(flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2658)
inline long TGFramework::_IFillStyleAuto::GetFillBackground ( ) {
    long _result = 0;
    HRESULT _hr = get_FillBackground(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2659)
inline void TGFramework::_IFillStyleAuto::PutFillColor ( long Color ) {
    HRESULT _hr = put_FillColor(Color);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2660)
inline long TGFramework::_IFillStyleAuto::GetFillColor ( ) {
    long _result = 0;
    HRESULT _hr = get_FillColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2661)
inline void TGFramework::_IFillStyleAuto::PutRotation ( double Angle ) {
    HRESULT _hr = put_Rotation(Angle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2662)
inline double TGFramework::_IFillStyleAuto::GetRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_Rotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2663)
inline void TGFramework::_IFillStyleAuto::PutSpacing ( double Spacing ) {
    HRESULT _hr = put_Spacing(Spacing);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2664)
inline double TGFramework::_IFillStyleAuto::GetSpacing ( ) {
    double _result = 0;
    HRESULT _hr = get_Spacing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2665)
inline void TGFramework::_IFillStyleAuto::PutScale ( double __MIDL___IFillStyleAuto0001 ) {
    HRESULT _hr = put_Scale(__MIDL___IFillStyleAuto0001);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2666)
inline double TGFramework::_IFillStyleAuto::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2667)
inline void TGFramework::_IFillStyleAuto::PutUnits ( long Units ) {
    HRESULT _hr = put_Units(Units);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2668)
inline long TGFramework::_IFillStyleAuto::GetUnits ( ) {
    long _result = 0;
    HRESULT _hr = get_Units(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2669)
inline void TGFramework::_IFillStyleAuto::PutParent ( _bstr_t Name ) {
    HRESULT _hr = put_Parent(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2670)
inline _bstr_t TGFramework::_IFillStyleAuto::GetParent ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2671)
inline void TGFramework::_IFillStyleAuto::PutActive ( _bstr_t Name ) {
    HRESULT _hr = put_Active(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2672)
inline _bstr_t TGFramework::_IFillStyleAuto::GetActive ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Active(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// interface _IHatchPatternStyleAuto wrapper method implementations
//

#pragma implementation_key(2673)
inline void TGFramework::_IHatchPatternStyleAuto::PutName ( _bstr_t lpName ) {
    HRESULT _hr = put_Name(lpName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2674)
inline _bstr_t TGFramework::_IHatchPatternStyleAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2675)
inline void TGFramework::_IHatchPatternStyleAuto::PutParent ( _bstr_t lpName ) {
    HRESULT _hr = put_Parent(lpName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2676)
inline _bstr_t TGFramework::_IHatchPatternStyleAuto::GetParent ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2677)
inline void TGFramework::_IHatchPatternStyleAuto::PutUnits ( long lpUnits ) {
    HRESULT _hr = put_Units(lpUnits);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2678)
inline long TGFramework::_IHatchPatternStyleAuto::GetUnits ( ) {
    long _result = 0;
    HRESULT _hr = get_Units(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2679)
inline long TGFramework::_IHatchPatternStyleAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2680)
inline long TGFramework::_IHatchPatternStyleAuto::AddHatch ( double dRotation, double dXOrigin, double dYOrigin, double dSpacing, double dShift, long nColor, double dWidth, _bstr_t DashTypeName ) {
    long _result = 0;
    HRESULT _hr = raw_AddHatch(dRotation, dXOrigin, dYOrigin, dSpacing, dShift, nColor, dWidth, DashTypeName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2681)
inline HRESULT TGFramework::_IHatchPatternStyleAuto::GetHatch ( long nDisplayIndex, double * lpdRotation, double * lpdXOrigin, double * lpdYOrigin, double * lpdSpacing, double * lpdShift, long * lpnColor, double * lpdWidth, BSTR * DashTypeName ) {
    HRESULT _hr = raw_GetHatch(nDisplayIndex, lpdRotation, lpdXOrigin, lpdYOrigin, lpdSpacing, lpdShift, lpnColor, lpdWidth, DashTypeName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2682)
inline HRESULT TGFramework::_IHatchPatternStyleAuto::SetHatch ( long nDisplayIndex, double dRotation, double dXOrigin, double dYOrigin, double dSpacing, double dShift, long nColor, double dWidth, _bstr_t DashTypeName ) {
    HRESULT _hr = raw_SetHatch(nDisplayIndex, dRotation, dXOrigin, dYOrigin, dSpacing, dShift, nColor, dWidth, DashTypeName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2683)
inline HRESULT TGFramework::_IHatchPatternStyleAuto::RemoveHatch ( long nDisplayIndex ) {
    HRESULT _hr = raw_RemoveHatch(nDisplayIndex);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2684)
inline HRESULT TGFramework::_IHatchPatternStyleAuto::SetRotation ( long nDisplayIndex, double dRotation ) {
    HRESULT _hr = raw_SetRotation(nDisplayIndex, dRotation);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2685)
inline double TGFramework::_IHatchPatternStyleAuto::GetRotation ( long nDisplayIndex ) {
    double _result = 0;
    HRESULT _hr = raw_GetRotation(nDisplayIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2686)
inline HRESULT TGFramework::_IHatchPatternStyleAuto::SetOrigin ( long nDisplayIndex, double dX, double dY ) {
    HRESULT _hr = raw_SetOrigin(nDisplayIndex, dX, dY);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2687)
inline HRESULT TGFramework::_IHatchPatternStyleAuto::GetOrigin ( long nDisplayIndex, double * lpdX, double * lpdY ) {
    HRESULT _hr = raw_GetOrigin(nDisplayIndex, lpdX, lpdY);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2688)
inline HRESULT TGFramework::_IHatchPatternStyleAuto::SetSpacing ( long nDisplayIndex, double dSpacing ) {
    HRESULT _hr = raw_SetSpacing(nDisplayIndex, dSpacing);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2689)
inline double TGFramework::_IHatchPatternStyleAuto::GetSpacing ( long nDisplayIndex ) {
    double _result = 0;
    HRESULT _hr = raw_GetSpacing(nDisplayIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2690)
inline HRESULT TGFramework::_IHatchPatternStyleAuto::SetShift ( long nDisplayIndex, double dShift ) {
    HRESULT _hr = raw_SetShift(nDisplayIndex, dShift);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2691)
inline double TGFramework::_IHatchPatternStyleAuto::GetShift ( long nDisplayIndex ) {
    double _result = 0;
    HRESULT _hr = raw_GetShift(nDisplayIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2692)
inline HRESULT TGFramework::_IHatchPatternStyleAuto::SetColor ( long nDisplayIndex, long nColor ) {
    HRESULT _hr = raw_SetColor(nDisplayIndex, nColor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2693)
inline long TGFramework::_IHatchPatternStyleAuto::GetColor ( long nDisplayIndex ) {
    long _result = 0;
    HRESULT _hr = raw_GetColor(nDisplayIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2694)
inline HRESULT TGFramework::_IHatchPatternStyleAuto::SetWidth ( long nDisplayIndex, double dWidth ) {
    HRESULT _hr = raw_SetWidth(nDisplayIndex, dWidth);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2695)
inline double TGFramework::_IHatchPatternStyleAuto::GetWidth ( long nDisplayIndex ) {
    double _result = 0;
    HRESULT _hr = raw_GetWidth(nDisplayIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2696)
inline HRESULT TGFramework::_IHatchPatternStyleAuto::SetDashType ( long nDisplayIndex, _bstr_t DashTypeName ) {
    HRESULT _hr = raw_SetDashType(nDisplayIndex, DashTypeName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2697)
inline _bstr_t TGFramework::_IHatchPatternStyleAuto::GetDashType ( long nDisplayIndex ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetDashType(nDisplayIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2698)
inline HRESULT TGFramework::_IHatchPatternStyleAuto::SetDisplayIndex ( long nCurrentIndex, long nNewIndex ) {
    HRESULT _hr = raw_SetDisplayIndex(nCurrentIndex, nNewIndex);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2699)
inline HRESULT TGFramework::_IHatchPatternStyleAuto::SetDashGap ( long nDisplayIndex, long nCount, SAFEARRAY * * dDashGap ) {
    HRESULT _hr = raw_SetDashGap(nDisplayIndex, nCount, dDashGap);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2700)
inline long TGFramework::_IHatchPatternStyleAuto::GetDashGapCount ( long nDisplayIndex ) {
    long _result = 0;
    HRESULT _hr = get_DashGapCount(nDisplayIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2701)
inline HRESULT TGFramework::_IHatchPatternStyleAuto::GetDashGap ( long nDisplayIndex, long * pnCount, SAFEARRAY * * dDashGap ) {
    HRESULT _hr = raw_GetDashGap(nDisplayIndex, pnCount, dDashGap);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2702)
inline IDispatchPtr TGFramework::_IHatchPatternStyleAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2703)
inline VARIANT_BOOL TGFramework::_IHatchPatternStyleAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2704)
inline void TGFramework::_IHatchPatternStyleAuto::PutMasterRotation ( double pdRotation ) {
    HRESULT _hr = put_MasterRotation(pdRotation);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2705)
inline double TGFramework::_IHatchPatternStyleAuto::GetMasterRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_MasterRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2706)
inline void TGFramework::_IHatchPatternStyleAuto::PutMasterScale ( double pdScale ) {
    HRESULT _hr = put_MasterScale(pdScale);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2707)
inline double TGFramework::_IHatchPatternStyleAuto::GetMasterScale ( ) {
    double _result = 0;
    HRESULT _hr = get_MasterScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2708)
inline HRESULT TGFramework::_IHatchPatternStyleAuto::SetMasterColor ( long nColor ) {
    HRESULT _hr = raw_SetMasterColor(nColor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2709)
inline HRESULT TGFramework::_IHatchPatternStyleAuto::SetMasterWidth ( double dWidth ) {
    HRESULT _hr = raw_SetMasterWidth(dWidth);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2710)
inline long TGFramework::_IHatchPatternStyleAuto::AddHatchWithOption ( double dRotation, double dXOrigin, double dYOrigin, double dSpacing, double dShift, long nColor, double dWidth, _bstr_t DashTypeName, enum HatchElementType elementType, enum RadialHatchElementCenterLocation ellipseCenterLocation, double dEllipseAxisRatio ) {
    long _result = 0;
    HRESULT _hr = raw_AddHatchWithOption(dRotation, dXOrigin, dYOrigin, dSpacing, dShift, nColor, dWidth, DashTypeName, elementType, ellipseCenterLocation, dEllipseAxisRatio, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2711)
inline HRESULT TGFramework::_IHatchPatternStyleAuto::GetHatchWithOption ( long nDisplayIndex, double * lpdRotation, double * lpdXOrigin, double * lpdYOrigin, double * lpdSpacing, double * lpdShift, long * lpnColor, double * lpdWidth, BSTR * DashTypeName, enum HatchElementType * elementType, enum RadialHatchElementCenterLocation * ellipseCenterLocation, double * dEllipseAxisRatio ) {
    HRESULT _hr = raw_GetHatchWithOption(nDisplayIndex, lpdRotation, lpdXOrigin, lpdYOrigin, lpdSpacing, lpdShift, lpnColor, lpdWidth, DashTypeName, elementType, ellipseCenterLocation, dEllipseAxisRatio);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2712)
inline HRESULT TGFramework::_IHatchPatternStyleAuto::SetHatchWithOption ( long nDisplayIndex, double dRotation, double dXOrigin, double dYOrigin, double dSpacing, double dShift, long nColor, double dWidth, _bstr_t DashTypeName, enum HatchElementType elementType, enum RadialHatchElementCenterLocation ellipseCenterLocation, double dEllipseAxisRatio ) {
    HRESULT _hr = raw_SetHatchWithOption(nDisplayIndex, dRotation, dXOrigin, dYOrigin, dSpacing, dShift, nColor, dWidth, DashTypeName, elementType, ellipseCenterLocation, dEllipseAxisRatio);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2713)
inline HRESULT TGFramework::_IHatchPatternStyleAuto::SetElementType ( long nDisplayIndex, enum HatchElementType elementType ) {
    HRESULT _hr = raw_SetElementType(nDisplayIndex, elementType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2714)
inline enum TGFramework::HatchElementType TGFramework::_IHatchPatternStyleAuto::GetElementType ( long nDisplayIndex ) {
    enum HatchElementType _result;
    HRESULT _hr = raw_GetElementType(nDisplayIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2715)
inline HRESULT TGFramework::_IHatchPatternStyleAuto::SetRadialElementCenterLocation ( long nDisplayIndex, enum RadialHatchElementCenterLocation ellipseCenterLocation ) {
    HRESULT _hr = raw_SetRadialElementCenterLocation(nDisplayIndex, ellipseCenterLocation);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2716)
inline enum TGFramework::RadialHatchElementCenterLocation TGFramework::_IHatchPatternStyleAuto::GetRadialElementCenterLocation ( long nDisplayIndex ) {
    enum RadialHatchElementCenterLocation _result;
    HRESULT _hr = raw_GetRadialElementCenterLocation(nDisplayIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2717)
inline HRESULT TGFramework::_IHatchPatternStyleAuto::SetRadialElementAxisRatio ( long nDisplayIndex, double dEllipseAxisRatio ) {
    HRESULT _hr = raw_SetRadialElementAxisRatio(nDisplayIndex, dEllipseAxisRatio);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2718)
inline double TGFramework::_IHatchPatternStyleAuto::GetRadialElementAxisRatio ( long nDisplayIndex ) {
    double _result = 0;
    HRESULT _hr = raw_GetRadialElementAxisRatio(nDisplayIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2719)
inline HRESULT TGFramework::_IHatchPatternStyleAuto::SetSourceColor ( long nColor ) {
    HRESULT _hr = raw_SetSourceColor(nColor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2720)
inline HRESULT TGFramework::_IHatchPatternStyleAuto::SetSourceWidth ( double dWidth ) {
    HRESULT _hr = raw_SetSourceWidth(dWidth);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2721)
inline void TGFramework::_IHatchPatternStyleAuto::PutSourceRotation ( double pdRotation ) {
    HRESULT _hr = put_SourceRotation(pdRotation);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2722)
inline double TGFramework::_IHatchPatternStyleAuto::GetSourceRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_SourceRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2723)
inline void TGFramework::_IHatchPatternStyleAuto::PutSourceScale ( double pdScale ) {
    HRESULT _hr = put_SourceScale(pdScale);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2724)
inline double TGFramework::_IHatchPatternStyleAuto::GetSourceScale ( ) {
    double _result = 0;
    HRESULT _hr = get_SourceScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface LinearStyle wrapper method implementations
//

#pragma implementation_key(2725)
inline void TGFramework::LinearStyle::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2726)
inline _bstr_t TGFramework::LinearStyle::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2727)
inline void TGFramework::LinearStyle::PutParent ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2728)
inline _bstr_t TGFramework::LinearStyle::GetParent ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2729)
inline _bstr_t TGFramework::LinearStyle::GetDescription ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2730)
inline void TGFramework::LinearStyle::PutUnits ( enum StyleUnitsConstant _arg1 ) {
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2731)
inline enum TGFramework::StyleUnitsConstant TGFramework::LinearStyle::GetUnits ( ) {
    enum StyleUnitsConstant _result;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2732)
inline void TGFramework::LinearStyle::PutColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2733)
inline long TGFramework::LinearStyle::GetColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2734)
inline void TGFramework::LinearStyle::PutWidth ( double _arg1 ) {
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2735)
inline double TGFramework::LinearStyle::GetWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2736)
inline HRESULT TGFramework::LinearStyle::SetDashGap ( long nCount, SAFEARRAY * * dDashGap, VARIANT_BOOL fAutoPhase ) {
    return _com_dispatch_method(this, 0x69, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6005\x000b", nCount, dDashGap, fAutoPhase);
}

#pragma implementation_key(2737)
inline long TGFramework::LinearStyle::GetDashGapCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2738)
inline HRESULT TGFramework::LinearStyle::GetDashGap ( long * pnCount, SAFEARRAY * * dDashGap, VARIANT_BOOL * pfAutoPhase ) {
    return _com_dispatch_method(this, 0x6b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6005\x400b", pnCount, dDashGap, pfAutoPhase);
}

#pragma implementation_key(2739)
inline void TGFramework::LinearStyle::PutDashType ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2740)
inline _bstr_t TGFramework::LinearStyle::GetDashType ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2741)
inline IDispatchPtr TGFramework::LinearStyle::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2742)
inline VARIANT_BOOL TGFramework::LinearStyle::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _ILinearStylesAuto wrapper method implementations
//

#pragma implementation_key(2743)
inline long TGFramework::_ILinearStylesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2744)
inline IDispatchPtr TGFramework::_ILinearStylesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2745)
inline IDispatchPtr TGFramework::_ILinearStylesAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2746)
inline TGFramework::LinearStylePtr TGFramework::_ILinearStylesAuto::Item ( const _variant_t & Index ) {
    struct LinearStyle * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return LinearStylePtr(_result, false);
}

#pragma implementation_key(2747)
inline IUnknownPtr TGFramework::_ILinearStylesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2748)
inline TGFramework::LinearStylePtr TGFramework::_ILinearStylesAuto::Add ( _bstr_t Name, _bstr_t Parent ) {
    struct LinearStyle * _result = 0;
    HRESULT _hr = raw_Add(Name, Parent, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return LinearStylePtr(_result, false);
}

#pragma implementation_key(2749)
inline HRESULT TGFramework::_ILinearStylesAuto::Remove ( _bstr_t Name ) {
    HRESULT _hr = raw_Remove(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2750)
inline _bstr_t TGFramework::_ILinearStylesAuto::GetActive ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Active(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2751)
inline void TGFramework::_ILinearStylesAuto::PutActive ( _bstr_t Name ) {
    HRESULT _hr = put_Active(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// dispinterface FillStyle wrapper method implementations
//

#pragma implementation_key(2752)
inline void TGFramework::FillStyle::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2753)
inline _bstr_t TGFramework::FillStyle::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2754)
inline _bstr_t TGFramework::FillStyle::GetDescription ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2755)
inline void TGFramework::FillStyle::PutPatternName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2756)
inline _bstr_t TGFramework::FillStyle::GetPatternName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2757)
inline long TGFramework::FillStyle::GetPatternType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2758)
inline void TGFramework::FillStyle::PutColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2759)
inline long TGFramework::FillStyle::GetColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2760)
inline void TGFramework::FillStyle::PutFillBackground ( long _arg1 ) {
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2761)
inline long TGFramework::FillStyle::GetFillBackground ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2762)
inline void TGFramework::FillStyle::PutFillColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2763)
inline long TGFramework::FillStyle::GetFillColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2764)
inline void TGFramework::FillStyle::PutRotation ( double _arg1 ) {
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2765)
inline double TGFramework::FillStyle::GetRotation ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2766)
inline void TGFramework::FillStyle::PutSpacing ( double _arg1 ) {
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2767)
inline double TGFramework::FillStyle::GetSpacing ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2768)
inline void TGFramework::FillStyle::PutScale ( double _arg1 ) {
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2769)
inline double TGFramework::FillStyle::GetScale ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2770)
inline void TGFramework::FillStyle::PutUnits ( long _arg1 ) {
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2771)
inline long TGFramework::FillStyle::GetUnits ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2772)
inline void TGFramework::FillStyle::PutParent ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2773)
inline _bstr_t TGFramework::FillStyle::GetParent ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2774)
inline void TGFramework::FillStyle::PutActive ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2775)
inline _bstr_t TGFramework::FillStyle::GetActive ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x78, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

//
// interface _IFillStylesAuto wrapper method implementations
//

#pragma implementation_key(2776)
inline long TGFramework::_IFillStylesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2777)
inline IDispatchPtr TGFramework::_IFillStylesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2778)
inline IDispatchPtr TGFramework::_IFillStylesAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2779)
inline TGFramework::FillStylePtr TGFramework::_IFillStylesAuto::Item ( const _variant_t & Index ) {
    struct FillStyle * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return FillStylePtr(_result, false);
}

#pragma implementation_key(2780)
inline IUnknownPtr TGFramework::_IFillStylesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2781)
inline TGFramework::FillStylePtr TGFramework::_IFillStylesAuto::Add ( _bstr_t Name, _bstr_t Parent ) {
    struct FillStyle * _result = 0;
    HRESULT _hr = raw_Add(Name, Parent, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return FillStylePtr(_result, false);
}

#pragma implementation_key(2782)
inline HRESULT TGFramework::_IFillStylesAuto::Remove ( _bstr_t Name ) {
    HRESULT _hr = raw_Remove(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2783)
inline void TGFramework::_IFillStylesAuto::PutActive ( _bstr_t Name ) {
    HRESULT _hr = put_Active(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2784)
inline _bstr_t TGFramework::_IFillStylesAuto::GetActive ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Active(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// dispinterface HatchPatternStyle wrapper method implementations
//

#pragma implementation_key(2785)
inline void TGFramework::HatchPatternStyle::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2786)
inline _bstr_t TGFramework::HatchPatternStyle::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2787)
inline void TGFramework::HatchPatternStyle::PutParent ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2788)
inline _bstr_t TGFramework::HatchPatternStyle::GetParent ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2789)
inline void TGFramework::HatchPatternStyle::PutUnits ( long _arg1 ) {
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2790)
inline long TGFramework::HatchPatternStyle::GetUnits ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2791)
inline long TGFramework::HatchPatternStyle::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2792)
inline long TGFramework::HatchPatternStyle::AddHatch ( double dRotation, double dXOrigin, double dYOrigin, double dSpacing, double dShift, long nColor, double dWidth, _bstr_t DashTypeName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0003\x0005\x0008", dRotation, dXOrigin, dYOrigin, dSpacing, dShift, nColor, dWidth, (BSTR)DashTypeName);
    return _result;
}

#pragma implementation_key(2793)
inline HRESULT TGFramework::HatchPatternStyle::GetHatch ( long nDisplayIndex, double * lpdRotation, double * lpdXOrigin, double * lpdYOrigin, double * lpdSpacing, double * lpdShift, long * lpnColor, double * lpdWidth, BSTR * DashTypeName ) {
    return _com_dispatch_method(this, 0x6b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4005\x4005\x4003\x4005\x4008", nDisplayIndex, lpdRotation, lpdXOrigin, lpdYOrigin, lpdSpacing, lpdShift, lpnColor, lpdWidth, DashTypeName);
}

#pragma implementation_key(2794)
inline HRESULT TGFramework::HatchPatternStyle::SetHatch ( long nDisplayIndex, double dRotation, double dXOrigin, double dYOrigin, double dSpacing, double dShift, long nColor, double dWidth, _bstr_t DashTypeName ) {
    return _com_dispatch_method(this, 0x6c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005\x0005\x0005\x0003\x0005\x0008", nDisplayIndex, dRotation, dXOrigin, dYOrigin, dSpacing, dShift, nColor, dWidth, (BSTR)DashTypeName);
}

#pragma implementation_key(2795)
inline HRESULT TGFramework::HatchPatternStyle::RemoveHatch ( long nDisplayIndex ) {
    return _com_dispatch_method(this, 0x6d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", nDisplayIndex);
}

#pragma implementation_key(2796)
inline HRESULT TGFramework::HatchPatternStyle::SetRotation ( long nDisplayIndex, double dRotation ) {
    return _com_dispatch_method(this, 0x6e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005", nDisplayIndex, dRotation);
}

#pragma implementation_key(2797)
inline double TGFramework::HatchPatternStyle::GetRotation ( long nDisplayIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6f, DISPATCH_METHOD, VT_R8, (void*)&_result, 
        L"\x0003", nDisplayIndex);
    return _result;
}

#pragma implementation_key(2798)
inline HRESULT TGFramework::HatchPatternStyle::SetOrigin ( long nDisplayIndex, double dX, double dY ) {
    return _com_dispatch_method(this, 0x70, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005", nDisplayIndex, dX, dY);
}

#pragma implementation_key(2799)
inline HRESULT TGFramework::HatchPatternStyle::GetOrigin ( long nDisplayIndex, double * lpdX, double * lpdY ) {
    return _com_dispatch_method(this, 0x71, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005", nDisplayIndex, lpdX, lpdY);
}

#pragma implementation_key(2800)
inline HRESULT TGFramework::HatchPatternStyle::SetSpacing ( long nDisplayIndex, double dSpacing ) {
    return _com_dispatch_method(this, 0x72, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005", nDisplayIndex, dSpacing);
}

#pragma implementation_key(2801)
inline double TGFramework::HatchPatternStyle::GetSpacing ( long nDisplayIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x73, DISPATCH_METHOD, VT_R8, (void*)&_result, 
        L"\x0003", nDisplayIndex);
    return _result;
}

#pragma implementation_key(2802)
inline HRESULT TGFramework::HatchPatternStyle::SetShift ( long nDisplayIndex, double dShift ) {
    return _com_dispatch_method(this, 0x74, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005", nDisplayIndex, dShift);
}

#pragma implementation_key(2803)
inline double TGFramework::HatchPatternStyle::GetShift ( long nDisplayIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_R8, (void*)&_result, 
        L"\x0003", nDisplayIndex);
    return _result;
}

#pragma implementation_key(2804)
inline HRESULT TGFramework::HatchPatternStyle::SetColor ( long nDisplayIndex, long nColor ) {
    return _com_dispatch_method(this, 0x76, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", nDisplayIndex, nColor);
}

#pragma implementation_key(2805)
inline long TGFramework::HatchPatternStyle::GetColor ( long nDisplayIndex ) {
    long _result = 0;
    _com_dispatch_method(this, 0x77, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nDisplayIndex);
    return _result;
}

#pragma implementation_key(2806)
inline HRESULT TGFramework::HatchPatternStyle::SetWidth ( long nDisplayIndex, double dWidth ) {
    return _com_dispatch_method(this, 0x78, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005", nDisplayIndex, dWidth);
}

#pragma implementation_key(2807)
inline double TGFramework::HatchPatternStyle::GetWidth ( long nDisplayIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x79, DISPATCH_METHOD, VT_R8, (void*)&_result, 
        L"\x0003", nDisplayIndex);
    return _result;
}

#pragma implementation_key(2808)
inline HRESULT TGFramework::HatchPatternStyle::SetDashType ( long nDisplayIndex, _bstr_t DashTypeName ) {
    return _com_dispatch_method(this, 0x7a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0008", nDisplayIndex, (BSTR)DashTypeName);
}

#pragma implementation_key(2809)
inline _bstr_t TGFramework::HatchPatternStyle::GetDashType ( long nDisplayIndex ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7b, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0003", nDisplayIndex);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2810)
inline HRESULT TGFramework::HatchPatternStyle::SetDisplayIndex ( long nCurrentIndex, long nNewIndex ) {
    return _com_dispatch_method(this, 0x7c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", nCurrentIndex, nNewIndex);
}

#pragma implementation_key(2811)
inline HRESULT TGFramework::HatchPatternStyle::SetDashGap ( long nDisplayIndex, long nCount, SAFEARRAY * * dDashGap ) {
    return _com_dispatch_method(this, 0x7d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x6005", nDisplayIndex, nCount, dDashGap);
}

#pragma implementation_key(2812)
inline long TGFramework::HatchPatternStyle::GetDashGapCount ( long nDisplayIndex ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nDisplayIndex);
    return _result;
}

#pragma implementation_key(2813)
inline HRESULT TGFramework::HatchPatternStyle::GetDashGap ( long nDisplayIndex, long * pnCount, SAFEARRAY * * dDashGap ) {
    return _com_dispatch_method(this, 0x7f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4003\x6005", nDisplayIndex, pnCount, dDashGap);
}

#pragma implementation_key(2814)
inline IDispatchPtr TGFramework::HatchPatternStyle::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2815)
inline VARIANT_BOOL TGFramework::HatchPatternStyle::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(2816)
inline void TGFramework::HatchPatternStyle::PutMasterRotation ( double _arg1 ) {
    _com_dispatch_method(this, 0x80, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2817)
inline double TGFramework::HatchPatternStyle::GetMasterRotation ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x80, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2818)
inline void TGFramework::HatchPatternStyle::PutMasterScale ( double _arg1 ) {
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2819)
inline double TGFramework::HatchPatternStyle::GetMasterScale ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x81, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2820)
inline HRESULT TGFramework::HatchPatternStyle::SetMasterColor ( long nColor ) {
    return _com_dispatch_method(this, 0x82, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", nColor);
}

#pragma implementation_key(2821)
inline HRESULT TGFramework::HatchPatternStyle::SetMasterWidth ( double dWidth ) {
    return _com_dispatch_method(this, 0x83, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", dWidth);
}

#pragma implementation_key(2822)
inline long TGFramework::HatchPatternStyle::AddHatchWithOption ( double dRotation, double dXOrigin, double dYOrigin, double dSpacing, double dShift, long nColor, double dWidth, _bstr_t DashTypeName, enum HatchElementType elementType, enum RadialHatchElementCenterLocation ellipseCenterLocation, double dEllipseAxisRatio ) {
    long _result = 0;
    _com_dispatch_method(this, 0x84, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0003\x0005\x0008\x0003\x0003\x0005", dRotation, dXOrigin, dYOrigin, dSpacing, dShift, nColor, dWidth, (BSTR)DashTypeName, elementType, ellipseCenterLocation, dEllipseAxisRatio);
    return _result;
}

#pragma implementation_key(2823)
inline HRESULT TGFramework::HatchPatternStyle::GetHatchWithOption ( long nDisplayIndex, double * lpdRotation, double * lpdXOrigin, double * lpdYOrigin, double * lpdSpacing, double * lpdShift, long * lpnColor, double * lpdWidth, BSTR * DashTypeName, enum HatchElementType * elementType, enum RadialHatchElementCenterLocation * ellipseCenterLocation, double * dEllipseAxisRatio ) {
    return _com_dispatch_method(this, 0x85, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4005\x4005\x4003\x4005\x4008\x4003\x4003\x4005", nDisplayIndex, lpdRotation, lpdXOrigin, lpdYOrigin, lpdSpacing, lpdShift, lpnColor, lpdWidth, DashTypeName, elementType, ellipseCenterLocation, dEllipseAxisRatio);
}

#pragma implementation_key(2824)
inline HRESULT TGFramework::HatchPatternStyle::SetHatchWithOption ( long nDisplayIndex, double dRotation, double dXOrigin, double dYOrigin, double dSpacing, double dShift, long nColor, double dWidth, _bstr_t DashTypeName, enum HatchElementType elementType, enum RadialHatchElementCenterLocation ellipseCenterLocation, double dEllipseAxisRatio ) {
    return _com_dispatch_method(this, 0x86, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005\x0005\x0005\x0003\x0005\x0008\x0003\x0003\x0005", nDisplayIndex, dRotation, dXOrigin, dYOrigin, dSpacing, dShift, nColor, dWidth, (BSTR)DashTypeName, elementType, ellipseCenterLocation, dEllipseAxisRatio);
}

#pragma implementation_key(2825)
inline HRESULT TGFramework::HatchPatternStyle::SetElementType ( long nDisplayIndex, enum HatchElementType elementType ) {
    return _com_dispatch_method(this, 0x87, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", nDisplayIndex, elementType);
}

#pragma implementation_key(2826)
inline enum TGFramework::HatchElementType TGFramework::HatchPatternStyle::GetElementType ( long nDisplayIndex ) {
    enum HatchElementType _result;
    _com_dispatch_method(this, 0x88, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nDisplayIndex);
    return _result;
}

#pragma implementation_key(2827)
inline HRESULT TGFramework::HatchPatternStyle::SetRadialElementCenterLocation ( long nDisplayIndex, enum RadialHatchElementCenterLocation ellipseCenterLocation ) {
    return _com_dispatch_method(this, 0x89, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", nDisplayIndex, ellipseCenterLocation);
}

#pragma implementation_key(2828)
inline enum TGFramework::RadialHatchElementCenterLocation TGFramework::HatchPatternStyle::GetRadialElementCenterLocation ( long nDisplayIndex ) {
    enum RadialHatchElementCenterLocation _result;
    _com_dispatch_method(this, 0x8a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nDisplayIndex);
    return _result;
}

#pragma implementation_key(2829)
inline HRESULT TGFramework::HatchPatternStyle::SetRadialElementAxisRatio ( long nDisplayIndex, double dEllipseAxisRatio ) {
    return _com_dispatch_method(this, 0x8b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005", nDisplayIndex, dEllipseAxisRatio);
}

#pragma implementation_key(2830)
inline double TGFramework::HatchPatternStyle::GetRadialElementAxisRatio ( long nDisplayIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x8c, DISPATCH_METHOD, VT_R8, (void*)&_result, 
        L"\x0003", nDisplayIndex);
    return _result;
}

#pragma implementation_key(2831)
inline HRESULT TGFramework::HatchPatternStyle::SetSourceColor ( long nColor ) {
    return _com_dispatch_method(this, 0x8e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", nColor);
}

#pragma implementation_key(2832)
inline HRESULT TGFramework::HatchPatternStyle::SetSourceWidth ( double dWidth ) {
    return _com_dispatch_method(this, 0x8d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", dWidth);
}

#pragma implementation_key(2833)
inline void TGFramework::HatchPatternStyle::PutSourceRotation ( double _arg1 ) {
    _com_dispatch_method(this, 0x8f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2834)
inline double TGFramework::HatchPatternStyle::GetSourceRotation ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x8f, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2835)
inline void TGFramework::HatchPatternStyle::PutSourceScale ( double _arg1 ) {
    _com_dispatch_method(this, 0x90, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2836)
inline double TGFramework::HatchPatternStyle::GetSourceScale ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x90, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

//
// interface _IHatchPatternStylesAuto wrapper method implementations
//

#pragma implementation_key(2837)
inline long TGFramework::_IHatchPatternStylesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2838)
inline IDispatchPtr TGFramework::_IHatchPatternStylesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2839)
inline IDispatchPtr TGFramework::_IHatchPatternStylesAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2840)
inline TGFramework::HatchPatternStylePtr TGFramework::_IHatchPatternStylesAuto::Item ( const _variant_t & Index ) {
    struct HatchPatternStyle * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return HatchPatternStylePtr(_result, false);
}

#pragma implementation_key(2841)
inline IUnknownPtr TGFramework::_IHatchPatternStylesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2842)
inline TGFramework::HatchPatternStylePtr TGFramework::_IHatchPatternStylesAuto::Add ( _bstr_t Name, _bstr_t Parent ) {
    struct HatchPatternStyle * _result = 0;
    HRESULT _hr = raw_Add(Name, Parent, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return HatchPatternStylePtr(_result, false);
}

#pragma implementation_key(2843)
inline HRESULT TGFramework::_IHatchPatternStylesAuto::Remove ( _bstr_t Name ) {
    HRESULT _hr = raw_Remove(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _IDashStyleAuto wrapper method implementations
//

#pragma implementation_key(2844)
inline void TGFramework::_IDashStyleAuto::PutName ( _bstr_t lpName ) {
    HRESULT _hr = put_Name(lpName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2845)
inline _bstr_t TGFramework::_IDashStyleAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2846)
inline void TGFramework::_IDashStyleAuto::PutUnits ( long lpUnits ) {
    HRESULT _hr = put_Units(lpUnits);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2847)
inline long TGFramework::_IDashStyleAuto::GetUnits ( ) {
    long _result = 0;
    HRESULT _hr = get_Units(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2848)
inline long TGFramework::_IDashStyleAuto::GetDashGapCount ( ) {
    long _result = 0;
    HRESULT _hr = get_DashGapCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2849)
inline HRESULT TGFramework::_IDashStyleAuto::SetDashGap ( long nCount, SAFEARRAY * * dDashGap ) {
    HRESULT _hr = raw_SetDashGap(nCount, dDashGap);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2850)
inline HRESULT TGFramework::_IDashStyleAuto::GetDashGap ( long * pnCount, SAFEARRAY * * dDashGap ) {
    HRESULT _hr = raw_GetDashGap(pnCount, dDashGap);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2851)
inline void TGFramework::_IDashStyleAuto::PutCenter ( VARIANT_BOOL pvbCenter ) {
    HRESULT _hr = put_Center(pvbCenter);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2852)
inline VARIANT_BOOL TGFramework::_IDashStyleAuto::GetCenter ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Center(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2853)
inline void TGFramework::_IDashStyleAuto::PutPercentStartEndDash ( double pdPercentStartEndDash ) {
    HRESULT _hr = put_PercentStartEndDash(pdPercentStartEndDash);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2854)
inline double TGFramework::_IDashStyleAuto::GetPercentStartEndDash ( ) {
    double _result = 0;
    HRESULT _hr = get_PercentStartEndDash(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2855)
inline IDispatchPtr TGFramework::_IDashStyleAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2856)
inline VARIANT_BOOL TGFramework::_IDashStyleAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface DashStyle wrapper method implementations
//

#pragma implementation_key(2857)
inline void TGFramework::DashStyle::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2858)
inline _bstr_t TGFramework::DashStyle::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2859)
inline void TGFramework::DashStyle::PutUnits ( long _arg1 ) {
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2860)
inline long TGFramework::DashStyle::GetUnits ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2861)
inline long TGFramework::DashStyle::GetDashGapCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2862)
inline HRESULT TGFramework::DashStyle::SetDashGap ( long nCount, SAFEARRAY * * dDashGap ) {
    return _com_dispatch_method(this, 0x6a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6005", nCount, dDashGap);
}

#pragma implementation_key(2863)
inline HRESULT TGFramework::DashStyle::GetDashGap ( long * pnCount, SAFEARRAY * * dDashGap ) {
    return _com_dispatch_method(this, 0x6b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6005", pnCount, dDashGap);
}

#pragma implementation_key(2864)
inline void TGFramework::DashStyle::PutCenter ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2865)
inline VARIANT_BOOL TGFramework::DashStyle::GetCenter ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2866)
inline void TGFramework::DashStyle::PutPercentStartEndDash ( double _arg1 ) {
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2867)
inline double TGFramework::DashStyle::GetPercentStartEndDash ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2868)
inline IDispatchPtr TGFramework::DashStyle::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2869)
inline VARIANT_BOOL TGFramework::DashStyle::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _IDashStylesAuto wrapper method implementations
//

#pragma implementation_key(2870)
inline long TGFramework::_IDashStylesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2871)
inline IDispatchPtr TGFramework::_IDashStylesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2872)
inline IDispatchPtr TGFramework::_IDashStylesAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2873)
inline TGFramework::DashStylePtr TGFramework::_IDashStylesAuto::Item ( const _variant_t & Index ) {
    struct DashStyle * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DashStylePtr(_result, false);
}

#pragma implementation_key(2874)
inline IUnknownPtr TGFramework::_IDashStylesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2875)
inline TGFramework::DashStylePtr TGFramework::_IDashStylesAuto::Add ( _bstr_t Name ) {
    struct DashStyle * _result = 0;
    HRESULT _hr = raw_Add(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DashStylePtr(_result, false);
}

#pragma implementation_key(2876)
inline HRESULT TGFramework::_IDashStylesAuto::Remove ( _bstr_t Name ) {
    HRESULT _hr = raw_Remove(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _IFaceStyleAuto wrapper method implementations
//

#pragma implementation_key(2877)
inline _bstr_t TGFramework::_IFaceStyleAuto::GetStyleName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StyleName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2878)
inline void TGFramework::_IFaceStyleAuto::PutStyleName ( _bstr_t psStyleName ) {
    HRESULT _hr = put_StyleName(psStyleName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2879)
inline _bstr_t TGFramework::_IFaceStyleAuto::GetParent ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2880)
inline void TGFramework::_IFaceStyleAuto::PutParent ( _bstr_t psParentName ) {
    HRESULT _hr = put_Parent(psParentName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2881)
inline long TGFramework::_IFaceStyleAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2882)
inline void TGFramework::_IFaceStyleAuto::PutType ( long plType ) {
    HRESULT _hr = put_Type(plType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2883)
inline long TGFramework::_IFaceStyleAuto::GetFlags ( ) {
    long _result = 0;
    HRESULT _hr = get_Flags(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2884)
inline void TGFramework::_IFaceStyleAuto::PutFlags ( long plFlags ) {
    HRESULT _hr = put_Flags(plFlags);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2885)
inline float TGFramework::_IFaceStyleAuto::GetWireframeColorRed ( ) {
    float _result = 0;
    HRESULT _hr = get_WireframeColorRed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2886)
inline void TGFramework::_IFaceStyleAuto::PutWireframeColorRed ( float pfWireframeColorRed ) {
    HRESULT _hr = put_WireframeColorRed(pfWireframeColorRed);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2887)
inline float TGFramework::_IFaceStyleAuto::GetWireframeColorGreen ( ) {
    float _result = 0;
    HRESULT _hr = get_WireframeColorGreen(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2888)
inline void TGFramework::_IFaceStyleAuto::PutWireframeColorGreen ( float pfWireframeColorGreen ) {
    HRESULT _hr = put_WireframeColorGreen(pfWireframeColorGreen);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2889)
inline float TGFramework::_IFaceStyleAuto::GetWireframeColorBlue ( ) {
    float _result = 0;
    HRESULT _hr = get_WireframeColorBlue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2890)
inline void TGFramework::_IFaceStyleAuto::PutWireframeColorBlue ( float pfWireframeColorBlue ) {
    HRESULT _hr = put_WireframeColorBlue(pfWireframeColorBlue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2891)
inline long TGFramework::_IFaceStyleAuto::GetStipplePattern ( ) {
    long _result = 0;
    HRESULT _hr = get_StipplePattern(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2892)
inline void TGFramework::_IFaceStyleAuto::PutStipplePattern ( long plStipplePattern ) {
    HRESULT _hr = put_StipplePattern(plStipplePattern);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2893)
inline short TGFramework::_IFaceStyleAuto::GetStippleScale ( ) {
    short _result = 0;
    HRESULT _hr = get_StippleScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2894)
inline void TGFramework::_IFaceStyleAuto::PutStippleScale ( short psStippleScale ) {
    HRESULT _hr = put_StippleScale(psStippleScale);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2895)
inline float TGFramework::_IFaceStyleAuto::GetLineWidth ( ) {
    float _result = 0;
    HRESULT _hr = get_LineWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2896)
inline void TGFramework::_IFaceStyleAuto::PutLineWidth ( float pfLineWidth ) {
    HRESULT _hr = put_LineWidth(pfLineWidth);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2897)
inline short TGFramework::_IFaceStyleAuto::GetWidthSpace ( ) {
    short _result = 0;
    HRESULT _hr = get_WidthSpace(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2898)
inline void TGFramework::_IFaceStyleAuto::PutWidthSpace ( short psWidthSpace ) {
    HRESULT _hr = put_WidthSpace(psWidthSpace);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2899)
inline float TGFramework::_IFaceStyleAuto::GetDiffuseRed ( ) {
    float _result = 0;
    HRESULT _hr = get_DiffuseRed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2900)
inline void TGFramework::_IFaceStyleAuto::PutDiffuseRed ( float pfDiffuseRed ) {
    HRESULT _hr = put_DiffuseRed(pfDiffuseRed);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2901)
inline float TGFramework::_IFaceStyleAuto::GetDiffuseGreen ( ) {
    float _result = 0;
    HRESULT _hr = get_DiffuseGreen(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2902)
inline void TGFramework::_IFaceStyleAuto::PutDiffuseGreen ( float pfDiffuseGreen ) {
    HRESULT _hr = put_DiffuseGreen(pfDiffuseGreen);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2903)
inline float TGFramework::_IFaceStyleAuto::GetDiffuseBlue ( ) {
    float _result = 0;
    HRESULT _hr = get_DiffuseBlue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2904)
inline void TGFramework::_IFaceStyleAuto::PutDiffuseBlue ( float pfDiffuseBlue ) {
    HRESULT _hr = put_DiffuseBlue(pfDiffuseBlue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2905)
inline float TGFramework::_IFaceStyleAuto::GetSpecularRed ( ) {
    float _result = 0;
    HRESULT _hr = get_SpecularRed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2906)
inline void TGFramework::_IFaceStyleAuto::PutSpecularRed ( float pfSpecularRed ) {
    HRESULT _hr = put_SpecularRed(pfSpecularRed);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2907)
inline float TGFramework::_IFaceStyleAuto::GetSpecularGreen ( ) {
    float _result = 0;
    HRESULT _hr = get_SpecularGreen(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2908)
inline void TGFramework::_IFaceStyleAuto::PutSpecularGreen ( float pfSpecularGreen ) {
    HRESULT _hr = put_SpecularGreen(pfSpecularGreen);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2909)
inline float TGFramework::_IFaceStyleAuto::GetSpecularBlue ( ) {
    float _result = 0;
    HRESULT _hr = get_SpecularBlue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2910)
inline void TGFramework::_IFaceStyleAuto::PutSpecularBlue ( float pfSpecularBlue ) {
    HRESULT _hr = put_SpecularBlue(pfSpecularBlue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2911)
inline float TGFramework::_IFaceStyleAuto::GetAmbientRed ( ) {
    float _result = 0;
    HRESULT _hr = get_AmbientRed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2912)
inline void TGFramework::_IFaceStyleAuto::PutAmbientRed ( float pfAmbientRed ) {
    HRESULT _hr = put_AmbientRed(pfAmbientRed);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2913)
inline float TGFramework::_IFaceStyleAuto::GetAmbientGreen ( ) {
    float _result = 0;
    HRESULT _hr = get_AmbientGreen(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2914)
inline void TGFramework::_IFaceStyleAuto::PutAmbientGreen ( float pfAmbientGreen ) {
    HRESULT _hr = put_AmbientGreen(pfAmbientGreen);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2915)
inline float TGFramework::_IFaceStyleAuto::GetAmbientBlue ( ) {
    float _result = 0;
    HRESULT _hr = get_AmbientBlue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2916)
inline void TGFramework::_IFaceStyleAuto::PutAmbientBlue ( float pfAmbientBlue ) {
    HRESULT _hr = put_AmbientBlue(pfAmbientBlue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2917)
inline float TGFramework::_IFaceStyleAuto::GetEmissionRed ( ) {
    float _result = 0;
    HRESULT _hr = get_EmissionRed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2918)
inline void TGFramework::_IFaceStyleAuto::PutEmissionRed ( float pfEmissionRed ) {
    HRESULT _hr = put_EmissionRed(pfEmissionRed);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2919)
inline float TGFramework::_IFaceStyleAuto::GetEmissionGreen ( ) {
    float _result = 0;
    HRESULT _hr = get_EmissionGreen(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2920)
inline void TGFramework::_IFaceStyleAuto::PutEmissionGreen ( float pfEmissionGreen ) {
    HRESULT _hr = put_EmissionGreen(pfEmissionGreen);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2921)
inline float TGFramework::_IFaceStyleAuto::GetEmissionBlue ( ) {
    float _result = 0;
    HRESULT _hr = get_EmissionBlue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2922)
inline void TGFramework::_IFaceStyleAuto::PutEmissionBlue ( float pfEmissionBlue ) {
    HRESULT _hr = put_EmissionBlue(pfEmissionBlue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2923)
inline float TGFramework::_IFaceStyleAuto::GetShininess ( ) {
    float _result = 0;
    HRESULT _hr = get_Shininess(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2924)
inline void TGFramework::_IFaceStyleAuto::PutShininess ( float pfShininess ) {
    HRESULT _hr = put_Shininess(pfShininess);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2925)
inline float TGFramework::_IFaceStyleAuto::GetOpacity ( ) {
    float _result = 0;
    HRESULT _hr = get_Opacity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2926)
inline void TGFramework::_IFaceStyleAuto::PutOpacity ( float pfOpacity ) {
    HRESULT _hr = put_Opacity(pfOpacity);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2927)
inline float TGFramework::_IFaceStyleAuto::GetReflectivity ( ) {
    float _result = 0;
    HRESULT _hr = get_Reflectivity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2928)
inline void TGFramework::_IFaceStyleAuto::PutReflectivity ( float pfReflectivity ) {
    HRESULT _hr = put_Reflectivity(pfReflectivity);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2929)
inline float TGFramework::_IFaceStyleAuto::GetRefraction ( ) {
    float _result = 0;
    HRESULT _hr = get_Refraction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2930)
inline void TGFramework::_IFaceStyleAuto::PutRefraction ( float pfRefraction ) {
    HRESULT _hr = put_Refraction(pfRefraction);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2931)
inline long TGFramework::_IFaceStyleAuto::GetCastsShadows ( ) {
    long _result = 0;
    HRESULT _hr = get_CastsShadows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2932)
inline void TGFramework::_IFaceStyleAuto::PutCastsShadows ( long pbCastsShadows ) {
    HRESULT _hr = put_CastsShadows(pbCastsShadows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2933)
inline long TGFramework::_IFaceStyleAuto::GetAcceptsShadows ( ) {
    long _result = 0;
    HRESULT _hr = get_AcceptsShadows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2934)
inline void TGFramework::_IFaceStyleAuto::PutAcceptsShadows ( long pbAcceptsShadows ) {
    HRESULT _hr = put_AcceptsShadows(pbAcceptsShadows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2935)
inline _bstr_t TGFramework::_IFaceStyleAuto::GetTextureFileName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextureFileName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2936)
inline void TGFramework::_IFaceStyleAuto::PutTextureFileName ( _bstr_t psTextureFileName ) {
    HRESULT _hr = put_TextureFileName(psTextureFileName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2937)
inline long TGFramework::_IFaceStyleAuto::GetTextureTransparent ( ) {
    long _result = 0;
    HRESULT _hr = get_TextureTransparent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2938)
inline void TGFramework::_IFaceStyleAuto::PutTextureTransparent ( long pbTextureTransparent ) {
    HRESULT _hr = put_TextureTransparent(pbTextureTransparent);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2939)
inline float TGFramework::_IFaceStyleAuto::GetTextureTransparentColorRed ( ) {
    float _result = 0;
    HRESULT _hr = get_TextureTransparentColorRed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2940)
inline void TGFramework::_IFaceStyleAuto::PutTextureTransparentColorRed ( float pfRed ) {
    HRESULT _hr = put_TextureTransparentColorRed(pfRed);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2941)
inline float TGFramework::_IFaceStyleAuto::GetTextureTransparentColorGreen ( ) {
    float _result = 0;
    HRESULT _hr = get_TextureTransparentColorGreen(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2942)
inline void TGFramework::_IFaceStyleAuto::PutTextureTransparentColorGreen ( float pfGreen ) {
    HRESULT _hr = put_TextureTransparentColorGreen(pfGreen);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2943)
inline float TGFramework::_IFaceStyleAuto::GetTextureTransparentColorBlue ( ) {
    float _result = 0;
    HRESULT _hr = get_TextureTransparentColorBlue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2944)
inline void TGFramework::_IFaceStyleAuto::PutTextureTransparentColorBlue ( float pfBlue ) {
    HRESULT _hr = put_TextureTransparentColorBlue(pfBlue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2945)
inline int TGFramework::_IFaceStyleAuto::GetTextureUnits ( ) {
    int _result = 0;
    HRESULT _hr = get_TextureUnits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2946)
inline void TGFramework::_IFaceStyleAuto::PutTextureUnits ( int pnUnits ) {
    HRESULT _hr = put_TextureUnits(pnUnits);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2947)
inline float TGFramework::_IFaceStyleAuto::GetTextureScaleX ( ) {
    float _result = 0;
    HRESULT _hr = get_TextureScaleX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2948)
inline void TGFramework::_IFaceStyleAuto::PutTextureScaleX ( float pfScaleX ) {
    HRESULT _hr = put_TextureScaleX(pfScaleX);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2949)
inline float TGFramework::_IFaceStyleAuto::GetTextureScaleY ( ) {
    float _result = 0;
    HRESULT _hr = get_TextureScaleY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2950)
inline void TGFramework::_IFaceStyleAuto::PutTextureScaleY ( float pfScaleY ) {
    HRESULT _hr = put_TextureScaleY(pfScaleY);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2951)
inline float TGFramework::_IFaceStyleAuto::GetTextureOffsetX ( ) {
    float _result = 0;
    HRESULT _hr = get_TextureOffsetX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2952)
inline void TGFramework::_IFaceStyleAuto::PutTextureOffsetX ( float pfOffsetX ) {
    HRESULT _hr = put_TextureOffsetX(pfOffsetX);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2953)
inline float TGFramework::_IFaceStyleAuto::GetTextureOffsetY ( ) {
    float _result = 0;
    HRESULT _hr = get_TextureOffsetY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2954)
inline void TGFramework::_IFaceStyleAuto::PutTextureOffsetY ( float pfOffsetY ) {
    HRESULT _hr = put_TextureOffsetY(pfOffsetY);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2955)
inline long TGFramework::_IFaceStyleAuto::GetTextureMirrorX ( ) {
    long _result = 0;
    HRESULT _hr = get_TextureMirrorX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2956)
inline void TGFramework::_IFaceStyleAuto::PutTextureMirrorX ( long pbMirrorX ) {
    HRESULT _hr = put_TextureMirrorX(pbMirrorX);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2957)
inline long TGFramework::_IFaceStyleAuto::GetTextureMirrorY ( ) {
    long _result = 0;
    HRESULT _hr = get_TextureMirrorY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2958)
inline void TGFramework::_IFaceStyleAuto::PutTextureMirrorY ( long pbMirrorY ) {
    HRESULT _hr = put_TextureMirrorY(pbMirrorY);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2959)
inline float TGFramework::_IFaceStyleAuto::GetTextureRotation ( ) {
    float _result = 0;
    HRESULT _hr = get_TextureRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2960)
inline void TGFramework::_IFaceStyleAuto::PutTextureRotation ( float pfRotation ) {
    HRESULT _hr = put_TextureRotation(pfRotation);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2961)
inline float TGFramework::_IFaceStyleAuto::GetTextureWeight ( ) {
    float _result = 0;
    HRESULT _hr = get_TextureWeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2962)
inline void TGFramework::_IFaceStyleAuto::PutTextureWeight ( float pfWeight ) {
    HRESULT _hr = put_TextureWeight(pfWeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2963)
inline _bstr_t TGFramework::_IFaceStyleAuto::GetBumpmapFileName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BumpmapFileName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2964)
inline void TGFramework::_IFaceStyleAuto::PutBumpmapFileName ( _bstr_t psBumpmapFileName ) {
    HRESULT _hr = put_BumpmapFileName(psBumpmapFileName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2965)
inline int TGFramework::_IFaceStyleAuto::GetBumpmapUnits ( ) {
    int _result = 0;
    HRESULT _hr = get_BumpmapUnits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2966)
inline void TGFramework::_IFaceStyleAuto::PutBumpmapUnits ( int pnUnits ) {
    HRESULT _hr = put_BumpmapUnits(pnUnits);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2967)
inline float TGFramework::_IFaceStyleAuto::GetBumpmapScaleX ( ) {
    float _result = 0;
    HRESULT _hr = get_BumpmapScaleX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2968)
inline void TGFramework::_IFaceStyleAuto::PutBumpmapScaleX ( float pfScaleX ) {
    HRESULT _hr = put_BumpmapScaleX(pfScaleX);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2969)
inline float TGFramework::_IFaceStyleAuto::GetBumpmapScaleY ( ) {
    float _result = 0;
    HRESULT _hr = get_BumpmapScaleY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2970)
inline void TGFramework::_IFaceStyleAuto::PutBumpmapScaleY ( float pfScaleY ) {
    HRESULT _hr = put_BumpmapScaleY(pfScaleY);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2971)
inline float TGFramework::_IFaceStyleAuto::GetBumpmapOffsetX ( ) {
    float _result = 0;
    HRESULT _hr = get_BumpmapOffsetX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2972)
inline void TGFramework::_IFaceStyleAuto::PutBumpmapOffsetX ( float pfOffsetX ) {
    HRESULT _hr = put_BumpmapOffsetX(pfOffsetX);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2973)
inline float TGFramework::_IFaceStyleAuto::GetBumpmapOffsetY ( ) {
    float _result = 0;
    HRESULT _hr = get_BumpmapOffsetY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2974)
inline void TGFramework::_IFaceStyleAuto::PutBumpmapOffsetY ( float pfOffsetY ) {
    HRESULT _hr = put_BumpmapOffsetY(pfOffsetY);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2975)
inline long TGFramework::_IFaceStyleAuto::GetBumpmapMirrorX ( ) {
    long _result = 0;
    HRESULT _hr = get_BumpmapMirrorX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2976)
inline void TGFramework::_IFaceStyleAuto::PutBumpmapMirrorX ( long pbMirrorX ) {
    HRESULT _hr = put_BumpmapMirrorX(pbMirrorX);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2977)
inline long TGFramework::_IFaceStyleAuto::GetBumpmapMirrorY ( ) {
    long _result = 0;
    HRESULT _hr = get_BumpmapMirrorY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2978)
inline void TGFramework::_IFaceStyleAuto::PutBumpmapMirrorY ( long pbMirrorY ) {
    HRESULT _hr = put_BumpmapMirrorY(pbMirrorY);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2979)
inline float TGFramework::_IFaceStyleAuto::GetBumpmapRotation ( ) {
    float _result = 0;
    HRESULT _hr = get_BumpmapRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2980)
inline void TGFramework::_IFaceStyleAuto::PutBumpmapRotation ( float pfRotation ) {
    HRESULT _hr = put_BumpmapRotation(pfRotation);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2981)
inline float TGFramework::_IFaceStyleAuto::GetBumpmapHeight ( ) {
    float _result = 0;
    HRESULT _hr = get_BumpmapHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2982)
inline void TGFramework::_IFaceStyleAuto::PutBumpmapHeight ( float pfHeight ) {
    HRESULT _hr = put_BumpmapHeight(pfHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2983)
inline long TGFramework::_IFaceStyleAuto::GetBumpmapInvert ( ) {
    long _result = 0;
    HRESULT _hr = get_BumpmapInvert(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2984)
inline void TGFramework::_IFaceStyleAuto::PutBumpmapInvert ( long pbInvert ) {
    HRESULT _hr = put_BumpmapInvert(pbInvert);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2985)
inline enum TGFramework::SeSkyboxType TGFramework::_IFaceStyleAuto::GetSkyboxType ( ) {
    enum SeSkyboxType _result;
    HRESULT _hr = get_SkyboxType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2986)
inline void TGFramework::_IFaceStyleAuto::PutSkyboxType ( enum SeSkyboxType peType ) {
    HRESULT _hr = put_SkyboxType(peType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2987)
inline float TGFramework::_IFaceStyleAuto::GetSkyboxAzimuth ( ) {
    float _result = 0;
    HRESULT _hr = get_SkyboxAzimuth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2988)
inline void TGFramework::_IFaceStyleAuto::PutSkyboxAzimuth ( float pfAzimuth ) {
    HRESULT _hr = put_SkyboxAzimuth(pfAzimuth);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2989)
inline float TGFramework::_IFaceStyleAuto::GetSkyboxAltitude ( ) {
    float _result = 0;
    HRESULT _hr = get_SkyboxAltitude(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2990)
inline void TGFramework::_IFaceStyleAuto::PutSkyboxAltitude ( float pfAltitude ) {
    HRESULT _hr = put_SkyboxAltitude(pfAltitude);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2991)
inline float TGFramework::_IFaceStyleAuto::GetSkyboxRoll ( ) {
    float _result = 0;
    HRESULT _hr = get_SkyboxRoll(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2992)
inline void TGFramework::_IFaceStyleAuto::PutSkyboxRoll ( float pfRoll ) {
    HRESULT _hr = put_SkyboxRoll(pfRoll);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2993)
inline float TGFramework::_IFaceStyleAuto::GetSkyboxConeAngle ( ) {
    float _result = 0;
    HRESULT _hr = get_SkyboxConeAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2994)
inline void TGFramework::_IFaceStyleAuto::PutSkyboxConeAngle ( float pfConeAngle ) {
    HRESULT _hr = put_SkyboxConeAngle(pfConeAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2995)
inline long TGFramework::_IFaceStyleAuto::GetStyleID ( ) {
    long _result = 0;
    HRESULT _hr = get_StyleID(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2996)
inline HRESULT TGFramework::_IFaceStyleAuto::BeginPropertyBuffer ( ) {
    HRESULT _hr = raw_BeginPropertyBuffer();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2997)
inline HRESULT TGFramework::_IFaceStyleAuto::FlushPropertyBuffer ( ) {
    HRESULT _hr = raw_FlushPropertyBuffer();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2998)
inline HRESULT TGFramework::_IFaceStyleAuto::HasWireframeProperties ( int * pbResult ) {
    HRESULT _hr = raw_HasWireframeProperties(pbResult);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2999)
inline HRESULT TGFramework::_IFaceStyleAuto::HasSurfaceProperties ( int * pbResult ) {
    HRESULT _hr = raw_HasSurfaceProperties(pbResult);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3000)
inline HRESULT TGFramework::_IFaceStyleAuto::ClearWireframeProperties ( ) {
    HRESULT _hr = raw_ClearWireframeProperties();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3001)
inline HRESULT TGFramework::_IFaceStyleAuto::ClearSurfaceProperties ( ) {
    HRESULT _hr = raw_ClearSurfaceProperties();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3002)
inline HRESULT TGFramework::_IFaceStyleAuto::GetWireframeColor ( float * pfRed, float * pfGreen, float * pfBlue ) {
    HRESULT _hr = raw_GetWireframeColor(pfRed, pfGreen, pfBlue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3003)
inline HRESULT TGFramework::_IFaceStyleAuto::SetWireframeColor ( float fRed, float fGreen, float fBlue ) {
    HRESULT _hr = raw_SetWireframeColor(fRed, fGreen, fBlue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3004)
inline HRESULT TGFramework::_IFaceStyleAuto::GetDiffuse ( float * pfRed, float * pfGreen, float * pfBlue ) {
    HRESULT _hr = raw_GetDiffuse(pfRed, pfGreen, pfBlue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3005)
inline HRESULT TGFramework::_IFaceStyleAuto::SetDiffuse ( float fRed, float fGreen, float fBlue ) {
    HRESULT _hr = raw_SetDiffuse(fRed, fGreen, fBlue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3006)
inline HRESULT TGFramework::_IFaceStyleAuto::GetSpecular ( float * pfRed, float * pfGreen, float * pfBlue ) {
    HRESULT _hr = raw_GetSpecular(pfRed, pfGreen, pfBlue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3007)
inline HRESULT TGFramework::_IFaceStyleAuto::SetSpecular ( float fRed, float fGreen, float fBlue ) {
    HRESULT _hr = raw_SetSpecular(fRed, fGreen, fBlue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3008)
inline HRESULT TGFramework::_IFaceStyleAuto::GetAmbient ( float * pfRed, float * pfGreen, float * pfBlue ) {
    HRESULT _hr = raw_GetAmbient(pfRed, pfGreen, pfBlue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3009)
inline HRESULT TGFramework::_IFaceStyleAuto::SetAmbient ( float fRed, float fGreen, float fBlue ) {
    HRESULT _hr = raw_SetAmbient(fRed, fGreen, fBlue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3010)
inline HRESULT TGFramework::_IFaceStyleAuto::GetEmission ( float * pfRed, float * pfGreen, float * pfBlue ) {
    HRESULT _hr = raw_GetEmission(pfRed, pfGreen, pfBlue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3011)
inline HRESULT TGFramework::_IFaceStyleAuto::SetEmission ( float fRed, float fGreen, float fBlue ) {
    HRESULT _hr = raw_SetEmission(fRed, fGreen, fBlue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3012)
inline HRESULT TGFramework::_IFaceStyleAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3013)
inline HRESULT TGFramework::_IFaceStyleAuto::Detach ( ) {
    HRESULT _hr = raw_Detach();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3014)
inline HRESULT TGFramework::_IFaceStyleAuto::GetTextureTransparentColor ( float * pfRed, float * pfGreen, float * pfBlue ) {
    HRESULT _hr = raw_GetTextureTransparentColor(pfRed, pfGreen, pfBlue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3015)
inline HRESULT TGFramework::_IFaceStyleAuto::SetTextureTransparentColor ( float fRed, float fGreen, float fBlue ) {
    HRESULT _hr = raw_SetTextureTransparentColor(fRed, fGreen, fBlue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3016)
inline HRESULT TGFramework::_IFaceStyleAuto::GetTextureScale ( float * pfXScale, float * pfYScale ) {
    HRESULT _hr = raw_GetTextureScale(pfXScale, pfYScale);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3017)
inline HRESULT TGFramework::_IFaceStyleAuto::SetTextureScale ( float fXScale, float fYScale ) {
    HRESULT _hr = raw_SetTextureScale(fXScale, fYScale);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3018)
inline HRESULT TGFramework::_IFaceStyleAuto::GetTextureOffset ( float * pfXOffset, float * pfYOffset ) {
    HRESULT _hr = raw_GetTextureOffset(pfXOffset, pfYOffset);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3019)
inline HRESULT TGFramework::_IFaceStyleAuto::SetTextureOffset ( float fXOffset, float fYOffset ) {
    HRESULT _hr = raw_SetTextureOffset(fXOffset, fYOffset);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3020)
inline HRESULT TGFramework::_IFaceStyleAuto::GetBumpmapScale ( float * pfXScale, float * pfYScale ) {
    HRESULT _hr = raw_GetBumpmapScale(pfXScale, pfYScale);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3021)
inline HRESULT TGFramework::_IFaceStyleAuto::SetBumpmapScale ( float fXScale, float fYScale ) {
    HRESULT _hr = raw_SetBumpmapScale(fXScale, fYScale);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3022)
inline HRESULT TGFramework::_IFaceStyleAuto::GetBumpmapOffset ( float * pfXOffset, float * pfYOffset ) {
    HRESULT _hr = raw_GetBumpmapOffset(pfXOffset, pfYOffset);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3023)
inline HRESULT TGFramework::_IFaceStyleAuto::SetBumpmapOffset ( float fXOffset, float fYOffset ) {
    HRESULT _hr = raw_SetBumpmapOffset(fXOffset, fYOffset);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3024)
inline HRESULT TGFramework::_IFaceStyleAuto::SetSkyboxSkyFile ( _bstr_t sFilename ) {
    HRESULT _hr = raw_SetSkyboxSkyFile(sFilename);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3025)
inline HRESULT TGFramework::_IFaceStyleAuto::SetSkyboxSideFilename ( int nSide, _bstr_t sFilename ) {
    HRESULT _hr = raw_SetSkyboxSideFilename(nSide, sFilename);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3026)
inline _bstr_t TGFramework::_IFaceStyleAuto::GetSkyboxSideFilename ( int nSide ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetSkyboxSideFilename(nSide, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3027)
inline HRESULT TGFramework::_IFaceStyleAuto::SkyboxClear ( int nSide ) {
    HRESULT _hr = raw_SkyboxClear(nSide);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3028)
inline HRESULT TGFramework::_IFaceStyleAuto::SkyboxClearAll ( ) {
    HRESULT _hr = raw_SkyboxClearAll();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3029)
inline HRESULT TGFramework::_IFaceStyleAuto::GetSkyboxOrientation ( float * pfxDirection, float * pfyDirection, float * pfzDirection, float * pfxUp, float * pfyUp, float * pfzUp, float * pfFieldOfView ) {
    HRESULT _hr = raw_GetSkyboxOrientation(pfxDirection, pfyDirection, pfzDirection, pfxUp, pfyUp, pfzUp, pfFieldOfView);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3030)
inline HRESULT TGFramework::_IFaceStyleAuto::SetSkyboxOrientation ( float fxDirection, float fyDirection, float fzDirection, float fxUp, float fyUp, float fzUp, float fFieldOfView ) {
    HRESULT _hr = raw_SetSkyboxOrientation(fxDirection, fyDirection, fzDirection, fxUp, fyUp, fzUp, fFieldOfView);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3031)
inline long TGFramework::_IFaceStyleAuto::GetVersion ( int eVersion ) {
    long _result = 0;
    HRESULT _hr = raw_GetVersion(eVersion, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3032)
inline HRESULT TGFramework::_IFaceStyleAuto::SetVersion ( int eVersion, long nVersion ) {
    HRESULT _hr = raw_SetVersion(eVersion, nVersion);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3033)
inline HRESULT TGFramework::_IFaceStyleAuto::GetShaderData ( int * pnId, long * peType, long * pnHints ) {
    HRESULT _hr = raw_GetShaderData(pnId, peType, pnHints);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3034)
inline HRESULT TGFramework::_IFaceStyleAuto::SetShaderData ( long eType, long nHints ) {
    HRESULT _hr = raw_SetShaderData(eType, nHints);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3035)
inline long TGFramework::_IFaceStyleAuto::GetAutomaticShaderType ( ) {
    long _result = 0;
    HRESULT _hr = get_AutomaticShaderType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3036)
inline long TGFramework::_IFaceStyleAuto::GetShaderType ( ) {
    long _result = 0;
    HRESULT _hr = get_ShaderType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3037)
inline void TGFramework::_IFaceStyleAuto::PutShaderType ( long peType ) {
    HRESULT _hr = put_ShaderType(peType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3038)
inline IDispatchPtr TGFramework::_IFaceStyleAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3039)
inline VARIANT_BOOL TGFramework::_IFaceStyleAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3040)
inline HRESULT TGFramework::_IFaceStyleAuto::ResetSkyboxOrientation ( ) {
    HRESULT _hr = raw_ResetSkyboxOrientation();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3041)
inline HRESULT TGFramework::_IFaceStyleAuto::DeleteSkybox ( ) {
    HRESULT _hr = raw_DeleteSkybox();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3042)
inline enum TGFramework::SeRenderModeType TGFramework::_IFaceStyleAuto::GetRenderModeType ( ) {
    enum SeRenderModeType _result;
    HRESULT _hr = get_RenderModeType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3043)
inline void TGFramework::_IFaceStyleAuto::PutRenderModeType ( enum SeRenderModeType peType ) {
    HRESULT _hr = put_RenderModeType(peType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3044)
inline HRESULT TGFramework::_IFaceStyleAuto::HasPointProperties ( int * pbResult ) {
    HRESULT _hr = raw_HasPointProperties(pbResult);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3045)
inline HRESULT TGFramework::_IFaceStyleAuto::ClearPointProperties ( ) {
    HRESULT _hr = raw_ClearPointProperties();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3046)
inline float TGFramework::_IFaceStyleAuto::GetPointSize ( ) {
    float _result = 0;
    HRESULT _hr = get_PointSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3047)
inline void TGFramework::_IFaceStyleAuto::PutPointSize ( float pfSize ) {
    HRESULT _hr = put_PointSize(pfSize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3048)
inline enum TGFramework::SeRenderSpaceType TGFramework::_IFaceStyleAuto::GetPointSizeSpace ( ) {
    enum SeRenderSpaceType _result;
    HRESULT _hr = get_PointSizeSpace(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3049)
inline void TGFramework::_IFaceStyleAuto::PutPointSizeSpace ( enum SeRenderSpaceType peSpace ) {
    HRESULT _hr = put_PointSizeSpace(peSpace);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3050)
inline HRESULT TGFramework::_IFaceStyleAuto::GetPointOptions ( enum SeRenderShapeType * peShape, enum SeRenderFillMode * peFillMode, enum SeRenderShadeMode * peShadeMode ) {
    HRESULT _hr = raw_GetPointOptions(peShape, peFillMode, peShadeMode);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3051)
inline HRESULT TGFramework::_IFaceStyleAuto::SetPointOptions ( enum SeRenderShapeType eShape, enum SeRenderFillMode eFillMode, enum SeRenderShadeMode eShadeMode ) {
    HRESULT _hr = raw_SetPointOptions(eShape, eFillMode, eShadeMode);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3052)
inline HRESULT TGFramework::_IFaceStyleAuto::GetPointColor ( float * pfRed, float * pfGreen, float * pfBlue ) {
    HRESULT _hr = raw_GetPointColor(pfRed, pfGreen, pfBlue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3053)
inline HRESULT TGFramework::_IFaceStyleAuto::SetPointColor ( float fRed, float fGreen, float fBlue ) {
    HRESULT _hr = raw_SetPointColor(fRed, fGreen, fBlue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3054)
inline _bstr_t TGFramework::_IFaceStyleAuto::GetTextureFileNameEx ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextureFileNameEx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3055)
inline HRESULT TGFramework::_IFaceStyleAuto::GetMaterial ( BSTR * psMaterial, enum SeRenderMaterialGetMode eMode ) {
    HRESULT _hr = raw_GetMaterial(psMaterial, eMode);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3056)
inline HRESULT TGFramework::_IFaceStyleAuto::SetMaterial ( _bstr_t sMaterial, enum SeRenderMaterialSetMode eMode ) {
    HRESULT _hr = raw_SetMaterial(sMaterial, eMode);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3057)
inline _bstr_t TGFramework::_IFaceStyleAuto::GetMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Material(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3058)
inline void TGFramework::_IFaceStyleAuto::PutMaterial ( _bstr_t psMaterial ) {
    HRESULT _hr = put_Material(psMaterial);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// dispinterface FaceStyle wrapper method implementations
//

#pragma implementation_key(3059)
inline _bstr_t TGFramework::FaceStyle::GetStyleName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3060)
inline void TGFramework::FaceStyle::PutStyleName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3061)
inline _bstr_t TGFramework::FaceStyle::GetParent ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3062)
inline void TGFramework::FaceStyle::PutParent ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3063)
inline long TGFramework::FaceStyle::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3064)
inline void TGFramework::FaceStyle::PutType ( long _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3065)
inline long TGFramework::FaceStyle::GetFlags ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3066)
inline void TGFramework::FaceStyle::PutFlags ( long _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3067)
inline float TGFramework::FaceStyle::GetWireframeColorRed ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3068)
inline void TGFramework::FaceStyle::PutWireframeColorRed ( float _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3069)
inline float TGFramework::FaceStyle::GetWireframeColorGreen ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3070)
inline void TGFramework::FaceStyle::PutWireframeColorGreen ( float _arg1 ) {
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3071)
inline float TGFramework::FaceStyle::GetWireframeColorBlue ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3072)
inline void TGFramework::FaceStyle::PutWireframeColorBlue ( float _arg1 ) {
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3073)
inline long TGFramework::FaceStyle::GetStipplePattern ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3074)
inline void TGFramework::FaceStyle::PutStipplePattern ( long _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3075)
inline short TGFramework::FaceStyle::GetStippleScale ( ) {
    short _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_I2, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3076)
inline void TGFramework::FaceStyle::PutStippleScale ( short _arg1 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0002", _arg1);
}

#pragma implementation_key(3077)
inline float TGFramework::FaceStyle::GetLineWidth ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3078)
inline void TGFramework::FaceStyle::PutLineWidth ( float _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3079)
inline short TGFramework::FaceStyle::GetWidthSpace ( ) {
    short _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_I2, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3080)
inline void TGFramework::FaceStyle::PutWidthSpace ( short _arg1 ) {
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0002", _arg1);
}

#pragma implementation_key(3081)
inline float TGFramework::FaceStyle::GetDiffuseRed ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3082)
inline void TGFramework::FaceStyle::PutDiffuseRed ( float _arg1 ) {
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3083)
inline float TGFramework::FaceStyle::GetDiffuseGreen ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3084)
inline void TGFramework::FaceStyle::PutDiffuseGreen ( float _arg1 ) {
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3085)
inline float TGFramework::FaceStyle::GetDiffuseBlue ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3086)
inline void TGFramework::FaceStyle::PutDiffuseBlue ( float _arg1 ) {
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3087)
inline float TGFramework::FaceStyle::GetSpecularRed ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3088)
inline void TGFramework::FaceStyle::PutSpecularRed ( float _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3089)
inline float TGFramework::FaceStyle::GetSpecularGreen ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3090)
inline void TGFramework::FaceStyle::PutSpecularGreen ( float _arg1 ) {
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3091)
inline float TGFramework::FaceStyle::GetSpecularBlue ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3092)
inline void TGFramework::FaceStyle::PutSpecularBlue ( float _arg1 ) {
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3093)
inline float TGFramework::FaceStyle::GetAmbientRed ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3094)
inline void TGFramework::FaceStyle::PutAmbientRed ( float _arg1 ) {
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3095)
inline float TGFramework::FaceStyle::GetAmbientGreen ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3096)
inline void TGFramework::FaceStyle::PutAmbientGreen ( float _arg1 ) {
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3097)
inline float TGFramework::FaceStyle::GetAmbientBlue ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3098)
inline void TGFramework::FaceStyle::PutAmbientBlue ( float _arg1 ) {
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3099)
inline float TGFramework::FaceStyle::GetEmissionRed ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3100)
inline void TGFramework::FaceStyle::PutEmissionRed ( float _arg1 ) {
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3101)
inline float TGFramework::FaceStyle::GetEmissionGreen ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3102)
inline void TGFramework::FaceStyle::PutEmissionGreen ( float _arg1 ) {
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3103)
inline float TGFramework::FaceStyle::GetEmissionBlue ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3104)
inline void TGFramework::FaceStyle::PutEmissionBlue ( float _arg1 ) {
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3105)
inline float TGFramework::FaceStyle::GetShininess ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3106)
inline void TGFramework::FaceStyle::PutShininess ( float _arg1 ) {
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3107)
inline float TGFramework::FaceStyle::GetOpacity ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3108)
inline void TGFramework::FaceStyle::PutOpacity ( float _arg1 ) {
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3109)
inline float TGFramework::FaceStyle::GetReflectivity ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3110)
inline void TGFramework::FaceStyle::PutReflectivity ( float _arg1 ) {
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3111)
inline float TGFramework::FaceStyle::GetRefraction ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3112)
inline void TGFramework::FaceStyle::PutRefraction ( float _arg1 ) {
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3113)
inline long TGFramework::FaceStyle::GetCastsShadows ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3114)
inline void TGFramework::FaceStyle::PutCastsShadows ( long _arg1 ) {
    _com_dispatch_method(this, 0x1c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3115)
inline long TGFramework::FaceStyle::GetAcceptsShadows ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3116)
inline void TGFramework::FaceStyle::PutAcceptsShadows ( long _arg1 ) {
    _com_dispatch_method(this, 0x1d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3117)
inline _bstr_t TGFramework::FaceStyle::GetTextureFileName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3118)
inline void TGFramework::FaceStyle::PutTextureFileName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3119)
inline long TGFramework::FaceStyle::GetTextureTransparent ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3120)
inline void TGFramework::FaceStyle::PutTextureTransparent ( long _arg1 ) {
    _com_dispatch_method(this, 0x1f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3121)
inline float TGFramework::FaceStyle::GetTextureTransparentColorRed ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x22, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3122)
inline void TGFramework::FaceStyle::PutTextureTransparentColorRed ( float _arg1 ) {
    _com_dispatch_method(this, 0x22, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3123)
inline float TGFramework::FaceStyle::GetTextureTransparentColorGreen ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x23, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3124)
inline void TGFramework::FaceStyle::PutTextureTransparentColorGreen ( float _arg1 ) {
    _com_dispatch_method(this, 0x23, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3125)
inline float TGFramework::FaceStyle::GetTextureTransparentColorBlue ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x24, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3126)
inline void TGFramework::FaceStyle::PutTextureTransparentColorBlue ( float _arg1 ) {
    _com_dispatch_method(this, 0x24, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3127)
inline int TGFramework::FaceStyle::GetTextureUnits ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x25, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3128)
inline void TGFramework::FaceStyle::PutTextureUnits ( int _arg1 ) {
    _com_dispatch_method(this, 0x25, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3129)
inline float TGFramework::FaceStyle::GetTextureScaleX ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x28, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3130)
inline void TGFramework::FaceStyle::PutTextureScaleX ( float _arg1 ) {
    _com_dispatch_method(this, 0x28, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3131)
inline float TGFramework::FaceStyle::GetTextureScaleY ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x29, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3132)
inline void TGFramework::FaceStyle::PutTextureScaleY ( float _arg1 ) {
    _com_dispatch_method(this, 0x29, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3133)
inline float TGFramework::FaceStyle::GetTextureOffsetX ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x2c, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3134)
inline void TGFramework::FaceStyle::PutTextureOffsetX ( float _arg1 ) {
    _com_dispatch_method(this, 0x2c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3135)
inline float TGFramework::FaceStyle::GetTextureOffsetY ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x2d, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3136)
inline void TGFramework::FaceStyle::PutTextureOffsetY ( float _arg1 ) {
    _com_dispatch_method(this, 0x2d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3137)
inline long TGFramework::FaceStyle::GetTextureMirrorX ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3138)
inline void TGFramework::FaceStyle::PutTextureMirrorX ( long _arg1 ) {
    _com_dispatch_method(this, 0x2e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3139)
inline long TGFramework::FaceStyle::GetTextureMirrorY ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3140)
inline void TGFramework::FaceStyle::PutTextureMirrorY ( long _arg1 ) {
    _com_dispatch_method(this, 0x2f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3141)
inline float TGFramework::FaceStyle::GetTextureRotation ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x30, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3142)
inline void TGFramework::FaceStyle::PutTextureRotation ( float _arg1 ) {
    _com_dispatch_method(this, 0x30, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3143)
inline float TGFramework::FaceStyle::GetTextureWeight ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x31, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3144)
inline void TGFramework::FaceStyle::PutTextureWeight ( float _arg1 ) {
    _com_dispatch_method(this, 0x31, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3145)
inline _bstr_t TGFramework::FaceStyle::GetBumpmapFileName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x32, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3146)
inline void TGFramework::FaceStyle::PutBumpmapFileName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x32, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3147)
inline int TGFramework::FaceStyle::GetBumpmapUnits ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x33, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3148)
inline void TGFramework::FaceStyle::PutBumpmapUnits ( int _arg1 ) {
    _com_dispatch_method(this, 0x33, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3149)
inline float TGFramework::FaceStyle::GetBumpmapScaleX ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3150)
inline void TGFramework::FaceStyle::PutBumpmapScaleX ( float _arg1 ) {
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3151)
inline float TGFramework::FaceStyle::GetBumpmapScaleY ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3152)
inline void TGFramework::FaceStyle::PutBumpmapScaleY ( float _arg1 ) {
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3153)
inline float TGFramework::FaceStyle::GetBumpmapOffsetX ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x3a, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3154)
inline void TGFramework::FaceStyle::PutBumpmapOffsetX ( float _arg1 ) {
    _com_dispatch_method(this, 0x3a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3155)
inline float TGFramework::FaceStyle::GetBumpmapOffsetY ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x3b, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3156)
inline void TGFramework::FaceStyle::PutBumpmapOffsetY ( float _arg1 ) {
    _com_dispatch_method(this, 0x3b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3157)
inline long TGFramework::FaceStyle::GetBumpmapMirrorX ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3158)
inline void TGFramework::FaceStyle::PutBumpmapMirrorX ( long _arg1 ) {
    _com_dispatch_method(this, 0x3c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3159)
inline long TGFramework::FaceStyle::GetBumpmapMirrorY ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3160)
inline void TGFramework::FaceStyle::PutBumpmapMirrorY ( long _arg1 ) {
    _com_dispatch_method(this, 0x3d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3161)
inline float TGFramework::FaceStyle::GetBumpmapRotation ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x3e, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3162)
inline void TGFramework::FaceStyle::PutBumpmapRotation ( float _arg1 ) {
    _com_dispatch_method(this, 0x3e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3163)
inline float TGFramework::FaceStyle::GetBumpmapHeight ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x3f, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3164)
inline void TGFramework::FaceStyle::PutBumpmapHeight ( float _arg1 ) {
    _com_dispatch_method(this, 0x3f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3165)
inline long TGFramework::FaceStyle::GetBumpmapInvert ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x40, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3166)
inline void TGFramework::FaceStyle::PutBumpmapInvert ( long _arg1 ) {
    _com_dispatch_method(this, 0x40, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3167)
inline enum TGFramework::SeSkyboxType TGFramework::FaceStyle::GetSkyboxType ( ) {
    enum SeSkyboxType _result;
    _com_dispatch_method(this, 0x41, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3168)
inline void TGFramework::FaceStyle::PutSkyboxType ( enum SeSkyboxType _arg1 ) {
    _com_dispatch_method(this, 0x41, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3169)
inline float TGFramework::FaceStyle::GetSkyboxAzimuth ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x42, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3170)
inline void TGFramework::FaceStyle::PutSkyboxAzimuth ( float _arg1 ) {
    _com_dispatch_method(this, 0x42, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3171)
inline float TGFramework::FaceStyle::GetSkyboxAltitude ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x43, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3172)
inline void TGFramework::FaceStyle::PutSkyboxAltitude ( float _arg1 ) {
    _com_dispatch_method(this, 0x43, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3173)
inline float TGFramework::FaceStyle::GetSkyboxRoll ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x44, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3174)
inline void TGFramework::FaceStyle::PutSkyboxRoll ( float _arg1 ) {
    _com_dispatch_method(this, 0x44, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3175)
inline float TGFramework::FaceStyle::GetSkyboxConeAngle ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x45, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3176)
inline void TGFramework::FaceStyle::PutSkyboxConeAngle ( float _arg1 ) {
    _com_dispatch_method(this, 0x45, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3177)
inline long TGFramework::FaceStyle::GetStyleID ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3178)
inline HRESULT TGFramework::FaceStyle::BeginPropertyBuffer ( ) {
    return _com_dispatch_method(this, 0x60010032, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3179)
inline HRESULT TGFramework::FaceStyle::FlushPropertyBuffer ( ) {
    return _com_dispatch_method(this, 0x60010033, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3180)
inline HRESULT TGFramework::FaceStyle::HasWireframeProperties ( int * pbResult ) {
    return _com_dispatch_method(this, 0x60010034, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003", pbResult);
}

#pragma implementation_key(3181)
inline HRESULT TGFramework::FaceStyle::HasSurfaceProperties ( int * pbResult ) {
    return _com_dispatch_method(this, 0x60010035, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003", pbResult);
}

#pragma implementation_key(3182)
inline HRESULT TGFramework::FaceStyle::ClearWireframeProperties ( ) {
    return _com_dispatch_method(this, 0x60010036, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3183)
inline HRESULT TGFramework::FaceStyle::ClearSurfaceProperties ( ) {
    return _com_dispatch_method(this, 0x60010037, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3184)
inline HRESULT TGFramework::FaceStyle::GetWireframeColor ( float * pfRed, float * pfGreen, float * pfBlue ) {
    return _com_dispatch_method(this, 0x60010038, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4004\x4004\x4004", pfRed, pfGreen, pfBlue);
}

#pragma implementation_key(3185)
inline HRESULT TGFramework::FaceStyle::SetWireframeColor ( float fRed, float fGreen, float fBlue ) {
    return _com_dispatch_method(this, 0x60010039, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0004\x0004\x0004", fRed, fGreen, fBlue);
}

#pragma implementation_key(3186)
inline HRESULT TGFramework::FaceStyle::GetDiffuse ( float * pfRed, float * pfGreen, float * pfBlue ) {
    return _com_dispatch_method(this, 0x6001003a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4004\x4004\x4004", pfRed, pfGreen, pfBlue);
}

#pragma implementation_key(3187)
inline HRESULT TGFramework::FaceStyle::SetDiffuse ( float fRed, float fGreen, float fBlue ) {
    return _com_dispatch_method(this, 0x6001003b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0004\x0004\x0004", fRed, fGreen, fBlue);
}

#pragma implementation_key(3188)
inline HRESULT TGFramework::FaceStyle::GetSpecular ( float * pfRed, float * pfGreen, float * pfBlue ) {
    return _com_dispatch_method(this, 0x6001003c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4004\x4004\x4004", pfRed, pfGreen, pfBlue);
}

#pragma implementation_key(3189)
inline HRESULT TGFramework::FaceStyle::SetSpecular ( float fRed, float fGreen, float fBlue ) {
    return _com_dispatch_method(this, 0x6001003d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0004\x0004\x0004", fRed, fGreen, fBlue);
}

#pragma implementation_key(3190)
inline HRESULT TGFramework::FaceStyle::GetAmbient ( float * pfRed, float * pfGreen, float * pfBlue ) {
    return _com_dispatch_method(this, 0x6001003e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4004\x4004\x4004", pfRed, pfGreen, pfBlue);
}

#pragma implementation_key(3191)
inline HRESULT TGFramework::FaceStyle::SetAmbient ( float fRed, float fGreen, float fBlue ) {
    return _com_dispatch_method(this, 0x6001003f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0004\x0004\x0004", fRed, fGreen, fBlue);
}

#pragma implementation_key(3192)
inline HRESULT TGFramework::FaceStyle::GetEmission ( float * pfRed, float * pfGreen, float * pfBlue ) {
    return _com_dispatch_method(this, 0x60010040, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4004\x4004\x4004", pfRed, pfGreen, pfBlue);
}

#pragma implementation_key(3193)
inline HRESULT TGFramework::FaceStyle::SetEmission ( float fRed, float fGreen, float fBlue ) {
    return _com_dispatch_method(this, 0x60010041, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0004\x0004\x0004", fRed, fGreen, fBlue);
}

#pragma implementation_key(3194)
inline HRESULT TGFramework::FaceStyle::Delete ( ) {
    return _com_dispatch_method(this, 0x60010042, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3195)
inline HRESULT TGFramework::FaceStyle::Detach ( ) {
    return _com_dispatch_method(this, 0x60010043, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3196)
inline HRESULT TGFramework::FaceStyle::GetTextureTransparentColor ( float * pfRed, float * pfGreen, float * pfBlue ) {
    return _com_dispatch_method(this, 0x20, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4004\x4004\x4004", pfRed, pfGreen, pfBlue);
}

#pragma implementation_key(3197)
inline HRESULT TGFramework::FaceStyle::SetTextureTransparentColor ( float fRed, float fGreen, float fBlue ) {
    return _com_dispatch_method(this, 0x21, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0004\x0004\x0004", fRed, fGreen, fBlue);
}

#pragma implementation_key(3198)
inline HRESULT TGFramework::FaceStyle::GetTextureScale ( float * pfXScale, float * pfYScale ) {
    return _com_dispatch_method(this, 0x26, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4004\x4004", pfXScale, pfYScale);
}

#pragma implementation_key(3199)
inline HRESULT TGFramework::FaceStyle::SetTextureScale ( float fXScale, float fYScale ) {
    return _com_dispatch_method(this, 0x27, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0004\x0004", fXScale, fYScale);
}

#pragma implementation_key(3200)
inline HRESULT TGFramework::FaceStyle::GetTextureOffset ( float * pfXOffset, float * pfYOffset ) {
    return _com_dispatch_method(this, 0x2a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4004\x4004", pfXOffset, pfYOffset);
}

#pragma implementation_key(3201)
inline HRESULT TGFramework::FaceStyle::SetTextureOffset ( float fXOffset, float fYOffset ) {
    return _com_dispatch_method(this, 0x2b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0004\x0004", fXOffset, fYOffset);
}

#pragma implementation_key(3202)
inline HRESULT TGFramework::FaceStyle::GetBumpmapScale ( float * pfXScale, float * pfYScale ) {
    return _com_dispatch_method(this, 0x34, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4004\x4004", pfXScale, pfYScale);
}

#pragma implementation_key(3203)
inline HRESULT TGFramework::FaceStyle::SetBumpmapScale ( float fXScale, float fYScale ) {
    return _com_dispatch_method(this, 0x35, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0004\x0004", fXScale, fYScale);
}

#pragma implementation_key(3204)
inline HRESULT TGFramework::FaceStyle::GetBumpmapOffset ( float * pfXOffset, float * pfYOffset ) {
    return _com_dispatch_method(this, 0x38, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4004\x4004", pfXOffset, pfYOffset);
}

#pragma implementation_key(3205)
inline HRESULT TGFramework::FaceStyle::SetBumpmapOffset ( float fXOffset, float fYOffset ) {
    return _com_dispatch_method(this, 0x39, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0004\x0004", fXOffset, fYOffset);
}

#pragma implementation_key(3206)
inline HRESULT TGFramework::FaceStyle::SetSkyboxSkyFile ( _bstr_t sFilename ) {
    return _com_dispatch_method(this, 0x46, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)sFilename);
}

#pragma implementation_key(3207)
inline HRESULT TGFramework::FaceStyle::SetSkyboxSideFilename ( int nSide, _bstr_t sFilename ) {
    return _com_dispatch_method(this, 0x47, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0008", nSide, (BSTR)sFilename);
}

#pragma implementation_key(3208)
inline _bstr_t TGFramework::FaceStyle::GetSkyboxSideFilename ( int nSide ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x48, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0003", nSide);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3209)
inline HRESULT TGFramework::FaceStyle::SkyboxClear ( int nSide ) {
    return _com_dispatch_method(this, 0x49, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", nSide);
}

#pragma implementation_key(3210)
inline HRESULT TGFramework::FaceStyle::SkyboxClearAll ( ) {
    return _com_dispatch_method(this, 0x4a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3211)
inline HRESULT TGFramework::FaceStyle::GetSkyboxOrientation ( float * pfxDirection, float * pfyDirection, float * pfzDirection, float * pfxUp, float * pfyUp, float * pfzUp, float * pfFieldOfView ) {
    return _com_dispatch_method(this, 0x4c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4004\x4004\x4004\x4004\x4004\x4004\x4004", pfxDirection, pfyDirection, pfzDirection, pfxUp, pfyUp, pfzUp, pfFieldOfView);
}

#pragma implementation_key(3212)
inline HRESULT TGFramework::FaceStyle::SetSkyboxOrientation ( float fxDirection, float fyDirection, float fzDirection, float fxUp, float fyUp, float fzUp, float fFieldOfView ) {
    return _com_dispatch_method(this, 0x4d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0004\x0004\x0004\x0004\x0004\x0004\x0004", fxDirection, fyDirection, fzDirection, fxUp, fyUp, fzUp, fFieldOfView);
}

#pragma implementation_key(3213)
inline long TGFramework::FaceStyle::GetVersion ( int eVersion ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", eVersion);
    return _result;
}

#pragma implementation_key(3214)
inline HRESULT TGFramework::FaceStyle::SetVersion ( int eVersion, long nVersion ) {
    return _com_dispatch_method(this, 0x4f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", eVersion, nVersion);
}

#pragma implementation_key(3215)
inline HRESULT TGFramework::FaceStyle::GetShaderData ( int * pnId, long * peType, long * pnHints ) {
    return _com_dispatch_method(this, 0x50, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4003\x4003", pnId, peType, pnHints);
}

#pragma implementation_key(3216)
inline HRESULT TGFramework::FaceStyle::SetShaderData ( long eType, long nHints ) {
    return _com_dispatch_method(this, 0x51, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", eType, nHints);
}

#pragma implementation_key(3217)
inline long TGFramework::FaceStyle::GetAutomaticShaderType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x52, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3218)
inline long TGFramework::FaceStyle::GetShaderType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x53, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3219)
inline void TGFramework::FaceStyle::PutShaderType ( long _arg1 ) {
    _com_dispatch_method(this, 0x53, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3220)
inline IDispatchPtr TGFramework::FaceStyle::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3221)
inline VARIANT_BOOL TGFramework::FaceStyle::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(3222)
inline HRESULT TGFramework::FaceStyle::ResetSkyboxOrientation ( ) {
    return _com_dispatch_method(this, 0x54, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3223)
inline HRESULT TGFramework::FaceStyle::DeleteSkybox ( ) {
    return _com_dispatch_method(this, 0x55, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3224)
inline enum TGFramework::SeRenderModeType TGFramework::FaceStyle::GetRenderModeType ( ) {
    enum SeRenderModeType _result;
    _com_dispatch_method(this, 0x56, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3225)
inline void TGFramework::FaceStyle::PutRenderModeType ( enum SeRenderModeType _arg1 ) {
    _com_dispatch_method(this, 0x56, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3226)
inline HRESULT TGFramework::FaceStyle::HasPointProperties ( int * pbResult ) {
    return _com_dispatch_method(this, 0x60010044, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003", pbResult);
}

#pragma implementation_key(3227)
inline HRESULT TGFramework::FaceStyle::ClearPointProperties ( ) {
    return _com_dispatch_method(this, 0x60010045, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3228)
inline float TGFramework::FaceStyle::GetPointSize ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x57, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3229)
inline void TGFramework::FaceStyle::PutPointSize ( float _arg1 ) {
    _com_dispatch_method(this, 0x57, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3230)
inline enum TGFramework::SeRenderSpaceType TGFramework::FaceStyle::GetPointSizeSpace ( ) {
    enum SeRenderSpaceType _result;
    _com_dispatch_method(this, 0x58, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3231)
inline void TGFramework::FaceStyle::PutPointSizeSpace ( enum SeRenderSpaceType _arg1 ) {
    _com_dispatch_method(this, 0x58, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3232)
inline HRESULT TGFramework::FaceStyle::GetPointOptions ( enum SeRenderShapeType * peShape, enum SeRenderFillMode * peFillMode, enum SeRenderShadeMode * peShadeMode ) {
    return _com_dispatch_method(this, 0x59, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4003\x4003", peShape, peFillMode, peShadeMode);
}

#pragma implementation_key(3233)
inline HRESULT TGFramework::FaceStyle::SetPointOptions ( enum SeRenderShapeType eShape, enum SeRenderFillMode eFillMode, enum SeRenderShadeMode eShadeMode ) {
    return _com_dispatch_method(this, 0x5a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0003", eShape, eFillMode, eShadeMode);
}

#pragma implementation_key(3234)
inline HRESULT TGFramework::FaceStyle::GetPointColor ( float * pfRed, float * pfGreen, float * pfBlue ) {
    return _com_dispatch_method(this, 0x5b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4004\x4004\x4004", pfRed, pfGreen, pfBlue);
}

#pragma implementation_key(3235)
inline HRESULT TGFramework::FaceStyle::SetPointColor ( float fRed, float fGreen, float fBlue ) {
    return _com_dispatch_method(this, 0x5c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0004\x0004\x0004", fRed, fGreen, fBlue);
}

#pragma implementation_key(3236)
inline _bstr_t TGFramework::FaceStyle::GetTextureFileNameEx ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x5d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3237)
inline HRESULT TGFramework::FaceStyle::GetMaterial ( BSTR * psMaterial, enum SeRenderMaterialGetMode eMode ) {
    return _com_dispatch_method(this, 0x5e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008\x0003", psMaterial, eMode);
}

#pragma implementation_key(3238)
inline HRESULT TGFramework::FaceStyle::SetMaterial ( _bstr_t sMaterial, enum SeRenderMaterialSetMode eMode ) {
    return _com_dispatch_method(this, 0x5f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0003", (BSTR)sMaterial, eMode);
}

#pragma implementation_key(3239)
inline _bstr_t TGFramework::FaceStyle::GetMaterial ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x60, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3240)
inline void TGFramework::FaceStyle::PutMaterial ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x60, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

//
// interface _IFaceStylesAuto wrapper method implementations
//

#pragma implementation_key(3241)
inline IDispatchPtr TGFramework::_IFaceStylesAuto::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3242)
inline IUnknownPtr TGFramework::_IFaceStylesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3243)
inline IDispatchPtr TGFramework::_IFaceStylesAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3244)
inline long TGFramework::_IFaceStylesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3245)
inline IDispatchPtr TGFramework::_IFaceStylesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3246)
inline TGFramework::FaceStylePtr TGFramework::_IFaceStylesAuto::Add ( _bstr_t Name, _bstr_t Parent ) {
    struct FaceStyle * _result = 0;
    HRESULT _hr = raw_Add(Name, Parent, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return FaceStylePtr(_result, false);
}

#pragma implementation_key(3247)
inline HRESULT TGFramework::_IFaceStylesAuto::Remove ( _bstr_t Name ) {
    HRESULT _hr = raw_Remove(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3248)
inline IDispatchPtr TGFramework::_IFaceStylesAuto::GetStyleByID ( long StyleID ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_GetStyleByID(StyleID, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// interface _ITextStyleAuto wrapper method implementations
//

#pragma implementation_key(3249)
inline void TGFramework::_ITextStyleAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3250)
inline _bstr_t TGFramework::_ITextStyleAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3251)
inline _bstr_t TGFramework::_ITextStyleAuto::GetDescription ( long paperUnits, long Precision ) {
    BSTR _result = 0;
    HRESULT _hr = get_Description(paperUnits, Precision, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3252)
inline long TGFramework::_ITextStyleAuto::GetUnits ( ) {
    long _result = 0;
    HRESULT _hr = get_Units(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3253)
inline void TGFramework::_ITextStyleAuto::PutUnits ( long Units ) {
    HRESULT _hr = put_Units(Units);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3254)
inline void TGFramework::_ITextStyleAuto::PutParent ( _bstr_t Name ) {
    HRESULT _hr = put_Parent(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3255)
inline _bstr_t TGFramework::_ITextStyleAuto::GetParent ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3256)
inline long TGFramework::_ITextStyleAuto::GetAlignment ( ) {
    long _result = 0;
    HRESULT _hr = get_Alignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3257)
inline void TGFramework::_ITextStyleAuto::PutAlignment ( long Alignment ) {
    HRESULT _hr = put_Alignment(Alignment);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3258)
inline double TGFramework::_ITextStyleAuto::GetBeforeSpacing ( ) {
    double _result = 0;
    HRESULT _hr = get_BeforeSpacing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3259)
inline void TGFramework::_ITextStyleAuto::PutBeforeSpacing ( double Spacing ) {
    HRESULT _hr = put_BeforeSpacing(Spacing);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3260)
inline double TGFramework::_ITextStyleAuto::GetAfterSpacing ( ) {
    double _result = 0;
    HRESULT _hr = get_AfterSpacing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3261)
inline void TGFramework::_ITextStyleAuto::PutAfterSpacing ( double Spacing ) {
    HRESULT _hr = put_AfterSpacing(Spacing);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3262)
inline double TGFramework::_ITextStyleAuto::GetLineSpacing ( ) {
    double _result = 0;
    HRESULT _hr = get_LineSpacing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3263)
inline void TGFramework::_ITextStyleAuto::PutLineSpacing ( double lSpacing ) {
    HRESULT _hr = put_LineSpacing(lSpacing);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3264)
inline double TGFramework::_ITextStyleAuto::GetTabs ( ) {
    double _result = 0;
    HRESULT _hr = get_Tabs(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3265)
inline void TGFramework::_ITextStyleAuto::PutTabs ( double tabDistance ) {
    HRESULT _hr = put_Tabs(tabDistance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3266)
inline void TGFramework::_ITextStyleAuto::PutCharStyleName ( _bstr_t Name ) {
    HRESULT _hr = put_CharStyleName(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3267)
inline _bstr_t TGFramework::_ITextStyleAuto::GetCharStyleName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CharStyleName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3268)
inline HRESULT TGFramework::_ITextStyleAuto::SetLineLeading ( double leading, long leadingType ) {
    HRESULT _hr = raw_SetLineLeading(leading, leadingType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3269)
inline HRESULT TGFramework::_ITextStyleAuto::GetLineLeading ( double * leading, long * leadingType ) {
    HRESULT _hr = raw_GetLineLeading(leading, leadingType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3270)
inline enum TGFramework::TextStyleNumberJustificationConstants TGFramework::_ITextStyleAuto::GetNumberJustification ( ) {
    enum TextStyleNumberJustificationConstants _result;
    HRESULT _hr = get_NumberJustification(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3271)
inline void TGFramework::_ITextStyleAuto::PutNumberJustification ( enum TextStyleNumberJustificationConstants NumberJustification ) {
    HRESULT _hr = put_NumberJustification(NumberJustification);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3272)
inline IDispatchPtr TGFramework::_ITextStyleAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3273)
inline VARIANT_BOOL TGFramework::_ITextStyleAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface TextStyle wrapper method implementations
//

#pragma implementation_key(3274)
inline void TGFramework::TextStyle::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3275)
inline _bstr_t TGFramework::TextStyle::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3276)
inline _bstr_t TGFramework::TextStyle::GetDescription ( long paperUnits, long Precision ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x0003\x0003", paperUnits, Precision);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3277)
inline long TGFramework::TextStyle::GetUnits ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3278)
inline void TGFramework::TextStyle::PutUnits ( long _arg1 ) {
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3279)
inline void TGFramework::TextStyle::PutParent ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3280)
inline _bstr_t TGFramework::TextStyle::GetParent ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3281)
inline long TGFramework::TextStyle::GetAlignment ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3282)
inline void TGFramework::TextStyle::PutAlignment ( long _arg1 ) {
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3283)
inline double TGFramework::TextStyle::GetBeforeSpacing ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6e, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3284)
inline void TGFramework::TextStyle::PutBeforeSpacing ( double _arg1 ) {
    _com_dispatch_method(this, 0x6e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3285)
inline double TGFramework::TextStyle::GetAfterSpacing ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3286)
inline void TGFramework::TextStyle::PutAfterSpacing ( double _arg1 ) {
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3287)
inline double TGFramework::TextStyle::GetLineSpacing ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3288)
inline void TGFramework::TextStyle::PutLineSpacing ( double _arg1 ) {
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3289)
inline double TGFramework::TextStyle::GetTabs ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3290)
inline void TGFramework::TextStyle::PutTabs ( double _arg1 ) {
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3291)
inline void TGFramework::TextStyle::PutCharStyleName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3292)
inline _bstr_t TGFramework::TextStyle::GetCharStyleName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x72, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3293)
inline HRESULT TGFramework::TextStyle::SetLineLeading ( double leading, long leadingType ) {
    return _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0003", leading, leadingType);
}

#pragma implementation_key(3294)
inline HRESULT TGFramework::TextStyle::GetLineLeading ( double * leading, long * leadingType ) {
    return _com_dispatch_method(this, 0x76, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4003", leading, leadingType);
}

#pragma implementation_key(3295)
inline enum TGFramework::TextStyleNumberJustificationConstants TGFramework::TextStyle::GetNumberJustification ( ) {
    enum TextStyleNumberJustificationConstants _result;
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3296)
inline void TGFramework::TextStyle::PutNumberJustification ( enum TextStyleNumberJustificationConstants _arg1 ) {
    _com_dispatch_method(this, 0x77, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3297)
inline IDispatchPtr TGFramework::TextStyle::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3298)
inline VARIANT_BOOL TGFramework::TextStyle::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _ITextStylesAuto wrapper method implementations
//

#pragma implementation_key(3299)
inline long TGFramework::_ITextStylesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3300)
inline IDispatchPtr TGFramework::_ITextStylesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3301)
inline IDispatchPtr TGFramework::_ITextStylesAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3302)
inline TGFramework::TextStylePtr TGFramework::_ITextStylesAuto::Item ( const _variant_t & Index ) {
    struct TextStyle * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TextStylePtr(_result, false);
}

#pragma implementation_key(3303)
inline IUnknownPtr TGFramework::_ITextStylesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3304)
inline TGFramework::TextStylePtr TGFramework::_ITextStylesAuto::Add ( _bstr_t Name, _bstr_t Parent ) {
    struct TextStyle * _result = 0;
    HRESULT _hr = raw_Add(Name, Parent, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TextStylePtr(_result, false);
}

#pragma implementation_key(3305)
inline HRESULT TGFramework::_ITextStylesAuto::Remove ( _bstr_t Name ) {
    HRESULT _hr = raw_Remove(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3306)
inline _bstr_t TGFramework::_ITextStylesAuto::GetActive ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Active(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3307)
inline void TGFramework::_ITextStylesAuto::PutActive ( _bstr_t Name ) {
    HRESULT _hr = put_Active(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface _ITextCharStyleAuto wrapper method implementations
//

#pragma implementation_key(3308)
inline void TGFramework::_ITextCharStyleAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3309)
inline _bstr_t TGFramework::_ITextCharStyleAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3310)
inline _bstr_t TGFramework::_ITextCharStyleAuto::GetDescription ( long paperUnits, long Precision ) {
    BSTR _result = 0;
    HRESULT _hr = get_Description(paperUnits, Precision, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3311)
inline void TGFramework::_ITextCharStyleAuto::PutUnits ( long Units ) {
    HRESULT _hr = put_Units(Units);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3312)
inline long TGFramework::_ITextCharStyleAuto::GetUnits ( ) {
    long _result = 0;
    HRESULT _hr = get_Units(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3313)
inline long TGFramework::_ITextCharStyleAuto::GetColor ( ) {
    long _result = 0;
    HRESULT _hr = get_Color(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3314)
inline void TGFramework::_ITextCharStyleAuto::PutColor ( long Color ) {
    HRESULT _hr = put_Color(Color);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3315)
inline _bstr_t TGFramework::_ITextCharStyleAuto::GetParent ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3316)
inline void TGFramework::_ITextCharStyleAuto::PutParent ( _bstr_t Name ) {
    HRESULT _hr = put_Parent(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3317)
inline void TGFramework::_ITextCharStyleAuto::PutFontName ( _bstr_t Name ) {
    HRESULT _hr = put_FontName(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3318)
inline _bstr_t TGFramework::_ITextCharStyleAuto::GetFontName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FontName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3319)
inline void TGFramework::_ITextCharStyleAuto::PutStyle ( long Style ) {
    HRESULT _hr = put_Style(Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3320)
inline long TGFramework::_ITextCharStyleAuto::GetStyle ( ) {
    long _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3321)
inline long TGFramework::_ITextCharStyleAuto::GetUnderlineStyle ( ) {
    long _result = 0;
    HRESULT _hr = get_UnderlineStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3322)
inline void TGFramework::_ITextCharStyleAuto::PutUnderlineStyle ( long Style ) {
    HRESULT _hr = put_UnderlineStyle(Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3323)
inline long TGFramework::_ITextCharStyleAuto::GetLangID ( ) {
    long _result = 0;
    HRESULT _hr = get_LangID(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3324)
inline void TGFramework::_ITextCharStyleAuto::PutLangID ( long LangID ) {
    HRESULT _hr = put_LangID(LangID);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3325)
inline double TGFramework::_ITextCharStyleAuto::GetTextSize ( ) {
    double _result = 0;
    HRESULT _hr = get_TextSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3326)
inline void TGFramework::_ITextCharStyleAuto::PutTextSize ( double TextSize ) {
    HRESULT _hr = put_TextSize(TextSize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3327)
inline HRESULT TGFramework::_ITextCharStyleAuto::SetTextSize ( double TextSize, long SizeType ) {
    HRESULT _hr = raw_SetTextSize(TextSize, SizeType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3328)
inline HRESULT TGFramework::_ITextCharStyleAuto::GetTextSize ( double * TextSize, long * SizeType ) {
    HRESULT _hr = raw_GetTextSize(TextSize, SizeType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3329)
inline double TGFramework::_ITextCharStyleAuto::GetAspectRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_AspectRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3330)
inline void TGFramework::_ITextCharStyleAuto::PutAspectRatio ( double TextSize ) {
    HRESULT _hr = put_AspectRatio(TextSize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3331)
inline IDispatchPtr TGFramework::_ITextCharStyleAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3332)
inline VARIANT_BOOL TGFramework::_ITextCharStyleAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface TextCharStyle wrapper method implementations
//

#pragma implementation_key(3333)
inline void TGFramework::TextCharStyle::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3334)
inline _bstr_t TGFramework::TextCharStyle::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3335)
inline _bstr_t TGFramework::TextCharStyle::GetDescription ( long paperUnits, long Precision ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x0003\x0003", paperUnits, Precision);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3336)
inline void TGFramework::TextCharStyle::PutUnits ( long _arg1 ) {
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3337)
inline long TGFramework::TextCharStyle::GetUnits ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3338)
inline long TGFramework::TextCharStyle::GetColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3339)
inline void TGFramework::TextCharStyle::PutColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3340)
inline _bstr_t TGFramework::TextCharStyle::GetParent ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3341)
inline void TGFramework::TextCharStyle::PutParent ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3342)
inline void TGFramework::TextCharStyle::PutFontName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3343)
inline _bstr_t TGFramework::TextCharStyle::GetFontName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3344)
inline void TGFramework::TextCharStyle::PutStyle ( long _arg1 ) {
    _com_dispatch_method(this, 0x6e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3345)
inline long TGFramework::TextCharStyle::GetStyle ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3346)
inline long TGFramework::TextCharStyle::GetUnderlineStyle ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3347)
inline void TGFramework::TextCharStyle::PutUnderlineStyle ( long _arg1 ) {
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3348)
inline long TGFramework::TextCharStyle::GetLangID ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3349)
inline void TGFramework::TextCharStyle::PutLangID ( long _arg1 ) {
    _com_dispatch_method(this, 0x70, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3350)
inline double TGFramework::TextCharStyle::GetTextSize ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3351)
inline void TGFramework::TextCharStyle::PutTextSize ( double _arg1 ) {
    _com_dispatch_method(this, 0x71, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3352)
inline HRESULT TGFramework::TextCharStyle::SetTextSize ( double TextSize, long SizeType ) {
    return _com_dispatch_method(this, 0x72, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0003", TextSize, SizeType);
}

#pragma implementation_key(3353)
inline HRESULT TGFramework::TextCharStyle::GetTextSize ( double * TextSize, long * SizeType ) {
    return _com_dispatch_method(this, 0x73, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4003", TextSize, SizeType);
}

#pragma implementation_key(3354)
inline double TGFramework::TextCharStyle::GetAspectRatio ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x97, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3355)
inline void TGFramework::TextCharStyle::PutAspectRatio ( double _arg1 ) {
    _com_dispatch_method(this, 0x97, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3356)
inline IDispatchPtr TGFramework::TextCharStyle::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3357)
inline VARIANT_BOOL TGFramework::TextCharStyle::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _ITextCharStylesAuto wrapper method implementations
//

#pragma implementation_key(3358)
inline long TGFramework::_ITextCharStylesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3359)
inline IDispatchPtr TGFramework::_ITextCharStylesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3360)
inline IDispatchPtr TGFramework::_ITextCharStylesAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3361)
inline TGFramework::TextCharStylePtr TGFramework::_ITextCharStylesAuto::Item ( const _variant_t & Index ) {
    struct TextCharStyle * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TextCharStylePtr(_result, false);
}

#pragma implementation_key(3362)
inline IUnknownPtr TGFramework::_ITextCharStylesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3363)
inline TGFramework::TextCharStylePtr TGFramework::_ITextCharStylesAuto::Add ( _bstr_t Name, _bstr_t Parent ) {
    struct TextCharStyle * _result = 0;
    HRESULT _hr = raw_Add(Name, Parent, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TextCharStylePtr(_result, false);
}

#pragma implementation_key(3364)
inline HRESULT TGFramework::_ITextCharStylesAuto::Remove ( _bstr_t Name ) {
    HRESULT _hr = raw_Remove(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _ISymbol2dAuto wrapper method implementations
//

#pragma implementation_key(3365)
inline IDispatchPtr TGFramework::_ISymbol2dAuto::GetStyle ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3366)
inline VARIANT_BOOL TGFramework::_ISymbol2dAuto::GetUseSymbolLayer ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseSymbolLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3367)
inline void TGFramework::_ISymbol2dAuto::PutUseSymbolLayer ( VARIANT_BOOL flag ) {
    HRESULT _hr = put_UseSymbolLayer(flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3368)
inline _bstr_t TGFramework::_ISymbol2dAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3369)
inline void TGFramework::_ISymbol2dAuto::PutLayer ( _bstr_t pLayer ) {
    HRESULT _hr = put_Layer(pLayer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3370)
inline double TGFramework::_ISymbol2dAuto::GetAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_Angle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3371)
inline void TGFramework::_ISymbol2dAuto::PutAngle ( double Angle ) {
    HRESULT _hr = put_Angle(Angle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3372)
inline VARIANT_BOOL TGFramework::_ISymbol2dAuto::GetScaleFactorLock ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ScaleFactorLock(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3373)
inline void TGFramework::_ISymbol2dAuto::PutScaleFactorLock ( VARIANT_BOOL lock ) {
    HRESULT _hr = put_ScaleFactorLock(lock);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3374)
inline long TGFramework::_ISymbol2dAuto::GetQuantity ( ) {
    long _result = 0;
    HRESULT _hr = get_Quantity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3375)
inline void TGFramework::_ISymbol2dAuto::PutQuantity ( long Quantity ) {
    HRESULT _hr = put_Quantity(Quantity);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3376)
inline IDispatchPtr TGFramework::_ISymbol2dAuto::GetUser ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_User(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3377)
inline double TGFramework::_ISymbol2dAuto::GetScaleFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_ScaleFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3378)
inline void TGFramework::_ISymbol2dAuto::PutScaleFactor ( double __MIDL___ISymbol2dAuto0000 ) {
    HRESULT _hr = put_ScaleFactor(__MIDL___ISymbol2dAuto0000);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3379)
inline HRESULT TGFramework::_ISymbol2dAuto::GetOrigin ( double * Ox, double * Oy ) {
    HRESULT _hr = raw_GetOrigin(Ox, Oy);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3380)
inline HRESULT TGFramework::_ISymbol2dAuto::SetOrigin ( double Ox, double Oy ) {
    HRESULT _hr = raw_SetOrigin(Ox, Oy);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3381)
inline HRESULT TGFramework::_ISymbol2dAuto::GetRotations ( double * Xx, double * Xy, double * Yx, double * Yy ) {
    HRESULT _hr = raw_GetRotations(Xx, Xy, Yx, Yy);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3382)
inline HRESULT TGFramework::_ISymbol2dAuto::SetRotations ( double Xx, double Xy, double Yx, double Yy ) {
    HRESULT _hr = raw_SetRotations(Xx, Xy, Yx, Yy);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3383)
inline enum TGFramework::DisplayTypeConstant TGFramework::_ISymbol2dAuto::GetDisplayType ( ) {
    enum DisplayTypeConstant _result;
    HRESULT _hr = get_DisplayType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3384)
inline void TGFramework::_ISymbol2dAuto::PutDisplayType ( enum DisplayTypeConstant Type ) {
    HRESULT _hr = put_DisplayType(Type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3385)
inline VARIANT_BOOL TGFramework::_ISymbol2dAuto::GetNestedDisplay ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_NestedDisplay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3386)
inline void TGFramework::_ISymbol2dAuto::PutNestedDisplay ( VARIANT_BOOL flag ) {
    HRESULT _hr = put_NestedDisplay(flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3387)
inline VARIANT_BOOL TGFramework::_ISymbol2dAuto::GetContentsLocatable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ContentsLocatable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3388)
inline void TGFramework::_ISymbol2dAuto::PutContentsLocatable ( VARIANT_BOOL flag ) {
    HRESULT _hr = put_ContentsLocatable(flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3389)
inline _bstr_t TGFramework::_ISymbol2dAuto::GetSourceDoc ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SourceDoc(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3390)
inline _bstr_t TGFramework::_ISymbol2dAuto::GetClass ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Class(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3391)
inline IDispatchPtr TGFramework::_ISymbol2dAuto::GetObject ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Object(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3392)
inline enum TGFramework::OLEInsertionTypeConstant TGFramework::_ISymbol2dAuto::GetOLEType ( ) {
    enum OLEInsertionTypeConstant _result;
    HRESULT _hr = get_OLEType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3393)
inline enum TGFramework::OLEUpdateOptionConstant TGFramework::_ISymbol2dAuto::GetUpdateOptions ( ) {
    enum OLEUpdateOptionConstant _result;
    HRESULT _hr = get_UpdateOptions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3394)
inline void TGFramework::_ISymbol2dAuto::PutUpdateOptions ( enum OLEUpdateOptionConstant option ) {
    HRESULT _hr = put_UpdateOptions(option);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3395)
inline HRESULT TGFramework::_ISymbol2dAuto::Update ( ) {
    HRESULT _hr = raw_Update();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3396)
inline HRESULT TGFramework::_ISymbol2dAuto::DoVerb ( const _variant_t & verb ) {
    HRESULT _hr = raw_DoVerb(verb);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3397)
inline long TGFramework::_ISymbol2dAuto::GetObjectVerbsCount ( ) {
    long _result = 0;
    HRESULT _hr = get_ObjectVerbsCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3398)
inline _bstr_t TGFramework::_ISymbol2dAuto::ObjectVerbs ( const _variant_t & Index ) {
    BSTR _result = 0;
    HRESULT _hr = raw_ObjectVerbs(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3399)
inline _bstr_t TGFramework::_ISymbol2dAuto::GetAlternatePath ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AlternatePath(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3400)
inline void TGFramework::_ISymbol2dAuto::PutAlternatePath ( BSTR * currentPath ) {
    HRESULT _hr = put_AlternatePath(currentPath);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3401)
inline TGFramework::ApplicationPtr TGFramework::_ISymbol2dAuto::GetApplication ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(3402)
inline long TGFramework::_ISymbol2dAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3403)
inline _bstr_t TGFramework::_ISymbol2dAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3404)
inline IDispatchPtr TGFramework::_ISymbol2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3405)
inline long TGFramework::_ISymbol2dAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3406)
inline long TGFramework::_ISymbol2dAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3407)
inline _bstr_t TGFramework::_ISymbol2dAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3408)
inline IDispatchPtr TGFramework::_ISymbol2dAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3409)
inline HRESULT TGFramework::_ISymbol2dAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3410)
inline HRESULT TGFramework::_ISymbol2dAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3411)
inline HRESULT TGFramework::_ISymbol2dAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3412)
inline HRESULT TGFramework::_ISymbol2dAuto::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    HRESULT _hr = raw_Move(XFrom, YFrom, XTo, YTo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3413)
inline HRESULT TGFramework::_ISymbol2dAuto::Scale ( double Factor ) {
    HRESULT _hr = raw_Scale(Factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3414)
inline HRESULT TGFramework::_ISymbol2dAuto::Rotate ( double Angle, double x, double y ) {
    HRESULT _hr = raw_Rotate(Angle, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3415)
inline HRESULT TGFramework::_ISymbol2dAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3416)
inline IDispatchPtr TGFramework::_ISymbol2dAuto::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Duplicate(XDistance, YDistance, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3417)
inline IDispatchPtr TGFramework::_ISymbol2dAuto::Mirror ( double X1, double Y1, double X2, double Y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Mirror(X1, Y1, X2, Y2, BooleanCopyFlag, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3418)
inline HRESULT TGFramework::_ISymbol2dAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3419)
inline HRESULT TGFramework::_ISymbol2dAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3420)
inline HRESULT TGFramework::_ISymbol2dAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3421)
inline HRESULT TGFramework::_ISymbol2dAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3422)
inline HRESULT TGFramework::_ISymbol2dAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3423)
inline long TGFramework::_ISymbol2dAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3424)
inline HRESULT TGFramework::_ISymbol2dAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum KeyPointType * KeyPointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeyPointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3425)
inline HRESULT TGFramework::_ISymbol2dAuto::SetKeyPoint ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetKeyPoint(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3426)
inline IDispatchPtr TGFramework::_ISymbol2dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3427)
inline VARIANT_BOOL TGFramework::_ISymbol2dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3428)
inline HRESULT TGFramework::_ISymbol2dAuto::ConvertToGroup ( ) {
    HRESULT _hr = raw_ConvertToGroup();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3429)
inline IDispatchPtr TGFramework::_ISymbol2dAuto::GetMemberReference ( IDispatch * Member ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_MemberReference(Member, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3430)
inline IDispatchPtr TGFramework::_ISymbol2dAuto::GetSourceDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_SourceDocument(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// dispinterface Symbol2d wrapper method implementations
//

#pragma implementation_key(3431)
inline IDispatchPtr TGFramework::Symbol2d::GetStyle ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3432)
inline VARIANT_BOOL TGFramework::Symbol2d::GetUseSymbolLayer ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3433)
inline void TGFramework::Symbol2d::PutUseSymbolLayer ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3434)
inline _bstr_t TGFramework::Symbol2d::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3435)
inline void TGFramework::Symbol2d::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3436)
inline double TGFramework::Symbol2d::GetAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1001, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3437)
inline void TGFramework::Symbol2d::PutAngle ( double _arg1 ) {
    _com_dispatch_method(this, 0x1001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3438)
inline VARIANT_BOOL TGFramework::Symbol2d::GetScaleFactorLock ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1002, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3439)
inline void TGFramework::Symbol2d::PutScaleFactorLock ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1002, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3440)
inline long TGFramework::Symbol2d::GetQuantity ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1003, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3441)
inline void TGFramework::Symbol2d::PutQuantity ( long _arg1 ) {
    _com_dispatch_method(this, 0x1003, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3442)
inline IDispatchPtr TGFramework::Symbol2d::GetUser ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1004, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3443)
inline double TGFramework::Symbol2d::GetScaleFactor ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x2001, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3444)
inline void TGFramework::Symbol2d::PutScaleFactor ( double _arg1 ) {
    _com_dispatch_method(this, 0x2001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3445)
inline HRESULT TGFramework::Symbol2d::GetOrigin ( double * Ox, double * Oy ) {
    return _com_dispatch_method(this, 0x60012002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", Ox, Oy);
}

#pragma implementation_key(3446)
inline HRESULT TGFramework::Symbol2d::SetOrigin ( double Ox, double Oy ) {
    return _com_dispatch_method(this, 0x60012003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", Ox, Oy);
}

#pragma implementation_key(3447)
inline HRESULT TGFramework::Symbol2d::GetRotations ( double * Xx, double * Xy, double * Yx, double * Yy ) {
    return _com_dispatch_method(this, 0x60012004, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", Xx, Xy, Yx, Yy);
}

#pragma implementation_key(3448)
inline HRESULT TGFramework::Symbol2d::SetRotations ( double Xx, double Xy, double Yx, double Yy ) {
    return _com_dispatch_method(this, 0x60012005, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", Xx, Xy, Yx, Yy);
}

#pragma implementation_key(3449)
inline enum TGFramework::DisplayTypeConstant TGFramework::Symbol2d::GetDisplayType ( ) {
    enum DisplayTypeConstant _result;
    _com_dispatch_method(this, 0x3001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3450)
inline void TGFramework::Symbol2d::PutDisplayType ( enum DisplayTypeConstant _arg1 ) {
    _com_dispatch_method(this, 0x3001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3451)
inline VARIANT_BOOL TGFramework::Symbol2d::GetNestedDisplay ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3002, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3452)
inline void TGFramework::Symbol2d::PutNestedDisplay ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3002, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3453)
inline VARIANT_BOOL TGFramework::Symbol2d::GetContentsLocatable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3003, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3454)
inline void TGFramework::Symbol2d::PutContentsLocatable ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3003, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3455)
inline _bstr_t TGFramework::Symbol2d::GetSourceDoc ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4001, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3456)
inline _bstr_t TGFramework::Symbol2d::GetClass ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4002, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3457)
inline IDispatchPtr TGFramework::Symbol2d::GetObject ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4003, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3458)
inline enum TGFramework::OLEInsertionTypeConstant TGFramework::Symbol2d::GetOLEType ( ) {
    enum OLEInsertionTypeConstant _result;
    _com_dispatch_method(this, 0x4004, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3459)
inline enum TGFramework::OLEUpdateOptionConstant TGFramework::Symbol2d::GetUpdateOptions ( ) {
    enum OLEUpdateOptionConstant _result;
    _com_dispatch_method(this, 0x4007, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3460)
inline void TGFramework::Symbol2d::PutUpdateOptions ( enum OLEUpdateOptionConstant _arg1 ) {
    _com_dispatch_method(this, 0x4007, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3461)
inline HRESULT TGFramework::Symbol2d::Update ( ) {
    return _com_dispatch_method(this, 0x60014008, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3462)
inline HRESULT TGFramework::Symbol2d::DoVerb ( const _variant_t & verb ) {
    return _com_dispatch_method(this, 0x60014009, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &verb);
}

#pragma implementation_key(3463)
inline long TGFramework::Symbol2d::GetObjectVerbsCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4009, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3464)
inline _bstr_t TGFramework::Symbol2d::ObjectVerbs ( const _variant_t & Index ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x400a, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x080c", &Index);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3465)
inline _bstr_t TGFramework::Symbol2d::GetAlternatePath ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4008, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3466)
inline void TGFramework::Symbol2d::PutAlternatePath ( BSTR * _arg1 ) {
    _com_dispatch_method(this, 0x4008, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x4008", _arg1);
}

#pragma implementation_key(3467)
inline TGFramework::ApplicationPtr TGFramework::Symbol2d::GetApplication ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0x5065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(3468)
inline long TGFramework::Symbol2d::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5066, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3469)
inline _bstr_t TGFramework::Symbol2d::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x5067, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3470)
inline IDispatchPtr TGFramework::Symbol2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x5068, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3471)
inline long TGFramework::Symbol2d::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5069, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3472)
inline long TGFramework::Symbol2d::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x506b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3473)
inline _bstr_t TGFramework::Symbol2d::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x506c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3474)
inline IDispatchPtr TGFramework::Symbol2d::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x506d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3475)
inline HRESULT TGFramework::Symbol2d::Copy ( ) {
    return _com_dispatch_method(this, 0x6001500a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3476)
inline HRESULT TGFramework::Symbol2d::Cut ( ) {
    return _com_dispatch_method(this, 0x6001500b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3477)
inline HRESULT TGFramework::Symbol2d::Delete ( ) {
    return _com_dispatch_method(this, 0x6001500c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3478)
inline HRESULT TGFramework::Symbol2d::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    return _com_dispatch_method(this, 0x6001500d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", XFrom, YFrom, XTo, YTo);
}

#pragma implementation_key(3479)
inline HRESULT TGFramework::Symbol2d::Scale ( double Factor ) {
    return _com_dispatch_method(this, 0x6001500e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Factor);
}

#pragma implementation_key(3480)
inline HRESULT TGFramework::Symbol2d::Rotate ( double Angle, double x, double y ) {
    return _com_dispatch_method(this, 0x6001500f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", Angle, x, y);
}

#pragma implementation_key(3481)
inline HRESULT TGFramework::Symbol2d::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60015011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(3482)
inline IDispatchPtr TGFramework::Symbol2d::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60015012, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &XDistance, &YDistance);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3483)
inline IDispatchPtr TGFramework::Symbol2d::Mirror ( double X1, double Y1, double X2, double Y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60015013, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x080c", X1, Y1, X2, Y2, &BooleanCopyFlag);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3484)
inline HRESULT TGFramework::Symbol2d::BringToFront ( ) {
    return _com_dispatch_method(this, 0x60015014, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3485)
inline HRESULT TGFramework::Symbol2d::BringForward ( ) {
    return _com_dispatch_method(this, 0x60015015, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3486)
inline HRESULT TGFramework::Symbol2d::SendToBack ( ) {
    return _com_dispatch_method(this, 0x60015016, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3487)
inline HRESULT TGFramework::Symbol2d::SendBackward ( ) {
    return _com_dispatch_method(this, 0x60015017, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3488)
inline HRESULT TGFramework::Symbol2d::Select ( ) {
    return _com_dispatch_method(this, 0x60015018, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3489)
inline long TGFramework::Symbol2d::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3490)
inline HRESULT TGFramework::Symbol2d::GetKeyPoint ( long Index, double * x, double * y, double * z, enum KeyPointType * KeyPointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x7002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeyPointType, HandleType);
}

#pragma implementation_key(3491)
inline HRESULT TGFramework::Symbol2d::SetKeyPoint ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x7003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(3492)
inline IDispatchPtr TGFramework::Symbol2d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3493)
inline VARIANT_BOOL TGFramework::Symbol2d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(3494)
inline HRESULT TGFramework::Symbol2d::ConvertToGroup ( ) {
    return _com_dispatch_method(this, 0x400b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3495)
inline IDispatchPtr TGFramework::Symbol2d::GetMemberReference ( IDispatch * Member ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x400c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x0009", Member);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3496)
inline IDispatchPtr TGFramework::Symbol2d::GetSourceDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x400d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// interface _ISymbolsAuto wrapper method implementations
//

#pragma implementation_key(3497)
inline IDispatchPtr TGFramework::_ISymbolsAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3498)
inline long TGFramework::_ISymbolsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3499)
inline IDispatchPtr TGFramework::_ISymbolsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3500)
inline IDispatchPtr TGFramework::_ISymbolsAuto::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3501)
inline IUnknownPtr TGFramework::_ISymbolsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3502)
inline TGFramework::Symbol2dPtr TGFramework::_ISymbolsAuto::Add ( long insertionType, _bstr_t filePath, double x, double y, const _variant_t & z ) {
    struct Symbol2d * _result = 0;
    HRESULT _hr = raw_Add(insertionType, filePath, x, y, z, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Symbol2dPtr(_result, false);
}

#pragma implementation_key(3503)
inline HRESULT TGFramework::_ISymbolsAuto::InsertSymbolAsGeometry ( _bstr_t filePath, double dOriginX, double dOriginY ) {
    HRESULT _hr = raw_InsertSymbolAsGeometry(filePath, dOriginX, dOriginY);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _ISymbolPropertiesAuto wrapper method implementations
//

#pragma implementation_key(3504)
inline IDispatchPtr TGFramework::_ISymbolPropertiesAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3505)
inline IDispatchPtr TGFramework::_ISymbolPropertiesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3506)
inline IDispatchPtr TGFramework::_ISymbolPropertiesAuto::GetSymbol ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Symbol(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3507)
inline IDispatchPtr TGFramework::_ISymbolPropertiesAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3508)
inline VARIANT_BOOL TGFramework::_ISymbolPropertiesAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface _IViewStyleAuto wrapper method implementations
//

#pragma implementation_key(3509)
inline _bstr_t TGFramework::_IViewStyleAuto::GetStyleName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StyleName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3510)
inline void TGFramework::_IViewStyleAuto::PutStyleName ( _bstr_t psStyleName ) {
    HRESULT _hr = put_StyleName(psStyleName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3511)
inline _bstr_t TGFramework::_IViewStyleAuto::GetParent ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3512)
inline void TGFramework::_IViewStyleAuto::PutParent ( _bstr_t psParentName ) {
    HRESULT _hr = put_Parent(psParentName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3513)
inline long TGFramework::_IViewStyleAuto::GetRenderMode ( ) {
    long _result = 0;
    HRESULT _hr = get_RenderMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3514)
inline void TGFramework::_IViewStyleAuto::PutRenderMode ( long pnRenderMode ) {
    HRESULT _hr = put_RenderMode(pnRenderMode);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3515)
inline int TGFramework::_IViewStyleAuto::GetAllowOverrides ( ) {
    int _result = 0;
    HRESULT _hr = get_AllowOverrides(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3516)
inline void TGFramework::_IViewStyleAuto::PutAllowOverrides ( int pbAllowOverrides ) {
    HRESULT _hr = put_AllowOverrides(pbAllowOverrides);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3517)
inline int TGFramework::_IViewStyleAuto::GetAntialiasWireframe ( ) {
    int _result = 0;
    HRESULT _hr = get_AntialiasWireframe(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3518)
inline void TGFramework::_IViewStyleAuto::PutAntialiasWireframe ( int pnAntialiasWireframe ) {
    HRESULT _hr = put_AntialiasWireframe(pnAntialiasWireframe);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3519)
inline int TGFramework::_IViewStyleAuto::GetAntialiasSurface ( ) {
    int _result = 0;
    HRESULT _hr = get_AntialiasSurface(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3520)
inline void TGFramework::_IViewStyleAuto::PutAntialiasSurface ( int pnAntialiasSurface ) {
    HRESULT _hr = put_AntialiasSurface(pnAntialiasSurface);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3521)
inline int TGFramework::_IViewStyleAuto::GetDepthFading ( ) {
    int _result = 0;
    HRESULT _hr = get_DepthFading(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3522)
inline void TGFramework::_IViewStyleAuto::PutDepthFading ( int pbDepthFading ) {
    HRESULT _hr = put_DepthFading(pbDepthFading);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3523)
inline int TGFramework::_IViewStyleAuto::GetPerspective ( ) {
    int _result = 0;
    HRESULT _hr = get_Perspective(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3524)
inline void TGFramework::_IViewStyleAuto::PutPerspective ( int pbPerspective ) {
    HRESULT _hr = put_Perspective(pbPerspective);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3525)
inline long TGFramework::_IViewStyleAuto::GetFocalLength ( ) {
    long _result = 0;
    HRESULT _hr = get_FocalLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3526)
inline void TGFramework::_IViewStyleAuto::PutFocalLength ( long pnFocalLength ) {
    HRESULT _hr = put_FocalLength(pnFocalLength);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3527)
inline long TGFramework::_IViewStyleAuto::GetNumLights ( ) {
    long _result = 0;
    HRESULT _hr = get_NumLights(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3528)
inline long TGFramework::_IViewStyleAuto::GetAmbientColor ( ) {
    long _result = 0;
    HRESULT _hr = get_AmbientColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3529)
inline void TGFramework::_IViewStyleAuto::PutAmbientColor ( long plAmbientColor ) {
    HRESULT _hr = put_AmbientColor(plAmbientColor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3530)
inline float TGFramework::_IViewStyleAuto::GetAmbientIntensity ( ) {
    float _result = 0;
    HRESULT _hr = get_AmbientIntensity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3531)
inline void TGFramework::_IViewStyleAuto::PutAmbientIntensity ( float pfAmbientIntensity ) {
    HRESULT _hr = put_AmbientIntensity(pfAmbientIntensity);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3532)
inline float TGFramework::_IViewStyleAuto::GetAmbientRed ( ) {
    float _result = 0;
    HRESULT _hr = get_AmbientRed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3533)
inline void TGFramework::_IViewStyleAuto::PutAmbientRed ( float pfAmbientRed ) {
    HRESULT _hr = put_AmbientRed(pfAmbientRed);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3534)
inline float TGFramework::_IViewStyleAuto::GetAmbientGreen ( ) {
    float _result = 0;
    HRESULT _hr = get_AmbientGreen(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3535)
inline void TGFramework::_IViewStyleAuto::PutAmbientGreen ( float pfAmbientGreen ) {
    HRESULT _hr = put_AmbientGreen(pfAmbientGreen);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3536)
inline float TGFramework::_IViewStyleAuto::GetAmbientBlue ( ) {
    float _result = 0;
    HRESULT _hr = get_AmbientBlue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3537)
inline void TGFramework::_IViewStyleAuto::PutAmbientBlue ( float pfAmbientBlue ) {
    HRESULT _hr = put_AmbientBlue(pfAmbientBlue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3538)
inline long TGFramework::_IViewStyleAuto::GetHiddenLineMode ( ) {
    long _result = 0;
    HRESULT _hr = get_HiddenLineMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3539)
inline void TGFramework::_IViewStyleAuto::PutHiddenLineMode ( long pnHiddenLineMode ) {
    HRESULT _hr = put_HiddenLineMode(pnHiddenLineMode);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3540)
inline float TGFramework::_IViewStyleAuto::GetDimPercentage ( ) {
    float _result = 0;
    HRESULT _hr = get_DimPercentage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3541)
inline void TGFramework::_IViewStyleAuto::PutDimPercentage ( float pfDimPercentage ) {
    HRESULT _hr = put_DimPercentage(pfDimPercentage);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3542)
inline int TGFramework::_IViewStyleAuto::GetIsBackgroundImageDisplayed ( ) {
    int _result = 0;
    HRESULT _hr = get_IsBackgroundImageDisplayed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3543)
inline HRESULT TGFramework::_IViewStyleAuto::BeginPropertyBuffer ( ) {
    HRESULT _hr = raw_BeginPropertyBuffer();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3544)
inline HRESULT TGFramework::_IViewStyleAuto::FlushPropertyBuffer ( ) {
    HRESULT _hr = raw_FlushPropertyBuffer();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3545)
inline HRESULT TGFramework::_IViewStyleAuto::AddLight ( float fRed, float fGreen, float fBlue, float fTheta, float fPhi, long * pnLight ) {
    HRESULT _hr = raw_AddLight(fRed, fGreen, fBlue, fTheta, fPhi, pnLight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3546)
inline HRESULT TGFramework::_IViewStyleAuto::DeleteLight ( long nLight ) {
    HRESULT _hr = raw_DeleteLight(nLight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3547)
inline HRESULT TGFramework::_IViewStyleAuto::GetLight ( long nLight, float * pfRed, float * pfGreen, float * pfBlue, float * pfTheta, float * pfPhi ) {
    HRESULT _hr = raw_GetLight(nLight, pfRed, pfGreen, pfBlue, pfTheta, pfPhi);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3548)
inline HRESULT TGFramework::_IViewStyleAuto::SetLight ( long nLight, float fRed, float fGreen, float fBlue, float fTheta, float fPhi ) {
    HRESULT _hr = raw_SetLight(nLight, fRed, fGreen, fBlue, fTheta, fPhi);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3549)
inline HRESULT TGFramework::_IViewStyleAuto::GetLightColor ( long nLight, long * plLightColor ) {
    HRESULT _hr = raw_GetLightColor(nLight, plLightColor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3550)
inline HRESULT TGFramework::_IViewStyleAuto::SetLightColor ( long nLight, long lLightColor ) {
    HRESULT _hr = raw_SetLightColor(nLight, lLightColor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3551)
inline HRESULT TGFramework::_IViewStyleAuto::GetLightIntensity ( long nLight, float * pfIntensity ) {
    HRESULT _hr = raw_GetLightIntensity(nLight, pfIntensity);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3552)
inline HRESULT TGFramework::_IViewStyleAuto::SetLightIntensity ( long nLight, float fIntensity ) {
    HRESULT _hr = raw_SetLightIntensity(nLight, fIntensity);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3553)
inline HRESULT TGFramework::_IViewStyleAuto::GetLightTheta ( long nLight, float * pfTheta ) {
    HRESULT _hr = raw_GetLightTheta(nLight, pfTheta);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3554)
inline HRESULT TGFramework::_IViewStyleAuto::SetLightTheta ( long nLight, float fTheta ) {
    HRESULT _hr = raw_SetLightTheta(nLight, fTheta);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3555)
inline HRESULT TGFramework::_IViewStyleAuto::GetLightPhi ( long nLight, float * pfPhi ) {
    HRESULT _hr = raw_GetLightPhi(nLight, pfPhi);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3556)
inline HRESULT TGFramework::_IViewStyleAuto::SetLightPhi ( long nLight, float fPhi ) {
    HRESULT _hr = raw_SetLightPhi(nLight, fPhi);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3557)
inline HRESULT TGFramework::_IViewStyleAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3558)
inline enum TGFramework::SeRenderModeType TGFramework::_IViewStyleAuto::GetRenderModeType ( ) {
    enum SeRenderModeType _result;
    HRESULT _hr = get_RenderModeType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3559)
inline void TGFramework::_IViewStyleAuto::PutRenderModeType ( enum SeRenderModeType pnRenderMode ) {
    HRESULT _hr = put_RenderModeType(pnRenderMode);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3560)
inline VARIANT_BOOL TGFramework::_IViewStyleAuto::GetSilhouettesEnabled ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SilhouettesEnabled(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3561)
inline void TGFramework::_IViewStyleAuto::PutSilhouettesEnabled ( VARIANT_BOOL pbEnabled ) {
    HRESULT _hr = put_SilhouettesEnabled(pbEnabled);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3562)
inline long TGFramework::_IViewStyleAuto::GetStyleID ( ) {
    long _result = 0;
    HRESULT _hr = get_StyleID(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3563)
inline HRESULT TGFramework::_IViewStyleAuto::GetAnalysisParameters ( enum SeAnalysisStateType * peState, enum SeAnalysisModeType * peMode, VARIANT * pQualityScale, VARIANT * pArg1, VARIANT * pArg2, VARIANT * pArg3, VARIANT * pArg4 ) {
    HRESULT _hr = raw_GetAnalysisParameters(peState, peMode, pQualityScale, pArg1, pArg2, pArg3, pArg4);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3564)
inline HRESULT TGFramework::_IViewStyleAuto::SetAnalysisParameters ( enum SeAnalysisStateType eState, enum SeAnalysisModeType eMode, const _variant_t & QualityScale, const _variant_t & Arg1, const _variant_t & Arg2, const _variant_t & Arg3, const _variant_t & Arg4 ) {
    HRESULT _hr = raw_SetAnalysisParameters(eState, eMode, QualityScale, Arg1, Arg2, Arg3, Arg4);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3565)
inline enum TGFramework::SeBackgroundType TGFramework::_IViewStyleAuto::GetBackgroundType ( ) {
    enum SeBackgroundType _result;
    HRESULT _hr = get_BackgroundType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3566)
inline void TGFramework::_IViewStyleAuto::PutBackgroundType ( enum SeBackgroundType pnBackgroundType ) {
    HRESULT _hr = put_BackgroundType(pnBackgroundType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3567)
inline _bstr_t TGFramework::_IViewStyleAuto::GetBackgroundImageFile ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BackgroundImageFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3568)
inline void TGFramework::_IViewStyleAuto::PutBackgroundImageFile ( _bstr_t psBackgroundImageFile ) {
    HRESULT _hr = put_BackgroundImageFile(psBackgroundImageFile);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3569)
inline enum TGFramework::SeSkyboxType TGFramework::_IViewStyleAuto::GetSkyboxType ( ) {
    enum SeSkyboxType _result;
    HRESULT _hr = get_SkyboxType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3570)
inline void TGFramework::_IViewStyleAuto::PutSkyboxType ( enum SeSkyboxType peType ) {
    HRESULT _hr = put_SkyboxType(peType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3571)
inline HRESULT TGFramework::_IViewStyleAuto::SetSkyboxSkyFile ( _bstr_t sFilename ) {
    HRESULT _hr = raw_SetSkyboxSkyFile(sFilename);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3572)
inline HRESULT TGFramework::_IViewStyleAuto::SetSkyboxSideFilename ( int nSide, _bstr_t sFilename ) {
    HRESULT _hr = raw_SetSkyboxSideFilename(nSide, sFilename);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3573)
inline _bstr_t TGFramework::_IViewStyleAuto::GetSkyboxSideFilename ( int nSide ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetSkyboxSideFilename(nSide, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3574)
inline HRESULT TGFramework::_IViewStyleAuto::SkyboxClear ( int nSide ) {
    HRESULT _hr = raw_SkyboxClear(nSide);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3575)
inline HRESULT TGFramework::_IViewStyleAuto::SkyboxClearAll ( ) {
    HRESULT _hr = raw_SkyboxClearAll();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3576)
inline HRESULT TGFramework::_IViewStyleAuto::GetSkyboxOrientation ( float * pfxDirection, float * pfyDirection, float * pfzDirection, float * pfxUp, float * pfyUp, float * pfzUp, float * pfFieldOfView ) {
    HRESULT _hr = raw_GetSkyboxOrientation(pfxDirection, pfyDirection, pfzDirection, pfxUp, pfyUp, pfzUp, pfFieldOfView);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3577)
inline HRESULT TGFramework::_IViewStyleAuto::SetSkyboxOrientation ( float fxDirection, float fyDirection, float fzDirection, float fxUp, float fyUp, float fzUp, float fFieldOfView ) {
    HRESULT _hr = raw_SetSkyboxOrientation(fxDirection, fyDirection, fzDirection, fxUp, fyUp, fzUp, fFieldOfView);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3578)
inline long TGFramework::_IViewStyleAuto::GetBackgroundMirrorX ( ) {
    long _result = 0;
    HRESULT _hr = get_BackgroundMirrorX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3579)
inline void TGFramework::_IViewStyleAuto::PutBackgroundMirrorX ( long pbMirrorX ) {
    HRESULT _hr = put_BackgroundMirrorX(pbMirrorX);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3580)
inline long TGFramework::_IViewStyleAuto::GetBackgroundMirrorY ( ) {
    long _result = 0;
    HRESULT _hr = get_BackgroundMirrorY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3581)
inline void TGFramework::_IViewStyleAuto::PutBackgroundMirrorY ( long pbMirrorY ) {
    HRESULT _hr = put_BackgroundMirrorY(pbMirrorY);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3582)
inline long TGFramework::_IViewStyleAuto::GetTextures ( ) {
    long _result = 0;
    HRESULT _hr = get_Textures(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3583)
inline void TGFramework::_IViewStyleAuto::PutTextures ( long pbTextures ) {
    HRESULT _hr = put_Textures(pbTextures);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3584)
inline long TGFramework::_IViewStyleAuto::GetReflections ( ) {
    long _result = 0;
    HRESULT _hr = get_Reflections(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3585)
inline void TGFramework::_IViewStyleAuto::PutReflections ( long pbReflections ) {
    HRESULT _hr = put_Reflections(pbReflections);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3586)
inline long TGFramework::_IViewStyleAuto::GetBumpmaps ( ) {
    long _result = 0;
    HRESULT _hr = get_Bumpmaps(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3587)
inline void TGFramework::_IViewStyleAuto::PutBumpmaps ( long pbBumpmaps ) {
    HRESULT _hr = put_Bumpmaps(pbBumpmaps);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3588)
inline long TGFramework::_IViewStyleAuto::GetFloorReflection ( ) {
    long _result = 0;
    HRESULT _hr = get_FloorReflection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3589)
inline void TGFramework::_IViewStyleAuto::PutFloorReflection ( long pbFloorReflection ) {
    HRESULT _hr = put_FloorReflection(pbFloorReflection);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3590)
inline long TGFramework::_IViewStyleAuto::GetCastShadows ( ) {
    long _result = 0;
    HRESULT _hr = get_CastShadows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3591)
inline void TGFramework::_IViewStyleAuto::PutCastShadows ( long pbCastShadows ) {
    HRESULT _hr = put_CastShadows(pbCastShadows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3592)
inline long TGFramework::_IViewStyleAuto::GetDropShadow ( ) {
    long _result = 0;
    HRESULT _hr = get_DropShadow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3593)
inline void TGFramework::_IViewStyleAuto::PutDropShadow ( long pbDropShadow ) {
    HRESULT _hr = put_DropShadow(pbDropShadow);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3594)
inline HRESULT TGFramework::_IViewStyleAuto::SetGradientBackground ( enum SeGradientType eType, long crColor1, long crColor2, const _variant_t & SpotCenterX, const _variant_t & SpotCenterY ) {
    HRESULT _hr = raw_SetGradientBackground(eType, crColor1, crColor2, SpotCenterX, SpotCenterY);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3595)
inline HRESULT TGFramework::_IViewStyleAuto::GetGradientBackground ( enum SeGradientType * peType, long * pcrColor1, long * pcrColor2, VARIANT * pSpotCenterX, VARIANT * pSpotCenterY ) {
    HRESULT _hr = raw_GetGradientBackground(peType, pcrColor1, pcrColor2, pSpotCenterX, pSpotCenterY);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3596)
inline HRESULT TGFramework::_IViewStyleAuto::SetGradientColor ( int nColor, long crColor ) {
    HRESULT _hr = raw_SetGradientColor(nColor, crColor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3597)
inline long TGFramework::_IViewStyleAuto::GetGradientColor ( int nColor ) {
    long _result = 0;
    HRESULT _hr = raw_GetGradientColor(nColor, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3598)
inline enum TGFramework::SeAntiAliasLevel TGFramework::_IViewStyleAuto::GetAntialiasLevel ( ) {
    enum SeAntiAliasLevel _result;
    HRESULT _hr = get_AntialiasLevel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3599)
inline void TGFramework::_IViewStyleAuto::PutAntialiasLevel ( enum SeAntiAliasLevel pnAntialiasLevel ) {
    HRESULT _hr = put_AntialiasLevel(pnAntialiasLevel);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3600)
inline long TGFramework::_IViewStyleAuto::GetSilhouettes ( ) {
    long _result = 0;
    HRESULT _hr = get_Silhouettes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3601)
inline void TGFramework::_IViewStyleAuto::PutSilhouettes ( long pbEnabled ) {
    HRESULT _hr = put_Silhouettes(pbEnabled);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3602)
inline enum TGFramework::SeHiddenLineMode TGFramework::_IViewStyleAuto::GetHiddenLines ( ) {
    enum SeHiddenLineMode _result;
    HRESULT _hr = get_HiddenLines(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3603)
inline void TGFramework::_IViewStyleAuto::PutHiddenLines ( enum SeHiddenLineMode peMode ) {
    HRESULT _hr = put_HiddenLines(peMode);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3604)
inline long TGFramework::_IViewStyleAuto::GetHighQuality ( ) {
    long _result = 0;
    HRESULT _hr = get_HighQuality(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3605)
inline void TGFramework::_IViewStyleAuto::PutHighQuality ( long pbHighQuality ) {
    HRESULT _hr = put_HighQuality(pbHighQuality);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3606)
inline HRESULT TGFramework::_IViewStyleAuto::ResetSkyboxOrientation ( ) {
    HRESULT _hr = raw_ResetSkyboxOrientation();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3607)
inline HRESULT TGFramework::_IViewStyleAuto::DeleteSkybox ( ) {
    HRESULT _hr = raw_DeleteSkybox();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3608)
inline long TGFramework::_IViewStyleAuto::GetAmbientShadows ( ) {
    long _result = 0;
    HRESULT _hr = get_AmbientShadows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3609)
inline void TGFramework::_IViewStyleAuto::PutAmbientShadows ( long pbAmbientShadows ) {
    HRESULT _hr = put_AmbientShadows(pbAmbientShadows);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3610)
inline long TGFramework::_IViewStyleAuto::GetFloorShadow ( ) {
    long _result = 0;
    HRESULT _hr = get_FloorShadow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3611)
inline void TGFramework::_IViewStyleAuto::PutFloorShadow ( long pbFloorShadow ) {
    HRESULT _hr = put_FloorShadow(pbFloorShadow);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3612)
inline HRESULT TGFramework::_IViewStyleAuto::GetLightFlags ( long nLight, long * pnFlags ) {
    HRESULT _hr = raw_GetLightFlags(nLight, pnFlags);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3613)
inline HRESULT TGFramework::_IViewStyleAuto::SetLightFlags ( long nLight, long nFlags ) {
    HRESULT _hr = raw_SetLightFlags(nLight, nFlags);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface ViewStyle wrapper method implementations
//

#pragma implementation_key(3614)
inline _bstr_t TGFramework::ViewStyle::GetStyleName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3615)
inline void TGFramework::ViewStyle::PutStyleName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3616)
inline _bstr_t TGFramework::ViewStyle::GetParent ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3617)
inline void TGFramework::ViewStyle::PutParent ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3618)
inline long TGFramework::ViewStyle::GetRenderMode ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3619)
inline void TGFramework::ViewStyle::PutRenderMode ( long _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3620)
inline int TGFramework::ViewStyle::GetAllowOverrides ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3621)
inline void TGFramework::ViewStyle::PutAllowOverrides ( int _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3622)
inline int TGFramework::ViewStyle::GetAntialiasWireframe ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3623)
inline void TGFramework::ViewStyle::PutAntialiasWireframe ( int _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3624)
inline int TGFramework::ViewStyle::GetAntialiasSurface ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3625)
inline void TGFramework::ViewStyle::PutAntialiasSurface ( int _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3626)
inline int TGFramework::ViewStyle::GetDepthFading ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3627)
inline void TGFramework::ViewStyle::PutDepthFading ( int _arg1 ) {
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3628)
inline int TGFramework::ViewStyle::GetPerspective ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3629)
inline void TGFramework::ViewStyle::PutPerspective ( int _arg1 ) {
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3630)
inline long TGFramework::ViewStyle::GetFocalLength ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3631)
inline void TGFramework::ViewStyle::PutFocalLength ( long _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3632)
inline long TGFramework::ViewStyle::GetNumLights ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3633)
inline long TGFramework::ViewStyle::GetAmbientColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3634)
inline void TGFramework::ViewStyle::PutAmbientColor ( long _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3635)
inline float TGFramework::ViewStyle::GetAmbientIntensity ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3636)
inline void TGFramework::ViewStyle::PutAmbientIntensity ( float _arg1 ) {
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3637)
inline float TGFramework::ViewStyle::GetAmbientRed ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3638)
inline void TGFramework::ViewStyle::PutAmbientRed ( float _arg1 ) {
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3639)
inline float TGFramework::ViewStyle::GetAmbientGreen ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3640)
inline void TGFramework::ViewStyle::PutAmbientGreen ( float _arg1 ) {
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3641)
inline float TGFramework::ViewStyle::GetAmbientBlue ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3642)
inline void TGFramework::ViewStyle::PutAmbientBlue ( float _arg1 ) {
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3643)
inline long TGFramework::ViewStyle::GetHiddenLineMode ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3644)
inline void TGFramework::ViewStyle::PutHiddenLineMode ( long _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3645)
inline float TGFramework::ViewStyle::GetDimPercentage ( ) {
    float _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_R4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3646)
inline void TGFramework::ViewStyle::PutDimPercentage ( float _arg1 ) {
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0004", _arg1);
}

#pragma implementation_key(3647)
inline int TGFramework::ViewStyle::GetIsBackgroundImageDisplayed ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3648)
inline HRESULT TGFramework::ViewStyle::BeginPropertyBuffer ( ) {
    return _com_dispatch_method(this, 0x60010022, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3649)
inline HRESULT TGFramework::ViewStyle::FlushPropertyBuffer ( ) {
    return _com_dispatch_method(this, 0x60010023, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3650)
inline HRESULT TGFramework::ViewStyle::AddLight ( float fRed, float fGreen, float fBlue, float fTheta, float fPhi, long * pnLight ) {
    return _com_dispatch_method(this, 0x60010024, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0004\x0004\x0004\x0004\x0004\x4003", fRed, fGreen, fBlue, fTheta, fPhi, pnLight);
}

#pragma implementation_key(3651)
inline HRESULT TGFramework::ViewStyle::DeleteLight ( long nLight ) {
    return _com_dispatch_method(this, 0x60010025, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", nLight);
}

#pragma implementation_key(3652)
inline HRESULT TGFramework::ViewStyle::GetLight ( long nLight, float * pfRed, float * pfGreen, float * pfBlue, float * pfTheta, float * pfPhi ) {
    return _com_dispatch_method(this, 0x60010026, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4004\x4004\x4004\x4004\x4004", nLight, pfRed, pfGreen, pfBlue, pfTheta, pfPhi);
}

#pragma implementation_key(3653)
inline HRESULT TGFramework::ViewStyle::SetLight ( long nLight, float fRed, float fGreen, float fBlue, float fTheta, float fPhi ) {
    return _com_dispatch_method(this, 0x60010027, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0004\x0004\x0004\x0004\x0004", nLight, fRed, fGreen, fBlue, fTheta, fPhi);
}

#pragma implementation_key(3654)
inline HRESULT TGFramework::ViewStyle::GetLightColor ( long nLight, long * plLightColor ) {
    return _com_dispatch_method(this, 0x60010028, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4003", nLight, plLightColor);
}

#pragma implementation_key(3655)
inline HRESULT TGFramework::ViewStyle::SetLightColor ( long nLight, long lLightColor ) {
    return _com_dispatch_method(this, 0x60010029, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", nLight, lLightColor);
}

#pragma implementation_key(3656)
inline HRESULT TGFramework::ViewStyle::GetLightIntensity ( long nLight, float * pfIntensity ) {
    return _com_dispatch_method(this, 0x6001002a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4004", nLight, pfIntensity);
}

#pragma implementation_key(3657)
inline HRESULT TGFramework::ViewStyle::SetLightIntensity ( long nLight, float fIntensity ) {
    return _com_dispatch_method(this, 0x6001002b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0004", nLight, fIntensity);
}

#pragma implementation_key(3658)
inline HRESULT TGFramework::ViewStyle::GetLightTheta ( long nLight, float * pfTheta ) {
    return _com_dispatch_method(this, 0x6001002c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4004", nLight, pfTheta);
}

#pragma implementation_key(3659)
inline HRESULT TGFramework::ViewStyle::SetLightTheta ( long nLight, float fTheta ) {
    return _com_dispatch_method(this, 0x6001002d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0004", nLight, fTheta);
}

#pragma implementation_key(3660)
inline HRESULT TGFramework::ViewStyle::GetLightPhi ( long nLight, float * pfPhi ) {
    return _com_dispatch_method(this, 0x6001002e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4004", nLight, pfPhi);
}

#pragma implementation_key(3661)
inline HRESULT TGFramework::ViewStyle::SetLightPhi ( long nLight, float fPhi ) {
    return _com_dispatch_method(this, 0x6001002f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0004", nLight, fPhi);
}

#pragma implementation_key(3662)
inline HRESULT TGFramework::ViewStyle::Delete ( ) {
    return _com_dispatch_method(this, 0x60010030, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3663)
inline enum TGFramework::SeRenderModeType TGFramework::ViewStyle::GetRenderModeType ( ) {
    enum SeRenderModeType _result;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3664)
inline void TGFramework::ViewStyle::PutRenderModeType ( enum SeRenderModeType _arg1 ) {
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3665)
inline VARIANT_BOOL TGFramework::ViewStyle::GetSilhouettesEnabled ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3666)
inline void TGFramework::ViewStyle::PutSilhouettesEnabled ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3667)
inline long TGFramework::ViewStyle::GetStyleID ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3668)
inline HRESULT TGFramework::ViewStyle::GetAnalysisParameters ( enum SeAnalysisStateType * peState, enum SeAnalysisModeType * peMode, VARIANT * pQualityScale, VARIANT * pArg1, VARIANT * pArg2, VARIANT * pArg3, VARIANT * pArg4 ) {
    return _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4003\x480c\x480c\x480c\x480c\x480c", peState, peMode, pQualityScale, pArg1, pArg2, pArg3, pArg4);
}

#pragma implementation_key(3669)
inline HRESULT TGFramework::ViewStyle::SetAnalysisParameters ( enum SeAnalysisStateType eState, enum SeAnalysisModeType eMode, const _variant_t & QualityScale, const _variant_t & Arg1, const _variant_t & Arg2, const _variant_t & Arg3, const _variant_t & Arg4 ) {
    return _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x080c\x080c\x080c\x080c\x080c", eState, eMode, &QualityScale, &Arg1, &Arg2, &Arg3, &Arg4);
}

#pragma implementation_key(3670)
inline enum TGFramework::SeBackgroundType TGFramework::ViewStyle::GetBackgroundType ( ) {
    enum SeBackgroundType _result;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3671)
inline void TGFramework::ViewStyle::PutBackgroundType ( enum SeBackgroundType _arg1 ) {
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3672)
inline _bstr_t TGFramework::ViewStyle::GetBackgroundImageFile ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3673)
inline void TGFramework::ViewStyle::PutBackgroundImageFile ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3674)
inline enum TGFramework::SeSkyboxType TGFramework::ViewStyle::GetSkyboxType ( ) {
    enum SeSkyboxType _result;
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3675)
inline void TGFramework::ViewStyle::PutSkyboxType ( enum SeSkyboxType _arg1 ) {
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3676)
inline HRESULT TGFramework::ViewStyle::SetSkyboxSkyFile ( _bstr_t sFilename ) {
    return _com_dispatch_method(this, 0x1a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)sFilename);
}

#pragma implementation_key(3677)
inline HRESULT TGFramework::ViewStyle::SetSkyboxSideFilename ( int nSide, _bstr_t sFilename ) {
    return _com_dispatch_method(this, 0x1b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0008", nSide, (BSTR)sFilename);
}

#pragma implementation_key(3678)
inline _bstr_t TGFramework::ViewStyle::GetSkyboxSideFilename ( int nSide ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1c, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0003", nSide);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3679)
inline HRESULT TGFramework::ViewStyle::SkyboxClear ( int nSide ) {
    return _com_dispatch_method(this, 0x1d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", nSide);
}

#pragma implementation_key(3680)
inline HRESULT TGFramework::ViewStyle::SkyboxClearAll ( ) {
    return _com_dispatch_method(this, 0x1e, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3681)
inline HRESULT TGFramework::ViewStyle::GetSkyboxOrientation ( float * pfxDirection, float * pfyDirection, float * pfzDirection, float * pfxUp, float * pfyUp, float * pfzUp, float * pfFieldOfView ) {
    return _com_dispatch_method(this, 0x1f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4004\x4004\x4004\x4004\x4004\x4004\x4004", pfxDirection, pfyDirection, pfzDirection, pfxUp, pfyUp, pfzUp, pfFieldOfView);
}

#pragma implementation_key(3682)
inline HRESULT TGFramework::ViewStyle::SetSkyboxOrientation ( float fxDirection, float fyDirection, float fzDirection, float fxUp, float fyUp, float fzUp, float fFieldOfView ) {
    return _com_dispatch_method(this, 0x20, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0004\x0004\x0004\x0004\x0004\x0004\x0004", fxDirection, fyDirection, fzDirection, fxUp, fyUp, fzUp, fFieldOfView);
}

#pragma implementation_key(3683)
inline long TGFramework::ViewStyle::GetBackgroundMirrorX ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x25, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3684)
inline void TGFramework::ViewStyle::PutBackgroundMirrorX ( long _arg1 ) {
    _com_dispatch_method(this, 0x25, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3685)
inline long TGFramework::ViewStyle::GetBackgroundMirrorY ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x26, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3686)
inline void TGFramework::ViewStyle::PutBackgroundMirrorY ( long _arg1 ) {
    _com_dispatch_method(this, 0x26, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3687)
inline long TGFramework::ViewStyle::GetTextures ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x27, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3688)
inline void TGFramework::ViewStyle::PutTextures ( long _arg1 ) {
    _com_dispatch_method(this, 0x27, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3689)
inline long TGFramework::ViewStyle::GetReflections ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x29, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3690)
inline void TGFramework::ViewStyle::PutReflections ( long _arg1 ) {
    _com_dispatch_method(this, 0x29, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3691)
inline long TGFramework::ViewStyle::GetBumpmaps ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x28, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3692)
inline void TGFramework::ViewStyle::PutBumpmaps ( long _arg1 ) {
    _com_dispatch_method(this, 0x28, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3693)
inline long TGFramework::ViewStyle::GetFloorReflection ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3694)
inline void TGFramework::ViewStyle::PutFloorReflection ( long _arg1 ) {
    _com_dispatch_method(this, 0x2a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3695)
inline long TGFramework::ViewStyle::GetCastShadows ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3696)
inline void TGFramework::ViewStyle::PutCastShadows ( long _arg1 ) {
    _com_dispatch_method(this, 0x2b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3697)
inline long TGFramework::ViewStyle::GetDropShadow ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3698)
inline void TGFramework::ViewStyle::PutDropShadow ( long _arg1 ) {
    _com_dispatch_method(this, 0x2c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3699)
inline HRESULT TGFramework::ViewStyle::SetGradientBackground ( enum SeGradientType eType, long crColor1, long crColor2, const _variant_t & SpotCenterX, const _variant_t & SpotCenterY ) {
    return _com_dispatch_method(this, 0x2d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0003\x080c\x080c", eType, crColor1, crColor2, &SpotCenterX, &SpotCenterY);
}

#pragma implementation_key(3700)
inline HRESULT TGFramework::ViewStyle::GetGradientBackground ( enum SeGradientType * peType, long * pcrColor1, long * pcrColor2, VARIANT * pSpotCenterX, VARIANT * pSpotCenterY ) {
    return _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4003\x4003\x480c\x480c", peType, pcrColor1, pcrColor2, pSpotCenterX, pSpotCenterY);
}

#pragma implementation_key(3701)
inline HRESULT TGFramework::ViewStyle::SetGradientColor ( int nColor, long crColor ) {
    return _com_dispatch_method(this, 0x2f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", nColor, crColor);
}

#pragma implementation_key(3702)
inline long TGFramework::ViewStyle::GetGradientColor ( int nColor ) {
    long _result = 0;
    _com_dispatch_method(this, 0x30, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nColor);
    return _result;
}

#pragma implementation_key(3703)
inline enum TGFramework::SeAntiAliasLevel TGFramework::ViewStyle::GetAntialiasLevel ( ) {
    enum SeAntiAliasLevel _result;
    _com_dispatch_method(this, 0x31, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3704)
inline void TGFramework::ViewStyle::PutAntialiasLevel ( enum SeAntiAliasLevel _arg1 ) {
    _com_dispatch_method(this, 0x31, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3705)
inline long TGFramework::ViewStyle::GetSilhouettes ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x32, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3706)
inline void TGFramework::ViewStyle::PutSilhouettes ( long _arg1 ) {
    _com_dispatch_method(this, 0x32, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3707)
inline enum TGFramework::SeHiddenLineMode TGFramework::ViewStyle::GetHiddenLines ( ) {
    enum SeHiddenLineMode _result;
    _com_dispatch_method(this, 0x33, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3708)
inline void TGFramework::ViewStyle::PutHiddenLines ( enum SeHiddenLineMode _arg1 ) {
    _com_dispatch_method(this, 0x33, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3709)
inline long TGFramework::ViewStyle::GetHighQuality ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x34, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3710)
inline void TGFramework::ViewStyle::PutHighQuality ( long _arg1 ) {
    _com_dispatch_method(this, 0x34, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3711)
inline HRESULT TGFramework::ViewStyle::ResetSkyboxOrientation ( ) {
    return _com_dispatch_method(this, 0x35, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3712)
inline HRESULT TGFramework::ViewStyle::DeleteSkybox ( ) {
    return _com_dispatch_method(this, 0x36, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3713)
inline long TGFramework::ViewStyle::GetAmbientShadows ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3714)
inline void TGFramework::ViewStyle::PutAmbientShadows ( long _arg1 ) {
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3715)
inline long TGFramework::ViewStyle::GetFloorShadow ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x38, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3716)
inline void TGFramework::ViewStyle::PutFloorShadow ( long _arg1 ) {
    _com_dispatch_method(this, 0x38, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3717)
inline HRESULT TGFramework::ViewStyle::GetLightFlags ( long nLight, long * pnFlags ) {
    return _com_dispatch_method(this, 0x39, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4003", nLight, pnFlags);
}

#pragma implementation_key(3718)
inline HRESULT TGFramework::ViewStyle::SetLightFlags ( long nLight, long nFlags ) {
    return _com_dispatch_method(this, 0x3a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", nLight, nFlags);
}

//
// interface _IViewStylesAuto wrapper method implementations
//

#pragma implementation_key(3719)
inline TGFramework::ViewStylePtr TGFramework::_IViewStylesAuto::Item ( const _variant_t & Index ) {
    struct ViewStyle * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ViewStylePtr(_result, false);
}

#pragma implementation_key(3720)
inline IUnknownPtr TGFramework::_IViewStylesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3721)
inline IDispatchPtr TGFramework::_IViewStylesAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3722)
inline long TGFramework::_IViewStylesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3723)
inline IDispatchPtr TGFramework::_IViewStylesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3724)
inline TGFramework::ViewStylePtr TGFramework::_IViewStylesAuto::Add ( _bstr_t Name, _bstr_t Parent ) {
    struct ViewStyle * _result = 0;
    HRESULT _hr = raw_Add(Name, Parent, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ViewStylePtr(_result, false);
}

#pragma implementation_key(3725)
inline HRESULT TGFramework::_IViewStylesAuto::Remove ( _bstr_t Name ) {
    HRESULT _hr = raw_Remove(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3726)
inline IDispatchPtr TGFramework::_IViewStylesAuto::GetStyleByID ( long StyleID ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_GetStyleByID(StyleID, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3727)
inline TGFramework::ViewStylePtr TGFramework::_IViewStylesAuto::AddFromFile ( _bstr_t Filename, _bstr_t StyleName ) {
    struct ViewStyle * _result = 0;
    HRESULT _hr = raw_AddFromFile(Filename, StyleName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ViewStylePtr(_result, false);
}

//
// interface _IReferenceAuto wrapper method implementations
//

#pragma implementation_key(3728)
inline IDispatchPtr TGFramework::_IReferenceAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3729)
inline IDispatchPtr TGFramework::_IReferenceAuto::GetObject ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Object(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3730)
inline IDispatchPtr TGFramework::_IReferenceAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3731)
inline enum TGFramework::ObjectType TGFramework::_IReferenceAuto::GetType ( ) {
    enum ObjectType _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3732)
inline HRESULT TGFramework::_IReferenceAuto::GetMatrix ( SAFEARRAY * * Matrix ) {
    HRESULT _hr = raw_GetMatrix(Matrix);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3733)
inline IDispatchPtr TGFramework::_IReferenceAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3734)
inline VARIANT_BOOL TGFramework::_IReferenceAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3735)
inline IDispatchPtr TGFramework::_IReferenceAuto::GetImmediateParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_ImmediateParent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3736)
inline _bstr_t TGFramework::_IReferenceAuto::GetStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3737)
inline void TGFramework::_IReferenceAuto::PutStyle ( _bstr_t Style ) {
    HRESULT _hr = put_Style(Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3738)
inline HRESULT TGFramework::_IReferenceAuto::GetOccurrencesInPath ( IDispatch * * TopOccurrence, long * NumSubOccurrencesInPath, long * NumBoundSubOccurrencesInPath, SAFEARRAY * * BoundSubOccurrencesInPath ) {
    HRESULT _hr = raw_GetOccurrencesInPath(TopOccurrence, NumSubOccurrencesInPath, NumBoundSubOccurrencesInPath, BoundSubOccurrencesInPath);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _IRoutingSlipAuto wrapper method implementations
//

#pragma implementation_key(3739)
inline void TGFramework::_IRoutingSlipAuto::PutSubject ( _bstr_t bsSubject ) {
    HRESULT _hr = put_Subject(bsSubject);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3740)
inline _bstr_t TGFramework::_IRoutingSlipAuto::GetSubject ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Subject(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3741)
inline void TGFramework::_IRoutingSlipAuto::PutReturnWhenDone ( VARIANT_BOOL pReturn ) {
    HRESULT _hr = put_ReturnWhenDone(pReturn);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3742)
inline VARIANT_BOOL TGFramework::_IRoutingSlipAuto::GetReturnWhenDone ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ReturnWhenDone(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3743)
inline void TGFramework::_IRoutingSlipAuto::PutMessage ( _bstr_t pbsMessage ) {
    HRESULT _hr = put_Message(pbsMessage);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3744)
inline _bstr_t TGFramework::_IRoutingSlipAuto::GetMessage ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Message(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3745)
inline void TGFramework::_IRoutingSlipAuto::PutRecipients ( const _variant_t & _arg1 ) {
    HRESULT _hr = put_Recipients(_arg1);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3746)
inline void TGFramework::_IRoutingSlipAuto::PutDelivery ( enum RouteType RoutMethod ) {
    HRESULT _hr = put_Delivery(RoutMethod);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3747)
inline enum TGFramework::RouteType TGFramework::_IRoutingSlipAuto::GetDelivery ( ) {
    enum RouteType _result;
    HRESULT _hr = get_Delivery(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3748)
inline enum TGFramework::RouteStatus TGFramework::_IRoutingSlipAuto::GetStatus ( ) {
    enum RouteStatus _result;
    HRESULT _hr = get_Status(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3749)
inline VARIANT_BOOL TGFramework::_IRoutingSlipAuto::GetHasRouted ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HasRouted(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3750)
inline IDispatchPtr TGFramework::_IRoutingSlipAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3751)
inline IDispatchPtr TGFramework::_IRoutingSlipAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3752)
inline void TGFramework::_IRoutingSlipAuto::PutTrackStatus ( VARIANT_BOOL TrackStatus ) {
    HRESULT _hr = put_TrackStatus(TrackStatus);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3753)
inline VARIANT_BOOL TGFramework::_IRoutingSlipAuto::GetTrackStatus ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_TrackStatus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3754)
inline void TGFramework::_IRoutingSlipAuto::PutAskForApproval ( VARIANT_BOOL pAskApproval ) {
    HRESULT _hr = put_AskForApproval(pAskApproval);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3755)
inline VARIANT_BOOL TGFramework::_IRoutingSlipAuto::GetAskForApproval ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AskForApproval(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3756)
inline void TGFramework::_IRoutingSlipAuto::PutApprove ( VARIANT_BOOL pApprove ) {
    HRESULT _hr = put_Approve(pApprove);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3757)
inline VARIANT_BOOL TGFramework::_IRoutingSlipAuto::GetApprove ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Approve(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3758)
inline VARIANT_BOOL TGFramework::_IRoutingSlipAuto::GetApproved ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Approved(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3759)
inline VARIANT_BOOL TGFramework::_IRoutingSlipAuto::GetRouteInfo ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_GetRouteInfo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3760)
inline HRESULT TGFramework::_IRoutingSlipAuto::AddRecipient ( _bstr_t bsRecip ) {
    HRESULT _hr = raw_AddRecipient(bsRecip);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3761)
inline HRESULT TGFramework::_IRoutingSlipAuto::Route ( const _variant_t & ConfirmRoute ) {
    HRESULT _hr = raw_Route(ConfirmRoute);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3762)
inline HRESULT TGFramework::_IRoutingSlipAuto::Reset ( ) {
    HRESULT _hr = raw_Reset();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3763)
inline IDispatchPtr TGFramework::_IRoutingSlipAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3764)
inline VARIANT_BOOL TGFramework::_IRoutingSlipAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface Properties wrapper method implementations
//

#pragma implementation_key(3765)
inline long TGFramework::Properties::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3766)
inline IDispatchPtr TGFramework::Properties::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3767)
inline TGFramework::ApplicationPtr TGFramework::Properties::GetApplication ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(3768)
inline _bstr_t TGFramework::Properties::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3769)
inline TGFramework::PropertyPtr TGFramework::Properties::Item ( const _variant_t & vIndex ) {
    struct Property * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &vIndex);
    return PropertyPtr(_result, false);
}

#pragma implementation_key(3770)
inline HRESULT TGFramework::Properties::Save ( ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3771)
inline TGFramework::PropertyPtr TGFramework::Properties::Add ( const _variant_t & Name, const _variant_t & Value ) {
    struct Property * _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c\x000c", &Name, &Value);
    return PropertyPtr(_result, false);
}

#pragma implementation_key(3772)
inline TGFramework::PropertyPtr TGFramework::Properties::PropertyByID ( const _variant_t & vIndex ) {
    struct Property * _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &vIndex);
    return PropertyPtr(_result, false);
}

//
// interface _IPropertySetsAuto wrapper method implementations
//

#pragma implementation_key(3773)
inline long TGFramework::_IPropertySetsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3774)
inline IDispatchPtr TGFramework::_IPropertySetsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3775)
inline TGFramework::ApplicationPtr TGFramework::_IPropertySetsAuto::GetApplication ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(3776)
inline IUnknownPtr TGFramework::_IPropertySetsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3777)
inline TGFramework::PropertiesPtr TGFramework::_IPropertySetsAuto::Item ( const _variant_t & vIndex ) {
    struct Properties * _result = 0;
    HRESULT _hr = raw_Item(vIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PropertiesPtr(_result, false);
}

#pragma implementation_key(3778)
inline HRESULT TGFramework::_IPropertySetsAuto::Save ( ) {
    HRESULT _hr = raw_Save();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface Property wrapper method implementations
//

#pragma implementation_key(3779)
inline _bstr_t TGFramework::Property::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3780)
inline _variant_t TGFramework::Property::GetValue ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3781)
inline void TGFramework::Property::PutValue ( VARIANT * _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x400c", _arg1);
}

#pragma implementation_key(3782)
inline _variant_t TGFramework::Property::GetType ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3783)
inline HRESULT TGFramework::Property::Delete ( ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3784)
inline _variant_t TGFramework::Property::Id ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

//
// interface _IPropertiesAuto wrapper method implementations
//

#pragma implementation_key(3785)
inline long TGFramework::_IPropertiesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3786)
inline IDispatchPtr TGFramework::_IPropertiesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3787)
inline TGFramework::ApplicationPtr TGFramework::_IPropertiesAuto::GetApplication ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(3788)
inline IUnknownPtr TGFramework::_IPropertiesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3789)
inline _bstr_t TGFramework::_IPropertiesAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3790)
inline TGFramework::PropertyPtr TGFramework::_IPropertiesAuto::Item ( const _variant_t & vIndex ) {
    struct Property * _result = 0;
    HRESULT _hr = raw_Item(vIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PropertyPtr(_result, false);
}

#pragma implementation_key(3791)
inline HRESULT TGFramework::_IPropertiesAuto::Save ( ) {
    HRESULT _hr = raw_Save();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3792)
inline TGFramework::PropertyPtr TGFramework::_IPropertiesAuto::Add ( const _variant_t & Name, const _variant_t & Value ) {
    struct Property * _result = 0;
    HRESULT _hr = raw_Add(Name, Value, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PropertyPtr(_result, false);
}

#pragma implementation_key(3793)
inline TGFramework::PropertyPtr TGFramework::_IPropertiesAuto::PropertyByID ( const _variant_t & vIndex ) {
    struct Property * _result = 0;
    HRESULT _hr = raw_PropertyByID(vIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PropertyPtr(_result, false);
}

//
// interface _IPropertyAuto wrapper method implementations
//

#pragma implementation_key(3794)
inline _bstr_t TGFramework::_IPropertyAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3795)
inline _variant_t TGFramework::_IPropertyAuto::GetValue ( ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = get_Value(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(3796)
inline void TGFramework::_IPropertyAuto::PutValue ( VARIANT * Value ) {
    HRESULT _hr = put_Value(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3797)
inline _variant_t TGFramework::_IPropertyAuto::GetType ( ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(3798)
inline HRESULT TGFramework::_IPropertyAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3799)
inline _variant_t TGFramework::_IPropertyAuto::Id ( ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = raw_Id(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

//
// interface _IPropertyExAuto wrapper method implementations
//

#pragma implementation_key(3800)
inline HRESULT TGFramework::_IPropertyExAuto::GetProps ( BSTR * bstName, VARIANT * Value, VARIANT * Type ) {
    HRESULT _hr = raw_GetProps(bstName, Value, Type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _ISummaryInfoAuto wrapper method implementations
//

#pragma implementation_key(3801)
inline _variant_t TGFramework::_ISummaryInfoAuto::GetAccessDate ( ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = get_AccessDate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(3802)
inline TGFramework::ApplicationPtr TGFramework::_ISummaryInfoAuto::GetApplication ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(3803)
inline _bstr_t TGFramework::_ISummaryInfoAuto::GetAuthor ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Author(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3804)
inline void TGFramework::_ISummaryInfoAuto::PutAuthor ( _bstr_t vValue ) {
    HRESULT _hr = put_Author(vValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3805)
inline _bstr_t TGFramework::_ISummaryInfoAuto::GetCategory ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Category(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3806)
inline void TGFramework::_ISummaryInfoAuto::PutCategory ( _bstr_t vValue ) {
    HRESULT _hr = put_Category(vValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3807)
inline _bstr_t TGFramework::_ISummaryInfoAuto::GetComments ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Comments(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3808)
inline void TGFramework::_ISummaryInfoAuto::PutComments ( _bstr_t vValue ) {
    HRESULT _hr = put_Comments(vValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3809)
inline _bstr_t TGFramework::_ISummaryInfoAuto::GetCompany ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Company(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3810)
inline void TGFramework::_ISummaryInfoAuto::PutCompany ( _bstr_t vValue ) {
    HRESULT _hr = put_Company(vValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3811)
inline _bstr_t TGFramework::_ISummaryInfoAuto::GetCreateApp ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CreateApp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3812)
inline void TGFramework::_ISummaryInfoAuto::PutCreateApp ( _bstr_t vValue ) {
    HRESULT _hr = put_CreateApp(vValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3813)
inline _variant_t TGFramework::_ISummaryInfoAuto::GetCreateDate ( ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = get_CreateDate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(3814)
inline long TGFramework::_ISummaryInfoAuto::GetCreationLocale ( ) {
    long _result = 0;
    HRESULT _hr = get_CreationLocale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3815)
inline _bstr_t TGFramework::_ISummaryInfoAuto::GetDocumentNumber ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DocumentNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3816)
inline void TGFramework::_ISummaryInfoAuto::PutDocumentNumber ( _bstr_t vValue ) {
    HRESULT _hr = put_DocumentNumber(vValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3817)
inline _bstr_t TGFramework::_ISummaryInfoAuto::GetKeywords ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Keywords(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3818)
inline void TGFramework::_ISummaryInfoAuto::PutKeywords ( _bstr_t vValue ) {
    HRESULT _hr = put_Keywords(vValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3819)
inline _bstr_t TGFramework::_ISummaryInfoAuto::GetLastSavedBy ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LastSavedBy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3820)
inline void TGFramework::_ISummaryInfoAuto::PutLastSavedBy ( _bstr_t vValue ) {
    HRESULT _hr = put_LastSavedBy(vValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3821)
inline _bstr_t TGFramework::_ISummaryInfoAuto::GetManager ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Manager(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3822)
inline void TGFramework::_ISummaryInfoAuto::PutManager ( _bstr_t vValue ) {
    HRESULT _hr = put_Manager(vValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3823)
inline IDispatchPtr TGFramework::_ISummaryInfoAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3824)
inline _bstr_t TGFramework::_ISummaryInfoAuto::GetProjectName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ProjectName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3825)
inline void TGFramework::_ISummaryInfoAuto::PutProjectName ( _bstr_t vValue ) {
    HRESULT _hr = put_ProjectName(vValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3826)
inline _bstr_t TGFramework::_ISummaryInfoAuto::GetRevisionNumber ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RevisionNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3827)
inline void TGFramework::_ISummaryInfoAuto::PutRevisionNumber ( _bstr_t vValue ) {
    HRESULT _hr = put_RevisionNumber(vValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3828)
inline _bstr_t TGFramework::_ISummaryInfoAuto::GetSaveApp ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SaveApp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3829)
inline void TGFramework::_ISummaryInfoAuto::PutSaveApp ( _bstr_t vValue ) {
    HRESULT _hr = put_SaveApp(vValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3830)
inline _variant_t TGFramework::_ISummaryInfoAuto::GetSaveDate ( ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = get_SaveDate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(3831)
inline _bstr_t TGFramework::_ISummaryInfoAuto::GetSubject ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Subject(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3832)
inline void TGFramework::_ISummaryInfoAuto::PutSubject ( _bstr_t vValue ) {
    HRESULT _hr = put_Subject(vValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3833)
inline _bstr_t TGFramework::_ISummaryInfoAuto::GetTemplate ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Template(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3834)
inline void TGFramework::_ISummaryInfoAuto::PutTemplate ( _bstr_t vValue ) {
    HRESULT _hr = put_Template(vValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3835)
inline _bstr_t TGFramework::_ISummaryInfoAuto::GetTitle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Title(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3836)
inline void TGFramework::_ISummaryInfoAuto::PutTitle ( _bstr_t vValue ) {
    HRESULT _hr = put_Title(vValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3837)
inline _bstr_t TGFramework::_ISummaryInfoAuto::GetTotalEdits ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TotalEdits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3838)
inline void TGFramework::_ISummaryInfoAuto::PutTotalEdits ( _bstr_t vValue ) {
    HRESULT _hr = put_TotalEdits(vValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// dispinterface AttributeSet wrapper method implementations
//

#pragma implementation_key(3839)
inline long TGFramework::AttributeSet::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10000, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3840)
inline TGFramework::AttributePtr TGFramework::AttributeSet::Item ( const _variant_t & Index ) {
    struct Attribute * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AttributePtr(_result, false);
}

#pragma implementation_key(3841)
inline TGFramework::AttributePtr TGFramework::AttributeSet::Add ( _bstr_t Name, enum AttributeTypeConstants Type ) {
    struct Attribute * _result = 0;
    _com_dispatch_method(this, 0x10003, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0003", (BSTR)Name, Type);
    return AttributePtr(_result, false);
}

#pragma implementation_key(3842)
inline HRESULT TGFramework::AttributeSet::Remove ( _bstr_t Name ) {
    return _com_dispatch_method(this, 0x10004, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Name);
}

#pragma implementation_key(3843)
inline _bstr_t TGFramework::AttributeSet::GetSetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x10002, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

//
// interface _IAttributeSetsAuto wrapper method implementations
//

#pragma implementation_key(3844)
inline long TGFramework::_IAttributeSetsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3845)
inline IUnknownPtr TGFramework::_IAttributeSetsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3846)
inline TGFramework::AttributeSetPtr TGFramework::_IAttributeSetsAuto::Item ( const _variant_t & Index ) {
    struct AttributeSet * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AttributeSetPtr(_result, false);
}

#pragma implementation_key(3847)
inline TGFramework::AttributeSetPtr TGFramework::_IAttributeSetsAuto::Add ( _bstr_t Name ) {
    struct AttributeSet * _result = 0;
    HRESULT _hr = raw_Add(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AttributeSetPtr(_result, false);
}

#pragma implementation_key(3848)
inline HRESULT TGFramework::_IAttributeSetsAuto::Remove ( _bstr_t Name ) {
    HRESULT _hr = raw_Remove(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface Attribute wrapper method implementations
//

#pragma implementation_key(3849)
inline _bstr_t TGFramework::Attribute::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3850)
inline _variant_t TGFramework::Attribute::GetValue ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(3851)
inline void TGFramework::Attribute::PutValue ( const _variant_t & _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000c", &_arg1);
}

#pragma implementation_key(3852)
inline enum TGFramework::AttributeTypeConstants TGFramework::Attribute::GetType ( ) {
    enum AttributeTypeConstants _result;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

//
// interface _IAttributeSetAuto wrapper method implementations
//

#pragma implementation_key(3853)
inline long TGFramework::_IAttributeSetAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3854)
inline IUnknownPtr TGFramework::_IAttributeSetAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3855)
inline TGFramework::AttributePtr TGFramework::_IAttributeSetAuto::Item ( const _variant_t & Index ) {
    struct Attribute * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AttributePtr(_result, false);
}

#pragma implementation_key(3856)
inline TGFramework::AttributePtr TGFramework::_IAttributeSetAuto::Add ( _bstr_t Name, enum AttributeTypeConstants Type ) {
    struct Attribute * _result = 0;
    HRESULT _hr = raw_Add(Name, Type, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AttributePtr(_result, false);
}

#pragma implementation_key(3857)
inline HRESULT TGFramework::_IAttributeSetAuto::Remove ( _bstr_t Name ) {
    HRESULT _hr = raw_Remove(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3858)
inline _bstr_t TGFramework::_IAttributeSetAuto::GetSetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SetName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// interface _IAttributeAuto wrapper method implementations
//

#pragma implementation_key(3859)
inline _bstr_t TGFramework::_IAttributeAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3860)
inline _variant_t TGFramework::_IAttributeAuto::GetValue ( ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = get_Value(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(3861)
inline void TGFramework::_IAttributeAuto::PutValue ( const _variant_t & Value ) {
    HRESULT _hr = put_Value(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3862)
inline enum TGFramework::AttributeTypeConstants TGFramework::_IAttributeAuto::GetType ( ) {
    enum AttributeTypeConstants _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface QueryObjects wrapper method implementations
//

#pragma implementation_key(3863)
inline TGFramework::ApplicationPtr TGFramework::QueryObjects::GetApplication ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(3864)
inline long TGFramework::QueryObjects::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3865)
inline IDispatchPtr TGFramework::QueryObjects::Item ( long Index ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003", Index);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3866)
inline IDispatchPtr TGFramework::QueryObjects::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// interface _IAttributeQueryAuto wrapper method implementations
//

#pragma implementation_key(3867)
inline TGFramework::QueryObjectsPtr TGFramework::_IAttributeQueryAuto::QueryByName ( const _variant_t & AttributeSetName, const _variant_t & AttributeName ) {
    struct QueryObjects * _result = 0;
    HRESULT _hr = raw_QueryByName(AttributeSetName, AttributeName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return QueryObjectsPtr(_result, false);
}

#pragma implementation_key(3868)
inline TGFramework::ApplicationPtr TGFramework::_IAttributeQueryAuto::GetApplication ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(3869)
inline IDispatchPtr TGFramework::_IAttributeQueryAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// interface _IQueryObjectsAuto wrapper method implementations
//

#pragma implementation_key(3870)
inline TGFramework::ApplicationPtr TGFramework::_IQueryObjectsAuto::GetApplication ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(3871)
inline long TGFramework::_IQueryObjectsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3872)
inline IDispatchPtr TGFramework::_IQueryObjectsAuto::Item ( long Index ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3873)
inline IDispatchPtr TGFramework::_IQueryObjectsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// dispinterface HighlightSet wrapper method implementations
//

#pragma implementation_key(3874)
inline HRESULT TGFramework::HighlightSet::AddItem ( IDispatch * Item ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Item);
}

#pragma implementation_key(3875)
inline HRESULT TGFramework::HighlightSet::AddSelected ( ) {
    return _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3876)
inline HRESULT TGFramework::HighlightSet::RemoveItem ( const _variant_t & Index ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c", &Index);
}

#pragma implementation_key(3877)
inline HRESULT TGFramework::HighlightSet::RemoveAll ( ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3878)
inline HRESULT TGFramework::HighlightSet::Draw ( ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3879)
inline HRESULT TGFramework::HighlightSet::Delete ( ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3880)
inline long TGFramework::HighlightSet::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3881)
inline IDispatchPtr TGFramework::HighlightSet::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3882)
inline long TGFramework::HighlightSet::GetColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3883)
inline void TGFramework::HighlightSet::PutColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3884)
inline HRESULT TGFramework::HighlightSet::SetTransform ( SAFEARRAY * * Matrix ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6005", Matrix);
}

#pragma implementation_key(3885)
inline HRESULT TGFramework::HighlightSet::ClearTransform ( ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// interface _IHighlightSetsAuto wrapper method implementations
//

#pragma implementation_key(3886)
inline TGFramework::ApplicationPtr TGFramework::_IHighlightSetsAuto::GetApplication ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(3887)
inline IDispatchPtr TGFramework::_IHighlightSetsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3888)
inline long TGFramework::_IHighlightSetsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3889)
inline IUnknownPtr TGFramework::_IHighlightSetsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3890)
inline TGFramework::HighlightSetPtr TGFramework::_IHighlightSetsAuto::Item ( const _variant_t & Index ) {
    struct HighlightSet * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return HighlightSetPtr(_result, false);
}

#pragma implementation_key(3891)
inline TGFramework::HighlightSetPtr TGFramework::_IHighlightSetsAuto::Add ( ) {
    struct HighlightSet * _result = 0;
    HRESULT _hr = raw_Add(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return HighlightSetPtr(_result, false);
}

//
// interface _IHighlightSetAuto wrapper method implementations
//

#pragma implementation_key(3892)
inline HRESULT TGFramework::_IHighlightSetAuto::AddItem ( IDispatch * Item ) {
    HRESULT _hr = raw_AddItem(Item);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3893)
inline HRESULT TGFramework::_IHighlightSetAuto::AddSelected ( ) {
    HRESULT _hr = raw_AddSelected();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3894)
inline HRESULT TGFramework::_IHighlightSetAuto::RemoveItem ( const _variant_t & Index ) {
    HRESULT _hr = raw_RemoveItem(Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3895)
inline HRESULT TGFramework::_IHighlightSetAuto::RemoveAll ( ) {
    HRESULT _hr = raw_RemoveAll();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3896)
inline HRESULT TGFramework::_IHighlightSetAuto::Draw ( ) {
    HRESULT _hr = raw_Draw();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3897)
inline HRESULT TGFramework::_IHighlightSetAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3898)
inline long TGFramework::_IHighlightSetAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3899)
inline IDispatchPtr TGFramework::_IHighlightSetAuto::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3900)
inline long TGFramework::_IHighlightSetAuto::GetColor ( ) {
    long _result = 0;
    HRESULT _hr = get_Color(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3901)
inline void TGFramework::_IHighlightSetAuto::PutColor ( long Color ) {
    HRESULT _hr = put_Color(Color);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3902)
inline HRESULT TGFramework::_IHighlightSetAuto::SetTransform ( SAFEARRAY * * Matrix ) {
    HRESULT _hr = raw_SetTransform(Matrix);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3903)
inline HRESULT TGFramework::_IHighlightSetAuto::ClearTransform ( ) {
    HRESULT _hr = raw_ClearTransform();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _ISEGenericCollectionAuto wrapper method implementations
//

#pragma implementation_key(3904)
inline TGFramework::ApplicationPtr TGFramework::_ISEGenericCollectionAuto::GetApplication ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(3905)
inline IDispatchPtr TGFramework::_ISEGenericCollectionAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3906)
inline long TGFramework::_ISEGenericCollectionAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3907)
inline IUnknownPtr TGFramework::_ISEGenericCollectionAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3908)
inline IDispatchPtr TGFramework::_ISEGenericCollectionAuto::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// dispinterface NamedViews wrapper method implementations
//

#pragma implementation_key(3909)
inline long TGFramework::NamedViews::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3910)
inline SAFEARRAY * TGFramework::NamedViews::GetNames ( ) {
    SAFEARRAY * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_ARRAY|VT_BSTR, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3911)
inline TGFramework::NamedViewPtr TGFramework::NamedViews::Create ( _bstr_t Name ) {
    struct NamedView * _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return NamedViewPtr(_result, false);
}

#pragma implementation_key(3912)
inline TGFramework::NamedViewPtr TGFramework::NamedViews::GetByName ( _bstr_t Name ) {
    struct NamedView * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return NamedViewPtr(_result, false);
}

#pragma implementation_key(3913)
inline HRESULT TGFramework::NamedViews::Remove ( _bstr_t Name ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Name);
}

#pragma implementation_key(3914)
inline HRESULT TGFramework::NamedViews::Rename ( _bstr_t currName, _bstr_t NewName ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008", (BSTR)currName, (BSTR)NewName);
}

#pragma implementation_key(3915)
inline TGFramework::NamedViewPtr TGFramework::NamedViews::Item ( const _variant_t & Index ) {
    struct NamedView * _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return NamedViewPtr(_result, false);
}

//
// dispinterface UnitsOfMeasure wrapper method implementations
//

#pragma implementation_key(3916)
inline _variant_t TGFramework::UnitsOfMeasure::ParseUnit ( int Index, _bstr_t UnitString ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x0003\x0008", Index, (BSTR)UnitString);
    return _variant_t(_result, false);
}

#pragma implementation_key(3917)
inline _variant_t TGFramework::UnitsOfMeasure::FormatUnit ( int Index, double Dbus, const _variant_t & PrecisionConstant ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x0003\x0005\x080c", Index, Dbus, &PrecisionConstant);
    return _variant_t(_result, false);
}

#pragma implementation_key(3918)
inline TGFramework::ApplicationPtr TGFramework::UnitsOfMeasure::GetApplication ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(3919)
inline IDispatchPtr TGFramework::UnitsOfMeasure::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3920)
inline long TGFramework::UnitsOfMeasure::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3921)
inline TGFramework::UnitOfMeasurePtr TGFramework::UnitsOfMeasure::Item ( const _variant_t & Index ) {
    struct UnitOfMeasure * _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return UnitOfMeasurePtr(_result, false);
}

//
// dispinterface variable wrapper method implementations
//

#pragma implementation_key(3922)
inline void TGFramework::variable::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3923)
inline _bstr_t TGFramework::variable::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3924)
inline int TGFramework::variable::GetUnitsType ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3925)
inline void TGFramework::variable::PutUnitsType ( int _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3926)
inline void TGFramework::variable::PutValue ( double _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3927)
inline double TGFramework::variable::GetValue ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3928)
inline void TGFramework::variable::PutProperties ( int _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3929)
inline int TGFramework::variable::GetProperties ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3930)
inline void TGFramework::variable::PutFormula ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3931)
inline _bstr_t TGFramework::variable::GetFormula ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3932)
inline HRESULT TGFramework::variable::SetRange ( _bstr_t LowValue, int Condition, _bstr_t HighValue ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0003\x0008", (BSTR)LowValue, Condition, (BSTR)HighValue);
}

#pragma implementation_key(3933)
inline HRESULT TGFramework::variable::GetRange ( BSTR * LowValue, int * Condition, BSTR * HighValue ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008\x4003\x4008", LowValue, Condition, HighValue);
}

#pragma implementation_key(3934)
inline HRESULT TGFramework::variable::SetRangeEx ( _bstr_t LowValue, _bstr_t LowLimitVarName, _bstr_t HighValue, _bstr_t HighLimitVarName, int Condition, long bSkipSettingInitialValue ) {
    return _com_dispatch_method(this, 0x20, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x0008\x0003\x0003", (BSTR)LowValue, (BSTR)LowLimitVarName, (BSTR)HighValue, (BSTR)HighLimitVarName, Condition, bSkipSettingInitialValue);
}

#pragma implementation_key(3935)
inline HRESULT TGFramework::variable::SetValue ( _bstr_t Value ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Value);
}

#pragma implementation_key(3936)
inline HRESULT TGFramework::variable::GetValue ( BSTR * Value ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008", Value);
}

#pragma implementation_key(3937)
inline HRESULT TGFramework::variable::Delete ( ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3938)
inline enum TGFramework::ObjectType TGFramework::variable::GetType ( ) {
    enum ObjectType _result;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3939)
inline void TGFramework::variable::PutVariableTableName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3940)
inline _bstr_t TGFramework::variable::GetVariableTableName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3941)
inline void TGFramework::variable::PutExpose ( long _arg1 ) {
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3942)
inline long TGFramework::variable::GetExpose ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3943)
inline void TGFramework::variable::PutExposeName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3944)
inline _bstr_t TGFramework::variable::GetExposeName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3945)
inline _bstr_t TGFramework::variable::GetDisplayName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3946)
inline _bstr_t TGFramework::variable::GetSystemName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3947)
inline VARIANT_BOOL TGFramework::variable::GetIsSuppressVariable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3948)
inline double TGFramework::variable::GetValueOutOfRange ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3949)
inline HRESULT TGFramework::variable::GetDiscreteValues ( SAFEARRAY * * DiscreteValues ) {
    return _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6005", DiscreteValues);
}

#pragma implementation_key(3950)
inline HRESULT TGFramework::variable::SetDiscreteValues ( SAFEARRAY * * DiscreteValues ) {
    return _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6005", DiscreteValues);
}

#pragma implementation_key(3951)
inline HRESULT TGFramework::variable::AddDiscreteValue ( double DiscreteValue ) {
    return _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", DiscreteValue);
}

#pragma implementation_key(3952)
inline HRESULT TGFramework::variable::RemoveDiscreteValue ( double DiscreteValue ) {
    return _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", DiscreteValue);
}

#pragma implementation_key(3953)
inline HRESULT TGFramework::variable::ClearLimitsOrDiscreteValues ( ) {
    return _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3954)
inline HRESULT TGFramework::variable::AddDiscreteVariables ( SAFEARRAY * * DiscreteVariables ) {
    return _com_dispatch_method(this, 0x21, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6008", DiscreteVariables);
}

#pragma implementation_key(3955)
inline HRESULT TGFramework::variable::GetDiscreteVariables ( VARIANT * DiscreteVariables, int * numDiscreteVariables ) {
    return _com_dispatch_method(this, 0x22, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c\x4003", DiscreteVariables, numDiscreteVariables);
}

#pragma implementation_key(3956)
inline HRESULT TGFramework::variable::RemoveDiscreteVariables ( SAFEARRAY * * DiscreteVariables ) {
    return _com_dispatch_method(this, 0x23, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6008", DiscreteVariables);
}

#pragma implementation_key(3957)
inline _bstr_t TGFramework::variable::GetComment ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_METHOD, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3958)
inline HRESULT TGFramework::variable::SetComment ( _bstr_t Comment ) {
    return _com_dispatch_method(this, 0x19, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Comment);
}

#pragma implementation_key(3959)
inline HRESULT TGFramework::variable::HasExternalLink ( VARIANT_BOOL * bLinked ) {
    return _com_dispatch_method(this, 0x1a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b", bLinked);
}

#pragma implementation_key(3960)
inline HRESULT TGFramework::variable::IsExternalLinkFrozen ( VARIANT_BOOL * bFrozen ) {
    return _com_dispatch_method(this, 0x1b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b", bFrozen);
}

#pragma implementation_key(3961)
inline HRESULT TGFramework::variable::GetExternalLinkInfo ( BSTR * SourceVariableName, BSTR * SourceDocumenetName ) {
    return _com_dispatch_method(this, 0x1c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008\x4008", SourceVariableName, SourceDocumenetName);
}

#pragma implementation_key(3962)
inline HRESULT TGFramework::variable::FreezeExternalLink ( ) {
    return _com_dispatch_method(this, 0x1d, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3963)
inline HRESULT TGFramework::variable::ThawExternalLink ( ) {
    return _com_dispatch_method(this, 0x1e, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3964)
inline HRESULT TGFramework::variable::BreakExternalLink ( ) {
    return _com_dispatch_method(this, 0x1f, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3965)
inline VARIANT_BOOL TGFramework::variable::GetIsReadOnly ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x24, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3966)
inline enum TGFramework::seVariableTypeConstants TGFramework::variable::GetVariableType ( ) {
    enum seVariableTypeConstants _result;
    _com_dispatch_method(this, 0x25, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3967)
inline HRESULT TGFramework::variable::GetValueRangeHighValue ( double * pdHighValue ) {
    return _com_dispatch_method(this, 0x26, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005", pdHighValue);
}

#pragma implementation_key(3968)
inline HRESULT TGFramework::variable::SetValueRangeHighValue ( double dHighValue ) {
    return _com_dispatch_method(this, 0x27, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", dHighValue);
}

#pragma implementation_key(3969)
inline HRESULT TGFramework::variable::GetValueRangeLowValue ( double * pdHighValue ) {
    return _com_dispatch_method(this, 0x28, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005", pdHighValue);
}

#pragma implementation_key(3970)
inline HRESULT TGFramework::variable::SetValueRangeLowValue ( double dHighValue ) {
    return _com_dispatch_method(this, 0x29, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", dHighValue);
}

#pragma implementation_key(3971)
inline HRESULT TGFramework::variable::SetValueRangeValues ( double LowValue, int Condition, double HighValue ) {
    return _com_dispatch_method(this, 0x2a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0003\x0005", LowValue, Condition, HighValue);
}

#pragma implementation_key(3972)
inline HRESULT TGFramework::variable::GetValueRangeValues ( double * LowValue, int * Condition, double * HighValue ) {
    return _com_dispatch_method(this, 0x2b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4003\x4005", LowValue, Condition, HighValue);
}

#pragma implementation_key(3973)
inline HRESULT TGFramework::variable::GetValueDiscreteValues ( SAFEARRAY * * DiscreteValues ) {
    return _com_dispatch_method(this, 0x2c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6005", DiscreteValues);
}

#pragma implementation_key(3974)
inline HRESULT TGFramework::variable::SetValueDiscreteValues ( SAFEARRAY * * DiscreteValues ) {
    return _com_dispatch_method(this, 0x2d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6005", DiscreteValues);
}

#pragma implementation_key(3975)
inline HRESULT TGFramework::variable::GetValueEx ( double * pdValue, enum seUnitsTypeConstants seUnitsType ) {
    return _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x0003", pdValue, seUnitsType);
}

#pragma implementation_key(3976)
inline HRESULT TGFramework::variable::SetValueEx ( double dValue, enum seUnitsTypeConstants seUnitsType ) {
    return _com_dispatch_method(this, 0x2f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0003", dValue, seUnitsType);
}

#pragma implementation_key(3977)
inline HRESULT TGFramework::variable::GetRangeEx ( BSTR * LowValue, BSTR * LowLimitVarName, BSTR * HighValue, BSTR * HighLimitVarName, int * Condition ) {
    return _com_dispatch_method(this, 0xa6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008\x4008\x4008\x4008\x4003", LowValue, LowLimitVarName, HighValue, HighLimitVarName, Condition);
}

#pragma implementation_key(3978)
inline HRESULT TGFramework::variable::HasVariableLimit ( VARIANT_BOOL * bVariableLimit, enum VariableLimitValueConstant * LimitValue ) {
    return _com_dispatch_method(this, 0xa7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b\x4003", bVariableLimit, LimitValue);
}

#pragma implementation_key(3979)
inline IDispatchPtr TGFramework::variable::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3980)
inline VARIANT_BOOL TGFramework::variable::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// dispinterface VariableList wrapper method implementations
//

#pragma implementation_key(3981)
inline int TGFramework::VariableList::GetCount ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x32, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3982)
inline IDispatchPtr TGFramework::VariableList::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3983)
inline HRESULT TGFramework::VariableList::Remove ( const _variant_t & Index ) {
    return _com_dispatch_method(this, 0x34, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c", &Index);
}

#pragma implementation_key(3984)
inline HRESULT TGFramework::VariableList::Add ( const _variant_t & variable ) {
    return _com_dispatch_method(this, 0x35, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c", &variable);
}

//
// dispinterface Variables wrapper method implementations
//

#pragma implementation_key(3985)
inline int TGFramework::Variables::GetCount ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3986)
inline IDispatchPtr TGFramework::Variables::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3987)
inline IDispatchPtr TGFramework::Variables::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3988)
inline IDispatchPtr TGFramework::Variables::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3989)
inline IDispatchPtr TGFramework::Variables::Add ( _bstr_t pName, _bstr_t pFormula, const _variant_t & UnitsType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0008\x080c", (BSTR)pName, (BSTR)pFormula, &UnitsType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3990)
inline IDispatchPtr TGFramework::Variables::AddFromClipboard ( _bstr_t pName, const _variant_t & UnitsType ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1d, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x080c", (BSTR)pName, &UnitsType);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3991)
inline HRESULT TGFramework::Variables::Edit ( _bstr_t pName, _bstr_t pFormula ) {
    return _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008", (BSTR)pName, (BSTR)pFormula);
}

#pragma implementation_key(3992)
inline HRESULT TGFramework::Variables::EditFromClipboard ( _bstr_t pName ) {
    return _com_dispatch_method(this, 0x1e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)pName);
}

#pragma implementation_key(3993)
inline HRESULT TGFramework::Variables::PutName ( IDispatch * pVariable, _bstr_t pName ) {
    return _com_dispatch_method(this, 0x18, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0008", pVariable, (BSTR)pName);
}

#pragma implementation_key(3994)
inline _bstr_t TGFramework::Variables::GetName ( IDispatch * pVariable ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x19, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0009", pVariable);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3995)
inline IDispatchPtr TGFramework::Variables::Translate ( _bstr_t pName ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1a, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008", (BSTR)pName);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3996)
inline IDispatchPtr TGFramework::Variables::Query ( _bstr_t pFindCriterium, const _variant_t & NamedBy, const _variant_t & VarType, const _variant_t & CaseInsensitive ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x080c\x080c\x080c", (BSTR)pFindCriterium, &NamedBy, &VarType, &CaseInsensitive);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3997)
inline _bstr_t TGFramework::Variables::GetFormula ( _bstr_t wcpName ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1c, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0008", (BSTR)wcpName);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3998)
inline _bstr_t TGFramework::Variables::GetDisplayName ( IDispatch * pVariable ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1f, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0009", pVariable);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3999)
inline _bstr_t TGFramework::Variables::GetSystemName ( IDispatch * pVariable ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x20, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0009", pVariable);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4000)
inline HRESULT TGFramework::Variables::CopyToClipboard ( _bstr_t bsName ) {
    return _com_dispatch_method(this, 0x21, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)bsName);
}

//
// dispinterface InterpartLink wrapper method implementations
//

#pragma implementation_key(4001)
inline HRESULT TGFramework::InterpartLink::IsFrozen ( VARIANT_BOOL * bFrozen ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b", bFrozen);
}

#pragma implementation_key(4002)
inline HRESULT TGFramework::InterpartLink::GetInfo ( BSTR * SourceFeatureName, BSTR * SourceDocumenetName ) {
    return _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008\x4008", SourceFeatureName, SourceDocumenetName);
}

#pragma implementation_key(4003)
inline HRESULT TGFramework::InterpartLink::Freeze ( ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4004)
inline HRESULT TGFramework::InterpartLink::Thaw ( ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4005)
inline HRESULT TGFramework::InterpartLink::BreakLink ( ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// dispinterface InterpartLinks wrapper method implementations
//

#pragma implementation_key(4006)
inline int TGFramework::InterpartLinks::GetCount ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4007)
inline IDispatchPtr TGFramework::InterpartLinks::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4008)
inline IDispatchPtr TGFramework::InterpartLinks::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4009)
inline IDispatchPtr TGFramework::InterpartLinks::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// dispinterface Sensor wrapper method implementations
//

#pragma implementation_key(4010)
inline enum TGFramework::SensorTypeConstants TGFramework::Sensor::GetSensorType ( ) {
    enum SensorTypeConstants _result;
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4011)
inline enum TGFramework::SensorStatusConstants TGFramework::Sensor::GetStatus ( ) {
    enum SensorStatusConstants _result;
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4012)
inline VARIANT_BOOL TGFramework::Sensor::GetIsInRange ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4013)
inline double TGFramework::Sensor::GetCurrentValue ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4014)
inline void TGFramework::Sensor::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4015)
inline _bstr_t TGFramework::Sensor::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4016)
inline void TGFramework::Sensor::PutDescription ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4017)
inline _bstr_t TGFramework::Sensor::GetDescription ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4018)
inline void TGFramework::Sensor::PutLowerRange ( double _arg1 ) {
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4019)
inline double TGFramework::Sensor::GetLowerRange ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4020)
inline void TGFramework::Sensor::PutUpperRange ( double _arg1 ) {
    _com_dispatch_method(this, 0x1c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4021)
inline double TGFramework::Sensor::GetUpperRange ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4022)
inline void TGFramework::Sensor::PutOperator ( enum SensorOperatorConstants _arg1 ) {
    _com_dispatch_method(this, 0x1d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4023)
inline enum TGFramework::SensorOperatorConstants TGFramework::Sensor::GetOperator ( ) {
    enum SensorOperatorConstants _result;
    _com_dispatch_method(this, 0x1d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4024)
inline void TGFramework::Sensor::PutMinimumThreshold ( double _arg1 ) {
    _com_dispatch_method(this, 0x1e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4025)
inline double TGFramework::Sensor::GetMinimumThreshold ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1e, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4026)
inline void TGFramework::Sensor::PutMaximumThreshold ( double _arg1 ) {
    _com_dispatch_method(this, 0x1f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4027)
inline double TGFramework::Sensor::GetMaximumThreshold ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1f, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4028)
inline void TGFramework::Sensor::PutDisplayType ( enum SensorDisplayTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x20, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4029)
inline enum TGFramework::SensorDisplayTypeConstants TGFramework::Sensor::GetDisplayType ( ) {
    enum SensorDisplayTypeConstants _result;
    _com_dispatch_method(this, 0x20, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4030)
inline void TGFramework::Sensor::PutUpdateMechanism ( enum SensorUpdateMechanismConstants _arg1 ) {
    _com_dispatch_method(this, 0x21, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4031)
inline enum TGFramework::SensorUpdateMechanismConstants TGFramework::Sensor::GetUpdateMechanism ( ) {
    enum SensorUpdateMechanismConstants _result;
    _com_dispatch_method(this, 0x21, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4032)
inline HRESULT TGFramework::Sensor::Update ( ) {
    return _com_dispatch_method(this, 0x22, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4033)
inline HRESULT TGFramework::Sensor::Delete ( ) {
    return _com_dispatch_method(this, 0x23, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4034)
inline IDispatchPtr TGFramework::Sensor::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4035)
inline VARIANT_BOOL TGFramework::Sensor::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// dispinterface Sensors wrapper method implementations
//

#pragma implementation_key(4036)
inline int TGFramework::Sensors::GetCount ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4037)
inline IDispatchPtr TGFramework::Sensors::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4038)
inline IDispatchPtr TGFramework::Sensors::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4039)
inline IDispatchPtr TGFramework::Sensors::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4040)
inline IDispatchPtr TGFramework::Sensors::AddVariableSensor ( IDispatch * variable, _bstr_t Name, _bstr_t Description, double LowerRange, double UpperRange, double MinimumThreshold, double MaximumThreshold, enum SensorOperatorConstants Operator, enum SensorDisplayTypeConstants DisplayType, enum SensorUpdateMechanismConstants UpdateMechanism ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0008\x0008\x0005\x0005\x0005\x0005\x0003\x0003\x0003", variable, (BSTR)Name, (BSTR)Description, LowerRange, UpperRange, MinimumThreshold, MaximumThreshold, Operator, DisplayType, UpdateMechanism);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4041)
inline IDispatchPtr TGFramework::Sensors::AddMinimumDistanceSensor ( IDispatch * Element1, IDispatch * Element2, _bstr_t Name, _bstr_t Description, double LowerRange, double UpperRange, double MinimumThreshold, double MaximumThreshold, enum SensorOperatorConstants Operator, enum SensorDisplayTypeConstants DisplayType, enum SensorUpdateMechanismConstants UpdateMechanism ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009\x0008\x0008\x0005\x0005\x0005\x0005\x0003\x0003\x0003", Element1, Element2, (BSTR)Name, (BSTR)Description, LowerRange, UpperRange, MinimumThreshold, MaximumThreshold, Operator, DisplayType, UpdateMechanism);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4042)
inline IDispatchPtr TGFramework::Sensors::AddSurfaceAreaSensor ( enum SurfaceAreaSensorAreaTypeConstants iSensorType, enum SurfaceAreaSensorSelectionTypeConstants iSelectionType, _bstr_t Name, _bstr_t Description, double LowerRange, double UpperRange, double MinimumThreshold, double MaximumThreshold, enum SensorOperatorConstants Operator, enum SensorDisplayTypeConstants DisplayType, enum SensorUpdateMechanismConstants UpdateMechanism, VARIANT * Element ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0003\x0008\x0008\x0005\x0005\x0005\x0005\x0003\x0003\x0003\x400c", iSensorType, iSelectionType, (BSTR)Name, (BSTR)Description, LowerRange, UpperRange, MinimumThreshold, MaximumThreshold, Operator, DisplayType, UpdateMechanism, Element);
    return IDispatchPtr(_result, false);
}

//
// dispinterface SheetMetalSensors wrapper method implementations
//

#pragma implementation_key(4043)
inline int TGFramework::SheetMetalSensors::GetCount ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4044)
inline IDispatchPtr TGFramework::SheetMetalSensors::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4045)
inline IDispatchPtr TGFramework::SheetMetalSensors::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4046)
inline IDispatchPtr TGFramework::SheetMetalSensors::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4047)
inline IDispatchPtr TGFramework::SheetMetalSensors::AddVariableSensor ( IDispatch * variable, _bstr_t Name, _bstr_t Description, double LowerRange, double UpperRange, double MinimumThreshold, double MaximumThreshold, enum SensorOperatorConstants Operator, enum SensorDisplayTypeConstants DisplayType, enum SensorUpdateMechanismConstants UpdateMechanism ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0008\x0008\x0005\x0005\x0005\x0005\x0003\x0003\x0003", variable, (BSTR)Name, (BSTR)Description, LowerRange, UpperRange, MinimumThreshold, MaximumThreshold, Operator, DisplayType, UpdateMechanism);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4048)
inline IDispatchPtr TGFramework::SheetMetalSensors::AddMinimumDistanceSensor ( IDispatch * Element1, IDispatch * Element2, _bstr_t Name, _bstr_t Description, double LowerRange, double UpperRange, double MinimumThreshold, double MaximumThreshold, enum SensorOperatorConstants Operator, enum SensorDisplayTypeConstants DisplayType, enum SensorUpdateMechanismConstants UpdateMechanism ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009\x0008\x0008\x0005\x0005\x0005\x0005\x0003\x0003\x0003", Element1, Element2, (BSTR)Name, (BSTR)Description, LowerRange, UpperRange, MinimumThreshold, MaximumThreshold, Operator, DisplayType, UpdateMechanism);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4049)
inline IDispatchPtr TGFramework::SheetMetalSensors::AddSheetMetalCheckerSensor ( enum SheetMetalSensorFeatureTypeConstants LeftFeatureType, enum SheetMetalSensorFeatureTypeConstants RightFeatureType, _bstr_t Name, _bstr_t Description, double Threshold, enum SensorUpdateMechanismConstants UpdateMechanism, VARIANT * Element ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0003\x0008\x0008\x0005\x0003\x480c", LeftFeatureType, RightFeatureType, (BSTR)Name, (BSTR)Description, Threshold, UpdateMechanism, Element);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4050)
inline IDispatchPtr TGFramework::SheetMetalSensors::AddSurfaceAreaSensor ( enum SurfaceAreaSensorAreaTypeConstants iSensorType, enum SurfaceAreaSensorSelectionTypeConstants iSelectionType, _bstr_t Name, _bstr_t Description, double LowerRange, double UpperRange, double MinimumThreshold, double MaximumThreshold, enum SensorOperatorConstants Operator, enum SensorDisplayTypeConstants DisplayType, enum SensorUpdateMechanismConstants UpdateMechanism, VARIANT * Element ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0003\x0008\x0008\x0005\x0005\x0005\x0005\x0003\x0003\x0003\x400c", iSensorType, iSelectionType, (BSTR)Name, (BSTR)Description, LowerRange, UpperRange, MinimumThreshold, MaximumThreshold, Operator, DisplayType, UpdateMechanism, Element);
    return IDispatchPtr(_result, false);
}

//
// dispinterface Layers wrapper method implementations
//

#pragma implementation_key(4051)
inline TGFramework::LayerPtr TGFramework::Layers::Item ( const _variant_t & Index ) {
    struct Layer * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return LayerPtr(_result, false);
}

#pragma implementation_key(4052)
inline TGFramework::ApplicationPtr TGFramework::Layers::GetApplication ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(4053)
inline IDispatchPtr TGFramework::Layers::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4054)
inline long TGFramework::Layers::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4055)
inline TGFramework::LayerPtr TGFramework::Layers::Add ( _bstr_t Name ) {
    struct Layer * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return LayerPtr(_result, false);
}

#pragma implementation_key(4056)
inline TGFramework::LayerPtr TGFramework::Layers::GetActiveLayer ( ) {
    struct Layer * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return LayerPtr(_result, false);
}

//
// dispinterface DashStyles wrapper method implementations
//

#pragma implementation_key(4057)
inline long TGFramework::DashStyles::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4058)
inline IDispatchPtr TGFramework::DashStyles::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4059)
inline IDispatchPtr TGFramework::DashStyles::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4060)
inline TGFramework::DashStylePtr TGFramework::DashStyles::Item ( const _variant_t & Index ) {
    struct DashStyle * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return DashStylePtr(_result, false);
}

#pragma implementation_key(4061)
inline TGFramework::DashStylePtr TGFramework::DashStyles::Add ( _bstr_t Name ) {
    struct DashStyle * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return DashStylePtr(_result, false);
}

#pragma implementation_key(4062)
inline HRESULT TGFramework::DashStyles::Remove ( _bstr_t Name ) {
    return _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Name);
}

//
// dispinterface LinearStyles wrapper method implementations
//

#pragma implementation_key(4063)
inline long TGFramework::LinearStyles::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4064)
inline IDispatchPtr TGFramework::LinearStyles::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4065)
inline IDispatchPtr TGFramework::LinearStyles::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4066)
inline TGFramework::LinearStylePtr TGFramework::LinearStyles::Item ( const _variant_t & Index ) {
    struct LinearStyle * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return LinearStylePtr(_result, false);
}

#pragma implementation_key(4067)
inline TGFramework::LinearStylePtr TGFramework::LinearStyles::Add ( _bstr_t Name, _bstr_t Parent ) {
    struct LinearStyle * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)Parent);
    return LinearStylePtr(_result, false);
}

#pragma implementation_key(4068)
inline HRESULT TGFramework::LinearStyles::Remove ( _bstr_t Name ) {
    return _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Name);
}

#pragma implementation_key(4069)
inline _bstr_t TGFramework::LinearStyles::GetActive ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4070)
inline void TGFramework::LinearStyles::PutActive ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

//
// dispinterface FillStyles wrapper method implementations
//

#pragma implementation_key(4071)
inline long TGFramework::FillStyles::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4072)
inline IDispatchPtr TGFramework::FillStyles::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4073)
inline IDispatchPtr TGFramework::FillStyles::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4074)
inline TGFramework::FillStylePtr TGFramework::FillStyles::Item ( const _variant_t & Index ) {
    struct FillStyle * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return FillStylePtr(_result, false);
}

#pragma implementation_key(4075)
inline TGFramework::FillStylePtr TGFramework::FillStyles::Add ( _bstr_t Name, _bstr_t Parent ) {
    struct FillStyle * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)Parent);
    return FillStylePtr(_result, false);
}

#pragma implementation_key(4076)
inline HRESULT TGFramework::FillStyles::Remove ( _bstr_t Name ) {
    return _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Name);
}

#pragma implementation_key(4077)
inline void TGFramework::FillStyles::PutActive ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4078)
inline _bstr_t TGFramework::FillStyles::GetActive ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

//
// dispinterface HatchPatternStyles wrapper method implementations
//

#pragma implementation_key(4079)
inline long TGFramework::HatchPatternStyles::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4080)
inline IDispatchPtr TGFramework::HatchPatternStyles::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4081)
inline IDispatchPtr TGFramework::HatchPatternStyles::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4082)
inline TGFramework::HatchPatternStylePtr TGFramework::HatchPatternStyles::Item ( const _variant_t & Index ) {
    struct HatchPatternStyle * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return HatchPatternStylePtr(_result, false);
}

#pragma implementation_key(4083)
inline TGFramework::HatchPatternStylePtr TGFramework::HatchPatternStyles::Add ( _bstr_t Name, _bstr_t Parent ) {
    struct HatchPatternStyle * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)Parent);
    return HatchPatternStylePtr(_result, false);
}

#pragma implementation_key(4084)
inline HRESULT TGFramework::HatchPatternStyles::Remove ( _bstr_t Name ) {
    return _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Name);
}

//
// dispinterface FaceStyles wrapper method implementations
//

#pragma implementation_key(4085)
inline IDispatchPtr TGFramework::FaceStyles::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4086)
inline IDispatchPtr TGFramework::FaceStyles::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4087)
inline long TGFramework::FaceStyles::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4088)
inline IDispatchPtr TGFramework::FaceStyles::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4089)
inline TGFramework::FaceStylePtr TGFramework::FaceStyles::Add ( _bstr_t Name, _bstr_t Parent ) {
    struct FaceStyle * _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)Parent);
    return FaceStylePtr(_result, false);
}

#pragma implementation_key(4090)
inline HRESULT TGFramework::FaceStyles::Remove ( _bstr_t Name ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Name);
}

#pragma implementation_key(4091)
inline IDispatchPtr TGFramework::FaceStyles::GetStyleByID ( long StyleID ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003", StyleID);
    return IDispatchPtr(_result, false);
}

//
// dispinterface TextStyles wrapper method implementations
//

#pragma implementation_key(4092)
inline long TGFramework::TextStyles::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4093)
inline IDispatchPtr TGFramework::TextStyles::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4094)
inline IDispatchPtr TGFramework::TextStyles::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4095)
inline TGFramework::TextStylePtr TGFramework::TextStyles::Item ( const _variant_t & Index ) {
    struct TextStyle * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return TextStylePtr(_result, false);
}

#pragma implementation_key(4096)
inline TGFramework::TextStylePtr TGFramework::TextStyles::Add ( _bstr_t Name, _bstr_t Parent ) {
    struct TextStyle * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)Parent);
    return TextStylePtr(_result, false);
}

#pragma implementation_key(4097)
inline HRESULT TGFramework::TextStyles::Remove ( _bstr_t Name ) {
    return _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Name);
}

#pragma implementation_key(4098)
inline _bstr_t TGFramework::TextStyles::GetActive ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4099)
inline void TGFramework::TextStyles::PutActive ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

//
// dispinterface TextCharStyles wrapper method implementations
//

#pragma implementation_key(4100)
inline long TGFramework::TextCharStyles::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4101)
inline IDispatchPtr TGFramework::TextCharStyles::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4102)
inline IDispatchPtr TGFramework::TextCharStyles::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4103)
inline TGFramework::TextCharStylePtr TGFramework::TextCharStyles::Item ( const _variant_t & Index ) {
    struct TextCharStyle * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return TextCharStylePtr(_result, false);
}

#pragma implementation_key(4104)
inline TGFramework::TextCharStylePtr TGFramework::TextCharStyles::Add ( _bstr_t Name, _bstr_t Parent ) {
    struct TextCharStyle * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)Parent);
    return TextCharStylePtr(_result, false);
}

#pragma implementation_key(4105)
inline HRESULT TGFramework::TextCharStyles::Remove ( _bstr_t Name ) {
    return _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Name);
}

//
// dispinterface Symbols wrapper method implementations
//

#pragma implementation_key(4106)
inline IDispatchPtr TGFramework::Symbols::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4107)
inline long TGFramework::Symbols::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4108)
inline IDispatchPtr TGFramework::Symbols::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4109)
inline IDispatchPtr TGFramework::Symbols::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4110)
inline TGFramework::Symbol2dPtr TGFramework::Symbols::Add ( long insertionType, _bstr_t filePath, double x, double y, const _variant_t & z ) {
    struct Symbol2d * _result = 0;
    _com_dispatch_method(this, 0x60010009, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0008\x0005\x0005\x080c", insertionType, (BSTR)filePath, x, y, &z);
    return Symbol2dPtr(_result, false);
}

#pragma implementation_key(4111)
inline HRESULT TGFramework::Symbols::InsertSymbolAsGeometry ( _bstr_t filePath, double dOriginX, double dOriginY ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0005\x0005", (BSTR)filePath, dOriginX, dOriginY);
}

//
// dispinterface ViewStyles wrapper method implementations
//

#pragma implementation_key(4112)
inline TGFramework::ViewStylePtr TGFramework::ViewStyles::Item ( const _variant_t & Index ) {
    struct ViewStyle * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return ViewStylePtr(_result, false);
}

#pragma implementation_key(4113)
inline IDispatchPtr TGFramework::ViewStyles::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4114)
inline long TGFramework::ViewStyles::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4115)
inline IDispatchPtr TGFramework::ViewStyles::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4116)
inline TGFramework::ViewStylePtr TGFramework::ViewStyles::Add ( _bstr_t Name, _bstr_t Parent ) {
    struct ViewStyle * _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)Parent);
    return ViewStylePtr(_result, false);
}

#pragma implementation_key(4117)
inline HRESULT TGFramework::ViewStyles::Remove ( _bstr_t Name ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Name);
}

#pragma implementation_key(4118)
inline IDispatchPtr TGFramework::ViewStyles::GetStyleByID ( long StyleID ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003", StyleID);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4119)
inline TGFramework::ViewStylePtr TGFramework::ViewStyles::AddFromFile ( _bstr_t Filename, _bstr_t StyleName ) {
    struct ViewStyle * _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Filename, (BSTR)StyleName);
    return ViewStylePtr(_result, false);
}

//
// dispinterface Reference wrapper method implementations
//

#pragma implementation_key(4120)
inline IDispatchPtr TGFramework::Reference::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4121)
inline IDispatchPtr TGFramework::Reference::GetObject ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4122)
inline IDispatchPtr TGFramework::Reference::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4123)
inline enum TGFramework::ObjectType TGFramework::Reference::GetType ( ) {
    enum ObjectType _result;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4124)
inline HRESULT TGFramework::Reference::GetMatrix ( SAFEARRAY * * Matrix ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6005", Matrix);
}

#pragma implementation_key(4125)
inline IDispatchPtr TGFramework::Reference::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4126)
inline VARIANT_BOOL TGFramework::Reference::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(4127)
inline IDispatchPtr TGFramework::Reference::GetImmediateParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4128)
inline _bstr_t TGFramework::Reference::GetStyle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4129)
inline void TGFramework::Reference::PutStyle ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4130)
inline HRESULT TGFramework::Reference::GetOccurrencesInPath ( IDispatch * * TopOccurrence, long * NumSubOccurrencesInPath, long * NumBoundSubOccurrencesInPath, SAFEARRAY * * BoundSubOccurrencesInPath ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4003\x4003\x6009", TopOccurrence, NumSubOccurrencesInPath, NumBoundSubOccurrencesInPath, BoundSubOccurrencesInPath);
}

//
// dispinterface RoutingSlip wrapper method implementations
//

#pragma implementation_key(4131)
inline void TGFramework::RoutingSlip::PutSubject ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4132)
inline _bstr_t TGFramework::RoutingSlip::GetSubject ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4133)
inline void TGFramework::RoutingSlip::PutReturnWhenDone ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4134)
inline VARIANT_BOOL TGFramework::RoutingSlip::GetReturnWhenDone ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4135)
inline void TGFramework::RoutingSlip::PutMessage ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4136)
inline _bstr_t TGFramework::RoutingSlip::GetMessage ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4137)
inline void TGFramework::RoutingSlip::PutRecipients ( const _variant_t & _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000c", &_arg1);
}

#pragma implementation_key(4138)
inline void TGFramework::RoutingSlip::PutDelivery ( enum RouteType _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4139)
inline enum TGFramework::RouteType TGFramework::RoutingSlip::GetDelivery ( ) {
    enum RouteType _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4140)
inline enum TGFramework::RouteStatus TGFramework::RoutingSlip::GetStatus ( ) {
    enum RouteStatus _result;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4141)
inline VARIANT_BOOL TGFramework::RoutingSlip::GetHasRouted ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4142)
inline IDispatchPtr TGFramework::RoutingSlip::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4143)
inline IDispatchPtr TGFramework::RoutingSlip::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4144)
inline void TGFramework::RoutingSlip::PutTrackStatus ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4145)
inline VARIANT_BOOL TGFramework::RoutingSlip::GetTrackStatus ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4146)
inline void TGFramework::RoutingSlip::PutAskForApproval ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4147)
inline VARIANT_BOOL TGFramework::RoutingSlip::GetAskForApproval ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4148)
inline void TGFramework::RoutingSlip::PutApprove ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4149)
inline VARIANT_BOOL TGFramework::RoutingSlip::GetApprove ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4150)
inline VARIANT_BOOL TGFramework::RoutingSlip::GetApproved ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4151)
inline VARIANT_BOOL TGFramework::RoutingSlip::GetRouteInfo ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4152)
inline HRESULT TGFramework::RoutingSlip::AddRecipient ( _bstr_t bsRecip ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)bsRecip);
}

#pragma implementation_key(4153)
inline HRESULT TGFramework::RoutingSlip::Route ( const _variant_t & ConfirmRoute ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &ConfirmRoute);
}

#pragma implementation_key(4154)
inline HRESULT TGFramework::RoutingSlip::Reset ( ) {
    return _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4155)
inline IDispatchPtr TGFramework::RoutingSlip::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4156)
inline VARIANT_BOOL TGFramework::RoutingSlip::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// dispinterface SymbolProperties wrapper method implementations
//

#pragma implementation_key(4157)
inline IDispatchPtr TGFramework::SymbolProperties::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4158)
inline IDispatchPtr TGFramework::SymbolProperties::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4159)
inline IDispatchPtr TGFramework::SymbolProperties::GetSymbol ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4160)
inline IDispatchPtr TGFramework::SymbolProperties::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4161)
inline VARIANT_BOOL TGFramework::SymbolProperties::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// dispinterface PropertySets wrapper method implementations
//

#pragma implementation_key(4162)
inline long TGFramework::PropertySets::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4163)
inline IDispatchPtr TGFramework::PropertySets::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4164)
inline TGFramework::ApplicationPtr TGFramework::PropertySets::GetApplication ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(4165)
inline TGFramework::PropertiesPtr TGFramework::PropertySets::Item ( const _variant_t & vIndex ) {
    struct Properties * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &vIndex);
    return PropertiesPtr(_result, false);
}

#pragma implementation_key(4166)
inline HRESULT TGFramework::PropertySets::Save ( ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// dispinterface PropertyEx wrapper method implementations
//

#pragma implementation_key(4167)
inline _bstr_t TGFramework::PropertyEx::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4168)
inline _variant_t TGFramework::PropertyEx::GetValue ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4169)
inline void TGFramework::PropertyEx::PutValue ( VARIANT * _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x400c", _arg1);
}

#pragma implementation_key(4170)
inline _variant_t TGFramework::PropertyEx::GetType ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4171)
inline HRESULT TGFramework::PropertyEx::Delete ( ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4172)
inline _variant_t TGFramework::PropertyEx::Id ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4173)
inline HRESULT TGFramework::PropertyEx::GetProps ( BSTR * bstName, VARIANT * Value, VARIANT * Type ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4008\x400c\x400c", bstName, Value, Type);
}

//
// dispinterface SummaryInfo wrapper method implementations
//

#pragma implementation_key(4174)
inline _variant_t TGFramework::SummaryInfo::GetAccessDate ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4175)
inline TGFramework::ApplicationPtr TGFramework::SummaryInfo::GetApplication ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(4176)
inline _bstr_t TGFramework::SummaryInfo::GetAuthor ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4177)
inline void TGFramework::SummaryInfo::PutAuthor ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4178)
inline _bstr_t TGFramework::SummaryInfo::GetCategory ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4179)
inline void TGFramework::SummaryInfo::PutCategory ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4180)
inline _bstr_t TGFramework::SummaryInfo::GetComments ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4181)
inline void TGFramework::SummaryInfo::PutComments ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4182)
inline _bstr_t TGFramework::SummaryInfo::GetCompany ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4183)
inline void TGFramework::SummaryInfo::PutCompany ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4184)
inline _bstr_t TGFramework::SummaryInfo::GetCreateApp ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4185)
inline void TGFramework::SummaryInfo::PutCreateApp ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4186)
inline _variant_t TGFramework::SummaryInfo::GetCreateDate ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4187)
inline long TGFramework::SummaryInfo::GetCreationLocale ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4188)
inline _bstr_t TGFramework::SummaryInfo::GetDocumentNumber ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4189)
inline void TGFramework::SummaryInfo::PutDocumentNumber ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4190)
inline _bstr_t TGFramework::SummaryInfo::GetKeywords ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4191)
inline void TGFramework::SummaryInfo::PutKeywords ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4192)
inline _bstr_t TGFramework::SummaryInfo::GetLastSavedBy ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4193)
inline void TGFramework::SummaryInfo::PutLastSavedBy ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4194)
inline _bstr_t TGFramework::SummaryInfo::GetManager ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4195)
inline void TGFramework::SummaryInfo::PutManager ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4196)
inline IDispatchPtr TGFramework::SummaryInfo::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4197)
inline _bstr_t TGFramework::SummaryInfo::GetProjectName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4198)
inline void TGFramework::SummaryInfo::PutProjectName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4199)
inline _bstr_t TGFramework::SummaryInfo::GetRevisionNumber ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4200)
inline void TGFramework::SummaryInfo::PutRevisionNumber ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4201)
inline _bstr_t TGFramework::SummaryInfo::GetSaveApp ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4202)
inline void TGFramework::SummaryInfo::PutSaveApp ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4203)
inline _variant_t TGFramework::SummaryInfo::GetSaveDate ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(4204)
inline _bstr_t TGFramework::SummaryInfo::GetSubject ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4205)
inline void TGFramework::SummaryInfo::PutSubject ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4206)
inline _bstr_t TGFramework::SummaryInfo::GetTemplate ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4207)
inline void TGFramework::SummaryInfo::PutTemplate ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4208)
inline _bstr_t TGFramework::SummaryInfo::GetTitle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4209)
inline void TGFramework::SummaryInfo::PutTitle ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4210)
inline _bstr_t TGFramework::SummaryInfo::GetTotalEdits ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4211)
inline void TGFramework::SummaryInfo::PutTotalEdits ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

//
// dispinterface AttributeQuery wrapper method implementations
//

#pragma implementation_key(4212)
inline TGFramework::QueryObjectsPtr TGFramework::AttributeQuery::QueryByName ( const _variant_t & AttributeSetName, const _variant_t & AttributeName ) {
    struct QueryObjects * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &AttributeSetName, &AttributeName);
    return QueryObjectsPtr(_result, false);
}

#pragma implementation_key(4213)
inline TGFramework::ApplicationPtr TGFramework::AttributeQuery::GetApplication ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(4214)
inline IDispatchPtr TGFramework::AttributeQuery::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// dispinterface HighlightSets wrapper method implementations
//

#pragma implementation_key(4215)
inline TGFramework::ApplicationPtr TGFramework::HighlightSets::GetApplication ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(4216)
inline IDispatchPtr TGFramework::HighlightSets::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4217)
inline long TGFramework::HighlightSets::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4218)
inline TGFramework::HighlightSetPtr TGFramework::HighlightSets::Item ( const _variant_t & Index ) {
    struct HighlightSet * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return HighlightSetPtr(_result, false);
}

#pragma implementation_key(4219)
inline TGFramework::HighlightSetPtr TGFramework::HighlightSets::Add ( ) {
    struct HighlightSet * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return HighlightSetPtr(_result, false);
}

//
// dispinterface SEGenericCollection wrapper method implementations
//

#pragma implementation_key(4220)
inline TGFramework::ApplicationPtr TGFramework::SEGenericCollection::GetApplication ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(4221)
inline IDispatchPtr TGFramework::SEGenericCollection::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4222)
inline long TGFramework::SEGenericCollection::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4223)
inline IDispatchPtr TGFramework::SEGenericCollection::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return IDispatchPtr(_result, false);
}

//
// dispinterface AttributeSets wrapper method implementations
//

#pragma implementation_key(4224)
inline long TGFramework::AttributeSets::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4225)
inline TGFramework::AttributeSetPtr TGFramework::AttributeSets::Item ( const _variant_t & Index ) {
    struct AttributeSet * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AttributeSetPtr(_result, false);
}

#pragma implementation_key(4226)
inline TGFramework::AttributeSetPtr TGFramework::AttributeSets::Add ( _bstr_t Name ) {
    struct AttributeSet * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return AttributeSetPtr(_result, false);
}

#pragma implementation_key(4227)
inline HRESULT TGFramework::AttributeSets::Remove ( _bstr_t Name ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Name);
}

//
// dispinterface SolidEdgeDocument wrapper method implementations
//

#pragma implementation_key(4228)
inline HRESULT TGFramework::SolidEdgeDocument::Activate ( ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4229)
inline TGFramework::ApplicationPtr TGFramework::SolidEdgeDocument::GetApplication ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(4230)
inline HRESULT TGFramework::SolidEdgeDocument::Close ( const _variant_t & SaveChanges, const _variant_t & Filename, const _variant_t & RouteWorkbook ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c\x080c", &SaveChanges, &Filename, &RouteWorkbook);
}

#pragma implementation_key(4231)
inline _bstr_t TGFramework::SolidEdgeDocument::GetFullName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4232)
inline _bstr_t TGFramework::SolidEdgeDocument::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4233)
inline TGFramework::ApplicationPtr TGFramework::SolidEdgeDocument::GetParent ( ) {
    struct Application * _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(4234)
inline _bstr_t TGFramework::SolidEdgeDocument::GetPath ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4235)
inline HRESULT TGFramework::SolidEdgeDocument::PrintOut ( const _variant_t & Printer, const _variant_t & NumCopies, const _variant_t & Orientation, const _variant_t & PaperSize, const _variant_t & Scale, const _variant_t & PrintToFile, const _variant_t & OutputFileName, const _variant_t & PrintRange, const _variant_t & Sheets, const _variant_t & ColorAsBlack, const _variant_t & Collate ) {
    return _com_dispatch_method(this, 0x18, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", &Printer, &NumCopies, &Orientation, &PaperSize, &Scale, &PrintToFile, &OutputFileName, &PrintRange, &Sheets, &ColorAsBlack, &Collate);
}

#pragma implementation_key(4236)
inline VARIANT_BOOL TGFramework::SolidEdgeDocument::GetReadOnly ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4237)
inline IDispatchPtr TGFramework::SolidEdgeDocument::GetRoutingSlip ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x21, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4238)
inline HRESULT TGFramework::SolidEdgeDocument::Save ( ) {
    return _com_dispatch_method(this, 0x22, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4239)
inline HRESULT TGFramework::SolidEdgeDocument::SaveAs ( _bstr_t NewName, const _variant_t & IsATemplate, const _variant_t & FileFormat, const _variant_t & ReadOnlyEnforced, const _variant_t & ReadOnlyRecommended, const _variant_t & newstatus, const _variant_t & CreateBackup, const _variant_t & UpdateLinkInContainer, const _variant_t & UpdateAllLinksInContainer ) {
    return _com_dispatch_method(this, 0x23, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", (BSTR)NewName, &IsATemplate, &FileFormat, &ReadOnlyEnforced, &ReadOnlyRecommended, &newstatus, &CreateBackup, &UpdateLinkInContainer, &UpdateAllLinksInContainer);
}

#pragma implementation_key(4240)
inline HRESULT TGFramework::SolidEdgeDocument::SaveCopyAs ( _bstr_t Name ) {
    return _com_dispatch_method(this, 0x24, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Name);
}

#pragma implementation_key(4241)
inline HRESULT TGFramework::SolidEdgeDocument::SaveAsJT ( _bstr_t NewName, const _variant_t & Include_PreciseGeom, const _variant_t & Prod_Structure_Option, const _variant_t & Export_PMI, const _variant_t & Export_CoordinateSystem, const _variant_t & Export_3DBodies, const _variant_t & NumberofLODs, const _variant_t & JTFileUnit, const _variant_t & Write_Which_Files, const _variant_t & Use_Simplified_TopAsm, const _variant_t & Use_Simplified_SubAsm, const _variant_t & Use_Simplified_Part, const _variant_t & EnableDefaultOutputPath, const _variant_t & IncludeSEProperties, const _variant_t & Export_VisiblePartsOnly, const _variant_t & Export_VisibleConstructionsOnly, const _variant_t & RemoveUnsafeCharacters, const _variant_t & ExportSEPartFileAsSingleJTFile ) {
    return _com_dispatch_method(this, 0x5b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c\x080c", (BSTR)NewName, &Include_PreciseGeom, &Prod_Structure_Option, &Export_PMI, &Export_CoordinateSystem, &Export_3DBodies, &NumberofLODs, &JTFileUnit, &Write_Which_Files, &Use_Simplified_TopAsm, &Use_Simplified_SubAsm, &Use_Simplified_Part, &EnableDefaultOutputPath, &IncludeSEProperties, &Export_VisiblePartsOnly, &Export_VisibleConstructionsOnly, &RemoveUnsafeCharacters, &ExportSEPartFileAsSingleJTFile);
}

#pragma implementation_key(4242)
inline _bstr_t TGFramework::SolidEdgeDocument::SaveAsBIDM ( _bstr_t filePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x5e, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0008\x0008\x0008\x0008", (BSTR)filePath, (BSTR)DocumentNumber, (BSTR)Revision, (BSTR)Title);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4243)
inline _bstr_t TGFramework::SolidEdgeDocument::ReviseBIDM ( _bstr_t filePath, _bstr_t Revision, _bstr_t Title ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x5f, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0008\x0008\x0008", (BSTR)filePath, (BSTR)Revision, (BSTR)Title);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4244)
inline TGFramework::SelectSetPtr TGFramework::SolidEdgeDocument::GetSelectSet ( ) {
    struct SelectSet * _result = 0;
    _com_dispatch_method(this, 0x27, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SelectSetPtr(_result, false);
}

#pragma implementation_key(4245)
inline HRESULT TGFramework::SolidEdgeDocument::SendMail ( const _variant_t & Recipients, const _variant_t & Subject, const _variant_t & ReturnReceipt ) {
    return _com_dispatch_method(this, 0x28, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c\x080c", &Recipients, &Subject, &ReturnReceipt);
}

#pragma implementation_key(4246)
inline IDispatchPtr TGFramework::SolidEdgeDocument::GetSummaryInfo ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4247)
inline TGFramework::WindowsPtr TGFramework::SolidEdgeDocument::GetWindows ( ) {
    struct Windows * _result = 0;
    _com_dispatch_method(this, 0x30, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return WindowsPtr(_result, false);
}

#pragma implementation_key(4248)
inline IDispatchPtr TGFramework::SolidEdgeDocument::GetProperties ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x34, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4249)
inline VARIANT_BOOL TGFramework::SolidEdgeDocument::GetIsTemplate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x35, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4250)
inline void TGFramework::SolidEdgeDocument::PutIsTemplate ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x35, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4251)
inline enum TGFramework::DocumentStatus TGFramework::SolidEdgeDocument::GetStatus ( ) {
    enum DocumentStatus _result;
    _com_dispatch_method(this, 0x39, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4252)
inline void TGFramework::SolidEdgeDocument::PutStatus ( enum DocumentStatus _arg1 ) {
    _com_dispatch_method(this, 0x39, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4253)
inline HRESULT TGFramework::SolidEdgeDocument::EditProperties ( ) {
    return _com_dispatch_method(this, 0x3e, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4254)
inline TGFramework::UnitsOfMeasurePtr TGFramework::SolidEdgeDocument::GetUnitsOfMeasure ( ) {
    struct UnitsOfMeasure * _result = 0;
    _com_dispatch_method(this, 0x44, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return UnitsOfMeasurePtr(_result, false);
}

#pragma implementation_key(4255)
inline IDispatchPtr TGFramework::SolidEdgeDocument::GetActiveSketch ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x45, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4256)
inline enum TGFramework::DocumentTypeConstants TGFramework::SolidEdgeDocument::GetType ( ) {
    enum DocumentTypeConstants _result;
    _com_dispatch_method(this, 0x46, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4257)
inline IUnknownPtr TGFramework::SolidEdgeDocument::GetDocumentEvents ( ) {
    struct IUnknown * _result = 0;
    _com_dispatch_method(this, 0x47, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4258)
inline IUnknownPtr TGFramework::SolidEdgeDocument::GetRootStorage ( ) {
    IUnknown * _result = 0;
    _com_dispatch_method(this, 0x48, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, NULL);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4259)
inline IUnknownPtr TGFramework::SolidEdgeDocument::GetAddInsStorage ( _bstr_t Name, long grfMode ) {
    IUnknown * _result = 0;
    _com_dispatch_method(this, 0x49, DISPATCH_PROPERTYGET, VT_UNKNOWN, (void*)&_result, 
        L"\x0008\x0003", (BSTR)Name, grfMode);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4260)
inline VARIANT_BOOL TGFramework::SolidEdgeDocument::GetDirty ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4261)
inline void TGFramework::SolidEdgeDocument::PutDirty ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4262)
inline TGFramework::AttributeQueryPtr TGFramework::SolidEdgeDocument::GetAttributeQuery ( ) {
    struct AttributeQuery * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AttributeQueryPtr(_result, false);
}

#pragma implementation_key(4263)
inline _bstr_t TGFramework::SolidEdgeDocument::GetCreatedVersion ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4264)
inline _bstr_t TGFramework::SolidEdgeDocument::GetLastSavedVersion ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4265)
inline TGFramework::HighlightSetsPtr TGFramework::SolidEdgeDocument::GetHighlightSets ( ) {
    struct HighlightSets * _result = 0;
    _com_dispatch_method(this, 0x4d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return HighlightSetsPtr(_result, false);
}

#pragma implementation_key(4266)
inline VARIANT_BOOL TGFramework::SolidEdgeDocument::GetInPlaceActivated ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4267)
inline HRESULT TGFramework::SolidEdgeDocument::SeekWriteAccess ( VARIANT_BOOL * WriteAccess ) {
    return _com_dispatch_method(this, 0x4f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b", WriteAccess);
}

#pragma implementation_key(4268)
inline long TGFramework::SolidEdgeDocument::GetUndoSteps ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x54, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4269)
inline void TGFramework::SolidEdgeDocument::PutUndoSteps ( long _arg1 ) {
    _com_dispatch_method(this, 0x54, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4270)
inline HRESULT TGFramework::SolidEdgeDocument::CreatePreview ( ) {
    return _com_dispatch_method(this, 0x59, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4271)
inline void TGFramework::SolidEdgeDocument::PutReadOnly ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4272)
inline HRESULT TGFramework::SolidEdgeDocument::SeekReadOnlyAccess ( VARIANT_BOOL * ReadOnlyAccess ) {
    return _com_dispatch_method(this, 0x5a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b", ReadOnlyAccess);
}

#pragma implementation_key(4273)
inline HRESULT TGFramework::SolidEdgeDocument::ImportStyles2 ( enum seStyleTypeConstants StyleType, VARIANT_BOOL bReplace, IDispatch * pSrcDocument ) {
    return _com_dispatch_method(this, 0x5c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x000b\x0009", StyleType, bReplace, pSrcDocument);
}

#pragma implementation_key(4274)
inline VARIANT_BOOL TGFramework::SolidEdgeDocument::GetIsInsightFile ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x5d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4275)
inline TGFramework::NamedViewsPtr TGFramework::SolidEdgeDocument::GetNamedViews ( ) {
    struct NamedViews * _result = 0;
    _com_dispatch_method(this, 0x31, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return NamedViewsPtr(_result, false);
}

#pragma implementation_key(4276)
inline HRESULT TGFramework::SolidEdgeDocument::GetRegisteredCustomPropertiesBiDM ( VARIANT * varPropInfo ) {
    return _com_dispatch_method(this, 0x60, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400c", varPropInfo);
}

#pragma implementation_key(4277)
inline _bstr_t TGFramework::SolidEdgeDocument::SaveAsWithCustomPropertiesBIDM ( _bstr_t filePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title, const _variant_t & varPropInfo ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x61, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0008\x0008\x0008\x0008\x000c", (BSTR)filePath, (BSTR)DocumentNumber, (BSTR)Revision, (BSTR)Title, &varPropInfo);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4278)
inline _bstr_t TGFramework::SolidEdgeDocument::ReviseWithCustomPropertiesBIDM ( _bstr_t filePath, _bstr_t Revision, _bstr_t Title, const _variant_t & varPropInfo ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x62, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0008\x0008\x0008\x000c", (BSTR)filePath, (BSTR)Revision, (BSTR)Title, &varPropInfo);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4279)
inline HRESULT TGFramework::SolidEdgeDocument::SaveAsPRC ( _bstr_t Filename ) {
    return _com_dispatch_method(this, 0x63, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Filename);
}

#pragma implementation_key(4280)
inline IDispatchPtr TGFramework::SolidEdgeDocument::GetVariables ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x51, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4281)
inline _variant_t TGFramework::SolidEdgeDocument::NewWindow ( const _variant_t & NewWindowOptions, const _variant_t & Environment ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x52, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, 
        L"\x080c\x080c", &NewWindowOptions, &Environment);
    return _variant_t(_result, false);
}

#pragma implementation_key(4282)
inline IDispatchPtr TGFramework::SolidEdgeDocument::GetBlocks ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1079, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4283)
inline void TGFramework::SolidEdgeDocument::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4284)
inline HRESULT TGFramework::SolidEdgeDocument::SaveAs3DPrint ( _bstr_t filePath, long NumberOfCoordinates, SAFEARRAY * * PositionArray, long NumberOfNormals, SAFEARRAY * * NormalArray, long NumberofColors, SAFEARRAY * * colorArray, long NumberofIndices, SAFEARRAY * * Indexarray, long NumberOfFaces, SAFEARRAY * * FaceArray ) {
    return _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0003\x6005\x0003\x6005\x0003\x6003\x0003\x6003\x0003\x6003", (BSTR)filePath, NumberOfCoordinates, PositionArray, NumberOfNormals, NormalArray, NumberofColors, colorArray, NumberofIndices, Indexarray, NumberOfFaces, FaceArray);
}

#pragma implementation_key(4285)
inline HRESULT TGFramework::SolidEdgeDocument::SaveAsPLMXML ( _bstr_t bstrPLMXMLFilePath, _bstr_t bstrPLMXMLINIFilePath ) {
    return _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008", (BSTR)bstrPLMXMLFilePath, (BSTR)bstrPLMXMLINIFilePath);
}

#pragma implementation_key(4286)
inline TGFramework::PredefineRelationProducerPtr TGFramework::SolidEdgeDocument::GetGetPredefineRelationProducer ( ) {
    struct PredefineRelationProducer * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return PredefineRelationProducerPtr(_result, false);
}

#pragma implementation_key(4287)
inline HRESULT TGFramework::SolidEdgeDocument::TGCopyFileByPackFunc ( _bstr_t bsDest ) {
    return _com_dispatch_method(this, 0xf618, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)bsDest);
}

#pragma implementation_key(4288)
inline HRESULT TGFramework::SolidEdgeDocument::TGSaveAsLib ( _bstr_t filePath ) {
    return _com_dispatch_method(this, 0x67, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)filePath);
}

#pragma implementation_key(4289)
inline HRESULT TGFramework::SolidEdgeDocument::TGSaveVaribalesInJson ( _bstr_t filePath ) {
    return _com_dispatch_method(this, 0x68, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)filePath);
}

//
// dispinterface PredefineRelationProducer wrapper method implementations
//

#pragma implementation_key(4290)
inline int TGFramework::PredefineRelationProducer::GroupCount ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4291)
inline int TGFramework::PredefineRelationProducer::MagneticGroupCount ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4292)
inline VARIANT_BOOL TGFramework::PredefineRelationProducer::HasAssemblyCaptureFitRelation ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4293)
inline unsigned int TGFramework::PredefineRelationProducer::AddPredefineRelationGroup ( _bstr_t bstrGroupName, enum PredefineRelationGroupPolarityConstants ePolarity, VARIANT_BOOL bSetDefault ) {
    unsigned int _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x000b", (BSTR)bstrGroupName, ePolarity, bSetDefault);
    return _result;
}

#pragma implementation_key(4294)
inline void TGFramework::PredefineRelationProducer::PutDefaultGroup ( unsigned int _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4295)
inline unsigned int TGFramework::PredefineRelationProducer::GetDefaultGroup ( ) {
    unsigned int _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4296)
inline HRESULT TGFramework::PredefineRelationProducer::SetCaptureFitDefault ( VARIANT_BOOL bCaptureFitDefault ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", bCaptureFitDefault);
}

#pragma implementation_key(4297)
inline HRESULT TGFramework::PredefineRelationProducer::ClearDefault ( ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4298)
inline HRESULT TGFramework::PredefineRelationProducer::SetGroupName ( unsigned int nGroupId, _bstr_t bstrGroupName ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0008", nGroupId, (BSTR)bstrGroupName);
}

#pragma implementation_key(4299)
inline _bstr_t TGFramework::PredefineRelationProducer::GetGroupName ( unsigned int nGroupId ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0003", nGroupId);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4300)
inline HRESULT TGFramework::PredefineRelationProducer::SetGroupPolarity ( unsigned int nGroupId, enum PredefineRelationGroupPolarityConstants ePolarity ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", nGroupId, ePolarity);
}

#pragma implementation_key(4301)
inline enum TGFramework::PredefineRelationGroupPolarityConstants TGFramework::PredefineRelationProducer::GetGroupPolarity ( unsigned int nGroupId ) {
    enum PredefineRelationGroupPolarityConstants _result;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nGroupId);
    return _result;
}

#pragma implementation_key(4302)
inline int TGFramework::PredefineRelationProducer::GetRelationCount ( unsigned int nGroupId ) {
    int _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nGroupId);
    return _result;
}

#pragma implementation_key(4303)
inline int TGFramework::PredefineRelationProducer::GetCaptureFitRelationCount ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4304)
inline HRESULT TGFramework::PredefineRelationProducer::DeleteGroups ( int numDeleteGroups, unsigned int * pnDeleteGroupIds ) {
    return _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4003", numDeleteGroups, pnDeleteGroupIds);
}

#pragma implementation_key(4305)
inline HRESULT TGFramework::PredefineRelationProducer::GetRelationData ( unsigned int nGroupId, int nRelationIndex, IDispatch * * ppElement, enum CapturedRelationshipTypeConstants * pRelationType, enum CapturedRelationshipOffsetTypeConstants * pOffsetType, double * pdOffsetOne, double * pdOffsetTwo ) {
    return _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x4009\x4003\x4003\x4005\x4005", nGroupId, nRelationIndex, ppElement, pRelationType, pOffsetType, pdOffsetOne, pdOffsetTwo);
}

#pragma implementation_key(4306)
inline HRESULT TGFramework::PredefineRelationProducer::SetRelationData ( unsigned int nGroupId, int nRelationIndex, IDispatch * pElement, enum CapturedRelationshipTypeConstants relationType, enum CapturedRelationshipOffsetTypeConstants offsetType, double dOffsetOne, double dOffsetTwo ) {
    return _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0009\x0003\x0003\x0005\x0005", nGroupId, nRelationIndex, pElement, relationType, offsetType, dOffsetOne, dOffsetTwo);
}

#pragma implementation_key(4307)
inline HRESULT TGFramework::PredefineRelationProducer::DeleteRelation ( unsigned int nGroupId, int nRelationIndex ) {
    return _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", nGroupId, nRelationIndex);
}

#pragma implementation_key(4308)
inline HRESULT TGFramework::PredefineRelationProducer::AddMateRelation ( unsigned int nGroupId, IDispatch * pElement, enum CapturedRelationshipOffsetTypeConstants * pOffsetType, double * pdOffsetOne, double * pdOffsetTwo ) {
    return _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0009\x4003\x4005\x4005", nGroupId, pElement, pOffsetType, pdOffsetOne, pdOffsetTwo);
}

#pragma implementation_key(4309)
inline HRESULT TGFramework::PredefineRelationProducer::AddPlanarRelation ( unsigned int nGroupId, IDispatch * pElement, enum CapturedRelationshipOffsetTypeConstants * pOffsetType, double * pdOffsetOne, double * pdOffsetTwo ) {
    return _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0009\x4003\x4005\x4005", nGroupId, pElement, pOffsetType, pdOffsetOne, pdOffsetTwo);
}

#pragma implementation_key(4310)
inline HRESULT TGFramework::PredefineRelationProducer::AddAxialRelation ( unsigned int nGroupId, IDispatch * pElement ) {
    return _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0009", nGroupId, pElement);
}

#pragma implementation_key(4311)
inline HRESULT TGFramework::PredefineRelationProducer::AddTangentRelation ( unsigned int nGroupId, IDispatch * pElement, enum CapturedRelationshipOffsetTypeConstants * pOffsetType, double * pdOffsetOne, double * pdOffsetTwo ) {
    return _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0009\x4003\x4005\x4005", nGroupId, pElement, pOffsetType, pdOffsetOne, pdOffsetTwo);
}

#pragma implementation_key(4312)
inline HRESULT TGFramework::PredefineRelationProducer::AddConnectRelation ( unsigned int nGroupId, IDispatch * pElement, enum CapturedRelationshipOffsetTypeConstants * pOffsetType, double * pdOffsetOne, double * pdOffsetTwo ) {
    return _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0009\x4003\x4005\x4005", nGroupId, pElement, pOffsetType, pdOffsetOne, pdOffsetTwo);
}

#pragma implementation_key(4313)
inline HRESULT TGFramework::PredefineRelationProducer::AddParallelRelation ( unsigned int nGroupId, IDispatch * pElement, enum CapturedRelationshipOffsetTypeConstants * pOffsetType, double * pdOffsetOne, double * pdOffsetTwo ) {
    return _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0009\x4003\x4005\x4005", nGroupId, pElement, pOffsetType, pdOffsetOne, pdOffsetTwo);
}

#pragma implementation_key(4314)
inline IDispatchPtr TGFramework::PredefineRelationProducer::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// interface _ISolidEdgeDocumentAuto wrapper method implementations
//

#pragma implementation_key(4315)
inline HRESULT TGFramework::_ISolidEdgeDocumentAuto::Activate ( ) {
    HRESULT _hr = raw_Activate();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4316)
inline TGFramework::ApplicationPtr TGFramework::_ISolidEdgeDocumentAuto::GetApplication ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(4317)
inline HRESULT TGFramework::_ISolidEdgeDocumentAuto::Close ( const _variant_t & SaveChanges, const _variant_t & Filename, const _variant_t & RouteWorkbook ) {
    HRESULT _hr = raw_Close(SaveChanges, Filename, RouteWorkbook);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4318)
inline _bstr_t TGFramework::_ISolidEdgeDocumentAuto::GetFullName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FullName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4319)
inline _bstr_t TGFramework::_ISolidEdgeDocumentAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4320)
inline TGFramework::ApplicationPtr TGFramework::_ISolidEdgeDocumentAuto::GetParent ( ) {
    struct Application * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ApplicationPtr(_result, false);
}

#pragma implementation_key(4321)
inline _bstr_t TGFramework::_ISolidEdgeDocumentAuto::GetPath ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Path(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4322)
inline HRESULT TGFramework::_ISolidEdgeDocumentAuto::PrintOut ( const _variant_t & Printer, const _variant_t & NumCopies, const _variant_t & Orientation, const _variant_t & PaperSize, const _variant_t & Scale, const _variant_t & PrintToFile, const _variant_t & OutputFileName, const _variant_t & PrintRange, const _variant_t & Sheets, const _variant_t & ColorAsBlack, const _variant_t & Collate ) {
    HRESULT _hr = raw_PrintOut(Printer, NumCopies, Orientation, PaperSize, Scale, PrintToFile, OutputFileName, PrintRange, Sheets, ColorAsBlack, Collate);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4323)
inline VARIANT_BOOL TGFramework::_ISolidEdgeDocumentAuto::GetReadOnly ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ReadOnly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4324)
inline IDispatchPtr TGFramework::_ISolidEdgeDocumentAuto::GetRoutingSlip ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_RoutingSlip(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4325)
inline HRESULT TGFramework::_ISolidEdgeDocumentAuto::Save ( ) {
    HRESULT _hr = raw_Save();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4326)
inline HRESULT TGFramework::_ISolidEdgeDocumentAuto::SaveAs ( _bstr_t NewName, const _variant_t & IsATemplate, const _variant_t & FileFormat, const _variant_t & ReadOnlyEnforced, const _variant_t & ReadOnlyRecommended, const _variant_t & newstatus, const _variant_t & CreateBackup, const _variant_t & UpdateLinkInContainer, const _variant_t & UpdateAllLinksInContainer ) {
    HRESULT _hr = raw_SaveAs(NewName, IsATemplate, FileFormat, ReadOnlyEnforced, ReadOnlyRecommended, newstatus, CreateBackup, UpdateLinkInContainer, UpdateAllLinksInContainer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4327)
inline HRESULT TGFramework::_ISolidEdgeDocumentAuto::SaveCopyAs ( _bstr_t Name ) {
    HRESULT _hr = raw_SaveCopyAs(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4328)
inline HRESULT TGFramework::_ISolidEdgeDocumentAuto::SaveAsJT ( _bstr_t NewName, const _variant_t & Include_PreciseGeom, const _variant_t & Prod_Structure_Option, const _variant_t & Export_PMI, const _variant_t & Export_CoordinateSystem, const _variant_t & Export_3DBodies, const _variant_t & NumberofLODs, const _variant_t & JTFileUnit, const _variant_t & Write_Which_Files, const _variant_t & Use_Simplified_TopAsm, const _variant_t & Use_Simplified_SubAsm, const _variant_t & Use_Simplified_Part, const _variant_t & EnableDefaultOutputPath, const _variant_t & IncludeSEProperties, const _variant_t & Export_VisiblePartsOnly, const _variant_t & Export_VisibleConstructionsOnly, const _variant_t & RemoveUnsafeCharacters, const _variant_t & ExportSEPartFileAsSingleJTFile ) {
    HRESULT _hr = raw_SaveAsJT(NewName, Include_PreciseGeom, Prod_Structure_Option, Export_PMI, Export_CoordinateSystem, Export_3DBodies, NumberofLODs, JTFileUnit, Write_Which_Files, Use_Simplified_TopAsm, Use_Simplified_SubAsm, Use_Simplified_Part, EnableDefaultOutputPath, IncludeSEProperties, Export_VisiblePartsOnly, Export_VisibleConstructionsOnly, RemoveUnsafeCharacters, ExportSEPartFileAsSingleJTFile);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4329)
inline _bstr_t TGFramework::_ISolidEdgeDocumentAuto::SaveAsBIDM ( _bstr_t filePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title ) {
    BSTR _result = 0;
    HRESULT _hr = raw_SaveAsBIDM(filePath, DocumentNumber, Revision, Title, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4330)
inline _bstr_t TGFramework::_ISolidEdgeDocumentAuto::ReviseBIDM ( _bstr_t filePath, _bstr_t Revision, _bstr_t Title ) {
    BSTR _result = 0;
    HRESULT _hr = raw_ReviseBIDM(filePath, Revision, Title, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4331)
inline TGFramework::SelectSetPtr TGFramework::_ISolidEdgeDocumentAuto::GetSelectSet ( ) {
    struct SelectSet * _result = 0;
    HRESULT _hr = get_SelectSet(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SelectSetPtr(_result, false);
}

#pragma implementation_key(4332)
inline HRESULT TGFramework::_ISolidEdgeDocumentAuto::SendMail ( const _variant_t & Recipients, const _variant_t & Subject, const _variant_t & ReturnReceipt ) {
    HRESULT _hr = raw_SendMail(Recipients, Subject, ReturnReceipt);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4333)
inline IDispatchPtr TGFramework::_ISolidEdgeDocumentAuto::GetSummaryInfo ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_SummaryInfo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4334)
inline TGFramework::WindowsPtr TGFramework::_ISolidEdgeDocumentAuto::GetWindows ( ) {
    struct Windows * _result = 0;
    HRESULT _hr = get_Windows(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return WindowsPtr(_result, false);
}

#pragma implementation_key(4335)
inline IDispatchPtr TGFramework::_ISolidEdgeDocumentAuto::GetProperties ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Properties(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4336)
inline VARIANT_BOOL TGFramework::_ISolidEdgeDocumentAuto::GetIsTemplate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsTemplate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4337)
inline void TGFramework::_ISolidEdgeDocumentAuto::PutIsTemplate ( VARIANT_BOOL IsTemplate ) {
    HRESULT _hr = put_IsTemplate(IsTemplate);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4338)
inline enum TGFramework::DocumentStatus TGFramework::_ISolidEdgeDocumentAuto::GetStatus ( ) {
    enum DocumentStatus _result;
    HRESULT _hr = get_Status(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4339)
inline void TGFramework::_ISolidEdgeDocumentAuto::PutStatus ( enum DocumentStatus Status ) {
    HRESULT _hr = put_Status(Status);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4340)
inline HRESULT TGFramework::_ISolidEdgeDocumentAuto::EditProperties ( ) {
    HRESULT _hr = raw_EditProperties();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4341)
inline TGFramework::UnitsOfMeasurePtr TGFramework::_ISolidEdgeDocumentAuto::GetUnitsOfMeasure ( ) {
    struct UnitsOfMeasure * _result = 0;
    HRESULT _hr = get_UnitsOfMeasure(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return UnitsOfMeasurePtr(_result, false);
}

#pragma implementation_key(4342)
inline IDispatchPtr TGFramework::_ISolidEdgeDocumentAuto::GetActiveSketch ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_ActiveSketch(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4343)
inline enum TGFramework::DocumentTypeConstants TGFramework::_ISolidEdgeDocumentAuto::GetType ( ) {
    enum DocumentTypeConstants _result;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4344)
inline IUnknownPtr TGFramework::_ISolidEdgeDocumentAuto::GetDocumentEvents ( ) {
    struct IUnknown * _result = 0;
    HRESULT _hr = get_DocumentEvents(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4345)
inline IUnknownPtr TGFramework::_ISolidEdgeDocumentAuto::GetRootStorage ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get_RootStorage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4346)
inline IUnknownPtr TGFramework::_ISolidEdgeDocumentAuto::GetAddInsStorage ( _bstr_t Name, long grfMode ) {
    IUnknown * _result = 0;
    HRESULT _hr = get_AddInsStorage(Name, grfMode, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4347)
inline VARIANT_BOOL TGFramework::_ISolidEdgeDocumentAuto::GetDirty ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Dirty(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4348)
inline void TGFramework::_ISolidEdgeDocumentAuto::PutDirty ( VARIANT_BOOL Dirty ) {
    HRESULT _hr = put_Dirty(Dirty);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4349)
inline TGFramework::AttributeQueryPtr TGFramework::_ISolidEdgeDocumentAuto::GetAttributeQuery ( ) {
    struct AttributeQuery * _result = 0;
    HRESULT _hr = get_AttributeQuery(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AttributeQueryPtr(_result, false);
}

#pragma implementation_key(4350)
inline _bstr_t TGFramework::_ISolidEdgeDocumentAuto::GetCreatedVersion ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CreatedVersion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4351)
inline _bstr_t TGFramework::_ISolidEdgeDocumentAuto::GetLastSavedVersion ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LastSavedVersion(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4352)
inline TGFramework::HighlightSetsPtr TGFramework::_ISolidEdgeDocumentAuto::GetHighlightSets ( ) {
    struct HighlightSets * _result = 0;
    HRESULT _hr = get_HighlightSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return HighlightSetsPtr(_result, false);
}

#pragma implementation_key(4353)
inline VARIANT_BOOL TGFramework::_ISolidEdgeDocumentAuto::GetInPlaceActivated ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_InPlaceActivated(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4354)
inline HRESULT TGFramework::_ISolidEdgeDocumentAuto::SeekWriteAccess ( VARIANT_BOOL * WriteAccess ) {
    HRESULT _hr = raw_SeekWriteAccess(WriteAccess);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4355)
inline long TGFramework::_ISolidEdgeDocumentAuto::GetUndoSteps ( ) {
    long _result = 0;
    HRESULT _hr = get_UndoSteps(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4356)
inline void TGFramework::_ISolidEdgeDocumentAuto::PutUndoSteps ( long NumberOfUndoSteps ) {
    HRESULT _hr = put_UndoSteps(NumberOfUndoSteps);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4357)
inline HRESULT TGFramework::_ISolidEdgeDocumentAuto::CreatePreview ( ) {
    HRESULT _hr = raw_CreatePreview();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4358)
inline void TGFramework::_ISolidEdgeDocumentAuto::PutReadOnly ( VARIANT_BOOL ReadOnly ) {
    HRESULT _hr = put_ReadOnly(ReadOnly);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4359)
inline HRESULT TGFramework::_ISolidEdgeDocumentAuto::SeekReadOnlyAccess ( VARIANT_BOOL * ReadOnlyAccess ) {
    HRESULT _hr = raw_SeekReadOnlyAccess(ReadOnlyAccess);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4360)
inline HRESULT TGFramework::_ISolidEdgeDocumentAuto::ImportStyles2 ( enum seStyleTypeConstants StyleType, VARIANT_BOOL bReplace, IDispatch * pSrcDocument ) {
    HRESULT _hr = raw_ImportStyles2(StyleType, bReplace, pSrcDocument);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4361)
inline VARIANT_BOOL TGFramework::_ISolidEdgeDocumentAuto::GetIsInsightFile ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsInsightFile(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4362)
inline TGFramework::NamedViewsPtr TGFramework::_ISolidEdgeDocumentAuto::GetNamedViews ( ) {
    struct NamedViews * _result = 0;
    HRESULT _hr = get_NamedViews(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return NamedViewsPtr(_result, false);
}

#pragma implementation_key(4363)
inline HRESULT TGFramework::_ISolidEdgeDocumentAuto::GetRegisteredCustomPropertiesBiDM ( VARIANT * varPropInfo ) {
    HRESULT _hr = raw_GetRegisteredCustomPropertiesBiDM(varPropInfo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4364)
inline _bstr_t TGFramework::_ISolidEdgeDocumentAuto::SaveAsWithCustomPropertiesBIDM ( _bstr_t filePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title, const _variant_t & varPropInfo ) {
    BSTR _result = 0;
    HRESULT _hr = raw_SaveAsWithCustomPropertiesBIDM(filePath, DocumentNumber, Revision, Title, varPropInfo, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4365)
inline _bstr_t TGFramework::_ISolidEdgeDocumentAuto::ReviseWithCustomPropertiesBIDM ( _bstr_t filePath, _bstr_t Revision, _bstr_t Title, const _variant_t & varPropInfo ) {
    BSTR _result = 0;
    HRESULT _hr = raw_ReviseWithCustomPropertiesBIDM(filePath, Revision, Title, varPropInfo, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4366)
inline HRESULT TGFramework::_ISolidEdgeDocumentAuto::SaveAsPRC ( _bstr_t Filename ) {
    HRESULT _hr = raw_SaveAsPRC(Filename);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4367)
inline IDispatchPtr TGFramework::_ISolidEdgeDocumentAuto::GetVariables ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Variables(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4368)
inline _variant_t TGFramework::_ISolidEdgeDocumentAuto::NewWindow ( const _variant_t & NewWindowOptions, const _variant_t & Environment ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = raw_NewWindow(NewWindowOptions, Environment, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(4369)
inline IDispatchPtr TGFramework::_ISolidEdgeDocumentAuto::GetBlocks ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Blocks(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4370)
inline void TGFramework::_ISolidEdgeDocumentAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4371)
inline HRESULT TGFramework::_ISolidEdgeDocumentAuto::SaveAs3DPrint ( _bstr_t filePath, long NumberOfCoordinates, SAFEARRAY * * PositionArray, long NumberOfNormals, SAFEARRAY * * NormalArray, long NumberofColors, SAFEARRAY * * colorArray, long NumberofIndices, SAFEARRAY * * Indexarray, long NumberOfFaces, SAFEARRAY * * FaceArray ) {
    HRESULT _hr = raw_SaveAs3DPrint(filePath, NumberOfCoordinates, PositionArray, NumberOfNormals, NormalArray, NumberofColors, colorArray, NumberofIndices, Indexarray, NumberOfFaces, FaceArray);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4372)
inline HRESULT TGFramework::_ISolidEdgeDocumentAuto::SaveAsPLMXML ( _bstr_t bstrPLMXMLFilePath, _bstr_t bstrPLMXMLINIFilePath ) {
    HRESULT _hr = raw_SaveAsPLMXML(bstrPLMXMLFilePath, bstrPLMXMLINIFilePath);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4373)
inline TGFramework::PredefineRelationProducerPtr TGFramework::_ISolidEdgeDocumentAuto::GetGetPredefineRelationProducer ( ) {
    struct PredefineRelationProducer * _result = 0;
    HRESULT _hr = get_GetPredefineRelationProducer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PredefineRelationProducerPtr(_result, false);
}

#pragma implementation_key(4374)
inline HRESULT TGFramework::_ISolidEdgeDocumentAuto::TGCopyFileByPackFunc ( _bstr_t bsDest ) {
    HRESULT _hr = raw_TGCopyFileByPackFunc(bsDest);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4375)
inline HRESULT TGFramework::_ISolidEdgeDocumentAuto::TGSaveAsLib ( _bstr_t filePath ) {
    HRESULT _hr = raw_TGSaveAsLib(filePath);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4376)
inline HRESULT TGFramework::_ISolidEdgeDocumentAuto::TGSaveVaribalesInJson ( _bstr_t filePath ) {
    HRESULT _hr = raw_TGSaveVaribalesInJson(filePath);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _IPredefineRelationProducerAuto wrapper method implementations
//

#pragma implementation_key(4377)
inline int TGFramework::_IPredefineRelationProducerAuto::GroupCount ( ) {
    int _result = 0;
    HRESULT _hr = raw_GroupCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4378)
inline int TGFramework::_IPredefineRelationProducerAuto::MagneticGroupCount ( ) {
    int _result = 0;
    HRESULT _hr = raw_MagneticGroupCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4379)
inline VARIANT_BOOL TGFramework::_IPredefineRelationProducerAuto::HasAssemblyCaptureFitRelation ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_HasAssemblyCaptureFitRelation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4380)
inline unsigned int TGFramework::_IPredefineRelationProducerAuto::AddPredefineRelationGroup ( _bstr_t bstrGroupName, enum PredefineRelationGroupPolarityConstants ePolarity, VARIANT_BOOL bSetDefault ) {
    unsigned int _result = 0;
    HRESULT _hr = raw_AddPredefineRelationGroup(bstrGroupName, ePolarity, bSetDefault, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4381)
inline void TGFramework::_IPredefineRelationProducerAuto::PutDefaultGroup ( unsigned int nGroupId ) {
    HRESULT _hr = put_DefaultGroup(nGroupId);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4382)
inline unsigned int TGFramework::_IPredefineRelationProducerAuto::GetDefaultGroup ( ) {
    unsigned int _result = 0;
    HRESULT _hr = get_DefaultGroup(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4383)
inline HRESULT TGFramework::_IPredefineRelationProducerAuto::SetCaptureFitDefault ( VARIANT_BOOL bCaptureFitDefault ) {
    HRESULT _hr = raw_SetCaptureFitDefault(bCaptureFitDefault);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4384)
inline HRESULT TGFramework::_IPredefineRelationProducerAuto::ClearDefault ( ) {
    HRESULT _hr = raw_ClearDefault();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4385)
inline HRESULT TGFramework::_IPredefineRelationProducerAuto::SetGroupName ( unsigned int nGroupId, _bstr_t bstrGroupName ) {
    HRESULT _hr = raw_SetGroupName(nGroupId, bstrGroupName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4386)
inline _bstr_t TGFramework::_IPredefineRelationProducerAuto::GetGroupName ( unsigned int nGroupId ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetGroupName(nGroupId, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4387)
inline HRESULT TGFramework::_IPredefineRelationProducerAuto::SetGroupPolarity ( unsigned int nGroupId, enum PredefineRelationGroupPolarityConstants ePolarity ) {
    HRESULT _hr = raw_SetGroupPolarity(nGroupId, ePolarity);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4388)
inline enum TGFramework::PredefineRelationGroupPolarityConstants TGFramework::_IPredefineRelationProducerAuto::GetGroupPolarity ( unsigned int nGroupId ) {
    enum PredefineRelationGroupPolarityConstants _result;
    HRESULT _hr = raw_GetGroupPolarity(nGroupId, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4389)
inline int TGFramework::_IPredefineRelationProducerAuto::GetRelationCount ( unsigned int nGroupId ) {
    int _result = 0;
    HRESULT _hr = raw_GetRelationCount(nGroupId, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4390)
inline int TGFramework::_IPredefineRelationProducerAuto::GetCaptureFitRelationCount ( ) {
    int _result = 0;
    HRESULT _hr = raw_GetCaptureFitRelationCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4391)
inline HRESULT TGFramework::_IPredefineRelationProducerAuto::DeleteGroups ( int numDeleteGroups, unsigned int * pnDeleteGroupIds ) {
    HRESULT _hr = raw_DeleteGroups(numDeleteGroups, pnDeleteGroupIds);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4392)
inline HRESULT TGFramework::_IPredefineRelationProducerAuto::GetRelationData ( unsigned int nGroupId, int nRelationIndex, IDispatch * * ppElement, enum CapturedRelationshipTypeConstants * pRelationType, enum CapturedRelationshipOffsetTypeConstants * pOffsetType, double * pdOffsetOne, double * pdOffsetTwo ) {
    HRESULT _hr = raw_GetRelationData(nGroupId, nRelationIndex, ppElement, pRelationType, pOffsetType, pdOffsetOne, pdOffsetTwo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4393)
inline HRESULT TGFramework::_IPredefineRelationProducerAuto::SetRelationData ( unsigned int nGroupId, int nRelationIndex, IDispatch * pElement, enum CapturedRelationshipTypeConstants relationType, enum CapturedRelationshipOffsetTypeConstants offsetType, double dOffsetOne, double dOffsetTwo ) {
    HRESULT _hr = raw_SetRelationData(nGroupId, nRelationIndex, pElement, relationType, offsetType, dOffsetOne, dOffsetTwo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4394)
inline HRESULT TGFramework::_IPredefineRelationProducerAuto::DeleteRelation ( unsigned int nGroupId, int nRelationIndex ) {
    HRESULT _hr = raw_DeleteRelation(nGroupId, nRelationIndex);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4395)
inline HRESULT TGFramework::_IPredefineRelationProducerAuto::AddMateRelation ( unsigned int nGroupId, IDispatch * pElement, enum CapturedRelationshipOffsetTypeConstants * pOffsetType, double * pdOffsetOne, double * pdOffsetTwo ) {
    HRESULT _hr = raw_AddMateRelation(nGroupId, pElement, pOffsetType, pdOffsetOne, pdOffsetTwo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4396)
inline HRESULT TGFramework::_IPredefineRelationProducerAuto::AddPlanarRelation ( unsigned int nGroupId, IDispatch * pElement, enum CapturedRelationshipOffsetTypeConstants * pOffsetType, double * pdOffsetOne, double * pdOffsetTwo ) {
    HRESULT _hr = raw_AddPlanarRelation(nGroupId, pElement, pOffsetType, pdOffsetOne, pdOffsetTwo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4397)
inline HRESULT TGFramework::_IPredefineRelationProducerAuto::AddAxialRelation ( unsigned int nGroupId, IDispatch * pElement ) {
    HRESULT _hr = raw_AddAxialRelation(nGroupId, pElement);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4398)
inline HRESULT TGFramework::_IPredefineRelationProducerAuto::AddTangentRelation ( unsigned int nGroupId, IDispatch * pElement, enum CapturedRelationshipOffsetTypeConstants * pOffsetType, double * pdOffsetOne, double * pdOffsetTwo ) {
    HRESULT _hr = raw_AddTangentRelation(nGroupId, pElement, pOffsetType, pdOffsetOne, pdOffsetTwo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4399)
inline HRESULT TGFramework::_IPredefineRelationProducerAuto::AddConnectRelation ( unsigned int nGroupId, IDispatch * pElement, enum CapturedRelationshipOffsetTypeConstants * pOffsetType, double * pdOffsetOne, double * pdOffsetTwo ) {
    HRESULT _hr = raw_AddConnectRelation(nGroupId, pElement, pOffsetType, pdOffsetOne, pdOffsetTwo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4400)
inline HRESULT TGFramework::_IPredefineRelationProducerAuto::AddParallelRelation ( unsigned int nGroupId, IDispatch * pElement, enum CapturedRelationshipOffsetTypeConstants * pOffsetType, double * pdOffsetOne, double * pdOffsetTwo ) {
    HRESULT _hr = raw_AddParallelRelation(nGroupId, pElement, pOffsetType, pdOffsetOne, pdOffsetTwo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4401)
inline IDispatchPtr TGFramework::_IPredefineRelationProducerAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// dispinterface CPDInitializerInsightXT wrapper method implementations
//

#pragma implementation_key(4402)
inline HRESULT TGFramework::CPDInitializerInsightXT::GetDocuments ( SAFEARRAY * * psaDocs ) {
    return _com_dispatch_method(this, 0x60010000, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x600c", psaDocs);
}

#pragma implementation_key(4403)
inline HRESULT TGFramework::CPDInitializerInsightXT::GetPropertiesInfo ( _bstr_t bstrDocName, VARIANT * pvPropInfo ) {
    return _com_dispatch_method(this, 0x60010001, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x400c", (BSTR)bstrDocName, pvPropInfo);
}

#pragma implementation_key(4404)
inline HRESULT TGFramework::CPDInitializerInsightXT::SetPropertiesInfo ( _bstr_t bstrDocName, const _variant_t & vPropInfo ) {
    return _com_dispatch_method(this, 0x60010002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x000c", (BSTR)bstrDocName, &vPropInfo);
}

#pragma implementation_key(4405)
inline HRESULT TGFramework::CPDInitializerInsightXT::GetItemTypes ( _bstr_t bstrDocName, SAFEARRAY * * psaItemTypes ) {
    return _com_dispatch_method(this, 0x60010003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x600c", (BSTR)bstrDocName, psaItemTypes);
}

#pragma implementation_key(4406)
inline HRESULT TGFramework::CPDInitializerInsightXT::GetMappedPropertiesInfo ( _bstr_t bstrDocName, _bstr_t bstrItemType, VARIANT * pvPropInfo ) {
    return _com_dispatch_method(this, 0x60010004, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x400c", (BSTR)bstrDocName, (BSTR)bstrItemType, pvPropInfo);
}

#pragma implementation_key(4407)
inline HRESULT TGFramework::CPDInitializerInsightXT::SetControlsBehavior ( VARIANT_BOOL vbDisableAssignAllButtonAndMenu, VARIANT_BOOL vbDisableRestoreButton, VARIANT_BOOL vbDisableItemIDCell, VARIANT_BOOL vbDisableItemRevisionCell, VARIANT_BOOL vbDisableItemNameCell, VARIANT_BOOL vbDisableDatasetNameCell ) {
    return _com_dispatch_method(this, 0x60010005, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b\x000b\x000b\x000b\x000b\x000b", vbDisableAssignAllButtonAndMenu, vbDisableRestoreButton, vbDisableItemIDCell, vbDisableItemRevisionCell, vbDisableItemNameCell, vbDisableDatasetNameCell);
}

//
// interface _ICPDInitializerInsightXTAuto wrapper method implementations
//

#pragma implementation_key(4408)
inline HRESULT TGFramework::_ICPDInitializerInsightXTAuto::GetDocuments ( SAFEARRAY * * psaDocs ) {
    HRESULT _hr = raw_GetDocuments(psaDocs);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4409)
inline HRESULT TGFramework::_ICPDInitializerInsightXTAuto::GetPropertiesInfo ( _bstr_t bstrDocName, VARIANT * pvPropInfo ) {
    HRESULT _hr = raw_GetPropertiesInfo(bstrDocName, pvPropInfo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4410)
inline HRESULT TGFramework::_ICPDInitializerInsightXTAuto::SetPropertiesInfo ( _bstr_t bstrDocName, const _variant_t & vPropInfo ) {
    HRESULT _hr = raw_SetPropertiesInfo(bstrDocName, vPropInfo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4411)
inline HRESULT TGFramework::_ICPDInitializerInsightXTAuto::GetItemTypes ( _bstr_t bstrDocName, SAFEARRAY * * psaItemTypes ) {
    HRESULT _hr = raw_GetItemTypes(bstrDocName, psaItemTypes);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4412)
inline HRESULT TGFramework::_ICPDInitializerInsightXTAuto::GetMappedPropertiesInfo ( _bstr_t bstrDocName, _bstr_t bstrItemType, VARIANT * pvPropInfo ) {
    HRESULT _hr = raw_GetMappedPropertiesInfo(bstrDocName, bstrItemType, pvPropInfo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4413)
inline HRESULT TGFramework::_ICPDInitializerInsightXTAuto::SetControlsBehavior ( VARIANT_BOOL vbDisableAssignAllButtonAndMenu, VARIANT_BOOL vbDisableRestoreButton, VARIANT_BOOL vbDisableItemIDCell, VARIANT_BOOL vbDisableItemRevisionCell, VARIANT_BOOL vbDisableItemNameCell, VARIANT_BOOL vbDisableDatasetNameCell ) {
    HRESULT _hr = raw_SetControlsBehavior(vbDisableAssignAllButtonAndMenu, vbDisableRestoreButton, vbDisableItemIDCell, vbDisableItemRevisionCell, vbDisableItemNameCell, vbDisableDatasetNameCell);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface CPDInitializer wrapper method implementations
//

#pragma implementation_key(4414)
inline HRESULT TGFramework::CPDInitializer::GetDocuments ( SAFEARRAY * * psaDocs ) {
    return _com_dispatch_method(this, 0x60010000, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x600c", psaDocs);
}

#pragma implementation_key(4415)
inline HRESULT TGFramework::CPDInitializer::GetPropertiesInfo ( _bstr_t bstrDocName, VARIANT * pvPropInfo ) {
    return _com_dispatch_method(this, 0x60010001, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x400c", (BSTR)bstrDocName, pvPropInfo);
}

#pragma implementation_key(4416)
inline HRESULT TGFramework::CPDInitializer::SetPropertiesInfo ( _bstr_t bstrDocName, const _variant_t & vPropInfo ) {
    return _com_dispatch_method(this, 0x60010002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x000c", (BSTR)bstrDocName, &vPropInfo);
}

#pragma implementation_key(4417)
inline HRESULT TGFramework::CPDInitializer::GetItemTypes ( _bstr_t bstrDocName, SAFEARRAY * * psaItemTypes ) {
    return _com_dispatch_method(this, 0x60010003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x600c", (BSTR)bstrDocName, psaItemTypes);
}

#pragma implementation_key(4418)
inline HRESULT TGFramework::CPDInitializer::GetMappedPropertiesInfo ( _bstr_t bstrDocName, _bstr_t bstrItemType, VARIANT * pvPropInfo ) {
    return _com_dispatch_method(this, 0x60010004, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x400c", (BSTR)bstrDocName, (BSTR)bstrItemType, pvPropInfo);
}

#pragma implementation_key(4419)
inline HRESULT TGFramework::CPDInitializer::SetControlsBehavior ( VARIANT_BOOL vbDisableAssignAllButtonAndMenu, VARIANT_BOOL vbDisableRestoreButton, VARIANT_BOOL vbDisableItemIDCell, VARIANT_BOOL vbDisableItemRevisionCell, VARIANT_BOOL vbDisableItemNameCell, VARIANT_BOOL vbDisableDatasetNameCell ) {
    return _com_dispatch_method(this, 0x60010005, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b\x000b\x000b\x000b\x000b\x000b", vbDisableAssignAllButtonAndMenu, vbDisableRestoreButton, vbDisableItemIDCell, vbDisableItemRevisionCell, vbDisableItemNameCell, vbDisableDatasetNameCell);
}

//
// interface _ICPDInitializerAuto wrapper method implementations
//

#pragma implementation_key(4420)
inline HRESULT TGFramework::_ICPDInitializerAuto::GetDocuments ( SAFEARRAY * * psaDocs ) {
    HRESULT _hr = raw_GetDocuments(psaDocs);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4421)
inline HRESULT TGFramework::_ICPDInitializerAuto::GetPropertiesInfo ( _bstr_t bstrDocName, VARIANT * pvPropInfo ) {
    HRESULT _hr = raw_GetPropertiesInfo(bstrDocName, pvPropInfo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4422)
inline HRESULT TGFramework::_ICPDInitializerAuto::SetPropertiesInfo ( _bstr_t bstrDocName, const _variant_t & vPropInfo ) {
    HRESULT _hr = raw_SetPropertiesInfo(bstrDocName, vPropInfo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4423)
inline HRESULT TGFramework::_ICPDInitializerAuto::GetItemTypes ( _bstr_t bstrDocName, SAFEARRAY * * psaItemTypes ) {
    HRESULT _hr = raw_GetItemTypes(bstrDocName, psaItemTypes);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4424)
inline HRESULT TGFramework::_ICPDInitializerAuto::GetMappedPropertiesInfo ( _bstr_t bstrDocName, _bstr_t bstrItemType, VARIANT * pvPropInfo ) {
    HRESULT _hr = raw_GetMappedPropertiesInfo(bstrDocName, bstrItemType, pvPropInfo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4425)
inline HRESULT TGFramework::_ICPDInitializerAuto::SetControlsBehavior ( VARIANT_BOOL vbDisableAssignAllButtonAndMenu, VARIANT_BOOL vbDisableRestoreButton, VARIANT_BOOL vbDisableItemIDCell, VARIANT_BOOL vbDisableItemRevisionCell, VARIANT_BOOL vbDisableItemNameCell, VARIANT_BOOL vbDisableDatasetNameCell ) {
    HRESULT _hr = raw_SetControlsBehavior(vbDisableAssignAllButtonAndMenu, vbDisableRestoreButton, vbDisableItemIDCell, vbDisableItemRevisionCell, vbDisableItemNameCell, vbDisableDatasetNameCell);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface SectionView wrapper method implementations
//

#pragma implementation_key(4426)
inline void TGFramework::SectionView::PutCaption ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4427)
inline _bstr_t TGFramework::SectionView::GetCaption ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4428)
inline HRESULT TGFramework::SectionView::Show ( VARIANT_BOOL bShowSectionView ) {
    return _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", bShowSectionView);
}

#pragma implementation_key(4429)
inline HRESULT TGFramework::SectionView::Delete ( ) {
    return _com_dispatch_method(this, 0x18, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4430)
inline void TGFramework::SectionView::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x98, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4431)
inline _bstr_t TGFramework::SectionView::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x98, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4432)
inline void TGFramework::SectionView::PutStyle ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x99, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4433)
inline _bstr_t TGFramework::SectionView::GetStyle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x99, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4434)
inline void TGFramework::SectionView::PutCuttingPlaneColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x9a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4435)
inline long TGFramework::SectionView::GetCuttingPlaneColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4436)
inline void TGFramework::SectionView::PutCuttingPlaneEdgeColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x9b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4437)
inline long TGFramework::SectionView::GetCuttingPlaneEdgeColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4438)
inline void TGFramework::SectionView::PutOpacity ( double _arg1 ) {
    _com_dispatch_method(this, 0x9c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4439)
inline double TGFramework::SectionView::GetOpacity ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x9c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4440)
inline void TGFramework::SectionView::PutThroughAllExtent ( double _arg1 ) {
    _com_dispatch_method(this, 0x9d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4441)
inline double TGFramework::SectionView::GetThroughAllExtent ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x9d, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4442)
inline void TGFramework::SectionView::PutCutHardware ( long _arg1 ) {
    _com_dispatch_method(this, 0x9e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4443)
inline long TGFramework::SectionView::GetCutHardware ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4444)
inline void TGFramework::SectionView::PutSectionDisplayMode ( enum PMISectionDisplayModeConstants _arg1 ) {
    _com_dispatch_method(this, 0x9f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4445)
inline enum TGFramework::PMISectionDisplayModeConstants TGFramework::SectionView::GetSectionDisplayMode ( ) {
    enum PMISectionDisplayModeConstants _result;
    _com_dispatch_method(this, 0x9f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4446)
inline void TGFramework::SectionView::PutShowCuttingPlane ( long _arg1 ) {
    _com_dispatch_method(this, 0xa0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4447)
inline long TGFramework::SectionView::GetShowCuttingPlane ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa0, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4448)
inline HRESULT TGFramework::SectionView::AddToModelView ( IUnknown * ModelView ) {
    return _com_dispatch_method(this, 0xa1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000d", ModelView);
}

#pragma implementation_key(4449)
inline HRESULT TGFramework::SectionView::RemoveFromModelView ( IUnknown * ModelView ) {
    return _com_dispatch_method(this, 0xa2, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000d", ModelView);
}

#pragma implementation_key(4450)
inline HRESULT TGFramework::SectionView::EditByPlane ( long nNumPlanes, SAFEARRAY * * pPlanes, SAFEARRAY * * PlaneCutDirections, enum SectionViewPlaneExtentTypeConstant eExtentType, long bCutHardwareParts ) {
    return _com_dispatch_method(this, 0xa3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009\x6003\x0003\x0003", nNumPlanes, pPlanes, PlaneCutDirections, eExtentType, bCutHardwareParts);
}

#pragma implementation_key(4451)
inline void TGFramework::SectionView::PutPlaneExtentType ( enum SectionViewPlaneExtentTypeConstant _arg1 ) {
    _com_dispatch_method(this, 0xa4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4452)
inline enum TGFramework::SectionViewPlaneExtentTypeConstant TGFramework::SectionView::GetPlaneExtentType ( ) {
    enum SectionViewPlaneExtentTypeConstant _result;
    _com_dispatch_method(this, 0xa4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4453)
inline IDispatchPtr TGFramework::SectionView::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4454)
inline VARIANT_BOOL TGFramework::SectionView::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(4455)
inline HRESULT TGFramework::SectionView::EditByPlaneEx ( long nNumPlanes, SAFEARRAY * * pPlanes, SAFEARRAY * * PlaneCutDirections, SAFEARRAY * * SectionViewPlaneTypes, enum SectionViewPlaneExtentTypeConstant eExtentType, VARIANT_BOOL bCutHardwareParts ) {
    return _com_dispatch_method(this, 0xa5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009\x6003\x6003\x0003\x000b", nNumPlanes, pPlanes, PlaneCutDirections, SectionViewPlaneTypes, eExtentType, bCutHardwareParts);
}

#pragma implementation_key(4456)
inline long TGFramework::SectionView::GetIsCutByPlane ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa6, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface SectionViews wrapper method implementations
//

#pragma implementation_key(4457)
inline int TGFramework::SectionViews::GetCount ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4458)
inline IDispatchPtr TGFramework::SectionViews::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4459)
inline IDispatchPtr TGFramework::SectionViews::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4460)
inline IDispatchPtr TGFramework::SectionViews::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4461)
inline IDispatchPtr TGFramework::SectionViews::Add ( long nNumProfiles, SAFEARRAY * * pProfiles, _bstr_t szCaption, double dExtent, enum SectionViewExtentSide eExtentSide, enum SectionViewProfileSide eProfileSide, long bCutHardwareParts ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x600d\x0008\x0005\x0003\x0003\x0003", nNumProfiles, pProfiles, (BSTR)szCaption, dExtent, eExtentSide, eProfileSide, bCutHardwareParts);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4462)
inline IDispatchPtr TGFramework::SectionViews::AddByPlane ( long nNumPlanes, SAFEARRAY * * pPlanes, SAFEARRAY * * PlaneCutDirections, enum SectionViewPlaneExtentTypeConstant eExtentType, _bstr_t szCaption, long bCutHardwareParts ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x6009\x6003\x0003\x0008\x0003", nNumPlanes, pPlanes, PlaneCutDirections, eExtentType, (BSTR)szCaption, bCutHardwareParts);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4463)
inline IDispatchPtr TGFramework::SectionViews::AddByPlaneEx ( long nNumPlanes, SAFEARRAY * * pPlanes, SAFEARRAY * * PlaneCutDirections, SAFEARRAY * * SectionViewPlaneTypes, enum SectionViewPlaneExtentTypeConstant eExtentType, _bstr_t szCaption, VARIANT_BOOL bCutHardwareParts ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x6009\x6003\x6003\x0003\x0008\x000b", nNumPlanes, pPlanes, PlaneCutDirections, SectionViewPlaneTypes, eExtentType, (BSTR)szCaption, bCutHardwareParts);
    return IDispatchPtr(_result, false);
}

//
// dispinterface InterDocumentUpdate wrapper method implementations
//

#pragma implementation_key(4464)
inline HRESULT TGFramework::InterDocumentUpdate::GetFilesToUpdate ( SAFEARRAY * * FilesToUpdate, const _variant_t & FutureUse ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6008\x080c", FilesToUpdate, &FutureUse);
}

#pragma implementation_key(4465)
inline HRESULT TGFramework::InterDocumentUpdate::LoadFilesToUpdate ( const _variant_t & FutureUse ) {
    return _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &FutureUse);
}

#pragma implementation_key(4466)
inline HRESULT TGFramework::InterDocumentUpdate::Update ( enum InterDocumentUpdateMode UpdateMode, const _variant_t & FutureUse ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x080c", UpdateMode, &FutureUse);
}

#pragma implementation_key(4467)
inline HRESULT TGFramework::InterDocumentUpdate::GetFilesToSave ( SAFEARRAY * * FilesToSave, const _variant_t & FutureUse ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6008\x080c", FilesToSave, &FutureUse);
}

#pragma implementation_key(4468)
inline HRESULT TGFramework::InterDocumentUpdate::SaveChangedFiles ( SAFEARRAY * * FilesNotSaved, const _variant_t & FutureUse ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6008\x080c", FilesNotSaved, &FutureUse);
}

//
// interface _IInterDocumentUpdateAuto wrapper method implementations
//

#pragma implementation_key(4469)
inline HRESULT TGFramework::_IInterDocumentUpdateAuto::GetFilesToUpdate ( SAFEARRAY * * FilesToUpdate, const _variant_t & FutureUse ) {
    HRESULT _hr = raw_GetFilesToUpdate(FilesToUpdate, FutureUse);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4470)
inline HRESULT TGFramework::_IInterDocumentUpdateAuto::LoadFilesToUpdate ( const _variant_t & FutureUse ) {
    HRESULT _hr = raw_LoadFilesToUpdate(FutureUse);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4471)
inline HRESULT TGFramework::_IInterDocumentUpdateAuto::Update ( enum InterDocumentUpdateMode UpdateMode, const _variant_t & FutureUse ) {
    HRESULT _hr = raw_Update(UpdateMode, FutureUse);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4472)
inline HRESULT TGFramework::_IInterDocumentUpdateAuto::GetFilesToSave ( SAFEARRAY * * FilesToSave, const _variant_t & FutureUse ) {
    HRESULT _hr = raw_GetFilesToSave(FilesToSave, FutureUse);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4473)
inline HRESULT TGFramework::_IInterDocumentUpdateAuto::SaveChangedFiles ( SAFEARRAY * * FilesNotSaved, const _variant_t & FutureUse ) {
    HRESULT _hr = raw_SaveChangedFiles(FilesNotSaved, FutureUse);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface SteeringWheel wrapper method implementations
//

#pragma implementation_key(4474)
inline HRESULT TGFramework::SteeringWheel::GetOrigin ( double * OriginX, double * OriginY, double * OriginZ ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005", OriginX, OriginY, OriginZ);
}

#pragma implementation_key(4475)
inline HRESULT TGFramework::SteeringWheel::SetOrigin ( double OriginX, double OriginY, double OriginZ ) {
    return _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", OriginX, OriginY, OriginZ);
}

#pragma implementation_key(4476)
inline HRESULT TGFramework::SteeringWheel::GetOriginAndAxis ( enum seSteeringWheelConstants AxisType, double * OriginX, double * OriginY, double * OriginZ, double * AxisXComponent, double * AxisYComponent, double * AxisZComponent ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4005\x4005\x4005", AxisType, OriginX, OriginY, OriginZ, AxisXComponent, AxisYComponent, AxisZComponent);
}

#pragma implementation_key(4477)
inline HRESULT TGFramework::SteeringWheel::Align ( enum seSteeringWheelConstants AxisType, double AxisXComponent, double AxisYComponent, double AxisZComponent ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", AxisType, AxisXComponent, AxisYComponent, AxisZComponent);
}

#pragma implementation_key(4478)
inline HRESULT TGFramework::SteeringWheel::AlignAlongLinerElement ( enum seSteeringWheelConstants AxisType, IDispatch * LinearElementToAlignWith ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0009", AxisType, LinearElementToAlignWith);
}

//
// interface _ISteeringWheelAuto wrapper method implementations
//

#pragma implementation_key(4479)
inline HRESULT TGFramework::_ISteeringWheelAuto::GetOrigin ( double * OriginX, double * OriginY, double * OriginZ ) {
    HRESULT _hr = raw_GetOrigin(OriginX, OriginY, OriginZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4480)
inline HRESULT TGFramework::_ISteeringWheelAuto::SetOrigin ( double OriginX, double OriginY, double OriginZ ) {
    HRESULT _hr = raw_SetOrigin(OriginX, OriginY, OriginZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4481)
inline HRESULT TGFramework::_ISteeringWheelAuto::GetOriginAndAxis ( enum seSteeringWheelConstants AxisType, double * OriginX, double * OriginY, double * OriginZ, double * AxisXComponent, double * AxisYComponent, double * AxisZComponent ) {
    HRESULT _hr = raw_GetOriginAndAxis(AxisType, OriginX, OriginY, OriginZ, AxisXComponent, AxisYComponent, AxisZComponent);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4482)
inline HRESULT TGFramework::_ISteeringWheelAuto::Align ( enum seSteeringWheelConstants AxisType, double AxisXComponent, double AxisYComponent, double AxisZComponent ) {
    HRESULT _hr = raw_Align(AxisType, AxisXComponent, AxisYComponent, AxisZComponent);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4483)
inline HRESULT TGFramework::_ISteeringWheelAuto::AlignAlongLinerElement ( enum seSteeringWheelConstants AxisType, IDispatch * LinearElementToAlignWith ) {
    HRESULT _hr = raw_AlignAlongLinerElement(AxisType, LinearElementToAlignWith);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface CPDInitializerBiDM wrapper method implementations
//

#pragma implementation_key(4484)
inline HRESULT TGFramework::CPDInitializerBiDM::GetDocuments ( SAFEARRAY * * psaDocs ) {
    return _com_dispatch_method(this, 0x60010000, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x600c", psaDocs);
}

#pragma implementation_key(4485)
inline HRESULT TGFramework::CPDInitializerBiDM::GetPropertiesInfo ( _bstr_t bstrDocName, VARIANT * pvPropInfo ) {
    return _com_dispatch_method(this, 0x60010001, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x400c", (BSTR)bstrDocName, pvPropInfo);
}

#pragma implementation_key(4486)
inline HRESULT TGFramework::CPDInitializerBiDM::SetPropertiesInfo ( _bstr_t bstrDocName, const _variant_t & vPropInfo ) {
    return _com_dispatch_method(this, 0x60010002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x000c", (BSTR)bstrDocName, &vPropInfo);
}

#pragma implementation_key(4487)
inline HRESULT TGFramework::CPDInitializerBiDM::SetControlsBehavior ( VARIANT_BOOL vbDisableAssignAllButtonAndMenu, VARIANT_BOOL vbDisableDocumentNumberCell, VARIANT_BOOL vbDisableRevisionIDCell ) {
    return _com_dispatch_method(this, 0x60010003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b\x000b\x000b", vbDisableAssignAllButtonAndMenu, vbDisableDocumentNumberCell, vbDisableRevisionIDCell);
}

// Created by Microsoft (R) C/C++ Compiler Version 14.32.31332.0 (61642b20).
//
// D:\visualstudio\project\TGCAD\TGCAD\x64\Debug\tgfwksupp.tli
//
// Wrapper implementations for type library tgfwksupp.tlb
// compiler-generated file - DO NOT EDIT!


//
// interface _IRelation2dAuto wrapper method implementations
//

#pragma implementation_key(1)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IRelation2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2)
inline long TGFrameworkSupport::_IRelation2dAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3)
inline _bstr_t TGFrameworkSupport::_IRelation2dAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4)
inline IDispatchPtr TGFrameworkSupport::_IRelation2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5)
inline long TGFrameworkSupport::_IRelation2dAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6)
inline long TGFrameworkSupport::_IRelation2dAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7)
inline _bstr_t TGFrameworkSupport::_IRelation2dAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8)
inline IDispatchPtr TGFrameworkSupport::_IRelation2dAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(9)
inline HRESULT TGFrameworkSupport::_IRelation2dAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(10)
inline HRESULT TGFrameworkSupport::_IRelation2dAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(11)
inline HRESULT TGFrameworkSupport::_IRelation2dAuto::GetRelatedObjectCount ( long * Count ) {
    HRESULT _hr = raw_GetRelatedObjectCount(Count);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(12)
inline HRESULT TGFrameworkSupport::_IRelation2dAuto::GetRelatedObject ( long Index, IDispatch * * GraphicObject, long * Keypoint_Index ) {
    HRESULT _hr = raw_GetRelatedObject(Index, GraphicObject, Keypoint_Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(13)
inline IDispatchPtr TGFrameworkSupport::_IRelation2dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(14)
inline VARIANT_BOOL TGFrameworkSupport::_IRelation2dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface Relation2d wrapper method implementations
//

#pragma implementation_key(15)
inline TGFramework::ApplicationPtr TGFrameworkSupport::Relation2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x4065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(16)
inline long TGFrameworkSupport::Relation2d::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4066, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(17)
inline _bstr_t TGFrameworkSupport::Relation2d::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4067, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(18)
inline IDispatchPtr TGFrameworkSupport::Relation2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4068, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(19)
inline long TGFrameworkSupport::Relation2d::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4069, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(20)
inline long TGFrameworkSupport::Relation2d::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x406b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(21)
inline _bstr_t TGFrameworkSupport::Relation2d::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x406c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(22)
inline IDispatchPtr TGFrameworkSupport::Relation2d::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x406d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(23)
inline HRESULT TGFrameworkSupport::Relation2d::Delete ( ) {
    return _com_dispatch_method(this, 0x6001400c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(24)
inline HRESULT TGFrameworkSupport::Relation2d::Select ( ) {
    return _com_dispatch_method(this, 0x60014018, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(25)
inline HRESULT TGFrameworkSupport::Relation2d::GetRelatedObjectCount ( long * Count ) {
    return _com_dispatch_method(this, 0x2c0, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003", Count);
}

#pragma implementation_key(26)
inline HRESULT TGFrameworkSupport::Relation2d::GetRelatedObject ( long Index, IDispatch * * GraphicObject, long * Keypoint_Index ) {
    return _com_dispatch_method(this, 0x2bf, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4009\x4003", Index, GraphicObject, Keypoint_Index);
}

#pragma implementation_key(27)
inline IDispatchPtr TGFrameworkSupport::Relation2d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(28)
inline VARIANT_BOOL TGFrameworkSupport::Relation2d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _IRelations2dAuto wrapper method implementations
//

#pragma implementation_key(29)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::_IRelations2dAuto::Item ( const _variant_t & Index ) {
    struct Relation2d * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(30)
inline IUnknownPtr TGFrameworkSupport::_IRelations2dAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(31)
inline long TGFrameworkSupport::_IRelations2dAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(32)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::_IRelations2dAuto::AddHorizontalAlign ( IDispatch * Object1, long Index1, IDispatch * Object2, long Index2, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    HRESULT _hr = raw_AddHorizontalAlign(Object1, Index1, Object2, Index2, guaranteed_ok, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(33)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::_IRelations2dAuto::AddVerticalAlign ( IDispatch * Object1, long Index1, IDispatch * Object2, long Index2, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    HRESULT _hr = raw_AddVerticalAlign(Object1, Index1, Object2, Index2, guaranteed_ok, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(34)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::_IRelations2dAuto::AddConcentric ( IDispatch * Object1, IDispatch * Object2, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    HRESULT _hr = raw_AddConcentric(Object1, Object2, guaranteed_ok, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(35)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::_IRelations2dAuto::AddFix ( IDispatch * Object, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    HRESULT _hr = raw_AddFix(Object, guaranteed_ok, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(36)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::_IRelations2dAuto::AddKeypointFix ( IDispatch * Object, long Index, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    HRESULT _hr = raw_AddKeypointFix(Object, Index, guaranteed_ok, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(37)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::_IRelations2dAuto::AddHorizontal ( IDispatch * Object, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    HRESULT _hr = raw_AddHorizontal(Object, guaranteed_ok, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(38)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::_IRelations2dAuto::AddVertical ( IDispatch * Object, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    HRESULT _hr = raw_AddVertical(Object, guaranteed_ok, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(39)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::_IRelations2dAuto::AddParallel ( IDispatch * Object1, IDispatch * Object2, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    HRESULT _hr = raw_AddParallel(Object1, Object2, guaranteed_ok, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(40)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::_IRelations2dAuto::AddPerpendicular ( IDispatch * Object1, IDispatch * Object2, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    HRESULT _hr = raw_AddPerpendicular(Object1, Object2, guaranteed_ok, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(41)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::_IRelations2dAuto::AddTangent ( IDispatch * Object1, IDispatch * Object2, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    HRESULT _hr = raw_AddTangent(Object1, Object2, guaranteed_ok, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(42)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::_IRelations2dAuto::AddEqualDirection ( IDispatch * Object1, long Index1, IDispatch * Object2, long Index2, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    HRESULT _hr = raw_AddEqualDirection(Object1, Index1, Object2, Index2, guaranteed_ok, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(43)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::_IRelations2dAuto::AddTangentEqualCurvature ( IDispatch * Object1, long Index1, IDispatch * Object2, long Index2, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    HRESULT _hr = raw_AddTangentEqualCurvature(Object1, Index1, Object2, Index2, guaranteed_ok, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(44)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::_IRelations2dAuto::AddEqualDirectionEqualCurvature ( IDispatch * Object1, long Index1, IDispatch * Object2, long Index2, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    HRESULT _hr = raw_AddEqualDirectionEqualCurvature(Object1, Index1, Object2, Index2, guaranteed_ok, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(45)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::_IRelations2dAuto::AddTangentBetweenCompoundCurves ( long NumberElements1, SAFEARRAY * * Elements1, long NumberElements2, SAFEARRAY * * Elements2, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    HRESULT _hr = raw_AddTangentBetweenCompoundCurves(NumberElements1, Elements1, NumberElements2, Elements2, guaranteed_ok, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(46)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::_IRelations2dAuto::AddIntersection ( IDispatch * Object1, long Index, IDispatch * Object2, IDispatch * Object3, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    HRESULT _hr = raw_AddIntersection(Object1, Index, Object2, Object3, guaranteed_ok, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(47)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::_IRelations2dAuto::AddPointOn ( IDispatch * Object1, long Index, IDispatch * Object2, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    HRESULT _hr = raw_AddPointOn(Object1, Index, Object2, guaranteed_ok, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(48)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::_IRelations2dAuto::AddPointOnCompoundCurve ( IDispatch * Object1, long Index, long NumberElements, SAFEARRAY * * Elements, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    HRESULT _hr = raw_AddPointOnCompoundCurve(Object1, Index, NumberElements, Elements, guaranteed_ok, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(49)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::_IRelations2dAuto::AddKeypoint ( IDispatch * Object1, long Index1, IDispatch * Object2, long Index2, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    HRESULT _hr = raw_AddKeypoint(Object1, Index1, Object2, Index2, guaranteed_ok, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(50)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::_IRelations2dAuto::AddSymmetric ( IDispatch * pLine, IDispatch * Object2, IDispatch * Object3, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    HRESULT _hr = raw_AddSymmetric(pLine, Object2, Object3, guaranteed_ok, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(51)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::_IRelations2dAuto::AddEqual ( IDispatch * Object1, IDispatch * Object2, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    HRESULT _hr = raw_AddEqual(Object1, Object2, guaranteed_ok, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(52)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::_IRelations2dAuto::AddSet ( long NumberElements, SAFEARRAY * * Elements ) {
    struct Relation2d * _result = 0;
    HRESULT _hr = raw_AddSet(NumberElements, Elements, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(53)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::_IRelations2dAuto::AddColinear ( IDispatch * Object1, IDispatch * Object2, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    HRESULT _hr = raw_AddColinear(Object1, Object2, guaranteed_ok, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(54)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::_IRelations2dAuto::AddFillet ( IDispatch * Object1, long Index1, IDispatch * Arc, long arc_index, IDispatch * Object2, long Index2, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    HRESULT _hr = raw_AddFillet(Object1, Index1, Arc, arc_index, Object2, Index2, guaranteed_ok, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(55)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::_IRelations2dAuto::AddLink ( IDispatch * Object1, IDispatch * Object2, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    HRESULT _hr = raw_AddLink(Object1, Object2, guaranteed_ok, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(56)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::_IRelations2dAuto::AddChamfer ( IDispatch * Object1, long Index1, IDispatch * Line, long line_index, IDispatch * Object2, long Index2, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    HRESULT _hr = raw_AddChamfer(Object1, Index1, Line, line_index, Object2, Index2, guaranteed_ok, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(57)
inline HRESULT TGFrameworkSupport::_IRelations2dAuto::AddAutoConstraints ( double dist_tol, double angle_tol, long NumElements, SAFEARRAY * * Elements, long NumCnstrTypes, SAFEARRAY * * CnstrTypes, long * NumCnstrs, SAFEARRAY * * Cnstrs, const _variant_t & varXOriginUnk, const _variant_t & varYOriginUnk, const _variant_t & Xdim_pos_x, const _variant_t & Xdim_pos_y, const _variant_t & Ydim_pos_x, const _variant_t & Ydim_pos_y, const _variant_t & DimPlacementOptions, const _variant_t & LinearDimOptions, VARIANT_BOOL PlaceRadiusDimOnCircle, VARIANT_BOOL PlaceRadiusDimOnArc, VARIANT_BOOL PlaceDistanceDimFromCircleCenter ) {
    HRESULT _hr = raw_AddAutoConstraints(dist_tol, angle_tol, NumElements, Elements, NumCnstrTypes, CnstrTypes, NumCnstrs, Cnstrs, varXOriginUnk, varYOriginUnk, Xdim_pos_x, Xdim_pos_y, Ydim_pos_x, Ydim_pos_y, DimPlacementOptions, LinearDimOptions, PlaceRadiusDimOnCircle, PlaceRadiusDimOnArc, PlaceDistanceDimFromCircleCenter);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _IBackDropAuto wrapper method implementations
//

#pragma implementation_key(58)
inline long TGFrameworkSupport::_IBackDropAuto::GetMarginColor ( ) {
    long _result = 0;
    HRESULT _hr = get_MarginColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(59)
inline void TGFrameworkSupport::_IBackDropAuto::PutMarginColor ( long Color ) {
    HRESULT _hr = put_MarginColor(Color);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(60)
inline void TGFrameworkSupport::_IBackDropAuto::PutMarginDisplay ( VARIANT_BOOL Visible ) {
    HRESULT _hr = put_MarginDisplay(Visible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(61)
inline VARIANT_BOOL TGFrameworkSupport::_IBackDropAuto::GetMarginDisplay ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MarginDisplay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(62)
inline long TGFrameworkSupport::_IBackDropAuto::GetGridColor ( ) {
    long _result = 0;
    HRESULT _hr = get_GridColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(63)
inline void TGFrameworkSupport::_IBackDropAuto::PutGridColor ( long Color ) {
    HRESULT _hr = put_GridColor(Color);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(64)
inline enum TGFrameworkSupport::GridTypeConstants TGFrameworkSupport::_IBackDropAuto::GetGridType ( ) {
    enum GridTypeConstants _result;
    HRESULT _hr = get_GridType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(65)
inline void TGFrameworkSupport::_IBackDropAuto::PutGridType ( enum GridTypeConstants Type ) {
    HRESULT _hr = put_GridType(Type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(66)
inline void TGFrameworkSupport::_IBackDropAuto::PutDynamicGridSpacing ( enum DynamicGridSpacingConstants spacing ) {
    HRESULT _hr = put_DynamicGridSpacing(spacing);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(67)
inline enum TGFrameworkSupport::DynamicGridSpacingConstants TGFrameworkSupport::_IBackDropAuto::GetDynamicGridSpacing ( ) {
    enum DynamicGridSpacingConstants _result;
    HRESULT _hr = get_DynamicGridSpacing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(68)
inline double TGFrameworkSupport::_IBackDropAuto::GetStaticGridSpacing ( ) {
    double _result = 0;
    HRESULT _hr = get_StaticGridSpacing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(69)
inline void TGFrameworkSupport::_IBackDropAuto::PutStaticGridSpacing ( double spacing ) {
    HRESULT _hr = put_StaticGridSpacing(spacing);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(70)
inline VARIANT_BOOL TGFrameworkSupport::_IBackDropAuto::GetGridDisplay ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_GridDisplay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(71)
inline void TGFrameworkSupport::_IBackDropAuto::PutGridDisplay ( VARIANT_BOOL Visible ) {
    HRESULT _hr = put_GridDisplay(Visible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(72)
inline void TGFrameworkSupport::_IBackDropAuto::PutUseCustomSheetColor ( VARIANT_BOOL UseCustom ) {
    HRESULT _hr = put_UseCustomSheetColor(UseCustom);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(73)
inline VARIANT_BOOL TGFrameworkSupport::_IBackDropAuto::GetUseCustomSheetColor ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseCustomSheetColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(74)
inline long TGFrameworkSupport::_IBackDropAuto::GetCustomSheetColor ( ) {
    long _result = 0;
    HRESULT _hr = get_CustomSheetColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(75)
inline void TGFrameworkSupport::_IBackDropAuto::PutCustomSheetColor ( long Color ) {
    HRESULT _hr = put_CustomSheetColor(Color);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(76)
inline IDispatchPtr TGFrameworkSupport::_IBackDropAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(77)
inline VARIANT_BOOL TGFrameworkSupport::_IBackDropAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface _IDrawingObjectsAuto wrapper method implementations
//

#pragma implementation_key(78)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IDrawingObjectsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(79)
inline IDispatchPtr TGFrameworkSupport::_IDrawingObjectsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(80)
inline long TGFrameworkSupport::_IDrawingObjectsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(81)
inline IDispatchPtr TGFrameworkSupport::_IDrawingObjectsAuto::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(82)
inline IUnknownPtr TGFrameworkSupport::_IDrawingObjectsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

//
// dispinterface Dimensions wrapper method implementations
//

#pragma implementation_key(83)
inline TGFramework::ApplicationPtr TGFrameworkSupport::Dimensions::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(84)
inline long TGFrameworkSupport::Dimensions::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(85)
inline IDispatchPtr TGFrameworkSupport::Dimensions::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(86)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::Dimensions::Item ( const _variant_t & Index ) {
    struct Dimension * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return DimensionPtr(_result, false);
}

#pragma implementation_key(87)
inline void TGFrameworkSupport::Dimensions::PutConstraint ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(88)
inline VARIANT_BOOL TGFrameworkSupport::Dimensions::GetConstraint ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(89)
inline void TGFrameworkSupport::Dimensions::PutAxisMode ( enum DimAxisModeConstants _arg1 ) {
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(90)
inline enum TGFrameworkSupport::DimAxisModeConstants TGFrameworkSupport::Dimensions::GetAxisMode ( ) {
    enum DimAxisModeConstants _result;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(91)
inline void TGFrameworkSupport::Dimensions::PutAngleCompliment ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(92)
inline VARIANT_BOOL TGFrameworkSupport::Dimensions::GetAngleCompliment ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(93)
inline void TGFrameworkSupport::Dimensions::PutPlane ( IDispatch * _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(94)
inline IDispatchPtr TGFrameworkSupport::Dimensions::GetPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(95)
inline void TGFrameworkSupport::Dimensions::PutStyle ( struct DimensionStyle * _arg1 ) {
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(96)
inline TGFrameworkSupport::DimensionStylePtr TGFrameworkSupport::Dimensions::GetStyle ( ) {
    struct DimensionStyle * _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DimensionStylePtr(_result, false);
}

#pragma implementation_key(97)
inline void TGFrameworkSupport::Dimensions::PutAxis ( IDispatch * _arg1 ) {
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(98)
inline IDispatchPtr TGFrameworkSupport::Dimensions::GetAxis ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(99)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::Dimensions::AddLength ( IDispatch * Object ) {
    struct Dimension * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", Object);
    return DimensionPtr(_result, false);
}

#pragma implementation_key(100)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::Dimensions::AddAngle ( IDispatch * Object ) {
    struct Dimension * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", Object);
    return DimensionPtr(_result, false);
}

#pragma implementation_key(101)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::Dimensions::AddRadius ( IDispatch * Object ) {
    struct Dimension * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", Object);
    return DimensionPtr(_result, false);
}

#pragma implementation_key(102)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::Dimensions::AddRadialDiameter ( IDispatch * Object ) {
    struct Dimension * _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", Object);
    return DimensionPtr(_result, false);
}

#pragma implementation_key(103)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::Dimensions::AddCircularDiameter ( IDispatch * Object ) {
    struct Dimension * _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", Object);
    return DimensionPtr(_result, false);
}

#pragma implementation_key(104)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::Dimensions::AddSymmetricalDiameter ( IDispatch * Object1, double x1, double y1, double z1, VARIANT_BOOL keyPoint1, IDispatch * Object2, double x2, double y2, double z2, VARIANT_BOOL keyPoint2 ) {
    struct Dimension * _result = 0;
    _com_dispatch_method(this, 0x7d, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x000b\x0009\x0005\x0005\x0005\x000b", Object1, x1, y1, z1, keyPoint1, Object2, x2, y2, z2, keyPoint2);
    return DimensionPtr(_result, false);
}

#pragma implementation_key(105)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::Dimensions::AddDistanceBetweenObjects ( IDispatch * Object1, double x1, double y1, double z1, VARIANT_BOOL keyPoint1, IDispatch * Object2, double x2, double y2, double z2, VARIANT_BOOL keyPoint2 ) {
    struct Dimension * _result = 0;
    _com_dispatch_method(this, 0x78, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x000b\x0009\x0005\x0005\x0005\x000b", Object1, x1, y1, z1, keyPoint1, Object2, x2, y2, z2, keyPoint2);
    return DimensionPtr(_result, false);
}

#pragma implementation_key(106)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::Dimensions::AddDistanceObjectToIntersection ( IDispatch * Object1, double x1, double y1, double z1, VARIANT_BOOL keyPoint1, IDispatch * Object21, double x21, double y21, double z21, IDispatch * Object22, double x22, double y22, double z22 ) {
    struct Dimension * _result = 0;
    _com_dispatch_method(this, 0x7e, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x000b\x0009\x0005\x0005\x0005\x0009\x0005\x0005\x0005", Object1, x1, y1, z1, keyPoint1, Object21, x21, y21, z21, Object22, x22, y22, z22);
    return DimensionPtr(_result, false);
}

#pragma implementation_key(107)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::Dimensions::AddDistanceIntersectionToObject ( IDispatch * Object11, double x11, double y11, double z11, IDispatch * Object12, double x12, double y12, double z12, IDispatch * Object2, double x2, double y2, double z2, VARIANT_BOOL keyPoint2 ) {
    struct Dimension * _result = 0;
    _com_dispatch_method(this, 0x7f, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x0009\x0005\x0005\x0005\x0009\x0005\x0005\x0005\x000b", Object11, x11, y11, z11, Object12, x12, y12, z12, Object2, x2, y2, z2, keyPoint2);
    return DimensionPtr(_result, false);
}

#pragma implementation_key(108)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::Dimensions::AddDistanceIntersectionToIntersection ( IDispatch * Object11, double x11, double y11, double z11, IDispatch * Object12, double x12, double y12, double z12, IDispatch * Object21, double x21, double y21, double z21, IDispatch * Object22, double x22, double y22, double z22 ) {
    struct Dimension * _result = 0;
    _com_dispatch_method(this, 0x80, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x0009\x0005\x0005\x0005\x0009\x0005\x0005\x0005\x0009\x0005\x0005\x0005", Object11, x11, y11, z11, Object12, x12, y12, z12, Object21, x21, y21, z21, Object22, x22, y22, z22);
    return DimensionPtr(_result, false);
}

#pragma implementation_key(109)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::Dimensions::AddAngleBetweenObjects ( IDispatch * ele1, double x1, double y1, double z1, VARIANT_BOOL keyPoint1, IDispatch * ele2, double x2, double y2, double z2, VARIANT_BOOL keyPoint2 ) {
    struct Dimension * _result = 0;
    _com_dispatch_method(this, 0x79, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x000b\x0009\x0005\x0005\x0005\x000b", ele1, x1, y1, z1, keyPoint1, ele2, x2, y2, z2, keyPoint2);
    return DimensionPtr(_result, false);
}

#pragma implementation_key(110)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::Dimensions::AddAngleBetween3Objects ( IDispatch * ele1, double x1, double y1, double z1, VARIANT_BOOL keyPoint1, IDispatch * ele2, double x2, double y2, double z2, VARIANT_BOOL keyPoint2, IDispatch * ele3, double x3, double y3, double z3, VARIANT_BOOL keyPoint3 ) {
    struct Dimension * _result = 0;
    _com_dispatch_method(this, 0x7a, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x000b\x0009\x0005\x0005\x0005\x000b\x0009\x0005\x0005\x0005\x000b", ele1, x1, y1, z1, keyPoint1, ele2, x2, y2, z2, keyPoint2, ele3, x3, y3, z3, keyPoint3);
    return DimensionPtr(_result, false);
}

#pragma implementation_key(111)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::Dimensions::AddCoordinateOrigin ( IDispatch * Object, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    struct Dimension * _result = 0;
    _com_dispatch_method(this, 0x7b, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x000b", Object, x, y, z, keyPoint);
    return DimensionPtr(_result, false);
}

#pragma implementation_key(112)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::Dimensions::AddCoordinate ( IDispatch * Obj1, double x1, double y1, double z1, VARIANT_BOOL keyPoint1, IDispatch * Obj2, double x2, double y2, double z2, VARIANT_BOOL keyPoint2 ) {
    struct Dimension * _result = 0;
    _com_dispatch_method(this, 0x7c, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x000b\x0009\x0005\x0005\x0005\x000b", Obj1, x1, y1, z1, keyPoint1, Obj2, x2, y2, z2, keyPoint2);
    return DimensionPtr(_result, false);
}

#pragma implementation_key(113)
inline HRESULT TGFrameworkSupport::Dimensions::ClearPlane ( ) {
    return _com_dispatch_method(this, 0x82, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(114)
inline HRESULT TGFrameworkSupport::Dimensions::ClearStyle ( ) {
    return _com_dispatch_method(this, 0x83, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(115)
inline HRESULT TGFrameworkSupport::Dimensions::ClearAxis ( ) {
    return _com_dispatch_method(this, 0x84, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(116)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::Dimensions::AddChamfer ( IDispatch * Object1, double x1, double y1, double z1, VARIANT_BOOL keyPoint1, IDispatch * Object2, double x2, double y2, double z2, VARIANT_BOOL keyPoint2, enum DimChamferModeConstants valChamferMode ) {
    struct Dimension * _result = 0;
    _com_dispatch_method(this, 0x85, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x000b\x0009\x0005\x0005\x0005\x000b\x0003", Object1, x1, y1, z1, keyPoint1, Object2, x2, y2, z2, keyPoint2, valChamferMode);
    return DimensionPtr(_result, false);
}

#pragma implementation_key(117)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::Dimensions::AddAngularCoordinateOrigin ( IDispatch * Obj1, double x1, double y1, double z1, VARIANT_BOOL keyPoint1, IDispatch * Obj2, double x2, double y2, double z2, VARIANT_BOOL keyPoint2, double x3, double y3, double z3 ) {
    struct Dimension * _result = 0;
    _com_dispatch_method(this, 0x86, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x000b\x0009\x0005\x0005\x0005\x000b\x0005\x0005\x0005", Obj1, x1, y1, z1, keyPoint1, Obj2, x2, y2, z2, keyPoint2, x3, y3, z3);
    return DimensionPtr(_result, false);
}

#pragma implementation_key(118)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::Dimensions::AddAngularCoordinate ( IDispatch * Obj1, IDispatch * Obj2, double x2, double y2, double z2, VARIANT_BOOL keyPoint2, double x3, double y3, double z3, enum DimAngularCoordnateOrientationConstants valAngCoordMode ) {
    struct Dimension * _result = 0;
    _com_dispatch_method(this, 0x87, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009\x0005\x0005\x0005\x000b\x0005\x0005\x0005\x0003", Obj1, Obj2, x2, y2, z2, keyPoint2, x3, y3, z3, valAngCoordMode);
    return DimensionPtr(_result, false);
}

#pragma implementation_key(119)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::Dimensions::AddCoordinateOriginEx ( IDispatch * Object, double x, double y, double z, VARIANT_BOOL keyPoint1, double x3, double y3, double z3 ) {
    struct Dimension * _result = 0;
    _com_dispatch_method(this, 0x88, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x000b\x0005\x0005\x0005", Object, x, y, z, keyPoint1, x3, y3, z3);
    return DimensionPtr(_result, false);
}

#pragma implementation_key(120)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::Dimensions::AddCoordinateEx ( IDispatch * Obj1, IDispatch * Obj2, double x2, double y2, double z2, VARIANT_BOOL keyPoint2, double x3, double y3, double z3 ) {
    struct Dimension * _result = 0;
    _com_dispatch_method(this, 0x89, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009\x0005\x0005\x0005\x000b\x0005\x0005\x0005", Obj1, Obj2, x2, y2, z2, keyPoint2, x3, y3, z3);
    return DimensionPtr(_result, false);
}

#pragma implementation_key(121)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::Dimensions::AddDistanceBetweenObjectsEX ( IDispatch * Object1, double x1, double y1, double z1, VARIANT_BOOL keyPoint1, VARIANT_BOOL bTangent1, IDispatch * Object2, double x2, double y2, double z2, VARIANT_BOOL keyPoint2, VARIANT_BOOL bTangent2 ) {
    struct Dimension * _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x000b\x000b\x0009\x0005\x0005\x0005\x000b\x000b", Object1, x1, y1, z1, keyPoint1, bTangent1, Object2, x2, y2, z2, keyPoint2, bTangent2);
    return DimensionPtr(_result, false);
}

#pragma implementation_key(122)
inline TGFrameworkSupport::DimInitDataPtr TGFrameworkSupport::Dimensions::GetDimInitData ( ) {
    struct DimInitData * _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DimInitDataPtr(_result, false);
}

#pragma implementation_key(123)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::Dimensions::AddDimension ( struct DimInitData * DimInitData ) {
    struct Dimension * _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", DimInitData);
    return DimensionPtr(_result, false);
}

//
// dispinterface Dimension wrapper method implementations
//

#pragma implementation_key(124)
inline void TGFrameworkSupport::Dimension::PutValue ( double _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(125)
inline double TGFrameworkSupport::Dimension::GetValue ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(126)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::Dimension::GetStyle ( ) {
    struct DimStyle * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DimStylePtr(_result, false);
}

#pragma implementation_key(127)
inline enum TGFrameworkSupport::DimTypeConstants TGFrameworkSupport::Dimension::GetDimensionType ( ) {
    enum DimTypeConstants _result;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(128)
inline void TGFrameworkSupport::Dimension::PutConstraint ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(129)
inline VARIANT_BOOL TGFrameworkSupport::Dimension::GetConstraint ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(130)
inline VARIANT_BOOL TGFrameworkSupport::Dimension::GetLeader ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(131)
inline void TGFrameworkSupport::Dimension::PutJogged ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(132)
inline VARIANT_BOOL TGFrameworkSupport::Dimension::GetJogged ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(133)
inline void TGFrameworkSupport::Dimension::PutTerminatorPosition ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(134)
inline VARIANT_BOOL TGFrameworkSupport::Dimension::GetTerminatorPosition ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(135)
inline VARIANT_BOOL TGFrameworkSupport::Dimension::GetOffsetLeader ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(136)
inline void TGFrameworkSupport::Dimension::PutBreakPosition ( enum DimBreakPositionConstants _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(137)
inline enum TGFrameworkSupport::DimBreakPositionConstants TGFrameworkSupport::Dimension::GetBreakPosition ( ) {
    enum DimBreakPositionConstants _result;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(138)
inline void TGFrameworkSupport::Dimension::PutBreakDistance ( double _arg1 ) {
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(139)
inline double TGFrameworkSupport::Dimension::GetBreakDistance ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(140)
inline void TGFrameworkSupport::Dimension::PutMeasurementAxis ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(141)
inline VARIANT_BOOL TGFrameworkSupport::Dimension::GetMeasurementAxis ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(142)
inline void TGFrameworkSupport::Dimension::PutMeasurementAxisDirection ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(143)
inline VARIANT_BOOL TGFrameworkSupport::Dimension::GetMeasurementAxisDirection ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(144)
inline void TGFrameworkSupport::Dimension::PutProjectionLineDirection ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(145)
inline VARIANT_BOOL TGFrameworkSupport::Dimension::GetProjectionLineDirection ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(146)
inline void TGFrameworkSupport::Dimension::PutProjectionArc ( enum DimProjArcConstants _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(147)
inline enum TGFrameworkSupport::DimProjArcConstants TGFrameworkSupport::Dimension::GetProjectionArc ( ) {
    enum DimProjArcConstants _result;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(148)
inline void TGFrameworkSupport::Dimension::PutOriginLineDirection ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(149)
inline VARIANT_BOOL TGFrameworkSupport::Dimension::GetOriginLineDirection ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(150)
inline void TGFrameworkSupport::Dimension::PutMeasureLineDirection ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(151)
inline VARIANT_BOOL TGFrameworkSupport::Dimension::GetMeasureLineDirection ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(152)
inline void TGFrameworkSupport::Dimension::PutAngleClockwise ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(153)
inline VARIANT_BOOL TGFrameworkSupport::Dimension::GetAngleClockwise ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(154)
inline void TGFrameworkSupport::Dimension::PutTrackDistance ( double _arg1 ) {
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(155)
inline double TGFrameworkSupport::Dimension::GetTrackDistance ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(156)
inline void TGFrameworkSupport::Dimension::PutLeaderDistance ( double _arg1 ) {
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(157)
inline double TGFrameworkSupport::Dimension::GetLeaderDistance ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(158)
inline void TGFrameworkSupport::Dimension::PutPrefixString ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(159)
inline _bstr_t TGFrameworkSupport::Dimension::GetPrefixString ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(160)
inline void TGFrameworkSupport::Dimension::PutSuffixString ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(161)
inline _bstr_t TGFrameworkSupport::Dimension::GetSuffixString ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(162)
inline void TGFrameworkSupport::Dimension::PutSubfixString ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(163)
inline _bstr_t TGFrameworkSupport::Dimension::GetSubfixString ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(164)
inline void TGFrameworkSupport::Dimension::PutSuperfixString ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(165)
inline _bstr_t TGFrameworkSupport::Dimension::GetSuperfixString ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(166)
inline void TGFrameworkSupport::Dimension::PutOverrideString ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(167)
inline _bstr_t TGFrameworkSupport::Dimension::GetOverrideString ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(168)
inline void TGFrameworkSupport::Dimension::PutPrimaryUpperTolerance ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(169)
inline _bstr_t TGFrameworkSupport::Dimension::GetPrimaryUpperTolerance ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(170)
inline void TGFrameworkSupport::Dimension::PutPrimaryLowerTolerance ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(171)
inline _bstr_t TGFrameworkSupport::Dimension::GetPrimaryLowerTolerance ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(172)
inline void TGFrameworkSupport::Dimension::PutPrimaryToleranceSymbol ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(173)
inline _bstr_t TGFrameworkSupport::Dimension::GetPrimaryToleranceSymbol ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(174)
inline void TGFrameworkSupport::Dimension::PutSecondaryUpperTolerance ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(175)
inline _bstr_t TGFrameworkSupport::Dimension::GetSecondaryUpperTolerance ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(176)
inline void TGFrameworkSupport::Dimension::PutSecondaryLowerTolerance ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x20, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(177)
inline _bstr_t TGFrameworkSupport::Dimension::GetSecondaryLowerTolerance ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x20, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(178)
inline void TGFrameworkSupport::Dimension::PutSecondaryToleranceSymbol ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x21, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(179)
inline _bstr_t TGFrameworkSupport::Dimension::GetSecondaryToleranceSymbol ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x21, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(180)
inline void TGFrameworkSupport::Dimension::PutDisplayType ( enum DimDispTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x22, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(181)
inline enum TGFrameworkSupport::DimDispTypeConstants TGFrameworkSupport::Dimension::GetDisplayType ( ) {
    enum DimDispTypeConstants _result;
    _com_dispatch_method(this, 0x22, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(182)
inline void TGFrameworkSupport::Dimension::PutTrackAngle ( double _arg1 ) {
    _com_dispatch_method(this, 0x25, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(183)
inline double TGFrameworkSupport::Dimension::GetTrackAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x25, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(184)
inline void TGFrameworkSupport::Dimension::PutTextScale ( double _arg1 ) {
    _com_dispatch_method(this, 0x3009, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(185)
inline double TGFrameworkSupport::Dimension::GetTextScale ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3009, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(186)
inline void TGFrameworkSupport::Dimension::PutAngleCompliment ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x26, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(187)
inline VARIANT_BOOL TGFrameworkSupport::Dimension::GetAngleCompliment ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x26, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(188)
inline void TGFrameworkSupport::Dimension::PutDisplayHalf ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x2c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(189)
inline VARIANT_BOOL TGFrameworkSupport::Dimension::GetDisplayHalf ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(190)
inline void TGFrameworkSupport::Dimension::PutDisplayByName ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x24, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(191)
inline VARIANT_BOOL TGFrameworkSupport::Dimension::GetDisplayByName ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x24, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(192)
inline void TGFrameworkSupport::Dimension::PutInspection ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x2d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(193)
inline VARIANT_BOOL TGFrameworkSupport::Dimension::GetInspection ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(194)
inline HRESULT TGFrameworkSupport::Dimension::SetJogPoint1Distance ( double Value ) {
    return _com_dispatch_method(this, 0x6001004a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Value);
}

#pragma implementation_key(195)
inline HRESULT TGFrameworkSupport::Dimension::GetJogPoint1Distance ( double * Value ) {
    return _com_dispatch_method(this, 0x6001004b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005", Value);
}

#pragma implementation_key(196)
inline HRESULT TGFrameworkSupport::Dimension::SetJogPoint2 ( double x, double y ) {
    return _com_dispatch_method(this, 0x6001004c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(197)
inline HRESULT TGFrameworkSupport::Dimension::GetJogPoint2 ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x6001004d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(198)
inline HRESULT TGFrameworkSupport::Dimension::SetJogPoint3Distance ( double Value ) {
    return _com_dispatch_method(this, 0x6001004e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Value);
}

#pragma implementation_key(199)
inline HRESULT TGFrameworkSupport::Dimension::GetJogPoint3Distance ( double * Value ) {
    return _com_dispatch_method(this, 0x6001004f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005", Value);
}

#pragma implementation_key(200)
inline HRESULT TGFrameworkSupport::Dimension::SetTextOffsets ( double x, double y ) {
    return _com_dispatch_method(this, 0x60010050, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(201)
inline HRESULT TGFrameworkSupport::Dimension::GetTextOffsets ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x60010051, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(202)
inline HRESULT TGFrameworkSupport::Dimension::GetRelatedCount ( long * Count ) {
    return _com_dispatch_method(this, 0x27, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003", Count);
}

#pragma implementation_key(203)
inline HRESULT TGFrameworkSupport::Dimension::GetRelated ( long Index, IDispatch * * GraphicObject, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    return _com_dispatch_method(this, 0x28, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4009\x4005\x4005\x4005\x400b", Index, GraphicObject, x, y, z, keyPoint);
}

#pragma implementation_key(204)
inline IDispatchPtr TGFrameworkSupport::Dimension::GetPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x29, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(205)
inline IDispatchPtr TGFrameworkSupport::Dimension::GetAxis ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(206)
inline void TGFrameworkSupport::Dimension::PutAxis ( IDispatch * _arg1 ) {
    _com_dispatch_method(this, 0x2a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(207)
inline void TGFrameworkSupport::Dimension::PutPrefixInside ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x2e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(208)
inline VARIANT_BOOL TGFrameworkSupport::Dimension::GetPrefixInside ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(209)
inline enum TGFrameworkSupport::DimStatusConstants TGFrameworkSupport::Dimension::GetStatusOfDimension ( ) {
    enum DimStatusConstants _result;
    _com_dispatch_method(this, 0x30, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(210)
inline enum TGFrameworkSupport::DimGroupMemberTypeConstants TGFrameworkSupport::Dimension::GetGroupMemberType ( ) {
    enum DimGroupMemberTypeConstants _result;
    _com_dispatch_method(this, 0x31, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(211)
inline TGFramework::ApplicationPtr TGFrameworkSupport::Dimension::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x4065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(212)
inline long TGFrameworkSupport::Dimension::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4066, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(213)
inline _bstr_t TGFrameworkSupport::Dimension::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4067, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(214)
inline IDispatchPtr TGFrameworkSupport::Dimension::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4068, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(215)
inline long TGFrameworkSupport::Dimension::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4069, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(216)
inline long TGFrameworkSupport::Dimension::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x406b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(217)
inline _bstr_t TGFrameworkSupport::Dimension::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x406c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(218)
inline IDispatchPtr TGFrameworkSupport::Dimension::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x406d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(219)
inline HRESULT TGFrameworkSupport::Dimension::Copy ( ) {
    return _com_dispatch_method(this, 0x6001400a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(220)
inline HRESULT TGFrameworkSupport::Dimension::Cut ( ) {
    return _com_dispatch_method(this, 0x6001400b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(221)
inline HRESULT TGFrameworkSupport::Dimension::Delete ( ) {
    return _com_dispatch_method(this, 0x6001400c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(222)
inline HRESULT TGFrameworkSupport::Dimension::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    return _com_dispatch_method(this, 0x6001400d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", XFrom, YFrom, XTo, YTo);
}

#pragma implementation_key(223)
inline HRESULT TGFrameworkSupport::Dimension::Scale ( double Factor ) {
    return _com_dispatch_method(this, 0x6001400e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Factor);
}

#pragma implementation_key(224)
inline HRESULT TGFrameworkSupport::Dimension::Rotate ( double Angle, double x, double y ) {
    return _com_dispatch_method(this, 0x6001400f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", Angle, x, y);
}

#pragma implementation_key(225)
inline HRESULT TGFrameworkSupport::Dimension::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60014011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(226)
inline IDispatchPtr TGFrameworkSupport::Dimension::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60014012, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &XDistance, &YDistance);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(227)
inline IDispatchPtr TGFrameworkSupport::Dimension::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60014013, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x080c", x1, y1, x2, y2, &BooleanCopyFlag);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(228)
inline HRESULT TGFrameworkSupport::Dimension::BringToFront ( ) {
    return _com_dispatch_method(this, 0x60014014, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(229)
inline HRESULT TGFrameworkSupport::Dimension::BringForward ( ) {
    return _com_dispatch_method(this, 0x60014015, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(230)
inline HRESULT TGFrameworkSupport::Dimension::SendToBack ( ) {
    return _com_dispatch_method(this, 0x60014016, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(231)
inline HRESULT TGFrameworkSupport::Dimension::SendBackward ( ) {
    return _com_dispatch_method(this, 0x60014017, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(232)
inline HRESULT TGFrameworkSupport::Dimension::Select ( ) {
    return _com_dispatch_method(this, 0x60014018, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(233)
inline long TGFrameworkSupport::Dimension::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(234)
inline HRESULT TGFrameworkSupport::Dimension::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x6002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(235)
inline HRESULT TGFrameworkSupport::Dimension::SetKeyPoint ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x6003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(236)
inline IDispatchPtr TGFrameworkSupport::Dimension::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(237)
inline VARIANT_BOOL TGFrameworkSupport::Dimension::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(238)
inline void TGFrameworkSupport::Dimension::PutSecondValue ( double _arg1 ) {
    _com_dispatch_method(this, 0x4454, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(239)
inline double TGFrameworkSupport::Dimension::GetSecondValue ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4454, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(240)
inline void TGFrameworkSupport::Dimension::PutOverrideChamferAngleString ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x4455, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(241)
inline _bstr_t TGFrameworkSupport::Dimension::GetOverrideChamferAngleString ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4455, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(242)
inline enum TGFrameworkSupport::DimChamferModeConstants TGFrameworkSupport::Dimension::GetChamferDimensionMode ( ) {
    enum DimChamferModeConstants _result;
    _com_dispatch_method(this, 0x4456, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(243)
inline void TGFrameworkSupport::Dimension::PutVariableTableName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x4457, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(244)
inline _bstr_t TGFrameworkSupport::Dimension::GetVariableTableName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4457, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(245)
inline void TGFrameworkSupport::Dimension::PutMeasurementAxisEx ( enum DimAxisModeConstants _arg1 ) {
    _com_dispatch_method(this, 0x4458, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(246)
inline enum TGFrameworkSupport::DimAxisModeConstants TGFrameworkSupport::Dimension::GetMeasurementAxisEx ( ) {
    enum DimAxisModeConstants _result;
    _com_dispatch_method(this, 0x4458, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(247)
inline double TGFrameworkSupport::Dimension::GetProjectionLineAngle1 ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4459, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(248)
inline double TGFrameworkSupport::Dimension::GetProjectionLineAngle2 ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x445a, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(249)
inline void TGFrameworkSupport::Dimension::PutFormula ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x445b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(250)
inline _bstr_t TGFrameworkSupport::Dimension::GetFormula ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x445b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(251)
inline TGFrameworkSupport::DisplayDataPtr TGFrameworkSupport::Dimension::GetDisplayData ( ) {
    struct DisplayData * _result = 0;
    _com_dispatch_method(this, 0x445c, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return DisplayDataPtr(_result, false);
}

#pragma implementation_key(252)
inline _bstr_t TGFrameworkSupport::Dimension::GetDisplayName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x445d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(253)
inline _bstr_t TGFrameworkSupport::Dimension::GetSystemName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x445e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(254)
inline void TGFrameworkSupport::Dimension::PutExpose ( long _arg1 ) {
    _com_dispatch_method(this, 0x445f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(255)
inline long TGFrameworkSupport::Dimension::GetExpose ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x445f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(256)
inline void TGFrameworkSupport::Dimension::PutExposeName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x4460, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(257)
inline _bstr_t TGFrameworkSupport::Dimension::GetExposeName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4460, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(258)
inline void TGFrameworkSupport::Dimension::PutSubfixString2 ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x4461, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(259)
inline _bstr_t TGFrameworkSupport::Dimension::GetSubfixString2 ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4461, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(260)
inline void TGFrameworkSupport::Dimension::PutSubfixAlignment ( enum SubfixAlignmentConstants _arg1 ) {
    _com_dispatch_method(this, 0x4462, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(261)
inline enum TGFrameworkSupport::SubfixAlignmentConstants TGFrameworkSupport::Dimension::GetSubfixAlignment ( ) {
    enum SubfixAlignmentConstants _result;
    _com_dispatch_method(this, 0x4462, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(262)
inline HRESULT TGFrameworkSupport::Dimension::AddProjectionLineBreaks ( ) {
    return _com_dispatch_method(this, 0x4463, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(263)
inline HRESULT TGFrameworkSupport::Dimension::ClearProjectionLineBreaks ( ) {
    return _com_dispatch_method(this, 0x4465, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(264)
inline long TGFrameworkSupport::Dimension::GetBreakingDimensionsCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4464, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(265)
inline void TGFrameworkSupport::Dimension::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x44c0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(266)
inline _bstr_t TGFrameworkSupport::Dimension::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x44c0, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(267)
inline double TGFrameworkSupport::Dimension::GetAbsoluteTrackDistance ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x44c1, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(268)
inline IDispatchPtr TGFrameworkSupport::Dimension::GetPMIPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x44c2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(269)
inline double TGFrameworkSupport::Dimension::GetPMITrackDistance ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x44c3, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(270)
inline void TGFrameworkSupport::Dimension::PutPMITrackDistance ( double _arg1 ) {
    _com_dispatch_method(this, 0x44c3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(271)
inline void TGFrameworkSupport::Dimension::PutUseStandardLimitAndFitTolerance ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x44c4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(272)
inline VARIANT_BOOL TGFrameworkSupport::Dimension::GetUseStandardLimitAndFitTolerance ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x44c4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(273)
inline void TGFrameworkSupport::Dimension::PutHoleClassString ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x44c5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(274)
inline _bstr_t TGFrameworkSupport::Dimension::GetHoleClassString ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x44c5, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(275)
inline void TGFrameworkSupport::Dimension::PutShaftClassString ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x44c6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(276)
inline _bstr_t TGFrameworkSupport::Dimension::GetShaftClassString ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x44c6, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(277)
inline void TGFrameworkSupport::Dimension::PutInhibitZeroToleranceDisplay ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x44c7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(278)
inline VARIANT_BOOL TGFrameworkSupport::Dimension::GetInhibitZeroToleranceDisplay ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x44c7, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(279)
inline HRESULT TGFrameworkSupport::Dimension::SetPMIEditDirection ( enum PMIEditDirectionConstants editDirectionConst ) {
    return _com_dispatch_method(this, 0x44c8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", editDirectionConst);
}

#pragma implementation_key(280)
inline void TGFrameworkSupport::Dimension::PutHidePMI ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x44c9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(281)
inline VARIANT_BOOL TGFrameworkSupport::Dimension::GetHidePMI ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x44c9, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(282)
inline _bstr_t TGFrameworkSupport::Dimension::GetPrefixDisplayedText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x44ca, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(283)
inline _bstr_t TGFrameworkSupport::Dimension::GetSuperfixDisplayedText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x44cb, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(284)
inline _bstr_t TGFrameworkSupport::Dimension::GetSuffixDisplayedText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x44cc, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(285)
inline _bstr_t TGFrameworkSupport::Dimension::GetSubfixDisplayedText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x44cd, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(286)
inline _bstr_t TGFrameworkSupport::Dimension::GetSubfix2DisplayedText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x44ce, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(287)
inline void TGFrameworkSupport::Dimension::PutStyle ( struct DimStyle * _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(288)
inline void TGFrameworkSupport::Dimension::PutRadialExtensionDistance ( double _arg1 ) {
    _com_dispatch_method(this, 0x44cf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(289)
inline double TGFrameworkSupport::Dimension::GetRadialExtensionDistance ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x44cf, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(290)
inline HRESULT TGFrameworkSupport::Dimension::GetDiscreteValues ( int * pnumDiscreteValues, SAFEARRAY * * DiscreteValues ) {
    return _com_dispatch_method(this, 0x44d0, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6005", pnumDiscreteValues, DiscreteValues);
}

#pragma implementation_key(291)
inline HRESULT TGFrameworkSupport::Dimension::SetDiscreteValues ( int numDiscreteValues, SAFEARRAY * * DiscreteValues ) {
    return _com_dispatch_method(this, 0x44d1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6005", numDiscreteValues, DiscreteValues);
}

#pragma implementation_key(292)
inline HRESULT TGFrameworkSupport::Dimension::GetMultipleJogPoints ( int * numJogPoints, double * initialYOffset, SAFEARRAY * * XOffsets, SAFEARRAY * * YOffsets, SAFEARRAY * * DistBet2Jogs ) {
    return _com_dispatch_method(this, 0x44d2, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4005\x6005\x6005\x6005", numJogPoints, initialYOffset, XOffsets, YOffsets, DistBet2Jogs);
}

#pragma implementation_key(293)
inline HRESULT TGFrameworkSupport::Dimension::SetMultipleJogPoints ( int numJogPoints, double initialYOffset, SAFEARRAY * * XOffsets, SAFEARRAY * * YOffsets, SAFEARRAY * * DistBet2Jogs ) {
    return _com_dispatch_method(this, 0x44d3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x6005\x6005\x6005", numJogPoints, initialYOffset, XOffsets, YOffsets, DistBet2Jogs);
}

#pragma implementation_key(294)
inline _bstr_t TGFrameworkSupport::Dimension::GetComment ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x44d4, DISPATCH_METHOD, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(295)
inline HRESULT TGFrameworkSupport::Dimension::SetComment ( _bstr_t Comment ) {
    return _com_dispatch_method(this, 0x44d5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Comment);
}

#pragma implementation_key(296)
inline enum TGFrameworkSupport::DimStatusConstants TGFrameworkSupport::Dimension::UpdateStatus ( ) {
    enum DimStatusConstants _result;
    _com_dispatch_method(this, 0x44d6, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(297)
inline HRESULT TGFrameworkSupport::Dimension::RemoveFromAlignmentSet ( ) {
    return _com_dispatch_method(this, 0x44d7, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(298)
inline HRESULT TGFrameworkSupport::Dimension::BreakAlignmentSet ( ) {
    return _com_dispatch_method(this, 0x44d8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(299)
inline void TGFrameworkSupport::Dimension::PutTrue3DSketchDimension ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x44d9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(300)
inline VARIANT_BOOL TGFrameworkSupport::Dimension::GetTrue3DSketchDimension ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x44d9, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(301)
inline enum TGFrameworkSupport::DimReattachStatusConstants TGFrameworkSupport::Dimension::ReattachToDrawingView ( IDispatch * DrawingView ) {
    enum DimReattachStatusConstants _result;
    _com_dispatch_method(this, 0x44da, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0009", DrawingView);
    return _result;
}

#pragma implementation_key(302)
inline HRESULT TGFrameworkSupport::Dimension::GetValueDiscreteValues ( SAFEARRAY * * DiscreteValues ) {
    return _com_dispatch_method(this, 0x44db, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6005", DiscreteValues);
}

#pragma implementation_key(303)
inline HRESULT TGFrameworkSupport::Dimension::SetValueDiscreteValues ( SAFEARRAY * * DiscreteValues ) {
    return _com_dispatch_method(this, 0x44dc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6005", DiscreteValues);
}

#pragma implementation_key(304)
inline HRESULT TGFrameworkSupport::Dimension::AddDiscreteValue ( double DiscreteValue ) {
    return _com_dispatch_method(this, 0x44dd, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", DiscreteValue);
}

#pragma implementation_key(305)
inline HRESULT TGFrameworkSupport::Dimension::RemoveDiscreteValue ( double DiscreteValue ) {
    return _com_dispatch_method(this, 0x44de, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", DiscreteValue);
}

#pragma implementation_key(306)
inline HRESULT TGFrameworkSupport::Dimension::SetValueRangeValues ( double LowValue, int Condition, double HighValue ) {
    return _com_dispatch_method(this, 0x44df, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0003\x0005", LowValue, Condition, HighValue);
}

#pragma implementation_key(307)
inline HRESULT TGFrameworkSupport::Dimension::GetValueRangeValues ( double * LowValue, int * Condition, double * HighValue ) {
    return _com_dispatch_method(this, 0x44e0, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4003\x4005", LowValue, Condition, HighValue);
}

#pragma implementation_key(308)
inline void TGFrameworkSupport::Dimension::PutUnitsType ( int _arg1 ) {
    _com_dispatch_method(this, 0x44e1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(309)
inline int TGFrameworkSupport::Dimension::GetUnitsType ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x44e1, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(310)
inline HRESULT TGFrameworkSupport::Dimension::GetValueRangeHighValue ( double * pdHighValue ) {
    return _com_dispatch_method(this, 0x44e2, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005", pdHighValue);
}

#pragma implementation_key(311)
inline HRESULT TGFrameworkSupport::Dimension::SetValueRangeHighValue ( double dHighValue ) {
    return _com_dispatch_method(this, 0x44e3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", dHighValue);
}

#pragma implementation_key(312)
inline HRESULT TGFrameworkSupport::Dimension::GetValueRangeLowValue ( double * pdHighValue ) {
    return _com_dispatch_method(this, 0x44e4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005", pdHighValue);
}

#pragma implementation_key(313)
inline HRESULT TGFrameworkSupport::Dimension::SetValueRangeLowValue ( double dHighValue ) {
    return _com_dispatch_method(this, 0x44e5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", dHighValue);
}

#pragma implementation_key(314)
inline HRESULT TGFrameworkSupport::Dimension::ClearLimitsOrDiscreteValues ( ) {
    return _com_dispatch_method(this, 0x44e6, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(315)
inline double TGFrameworkSupport::Dimension::GetValueOutOfRange ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x44e7, DISPATCH_METHOD, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(316)
inline VARIANT_BOOL TGFrameworkSupport::Dimension::GetIsReadOnly ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x44e8, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(317)
inline HRESULT TGFrameworkSupport::Dimension::GetValueEx ( double * pdValue, enum TGFramework::seUnitsTypeConstants seUnitsType ) {
    return _com_dispatch_method(this, 0x44e9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x0003", pdValue, seUnitsType);
}

#pragma implementation_key(318)
inline HRESULT TGFrameworkSupport::Dimension::SetValueEx ( double dValue, enum TGFramework::seUnitsTypeConstants seUnitsType ) {
    return _com_dispatch_method(this, 0x44ea, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0003", dValue, seUnitsType);
}

#pragma implementation_key(319)
inline void TGFrameworkSupport::Dimension::PutEnablePrefix ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x44eb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(320)
inline VARIANT_BOOL TGFrameworkSupport::Dimension::GetEnablePrefix ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x44eb, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(321)
inline HRESULT TGFrameworkSupport::Dimension::AutoScaleSketch ( double dValue, VARIANT_BOOL * Value ) {
    return _com_dispatch_method(this, 0x44ec, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x400b", dValue, Value);
}

#pragma implementation_key(322)
inline HRESULT TGFrameworkSupport::Dimension::SetValueAndUpdateCache ( double dValue, enum TGFramework::seUnitsTypeConstants seUnitsType ) {
    return _com_dispatch_method(this, 0x44ed, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0003", dValue, seUnitsType);
}

#pragma implementation_key(323)
inline HRESULT TGFrameworkSupport::Dimension::ConvertCDiameterToRDiameter ( enum DimTypeConstants Type ) {
    return _com_dispatch_method(this, 0x44ee, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Type);
}

//
// dispinterface DimStyle wrapper method implementations
//

#pragma implementation_key(324)
inline void TGFrameworkSupport::DimStyle::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(325)
inline _bstr_t TGFrameworkSupport::DimStyle::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(326)
inline void TGFrameworkSupport::DimStyle::PutPrimaryUnits ( enum DimLinearUnitConstants _arg1 ) {
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(327)
inline enum TGFrameworkSupport::DimLinearUnitConstants TGFrameworkSupport::DimStyle::GetPrimaryUnits ( ) {
    enum DimLinearUnitConstants _result;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(328)
inline void TGFrameworkSupport::DimStyle::PutRoundOffType ( enum DimRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(329)
inline enum TGFrameworkSupport::DimRoundOffTypeConstants TGFrameworkSupport::DimStyle::GetRoundOffType ( ) {
    enum DimRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(330)
inline void TGFrameworkSupport::DimStyle::PutDelimiter ( enum DimDelimiterTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(331)
inline enum TGFrameworkSupport::DimDelimiterTypeConstants TGFrameworkSupport::DimStyle::GetDelimiter ( ) {
    enum DimDelimiterTypeConstants _result;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(332)
inline void TGFrameworkSupport::DimStyle::PutPrimaryDecimalRoundOff ( enum DimDecimalRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(333)
inline enum TGFrameworkSupport::DimDecimalRoundOffTypeConstants TGFrameworkSupport::DimStyle::GetPrimaryDecimalRoundOff ( ) {
    enum DimDecimalRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(334)
inline void TGFrameworkSupport::DimStyle::PutPrimaryFractionRoundOff ( enum DimFractionRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(335)
inline enum TGFrameworkSupport::DimFractionRoundOffTypeConstants TGFrameworkSupport::DimStyle::GetPrimaryFractionRoundOff ( ) {
    enum DimFractionRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(336)
inline void TGFrameworkSupport::DimStyle::PutAngularUnits ( enum DimAngularUnitConstants _arg1 ) {
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(337)
inline enum TGFrameworkSupport::DimAngularUnitConstants TGFrameworkSupport::DimStyle::GetAngularUnits ( ) {
    enum DimAngularUnitConstants _result;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(338)
inline void TGFrameworkSupport::DimStyle::PutAngularDMSRoundOff ( enum DimDMSRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(339)
inline enum TGFrameworkSupport::DimDMSRoundOffTypeConstants TGFrameworkSupport::DimStyle::GetAngularDMSRoundOff ( ) {
    enum DimDMSRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(340)
inline void TGFrameworkSupport::DimStyle::PutAngularDecimalRoundOff ( enum DimDecimalRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(341)
inline enum TGFrameworkSupport::DimDecimalRoundOffTypeConstants TGFrameworkSupport::DimStyle::GetAngularDecimalRoundOff ( ) {
    enum DimDecimalRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(342)
inline void TGFrameworkSupport::DimStyle::PutAngularFractionRoundOff ( enum DimFractionRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(343)
inline enum TGFrameworkSupport::DimFractionRoundOffTypeConstants TGFrameworkSupport::DimStyle::GetAngularFractionRoundOff ( ) {
    enum DimFractionRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(344)
inline void TGFrameworkSupport::DimStyle::PutPrimaryLeadingZeros ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(345)
inline VARIANT_BOOL TGFrameworkSupport::DimStyle::GetPrimaryLeadingZeros ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(346)
inline void TGFrameworkSupport::DimStyle::PutPrimaryTrailingZeros ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(347)
inline VARIANT_BOOL TGFrameworkSupport::DimStyle::GetPrimaryTrailingZeros ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(348)
inline void TGFrameworkSupport::DimStyle::PutPrimaryUnitLabel ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(349)
inline _bstr_t TGFrameworkSupport::DimStyle::GetPrimaryUnitLabel ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(350)
inline void TGFrameworkSupport::DimStyle::PutPrimarySubunitsLabel ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(351)
inline _bstr_t TGFrameworkSupport::DimStyle::GetPrimarySubunitsLabel ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(352)
inline void TGFrameworkSupport::DimStyle::PutMaximumSubunits ( int _arg1 ) {
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(353)
inline int TGFrameworkSupport::DimStyle::GetMaximumSubunits ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(354)
inline void TGFrameworkSupport::DimStyle::PutDualDisplay ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(355)
inline VARIANT_BOOL TGFrameworkSupport::DimStyle::GetDualDisplay ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(356)
inline void TGFrameworkSupport::DimStyle::PutSecondaryUnits ( enum DimLinearUnitConstants _arg1 ) {
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(357)
inline enum TGFrameworkSupport::DimLinearUnitConstants TGFrameworkSupport::DimStyle::GetSecondaryUnits ( ) {
    enum DimLinearUnitConstants _result;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(358)
inline void TGFrameworkSupport::DimStyle::PutSecondaryUnitRoundOff ( enum DimRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(359)
inline enum TGFrameworkSupport::DimRoundOffTypeConstants TGFrameworkSupport::DimStyle::GetSecondaryUnitRoundOff ( ) {
    enum DimRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(360)
inline void TGFrameworkSupport::DimStyle::PutSecondaryDecimalRoundOff ( enum DimDecimalRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(361)
inline enum TGFrameworkSupport::DimDecimalRoundOffTypeConstants TGFrameworkSupport::DimStyle::GetSecondaryDecimalRoundOff ( ) {
    enum DimDecimalRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(362)
inline void TGFrameworkSupport::DimStyle::PutSecondaryFractionRoundOff ( enum DimFractionRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(363)
inline enum TGFrameworkSupport::DimFractionRoundOffTypeConstants TGFrameworkSupport::DimStyle::GetSecondaryFractionRoundOff ( ) {
    enum DimFractionRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(364)
inline void TGFrameworkSupport::DimStyle::PutSecondaryLeadingZeros ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(365)
inline VARIANT_BOOL TGFrameworkSupport::DimStyle::GetSecondaryLeadingZeros ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(366)
inline void TGFrameworkSupport::DimStyle::PutSecondaryTrailingZeros ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(367)
inline VARIANT_BOOL TGFrameworkSupport::DimStyle::GetSecondaryTrailingZeros ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(368)
inline void TGFrameworkSupport::DimStyle::PutSecondaryUnitLabel ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(369)
inline _bstr_t TGFrameworkSupport::DimStyle::GetSecondaryUnitLabel ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(370)
inline void TGFrameworkSupport::DimStyle::PutSecondarySubunitsLabel ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(371)
inline _bstr_t TGFrameworkSupport::DimStyle::GetSecondarySubunitsLabel ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(372)
inline void TGFrameworkSupport::DimStyle::PutHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(373)
inline double TGFrameworkSupport::DimStyle::GetHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(374)
inline void TGFrameworkSupport::DimStyle::PutRatio ( double _arg1 ) {
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(375)
inline double TGFrameworkSupport::DimStyle::GetRatio ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(376)
inline void TGFrameworkSupport::DimStyle::PutTextWeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(377)
inline double TGFrameworkSupport::DimStyle::GetTextWeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(378)
inline void TGFrameworkSupport::DimStyle::PutFont ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(379)
inline _bstr_t TGFrameworkSupport::DimStyle::GetFont ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(380)
inline void TGFrameworkSupport::DimStyle::PutFontStyle ( enum DimTextFontStyleConstants _arg1 ) {
    _com_dispatch_method(this, 0x1c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(381)
inline enum TGFrameworkSupport::DimTextFontStyleConstants TGFrameworkSupport::DimStyle::GetFontStyle ( ) {
    enum DimTextFontStyleConstants _result;
    _com_dispatch_method(this, 0x1c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(382)
inline void TGFrameworkSupport::DimStyle::PutTextOrientation ( enum DimTextOrientationConstants _arg1 ) {
    _com_dispatch_method(this, 0x1d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(383)
inline enum TGFrameworkSupport::DimTextOrientationConstants TGFrameworkSupport::DimStyle::GetTextOrientation ( ) {
    enum DimTextOrientationConstants _result;
    _com_dispatch_method(this, 0x1d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(384)
inline void TGFrameworkSupport::DimStyle::PutTextPosition ( enum DimTextPositionConstants _arg1 ) {
    _com_dispatch_method(this, 0x1e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(385)
inline enum TGFrameworkSupport::DimTextPositionConstants TGFrameworkSupport::DimStyle::GetTextPosition ( ) {
    enum DimTextPositionConstants _result;
    _com_dispatch_method(this, 0x1e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(386)
inline void TGFrameworkSupport::DimStyle::PutLimitTextArrangement ( enum DimLimitTextArrangmentConstants _arg1 ) {
    _com_dispatch_method(this, 0x20, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(387)
inline enum TGFrameworkSupport::DimLimitTextArrangmentConstants TGFrameworkSupport::DimStyle::GetLimitTextArrangement ( ) {
    enum DimLimitTextArrangmentConstants _result;
    _com_dispatch_method(this, 0x20, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(388)
inline void TGFrameworkSupport::DimStyle::PutToleranceHeightRatio ( double _arg1 ) {
    _com_dispatch_method(this, 0x21, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(389)
inline double TGFrameworkSupport::DimStyle::GetToleranceHeightRatio ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x21, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(390)
inline void TGFrameworkSupport::DimStyle::PutToleranceWeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x22, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(391)
inline double TGFrameworkSupport::DimStyle::GetToleranceWeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x22, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(392)
inline void TGFrameworkSupport::DimStyle::PutNTSSymbol ( enum DimNTSTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x2f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(393)
inline enum TGFrameworkSupport::DimNTSTypeConstants TGFrameworkSupport::DimStyle::GetNTSSymbol ( ) {
    enum DimNTSTypeConstants _result;
    _com_dispatch_method(this, 0x2f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(394)
inline void TGFrameworkSupport::DimStyle::PutTerminatorType ( enum DimTermTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x30, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(395)
inline enum TGFrameworkSupport::DimTermTypeConstants TGFrameworkSupport::DimStyle::GetTerminatorType ( ) {
    enum DimTermTypeConstants _result;
    _com_dispatch_method(this, 0x30, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(396)
inline void TGFrameworkSupport::DimStyle::PutTerminatorDisplay ( enum DimTermDisplayTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x31, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(397)
inline enum TGFrameworkSupport::DimTermDisplayTypeConstants TGFrameworkSupport::DimStyle::GetTerminatorDisplay ( ) {
    enum DimTermDisplayTypeConstants _result;
    _com_dispatch_method(this, 0x31, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(398)
inline void TGFrameworkSupport::DimStyle::PutOriginTerminatorType ( enum DimTermTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x32, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(399)
inline enum TGFrameworkSupport::DimTermTypeConstants TGFrameworkSupport::DimStyle::GetOriginTerminatorType ( ) {
    enum DimTermTypeConstants _result;
    _com_dispatch_method(this, 0x32, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(400)
inline void TGFrameworkSupport::DimStyle::PutFreeSpaceTerminatorType ( enum DimTermTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x33, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(401)
inline enum TGFrameworkSupport::DimTermTypeConstants TGFrameworkSupport::DimStyle::GetFreeSpaceTerminatorType ( ) {
    enum DimTermTypeConstants _result;
    _com_dispatch_method(this, 0x33, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(402)
inline void TGFrameworkSupport::DimStyle::PutDatumTerminatorType ( enum DimDatumTermTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x34, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(403)
inline enum TGFrameworkSupport::DimDatumTermTypeConstants TGFrameworkSupport::DimStyle::GetDatumTerminatorType ( ) {
    enum DimDatumTermTypeConstants _result;
    _com_dispatch_method(this, 0x34, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(404)
inline void TGFrameworkSupport::DimStyle::PutTerminatorSize ( double _arg1 ) {
    _com_dispatch_method(this, 0x35, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(405)
inline double TGFrameworkSupport::DimStyle::GetTerminatorSize ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x35, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(406)
inline void TGFrameworkSupport::DimStyle::PutTerminatorInsideLimit ( double _arg1 ) {
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(407)
inline double TGFrameworkSupport::DimStyle::GetTerminatorInsideLimit ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(408)
inline void TGFrameworkSupport::DimStyle::PutLineWidth ( double _arg1 ) {
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(409)
inline double TGFrameworkSupport::DimStyle::GetLineWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(410)
inline void TGFrameworkSupport::DimStyle::PutProjectionExtensionGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x38, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(411)
inline double TGFrameworkSupport::DimStyle::GetProjectionExtensionGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x38, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(412)
inline void TGFrameworkSupport::DimStyle::PutProjectionOffsetGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x39, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(413)
inline double TGFrameworkSupport::DimStyle::GetProjectionOffsetGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x39, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(414)
inline void TGFrameworkSupport::DimStyle::PutProjectionOffsetGapAlignment ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(415)
inline VARIANT_BOOL TGFrameworkSupport::DimStyle::GetProjectionOffsetGapAlignment ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(416)
inline void TGFrameworkSupport::DimStyle::PutProjectionAngle ( double _arg1 ) {
    _com_dispatch_method(this, 0x3b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(417)
inline double TGFrameworkSupport::DimStyle::GetProjectionAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(418)
inline void TGFrameworkSupport::DimStyle::PutLineConnect ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(419)
inline VARIANT_BOOL TGFrameworkSupport::DimStyle::GetLineConnect ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(420)
inline void TGFrameworkSupport::DimStyle::PutStackPitch ( double _arg1 ) {
    _com_dispatch_method(this, 0x3d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(421)
inline double TGFrameworkSupport::DimStyle::GetStackPitch ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3d, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(422)
inline void TGFrameworkSupport::DimStyle::PutLeaderLineLength ( double _arg1 ) {
    _com_dispatch_method(this, 0x3e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(423)
inline double TGFrameworkSupport::DimStyle::GetLeaderLineLength ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3e, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(424)
inline void TGFrameworkSupport::DimStyle::PutCoordinateAutoJog ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x42, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(425)
inline VARIANT_BOOL TGFrameworkSupport::DimStyle::GetCoordinateAutoJog ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x42, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(426)
inline void TGFrameworkSupport::DimStyle::PutCoordinateStackPitch ( double _arg1 ) {
    _com_dispatch_method(this, 0x43, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(427)
inline double TGFrameworkSupport::DimStyle::GetCoordinateStackPitch ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x43, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(428)
inline void TGFrameworkSupport::DimStyle::PutCommonOrigin ( enum DimCommonOriginTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x44, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(429)
inline enum TGFrameworkSupport::DimCommonOriginTypeConstants TGFrameworkSupport::DimStyle::GetCommonOrigin ( ) {
    enum DimCommonOriginTypeConstants _result;
    _com_dispatch_method(this, 0x44, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(430)
inline void TGFrameworkSupport::DimStyle::PutCoordinateTextPosition ( enum DimCoordTextPositionConstants _arg1 ) {
    _com_dispatch_method(this, 0x1f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(431)
inline enum TGFrameworkSupport::DimCoordTextPositionConstants TGFrameworkSupport::DimStyle::GetCoordinateTextPosition ( ) {
    enum DimCoordTextPositionConstants _result;
    _com_dispatch_method(this, 0x1f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(432)
inline void TGFrameworkSupport::DimStyle::PutSymbolPosition ( enum DimSymbolPositionConstants _arg1 ) {
    _com_dispatch_method(this, 0x45, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(433)
inline enum TGFrameworkSupport::DimSymbolPositionConstants TGFrameworkSupport::DimStyle::GetSymbolPosition ( ) {
    enum DimSymbolPositionConstants _result;
    _com_dispatch_method(this, 0x45, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(434)
inline void TGFrameworkSupport::DimStyle::PutAutoSuppressDiameter ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x46, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(435)
inline VARIANT_BOOL TGFrameworkSupport::DimStyle::GetAutoSuppressDiameter ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x46, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(436)
inline void TGFrameworkSupport::DimStyle::PutDimensionScaleMode ( enum DimScaleModeConstants _arg1 ) {
    _com_dispatch_method(this, 0x47, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(437)
inline enum TGFrameworkSupport::DimScaleModeConstants TGFrameworkSupport::DimStyle::GetDimensionScaleMode ( ) {
    enum DimScaleModeConstants _result;
    _com_dispatch_method(this, 0x47, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(438)
inline void TGFrameworkSupport::DimStyle::PutDimensionScale ( double _arg1 ) {
    _com_dispatch_method(this, 0x48, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(439)
inline double TGFrameworkSupport::DimStyle::GetDimensionScale ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x48, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(440)
inline void TGFrameworkSupport::DimStyle::PutErrorColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x4b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(441)
inline long TGFrameworkSupport::DimStyle::GetErrorColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(442)
inline void TGFrameworkSupport::DimStyle::PutDrivingColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x49, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(443)
inline long TGFrameworkSupport::DimStyle::GetDrivingColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x49, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(444)
inline void TGFrameworkSupport::DimStyle::PutDrivenColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x4a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(445)
inline long TGFrameworkSupport::DimStyle::GetDrivenColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(446)
inline void TGFrameworkSupport::DimStyle::PutAutoCenterProjectionLine ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x41, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(447)
inline VARIANT_BOOL TGFrameworkSupport::DimStyle::GetAutoCenterProjectionLine ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x41, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(448)
inline void TGFrameworkSupport::DimStyle::PutProjectionLineDisplay ( enum DimProjDisplayTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x3f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(449)
inline enum TGFrameworkSupport::DimProjDisplayTypeConstants TGFrameworkSupport::DimStyle::GetProjectionLineDisplay ( ) {
    enum DimProjDisplayTypeConstants _result;
    _com_dispatch_method(this, 0x3f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(450)
inline void TGFrameworkSupport::DimStyle::PutProjectionLineDisplayForIntersectionPoint ( enum DimProjDisplayTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x11e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(451)
inline enum TGFrameworkSupport::DimProjDisplayTypeConstants TGFrameworkSupport::DimStyle::GetProjectionLineDisplayForIntersectionPoint ( ) {
    enum DimProjDisplayTypeConstants _result;
    _com_dispatch_method(this, 0x11e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(452)
inline void TGFrameworkSupport::DimStyle::PutTextClearanceGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x23, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(453)
inline double TGFrameworkSupport::DimStyle::GetTextClearanceGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x23, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(454)
inline void TGFrameworkSupport::DimStyle::PutDualModeVerticalGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x24, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(455)
inline double TGFrameworkSupport::DimStyle::GetDualModeVerticalGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x24, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(456)
inline void TGFrameworkSupport::DimStyle::PutLineSpacing ( double _arg1 ) {
    _com_dispatch_method(this, 0x26, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(457)
inline double TGFrameworkSupport::DimStyle::GetLineSpacing ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x26, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(458)
inline void TGFrameworkSupport::DimStyle::PutAboveGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x27, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(459)
inline double TGFrameworkSupport::DimStyle::GetAboveGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x27, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(460)
inline void TGFrameworkSupport::DimStyle::PutHorizontalToleranceGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x28, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(461)
inline double TGFrameworkSupport::DimStyle::GetHorizontalToleranceGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x28, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(462)
inline void TGFrameworkSupport::DimStyle::PutVerticalToleranceGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x29, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(463)
inline double TGFrameworkSupport::DimStyle::GetVerticalToleranceGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x29, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(464)
inline void TGFrameworkSupport::DimStyle::PutVerticalLimitsGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x2a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(465)
inline double TGFrameworkSupport::DimStyle::GetVerticalLimitsGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x2a, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(466)
inline void TGFrameworkSupport::DimStyle::PutHorizontalBoxGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x2b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(467)
inline double TGFrameworkSupport::DimStyle::GetHorizontalBoxGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x2b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(468)
inline void TGFrameworkSupport::DimStyle::PutVerticalBoxGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x2c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(469)
inline double TGFrameworkSupport::DimStyle::GetVerticalBoxGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x2c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(470)
inline void TGFrameworkSupport::DimStyle::PutPrefixSuffixGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x2d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(471)
inline double TGFrameworkSupport::DimStyle::GetPrefixSuffixGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x2d, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(472)
inline void TGFrameworkSupport::DimStyle::PutSymbolGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x2e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(473)
inline double TGFrameworkSupport::DimStyle::GetSymbolGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x2e, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(474)
inline void TGFrameworkSupport::DimStyle::PutMaximumViewAngle ( double _arg1 ) {
    _com_dispatch_method(this, 0x4c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(475)
inline double TGFrameworkSupport::DimStyle::GetMaximumViewAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(476)
inline void TGFrameworkSupport::DimStyle::PutProjectionToleranceZonePosition ( enum DimProjTolZonePositionConstants _arg1 ) {
    _com_dispatch_method(this, 0x4d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(477)
inline enum TGFrameworkSupport::DimProjTolZonePositionConstants TGFrameworkSupport::DimStyle::GetProjectionToleranceZonePosition ( ) {
    enum DimProjTolZonePositionConstants _result;
    _com_dispatch_method(this, 0x4d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(478)
inline void TGFrameworkSupport::DimStyle::PutDatumFrameDashes ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(479)
inline VARIANT_BOOL TGFrameworkSupport::DimStyle::GetDatumFrameDashes ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(480)
inline void TGFrameworkSupport::DimStyle::PutViewTextRatio ( double _arg1 ) {
    _com_dispatch_method(this, 0x4f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(481)
inline double TGFrameworkSupport::DimStyle::GetViewTextRatio ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4f, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(482)
inline void TGFrameworkSupport::DimStyle::PutViewTerminatorRatio ( double _arg1 ) {
    _com_dispatch_method(this, 0x50, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(483)
inline double TGFrameworkSupport::DimStyle::GetViewTerminatorRatio ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x50, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(484)
inline void TGFrameworkSupport::DimStyle::PutViewLineWidth ( double _arg1 ) {
    _com_dispatch_method(this, 0x51, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(485)
inline double TGFrameworkSupport::DimStyle::GetViewLineWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x51, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(486)
inline void TGFrameworkSupport::DimStyle::PutViewLineType ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x52, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(487)
inline _bstr_t TGFrameworkSupport::DimStyle::GetViewLineType ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x52, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(488)
inline void TGFrameworkSupport::DimStyle::PutViewCuttingPlaneLineDisplay ( enum DimViewCuttingPlaneDisplayTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x53, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(489)
inline enum TGFrameworkSupport::DimViewCuttingPlaneDisplayTypeConstants TGFrameworkSupport::DimStyle::GetViewCuttingPlaneLineDisplay ( ) {
    enum DimViewCuttingPlaneDisplayTypeConstants _result;
    _com_dispatch_method(this, 0x53, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(490)
inline void TGFrameworkSupport::DimStyle::PutViewPlaneLineDisplay ( enum DimViewPlaneDisplayTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x54, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(491)
inline enum TGFrameworkSupport::DimViewPlaneDisplayTypeConstants TGFrameworkSupport::DimStyle::GetViewPlaneLineDisplay ( ) {
    enum DimViewPlaneDisplayTypeConstants _result;
    _com_dispatch_method(this, 0x54, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(492)
inline void TGFrameworkSupport::DimStyle::PutOffsetLeaderType ( enum DimOffsetLeaderTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x56, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(493)
inline enum TGFrameworkSupport::DimOffsetLeaderTypeConstants TGFrameworkSupport::DimStyle::GetOffsetLeaderType ( ) {
    enum DimOffsetLeaderTypeConstants _result;
    _com_dispatch_method(this, 0x56, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(494)
inline void TGFrameworkSupport::DimStyle::PutSecondaryToleranceEquivalent ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x55, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(495)
inline VARIANT_BOOL TGFrameworkSupport::DimStyle::GetSecondaryToleranceEquivalent ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x55, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(496)
inline void TGFrameworkSupport::DimStyle::PutCenterLineType ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x57, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(497)
inline _bstr_t TGFrameworkSupport::DimStyle::GetCenterLineType ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x57, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(498)
inline void TGFrameworkSupport::DimStyle::PutCenterMarkSize ( double _arg1 ) {
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(499)
inline double TGFrameworkSupport::DimStyle::GetCenterMarkSize ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(500)
inline void TGFrameworkSupport::DimStyle::PutAutoPhase ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(501)
inline VARIANT_BOOL TGFrameworkSupport::DimStyle::GetAutoPhase ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(502)
inline HRESULT TGFrameworkSupport::DimStyle::UseActiveStyle ( ) {
    return _com_dispatch_method(this, 0x600100b6, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(503)
inline void TGFrameworkSupport::DimStyle::PutRoundUp ( enum DimRoundUpTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x58, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(504)
inline enum TGFrameworkSupport::DimRoundUpTypeConstants TGFrameworkSupport::DimStyle::GetRoundUp ( ) {
    enum DimRoundUpTypeConstants _result;
    _com_dispatch_method(this, 0x58, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(505)
inline void TGFrameworkSupport::DimStyle::PutSecondaryLinearRoundOffType ( enum DimRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x59, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(506)
inline enum TGFrameworkSupport::DimRoundOffTypeConstants TGFrameworkSupport::DimStyle::GetSecondaryLinearRoundOffType ( ) {
    enum DimRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0x59, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(507)
inline void TGFrameworkSupport::DimStyle::PutAngularRoundOffType ( enum DimRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x5a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(508)
inline enum TGFrameworkSupport::DimRoundOffTypeConstants TGFrameworkSupport::DimStyle::GetAngularRoundOffType ( ) {
    enum DimRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0x5a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(509)
inline void TGFrameworkSupport::DimStyle::PutCenterMarkExtension ( double _arg1 ) {
    _com_dispatch_method(this, 0x5b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(510)
inline double TGFrameworkSupport::DimStyle::GetCenterMarkExtension ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x5b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(511)
inline void TGFrameworkSupport::DimStyle::PutChamferUse45DegreeCharacter ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x5c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(512)
inline VARIANT_BOOL TGFrameworkSupport::DimStyle::GetChamferUse45DegreeCharacter ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x5c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(513)
inline void TGFrameworkSupport::DimStyle::PutSmartDepthHoleThru ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x5d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(514)
inline _bstr_t TGFrameworkSupport::DimStyle::GetSmartDepthHoleThru ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x5d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(515)
inline void TGFrameworkSupport::DimStyle::PutSmartDepthHoleFinite ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x5e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(516)
inline _bstr_t TGFrameworkSupport::DimStyle::GetSmartDepthHoleFinite ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x5e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(517)
inline void TGFrameworkSupport::DimStyle::PutSmartDepthThreadThru ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x5f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(518)
inline _bstr_t TGFrameworkSupport::DimStyle::GetSmartDepthThreadThru ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x5f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(519)
inline void TGFrameworkSupport::DimStyle::PutSmartDepthThreadFinite ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x60, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(520)
inline _bstr_t TGFrameworkSupport::DimStyle::GetSmartDepthThreadFinite ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x60, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(521)
inline void TGFrameworkSupport::DimStyle::PutLowerCaseMultiplicationSymbol ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x61, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(522)
inline VARIANT_BOOL TGFrameworkSupport::DimStyle::GetLowerCaseMultiplicationSymbol ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x61, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(523)
inline void TGFrameworkSupport::DimStyle::PutHoleCalloutSimple ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xc8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(524)
inline _bstr_t TGFrameworkSupport::DimStyle::GetHoleCalloutSimple ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xc8, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(525)
inline void TGFrameworkSupport::DimStyle::PutHoleCalloutCounterbore ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xc9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(526)
inline _bstr_t TGFrameworkSupport::DimStyle::GetHoleCalloutCounterbore ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xc9, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(527)
inline void TGFrameworkSupport::DimStyle::PutHoleCalloutCountersink ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xca, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(528)
inline _bstr_t TGFrameworkSupport::DimStyle::GetHoleCalloutCountersink ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xca, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(529)
inline void TGFrameworkSupport::DimStyle::PutHoleCalloutSimpleThreaded ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xcb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(530)
inline _bstr_t TGFrameworkSupport::DimStyle::GetHoleCalloutSimpleThreaded ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xcb, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(531)
inline void TGFrameworkSupport::DimStyle::PutHoleCalloutCounterboreThreaded ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xcc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(532)
inline _bstr_t TGFrameworkSupport::DimStyle::GetHoleCalloutCounterboreThreaded ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xcc, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(533)
inline void TGFrameworkSupport::DimStyle::PutHoleCalloutCountersinkThreaded ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xcd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(534)
inline _bstr_t TGFrameworkSupport::DimStyle::GetHoleCalloutCountersinkThreaded ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xcd, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(535)
inline void TGFrameworkSupport::DimStyle::PutApplyBreakLineGap ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xce, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(536)
inline VARIANT_BOOL TGFrameworkSupport::DimStyle::GetApplyBreakLineGap ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xce, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(537)
inline void TGFrameworkSupport::DimStyle::PutTextAutoFillBackground ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xcf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(538)
inline VARIANT_BOOL TGFrameworkSupport::DimStyle::GetTextAutoFillBackground ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xcf, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(539)
inline void TGFrameworkSupport::DimStyle::PutPulledOutTextOrientation ( enum DimTextOrientationConstants _arg1 ) {
    _com_dispatch_method(this, 0xd0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(540)
inline enum TGFrameworkSupport::DimTextOrientationConstants TGFrameworkSupport::DimStyle::GetPulledOutTextOrientation ( ) {
    enum DimTextOrientationConstants _result;
    _com_dispatch_method(this, 0xd0, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(541)
inline void TGFrameworkSupport::DimStyle::PutPulledOutTextPosition ( enum DimTextPositionConstants _arg1 ) {
    _com_dispatch_method(this, 0xd1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(542)
inline enum TGFrameworkSupport::DimTextPositionConstants TGFrameworkSupport::DimStyle::GetPulledOutTextPosition ( ) {
    enum DimTextPositionConstants _result;
    _com_dispatch_method(this, 0xd1, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(543)
inline void TGFrameworkSupport::DimStyle::PutOverridePulledOutText ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xd2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(544)
inline VARIANT_BOOL TGFrameworkSupport::DimStyle::GetOverridePulledOutText ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xd2, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(545)
inline void TGFrameworkSupport::DimStyle::PutViewLineArrowOffset ( double _arg1 ) {
    _com_dispatch_method(this, 0xd3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(546)
inline double TGFrameworkSupport::DimStyle::GetViewLineArrowOffset ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xd3, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(547)
inline void TGFrameworkSupport::DimStyle::PutViewThickLineLength ( double _arg1 ) {
    _com_dispatch_method(this, 0xd4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(548)
inline double TGFrameworkSupport::DimStyle::GetViewThickLineLength ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xd4, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(549)
inline void TGFrameworkSupport::DimStyle::PutOrigTerminatorSize ( double _arg1 ) {
    _com_dispatch_method(this, 0xd5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(550)
inline double TGFrameworkSupport::DimStyle::GetOrigTerminatorSize ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xd5, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(551)
inline void TGFrameworkSupport::DimStyle::PutConnectorLineType ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xd6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(552)
inline _bstr_t TGFrameworkSupport::DimStyle::GetConnectorLineType ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xd6, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(553)
inline void TGFrameworkSupport::DimStyle::PutConnectorColor ( long _arg1 ) {
    _com_dispatch_method(this, 0xd7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(554)
inline long TGFrameworkSupport::DimStyle::GetConnectorColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xd7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(555)
inline void TGFrameworkSupport::DimStyle::PutConnectorWidth ( double _arg1 ) {
    _com_dispatch_method(this, 0xd8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(556)
inline double TGFrameworkSupport::DimStyle::GetConnectorWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xd8, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(557)
inline void TGFrameworkSupport::DimStyle::PutFractionSeparator ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xd9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(558)
inline _bstr_t TGFrameworkSupport::DimStyle::GetFractionSeparator ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xd9, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(559)
inline void TGFrameworkSupport::DimStyle::PutHeightPMI ( double _arg1 ) {
    _com_dispatch_method(this, 0xda, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(560)
inline double TGFrameworkSupport::DimStyle::GetHeightPMI ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xda, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(561)
inline void TGFrameworkSupport::DimStyle::PutProjectionBreakGap ( double _arg1 ) {
    _com_dispatch_method(this, 0xdb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(562)
inline double TGFrameworkSupport::DimStyle::GetProjectionBreakGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xdb, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(563)
inline void TGFrameworkSupport::DimStyle::PutSecondaryDelimiter ( enum DimDelimiterTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0xdc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(564)
inline enum TGFrameworkSupport::DimDelimiterTypeConstants TGFrameworkSupport::DimStyle::GetSecondaryDelimiter ( ) {
    enum DimDelimiterTypeConstants _result;
    _com_dispatch_method(this, 0xdc, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(565)
inline void TGFrameworkSupport::DimStyle::PutMatchPrimaryDelimiter ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xdd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(566)
inline VARIANT_BOOL TGFrameworkSupport::DimStyle::GetMatchPrimaryDelimiter ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xdd, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(567)
inline void TGFrameworkSupport::DimStyle::PutInhibitZeroToleranceDisplay ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xde, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(568)
inline VARIANT_BOOL TGFrameworkSupport::DimStyle::GetInhibitZeroToleranceDisplay ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xde, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(569)
inline void TGFrameworkSupport::DimStyle::PutAllAroundMultiplier ( double _arg1 ) {
    _com_dispatch_method(this, 0xdf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(570)
inline double TGFrameworkSupport::DimStyle::GetAllAroundMultiplier ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xdf, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(571)
inline void TGFrameworkSupport::DimStyle::PutOverridePulledOutText2 ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xe2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(572)
inline VARIANT_BOOL TGFrameworkSupport::DimStyle::GetOverridePulledOutText2 ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xe2, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(573)
inline void TGFrameworkSupport::DimStyle::PutPulledOutText2Orientation ( enum DimTextOrientationConstants _arg1 ) {
    _com_dispatch_method(this, 0xe0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(574)
inline enum TGFrameworkSupport::DimTextOrientationConstants TGFrameworkSupport::DimStyle::GetPulledOutText2Orientation ( ) {
    enum DimTextOrientationConstants _result;
    _com_dispatch_method(this, 0xe0, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(575)
inline void TGFrameworkSupport::DimStyle::PutPulledOutText2Position ( enum DimTextPositionConstants _arg1 ) {
    _com_dispatch_method(this, 0xe1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(576)
inline enum TGFrameworkSupport::DimTextPositionConstants TGFrameworkSupport::DimStyle::GetPulledOutText2Position ( ) {
    enum DimTextPositionConstants _result;
    _com_dispatch_method(this, 0xe1, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(577)
inline void TGFrameworkSupport::DimStyle::PutDisplayDegreeSymbolOnNumericTolerance ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xe3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(578)
inline VARIANT_BOOL TGFrameworkSupport::DimStyle::GetDisplayDegreeSymbolOnNumericTolerance ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xe3, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(579)
inline void TGFrameworkSupport::DimStyle::PutZeroInchesForFTIN ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xe4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(580)
inline VARIANT_BOOL TGFrameworkSupport::DimStyle::GetZeroInchesForFTIN ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xe4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(581)
inline void TGFrameworkSupport::DimStyle::PutSymbolFont ( enum DimStyleSymbolFontConstants _arg1 ) {
    _com_dispatch_method(this, 0xe5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(582)
inline enum TGFrameworkSupport::DimStyleSymbolFontConstants TGFrameworkSupport::DimStyle::GetSymbolFont ( ) {
    enum DimStyleSymbolFontConstants _result;
    _com_dispatch_method(this, 0xe5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(583)
inline void TGFrameworkSupport::DimStyle::PutDatumTerminatorGap ( double _arg1 ) {
    _com_dispatch_method(this, 0xe6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(584)
inline double TGFrameworkSupport::DimStyle::GetDatumTerminatorGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xe6, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(585)
inline void TGFrameworkSupport::DimStyle::PutDatumFrameShape ( enum DimStyleDatumFrameShapeConstants _arg1 ) {
    _com_dispatch_method(this, 0xe7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(586)
inline enum TGFrameworkSupport::DimStyleDatumFrameShapeConstants TGFrameworkSupport::DimStyle::GetDatumFrameShape ( ) {
    enum DimStyleDatumFrameShapeConstants _result;
    _com_dispatch_method(this, 0xe7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(587)
inline void TGFrameworkSupport::DimStyle::PutDisplayCoordinateOriginText ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xe8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(588)
inline VARIANT_BOOL TGFrameworkSupport::DimStyle::GetDisplayCoordinateOriginText ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xe8, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(589)
inline void TGFrameworkSupport::DimStyle::PutPlacePrefixInsideBasicDimensionBox ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xe9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(590)
inline VARIANT_BOOL TGFrameworkSupport::DimStyle::GetPlacePrefixInsideBasicDimensionBox ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xe9, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(591)
inline void TGFrameworkSupport::DimStyle::PutSecondaryUnitSeparator ( enum DimStyleSecondaryUnitSeparatorConstants _arg1 ) {
    _com_dispatch_method(this, 0xea, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(592)
inline enum TGFrameworkSupport::DimStyleSecondaryUnitSeparatorConstants TGFrameworkSupport::DimStyle::GetSecondaryUnitSeparator ( ) {
    enum DimStyleSecondaryUnitSeparatorConstants _result;
    _com_dispatch_method(this, 0xea, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(593)
inline void TGFrameworkSupport::DimStyle::PutWeldSymbolLineWidth ( double _arg1 ) {
    _com_dispatch_method(this, 0xeb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(594)
inline double TGFrameworkSupport::DimStyle::GetWeldSymbolLineWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xeb, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(595)
inline void TGFrameworkSupport::DimStyle::PutThreeSidedSymbolOffsetGap ( double _arg1 ) {
    _com_dispatch_method(this, 0xec, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(596)
inline double TGFrameworkSupport::DimStyle::GetThreeSidedSymbolOffsetGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xec, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(597)
inline void TGFrameworkSupport::DimStyle::PutHoleShaftToleranceSeparatorType ( enum DimHoleShaftSeparatorTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0xed, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(598)
inline enum TGFrameworkSupport::DimHoleShaftSeparatorTypeConstants TGFrameworkSupport::DimStyle::GetHoleShaftToleranceSeparatorType ( ) {
    enum DimHoleShaftSeparatorTypeConstants _result;
    _com_dispatch_method(this, 0xed, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(599)
inline void TGFrameworkSupport::DimStyle::PutToleranceTextVerticalAlignment ( enum TextVerticalAlignmentConstants _arg1 ) {
    _com_dispatch_method(this, 0xee, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(600)
inline enum TGFrameworkSupport::TextVerticalAlignmentConstants TGFrameworkSupport::DimStyle::GetToleranceTextVerticalAlignment ( ) {
    enum TextVerticalAlignmentConstants _result;
    _com_dispatch_method(this, 0xee, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(601)
inline void TGFrameworkSupport::DimStyle::PutToleranceTextHorizontalAlignment ( enum DimToleranceTextHorizontalAlignOptionsConstants _arg1 ) {
    _com_dispatch_method(this, 0xef, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(602)
inline enum TGFrameworkSupport::DimToleranceTextHorizontalAlignOptionsConstants TGFrameworkSupport::DimStyle::GetToleranceTextHorizontalAlignment ( ) {
    enum DimToleranceTextHorizontalAlignOptionsConstants _result;
    _com_dispatch_method(this, 0xef, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(603)
inline void TGFrameworkSupport::DimStyle::PutUseTextSizeForCombinedTolValueDisplay ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xf0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(604)
inline VARIANT_BOOL TGFrameworkSupport::DimStyle::GetUseTextSizeForCombinedTolValueDisplay ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xf0, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(605)
inline void TGFrameworkSupport::DimStyle::PutDatumFrameLineTermThickness ( double _arg1 ) {
    _com_dispatch_method(this, 0xf1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(606)
inline double TGFrameworkSupport::DimStyle::GetDatumFrameLineTermThickness ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xf1, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(607)
inline void TGFrameworkSupport::DimStyle::PutDatumTargetTerminatorType ( enum DimDatumTargetTermTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0xf2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(608)
inline enum TGFrameworkSupport::DimDatumTargetTermTypeConstants TGFrameworkSupport::DimStyle::GetDatumTargetTerminatorType ( ) {
    enum DimDatumTargetTermTypeConstants _result;
    _com_dispatch_method(this, 0xf2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(609)
inline void TGFrameworkSupport::DimStyle::PutPinSymbolTerminatorType ( enum DimPinSymbolTermTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x184, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(610)
inline enum TGFrameworkSupport::DimPinSymbolTermTypeConstants TGFrameworkSupport::DimStyle::GetPinSymbolTerminatorType ( ) {
    enum DimPinSymbolTermTypeConstants _result;
    _com_dispatch_method(this, 0x184, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(611)
inline void TGFrameworkSupport::DimStyle::PutPrimaryLinearToleranceUnits ( enum DimLinearUnitConstants _arg1 ) {
    _com_dispatch_method(this, 0xf3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(612)
inline enum TGFrameworkSupport::DimLinearUnitConstants TGFrameworkSupport::DimStyle::GetPrimaryLinearToleranceUnits ( ) {
    enum DimLinearUnitConstants _result;
    _com_dispatch_method(this, 0xf3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(613)
inline void TGFrameworkSupport::DimStyle::PutPrimaryLinearToleranceRoundOffType ( enum DimRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0xf4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(614)
inline enum TGFrameworkSupport::DimRoundOffTypeConstants TGFrameworkSupport::DimStyle::GetPrimaryLinearToleranceRoundOffType ( ) {
    enum DimRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0xf4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(615)
inline void TGFrameworkSupport::DimStyle::PutPrimaryLinearToleranceDecimalRoundOff ( enum DimDecimalRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0xf5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(616)
inline enum TGFrameworkSupport::DimDecimalRoundOffTypeConstants TGFrameworkSupport::DimStyle::GetPrimaryLinearToleranceDecimalRoundOff ( ) {
    enum DimDecimalRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0xf5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(617)
inline void TGFrameworkSupport::DimStyle::PutPrimaryLinearToleranceFractionRoundOff ( enum DimFractionRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0xf6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(618)
inline enum TGFrameworkSupport::DimFractionRoundOffTypeConstants TGFrameworkSupport::DimStyle::GetPrimaryLinearToleranceFractionRoundOff ( ) {
    enum DimFractionRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0xf6, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(619)
inline void TGFrameworkSupport::DimStyle::PutPrimaryLinearToleranceUnitLabel ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xf7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(620)
inline _bstr_t TGFrameworkSupport::DimStyle::GetPrimaryLinearToleranceUnitLabel ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xf7, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(621)
inline void TGFrameworkSupport::DimStyle::PutPrimaryLinearToleranceSubunitsLabel ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xf8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(622)
inline _bstr_t TGFrameworkSupport::DimStyle::GetPrimaryLinearToleranceSubunitsLabel ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xf8, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(623)
inline void TGFrameworkSupport::DimStyle::PutPrimaryLinearToleranceMaximumSubunits ( int _arg1 ) {
    _com_dispatch_method(this, 0xf9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(624)
inline int TGFrameworkSupport::DimStyle::GetPrimaryLinearToleranceMaximumSubunits ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0xf9, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(625)
inline void TGFrameworkSupport::DimStyle::PutPrimaryLinearToleranceFractionSeparator ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xfa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(626)
inline _bstr_t TGFrameworkSupport::DimStyle::GetPrimaryLinearToleranceFractionSeparator ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xfa, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(627)
inline void TGFrameworkSupport::DimStyle::PutAngularToleranceUnits ( enum DimAngularUnitConstants _arg1 ) {
    _com_dispatch_method(this, 0xfb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(628)
inline enum TGFrameworkSupport::DimAngularUnitConstants TGFrameworkSupport::DimStyle::GetAngularToleranceUnits ( ) {
    enum DimAngularUnitConstants _result;
    _com_dispatch_method(this, 0xfb, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(629)
inline void TGFrameworkSupport::DimStyle::PutAngularToleranceRoundOffType ( enum DimRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0xfc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(630)
inline enum TGFrameworkSupport::DimRoundOffTypeConstants TGFrameworkSupport::DimStyle::GetAngularToleranceRoundOffType ( ) {
    enum DimRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0xfc, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(631)
inline void TGFrameworkSupport::DimStyle::PutAngularToleranceDMSRoundOff ( enum DimDMSRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0xfd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(632)
inline enum TGFrameworkSupport::DimDMSRoundOffTypeConstants TGFrameworkSupport::DimStyle::GetAngularToleranceDMSRoundOff ( ) {
    enum DimDMSRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0xfd, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(633)
inline void TGFrameworkSupport::DimStyle::PutAngularToleranceDecimalRoundOff ( enum DimDecimalRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0xfe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(634)
inline enum TGFrameworkSupport::DimDecimalRoundOffTypeConstants TGFrameworkSupport::DimStyle::GetAngularToleranceDecimalRoundOff ( ) {
    enum DimDecimalRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0xfe, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(635)
inline void TGFrameworkSupport::DimStyle::PutAngularToleranceFractionRoundOff ( enum DimFractionRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0xff, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(636)
inline enum TGFrameworkSupport::DimFractionRoundOffTypeConstants TGFrameworkSupport::DimStyle::GetAngularToleranceFractionRoundOff ( ) {
    enum DimFractionRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0xff, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(637)
inline void TGFrameworkSupport::DimStyle::PutSecondaryLinearToleranceUnits ( enum DimLinearUnitConstants _arg1 ) {
    _com_dispatch_method(this, 0x100, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(638)
inline enum TGFrameworkSupport::DimLinearUnitConstants TGFrameworkSupport::DimStyle::GetSecondaryLinearToleranceUnits ( ) {
    enum DimLinearUnitConstants _result;
    _com_dispatch_method(this, 0x100, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(639)
inline void TGFrameworkSupport::DimStyle::PutSecondaryLinearToleranceRoundOffType ( enum DimRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x101, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(640)
inline enum TGFrameworkSupport::DimRoundOffTypeConstants TGFrameworkSupport::DimStyle::GetSecondaryLinearToleranceRoundOffType ( ) {
    enum DimRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0x101, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(641)
inline void TGFrameworkSupport::DimStyle::PutSecondaryLinearToleranceDecimalRoundOff ( enum DimDecimalRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x102, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(642)
inline enum TGFrameworkSupport::DimDecimalRoundOffTypeConstants TGFrameworkSupport::DimStyle::GetSecondaryLinearToleranceDecimalRoundOff ( ) {
    enum DimDecimalRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0x102, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(643)
inline void TGFrameworkSupport::DimStyle::PutSecondaryLinearToleranceFractionRoundOff ( enum DimFractionRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x103, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(644)
inline enum TGFrameworkSupport::DimFractionRoundOffTypeConstants TGFrameworkSupport::DimStyle::GetSecondaryLinearToleranceFractionRoundOff ( ) {
    enum DimFractionRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0x103, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(645)
inline void TGFrameworkSupport::DimStyle::PutSecondaryLinearToleranceUnitLabel ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x104, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(646)
inline _bstr_t TGFrameworkSupport::DimStyle::GetSecondaryLinearToleranceUnitLabel ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x104, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(647)
inline void TGFrameworkSupport::DimStyle::PutSecondaryLinearToleranceSubunitsLabel ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x105, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(648)
inline _bstr_t TGFrameworkSupport::DimStyle::GetSecondaryLinearToleranceSubunitsLabel ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x105, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(649)
inline void TGFrameworkSupport::DimStyle::PutSecondaryLinearToleranceMaximumSubunits ( int _arg1 ) {
    _com_dispatch_method(this, 0x106, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(650)
inline int TGFrameworkSupport::DimStyle::GetSecondaryLinearToleranceMaximumSubunits ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x106, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(651)
inline void TGFrameworkSupport::DimStyle::PutSecondaryLinearToleranceFractionSeparator ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x107, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(652)
inline _bstr_t TGFrameworkSupport::DimStyle::GetSecondaryLinearToleranceFractionSeparator ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x107, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(653)
inline void TGFrameworkSupport::DimStyle::PutSecondaryLinearFractionSeparator ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x108, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(654)
inline _bstr_t TGFrameworkSupport::DimStyle::GetSecondaryLinearFractionSeparator ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x108, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(655)
inline void TGFrameworkSupport::DimStyle::PutDualUnitPosition ( enum DimDualUnitPositionConstants _arg1 ) {
    _com_dispatch_method(this, 0x109, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(656)
inline enum TGFrameworkSupport::DimDualUnitPositionConstants TGFrameworkSupport::DimStyle::GetDualUnitPosition ( ) {
    enum DimDualUnitPositionConstants _result;
    _com_dispatch_method(this, 0x109, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(657)
inline void TGFrameworkSupport::DimStyle::PutDualUnitJustification ( enum TextHorizontalAlignmentConstants _arg1 ) {
    _com_dispatch_method(this, 0x10a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(658)
inline enum TGFrameworkSupport::TextHorizontalAlignmentConstants TGFrameworkSupport::DimStyle::GetDualUnitJustification ( ) {
    enum TextHorizontalAlignmentConstants _result;
    _com_dispatch_method(this, 0x10a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(659)
inline void TGFrameworkSupport::DimStyle::PutSmartDepthSlotThru ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x10b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(660)
inline _bstr_t TGFrameworkSupport::DimStyle::GetSmartDepthSlotThru ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x10b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(661)
inline void TGFrameworkSupport::DimStyle::PutSmartDepthSlotFinite ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x10c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(662)
inline _bstr_t TGFrameworkSupport::DimStyle::GetSmartDepthSlotFinite ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x10c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(663)
inline void TGFrameworkSupport::DimStyle::PutSlotCalloutSimple ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x10d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(664)
inline _bstr_t TGFrameworkSupport::DimStyle::GetSlotCalloutSimple ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x10d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(665)
inline void TGFrameworkSupport::DimStyle::PutSlotCalloutCounterbore ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x10e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(666)
inline _bstr_t TGFrameworkSupport::DimStyle::GetSlotCalloutCounterbore ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x10e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(667)
inline void TGFrameworkSupport::DimStyle::PutCoordinateTextOrientation ( enum DimTextOrientationConstants _arg1 ) {
    _com_dispatch_method(this, 0x10f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(668)
inline enum TGFrameworkSupport::DimTextOrientationConstants TGFrameworkSupport::DimStyle::GetCoordinateTextOrientation ( ) {
    enum DimTextOrientationConstants _result;
    _com_dispatch_method(this, 0x10f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(669)
inline void TGFrameworkSupport::DimStyle::PutEnableAutoJogForCoordinate ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x110, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(670)
inline VARIANT_BOOL TGFrameworkSupport::DimStyle::GetEnableAutoJogForCoordinate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x110, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(671)
inline void TGFrameworkSupport::DimStyle::PutAllowNegativeValueForCoordinate ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x111, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(672)
inline VARIANT_BOOL TGFrameworkSupport::DimStyle::GetAllowNegativeValueForCoordinate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x111, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(673)
inline void TGFrameworkSupport::DimStyle::PutAllowOriginValueChangeForCoordinate ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x112, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(674)
inline VARIANT_BOOL TGFrameworkSupport::DimStyle::GetAllowOriginValueChangeForCoordinate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x112, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(675)
inline void TGFrameworkSupport::DimStyle::PutShowOriginLineForCoordinate ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x113, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(676)
inline VARIANT_BOOL TGFrameworkSupport::DimStyle::GetShowOriginLineForCoordinate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x113, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(677)
inline void TGFrameworkSupport::DimStyle::PutOverlineExtension ( double _arg1 ) {
    _com_dispatch_method(this, 0x114, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(678)
inline double TGFrameworkSupport::DimStyle::GetOverlineExtension ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x114, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(679)
inline void TGFrameworkSupport::DimStyle::PutSuppressSymmetricDiameterSymbol ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x115, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(680)
inline VARIANT_BOOL TGFrameworkSupport::DimStyle::GetSuppressSymmetricDiameterSymbol ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x115, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(681)
inline void TGFrameworkSupport::DimStyle::PutUnderlineSymbolAndPrefix ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x116, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(682)
inline VARIANT_BOOL TGFrameworkSupport::DimStyle::GetUnderlineSymbolAndPrefix ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x116, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(683)
inline void TGFrameworkSupport::DimStyle::PutInitialStackPitch ( double _arg1 ) {
    _com_dispatch_method(this, 0x117, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(684)
inline double TGFrameworkSupport::DimStyle::GetInitialStackPitch ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x117, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(685)
inline void TGFrameworkSupport::DimStyle::PutHoleCalloutCounterdrill ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x118, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(686)
inline _bstr_t TGFrameworkSupport::DimStyle::GetHoleCalloutCounterdrill ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x118, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(687)
inline void TGFrameworkSupport::DimStyle::PutHoleCalloutCounterdrillThreaded ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x119, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(688)
inline _bstr_t TGFrameworkSupport::DimStyle::GetHoleCalloutCounterdrillThreaded ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x119, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(689)
inline void TGFrameworkSupport::DimStyle::PutPrimaryStackFraction ( enum DimStackFractionTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x11a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(690)
inline enum TGFrameworkSupport::DimStackFractionTypeConstants TGFrameworkSupport::DimStyle::GetPrimaryStackFraction ( ) {
    enum DimStackFractionTypeConstants _result;
    _com_dispatch_method(this, 0x11a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(691)
inline void TGFrameworkSupport::DimStyle::PutSecondaryStackFraction ( enum DimStackFractionTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x11b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(692)
inline enum TGFrameworkSupport::DimStackFractionTypeConstants TGFrameworkSupport::DimStyle::GetSecondaryStackFraction ( ) {
    enum DimStackFractionTypeConstants _result;
    _com_dispatch_method(this, 0x11b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(693)
inline void TGFrameworkSupport::DimStyle::PutPrimaryStackFractionSize ( enum DimStackFractionSizeConstants _arg1 ) {
    _com_dispatch_method(this, 0x11c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(694)
inline enum TGFrameworkSupport::DimStackFractionSizeConstants TGFrameworkSupport::DimStyle::GetPrimaryStackFractionSize ( ) {
    enum DimStackFractionSizeConstants _result;
    _com_dispatch_method(this, 0x11c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(695)
inline void TGFrameworkSupport::DimStyle::PutSecondaryStackFractionSize ( enum DimStackFractionSizeConstants _arg1 ) {
    _com_dispatch_method(this, 0x11d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(696)
inline enum TGFrameworkSupport::DimStackFractionSizeConstants TGFrameworkSupport::DimStyle::GetSecondaryStackFractionSize ( ) {
    enum DimStackFractionSizeConstants _result;
    _com_dispatch_method(this, 0x11d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(697)
inline void TGFrameworkSupport::DimStyle::PutShowHideReferenceGeometry ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x11f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(698)
inline VARIANT_BOOL TGFrameworkSupport::DimStyle::GetShowHideReferenceGeometry ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x11f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(699)
inline void TGFrameworkSupport::DimStyle::PutEnableAngularJog ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x120, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(700)
inline VARIANT_BOOL TGFrameworkSupport::DimStyle::GetEnableAngularJog ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x120, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// interface _IDimStyleAuto wrapper method implementations
//

#pragma implementation_key(701)
inline void TGFrameworkSupport::_IDimStyleAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(702)
inline _bstr_t TGFrameworkSupport::_IDimStyleAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(703)
inline void TGFrameworkSupport::_IDimStyleAuto::PutPrimaryUnits ( enum DimLinearUnitConstants val ) {
    HRESULT _hr = put_PrimaryUnits(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(704)
inline enum TGFrameworkSupport::DimLinearUnitConstants TGFrameworkSupport::_IDimStyleAuto::GetPrimaryUnits ( ) {
    enum DimLinearUnitConstants _result;
    HRESULT _hr = get_PrimaryUnits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(705)
inline void TGFrameworkSupport::_IDimStyleAuto::PutRoundOffType ( enum DimRoundOffTypeConstants val ) {
    HRESULT _hr = put_RoundOffType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(706)
inline enum TGFrameworkSupport::DimRoundOffTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetRoundOffType ( ) {
    enum DimRoundOffTypeConstants _result;
    HRESULT _hr = get_RoundOffType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(707)
inline void TGFrameworkSupport::_IDimStyleAuto::PutDelimiter ( enum DimDelimiterTypeConstants val ) {
    HRESULT _hr = put_Delimiter(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(708)
inline enum TGFrameworkSupport::DimDelimiterTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetDelimiter ( ) {
    enum DimDelimiterTypeConstants _result;
    HRESULT _hr = get_Delimiter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(709)
inline void TGFrameworkSupport::_IDimStyleAuto::PutPrimaryDecimalRoundOff ( enum DimDecimalRoundOffTypeConstants val ) {
    HRESULT _hr = put_PrimaryDecimalRoundOff(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(710)
inline enum TGFrameworkSupport::DimDecimalRoundOffTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetPrimaryDecimalRoundOff ( ) {
    enum DimDecimalRoundOffTypeConstants _result;
    HRESULT _hr = get_PrimaryDecimalRoundOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(711)
inline void TGFrameworkSupport::_IDimStyleAuto::PutPrimaryFractionRoundOff ( enum DimFractionRoundOffTypeConstants val ) {
    HRESULT _hr = put_PrimaryFractionRoundOff(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(712)
inline enum TGFrameworkSupport::DimFractionRoundOffTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetPrimaryFractionRoundOff ( ) {
    enum DimFractionRoundOffTypeConstants _result;
    HRESULT _hr = get_PrimaryFractionRoundOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(713)
inline void TGFrameworkSupport::_IDimStyleAuto::PutAngularUnits ( enum DimAngularUnitConstants val ) {
    HRESULT _hr = put_AngularUnits(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(714)
inline enum TGFrameworkSupport::DimAngularUnitConstants TGFrameworkSupport::_IDimStyleAuto::GetAngularUnits ( ) {
    enum DimAngularUnitConstants _result;
    HRESULT _hr = get_AngularUnits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(715)
inline void TGFrameworkSupport::_IDimStyleAuto::PutAngularDMSRoundOff ( enum DimDMSRoundOffTypeConstants val ) {
    HRESULT _hr = put_AngularDMSRoundOff(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(716)
inline enum TGFrameworkSupport::DimDMSRoundOffTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetAngularDMSRoundOff ( ) {
    enum DimDMSRoundOffTypeConstants _result;
    HRESULT _hr = get_AngularDMSRoundOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(717)
inline void TGFrameworkSupport::_IDimStyleAuto::PutAngularDecimalRoundOff ( enum DimDecimalRoundOffTypeConstants val ) {
    HRESULT _hr = put_AngularDecimalRoundOff(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(718)
inline enum TGFrameworkSupport::DimDecimalRoundOffTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetAngularDecimalRoundOff ( ) {
    enum DimDecimalRoundOffTypeConstants _result;
    HRESULT _hr = get_AngularDecimalRoundOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(719)
inline void TGFrameworkSupport::_IDimStyleAuto::PutAngularFractionRoundOff ( enum DimFractionRoundOffTypeConstants val ) {
    HRESULT _hr = put_AngularFractionRoundOff(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(720)
inline enum TGFrameworkSupport::DimFractionRoundOffTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetAngularFractionRoundOff ( ) {
    enum DimFractionRoundOffTypeConstants _result;
    HRESULT _hr = get_AngularFractionRoundOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(721)
inline void TGFrameworkSupport::_IDimStyleAuto::PutPrimaryLeadingZeros ( VARIANT_BOOL val ) {
    HRESULT _hr = put_PrimaryLeadingZeros(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(722)
inline VARIANT_BOOL TGFrameworkSupport::_IDimStyleAuto::GetPrimaryLeadingZeros ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_PrimaryLeadingZeros(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(723)
inline void TGFrameworkSupport::_IDimStyleAuto::PutPrimaryTrailingZeros ( VARIANT_BOOL val ) {
    HRESULT _hr = put_PrimaryTrailingZeros(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(724)
inline VARIANT_BOOL TGFrameworkSupport::_IDimStyleAuto::GetPrimaryTrailingZeros ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_PrimaryTrailingZeros(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(725)
inline void TGFrameworkSupport::_IDimStyleAuto::PutPrimaryUnitLabel ( _bstr_t val ) {
    HRESULT _hr = put_PrimaryUnitLabel(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(726)
inline _bstr_t TGFrameworkSupport::_IDimStyleAuto::GetPrimaryUnitLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PrimaryUnitLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(727)
inline void TGFrameworkSupport::_IDimStyleAuto::PutPrimarySubunitsLabel ( _bstr_t val ) {
    HRESULT _hr = put_PrimarySubunitsLabel(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(728)
inline _bstr_t TGFrameworkSupport::_IDimStyleAuto::GetPrimarySubunitsLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PrimarySubunitsLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(729)
inline void TGFrameworkSupport::_IDimStyleAuto::PutMaximumSubunits ( int val ) {
    HRESULT _hr = put_MaximumSubunits(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(730)
inline int TGFrameworkSupport::_IDimStyleAuto::GetMaximumSubunits ( ) {
    int _result = 0;
    HRESULT _hr = get_MaximumSubunits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(731)
inline void TGFrameworkSupport::_IDimStyleAuto::PutDualDisplay ( VARIANT_BOOL val ) {
    HRESULT _hr = put_DualDisplay(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(732)
inline VARIANT_BOOL TGFrameworkSupport::_IDimStyleAuto::GetDualDisplay ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DualDisplay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(733)
inline void TGFrameworkSupport::_IDimStyleAuto::PutSecondaryUnits ( enum DimLinearUnitConstants val ) {
    HRESULT _hr = put_SecondaryUnits(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(734)
inline enum TGFrameworkSupport::DimLinearUnitConstants TGFrameworkSupport::_IDimStyleAuto::GetSecondaryUnits ( ) {
    enum DimLinearUnitConstants _result;
    HRESULT _hr = get_SecondaryUnits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(735)
inline void TGFrameworkSupport::_IDimStyleAuto::PutSecondaryUnitRoundOff ( enum DimRoundOffTypeConstants val ) {
    HRESULT _hr = put_SecondaryUnitRoundOff(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(736)
inline enum TGFrameworkSupport::DimRoundOffTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetSecondaryUnitRoundOff ( ) {
    enum DimRoundOffTypeConstants _result;
    HRESULT _hr = get_SecondaryUnitRoundOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(737)
inline void TGFrameworkSupport::_IDimStyleAuto::PutSecondaryDecimalRoundOff ( enum DimDecimalRoundOffTypeConstants val ) {
    HRESULT _hr = put_SecondaryDecimalRoundOff(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(738)
inline enum TGFrameworkSupport::DimDecimalRoundOffTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetSecondaryDecimalRoundOff ( ) {
    enum DimDecimalRoundOffTypeConstants _result;
    HRESULT _hr = get_SecondaryDecimalRoundOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(739)
inline void TGFrameworkSupport::_IDimStyleAuto::PutSecondaryFractionRoundOff ( enum DimFractionRoundOffTypeConstants val ) {
    HRESULT _hr = put_SecondaryFractionRoundOff(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(740)
inline enum TGFrameworkSupport::DimFractionRoundOffTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetSecondaryFractionRoundOff ( ) {
    enum DimFractionRoundOffTypeConstants _result;
    HRESULT _hr = get_SecondaryFractionRoundOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(741)
inline void TGFrameworkSupport::_IDimStyleAuto::PutSecondaryLeadingZeros ( VARIANT_BOOL val ) {
    HRESULT _hr = put_SecondaryLeadingZeros(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(742)
inline VARIANT_BOOL TGFrameworkSupport::_IDimStyleAuto::GetSecondaryLeadingZeros ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SecondaryLeadingZeros(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(743)
inline void TGFrameworkSupport::_IDimStyleAuto::PutSecondaryTrailingZeros ( VARIANT_BOOL val ) {
    HRESULT _hr = put_SecondaryTrailingZeros(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(744)
inline VARIANT_BOOL TGFrameworkSupport::_IDimStyleAuto::GetSecondaryTrailingZeros ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SecondaryTrailingZeros(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(745)
inline void TGFrameworkSupport::_IDimStyleAuto::PutSecondaryUnitLabel ( _bstr_t val ) {
    HRESULT _hr = put_SecondaryUnitLabel(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(746)
inline _bstr_t TGFrameworkSupport::_IDimStyleAuto::GetSecondaryUnitLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SecondaryUnitLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(747)
inline void TGFrameworkSupport::_IDimStyleAuto::PutSecondarySubunitsLabel ( _bstr_t val ) {
    HRESULT _hr = put_SecondarySubunitsLabel(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(748)
inline _bstr_t TGFrameworkSupport::_IDimStyleAuto::GetSecondarySubunitsLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SecondarySubunitsLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(749)
inline void TGFrameworkSupport::_IDimStyleAuto::PutHeight ( double val ) {
    HRESULT _hr = put_Height(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(750)
inline double TGFrameworkSupport::_IDimStyleAuto::GetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(751)
inline void TGFrameworkSupport::_IDimStyleAuto::PutRatio ( double val ) {
    HRESULT _hr = put_Ratio(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(752)
inline double TGFrameworkSupport::_IDimStyleAuto::GetRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_Ratio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(753)
inline void TGFrameworkSupport::_IDimStyleAuto::PutTextWeight ( double val ) {
    HRESULT _hr = put_TextWeight(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(754)
inline double TGFrameworkSupport::_IDimStyleAuto::GetTextWeight ( ) {
    double _result = 0;
    HRESULT _hr = get_TextWeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(755)
inline void TGFrameworkSupport::_IDimStyleAuto::PutFont ( _bstr_t val ) {
    HRESULT _hr = put_Font(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(756)
inline _bstr_t TGFrameworkSupport::_IDimStyleAuto::GetFont ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Font(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(757)
inline void TGFrameworkSupport::_IDimStyleAuto::PutFontStyle ( enum DimTextFontStyleConstants val ) {
    HRESULT _hr = put_FontStyle(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(758)
inline enum TGFrameworkSupport::DimTextFontStyleConstants TGFrameworkSupport::_IDimStyleAuto::GetFontStyle ( ) {
    enum DimTextFontStyleConstants _result;
    HRESULT _hr = get_FontStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(759)
inline void TGFrameworkSupport::_IDimStyleAuto::PutTextOrientation ( enum DimTextOrientationConstants val ) {
    HRESULT _hr = put_TextOrientation(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(760)
inline enum TGFrameworkSupport::DimTextOrientationConstants TGFrameworkSupport::_IDimStyleAuto::GetTextOrientation ( ) {
    enum DimTextOrientationConstants _result;
    HRESULT _hr = get_TextOrientation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(761)
inline void TGFrameworkSupport::_IDimStyleAuto::PutTextPosition ( enum DimTextPositionConstants val ) {
    HRESULT _hr = put_TextPosition(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(762)
inline enum TGFrameworkSupport::DimTextPositionConstants TGFrameworkSupport::_IDimStyleAuto::GetTextPosition ( ) {
    enum DimTextPositionConstants _result;
    HRESULT _hr = get_TextPosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(763)
inline void TGFrameworkSupport::_IDimStyleAuto::PutLimitTextArrangement ( enum DimLimitTextArrangmentConstants val ) {
    HRESULT _hr = put_LimitTextArrangement(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(764)
inline enum TGFrameworkSupport::DimLimitTextArrangmentConstants TGFrameworkSupport::_IDimStyleAuto::GetLimitTextArrangement ( ) {
    enum DimLimitTextArrangmentConstants _result;
    HRESULT _hr = get_LimitTextArrangement(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(765)
inline void TGFrameworkSupport::_IDimStyleAuto::PutToleranceHeightRatio ( double val ) {
    HRESULT _hr = put_ToleranceHeightRatio(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(766)
inline double TGFrameworkSupport::_IDimStyleAuto::GetToleranceHeightRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_ToleranceHeightRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(767)
inline void TGFrameworkSupport::_IDimStyleAuto::PutToleranceWeight ( double val ) {
    HRESULT _hr = put_ToleranceWeight(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(768)
inline double TGFrameworkSupport::_IDimStyleAuto::GetToleranceWeight ( ) {
    double _result = 0;
    HRESULT _hr = get_ToleranceWeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(769)
inline void TGFrameworkSupport::_IDimStyleAuto::PutNTSSymbol ( enum DimNTSTypeConstants val ) {
    HRESULT _hr = put_NTSSymbol(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(770)
inline enum TGFrameworkSupport::DimNTSTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetNTSSymbol ( ) {
    enum DimNTSTypeConstants _result;
    HRESULT _hr = get_NTSSymbol(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(771)
inline void TGFrameworkSupport::_IDimStyleAuto::PutTerminatorType ( enum DimTermTypeConstants val ) {
    HRESULT _hr = put_TerminatorType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(772)
inline enum TGFrameworkSupport::DimTermTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetTerminatorType ( ) {
    enum DimTermTypeConstants _result;
    HRESULT _hr = get_TerminatorType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(773)
inline void TGFrameworkSupport::_IDimStyleAuto::PutTerminatorDisplay ( enum DimTermDisplayTypeConstants val ) {
    HRESULT _hr = put_TerminatorDisplay(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(774)
inline enum TGFrameworkSupport::DimTermDisplayTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetTerminatorDisplay ( ) {
    enum DimTermDisplayTypeConstants _result;
    HRESULT _hr = get_TerminatorDisplay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(775)
inline void TGFrameworkSupport::_IDimStyleAuto::PutOriginTerminatorType ( enum DimTermTypeConstants val ) {
    HRESULT _hr = put_OriginTerminatorType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(776)
inline enum TGFrameworkSupport::DimTermTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetOriginTerminatorType ( ) {
    enum DimTermTypeConstants _result;
    HRESULT _hr = get_OriginTerminatorType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(777)
inline void TGFrameworkSupport::_IDimStyleAuto::PutFreeSpaceTerminatorType ( enum DimTermTypeConstants val ) {
    HRESULT _hr = put_FreeSpaceTerminatorType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(778)
inline enum TGFrameworkSupport::DimTermTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetFreeSpaceTerminatorType ( ) {
    enum DimTermTypeConstants _result;
    HRESULT _hr = get_FreeSpaceTerminatorType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(779)
inline void TGFrameworkSupport::_IDimStyleAuto::PutDatumTerminatorType ( enum DimDatumTermTypeConstants val ) {
    HRESULT _hr = put_DatumTerminatorType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(780)
inline enum TGFrameworkSupport::DimDatumTermTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetDatumTerminatorType ( ) {
    enum DimDatumTermTypeConstants _result;
    HRESULT _hr = get_DatumTerminatorType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(781)
inline void TGFrameworkSupport::_IDimStyleAuto::PutTerminatorSize ( double val ) {
    HRESULT _hr = put_TerminatorSize(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(782)
inline double TGFrameworkSupport::_IDimStyleAuto::GetTerminatorSize ( ) {
    double _result = 0;
    HRESULT _hr = get_TerminatorSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(783)
inline void TGFrameworkSupport::_IDimStyleAuto::PutTerminatorInsideLimit ( double val ) {
    HRESULT _hr = put_TerminatorInsideLimit(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(784)
inline double TGFrameworkSupport::_IDimStyleAuto::GetTerminatorInsideLimit ( ) {
    double _result = 0;
    HRESULT _hr = get_TerminatorInsideLimit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(785)
inline void TGFrameworkSupport::_IDimStyleAuto::PutLineWidth ( double val ) {
    HRESULT _hr = put_LineWidth(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(786)
inline double TGFrameworkSupport::_IDimStyleAuto::GetLineWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_LineWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(787)
inline void TGFrameworkSupport::_IDimStyleAuto::PutProjectionExtensionGap ( double val ) {
    HRESULT _hr = put_ProjectionExtensionGap(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(788)
inline double TGFrameworkSupport::_IDimStyleAuto::GetProjectionExtensionGap ( ) {
    double _result = 0;
    HRESULT _hr = get_ProjectionExtensionGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(789)
inline void TGFrameworkSupport::_IDimStyleAuto::PutProjectionOffsetGap ( double val ) {
    HRESULT _hr = put_ProjectionOffsetGap(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(790)
inline double TGFrameworkSupport::_IDimStyleAuto::GetProjectionOffsetGap ( ) {
    double _result = 0;
    HRESULT _hr = get_ProjectionOffsetGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(791)
inline void TGFrameworkSupport::_IDimStyleAuto::PutProjectionOffsetGapAlignment ( VARIANT_BOOL val ) {
    HRESULT _hr = put_ProjectionOffsetGapAlignment(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(792)
inline VARIANT_BOOL TGFrameworkSupport::_IDimStyleAuto::GetProjectionOffsetGapAlignment ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ProjectionOffsetGapAlignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(793)
inline void TGFrameworkSupport::_IDimStyleAuto::PutProjectionAngle ( double val ) {
    HRESULT _hr = put_ProjectionAngle(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(794)
inline double TGFrameworkSupport::_IDimStyleAuto::GetProjectionAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_ProjectionAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(795)
inline void TGFrameworkSupport::_IDimStyleAuto::PutLineConnect ( VARIANT_BOOL val ) {
    HRESULT _hr = put_LineConnect(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(796)
inline VARIANT_BOOL TGFrameworkSupport::_IDimStyleAuto::GetLineConnect ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_LineConnect(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(797)
inline void TGFrameworkSupport::_IDimStyleAuto::PutStackPitch ( double val ) {
    HRESULT _hr = put_StackPitch(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(798)
inline double TGFrameworkSupport::_IDimStyleAuto::GetStackPitch ( ) {
    double _result = 0;
    HRESULT _hr = get_StackPitch(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(799)
inline void TGFrameworkSupport::_IDimStyleAuto::PutLeaderLineLength ( double val ) {
    HRESULT _hr = put_LeaderLineLength(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(800)
inline double TGFrameworkSupport::_IDimStyleAuto::GetLeaderLineLength ( ) {
    double _result = 0;
    HRESULT _hr = get_LeaderLineLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(801)
inline void TGFrameworkSupport::_IDimStyleAuto::PutCoordinateAutoJog ( VARIANT_BOOL val ) {
    HRESULT _hr = put_CoordinateAutoJog(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(802)
inline VARIANT_BOOL TGFrameworkSupport::_IDimStyleAuto::GetCoordinateAutoJog ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CoordinateAutoJog(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(803)
inline void TGFrameworkSupport::_IDimStyleAuto::PutCoordinateStackPitch ( double val ) {
    HRESULT _hr = put_CoordinateStackPitch(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(804)
inline double TGFrameworkSupport::_IDimStyleAuto::GetCoordinateStackPitch ( ) {
    double _result = 0;
    HRESULT _hr = get_CoordinateStackPitch(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(805)
inline void TGFrameworkSupport::_IDimStyleAuto::PutCommonOrigin ( enum DimCommonOriginTypeConstants val ) {
    HRESULT _hr = put_CommonOrigin(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(806)
inline enum TGFrameworkSupport::DimCommonOriginTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetCommonOrigin ( ) {
    enum DimCommonOriginTypeConstants _result;
    HRESULT _hr = get_CommonOrigin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(807)
inline void TGFrameworkSupport::_IDimStyleAuto::PutCoordinateTextPosition ( enum DimCoordTextPositionConstants val ) {
    HRESULT _hr = put_CoordinateTextPosition(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(808)
inline enum TGFrameworkSupport::DimCoordTextPositionConstants TGFrameworkSupport::_IDimStyleAuto::GetCoordinateTextPosition ( ) {
    enum DimCoordTextPositionConstants _result;
    HRESULT _hr = get_CoordinateTextPosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(809)
inline void TGFrameworkSupport::_IDimStyleAuto::PutSymbolPosition ( enum DimSymbolPositionConstants val ) {
    HRESULT _hr = put_SymbolPosition(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(810)
inline enum TGFrameworkSupport::DimSymbolPositionConstants TGFrameworkSupport::_IDimStyleAuto::GetSymbolPosition ( ) {
    enum DimSymbolPositionConstants _result;
    HRESULT _hr = get_SymbolPosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(811)
inline void TGFrameworkSupport::_IDimStyleAuto::PutAutoSuppressDiameter ( VARIANT_BOOL val ) {
    HRESULT _hr = put_AutoSuppressDiameter(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(812)
inline VARIANT_BOOL TGFrameworkSupport::_IDimStyleAuto::GetAutoSuppressDiameter ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AutoSuppressDiameter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(813)
inline void TGFrameworkSupport::_IDimStyleAuto::PutDimensionScaleMode ( enum DimScaleModeConstants val ) {
    HRESULT _hr = put_DimensionScaleMode(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(814)
inline enum TGFrameworkSupport::DimScaleModeConstants TGFrameworkSupport::_IDimStyleAuto::GetDimensionScaleMode ( ) {
    enum DimScaleModeConstants _result;
    HRESULT _hr = get_DimensionScaleMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(815)
inline void TGFrameworkSupport::_IDimStyleAuto::PutDimensionScale ( double val ) {
    HRESULT _hr = put_DimensionScale(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(816)
inline double TGFrameworkSupport::_IDimStyleAuto::GetDimensionScale ( ) {
    double _result = 0;
    HRESULT _hr = get_DimensionScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(817)
inline void TGFrameworkSupport::_IDimStyleAuto::PutErrorColor ( long val ) {
    HRESULT _hr = put_ErrorColor(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(818)
inline long TGFrameworkSupport::_IDimStyleAuto::GetErrorColor ( ) {
    long _result = 0;
    HRESULT _hr = get_ErrorColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(819)
inline void TGFrameworkSupport::_IDimStyleAuto::PutDrivingColor ( long val ) {
    HRESULT _hr = put_DrivingColor(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(820)
inline long TGFrameworkSupport::_IDimStyleAuto::GetDrivingColor ( ) {
    long _result = 0;
    HRESULT _hr = get_DrivingColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(821)
inline void TGFrameworkSupport::_IDimStyleAuto::PutDrivenColor ( long val ) {
    HRESULT _hr = put_DrivenColor(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(822)
inline long TGFrameworkSupport::_IDimStyleAuto::GetDrivenColor ( ) {
    long _result = 0;
    HRESULT _hr = get_DrivenColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(823)
inline void TGFrameworkSupport::_IDimStyleAuto::PutAutoCenterLine ( VARIANT_BOOL val ) {
    HRESULT _hr = put_AutoCenterLine(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(824)
inline VARIANT_BOOL TGFrameworkSupport::_IDimStyleAuto::GetAutoCenterLine ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AutoCenterLine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(825)
inline void TGFrameworkSupport::_IDimStyleAuto::PutAutoCenterProjectionLine ( VARIANT_BOOL val ) {
    HRESULT _hr = put_AutoCenterProjectionLine(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(826)
inline VARIANT_BOOL TGFrameworkSupport::_IDimStyleAuto::GetAutoCenterProjectionLine ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AutoCenterProjectionLine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(827)
inline void TGFrameworkSupport::_IDimStyleAuto::PutProjectionLineDisplay ( enum DimProjDisplayTypeConstants val ) {
    HRESULT _hr = put_ProjectionLineDisplay(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(828)
inline enum TGFrameworkSupport::DimProjDisplayTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetProjectionLineDisplay ( ) {
    enum DimProjDisplayTypeConstants _result;
    HRESULT _hr = get_ProjectionLineDisplay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(829)
inline void TGFrameworkSupport::_IDimStyleAuto::PutProjectionLineDisplayForIntersectionPoint ( enum DimProjDisplayTypeConstants val ) {
    HRESULT _hr = put_ProjectionLineDisplayForIntersectionPoint(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(830)
inline enum TGFrameworkSupport::DimProjDisplayTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetProjectionLineDisplayForIntersectionPoint ( ) {
    enum DimProjDisplayTypeConstants _result;
    HRESULT _hr = get_ProjectionLineDisplayForIntersectionPoint(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(831)
inline void TGFrameworkSupport::_IDimStyleAuto::PutTextClearanceGap ( double val ) {
    HRESULT _hr = put_TextClearanceGap(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(832)
inline double TGFrameworkSupport::_IDimStyleAuto::GetTextClearanceGap ( ) {
    double _result = 0;
    HRESULT _hr = get_TextClearanceGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(833)
inline void TGFrameworkSupport::_IDimStyleAuto::PutDualModeVerticalGap ( double val ) {
    HRESULT _hr = put_DualModeVerticalGap(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(834)
inline double TGFrameworkSupport::_IDimStyleAuto::GetDualModeVerticalGap ( ) {
    double _result = 0;
    HRESULT _hr = get_DualModeVerticalGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(835)
inline void TGFrameworkSupport::_IDimStyleAuto::PutCharacterPitch ( double val ) {
    HRESULT _hr = put_CharacterPitch(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(836)
inline double TGFrameworkSupport::_IDimStyleAuto::GetCharacterPitch ( ) {
    double _result = 0;
    HRESULT _hr = get_CharacterPitch(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(837)
inline void TGFrameworkSupport::_IDimStyleAuto::PutLineSpacing ( double val ) {
    HRESULT _hr = put_LineSpacing(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(838)
inline double TGFrameworkSupport::_IDimStyleAuto::GetLineSpacing ( ) {
    double _result = 0;
    HRESULT _hr = get_LineSpacing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(839)
inline void TGFrameworkSupport::_IDimStyleAuto::PutAboveGap ( double val ) {
    HRESULT _hr = put_AboveGap(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(840)
inline double TGFrameworkSupport::_IDimStyleAuto::GetAboveGap ( ) {
    double _result = 0;
    HRESULT _hr = get_AboveGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(841)
inline void TGFrameworkSupport::_IDimStyleAuto::PutHorizontalToleranceGap ( double val ) {
    HRESULT _hr = put_HorizontalToleranceGap(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(842)
inline double TGFrameworkSupport::_IDimStyleAuto::GetHorizontalToleranceGap ( ) {
    double _result = 0;
    HRESULT _hr = get_HorizontalToleranceGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(843)
inline void TGFrameworkSupport::_IDimStyleAuto::PutVerticalToleranceGap ( double val ) {
    HRESULT _hr = put_VerticalToleranceGap(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(844)
inline double TGFrameworkSupport::_IDimStyleAuto::GetVerticalToleranceGap ( ) {
    double _result = 0;
    HRESULT _hr = get_VerticalToleranceGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(845)
inline void TGFrameworkSupport::_IDimStyleAuto::PutVerticalLimitsGap ( double val ) {
    HRESULT _hr = put_VerticalLimitsGap(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(846)
inline double TGFrameworkSupport::_IDimStyleAuto::GetVerticalLimitsGap ( ) {
    double _result = 0;
    HRESULT _hr = get_VerticalLimitsGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(847)
inline void TGFrameworkSupport::_IDimStyleAuto::PutHorizontalBoxGap ( double val ) {
    HRESULT _hr = put_HorizontalBoxGap(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(848)
inline double TGFrameworkSupport::_IDimStyleAuto::GetHorizontalBoxGap ( ) {
    double _result = 0;
    HRESULT _hr = get_HorizontalBoxGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(849)
inline void TGFrameworkSupport::_IDimStyleAuto::PutVerticalBoxGap ( double val ) {
    HRESULT _hr = put_VerticalBoxGap(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(850)
inline double TGFrameworkSupport::_IDimStyleAuto::GetVerticalBoxGap ( ) {
    double _result = 0;
    HRESULT _hr = get_VerticalBoxGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(851)
inline void TGFrameworkSupport::_IDimStyleAuto::PutPrefixSuffixGap ( double val ) {
    HRESULT _hr = put_PrefixSuffixGap(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(852)
inline double TGFrameworkSupport::_IDimStyleAuto::GetPrefixSuffixGap ( ) {
    double _result = 0;
    HRESULT _hr = get_PrefixSuffixGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(853)
inline void TGFrameworkSupport::_IDimStyleAuto::PutSymbolGap ( double val ) {
    HRESULT _hr = put_SymbolGap(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(854)
inline double TGFrameworkSupport::_IDimStyleAuto::GetSymbolGap ( ) {
    double _result = 0;
    HRESULT _hr = get_SymbolGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(855)
inline void TGFrameworkSupport::_IDimStyleAuto::PutMaximumViewAngle ( double val ) {
    HRESULT _hr = put_MaximumViewAngle(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(856)
inline double TGFrameworkSupport::_IDimStyleAuto::GetMaximumViewAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumViewAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(857)
inline void TGFrameworkSupport::_IDimStyleAuto::PutProjectionToleranceZonePosition ( enum DimProjTolZonePositionConstants val ) {
    HRESULT _hr = put_ProjectionToleranceZonePosition(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(858)
inline enum TGFrameworkSupport::DimProjTolZonePositionConstants TGFrameworkSupport::_IDimStyleAuto::GetProjectionToleranceZonePosition ( ) {
    enum DimProjTolZonePositionConstants _result;
    HRESULT _hr = get_ProjectionToleranceZonePosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(859)
inline void TGFrameworkSupport::_IDimStyleAuto::PutDatumFrameDashes ( VARIANT_BOOL val ) {
    HRESULT _hr = put_DatumFrameDashes(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(860)
inline VARIANT_BOOL TGFrameworkSupport::_IDimStyleAuto::GetDatumFrameDashes ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DatumFrameDashes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(861)
inline void TGFrameworkSupport::_IDimStyleAuto::PutViewTextRatio ( double val ) {
    HRESULT _hr = put_ViewTextRatio(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(862)
inline double TGFrameworkSupport::_IDimStyleAuto::GetViewTextRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_ViewTextRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(863)
inline void TGFrameworkSupport::_IDimStyleAuto::PutViewTerminatorRatio ( double val ) {
    HRESULT _hr = put_ViewTerminatorRatio(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(864)
inline double TGFrameworkSupport::_IDimStyleAuto::GetViewTerminatorRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_ViewTerminatorRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(865)
inline void TGFrameworkSupport::_IDimStyleAuto::PutViewLineWidth ( double val ) {
    HRESULT _hr = put_ViewLineWidth(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(866)
inline double TGFrameworkSupport::_IDimStyleAuto::GetViewLineWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_ViewLineWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(867)
inline void TGFrameworkSupport::_IDimStyleAuto::PutViewLineType ( _bstr_t val ) {
    HRESULT _hr = put_ViewLineType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(868)
inline _bstr_t TGFrameworkSupport::_IDimStyleAuto::GetViewLineType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ViewLineType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(869)
inline void TGFrameworkSupport::_IDimStyleAuto::PutViewCuttingPlaneLineDisplay ( enum DimViewCuttingPlaneDisplayTypeConstants val ) {
    HRESULT _hr = put_ViewCuttingPlaneLineDisplay(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(870)
inline enum TGFrameworkSupport::DimViewCuttingPlaneDisplayTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetViewCuttingPlaneLineDisplay ( ) {
    enum DimViewCuttingPlaneDisplayTypeConstants _result;
    HRESULT _hr = get_ViewCuttingPlaneLineDisplay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(871)
inline void TGFrameworkSupport::_IDimStyleAuto::PutViewPlaneLineDisplay ( enum DimViewPlaneDisplayTypeConstants val ) {
    HRESULT _hr = put_ViewPlaneLineDisplay(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(872)
inline enum TGFrameworkSupport::DimViewPlaneDisplayTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetViewPlaneLineDisplay ( ) {
    enum DimViewPlaneDisplayTypeConstants _result;
    HRESULT _hr = get_ViewPlaneLineDisplay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(873)
inline void TGFrameworkSupport::_IDimStyleAuto::PutOffsetLeaderType ( enum DimOffsetLeaderTypeConstants val ) {
    HRESULT _hr = put_OffsetLeaderType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(874)
inline enum TGFrameworkSupport::DimOffsetLeaderTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetOffsetLeaderType ( ) {
    enum DimOffsetLeaderTypeConstants _result;
    HRESULT _hr = get_OffsetLeaderType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(875)
inline void TGFrameworkSupport::_IDimStyleAuto::PutSecondaryToleranceEquivalent ( VARIANT_BOOL val ) {
    HRESULT _hr = put_SecondaryToleranceEquivalent(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(876)
inline VARIANT_BOOL TGFrameworkSupport::_IDimStyleAuto::GetSecondaryToleranceEquivalent ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SecondaryToleranceEquivalent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(877)
inline void TGFrameworkSupport::_IDimStyleAuto::PutCenterLineType ( _bstr_t val ) {
    HRESULT _hr = put_CenterLineType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(878)
inline _bstr_t TGFrameworkSupport::_IDimStyleAuto::GetCenterLineType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CenterLineType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(879)
inline void TGFrameworkSupport::_IDimStyleAuto::PutCenterMarkSize ( double val ) {
    HRESULT _hr = put_CenterMarkSize(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(880)
inline double TGFrameworkSupport::_IDimStyleAuto::GetCenterMarkSize ( ) {
    double _result = 0;
    HRESULT _hr = get_CenterMarkSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(881)
inline void TGFrameworkSupport::_IDimStyleAuto::PutAutoPhase ( VARIANT_BOOL val ) {
    HRESULT _hr = put_AutoPhase(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(882)
inline VARIANT_BOOL TGFrameworkSupport::_IDimStyleAuto::GetAutoPhase ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AutoPhase(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(883)
inline HRESULT TGFrameworkSupport::_IDimStyleAuto::UseActiveStyle ( ) {
    HRESULT _hr = raw_UseActiveStyle();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(884)
inline void TGFrameworkSupport::_IDimStyleAuto::PutRoundUp ( enum DimRoundUpTypeConstants val ) {
    HRESULT _hr = put_RoundUp(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(885)
inline enum TGFrameworkSupport::DimRoundUpTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetRoundUp ( ) {
    enum DimRoundUpTypeConstants _result;
    HRESULT _hr = get_RoundUp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(886)
inline void TGFrameworkSupport::_IDimStyleAuto::PutSecondaryLinearRoundOffType ( enum DimRoundOffTypeConstants val ) {
    HRESULT _hr = put_SecondaryLinearRoundOffType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(887)
inline enum TGFrameworkSupport::DimRoundOffTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetSecondaryLinearRoundOffType ( ) {
    enum DimRoundOffTypeConstants _result;
    HRESULT _hr = get_SecondaryLinearRoundOffType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(888)
inline void TGFrameworkSupport::_IDimStyleAuto::PutAngularRoundOffType ( enum DimRoundOffTypeConstants val ) {
    HRESULT _hr = put_AngularRoundOffType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(889)
inline enum TGFrameworkSupport::DimRoundOffTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetAngularRoundOffType ( ) {
    enum DimRoundOffTypeConstants _result;
    HRESULT _hr = get_AngularRoundOffType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(890)
inline void TGFrameworkSupport::_IDimStyleAuto::PutCenterMarkExtension ( double val ) {
    HRESULT _hr = put_CenterMarkExtension(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(891)
inline double TGFrameworkSupport::_IDimStyleAuto::GetCenterMarkExtension ( ) {
    double _result = 0;
    HRESULT _hr = get_CenterMarkExtension(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(892)
inline void TGFrameworkSupport::_IDimStyleAuto::PutChamferUse45DegreeCharacter ( VARIANT_BOOL val ) {
    HRESULT _hr = put_ChamferUse45DegreeCharacter(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(893)
inline VARIANT_BOOL TGFrameworkSupport::_IDimStyleAuto::GetChamferUse45DegreeCharacter ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ChamferUse45DegreeCharacter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(894)
inline void TGFrameworkSupport::_IDimStyleAuto::PutSmartDepthHoleThru ( _bstr_t val ) {
    HRESULT _hr = put_SmartDepthHoleThru(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(895)
inline _bstr_t TGFrameworkSupport::_IDimStyleAuto::GetSmartDepthHoleThru ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SmartDepthHoleThru(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(896)
inline void TGFrameworkSupport::_IDimStyleAuto::PutSmartDepthHoleFinite ( _bstr_t val ) {
    HRESULT _hr = put_SmartDepthHoleFinite(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(897)
inline _bstr_t TGFrameworkSupport::_IDimStyleAuto::GetSmartDepthHoleFinite ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SmartDepthHoleFinite(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(898)
inline void TGFrameworkSupport::_IDimStyleAuto::PutSmartDepthThreadThru ( _bstr_t val ) {
    HRESULT _hr = put_SmartDepthThreadThru(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(899)
inline _bstr_t TGFrameworkSupport::_IDimStyleAuto::GetSmartDepthThreadThru ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SmartDepthThreadThru(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(900)
inline void TGFrameworkSupport::_IDimStyleAuto::PutSmartDepthThreadFinite ( _bstr_t val ) {
    HRESULT _hr = put_SmartDepthThreadFinite(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(901)
inline _bstr_t TGFrameworkSupport::_IDimStyleAuto::GetSmartDepthThreadFinite ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SmartDepthThreadFinite(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(902)
inline void TGFrameworkSupport::_IDimStyleAuto::PutLowerCaseMultiplicationSymbol ( VARIANT_BOOL val ) {
    HRESULT _hr = put_LowerCaseMultiplicationSymbol(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(903)
inline VARIANT_BOOL TGFrameworkSupport::_IDimStyleAuto::GetLowerCaseMultiplicationSymbol ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_LowerCaseMultiplicationSymbol(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(904)
inline void TGFrameworkSupport::_IDimStyleAuto::PutHoleCalloutSimple ( _bstr_t val ) {
    HRESULT _hr = put_HoleCalloutSimple(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(905)
inline _bstr_t TGFrameworkSupport::_IDimStyleAuto::GetHoleCalloutSimple ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HoleCalloutSimple(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(906)
inline void TGFrameworkSupport::_IDimStyleAuto::PutHoleCalloutCounterbore ( _bstr_t val ) {
    HRESULT _hr = put_HoleCalloutCounterbore(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(907)
inline _bstr_t TGFrameworkSupport::_IDimStyleAuto::GetHoleCalloutCounterbore ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HoleCalloutCounterbore(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(908)
inline void TGFrameworkSupport::_IDimStyleAuto::PutHoleCalloutCountersink ( _bstr_t val ) {
    HRESULT _hr = put_HoleCalloutCountersink(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(909)
inline _bstr_t TGFrameworkSupport::_IDimStyleAuto::GetHoleCalloutCountersink ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HoleCalloutCountersink(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(910)
inline void TGFrameworkSupport::_IDimStyleAuto::PutHoleCalloutSimpleThreaded ( _bstr_t val ) {
    HRESULT _hr = put_HoleCalloutSimpleThreaded(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(911)
inline _bstr_t TGFrameworkSupport::_IDimStyleAuto::GetHoleCalloutSimpleThreaded ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HoleCalloutSimpleThreaded(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(912)
inline void TGFrameworkSupport::_IDimStyleAuto::PutHoleCalloutCounterboreThreaded ( _bstr_t val ) {
    HRESULT _hr = put_HoleCalloutCounterboreThreaded(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(913)
inline _bstr_t TGFrameworkSupport::_IDimStyleAuto::GetHoleCalloutCounterboreThreaded ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HoleCalloutCounterboreThreaded(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(914)
inline void TGFrameworkSupport::_IDimStyleAuto::PutHoleCalloutCountersinkThreaded ( _bstr_t val ) {
    HRESULT _hr = put_HoleCalloutCountersinkThreaded(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(915)
inline _bstr_t TGFrameworkSupport::_IDimStyleAuto::GetHoleCalloutCountersinkThreaded ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HoleCalloutCountersinkThreaded(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(916)
inline void TGFrameworkSupport::_IDimStyleAuto::PutApplyBreakLineGap ( VARIANT_BOOL val ) {
    HRESULT _hr = put_ApplyBreakLineGap(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(917)
inline VARIANT_BOOL TGFrameworkSupport::_IDimStyleAuto::GetApplyBreakLineGap ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ApplyBreakLineGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(918)
inline void TGFrameworkSupport::_IDimStyleAuto::PutTextAutoFillBackground ( VARIANT_BOOL val ) {
    HRESULT _hr = put_TextAutoFillBackground(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(919)
inline VARIANT_BOOL TGFrameworkSupport::_IDimStyleAuto::GetTextAutoFillBackground ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_TextAutoFillBackground(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(920)
inline void TGFrameworkSupport::_IDimStyleAuto::PutPulledOutTextOrientation ( enum DimTextOrientationConstants val ) {
    HRESULT _hr = put_PulledOutTextOrientation(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(921)
inline enum TGFrameworkSupport::DimTextOrientationConstants TGFrameworkSupport::_IDimStyleAuto::GetPulledOutTextOrientation ( ) {
    enum DimTextOrientationConstants _result;
    HRESULT _hr = get_PulledOutTextOrientation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(922)
inline void TGFrameworkSupport::_IDimStyleAuto::PutPulledOutTextPosition ( enum DimTextPositionConstants val ) {
    HRESULT _hr = put_PulledOutTextPosition(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(923)
inline enum TGFrameworkSupport::DimTextPositionConstants TGFrameworkSupport::_IDimStyleAuto::GetPulledOutTextPosition ( ) {
    enum DimTextPositionConstants _result;
    HRESULT _hr = get_PulledOutTextPosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(924)
inline void TGFrameworkSupport::_IDimStyleAuto::PutOverridePulledOutText ( VARIANT_BOOL val ) {
    HRESULT _hr = put_OverridePulledOutText(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(925)
inline VARIANT_BOOL TGFrameworkSupport::_IDimStyleAuto::GetOverridePulledOutText ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_OverridePulledOutText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(926)
inline void TGFrameworkSupport::_IDimStyleAuto::PutViewLineArrowOffset ( double val ) {
    HRESULT _hr = put_ViewLineArrowOffset(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(927)
inline double TGFrameworkSupport::_IDimStyleAuto::GetViewLineArrowOffset ( ) {
    double _result = 0;
    HRESULT _hr = get_ViewLineArrowOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(928)
inline void TGFrameworkSupport::_IDimStyleAuto::PutViewThickLineLength ( double val ) {
    HRESULT _hr = put_ViewThickLineLength(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(929)
inline double TGFrameworkSupport::_IDimStyleAuto::GetViewThickLineLength ( ) {
    double _result = 0;
    HRESULT _hr = get_ViewThickLineLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(930)
inline void TGFrameworkSupport::_IDimStyleAuto::PutOrigTerminatorSize ( double val ) {
    HRESULT _hr = put_OrigTerminatorSize(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(931)
inline double TGFrameworkSupport::_IDimStyleAuto::GetOrigTerminatorSize ( ) {
    double _result = 0;
    HRESULT _hr = get_OrigTerminatorSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(932)
inline void TGFrameworkSupport::_IDimStyleAuto::PutConnectorLineType ( _bstr_t val ) {
    HRESULT _hr = put_ConnectorLineType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(933)
inline _bstr_t TGFrameworkSupport::_IDimStyleAuto::GetConnectorLineType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ConnectorLineType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(934)
inline void TGFrameworkSupport::_IDimStyleAuto::PutConnectorColor ( long val ) {
    HRESULT _hr = put_ConnectorColor(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(935)
inline long TGFrameworkSupport::_IDimStyleAuto::GetConnectorColor ( ) {
    long _result = 0;
    HRESULT _hr = get_ConnectorColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(936)
inline void TGFrameworkSupport::_IDimStyleAuto::PutConnectorWidth ( double val ) {
    HRESULT _hr = put_ConnectorWidth(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(937)
inline double TGFrameworkSupport::_IDimStyleAuto::GetConnectorWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_ConnectorWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(938)
inline void TGFrameworkSupport::_IDimStyleAuto::PutFractionSeparator ( _bstr_t val ) {
    HRESULT _hr = put_FractionSeparator(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(939)
inline _bstr_t TGFrameworkSupport::_IDimStyleAuto::GetFractionSeparator ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FractionSeparator(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(940)
inline void TGFrameworkSupport::_IDimStyleAuto::PutHeightPMI ( double val ) {
    HRESULT _hr = put_HeightPMI(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(941)
inline double TGFrameworkSupport::_IDimStyleAuto::GetHeightPMI ( ) {
    double _result = 0;
    HRESULT _hr = get_HeightPMI(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(942)
inline void TGFrameworkSupport::_IDimStyleAuto::PutProjectionBreakGap ( double val ) {
    HRESULT _hr = put_ProjectionBreakGap(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(943)
inline double TGFrameworkSupport::_IDimStyleAuto::GetProjectionBreakGap ( ) {
    double _result = 0;
    HRESULT _hr = get_ProjectionBreakGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(944)
inline void TGFrameworkSupport::_IDimStyleAuto::PutSecondaryDelimiter ( enum DimDelimiterTypeConstants val ) {
    HRESULT _hr = put_SecondaryDelimiter(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(945)
inline enum TGFrameworkSupport::DimDelimiterTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetSecondaryDelimiter ( ) {
    enum DimDelimiterTypeConstants _result;
    HRESULT _hr = get_SecondaryDelimiter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(946)
inline void TGFrameworkSupport::_IDimStyleAuto::PutMatchPrimaryDelimiter ( VARIANT_BOOL val ) {
    HRESULT _hr = put_MatchPrimaryDelimiter(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(947)
inline VARIANT_BOOL TGFrameworkSupport::_IDimStyleAuto::GetMatchPrimaryDelimiter ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MatchPrimaryDelimiter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(948)
inline void TGFrameworkSupport::_IDimStyleAuto::PutInhibitZeroToleranceDisplay ( VARIANT_BOOL val ) {
    HRESULT _hr = put_InhibitZeroToleranceDisplay(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(949)
inline VARIANT_BOOL TGFrameworkSupport::_IDimStyleAuto::GetInhibitZeroToleranceDisplay ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_InhibitZeroToleranceDisplay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(950)
inline void TGFrameworkSupport::_IDimStyleAuto::PutAllAroundMultiplier ( double val ) {
    HRESULT _hr = put_AllAroundMultiplier(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(951)
inline double TGFrameworkSupport::_IDimStyleAuto::GetAllAroundMultiplier ( ) {
    double _result = 0;
    HRESULT _hr = get_AllAroundMultiplier(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(952)
inline void TGFrameworkSupport::_IDimStyleAuto::PutOverridePulledOutText2 ( VARIANT_BOOL val ) {
    HRESULT _hr = put_OverridePulledOutText2(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(953)
inline VARIANT_BOOL TGFrameworkSupport::_IDimStyleAuto::GetOverridePulledOutText2 ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_OverridePulledOutText2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(954)
inline void TGFrameworkSupport::_IDimStyleAuto::PutPulledOutText2Orientation ( enum DimTextOrientationConstants val ) {
    HRESULT _hr = put_PulledOutText2Orientation(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(955)
inline enum TGFrameworkSupport::DimTextOrientationConstants TGFrameworkSupport::_IDimStyleAuto::GetPulledOutText2Orientation ( ) {
    enum DimTextOrientationConstants _result;
    HRESULT _hr = get_PulledOutText2Orientation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(956)
inline void TGFrameworkSupport::_IDimStyleAuto::PutPulledOutText2Position ( enum DimTextPositionConstants val ) {
    HRESULT _hr = put_PulledOutText2Position(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(957)
inline enum TGFrameworkSupport::DimTextPositionConstants TGFrameworkSupport::_IDimStyleAuto::GetPulledOutText2Position ( ) {
    enum DimTextPositionConstants _result;
    HRESULT _hr = get_PulledOutText2Position(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(958)
inline void TGFrameworkSupport::_IDimStyleAuto::PutDisplayDegreeSymbolOnNumericTolerance ( VARIANT_BOOL val ) {
    HRESULT _hr = put_DisplayDegreeSymbolOnNumericTolerance(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(959)
inline VARIANT_BOOL TGFrameworkSupport::_IDimStyleAuto::GetDisplayDegreeSymbolOnNumericTolerance ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayDegreeSymbolOnNumericTolerance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(960)
inline void TGFrameworkSupport::_IDimStyleAuto::PutZeroInchesForFTIN ( VARIANT_BOOL val ) {
    HRESULT _hr = put_ZeroInchesForFTIN(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(961)
inline VARIANT_BOOL TGFrameworkSupport::_IDimStyleAuto::GetZeroInchesForFTIN ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ZeroInchesForFTIN(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(962)
inline void TGFrameworkSupport::_IDimStyleAuto::PutSymbolFont ( enum DimStyleSymbolFontConstants val ) {
    HRESULT _hr = put_SymbolFont(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(963)
inline enum TGFrameworkSupport::DimStyleSymbolFontConstants TGFrameworkSupport::_IDimStyleAuto::GetSymbolFont ( ) {
    enum DimStyleSymbolFontConstants _result;
    HRESULT _hr = get_SymbolFont(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(964)
inline void TGFrameworkSupport::_IDimStyleAuto::PutDatumTerminatorGap ( double val ) {
    HRESULT _hr = put_DatumTerminatorGap(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(965)
inline double TGFrameworkSupport::_IDimStyleAuto::GetDatumTerminatorGap ( ) {
    double _result = 0;
    HRESULT _hr = get_DatumTerminatorGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(966)
inline void TGFrameworkSupport::_IDimStyleAuto::PutDatumFrameShape ( enum DimStyleDatumFrameShapeConstants val ) {
    HRESULT _hr = put_DatumFrameShape(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(967)
inline enum TGFrameworkSupport::DimStyleDatumFrameShapeConstants TGFrameworkSupport::_IDimStyleAuto::GetDatumFrameShape ( ) {
    enum DimStyleDatumFrameShapeConstants _result;
    HRESULT _hr = get_DatumFrameShape(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(968)
inline void TGFrameworkSupport::_IDimStyleAuto::PutDisplayCoordinateOriginText ( VARIANT_BOOL val ) {
    HRESULT _hr = put_DisplayCoordinateOriginText(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(969)
inline VARIANT_BOOL TGFrameworkSupport::_IDimStyleAuto::GetDisplayCoordinateOriginText ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayCoordinateOriginText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(970)
inline void TGFrameworkSupport::_IDimStyleAuto::PutPlacePrefixInsideBasicDimensionBox ( VARIANT_BOOL val ) {
    HRESULT _hr = put_PlacePrefixInsideBasicDimensionBox(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(971)
inline VARIANT_BOOL TGFrameworkSupport::_IDimStyleAuto::GetPlacePrefixInsideBasicDimensionBox ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_PlacePrefixInsideBasicDimensionBox(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(972)
inline void TGFrameworkSupport::_IDimStyleAuto::PutSecondaryUnitSeparator ( enum DimStyleSecondaryUnitSeparatorConstants val ) {
    HRESULT _hr = put_SecondaryUnitSeparator(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(973)
inline enum TGFrameworkSupport::DimStyleSecondaryUnitSeparatorConstants TGFrameworkSupport::_IDimStyleAuto::GetSecondaryUnitSeparator ( ) {
    enum DimStyleSecondaryUnitSeparatorConstants _result;
    HRESULT _hr = get_SecondaryUnitSeparator(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(974)
inline void TGFrameworkSupport::_IDimStyleAuto::PutWeldSymbolLineWidth ( double val ) {
    HRESULT _hr = put_WeldSymbolLineWidth(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(975)
inline double TGFrameworkSupport::_IDimStyleAuto::GetWeldSymbolLineWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_WeldSymbolLineWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(976)
inline void TGFrameworkSupport::_IDimStyleAuto::PutThreeSidedSymbolOffsetGap ( double val ) {
    HRESULT _hr = put_ThreeSidedSymbolOffsetGap(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(977)
inline double TGFrameworkSupport::_IDimStyleAuto::GetThreeSidedSymbolOffsetGap ( ) {
    double _result = 0;
    HRESULT _hr = get_ThreeSidedSymbolOffsetGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(978)
inline void TGFrameworkSupport::_IDimStyleAuto::PutHoleShaftToleranceSeparatorType ( enum DimHoleShaftSeparatorTypeConstants val ) {
    HRESULT _hr = put_HoleShaftToleranceSeparatorType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(979)
inline enum TGFrameworkSupport::DimHoleShaftSeparatorTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetHoleShaftToleranceSeparatorType ( ) {
    enum DimHoleShaftSeparatorTypeConstants _result;
    HRESULT _hr = get_HoleShaftToleranceSeparatorType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(980)
inline void TGFrameworkSupport::_IDimStyleAuto::PutToleranceTextVerticalAlignment ( enum TextVerticalAlignmentConstants val ) {
    HRESULT _hr = put_ToleranceTextVerticalAlignment(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(981)
inline enum TGFrameworkSupport::TextVerticalAlignmentConstants TGFrameworkSupport::_IDimStyleAuto::GetToleranceTextVerticalAlignment ( ) {
    enum TextVerticalAlignmentConstants _result;
    HRESULT _hr = get_ToleranceTextVerticalAlignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(982)
inline void TGFrameworkSupport::_IDimStyleAuto::PutToleranceTextHorizontalAlignment ( enum DimToleranceTextHorizontalAlignOptionsConstants val ) {
    HRESULT _hr = put_ToleranceTextHorizontalAlignment(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(983)
inline enum TGFrameworkSupport::DimToleranceTextHorizontalAlignOptionsConstants TGFrameworkSupport::_IDimStyleAuto::GetToleranceTextHorizontalAlignment ( ) {
    enum DimToleranceTextHorizontalAlignOptionsConstants _result;
    HRESULT _hr = get_ToleranceTextHorizontalAlignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(984)
inline void TGFrameworkSupport::_IDimStyleAuto::PutUseTextSizeForCombinedTolValueDisplay ( VARIANT_BOOL val ) {
    HRESULT _hr = put_UseTextSizeForCombinedTolValueDisplay(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(985)
inline VARIANT_BOOL TGFrameworkSupport::_IDimStyleAuto::GetUseTextSizeForCombinedTolValueDisplay ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseTextSizeForCombinedTolValueDisplay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(986)
inline void TGFrameworkSupport::_IDimStyleAuto::PutDatumFrameLineTermThickness ( double pdDatumFrameLineTermThickness ) {
    HRESULT _hr = put_DatumFrameLineTermThickness(pdDatumFrameLineTermThickness);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(987)
inline double TGFrameworkSupport::_IDimStyleAuto::GetDatumFrameLineTermThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_DatumFrameLineTermThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(988)
inline void TGFrameworkSupport::_IDimStyleAuto::PutDatumTargetTerminatorType ( enum DimDatumTargetTermTypeConstants val ) {
    HRESULT _hr = put_DatumTargetTerminatorType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(989)
inline enum TGFrameworkSupport::DimDatumTargetTermTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetDatumTargetTerminatorType ( ) {
    enum DimDatumTargetTermTypeConstants _result;
    HRESULT _hr = get_DatumTargetTerminatorType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(990)
inline void TGFrameworkSupport::_IDimStyleAuto::PutPinSymbolTerminatorType ( enum DimPinSymbolTermTypeConstants val ) {
    HRESULT _hr = put_PinSymbolTerminatorType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(991)
inline enum TGFrameworkSupport::DimPinSymbolTermTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetPinSymbolTerminatorType ( ) {
    enum DimPinSymbolTermTypeConstants _result;
    HRESULT _hr = get_PinSymbolTerminatorType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(992)
inline void TGFrameworkSupport::_IDimStyleAuto::PutPrimaryLinearToleranceUnits ( enum DimLinearUnitConstants val ) {
    HRESULT _hr = put_PrimaryLinearToleranceUnits(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(993)
inline enum TGFrameworkSupport::DimLinearUnitConstants TGFrameworkSupport::_IDimStyleAuto::GetPrimaryLinearToleranceUnits ( ) {
    enum DimLinearUnitConstants _result;
    HRESULT _hr = get_PrimaryLinearToleranceUnits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(994)
inline void TGFrameworkSupport::_IDimStyleAuto::PutPrimaryLinearToleranceRoundOffType ( enum DimRoundOffTypeConstants val ) {
    HRESULT _hr = put_PrimaryLinearToleranceRoundOffType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(995)
inline enum TGFrameworkSupport::DimRoundOffTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetPrimaryLinearToleranceRoundOffType ( ) {
    enum DimRoundOffTypeConstants _result;
    HRESULT _hr = get_PrimaryLinearToleranceRoundOffType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(996)
inline void TGFrameworkSupport::_IDimStyleAuto::PutPrimaryLinearToleranceDecimalRoundOff ( enum DimDecimalRoundOffTypeConstants val ) {
    HRESULT _hr = put_PrimaryLinearToleranceDecimalRoundOff(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(997)
inline enum TGFrameworkSupport::DimDecimalRoundOffTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetPrimaryLinearToleranceDecimalRoundOff ( ) {
    enum DimDecimalRoundOffTypeConstants _result;
    HRESULT _hr = get_PrimaryLinearToleranceDecimalRoundOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(998)
inline void TGFrameworkSupport::_IDimStyleAuto::PutPrimaryLinearToleranceFractionRoundOff ( enum DimFractionRoundOffTypeConstants val ) {
    HRESULT _hr = put_PrimaryLinearToleranceFractionRoundOff(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(999)
inline enum TGFrameworkSupport::DimFractionRoundOffTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetPrimaryLinearToleranceFractionRoundOff ( ) {
    enum DimFractionRoundOffTypeConstants _result;
    HRESULT _hr = get_PrimaryLinearToleranceFractionRoundOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1000)
inline void TGFrameworkSupport::_IDimStyleAuto::PutPrimaryLinearToleranceUnitLabel ( _bstr_t val ) {
    HRESULT _hr = put_PrimaryLinearToleranceUnitLabel(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1001)
inline _bstr_t TGFrameworkSupport::_IDimStyleAuto::GetPrimaryLinearToleranceUnitLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PrimaryLinearToleranceUnitLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1002)
inline void TGFrameworkSupport::_IDimStyleAuto::PutPrimaryLinearToleranceSubunitsLabel ( _bstr_t val ) {
    HRESULT _hr = put_PrimaryLinearToleranceSubunitsLabel(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1003)
inline _bstr_t TGFrameworkSupport::_IDimStyleAuto::GetPrimaryLinearToleranceSubunitsLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PrimaryLinearToleranceSubunitsLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1004)
inline void TGFrameworkSupport::_IDimStyleAuto::PutPrimaryLinearToleranceMaximumSubunits ( int val ) {
    HRESULT _hr = put_PrimaryLinearToleranceMaximumSubunits(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1005)
inline int TGFrameworkSupport::_IDimStyleAuto::GetPrimaryLinearToleranceMaximumSubunits ( ) {
    int _result = 0;
    HRESULT _hr = get_PrimaryLinearToleranceMaximumSubunits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1006)
inline void TGFrameworkSupport::_IDimStyleAuto::PutPrimaryLinearToleranceFractionSeparator ( _bstr_t val ) {
    HRESULT _hr = put_PrimaryLinearToleranceFractionSeparator(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1007)
inline _bstr_t TGFrameworkSupport::_IDimStyleAuto::GetPrimaryLinearToleranceFractionSeparator ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PrimaryLinearToleranceFractionSeparator(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1008)
inline void TGFrameworkSupport::_IDimStyleAuto::PutAngularToleranceUnits ( enum DimAngularUnitConstants val ) {
    HRESULT _hr = put_AngularToleranceUnits(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1009)
inline enum TGFrameworkSupport::DimAngularUnitConstants TGFrameworkSupport::_IDimStyleAuto::GetAngularToleranceUnits ( ) {
    enum DimAngularUnitConstants _result;
    HRESULT _hr = get_AngularToleranceUnits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1010)
inline void TGFrameworkSupport::_IDimStyleAuto::PutAngularToleranceRoundOffType ( enum DimRoundOffTypeConstants val ) {
    HRESULT _hr = put_AngularToleranceRoundOffType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1011)
inline enum TGFrameworkSupport::DimRoundOffTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetAngularToleranceRoundOffType ( ) {
    enum DimRoundOffTypeConstants _result;
    HRESULT _hr = get_AngularToleranceRoundOffType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1012)
inline void TGFrameworkSupport::_IDimStyleAuto::PutAngularToleranceDMSRoundOff ( enum DimDMSRoundOffTypeConstants val ) {
    HRESULT _hr = put_AngularToleranceDMSRoundOff(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1013)
inline enum TGFrameworkSupport::DimDMSRoundOffTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetAngularToleranceDMSRoundOff ( ) {
    enum DimDMSRoundOffTypeConstants _result;
    HRESULT _hr = get_AngularToleranceDMSRoundOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1014)
inline void TGFrameworkSupport::_IDimStyleAuto::PutAngularToleranceDecimalRoundOff ( enum DimDecimalRoundOffTypeConstants val ) {
    HRESULT _hr = put_AngularToleranceDecimalRoundOff(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1015)
inline enum TGFrameworkSupport::DimDecimalRoundOffTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetAngularToleranceDecimalRoundOff ( ) {
    enum DimDecimalRoundOffTypeConstants _result;
    HRESULT _hr = get_AngularToleranceDecimalRoundOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1016)
inline void TGFrameworkSupport::_IDimStyleAuto::PutAngularToleranceFractionRoundOff ( enum DimFractionRoundOffTypeConstants val ) {
    HRESULT _hr = put_AngularToleranceFractionRoundOff(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1017)
inline enum TGFrameworkSupport::DimFractionRoundOffTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetAngularToleranceFractionRoundOff ( ) {
    enum DimFractionRoundOffTypeConstants _result;
    HRESULT _hr = get_AngularToleranceFractionRoundOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1018)
inline void TGFrameworkSupport::_IDimStyleAuto::PutSecondaryLinearToleranceUnits ( enum DimLinearUnitConstants val ) {
    HRESULT _hr = put_SecondaryLinearToleranceUnits(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1019)
inline enum TGFrameworkSupport::DimLinearUnitConstants TGFrameworkSupport::_IDimStyleAuto::GetSecondaryLinearToleranceUnits ( ) {
    enum DimLinearUnitConstants _result;
    HRESULT _hr = get_SecondaryLinearToleranceUnits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1020)
inline void TGFrameworkSupport::_IDimStyleAuto::PutSecondaryLinearToleranceRoundOffType ( enum DimRoundOffTypeConstants val ) {
    HRESULT _hr = put_SecondaryLinearToleranceRoundOffType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1021)
inline enum TGFrameworkSupport::DimRoundOffTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetSecondaryLinearToleranceRoundOffType ( ) {
    enum DimRoundOffTypeConstants _result;
    HRESULT _hr = get_SecondaryLinearToleranceRoundOffType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1022)
inline void TGFrameworkSupport::_IDimStyleAuto::PutSecondaryLinearToleranceDecimalRoundOff ( enum DimDecimalRoundOffTypeConstants val ) {
    HRESULT _hr = put_SecondaryLinearToleranceDecimalRoundOff(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1023)
inline enum TGFrameworkSupport::DimDecimalRoundOffTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetSecondaryLinearToleranceDecimalRoundOff ( ) {
    enum DimDecimalRoundOffTypeConstants _result;
    HRESULT _hr = get_SecondaryLinearToleranceDecimalRoundOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1024)
inline void TGFrameworkSupport::_IDimStyleAuto::PutSecondaryLinearToleranceFractionRoundOff ( enum DimFractionRoundOffTypeConstants val ) {
    HRESULT _hr = put_SecondaryLinearToleranceFractionRoundOff(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1025)
inline enum TGFrameworkSupport::DimFractionRoundOffTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetSecondaryLinearToleranceFractionRoundOff ( ) {
    enum DimFractionRoundOffTypeConstants _result;
    HRESULT _hr = get_SecondaryLinearToleranceFractionRoundOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1026)
inline void TGFrameworkSupport::_IDimStyleAuto::PutSecondaryLinearToleranceUnitLabel ( _bstr_t val ) {
    HRESULT _hr = put_SecondaryLinearToleranceUnitLabel(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1027)
inline _bstr_t TGFrameworkSupport::_IDimStyleAuto::GetSecondaryLinearToleranceUnitLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SecondaryLinearToleranceUnitLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1028)
inline void TGFrameworkSupport::_IDimStyleAuto::PutSecondaryLinearToleranceSubunitsLabel ( _bstr_t val ) {
    HRESULT _hr = put_SecondaryLinearToleranceSubunitsLabel(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1029)
inline _bstr_t TGFrameworkSupport::_IDimStyleAuto::GetSecondaryLinearToleranceSubunitsLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SecondaryLinearToleranceSubunitsLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1030)
inline void TGFrameworkSupport::_IDimStyleAuto::PutSecondaryLinearToleranceMaximumSubunits ( int val ) {
    HRESULT _hr = put_SecondaryLinearToleranceMaximumSubunits(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1031)
inline int TGFrameworkSupport::_IDimStyleAuto::GetSecondaryLinearToleranceMaximumSubunits ( ) {
    int _result = 0;
    HRESULT _hr = get_SecondaryLinearToleranceMaximumSubunits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1032)
inline void TGFrameworkSupport::_IDimStyleAuto::PutSecondaryLinearToleranceFractionSeparator ( _bstr_t val ) {
    HRESULT _hr = put_SecondaryLinearToleranceFractionSeparator(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1033)
inline _bstr_t TGFrameworkSupport::_IDimStyleAuto::GetSecondaryLinearToleranceFractionSeparator ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SecondaryLinearToleranceFractionSeparator(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1034)
inline void TGFrameworkSupport::_IDimStyleAuto::PutSecondaryLinearFractionSeparator ( _bstr_t val ) {
    HRESULT _hr = put_SecondaryLinearFractionSeparator(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1035)
inline _bstr_t TGFrameworkSupport::_IDimStyleAuto::GetSecondaryLinearFractionSeparator ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SecondaryLinearFractionSeparator(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1036)
inline void TGFrameworkSupport::_IDimStyleAuto::PutDualUnitPosition ( enum DimDualUnitPositionConstants val ) {
    HRESULT _hr = put_DualUnitPosition(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1037)
inline enum TGFrameworkSupport::DimDualUnitPositionConstants TGFrameworkSupport::_IDimStyleAuto::GetDualUnitPosition ( ) {
    enum DimDualUnitPositionConstants _result;
    HRESULT _hr = get_DualUnitPosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1038)
inline void TGFrameworkSupport::_IDimStyleAuto::PutDualUnitJustification ( enum TextHorizontalAlignmentConstants val ) {
    HRESULT _hr = put_DualUnitJustification(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1039)
inline enum TGFrameworkSupport::TextHorizontalAlignmentConstants TGFrameworkSupport::_IDimStyleAuto::GetDualUnitJustification ( ) {
    enum TextHorizontalAlignmentConstants _result;
    HRESULT _hr = get_DualUnitJustification(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1040)
inline void TGFrameworkSupport::_IDimStyleAuto::PutSmartDepthSlotThru ( _bstr_t val ) {
    HRESULT _hr = put_SmartDepthSlotThru(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1041)
inline _bstr_t TGFrameworkSupport::_IDimStyleAuto::GetSmartDepthSlotThru ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SmartDepthSlotThru(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1042)
inline void TGFrameworkSupport::_IDimStyleAuto::PutSmartDepthSlotFinite ( _bstr_t val ) {
    HRESULT _hr = put_SmartDepthSlotFinite(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1043)
inline _bstr_t TGFrameworkSupport::_IDimStyleAuto::GetSmartDepthSlotFinite ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SmartDepthSlotFinite(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1044)
inline void TGFrameworkSupport::_IDimStyleAuto::PutSlotCalloutSimple ( _bstr_t val ) {
    HRESULT _hr = put_SlotCalloutSimple(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1045)
inline _bstr_t TGFrameworkSupport::_IDimStyleAuto::GetSlotCalloutSimple ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SlotCalloutSimple(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1046)
inline void TGFrameworkSupport::_IDimStyleAuto::PutSlotCalloutCounterbore ( _bstr_t val ) {
    HRESULT _hr = put_SlotCalloutCounterbore(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1047)
inline _bstr_t TGFrameworkSupport::_IDimStyleAuto::GetSlotCalloutCounterbore ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SlotCalloutCounterbore(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1048)
inline void TGFrameworkSupport::_IDimStyleAuto::PutCoordinateTextOrientation ( enum DimTextOrientationConstants val ) {
    HRESULT _hr = put_CoordinateTextOrientation(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1049)
inline enum TGFrameworkSupport::DimTextOrientationConstants TGFrameworkSupport::_IDimStyleAuto::GetCoordinateTextOrientation ( ) {
    enum DimTextOrientationConstants _result;
    HRESULT _hr = get_CoordinateTextOrientation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1050)
inline void TGFrameworkSupport::_IDimStyleAuto::PutEnableAutoJogForCoordinate ( VARIANT_BOOL val ) {
    HRESULT _hr = put_EnableAutoJogForCoordinate(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1051)
inline VARIANT_BOOL TGFrameworkSupport::_IDimStyleAuto::GetEnableAutoJogForCoordinate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_EnableAutoJogForCoordinate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1052)
inline void TGFrameworkSupport::_IDimStyleAuto::PutAllowNegativeValueForCoordinate ( VARIANT_BOOL val ) {
    HRESULT _hr = put_AllowNegativeValueForCoordinate(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1053)
inline VARIANT_BOOL TGFrameworkSupport::_IDimStyleAuto::GetAllowNegativeValueForCoordinate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AllowNegativeValueForCoordinate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1054)
inline void TGFrameworkSupport::_IDimStyleAuto::PutAllowOriginValueChangeForCoordinate ( VARIANT_BOOL val ) {
    HRESULT _hr = put_AllowOriginValueChangeForCoordinate(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1055)
inline VARIANT_BOOL TGFrameworkSupport::_IDimStyleAuto::GetAllowOriginValueChangeForCoordinate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AllowOriginValueChangeForCoordinate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1056)
inline void TGFrameworkSupport::_IDimStyleAuto::PutShowOriginLineForCoordinate ( VARIANT_BOOL val ) {
    HRESULT _hr = put_ShowOriginLineForCoordinate(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1057)
inline VARIANT_BOOL TGFrameworkSupport::_IDimStyleAuto::GetShowOriginLineForCoordinate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowOriginLineForCoordinate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1058)
inline void TGFrameworkSupport::_IDimStyleAuto::PutOverlineExtension ( double val ) {
    HRESULT _hr = put_OverlineExtension(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1059)
inline double TGFrameworkSupport::_IDimStyleAuto::GetOverlineExtension ( ) {
    double _result = 0;
    HRESULT _hr = get_OverlineExtension(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1060)
inline void TGFrameworkSupport::_IDimStyleAuto::PutSuppressSymmetricDiameterSymbol ( VARIANT_BOOL val ) {
    HRESULT _hr = put_SuppressSymmetricDiameterSymbol(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1061)
inline VARIANT_BOOL TGFrameworkSupport::_IDimStyleAuto::GetSuppressSymmetricDiameterSymbol ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SuppressSymmetricDiameterSymbol(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1062)
inline void TGFrameworkSupport::_IDimStyleAuto::PutUnderlineSymbolAndPrefix ( VARIANT_BOOL val ) {
    HRESULT _hr = put_UnderlineSymbolAndPrefix(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1063)
inline VARIANT_BOOL TGFrameworkSupport::_IDimStyleAuto::GetUnderlineSymbolAndPrefix ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UnderlineSymbolAndPrefix(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1064)
inline void TGFrameworkSupport::_IDimStyleAuto::PutInitialStackPitch ( double val ) {
    HRESULT _hr = put_InitialStackPitch(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1065)
inline double TGFrameworkSupport::_IDimStyleAuto::GetInitialStackPitch ( ) {
    double _result = 0;
    HRESULT _hr = get_InitialStackPitch(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1066)
inline void TGFrameworkSupport::_IDimStyleAuto::PutHoleCalloutCounterdrill ( _bstr_t val ) {
    HRESULT _hr = put_HoleCalloutCounterdrill(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1067)
inline _bstr_t TGFrameworkSupport::_IDimStyleAuto::GetHoleCalloutCounterdrill ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HoleCalloutCounterdrill(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1068)
inline void TGFrameworkSupport::_IDimStyleAuto::PutHoleCalloutCounterdrillThreaded ( _bstr_t val ) {
    HRESULT _hr = put_HoleCalloutCounterdrillThreaded(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1069)
inline _bstr_t TGFrameworkSupport::_IDimStyleAuto::GetHoleCalloutCounterdrillThreaded ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HoleCalloutCounterdrillThreaded(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1070)
inline void TGFrameworkSupport::_IDimStyleAuto::PutPrimaryStackFraction ( enum DimStackFractionTypeConstants val ) {
    HRESULT _hr = put_PrimaryStackFraction(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1071)
inline enum TGFrameworkSupport::DimStackFractionTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetPrimaryStackFraction ( ) {
    enum DimStackFractionTypeConstants _result;
    HRESULT _hr = get_PrimaryStackFraction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1072)
inline void TGFrameworkSupport::_IDimStyleAuto::PutSecondaryStackFraction ( enum DimStackFractionTypeConstants val ) {
    HRESULT _hr = put_SecondaryStackFraction(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1073)
inline enum TGFrameworkSupport::DimStackFractionTypeConstants TGFrameworkSupport::_IDimStyleAuto::GetSecondaryStackFraction ( ) {
    enum DimStackFractionTypeConstants _result;
    HRESULT _hr = get_SecondaryStackFraction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1074)
inline void TGFrameworkSupport::_IDimStyleAuto::PutPrimaryStackFractionSize ( enum DimStackFractionSizeConstants val ) {
    HRESULT _hr = put_PrimaryStackFractionSize(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1075)
inline enum TGFrameworkSupport::DimStackFractionSizeConstants TGFrameworkSupport::_IDimStyleAuto::GetPrimaryStackFractionSize ( ) {
    enum DimStackFractionSizeConstants _result;
    HRESULT _hr = get_PrimaryStackFractionSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1076)
inline void TGFrameworkSupport::_IDimStyleAuto::PutSecondaryStackFractionSize ( enum DimStackFractionSizeConstants val ) {
    HRESULT _hr = put_SecondaryStackFractionSize(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1077)
inline enum TGFrameworkSupport::DimStackFractionSizeConstants TGFrameworkSupport::_IDimStyleAuto::GetSecondaryStackFractionSize ( ) {
    enum DimStackFractionSizeConstants _result;
    HRESULT _hr = get_SecondaryStackFractionSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1078)
inline void TGFrameworkSupport::_IDimStyleAuto::PutShowHideReferenceGeometry ( VARIANT_BOOL val ) {
    HRESULT _hr = put_ShowHideReferenceGeometry(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1079)
inline VARIANT_BOOL TGFrameworkSupport::_IDimStyleAuto::GetShowHideReferenceGeometry ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowHideReferenceGeometry(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1080)
inline void TGFrameworkSupport::_IDimStyleAuto::PutEnableAngularJog ( VARIANT_BOOL val ) {
    HRESULT _hr = put_EnableAngularJog(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1081)
inline VARIANT_BOOL TGFrameworkSupport::_IDimStyleAuto::GetEnableAngularJog ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_EnableAngularJog(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface DisplayData wrapper method implementations
//

#pragma implementation_key(1082)
inline long TGFrameworkSupport::DisplayData::GetLineCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1083)
inline HRESULT TGFrameworkSupport::DisplayData::GetLineAtIndex ( long Index, double * StartX, double * StartY, double * StartZ, double * EndX, double * EndY, double * EndZ ) {
    return _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4005\x4005\x4005", Index, StartX, StartY, StartZ, EndX, EndY, EndZ);
}

#pragma implementation_key(1084)
inline long TGFrameworkSupport::DisplayData::GetArcCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1085)
inline HRESULT TGFrameworkSupport::DisplayData::GetArcAtIndex ( long Index, double * StartX, double * StartY, double * StartZ, double * MidX, double * MidY, double * MidZ, double * EndX, double * EndY, double * EndZ ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005", Index, StartX, StartY, StartZ, MidX, MidY, MidZ, EndX, EndY, EndZ);
}

#pragma implementation_key(1086)
inline long TGFrameworkSupport::DisplayData::GetTerminatorCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1087)
inline HRESULT TGFrameworkSupport::DisplayData::GetTerminatorAtIndex ( long Index, enum DimTermTypeConstants * TermType, VARIANT_BOOL * IsFilled, double * OriginX, double * OriginY, double * OriginZ, double * Point1X, double * Point1Y, double * Point1Z, double * Point2X, double * Point2Y, double * Point2Z, double * Radius ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4003\x400b\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005", Index, TermType, IsFilled, OriginX, OriginY, OriginZ, Point1X, Point1Y, Point1Z, Point2X, Point2Y, Point2Z, Radius);
}

#pragma implementation_key(1088)
inline long TGFrameworkSupport::DisplayData::GetTextCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1089)
inline HRESULT TGFrameworkSupport::DisplayData::GetTextAtIndex ( long Index, BSTR * TextString, double * OriginX, double * OriginY, double * OriginZ, double * X_DirX, double * X_DirY, double * X_DirZ, double * Z_DirX, double * Z_DirY, double * Z_DirZ ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4008\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005", Index, TextString, OriginX, OriginY, OriginZ, X_DirX, X_DirY, X_DirZ, Z_DirX, Z_DirY, Z_DirZ);
}

#pragma implementation_key(1090)
inline HRESULT TGFrameworkSupport::DisplayData::GetTextAndFontAtIndex ( long Index, BSTR * TextString, BSTR * FontName, double * OriginX, double * OriginY, double * OriginZ, double * X_DirX, double * X_DirY, double * X_DirZ, double * Z_DirX, double * Z_DirY, double * Z_DirZ ) {
    return _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4008\x4008\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005", Index, TextString, FontName, OriginX, OriginY, OriginZ, X_DirX, X_DirY, X_DirZ, Z_DirX, Z_DirY, Z_DirZ);
}

#pragma implementation_key(1091)
inline long TGFrameworkSupport::DisplayData::GetEllipseCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1092)
inline HRESULT TGFrameworkSupport::DisplayData::GetEllipseAtIndex ( long Index, double * CenterX, double * CenterY, double * CenterZ, double * MajorX, double * MajorY, double * MajorZ, double * MinorX, double * MinorY, double * MinorZ ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005", Index, CenterX, CenterY, CenterZ, MajorX, MajorY, MajorZ, MinorX, MinorY, MinorZ);
}

#pragma implementation_key(1093)
inline long TGFrameworkSupport::DisplayData::GetLinestringCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1094)
inline long TGFrameworkSupport::DisplayData::GetLinestringSizeAtIndex ( long Index ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", Index);
    return _result;
}

#pragma implementation_key(1095)
inline HRESULT TGFrameworkSupport::DisplayData::GetLinestringAtIndex ( long Index, long * nLinestrSize, SAFEARRAY * * Vertices ) {
    return _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4003\x6005", Index, nLinestrSize, Vertices);
}

#pragma implementation_key(1096)
inline HRESULT TGFrameworkSupport::DisplayData::GetTextAtIndexEx ( long Index, BSTR * TextString, double * OriginX, double * OriginY, double * OriginZ, double * X_DirX, double * X_DirY, double * X_DirZ, double * Z_DirX, double * Z_DirY, double * Z_DirZ ) {
    return _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4008\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005", Index, TextString, OriginX, OriginY, OriginZ, X_DirX, X_DirY, X_DirZ, Z_DirX, Z_DirY, Z_DirZ);
}

#pragma implementation_key(1097)
inline HRESULT TGFrameworkSupport::DisplayData::GetTextAndFontAtIndexEx ( long Index, BSTR * TextString, BSTR * FontName, double * OriginX, double * OriginY, double * OriginZ, double * X_DirX, double * X_DirY, double * X_DirZ, double * Z_DirX, double * Z_DirY, double * Z_DirZ ) {
    return _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4008\x4008\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005", Index, TextString, FontName, OriginX, OriginY, OriginZ, X_DirX, X_DirY, X_DirZ, Z_DirX, Z_DirY, Z_DirZ);
}

#pragma implementation_key(1098)
inline long TGFrameworkSupport::DisplayData::GetTextCountEx ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

//
// interface _IDisplayDataAuto wrapper method implementations
//

#pragma implementation_key(1099)
inline long TGFrameworkSupport::_IDisplayDataAuto::GetLineCount ( ) {
    long _result = 0;
    HRESULT _hr = raw_GetLineCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1100)
inline HRESULT TGFrameworkSupport::_IDisplayDataAuto::GetLineAtIndex ( long Index, double * StartX, double * StartY, double * StartZ, double * EndX, double * EndY, double * EndZ ) {
    HRESULT _hr = raw_GetLineAtIndex(Index, StartX, StartY, StartZ, EndX, EndY, EndZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1101)
inline long TGFrameworkSupport::_IDisplayDataAuto::GetArcCount ( ) {
    long _result = 0;
    HRESULT _hr = raw_GetArcCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1102)
inline HRESULT TGFrameworkSupport::_IDisplayDataAuto::GetArcAtIndex ( long Index, double * StartX, double * StartY, double * StartZ, double * MidX, double * MidY, double * MidZ, double * EndX, double * EndY, double * EndZ ) {
    HRESULT _hr = raw_GetArcAtIndex(Index, StartX, StartY, StartZ, MidX, MidY, MidZ, EndX, EndY, EndZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1103)
inline long TGFrameworkSupport::_IDisplayDataAuto::GetTerminatorCount ( ) {
    long _result = 0;
    HRESULT _hr = raw_GetTerminatorCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1104)
inline HRESULT TGFrameworkSupport::_IDisplayDataAuto::GetTerminatorAtIndex ( long Index, enum DimTermTypeConstants * TermType, VARIANT_BOOL * IsFilled, double * OriginX, double * OriginY, double * OriginZ, double * Point1X, double * Point1Y, double * Point1Z, double * Point2X, double * Point2Y, double * Point2Z, double * Radius ) {
    HRESULT _hr = raw_GetTerminatorAtIndex(Index, TermType, IsFilled, OriginX, OriginY, OriginZ, Point1X, Point1Y, Point1Z, Point2X, Point2Y, Point2Z, Radius);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1105)
inline long TGFrameworkSupport::_IDisplayDataAuto::GetTextCount ( ) {
    long _result = 0;
    HRESULT _hr = raw_GetTextCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1106)
inline HRESULT TGFrameworkSupport::_IDisplayDataAuto::GetTextAtIndex ( long Index, BSTR * TextString, double * OriginX, double * OriginY, double * OriginZ, double * X_DirX, double * X_DirY, double * X_DirZ, double * Z_DirX, double * Z_DirY, double * Z_DirZ ) {
    HRESULT _hr = raw_GetTextAtIndex(Index, TextString, OriginX, OriginY, OriginZ, X_DirX, X_DirY, X_DirZ, Z_DirX, Z_DirY, Z_DirZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1107)
inline HRESULT TGFrameworkSupport::_IDisplayDataAuto::GetTextAndFontAtIndex ( long Index, BSTR * TextString, BSTR * FontName, double * OriginX, double * OriginY, double * OriginZ, double * X_DirX, double * X_DirY, double * X_DirZ, double * Z_DirX, double * Z_DirY, double * Z_DirZ ) {
    HRESULT _hr = raw_GetTextAndFontAtIndex(Index, TextString, FontName, OriginX, OriginY, OriginZ, X_DirX, X_DirY, X_DirZ, Z_DirX, Z_DirY, Z_DirZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1108)
inline long TGFrameworkSupport::_IDisplayDataAuto::GetEllipseCount ( ) {
    long _result = 0;
    HRESULT _hr = raw_GetEllipseCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1109)
inline HRESULT TGFrameworkSupport::_IDisplayDataAuto::GetEllipseAtIndex ( long Index, double * CenterX, double * CenterY, double * CenterZ, double * MajorX, double * MajorY, double * MajorZ, double * MinorX, double * MinorY, double * MinorZ ) {
    HRESULT _hr = raw_GetEllipseAtIndex(Index, CenterX, CenterY, CenterZ, MajorX, MajorY, MajorZ, MinorX, MinorY, MinorZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1110)
inline long TGFrameworkSupport::_IDisplayDataAuto::GetLinestringCount ( ) {
    long _result = 0;
    HRESULT _hr = raw_GetLinestringCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1111)
inline long TGFrameworkSupport::_IDisplayDataAuto::GetLinestringSizeAtIndex ( long Index ) {
    long _result = 0;
    HRESULT _hr = raw_GetLinestringSizeAtIndex(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1112)
inline HRESULT TGFrameworkSupport::_IDisplayDataAuto::GetLinestringAtIndex ( long Index, long * nLinestrSize, SAFEARRAY * * Vertices ) {
    HRESULT _hr = raw_GetLinestringAtIndex(Index, nLinestrSize, Vertices);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1113)
inline HRESULT TGFrameworkSupport::_IDisplayDataAuto::GetTextAtIndexEx ( long Index, BSTR * TextString, double * OriginX, double * OriginY, double * OriginZ, double * X_DirX, double * X_DirY, double * X_DirZ, double * Z_DirX, double * Z_DirY, double * Z_DirZ ) {
    HRESULT _hr = raw_GetTextAtIndexEx(Index, TextString, OriginX, OriginY, OriginZ, X_DirX, X_DirY, X_DirZ, Z_DirX, Z_DirY, Z_DirZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1114)
inline HRESULT TGFrameworkSupport::_IDisplayDataAuto::GetTextAndFontAtIndexEx ( long Index, BSTR * TextString, BSTR * FontName, double * OriginX, double * OriginY, double * OriginZ, double * X_DirX, double * X_DirY, double * X_DirZ, double * Z_DirX, double * Z_DirY, double * Z_DirZ ) {
    HRESULT _hr = raw_GetTextAndFontAtIndexEx(Index, TextString, FontName, OriginX, OriginY, OriginZ, X_DirX, X_DirY, X_DirZ, Z_DirX, Z_DirY, Z_DirZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1115)
inline long TGFrameworkSupport::_IDisplayDataAuto::GetTextCountEx ( ) {
    long _result = 0;
    HRESULT _hr = raw_GetTextCountEx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface _IDimensionAuto wrapper method implementations
//

#pragma implementation_key(1116)
inline void TGFrameworkSupport::_IDimensionAuto::PutValue ( double Value ) {
    HRESULT _hr = put_Value(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1117)
inline double TGFrameworkSupport::_IDimensionAuto::GetValue ( ) {
    double _result = 0;
    HRESULT _hr = get_Value(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1118)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::_IDimensionAuto::GetStyle ( ) {
    struct DimStyle * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimStylePtr(_result, false);
}

#pragma implementation_key(1119)
inline enum TGFrameworkSupport::DimTypeConstants TGFrameworkSupport::_IDimensionAuto::GetDimensionType ( ) {
    enum DimTypeConstants _result;
    HRESULT _hr = get_DimensionType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1120)
inline void TGFrameworkSupport::_IDimensionAuto::PutConstraint ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_Constraint(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1121)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionAuto::GetConstraint ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Constraint(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1122)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionAuto::GetLeader ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Leader(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1123)
inline void TGFrameworkSupport::_IDimensionAuto::PutJogged ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_Jogged(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1124)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionAuto::GetJogged ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Jogged(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1125)
inline void TGFrameworkSupport::_IDimensionAuto::PutTerminatorPosition ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_TerminatorPosition(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1126)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionAuto::GetTerminatorPosition ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_TerminatorPosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1127)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionAuto::GetOffsetLeader ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_OffsetLeader(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1128)
inline void TGFrameworkSupport::_IDimensionAuto::PutBreakPosition ( enum DimBreakPositionConstants Value ) {
    HRESULT _hr = put_BreakPosition(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1129)
inline enum TGFrameworkSupport::DimBreakPositionConstants TGFrameworkSupport::_IDimensionAuto::GetBreakPosition ( ) {
    enum DimBreakPositionConstants _result;
    HRESULT _hr = get_BreakPosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1130)
inline void TGFrameworkSupport::_IDimensionAuto::PutBreakDistance ( double Value ) {
    HRESULT _hr = put_BreakDistance(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1131)
inline double TGFrameworkSupport::_IDimensionAuto::GetBreakDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_BreakDistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1132)
inline void TGFrameworkSupport::_IDimensionAuto::PutMeasurementAxis ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_MeasurementAxis(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1133)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionAuto::GetMeasurementAxis ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MeasurementAxis(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1134)
inline void TGFrameworkSupport::_IDimensionAuto::PutMeasurementAxisDirection ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_MeasurementAxisDirection(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1135)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionAuto::GetMeasurementAxisDirection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MeasurementAxisDirection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1136)
inline void TGFrameworkSupport::_IDimensionAuto::PutProjectionLineDirection ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_ProjectionLineDirection(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1137)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionAuto::GetProjectionLineDirection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ProjectionLineDirection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1138)
inline void TGFrameworkSupport::_IDimensionAuto::PutProjectionArc ( enum DimProjArcConstants Value ) {
    HRESULT _hr = put_ProjectionArc(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1139)
inline enum TGFrameworkSupport::DimProjArcConstants TGFrameworkSupport::_IDimensionAuto::GetProjectionArc ( ) {
    enum DimProjArcConstants _result;
    HRESULT _hr = get_ProjectionArc(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1140)
inline void TGFrameworkSupport::_IDimensionAuto::PutOriginLineDirection ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_OriginLineDirection(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1141)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionAuto::GetOriginLineDirection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_OriginLineDirection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1142)
inline void TGFrameworkSupport::_IDimensionAuto::PutMeasureLineDirection ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_MeasureLineDirection(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1143)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionAuto::GetMeasureLineDirection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MeasureLineDirection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1144)
inline void TGFrameworkSupport::_IDimensionAuto::PutAngleClockwise ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_AngleClockwise(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1145)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionAuto::GetAngleClockwise ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AngleClockwise(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1146)
inline void TGFrameworkSupport::_IDimensionAuto::PutTrackDistance ( double Value ) {
    HRESULT _hr = put_TrackDistance(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1147)
inline double TGFrameworkSupport::_IDimensionAuto::GetTrackDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_TrackDistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1148)
inline void TGFrameworkSupport::_IDimensionAuto::PutLeaderDistance ( double Value ) {
    HRESULT _hr = put_LeaderDistance(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1149)
inline double TGFrameworkSupport::_IDimensionAuto::GetLeaderDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_LeaderDistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1150)
inline void TGFrameworkSupport::_IDimensionAuto::PutPrefixString ( _bstr_t val ) {
    HRESULT _hr = put_PrefixString(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1151)
inline _bstr_t TGFrameworkSupport::_IDimensionAuto::GetPrefixString ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PrefixString(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1152)
inline void TGFrameworkSupport::_IDimensionAuto::PutSuffixString ( _bstr_t val ) {
    HRESULT _hr = put_SuffixString(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1153)
inline _bstr_t TGFrameworkSupport::_IDimensionAuto::GetSuffixString ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SuffixString(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1154)
inline void TGFrameworkSupport::_IDimensionAuto::PutSubfixString ( _bstr_t val ) {
    HRESULT _hr = put_SubfixString(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1155)
inline _bstr_t TGFrameworkSupport::_IDimensionAuto::GetSubfixString ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SubfixString(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1156)
inline void TGFrameworkSupport::_IDimensionAuto::PutSuperfixString ( _bstr_t val ) {
    HRESULT _hr = put_SuperfixString(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1157)
inline _bstr_t TGFrameworkSupport::_IDimensionAuto::GetSuperfixString ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SuperfixString(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1158)
inline void TGFrameworkSupport::_IDimensionAuto::PutOverrideString ( _bstr_t val ) {
    HRESULT _hr = put_OverrideString(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1159)
inline _bstr_t TGFrameworkSupport::_IDimensionAuto::GetOverrideString ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_OverrideString(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1160)
inline void TGFrameworkSupport::_IDimensionAuto::PutPrimaryUpperTolerance ( _bstr_t val ) {
    HRESULT _hr = put_PrimaryUpperTolerance(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1161)
inline _bstr_t TGFrameworkSupport::_IDimensionAuto::GetPrimaryUpperTolerance ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PrimaryUpperTolerance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1162)
inline void TGFrameworkSupport::_IDimensionAuto::PutPrimaryLowerTolerance ( _bstr_t val ) {
    HRESULT _hr = put_PrimaryLowerTolerance(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1163)
inline _bstr_t TGFrameworkSupport::_IDimensionAuto::GetPrimaryLowerTolerance ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PrimaryLowerTolerance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1164)
inline void TGFrameworkSupport::_IDimensionAuto::PutPrimaryToleranceSymbol ( _bstr_t val ) {
    HRESULT _hr = put_PrimaryToleranceSymbol(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1165)
inline _bstr_t TGFrameworkSupport::_IDimensionAuto::GetPrimaryToleranceSymbol ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PrimaryToleranceSymbol(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1166)
inline void TGFrameworkSupport::_IDimensionAuto::PutSecondaryUpperTolerance ( _bstr_t val ) {
    HRESULT _hr = put_SecondaryUpperTolerance(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1167)
inline _bstr_t TGFrameworkSupport::_IDimensionAuto::GetSecondaryUpperTolerance ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SecondaryUpperTolerance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1168)
inline void TGFrameworkSupport::_IDimensionAuto::PutSecondaryLowerTolerance ( _bstr_t val ) {
    HRESULT _hr = put_SecondaryLowerTolerance(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1169)
inline _bstr_t TGFrameworkSupport::_IDimensionAuto::GetSecondaryLowerTolerance ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SecondaryLowerTolerance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1170)
inline void TGFrameworkSupport::_IDimensionAuto::PutSecondaryToleranceSymbol ( _bstr_t val ) {
    HRESULT _hr = put_SecondaryToleranceSymbol(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1171)
inline _bstr_t TGFrameworkSupport::_IDimensionAuto::GetSecondaryToleranceSymbol ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SecondaryToleranceSymbol(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1172)
inline void TGFrameworkSupport::_IDimensionAuto::PutDisplayType ( enum DimDispTypeConstants val ) {
    HRESULT _hr = put_DisplayType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1173)
inline enum TGFrameworkSupport::DimDispTypeConstants TGFrameworkSupport::_IDimensionAuto::GetDisplayType ( ) {
    enum DimDispTypeConstants _result;
    HRESULT _hr = get_DisplayType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1174)
inline void TGFrameworkSupport::_IDimensionAuto::PutTrackAngle ( double val ) {
    HRESULT _hr = put_TrackAngle(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1175)
inline double TGFrameworkSupport::_IDimensionAuto::GetTrackAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_TrackAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1176)
inline void TGFrameworkSupport::_IDimensionAuto::PutTextScale ( double val ) {
    HRESULT _hr = put_TextScale(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1177)
inline double TGFrameworkSupport::_IDimensionAuto::GetTextScale ( ) {
    double _result = 0;
    HRESULT _hr = get_TextScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1178)
inline void TGFrameworkSupport::_IDimensionAuto::PutAngleCompliment ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_AngleCompliment(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1179)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionAuto::GetAngleCompliment ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AngleCompliment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1180)
inline void TGFrameworkSupport::_IDimensionAuto::PutDisplayHalf ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_DisplayHalf(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1181)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionAuto::GetDisplayHalf ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayHalf(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1182)
inline void TGFrameworkSupport::_IDimensionAuto::PutDisplayByName ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_DisplayByName(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1183)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionAuto::GetDisplayByName ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayByName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1184)
inline void TGFrameworkSupport::_IDimensionAuto::PutInspection ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_Inspection(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1185)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionAuto::GetInspection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Inspection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1186)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::SetJogPoint1Distance ( double Value ) {
    HRESULT _hr = raw_SetJogPoint1Distance(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1187)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::GetJogPoint1Distance ( double * Value ) {
    HRESULT _hr = raw_GetJogPoint1Distance(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1188)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::SetJogPoint2 ( double x, double y ) {
    HRESULT _hr = raw_SetJogPoint2(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1189)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::GetJogPoint2 ( double * x, double * y ) {
    HRESULT _hr = raw_GetJogPoint2(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1190)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::SetJogPoint3Distance ( double Value ) {
    HRESULT _hr = raw_SetJogPoint3Distance(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1191)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::GetJogPoint3Distance ( double * Value ) {
    HRESULT _hr = raw_GetJogPoint3Distance(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1192)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::SetTextOffsets ( double x, double y ) {
    HRESULT _hr = raw_SetTextOffsets(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1193)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::GetTextOffsets ( double * x, double * y ) {
    HRESULT _hr = raw_GetTextOffsets(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1194)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::GetRelatedCount ( long * Count ) {
    HRESULT _hr = raw_GetRelatedCount(Count);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1195)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::GetRelated ( long Index, IDispatch * * GraphicObject, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    HRESULT _hr = raw_GetRelated(Index, GraphicObject, x, y, z, keyPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1196)
inline IDispatchPtr TGFrameworkSupport::_IDimensionAuto::GetPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Plane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1197)
inline IDispatchPtr TGFrameworkSupport::_IDimensionAuto::GetAxis ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Axis(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1198)
inline void TGFrameworkSupport::_IDimensionAuto::PutAxis ( IDispatch * Axis ) {
    HRESULT _hr = put_Axis(Axis);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1199)
inline void TGFrameworkSupport::_IDimensionAuto::PutPrefixInside ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_PrefixInside(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1200)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionAuto::GetPrefixInside ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_PrefixInside(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1201)
inline enum TGFrameworkSupport::DimStatusConstants TGFrameworkSupport::_IDimensionAuto::GetStatusOfDimension ( ) {
    enum DimStatusConstants _result;
    HRESULT _hr = get_StatusOfDimension(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1202)
inline enum TGFrameworkSupport::DimGroupMemberTypeConstants TGFrameworkSupport::_IDimensionAuto::GetGroupMemberType ( ) {
    enum DimGroupMemberTypeConstants _result;
    HRESULT _hr = get_GroupMemberType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1203)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IDimensionAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(1204)
inline long TGFrameworkSupport::_IDimensionAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1205)
inline _bstr_t TGFrameworkSupport::_IDimensionAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1206)
inline IDispatchPtr TGFrameworkSupport::_IDimensionAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1207)
inline long TGFrameworkSupport::_IDimensionAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1208)
inline long TGFrameworkSupport::_IDimensionAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1209)
inline _bstr_t TGFrameworkSupport::_IDimensionAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1210)
inline IDispatchPtr TGFrameworkSupport::_IDimensionAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1211)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1212)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1213)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1214)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    HRESULT _hr = raw_Move(XFrom, YFrom, XTo, YTo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1215)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::Scale ( double Factor ) {
    HRESULT _hr = raw_Scale(Factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1216)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::Rotate ( double Angle, double x, double y ) {
    HRESULT _hr = raw_Rotate(Angle, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1217)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1218)
inline IDispatchPtr TGFrameworkSupport::_IDimensionAuto::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Duplicate(XDistance, YDistance, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1219)
inline IDispatchPtr TGFrameworkSupport::_IDimensionAuto::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Mirror(x1, y1, x2, y2, BooleanCopyFlag, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1220)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1221)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1222)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1223)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1224)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1225)
inline long TGFrameworkSupport::_IDimensionAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1226)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1227)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::SetKeyPoint ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetKeyPoint(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1228)
inline IDispatchPtr TGFrameworkSupport::_IDimensionAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1229)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1230)
inline void TGFrameworkSupport::_IDimensionAuto::PutSecondValue ( double Value ) {
    HRESULT _hr = put_SecondValue(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1231)
inline double TGFrameworkSupport::_IDimensionAuto::GetSecondValue ( ) {
    double _result = 0;
    HRESULT _hr = get_SecondValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1232)
inline void TGFrameworkSupport::_IDimensionAuto::PutOverrideChamferAngleString ( _bstr_t val ) {
    HRESULT _hr = put_OverrideChamferAngleString(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1233)
inline _bstr_t TGFrameworkSupport::_IDimensionAuto::GetOverrideChamferAngleString ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_OverrideChamferAngleString(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1234)
inline enum TGFrameworkSupport::DimChamferModeConstants TGFrameworkSupport::_IDimensionAuto::GetChamferDimensionMode ( ) {
    enum DimChamferModeConstants _result;
    HRESULT _hr = get_ChamferDimensionMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1235)
inline void TGFrameworkSupport::_IDimensionAuto::PutVariableTableName ( _bstr_t VTableName ) {
    HRESULT _hr = put_VariableTableName(VTableName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1236)
inline _bstr_t TGFrameworkSupport::_IDimensionAuto::GetVariableTableName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_VariableTableName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1237)
inline void TGFrameworkSupport::_IDimensionAuto::PutMeasurementAxisEx ( enum DimAxisModeConstants Value ) {
    HRESULT _hr = put_MeasurementAxisEx(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1238)
inline enum TGFrameworkSupport::DimAxisModeConstants TGFrameworkSupport::_IDimensionAuto::GetMeasurementAxisEx ( ) {
    enum DimAxisModeConstants _result;
    HRESULT _hr = get_MeasurementAxisEx(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1239)
inline double TGFrameworkSupport::_IDimensionAuto::GetProjectionLineAngle1 ( ) {
    double _result = 0;
    HRESULT _hr = get_ProjectionLineAngle1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1240)
inline double TGFrameworkSupport::_IDimensionAuto::GetProjectionLineAngle2 ( ) {
    double _result = 0;
    HRESULT _hr = get_ProjectionLineAngle2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1241)
inline void TGFrameworkSupport::_IDimensionAuto::PutFormula ( _bstr_t pFormula ) {
    HRESULT _hr = put_Formula(pFormula);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1242)
inline _bstr_t TGFrameworkSupport::_IDimensionAuto::GetFormula ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Formula(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1243)
inline TGFrameworkSupport::DisplayDataPtr TGFrameworkSupport::_IDimensionAuto::GetDisplayData ( ) {
    struct DisplayData * _result = 0;
    HRESULT _hr = raw_GetDisplayData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DisplayDataPtr(_result, false);
}

#pragma implementation_key(1244)
inline _bstr_t TGFrameworkSupport::_IDimensionAuto::GetDisplayName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DisplayName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1245)
inline _bstr_t TGFrameworkSupport::_IDimensionAuto::GetSystemName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SystemName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1246)
inline void TGFrameworkSupport::_IDimensionAuto::PutExpose ( long pbExpose ) {
    HRESULT _hr = put_Expose(pbExpose);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1247)
inline long TGFrameworkSupport::_IDimensionAuto::GetExpose ( ) {
    long _result = 0;
    HRESULT _hr = get_Expose(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1248)
inline void TGFrameworkSupport::_IDimensionAuto::PutExposeName ( _bstr_t pbsName ) {
    HRESULT _hr = put_ExposeName(pbsName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1249)
inline _bstr_t TGFrameworkSupport::_IDimensionAuto::GetExposeName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ExposeName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1250)
inline void TGFrameworkSupport::_IDimensionAuto::PutSubfixString2 ( _bstr_t val ) {
    HRESULT _hr = put_SubfixString2(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1251)
inline _bstr_t TGFrameworkSupport::_IDimensionAuto::GetSubfixString2 ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SubfixString2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1252)
inline void TGFrameworkSupport::_IDimensionAuto::PutSubfixAlignment ( enum SubfixAlignmentConstants Value ) {
    HRESULT _hr = put_SubfixAlignment(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1253)
inline enum TGFrameworkSupport::SubfixAlignmentConstants TGFrameworkSupport::_IDimensionAuto::GetSubfixAlignment ( ) {
    enum SubfixAlignmentConstants _result;
    HRESULT _hr = get_SubfixAlignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1254)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::AddProjectionLineBreaks ( ) {
    HRESULT _hr = raw_AddProjectionLineBreaks();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1255)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::ClearProjectionLineBreaks ( ) {
    HRESULT _hr = raw_ClearProjectionLineBreaks();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1256)
inline long TGFrameworkSupport::_IDimensionAuto::GetBreakingDimensionsCount ( ) {
    long _result = 0;
    HRESULT _hr = raw_GetBreakingDimensionsCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1257)
inline void TGFrameworkSupport::_IDimensionAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1258)
inline _bstr_t TGFrameworkSupport::_IDimensionAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1259)
inline double TGFrameworkSupport::_IDimensionAuto::GetAbsoluteTrackDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_AbsoluteTrackDistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1260)
inline IDispatchPtr TGFrameworkSupport::_IDimensionAuto::GetPMIPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_PMIPlane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1261)
inline double TGFrameworkSupport::_IDimensionAuto::GetPMITrackDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_PMITrackDistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1262)
inline void TGFrameworkSupport::_IDimensionAuto::PutPMITrackDistance ( double pdPMITrackDistance ) {
    HRESULT _hr = put_PMITrackDistance(pdPMITrackDistance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1263)
inline void TGFrameworkSupport::_IDimensionAuto::PutUseStandardLimitAndFitTolerance ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_UseStandardLimitAndFitTolerance(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1264)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionAuto::GetUseStandardLimitAndFitTolerance ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseStandardLimitAndFitTolerance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1265)
inline void TGFrameworkSupport::_IDimensionAuto::PutHoleClassString ( _bstr_t Value ) {
    HRESULT _hr = put_HoleClassString(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1266)
inline _bstr_t TGFrameworkSupport::_IDimensionAuto::GetHoleClassString ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HoleClassString(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1267)
inline void TGFrameworkSupport::_IDimensionAuto::PutShaftClassString ( _bstr_t Value ) {
    HRESULT _hr = put_ShaftClassString(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1268)
inline _bstr_t TGFrameworkSupport::_IDimensionAuto::GetShaftClassString ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShaftClassString(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1269)
inline void TGFrameworkSupport::_IDimensionAuto::PutInhibitZeroToleranceDisplay ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_InhibitZeroToleranceDisplay(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1270)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionAuto::GetInhibitZeroToleranceDisplay ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_InhibitZeroToleranceDisplay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1271)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::SetPMIEditDirection ( enum PMIEditDirectionConstants editDirectionConst ) {
    HRESULT _hr = raw_SetPMIEditDirection(editDirectionConst);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1272)
inline void TGFrameworkSupport::_IDimensionAuto::PutHidePMI ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_HidePMI(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1273)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionAuto::GetHidePMI ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HidePMI(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1274)
inline _bstr_t TGFrameworkSupport::_IDimensionAuto::GetPrefixDisplayedText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PrefixDisplayedText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1275)
inline _bstr_t TGFrameworkSupport::_IDimensionAuto::GetSuperfixDisplayedText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SuperfixDisplayedText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1276)
inline _bstr_t TGFrameworkSupport::_IDimensionAuto::GetSuffixDisplayedText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SuffixDisplayedText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1277)
inline _bstr_t TGFrameworkSupport::_IDimensionAuto::GetSubfixDisplayedText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SubfixDisplayedText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1278)
inline _bstr_t TGFrameworkSupport::_IDimensionAuto::GetSubfix2DisplayedText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Subfix2DisplayedText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1279)
inline void TGFrameworkSupport::_IDimensionAuto::PutStyle ( struct DimStyle * pStyle ) {
    HRESULT _hr = put_Style(pStyle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1280)
inline void TGFrameworkSupport::_IDimensionAuto::PutRadialExtensionDistance ( double pdRadialExtensionDistance ) {
    HRESULT _hr = put_RadialExtensionDistance(pdRadialExtensionDistance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1281)
inline double TGFrameworkSupport::_IDimensionAuto::GetRadialExtensionDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_RadialExtensionDistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1282)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::GetDiscreteValues ( int * pnumDiscreteValues, SAFEARRAY * * DiscreteValues ) {
    HRESULT _hr = raw_GetDiscreteValues(pnumDiscreteValues, DiscreteValues);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1283)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::SetDiscreteValues ( int numDiscreteValues, SAFEARRAY * * DiscreteValues ) {
    HRESULT _hr = raw_SetDiscreteValues(numDiscreteValues, DiscreteValues);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1284)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::GetMultipleJogPoints ( int * numJogPoints, double * initialYOffset, SAFEARRAY * * XOffsets, SAFEARRAY * * YOffsets, SAFEARRAY * * DistBet2Jogs ) {
    HRESULT _hr = raw_GetMultipleJogPoints(numJogPoints, initialYOffset, XOffsets, YOffsets, DistBet2Jogs);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1285)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::SetMultipleJogPoints ( int numJogPoints, double initialYOffset, SAFEARRAY * * XOffsets, SAFEARRAY * * YOffsets, SAFEARRAY * * DistBet2Jogs ) {
    HRESULT _hr = raw_SetMultipleJogPoints(numJogPoints, initialYOffset, XOffsets, YOffsets, DistBet2Jogs);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1286)
inline _bstr_t TGFrameworkSupport::_IDimensionAuto::GetComment ( ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetComment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1287)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::SetComment ( _bstr_t Comment ) {
    HRESULT _hr = raw_SetComment(Comment);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1288)
inline enum TGFrameworkSupport::DimStatusConstants TGFrameworkSupport::_IDimensionAuto::UpdateStatus ( ) {
    enum DimStatusConstants _result;
    HRESULT _hr = raw_UpdateStatus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1289)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::RemoveFromAlignmentSet ( ) {
    HRESULT _hr = raw_RemoveFromAlignmentSet();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1290)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::BreakAlignmentSet ( ) {
    HRESULT _hr = raw_BreakAlignmentSet();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1291)
inline void TGFrameworkSupport::_IDimensionAuto::PutTrue3DSketchDimension ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_True3DSketchDimension(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1292)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionAuto::GetTrue3DSketchDimension ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_True3DSketchDimension(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1293)
inline enum TGFrameworkSupport::DimReattachStatusConstants TGFrameworkSupport::_IDimensionAuto::ReattachToDrawingView ( IDispatch * DrawingView ) {
    enum DimReattachStatusConstants _result;
    HRESULT _hr = raw_ReattachToDrawingView(DrawingView, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1294)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::GetValueDiscreteValues ( SAFEARRAY * * DiscreteValues ) {
    HRESULT _hr = raw_GetValueDiscreteValues(DiscreteValues);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1295)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::SetValueDiscreteValues ( SAFEARRAY * * DiscreteValues ) {
    HRESULT _hr = raw_SetValueDiscreteValues(DiscreteValues);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1296)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::AddDiscreteValue ( double DiscreteValue ) {
    HRESULT _hr = raw_AddDiscreteValue(DiscreteValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1297)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::RemoveDiscreteValue ( double DiscreteValue ) {
    HRESULT _hr = raw_RemoveDiscreteValue(DiscreteValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1298)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::SetValueRangeValues ( double LowValue, int Condition, double HighValue ) {
    HRESULT _hr = raw_SetValueRangeValues(LowValue, Condition, HighValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1299)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::GetValueRangeValues ( double * LowValue, int * Condition, double * HighValue ) {
    HRESULT _hr = raw_GetValueRangeValues(LowValue, Condition, HighValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1300)
inline void TGFrameworkSupport::_IDimensionAuto::PutUnitsType ( int pUnitType ) {
    HRESULT _hr = put_UnitsType(pUnitType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1301)
inline int TGFrameworkSupport::_IDimensionAuto::GetUnitsType ( ) {
    int _result = 0;
    HRESULT _hr = get_UnitsType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1302)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::GetValueRangeHighValue ( double * pdHighValue ) {
    HRESULT _hr = raw_GetValueRangeHighValue(pdHighValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1303)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::SetValueRangeHighValue ( double dHighValue ) {
    HRESULT _hr = raw_SetValueRangeHighValue(dHighValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1304)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::GetValueRangeLowValue ( double * pdHighValue ) {
    HRESULT _hr = raw_GetValueRangeLowValue(pdHighValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1305)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::SetValueRangeLowValue ( double dHighValue ) {
    HRESULT _hr = raw_SetValueRangeLowValue(dHighValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1306)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::ClearLimitsOrDiscreteValues ( ) {
    HRESULT _hr = raw_ClearLimitsOrDiscreteValues();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1307)
inline double TGFrameworkSupport::_IDimensionAuto::GetValueOutOfRange ( ) {
    double _result = 0;
    HRESULT _hr = raw_GetValueOutOfRange(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1308)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionAuto::GetIsReadOnly ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsReadOnly(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1309)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::GetValueEx ( double * pdValue, enum TGFramework::seUnitsTypeConstants seUnitsType ) {
    HRESULT _hr = raw_GetValueEx(pdValue, seUnitsType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1310)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::SetValueEx ( double dValue, enum TGFramework::seUnitsTypeConstants seUnitsType ) {
    HRESULT _hr = raw_SetValueEx(dValue, seUnitsType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1311)
inline void TGFrameworkSupport::_IDimensionAuto::PutEnablePrefix ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_EnablePrefix(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1312)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionAuto::GetEnablePrefix ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_EnablePrefix(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1313)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::AutoScaleSketch ( double dValue, VARIANT_BOOL * Value ) {
    HRESULT _hr = raw_AutoScaleSketch(dValue, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1314)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::SetValueAndUpdateCache ( double dValue, enum TGFramework::seUnitsTypeConstants seUnitsType ) {
    HRESULT _hr = raw_SetValueAndUpdateCache(dValue, seUnitsType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1315)
inline HRESULT TGFrameworkSupport::_IDimensionAuto::ConvertCDiameterToRDiameter ( enum DimTypeConstants Type ) {
    HRESULT _hr = raw_ConvertCDiameterToRDiameter(Type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface DimensionStyle wrapper method implementations
//

#pragma implementation_key(1316)
inline void TGFrameworkSupport::DimensionStyle::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1317)
inline _bstr_t TGFrameworkSupport::DimensionStyle::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1318)
inline void TGFrameworkSupport::DimensionStyle::PutPrimaryUnits ( enum DimLinearUnitConstants _arg1 ) {
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1319)
inline enum TGFrameworkSupport::DimLinearUnitConstants TGFrameworkSupport::DimensionStyle::GetPrimaryUnits ( ) {
    enum DimLinearUnitConstants _result;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1320)
inline void TGFrameworkSupport::DimensionStyle::PutRoundOffType ( enum DimRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1321)
inline enum TGFrameworkSupport::DimRoundOffTypeConstants TGFrameworkSupport::DimensionStyle::GetRoundOffType ( ) {
    enum DimRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1322)
inline void TGFrameworkSupport::DimensionStyle::PutDelimiter ( enum DimDelimiterTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1323)
inline enum TGFrameworkSupport::DimDelimiterTypeConstants TGFrameworkSupport::DimensionStyle::GetDelimiter ( ) {
    enum DimDelimiterTypeConstants _result;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1324)
inline void TGFrameworkSupport::DimensionStyle::PutPrimaryDecimalRoundOff ( enum DimDecimalRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1325)
inline enum TGFrameworkSupport::DimDecimalRoundOffTypeConstants TGFrameworkSupport::DimensionStyle::GetPrimaryDecimalRoundOff ( ) {
    enum DimDecimalRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1326)
inline void TGFrameworkSupport::DimensionStyle::PutPrimaryFractionRoundOff ( enum DimFractionRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1327)
inline enum TGFrameworkSupport::DimFractionRoundOffTypeConstants TGFrameworkSupport::DimensionStyle::GetPrimaryFractionRoundOff ( ) {
    enum DimFractionRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1328)
inline void TGFrameworkSupport::DimensionStyle::PutAngularUnits ( enum DimAngularUnitConstants _arg1 ) {
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1329)
inline enum TGFrameworkSupport::DimAngularUnitConstants TGFrameworkSupport::DimensionStyle::GetAngularUnits ( ) {
    enum DimAngularUnitConstants _result;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1330)
inline void TGFrameworkSupport::DimensionStyle::PutAngularDMSRoundOff ( enum DimDMSRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1331)
inline enum TGFrameworkSupport::DimDMSRoundOffTypeConstants TGFrameworkSupport::DimensionStyle::GetAngularDMSRoundOff ( ) {
    enum DimDMSRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1332)
inline void TGFrameworkSupport::DimensionStyle::PutAngularDecimalRoundOff ( enum DimDecimalRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1333)
inline enum TGFrameworkSupport::DimDecimalRoundOffTypeConstants TGFrameworkSupport::DimensionStyle::GetAngularDecimalRoundOff ( ) {
    enum DimDecimalRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1334)
inline void TGFrameworkSupport::DimensionStyle::PutAngularFractionRoundOff ( enum DimFractionRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1335)
inline enum TGFrameworkSupport::DimFractionRoundOffTypeConstants TGFrameworkSupport::DimensionStyle::GetAngularFractionRoundOff ( ) {
    enum DimFractionRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1336)
inline void TGFrameworkSupport::DimensionStyle::PutPrimaryLeadingZeros ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1337)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetPrimaryLeadingZeros ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1338)
inline void TGFrameworkSupport::DimensionStyle::PutPrimaryTrailingZeros ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1339)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetPrimaryTrailingZeros ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1340)
inline void TGFrameworkSupport::DimensionStyle::PutPrimaryUnitLabel ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1341)
inline _bstr_t TGFrameworkSupport::DimensionStyle::GetPrimaryUnitLabel ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1342)
inline void TGFrameworkSupport::DimensionStyle::PutPrimarySubunitsLabel ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1343)
inline _bstr_t TGFrameworkSupport::DimensionStyle::GetPrimarySubunitsLabel ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1344)
inline void TGFrameworkSupport::DimensionStyle::PutMaximumSubunits ( int _arg1 ) {
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1345)
inline int TGFrameworkSupport::DimensionStyle::GetMaximumSubunits ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1346)
inline void TGFrameworkSupport::DimensionStyle::PutDualDisplay ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1347)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetDualDisplay ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1348)
inline void TGFrameworkSupport::DimensionStyle::PutSecondaryUnits ( enum DimLinearUnitConstants _arg1 ) {
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1349)
inline enum TGFrameworkSupport::DimLinearUnitConstants TGFrameworkSupport::DimensionStyle::GetSecondaryUnits ( ) {
    enum DimLinearUnitConstants _result;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1350)
inline void TGFrameworkSupport::DimensionStyle::PutSecondaryUnitRoundOff ( enum DimRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1351)
inline enum TGFrameworkSupport::DimRoundOffTypeConstants TGFrameworkSupport::DimensionStyle::GetSecondaryUnitRoundOff ( ) {
    enum DimRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1352)
inline void TGFrameworkSupport::DimensionStyle::PutSecondaryDecimalRoundOff ( enum DimDecimalRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1353)
inline enum TGFrameworkSupport::DimDecimalRoundOffTypeConstants TGFrameworkSupport::DimensionStyle::GetSecondaryDecimalRoundOff ( ) {
    enum DimDecimalRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1354)
inline void TGFrameworkSupport::DimensionStyle::PutSecondaryFractionRoundOff ( enum DimFractionRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1355)
inline enum TGFrameworkSupport::DimFractionRoundOffTypeConstants TGFrameworkSupport::DimensionStyle::GetSecondaryFractionRoundOff ( ) {
    enum DimFractionRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1356)
inline void TGFrameworkSupport::DimensionStyle::PutSecondaryLeadingZeros ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1357)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetSecondaryLeadingZeros ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1358)
inline void TGFrameworkSupport::DimensionStyle::PutSecondaryTrailingZeros ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1359)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetSecondaryTrailingZeros ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1360)
inline void TGFrameworkSupport::DimensionStyle::PutSecondaryUnitLabel ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1361)
inline _bstr_t TGFrameworkSupport::DimensionStyle::GetSecondaryUnitLabel ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1362)
inline void TGFrameworkSupport::DimensionStyle::PutSecondarySubunitsLabel ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1363)
inline _bstr_t TGFrameworkSupport::DimensionStyle::GetSecondarySubunitsLabel ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1364)
inline void TGFrameworkSupport::DimensionStyle::PutHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1365)
inline double TGFrameworkSupport::DimensionStyle::GetHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1366)
inline void TGFrameworkSupport::DimensionStyle::PutRatio ( double _arg1 ) {
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1367)
inline double TGFrameworkSupport::DimensionStyle::GetRatio ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1368)
inline void TGFrameworkSupport::DimensionStyle::PutTextWeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1369)
inline double TGFrameworkSupport::DimensionStyle::GetTextWeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1370)
inline void TGFrameworkSupport::DimensionStyle::PutFont ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1371)
inline _bstr_t TGFrameworkSupport::DimensionStyle::GetFont ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1372)
inline void TGFrameworkSupport::DimensionStyle::PutFontStyle ( enum DimTextFontStyleConstants _arg1 ) {
    _com_dispatch_method(this, 0x1c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1373)
inline enum TGFrameworkSupport::DimTextFontStyleConstants TGFrameworkSupport::DimensionStyle::GetFontStyle ( ) {
    enum DimTextFontStyleConstants _result;
    _com_dispatch_method(this, 0x1c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1374)
inline void TGFrameworkSupport::DimensionStyle::PutTextOrientation ( enum DimTextOrientationConstants _arg1 ) {
    _com_dispatch_method(this, 0x1d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1375)
inline enum TGFrameworkSupport::DimTextOrientationConstants TGFrameworkSupport::DimensionStyle::GetTextOrientation ( ) {
    enum DimTextOrientationConstants _result;
    _com_dispatch_method(this, 0x1d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1376)
inline void TGFrameworkSupport::DimensionStyle::PutTextPosition ( enum DimTextPositionConstants _arg1 ) {
    _com_dispatch_method(this, 0x1e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1377)
inline enum TGFrameworkSupport::DimTextPositionConstants TGFrameworkSupport::DimensionStyle::GetTextPosition ( ) {
    enum DimTextPositionConstants _result;
    _com_dispatch_method(this, 0x1e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1378)
inline void TGFrameworkSupport::DimensionStyle::PutLimitTextArrangement ( enum DimLimitTextArrangmentConstants _arg1 ) {
    _com_dispatch_method(this, 0x20, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1379)
inline enum TGFrameworkSupport::DimLimitTextArrangmentConstants TGFrameworkSupport::DimensionStyle::GetLimitTextArrangement ( ) {
    enum DimLimitTextArrangmentConstants _result;
    _com_dispatch_method(this, 0x20, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1380)
inline void TGFrameworkSupport::DimensionStyle::PutToleranceHeightRatio ( double _arg1 ) {
    _com_dispatch_method(this, 0x21, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1381)
inline double TGFrameworkSupport::DimensionStyle::GetToleranceHeightRatio ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x21, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1382)
inline void TGFrameworkSupport::DimensionStyle::PutToleranceWeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x22, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1383)
inline double TGFrameworkSupport::DimensionStyle::GetToleranceWeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x22, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1384)
inline void TGFrameworkSupport::DimensionStyle::PutNTSSymbol ( enum DimNTSTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x2f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1385)
inline enum TGFrameworkSupport::DimNTSTypeConstants TGFrameworkSupport::DimensionStyle::GetNTSSymbol ( ) {
    enum DimNTSTypeConstants _result;
    _com_dispatch_method(this, 0x2f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1386)
inline void TGFrameworkSupport::DimensionStyle::PutTerminatorType ( enum DimTermTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x30, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1387)
inline enum TGFrameworkSupport::DimTermTypeConstants TGFrameworkSupport::DimensionStyle::GetTerminatorType ( ) {
    enum DimTermTypeConstants _result;
    _com_dispatch_method(this, 0x30, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1388)
inline void TGFrameworkSupport::DimensionStyle::PutTerminatorDisplay ( enum DimTermDisplayTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x31, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1389)
inline enum TGFrameworkSupport::DimTermDisplayTypeConstants TGFrameworkSupport::DimensionStyle::GetTerminatorDisplay ( ) {
    enum DimTermDisplayTypeConstants _result;
    _com_dispatch_method(this, 0x31, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1390)
inline void TGFrameworkSupport::DimensionStyle::PutOriginTerminatorType ( enum DimTermTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x32, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1391)
inline enum TGFrameworkSupport::DimTermTypeConstants TGFrameworkSupport::DimensionStyle::GetOriginTerminatorType ( ) {
    enum DimTermTypeConstants _result;
    _com_dispatch_method(this, 0x32, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1392)
inline void TGFrameworkSupport::DimensionStyle::PutFreeSpaceTerminatorType ( enum DimTermTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x33, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1393)
inline enum TGFrameworkSupport::DimTermTypeConstants TGFrameworkSupport::DimensionStyle::GetFreeSpaceTerminatorType ( ) {
    enum DimTermTypeConstants _result;
    _com_dispatch_method(this, 0x33, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1394)
inline void TGFrameworkSupport::DimensionStyle::PutDatumTerminatorType ( enum DimDatumTermTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x34, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1395)
inline enum TGFrameworkSupport::DimDatumTermTypeConstants TGFrameworkSupport::DimensionStyle::GetDatumTerminatorType ( ) {
    enum DimDatumTermTypeConstants _result;
    _com_dispatch_method(this, 0x34, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1396)
inline void TGFrameworkSupport::DimensionStyle::PutTerminatorSize ( double _arg1 ) {
    _com_dispatch_method(this, 0x35, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1397)
inline double TGFrameworkSupport::DimensionStyle::GetTerminatorSize ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x35, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1398)
inline void TGFrameworkSupport::DimensionStyle::PutTerminatorInsideLimit ( double _arg1 ) {
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1399)
inline double TGFrameworkSupport::DimensionStyle::GetTerminatorInsideLimit ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1400)
inline void TGFrameworkSupport::DimensionStyle::PutLineWidth ( double _arg1 ) {
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1401)
inline double TGFrameworkSupport::DimensionStyle::GetLineWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1402)
inline void TGFrameworkSupport::DimensionStyle::PutProjectionExtensionGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x38, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1403)
inline double TGFrameworkSupport::DimensionStyle::GetProjectionExtensionGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x38, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1404)
inline void TGFrameworkSupport::DimensionStyle::PutProjectionOffsetGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x39, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1405)
inline double TGFrameworkSupport::DimensionStyle::GetProjectionOffsetGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x39, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1406)
inline void TGFrameworkSupport::DimensionStyle::PutProjectionOffsetGapAlignment ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1407)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetProjectionOffsetGapAlignment ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1408)
inline void TGFrameworkSupport::DimensionStyle::PutProjectionAngle ( double _arg1 ) {
    _com_dispatch_method(this, 0x3b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1409)
inline double TGFrameworkSupport::DimensionStyle::GetProjectionAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1410)
inline void TGFrameworkSupport::DimensionStyle::PutLineConnect ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1411)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetLineConnect ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1412)
inline void TGFrameworkSupport::DimensionStyle::PutStackPitch ( double _arg1 ) {
    _com_dispatch_method(this, 0x3d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1413)
inline double TGFrameworkSupport::DimensionStyle::GetStackPitch ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3d, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1414)
inline void TGFrameworkSupport::DimensionStyle::PutLeaderLineLength ( double _arg1 ) {
    _com_dispatch_method(this, 0x3e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1415)
inline double TGFrameworkSupport::DimensionStyle::GetLeaderLineLength ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3e, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1416)
inline void TGFrameworkSupport::DimensionStyle::PutCoordinateAutoJog ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x42, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1417)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetCoordinateAutoJog ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x42, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1418)
inline void TGFrameworkSupport::DimensionStyle::PutCoordinateStackPitch ( double _arg1 ) {
    _com_dispatch_method(this, 0x43, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1419)
inline double TGFrameworkSupport::DimensionStyle::GetCoordinateStackPitch ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x43, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1420)
inline void TGFrameworkSupport::DimensionStyle::PutCommonOrigin ( enum DimCommonOriginTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x44, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1421)
inline enum TGFrameworkSupport::DimCommonOriginTypeConstants TGFrameworkSupport::DimensionStyle::GetCommonOrigin ( ) {
    enum DimCommonOriginTypeConstants _result;
    _com_dispatch_method(this, 0x44, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1422)
inline void TGFrameworkSupport::DimensionStyle::PutCoordinateTextPosition ( enum DimCoordTextPositionConstants _arg1 ) {
    _com_dispatch_method(this, 0x1f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1423)
inline enum TGFrameworkSupport::DimCoordTextPositionConstants TGFrameworkSupport::DimensionStyle::GetCoordinateTextPosition ( ) {
    enum DimCoordTextPositionConstants _result;
    _com_dispatch_method(this, 0x1f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1424)
inline void TGFrameworkSupport::DimensionStyle::PutSymbolPosition ( enum DimSymbolPositionConstants _arg1 ) {
    _com_dispatch_method(this, 0x45, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1425)
inline enum TGFrameworkSupport::DimSymbolPositionConstants TGFrameworkSupport::DimensionStyle::GetSymbolPosition ( ) {
    enum DimSymbolPositionConstants _result;
    _com_dispatch_method(this, 0x45, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1426)
inline void TGFrameworkSupport::DimensionStyle::PutAutoSuppressDiameter ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x46, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1427)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetAutoSuppressDiameter ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x46, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1428)
inline void TGFrameworkSupport::DimensionStyle::PutDimensionScaleMode ( enum DimScaleModeConstants _arg1 ) {
    _com_dispatch_method(this, 0x47, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1429)
inline enum TGFrameworkSupport::DimScaleModeConstants TGFrameworkSupport::DimensionStyle::GetDimensionScaleMode ( ) {
    enum DimScaleModeConstants _result;
    _com_dispatch_method(this, 0x47, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1430)
inline void TGFrameworkSupport::DimensionStyle::PutDimensionScale ( double _arg1 ) {
    _com_dispatch_method(this, 0x48, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1431)
inline double TGFrameworkSupport::DimensionStyle::GetDimensionScale ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x48, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1432)
inline void TGFrameworkSupport::DimensionStyle::PutErrorColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x4b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1433)
inline long TGFrameworkSupport::DimensionStyle::GetErrorColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1434)
inline void TGFrameworkSupport::DimensionStyle::PutDrivingColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x49, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1435)
inline long TGFrameworkSupport::DimensionStyle::GetDrivingColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x49, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1436)
inline void TGFrameworkSupport::DimensionStyle::PutDrivenColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x4a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1437)
inline long TGFrameworkSupport::DimensionStyle::GetDrivenColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1438)
inline void TGFrameworkSupport::DimensionStyle::PutAutoCenterProjectionLine ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x41, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1439)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetAutoCenterProjectionLine ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x41, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1440)
inline void TGFrameworkSupport::DimensionStyle::PutProjectionLineDisplay ( enum DimProjDisplayTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x3f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1441)
inline enum TGFrameworkSupport::DimProjDisplayTypeConstants TGFrameworkSupport::DimensionStyle::GetProjectionLineDisplay ( ) {
    enum DimProjDisplayTypeConstants _result;
    _com_dispatch_method(this, 0x3f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1442)
inline void TGFrameworkSupport::DimensionStyle::PutProjectionLineDisplayForIntersectionPoint ( enum DimProjDisplayTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x4ae, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1443)
inline enum TGFrameworkSupport::DimProjDisplayTypeConstants TGFrameworkSupport::DimensionStyle::GetProjectionLineDisplayForIntersectionPoint ( ) {
    enum DimProjDisplayTypeConstants _result;
    _com_dispatch_method(this, 0x4ae, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1444)
inline void TGFrameworkSupport::DimensionStyle::PutTextClearanceGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x23, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1445)
inline double TGFrameworkSupport::DimensionStyle::GetTextClearanceGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x23, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1446)
inline void TGFrameworkSupport::DimensionStyle::PutDualModeVerticalGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x24, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1447)
inline double TGFrameworkSupport::DimensionStyle::GetDualModeVerticalGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x24, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1448)
inline void TGFrameworkSupport::DimensionStyle::PutLineSpacing ( double _arg1 ) {
    _com_dispatch_method(this, 0x26, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1449)
inline double TGFrameworkSupport::DimensionStyle::GetLineSpacing ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x26, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1450)
inline void TGFrameworkSupport::DimensionStyle::PutAboveGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x27, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1451)
inline double TGFrameworkSupport::DimensionStyle::GetAboveGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x27, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1452)
inline void TGFrameworkSupport::DimensionStyle::PutHorizontalToleranceGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x28, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1453)
inline double TGFrameworkSupport::DimensionStyle::GetHorizontalToleranceGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x28, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1454)
inline void TGFrameworkSupport::DimensionStyle::PutVerticalToleranceGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x29, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1455)
inline double TGFrameworkSupport::DimensionStyle::GetVerticalToleranceGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x29, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1456)
inline void TGFrameworkSupport::DimensionStyle::PutVerticalLimitsGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x2a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1457)
inline double TGFrameworkSupport::DimensionStyle::GetVerticalLimitsGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x2a, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1458)
inline void TGFrameworkSupport::DimensionStyle::PutHorizontalBoxGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x2b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1459)
inline double TGFrameworkSupport::DimensionStyle::GetHorizontalBoxGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x2b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1460)
inline void TGFrameworkSupport::DimensionStyle::PutVerticalBoxGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x2c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1461)
inline double TGFrameworkSupport::DimensionStyle::GetVerticalBoxGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x2c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1462)
inline void TGFrameworkSupport::DimensionStyle::PutPrefixSuffixGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x2d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1463)
inline double TGFrameworkSupport::DimensionStyle::GetPrefixSuffixGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x2d, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1464)
inline void TGFrameworkSupport::DimensionStyle::PutSymbolGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x2e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1465)
inline double TGFrameworkSupport::DimensionStyle::GetSymbolGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x2e, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1466)
inline void TGFrameworkSupport::DimensionStyle::PutMaximumViewAngle ( double _arg1 ) {
    _com_dispatch_method(this, 0x4c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1467)
inline double TGFrameworkSupport::DimensionStyle::GetMaximumViewAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1468)
inline void TGFrameworkSupport::DimensionStyle::PutProjectionToleranceZonePosition ( enum DimProjTolZonePositionConstants _arg1 ) {
    _com_dispatch_method(this, 0x4d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1469)
inline enum TGFrameworkSupport::DimProjTolZonePositionConstants TGFrameworkSupport::DimensionStyle::GetProjectionToleranceZonePosition ( ) {
    enum DimProjTolZonePositionConstants _result;
    _com_dispatch_method(this, 0x4d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1470)
inline void TGFrameworkSupport::DimensionStyle::PutDatumFrameDashes ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1471)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetDatumFrameDashes ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1472)
inline void TGFrameworkSupport::DimensionStyle::PutViewTextRatio ( double _arg1 ) {
    _com_dispatch_method(this, 0x4f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1473)
inline double TGFrameworkSupport::DimensionStyle::GetViewTextRatio ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4f, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1474)
inline void TGFrameworkSupport::DimensionStyle::PutViewTerminatorRatio ( double _arg1 ) {
    _com_dispatch_method(this, 0x50, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1475)
inline double TGFrameworkSupport::DimensionStyle::GetViewTerminatorRatio ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x50, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1476)
inline void TGFrameworkSupport::DimensionStyle::PutViewLineWidth ( double _arg1 ) {
    _com_dispatch_method(this, 0x51, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1477)
inline double TGFrameworkSupport::DimensionStyle::GetViewLineWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x51, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1478)
inline void TGFrameworkSupport::DimensionStyle::PutViewLineType ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x52, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1479)
inline _bstr_t TGFrameworkSupport::DimensionStyle::GetViewLineType ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x52, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1480)
inline void TGFrameworkSupport::DimensionStyle::PutViewCuttingPlaneLineDisplay ( enum DimViewCuttingPlaneDisplayTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x53, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1481)
inline enum TGFrameworkSupport::DimViewCuttingPlaneDisplayTypeConstants TGFrameworkSupport::DimensionStyle::GetViewCuttingPlaneLineDisplay ( ) {
    enum DimViewCuttingPlaneDisplayTypeConstants _result;
    _com_dispatch_method(this, 0x53, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1482)
inline void TGFrameworkSupport::DimensionStyle::PutViewPlaneLineDisplay ( enum DimViewPlaneDisplayTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x54, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1483)
inline enum TGFrameworkSupport::DimViewPlaneDisplayTypeConstants TGFrameworkSupport::DimensionStyle::GetViewPlaneLineDisplay ( ) {
    enum DimViewPlaneDisplayTypeConstants _result;
    _com_dispatch_method(this, 0x54, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1484)
inline void TGFrameworkSupport::DimensionStyle::PutViewCaptionLocation ( enum DimViewCaptionLocationConstants _arg1 ) {
    _com_dispatch_method(this, 0x457, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1485)
inline enum TGFrameworkSupport::DimViewCaptionLocationConstants TGFrameworkSupport::DimensionStyle::GetViewCaptionLocation ( ) {
    enum DimViewCaptionLocationConstants _result;
    _com_dispatch_method(this, 0x457, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1486)
inline void TGFrameworkSupport::DimensionStyle::PutViewCPLCaptionLocation ( enum DimViewCPLCaptionLocationConstants _arg1 ) {
    _com_dispatch_method(this, 0x458, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1487)
inline enum TGFrameworkSupport::DimViewCPLCaptionLocationConstants TGFrameworkSupport::DimensionStyle::GetViewCPLCaptionLocation ( ) {
    enum DimViewCPLCaptionLocationConstants _result;
    _com_dispatch_method(this, 0x458, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1488)
inline void TGFrameworkSupport::DimensionStyle::PutViewSuffixAsPrefix ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x459, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1489)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetViewSuffixAsPrefix ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x459, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1490)
inline void TGFrameworkSupport::DimensionStyle::PutViewThinTerminator ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x45a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1491)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetViewThinTerminator ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x45a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1492)
inline void TGFrameworkSupport::DimensionStyle::PutViewVPLCaptionAtEnd ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x45b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1493)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetViewVPLCaptionAtEnd ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x45b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1494)
inline void TGFrameworkSupport::DimensionStyle::PutOffsetLeaderType ( enum DimOffsetLeaderTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x56, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1495)
inline enum TGFrameworkSupport::DimOffsetLeaderTypeConstants TGFrameworkSupport::DimensionStyle::GetOffsetLeaderType ( ) {
    enum DimOffsetLeaderTypeConstants _result;
    _com_dispatch_method(this, 0x56, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1496)
inline void TGFrameworkSupport::DimensionStyle::PutSecondaryToleranceEquivalent ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x55, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1497)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetSecondaryToleranceEquivalent ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x55, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1498)
inline void TGFrameworkSupport::DimensionStyle::PutCenterLineType ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x57, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1499)
inline _bstr_t TGFrameworkSupport::DimensionStyle::GetCenterLineType ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x57, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1500)
inline _bstr_t TGFrameworkSupport::DimensionStyle::GetDescription ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1501)
inline void TGFrameworkSupport::DimensionStyle::PutParent ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1502)
inline _bstr_t TGFrameworkSupport::DimensionStyle::GetParent ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1503)
inline void TGFrameworkSupport::DimensionStyle::PutCenterMarkSize ( double _arg1 ) {
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1504)
inline double TGFrameworkSupport::DimensionStyle::GetCenterMarkSize ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1505)
inline void TGFrameworkSupport::DimensionStyle::PutAutoPhase ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1506)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetAutoPhase ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1507)
inline void TGFrameworkSupport::DimensionStyle::PutRoundUp ( enum DimRoundUpTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x58, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1508)
inline enum TGFrameworkSupport::DimRoundUpTypeConstants TGFrameworkSupport::DimensionStyle::GetRoundUp ( ) {
    enum DimRoundUpTypeConstants _result;
    _com_dispatch_method(this, 0x58, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1509)
inline void TGFrameworkSupport::DimensionStyle::PutSecondaryLinearRoundOffType ( enum DimRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x59, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1510)
inline enum TGFrameworkSupport::DimRoundOffTypeConstants TGFrameworkSupport::DimensionStyle::GetSecondaryLinearRoundOffType ( ) {
    enum DimRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0x59, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1511)
inline void TGFrameworkSupport::DimensionStyle::PutAngularRoundOffType ( enum DimRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x5a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1512)
inline enum TGFrameworkSupport::DimRoundOffTypeConstants TGFrameworkSupport::DimensionStyle::GetAngularRoundOffType ( ) {
    enum DimRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0x5a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1513)
inline void TGFrameworkSupport::DimensionStyle::PutCenterMarkExtension ( double _arg1 ) {
    _com_dispatch_method(this, 0x5b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1514)
inline double TGFrameworkSupport::DimensionStyle::GetCenterMarkExtension ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x5b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1515)
inline void TGFrameworkSupport::DimensionStyle::PutChamferUse45DegreeCharacter ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x5c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1516)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetChamferUse45DegreeCharacter ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x5c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1517)
inline void TGFrameworkSupport::DimensionStyle::PutSmartDepthHoleThru ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x5d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1518)
inline _bstr_t TGFrameworkSupport::DimensionStyle::GetSmartDepthHoleThru ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x5d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1519)
inline void TGFrameworkSupport::DimensionStyle::PutSmartDepthHoleFinite ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x5e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1520)
inline _bstr_t TGFrameworkSupport::DimensionStyle::GetSmartDepthHoleFinite ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x5e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1521)
inline void TGFrameworkSupport::DimensionStyle::PutSmartDepthThreadThru ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x5f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1522)
inline _bstr_t TGFrameworkSupport::DimensionStyle::GetSmartDepthThreadThru ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x5f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1523)
inline void TGFrameworkSupport::DimensionStyle::PutSmartDepthThreadFinite ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x60, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1524)
inline _bstr_t TGFrameworkSupport::DimensionStyle::GetSmartDepthThreadFinite ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x60, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1525)
inline void TGFrameworkSupport::DimensionStyle::PutLowerCaseMultiplicationSymbol ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x45c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1526)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetLowerCaseMultiplicationSymbol ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x45c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1527)
inline void TGFrameworkSupport::DimensionStyle::PutHoleCalloutSimple ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xc8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1528)
inline _bstr_t TGFrameworkSupport::DimensionStyle::GetHoleCalloutSimple ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xc8, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1529)
inline void TGFrameworkSupport::DimensionStyle::PutHoleCalloutCounterbore ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xc9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1530)
inline _bstr_t TGFrameworkSupport::DimensionStyle::GetHoleCalloutCounterbore ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xc9, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1531)
inline void TGFrameworkSupport::DimensionStyle::PutHoleCalloutCountersink ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xca, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1532)
inline _bstr_t TGFrameworkSupport::DimensionStyle::GetHoleCalloutCountersink ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xca, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1533)
inline void TGFrameworkSupport::DimensionStyle::PutHoleCalloutSimpleThreaded ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xcb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1534)
inline _bstr_t TGFrameworkSupport::DimensionStyle::GetHoleCalloutSimpleThreaded ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xcb, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1535)
inline void TGFrameworkSupport::DimensionStyle::PutHoleCalloutCounterboreThreaded ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xcc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1536)
inline _bstr_t TGFrameworkSupport::DimensionStyle::GetHoleCalloutCounterboreThreaded ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xcc, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1537)
inline void TGFrameworkSupport::DimensionStyle::PutHoleCalloutCountersinkThreaded ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xcd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1538)
inline _bstr_t TGFrameworkSupport::DimensionStyle::GetHoleCalloutCountersinkThreaded ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xcd, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1539)
inline void TGFrameworkSupport::DimensionStyle::PutApplyBreakLineGap ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x45d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1540)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetApplyBreakLineGap ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x45d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1541)
inline void TGFrameworkSupport::DimensionStyle::PutTextAutoFillBackground ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x45e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1542)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetTextAutoFillBackground ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x45e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1543)
inline void TGFrameworkSupport::DimensionStyle::PutPulledOutTextOrientation ( enum DimTextOrientationConstants _arg1 ) {
    _com_dispatch_method(this, 0x45f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1544)
inline enum TGFrameworkSupport::DimTextOrientationConstants TGFrameworkSupport::DimensionStyle::GetPulledOutTextOrientation ( ) {
    enum DimTextOrientationConstants _result;
    _com_dispatch_method(this, 0x45f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1545)
inline void TGFrameworkSupport::DimensionStyle::PutPulledOutTextPosition ( enum DimTextPositionConstants _arg1 ) {
    _com_dispatch_method(this, 0x460, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1546)
inline enum TGFrameworkSupport::DimTextPositionConstants TGFrameworkSupport::DimensionStyle::GetPulledOutTextPosition ( ) {
    enum DimTextPositionConstants _result;
    _com_dispatch_method(this, 0x460, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1547)
inline void TGFrameworkSupport::DimensionStyle::PutOverridePulledOutText ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x461, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1548)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetOverridePulledOutText ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x461, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1549)
inline void TGFrameworkSupport::DimensionStyle::PutViewLineArrowOffset ( double _arg1 ) {
    _com_dispatch_method(this, 0x462, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1550)
inline double TGFrameworkSupport::DimensionStyle::GetViewLineArrowOffset ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x462, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1551)
inline void TGFrameworkSupport::DimensionStyle::PutViewThickLineLength ( double _arg1 ) {
    _com_dispatch_method(this, 0x463, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1552)
inline double TGFrameworkSupport::DimensionStyle::GetViewThickLineLength ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x463, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1553)
inline void TGFrameworkSupport::DimensionStyle::PutOrigTerminatorSize ( double _arg1 ) {
    _com_dispatch_method(this, 0x464, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1554)
inline double TGFrameworkSupport::DimensionStyle::GetOrigTerminatorSize ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x464, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1555)
inline void TGFrameworkSupport::DimensionStyle::PutConnectorLineType ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x465, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1556)
inline _bstr_t TGFrameworkSupport::DimensionStyle::GetConnectorLineType ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x465, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1557)
inline void TGFrameworkSupport::DimensionStyle::PutConnectorColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x466, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1558)
inline long TGFrameworkSupport::DimensionStyle::GetConnectorColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x466, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1559)
inline void TGFrameworkSupport::DimensionStyle::PutConnectorWidth ( double _arg1 ) {
    _com_dispatch_method(this, 0x467, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1560)
inline double TGFrameworkSupport::DimensionStyle::GetConnectorWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x467, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1561)
inline void TGFrameworkSupport::DimensionStyle::PutFractionSeparator ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x468, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1562)
inline _bstr_t TGFrameworkSupport::DimensionStyle::GetFractionSeparator ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x468, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1563)
inline void TGFrameworkSupport::DimensionStyle::PutHeightPMI ( double _arg1 ) {
    _com_dispatch_method(this, 0x469, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1564)
inline double TGFrameworkSupport::DimensionStyle::GetHeightPMI ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x469, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1565)
inline void TGFrameworkSupport::DimensionStyle::PutProjectionBreakGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x46a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1566)
inline double TGFrameworkSupport::DimensionStyle::GetProjectionBreakGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x46a, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1567)
inline void TGFrameworkSupport::DimensionStyle::PutSecondaryDelimiter ( enum DimDelimiterTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x46b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1568)
inline enum TGFrameworkSupport::DimDelimiterTypeConstants TGFrameworkSupport::DimensionStyle::GetSecondaryDelimiter ( ) {
    enum DimDelimiterTypeConstants _result;
    _com_dispatch_method(this, 0x46b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1569)
inline void TGFrameworkSupport::DimensionStyle::PutMatchPrimaryDelimiter ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x46c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1570)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetMatchPrimaryDelimiter ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x46c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1571)
inline void TGFrameworkSupport::DimensionStyle::PutInhibitZeroToleranceDisplay ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x46d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1572)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetInhibitZeroToleranceDisplay ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x46d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1573)
inline void TGFrameworkSupport::DimensionStyle::PutAllAroundMultiplier ( double _arg1 ) {
    _com_dispatch_method(this, 0x46e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1574)
inline double TGFrameworkSupport::DimensionStyle::GetAllAroundMultiplier ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x46e, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1575)
inline void TGFrameworkSupport::DimensionStyle::PutOverridePulledOutText2 ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x471, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1576)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetOverridePulledOutText2 ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x471, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1577)
inline void TGFrameworkSupport::DimensionStyle::PutPulledOutText2Orientation ( enum DimTextOrientationConstants _arg1 ) {
    _com_dispatch_method(this, 0x46f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1578)
inline enum TGFrameworkSupport::DimTextOrientationConstants TGFrameworkSupport::DimensionStyle::GetPulledOutText2Orientation ( ) {
    enum DimTextOrientationConstants _result;
    _com_dispatch_method(this, 0x46f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1579)
inline void TGFrameworkSupport::DimensionStyle::PutPulledOutText2Position ( enum DimTextPositionConstants _arg1 ) {
    _com_dispatch_method(this, 0x470, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1580)
inline enum TGFrameworkSupport::DimTextPositionConstants TGFrameworkSupport::DimensionStyle::GetPulledOutText2Position ( ) {
    enum DimTextPositionConstants _result;
    _com_dispatch_method(this, 0x470, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1581)
inline void TGFrameworkSupport::DimensionStyle::PutDisplayDegreeSymbolOnNumericTolerance ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x472, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1582)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetDisplayDegreeSymbolOnNumericTolerance ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x472, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1583)
inline void TGFrameworkSupport::DimensionStyle::PutZeroInchesForFTIN ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x473, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1584)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetZeroInchesForFTIN ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x473, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1585)
inline void TGFrameworkSupport::DimensionStyle::PutSymbolFont ( enum DimStyleSymbolFontConstants _arg1 ) {
    _com_dispatch_method(this, 0x474, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1586)
inline enum TGFrameworkSupport::DimStyleSymbolFontConstants TGFrameworkSupport::DimensionStyle::GetSymbolFont ( ) {
    enum DimStyleSymbolFontConstants _result;
    _com_dispatch_method(this, 0x474, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1587)
inline void TGFrameworkSupport::DimensionStyle::PutCalloutTextAspectRatio ( double _arg1 ) {
    _com_dispatch_method(this, 0x475, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1588)
inline double TGFrameworkSupport::DimensionStyle::GetCalloutTextAspectRatio ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x475, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1589)
inline void TGFrameworkSupport::DimensionStyle::PutDatumTerminatorGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x476, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1590)
inline double TGFrameworkSupport::DimensionStyle::GetDatumTerminatorGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x476, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1591)
inline void TGFrameworkSupport::DimensionStyle::PutDatumFrameShape ( enum DimStyleDatumFrameShapeConstants _arg1 ) {
    _com_dispatch_method(this, 0x477, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1592)
inline enum TGFrameworkSupport::DimStyleDatumFrameShapeConstants TGFrameworkSupport::DimensionStyle::GetDatumFrameShape ( ) {
    enum DimStyleDatumFrameShapeConstants _result;
    _com_dispatch_method(this, 0x477, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1593)
inline void TGFrameworkSupport::DimensionStyle::PutDisplayCoordinateOriginText ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x478, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1594)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetDisplayCoordinateOriginText ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x478, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1595)
inline void TGFrameworkSupport::DimensionStyle::PutPlacePrefixInsideBasicDimensionBox ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x479, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1596)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetPlacePrefixInsideBasicDimensionBox ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x479, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1597)
inline void TGFrameworkSupport::DimensionStyle::PutSecondaryUnitSeparator ( enum DimStyleSecondaryUnitSeparatorConstants _arg1 ) {
    _com_dispatch_method(this, 0x47a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1598)
inline enum TGFrameworkSupport::DimStyleSecondaryUnitSeparatorConstants TGFrameworkSupport::DimensionStyle::GetSecondaryUnitSeparator ( ) {
    enum DimStyleSecondaryUnitSeparatorConstants _result;
    _com_dispatch_method(this, 0x47a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1599)
inline void TGFrameworkSupport::DimensionStyle::PutWeldSymbolLineWidth ( double _arg1 ) {
    _com_dispatch_method(this, 0x47b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1600)
inline double TGFrameworkSupport::DimensionStyle::GetWeldSymbolLineWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x47b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1601)
inline void TGFrameworkSupport::DimensionStyle::PutThreeSidedSymbolOffsetGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x47c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1602)
inline double TGFrameworkSupport::DimensionStyle::GetThreeSidedSymbolOffsetGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x47c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1603)
inline void TGFrameworkSupport::DimensionStyle::PutHoleShaftToleranceSeparatorType ( enum DimHoleShaftSeparatorTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x47d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1604)
inline enum TGFrameworkSupport::DimHoleShaftSeparatorTypeConstants TGFrameworkSupport::DimensionStyle::GetHoleShaftToleranceSeparatorType ( ) {
    enum DimHoleShaftSeparatorTypeConstants _result;
    _com_dispatch_method(this, 0x47d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1605)
inline void TGFrameworkSupport::DimensionStyle::PutToleranceTextVerticalAlignment ( enum TextVerticalAlignmentConstants _arg1 ) {
    _com_dispatch_method(this, 0x47e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1606)
inline enum TGFrameworkSupport::TextVerticalAlignmentConstants TGFrameworkSupport::DimensionStyle::GetToleranceTextVerticalAlignment ( ) {
    enum TextVerticalAlignmentConstants _result;
    _com_dispatch_method(this, 0x47e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1607)
inline void TGFrameworkSupport::DimensionStyle::PutToleranceTextHorizontalAlignment ( enum DimToleranceTextHorizontalAlignOptionsConstants _arg1 ) {
    _com_dispatch_method(this, 0x47f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1608)
inline enum TGFrameworkSupport::DimToleranceTextHorizontalAlignOptionsConstants TGFrameworkSupport::DimensionStyle::GetToleranceTextHorizontalAlignment ( ) {
    enum DimToleranceTextHorizontalAlignOptionsConstants _result;
    _com_dispatch_method(this, 0x47f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1609)
inline void TGFrameworkSupport::DimensionStyle::PutUseTextSizeForCombinedTolValueDisplay ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x480, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1610)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetUseTextSizeForCombinedTolValueDisplay ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x480, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1611)
inline void TGFrameworkSupport::DimensionStyle::PutDatumFrameLineTermThickness ( double _arg1 ) {
    _com_dispatch_method(this, 0x481, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1612)
inline double TGFrameworkSupport::DimensionStyle::GetDatumFrameLineTermThickness ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x481, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1613)
inline void TGFrameworkSupport::DimensionStyle::PutDatumTargetTerminatorType ( enum DimDatumTargetTermTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x482, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1614)
inline enum TGFrameworkSupport::DimDatumTargetTermTypeConstants TGFrameworkSupport::DimensionStyle::GetDatumTargetTerminatorType ( ) {
    enum DimDatumTargetTermTypeConstants _result;
    _com_dispatch_method(this, 0x482, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1615)
inline void TGFrameworkSupport::DimensionStyle::PutPinSymbolTerminatorType ( enum DimPinSymbolTermTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x898, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1616)
inline enum TGFrameworkSupport::DimPinSymbolTermTypeConstants TGFrameworkSupport::DimensionStyle::GetPinSymbolTerminatorType ( ) {
    enum DimPinSymbolTermTypeConstants _result;
    _com_dispatch_method(this, 0x898, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1617)
inline void TGFrameworkSupport::DimensionStyle::PutPrimaryLinearToleranceUnits ( enum DimLinearUnitConstants _arg1 ) {
    _com_dispatch_method(this, 0x483, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1618)
inline enum TGFrameworkSupport::DimLinearUnitConstants TGFrameworkSupport::DimensionStyle::GetPrimaryLinearToleranceUnits ( ) {
    enum DimLinearUnitConstants _result;
    _com_dispatch_method(this, 0x483, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1619)
inline void TGFrameworkSupport::DimensionStyle::PutPrimaryLinearToleranceRoundOffType ( enum DimRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x484, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1620)
inline enum TGFrameworkSupport::DimRoundOffTypeConstants TGFrameworkSupport::DimensionStyle::GetPrimaryLinearToleranceRoundOffType ( ) {
    enum DimRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0x484, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1621)
inline void TGFrameworkSupport::DimensionStyle::PutPrimaryLinearToleranceDecimalRoundOff ( enum DimDecimalRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x485, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1622)
inline enum TGFrameworkSupport::DimDecimalRoundOffTypeConstants TGFrameworkSupport::DimensionStyle::GetPrimaryLinearToleranceDecimalRoundOff ( ) {
    enum DimDecimalRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0x485, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1623)
inline void TGFrameworkSupport::DimensionStyle::PutPrimaryLinearToleranceFractionRoundOff ( enum DimFractionRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x486, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1624)
inline enum TGFrameworkSupport::DimFractionRoundOffTypeConstants TGFrameworkSupport::DimensionStyle::GetPrimaryLinearToleranceFractionRoundOff ( ) {
    enum DimFractionRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0x486, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1625)
inline void TGFrameworkSupport::DimensionStyle::PutPrimaryLinearToleranceUnitLabel ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x487, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1626)
inline _bstr_t TGFrameworkSupport::DimensionStyle::GetPrimaryLinearToleranceUnitLabel ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x487, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1627)
inline void TGFrameworkSupport::DimensionStyle::PutPrimaryLinearToleranceSubunitsLabel ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x488, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1628)
inline _bstr_t TGFrameworkSupport::DimensionStyle::GetPrimaryLinearToleranceSubunitsLabel ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x488, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1629)
inline void TGFrameworkSupport::DimensionStyle::PutPrimaryLinearToleranceMaximumSubunits ( int _arg1 ) {
    _com_dispatch_method(this, 0x489, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1630)
inline int TGFrameworkSupport::DimensionStyle::GetPrimaryLinearToleranceMaximumSubunits ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x489, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1631)
inline void TGFrameworkSupport::DimensionStyle::PutPrimaryLinearToleranceFractionSeparator ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x48a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1632)
inline _bstr_t TGFrameworkSupport::DimensionStyle::GetPrimaryLinearToleranceFractionSeparator ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x48a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1633)
inline void TGFrameworkSupport::DimensionStyle::PutAngularToleranceUnits ( enum DimAngularUnitConstants _arg1 ) {
    _com_dispatch_method(this, 0x48b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1634)
inline enum TGFrameworkSupport::DimAngularUnitConstants TGFrameworkSupport::DimensionStyle::GetAngularToleranceUnits ( ) {
    enum DimAngularUnitConstants _result;
    _com_dispatch_method(this, 0x48b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1635)
inline void TGFrameworkSupport::DimensionStyle::PutAngularToleranceRoundOffType ( enum DimRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x48c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1636)
inline enum TGFrameworkSupport::DimRoundOffTypeConstants TGFrameworkSupport::DimensionStyle::GetAngularToleranceRoundOffType ( ) {
    enum DimRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0x48c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1637)
inline void TGFrameworkSupport::DimensionStyle::PutAngularToleranceDMSRoundOff ( enum DimDMSRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x48d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1638)
inline enum TGFrameworkSupport::DimDMSRoundOffTypeConstants TGFrameworkSupport::DimensionStyle::GetAngularToleranceDMSRoundOff ( ) {
    enum DimDMSRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0x48d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1639)
inline void TGFrameworkSupport::DimensionStyle::PutAngularToleranceDecimalRoundOff ( enum DimDecimalRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x48e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1640)
inline enum TGFrameworkSupport::DimDecimalRoundOffTypeConstants TGFrameworkSupport::DimensionStyle::GetAngularToleranceDecimalRoundOff ( ) {
    enum DimDecimalRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0x48e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1641)
inline void TGFrameworkSupport::DimensionStyle::PutAngularToleranceFractionRoundOff ( enum DimFractionRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x48f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1642)
inline enum TGFrameworkSupport::DimFractionRoundOffTypeConstants TGFrameworkSupport::DimensionStyle::GetAngularToleranceFractionRoundOff ( ) {
    enum DimFractionRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0x48f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1643)
inline void TGFrameworkSupport::DimensionStyle::PutSecondaryLinearToleranceUnits ( enum DimLinearUnitConstants _arg1 ) {
    _com_dispatch_method(this, 0x490, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1644)
inline enum TGFrameworkSupport::DimLinearUnitConstants TGFrameworkSupport::DimensionStyle::GetSecondaryLinearToleranceUnits ( ) {
    enum DimLinearUnitConstants _result;
    _com_dispatch_method(this, 0x490, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1645)
inline void TGFrameworkSupport::DimensionStyle::PutSecondaryLinearToleranceRoundOffType ( enum DimRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x491, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1646)
inline enum TGFrameworkSupport::DimRoundOffTypeConstants TGFrameworkSupport::DimensionStyle::GetSecondaryLinearToleranceRoundOffType ( ) {
    enum DimRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0x491, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1647)
inline void TGFrameworkSupport::DimensionStyle::PutSecondaryLinearToleranceDecimalRoundOff ( enum DimDecimalRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x492, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1648)
inline enum TGFrameworkSupport::DimDecimalRoundOffTypeConstants TGFrameworkSupport::DimensionStyle::GetSecondaryLinearToleranceDecimalRoundOff ( ) {
    enum DimDecimalRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0x492, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1649)
inline void TGFrameworkSupport::DimensionStyle::PutSecondaryLinearToleranceFractionRoundOff ( enum DimFractionRoundOffTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x493, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1650)
inline enum TGFrameworkSupport::DimFractionRoundOffTypeConstants TGFrameworkSupport::DimensionStyle::GetSecondaryLinearToleranceFractionRoundOff ( ) {
    enum DimFractionRoundOffTypeConstants _result;
    _com_dispatch_method(this, 0x493, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1651)
inline void TGFrameworkSupport::DimensionStyle::PutSecondaryLinearToleranceUnitLabel ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x494, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1652)
inline _bstr_t TGFrameworkSupport::DimensionStyle::GetSecondaryLinearToleranceUnitLabel ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x494, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1653)
inline void TGFrameworkSupport::DimensionStyle::PutSecondaryLinearToleranceSubunitsLabel ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x495, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1654)
inline _bstr_t TGFrameworkSupport::DimensionStyle::GetSecondaryLinearToleranceSubunitsLabel ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x495, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1655)
inline void TGFrameworkSupport::DimensionStyle::PutSecondaryLinearToleranceMaximumSubunits ( int _arg1 ) {
    _com_dispatch_method(this, 0x496, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1656)
inline int TGFrameworkSupport::DimensionStyle::GetSecondaryLinearToleranceMaximumSubunits ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x496, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1657)
inline void TGFrameworkSupport::DimensionStyle::PutSecondaryLinearToleranceFractionSeparator ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x497, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1658)
inline _bstr_t TGFrameworkSupport::DimensionStyle::GetSecondaryLinearToleranceFractionSeparator ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x497, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1659)
inline void TGFrameworkSupport::DimensionStyle::PutSecondaryLinearFractionSeparator ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x498, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1660)
inline _bstr_t TGFrameworkSupport::DimensionStyle::GetSecondaryLinearFractionSeparator ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x498, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1661)
inline void TGFrameworkSupport::DimensionStyle::PutDualUnitPosition ( enum DimDualUnitPositionConstants _arg1 ) {
    _com_dispatch_method(this, 0x499, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1662)
inline enum TGFrameworkSupport::DimDualUnitPositionConstants TGFrameworkSupport::DimensionStyle::GetDualUnitPosition ( ) {
    enum DimDualUnitPositionConstants _result;
    _com_dispatch_method(this, 0x499, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1663)
inline void TGFrameworkSupport::DimensionStyle::PutDualUnitJustification ( enum TextHorizontalAlignmentConstants _arg1 ) {
    _com_dispatch_method(this, 0x49a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1664)
inline enum TGFrameworkSupport::TextHorizontalAlignmentConstants TGFrameworkSupport::DimensionStyle::GetDualUnitJustification ( ) {
    enum TextHorizontalAlignmentConstants _result;
    _com_dispatch_method(this, 0x49a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1665)
inline void TGFrameworkSupport::DimensionStyle::PutSmartDepthSlotThru ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x49b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1666)
inline _bstr_t TGFrameworkSupport::DimensionStyle::GetSmartDepthSlotThru ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x49b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1667)
inline void TGFrameworkSupport::DimensionStyle::PutSmartDepthSlotFinite ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x49c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1668)
inline _bstr_t TGFrameworkSupport::DimensionStyle::GetSmartDepthSlotFinite ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x49c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1669)
inline void TGFrameworkSupport::DimensionStyle::PutSlotCalloutSimple ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x49d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1670)
inline _bstr_t TGFrameworkSupport::DimensionStyle::GetSlotCalloutSimple ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x49d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1671)
inline void TGFrameworkSupport::DimensionStyle::PutSlotCalloutCounterbore ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x49e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1672)
inline _bstr_t TGFrameworkSupport::DimensionStyle::GetSlotCalloutCounterbore ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x49e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1673)
inline void TGFrameworkSupport::DimensionStyle::PutCoordinateTextOrientation ( enum DimTextOrientationConstants _arg1 ) {
    _com_dispatch_method(this, 0x49f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1674)
inline enum TGFrameworkSupport::DimTextOrientationConstants TGFrameworkSupport::DimensionStyle::GetCoordinateTextOrientation ( ) {
    enum DimTextOrientationConstants _result;
    _com_dispatch_method(this, 0x49f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1675)
inline void TGFrameworkSupport::DimensionStyle::PutEnableAutoJogForCoordinate ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4a0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1676)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetEnableAutoJogForCoordinate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4a0, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1677)
inline void TGFrameworkSupport::DimensionStyle::PutAllowNegativeValueForCoordinate ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4a1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1678)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetAllowNegativeValueForCoordinate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4a1, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1679)
inline void TGFrameworkSupport::DimensionStyle::PutAllowOriginValueChangeForCoordinate ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4a2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1680)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetAllowOriginValueChangeForCoordinate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4a2, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1681)
inline void TGFrameworkSupport::DimensionStyle::PutShowOriginLineForCoordinate ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4a3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1682)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetShowOriginLineForCoordinate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4a3, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1683)
inline void TGFrameworkSupport::DimensionStyle::PutOverlineExtension ( double _arg1 ) {
    _com_dispatch_method(this, 0x4a4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1684)
inline double TGFrameworkSupport::DimensionStyle::GetOverlineExtension ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4a4, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1685)
inline void TGFrameworkSupport::DimensionStyle::PutSuppressSymmetricDiameterSymbol ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4a5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1686)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetSuppressSymmetricDiameterSymbol ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4a5, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1687)
inline void TGFrameworkSupport::DimensionStyle::PutUnderlineSymbolAndPrefix ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4a6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1688)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetUnderlineSymbolAndPrefix ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4a6, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1689)
inline void TGFrameworkSupport::DimensionStyle::PutInitialStackPitch ( double _arg1 ) {
    _com_dispatch_method(this, 0x4a7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(1690)
inline double TGFrameworkSupport::DimensionStyle::GetInitialStackPitch ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4a7, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1691)
inline IDispatchPtr TGFrameworkSupport::DimensionStyle::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(1692)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(1693)
inline void TGFrameworkSupport::DimensionStyle::PutHoleCalloutCounterdrill ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x4a8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1694)
inline _bstr_t TGFrameworkSupport::DimensionStyle::GetHoleCalloutCounterdrill ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4a8, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1695)
inline void TGFrameworkSupport::DimensionStyle::PutHoleCalloutCounterdrillThreaded ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x4a9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(1696)
inline _bstr_t TGFrameworkSupport::DimensionStyle::GetHoleCalloutCounterdrillThreaded ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4a9, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1697)
inline void TGFrameworkSupport::DimensionStyle::PutPrimaryStackFraction ( enum DimStackFractionTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x4aa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1698)
inline enum TGFrameworkSupport::DimStackFractionTypeConstants TGFrameworkSupport::DimensionStyle::GetPrimaryStackFraction ( ) {
    enum DimStackFractionTypeConstants _result;
    _com_dispatch_method(this, 0x4aa, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1699)
inline void TGFrameworkSupport::DimensionStyle::PutSecondaryStackFraction ( enum DimStackFractionTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x4ab, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1700)
inline enum TGFrameworkSupport::DimStackFractionTypeConstants TGFrameworkSupport::DimensionStyle::GetSecondaryStackFraction ( ) {
    enum DimStackFractionTypeConstants _result;
    _com_dispatch_method(this, 0x4ab, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1701)
inline void TGFrameworkSupport::DimensionStyle::PutPrimaryStackFractionSize ( enum DimStackFractionSizeConstants _arg1 ) {
    _com_dispatch_method(this, 0x4ac, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1702)
inline enum TGFrameworkSupport::DimStackFractionSizeConstants TGFrameworkSupport::DimensionStyle::GetPrimaryStackFractionSize ( ) {
    enum DimStackFractionSizeConstants _result;
    _com_dispatch_method(this, 0x4ac, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1703)
inline void TGFrameworkSupport::DimensionStyle::PutSecondaryStackFractionSize ( enum DimStackFractionSizeConstants _arg1 ) {
    _com_dispatch_method(this, 0x4ad, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(1704)
inline enum TGFrameworkSupport::DimStackFractionSizeConstants TGFrameworkSupport::DimensionStyle::GetSecondaryStackFractionSize ( ) {
    enum DimStackFractionSizeConstants _result;
    _com_dispatch_method(this, 0x4ad, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1705)
inline void TGFrameworkSupport::DimensionStyle::PutShowHideReferenceGeometry ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4af, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1706)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetShowHideReferenceGeometry ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4af, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1707)
inline void TGFrameworkSupport::DimensionStyle::PutEnableAngularJog ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4b0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(1708)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyle::GetEnableAngularJog ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4b0, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// interface _IDimensionStyleAuto wrapper method implementations
//

#pragma implementation_key(1709)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1710)
inline _bstr_t TGFrameworkSupport::_IDimensionStyleAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1711)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutPrimaryUnits ( enum DimLinearUnitConstants val ) {
    HRESULT _hr = put_PrimaryUnits(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1712)
inline enum TGFrameworkSupport::DimLinearUnitConstants TGFrameworkSupport::_IDimensionStyleAuto::GetPrimaryUnits ( ) {
    enum DimLinearUnitConstants _result;
    HRESULT _hr = get_PrimaryUnits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1713)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutRoundOffType ( enum DimRoundOffTypeConstants val ) {
    HRESULT _hr = put_RoundOffType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1714)
inline enum TGFrameworkSupport::DimRoundOffTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetRoundOffType ( ) {
    enum DimRoundOffTypeConstants _result;
    HRESULT _hr = get_RoundOffType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1715)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutDelimiter ( enum DimDelimiterTypeConstants val ) {
    HRESULT _hr = put_Delimiter(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1716)
inline enum TGFrameworkSupport::DimDelimiterTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetDelimiter ( ) {
    enum DimDelimiterTypeConstants _result;
    HRESULT _hr = get_Delimiter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1717)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutPrimaryDecimalRoundOff ( enum DimDecimalRoundOffTypeConstants val ) {
    HRESULT _hr = put_PrimaryDecimalRoundOff(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1718)
inline enum TGFrameworkSupport::DimDecimalRoundOffTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetPrimaryDecimalRoundOff ( ) {
    enum DimDecimalRoundOffTypeConstants _result;
    HRESULT _hr = get_PrimaryDecimalRoundOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1719)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutPrimaryFractionRoundOff ( enum DimFractionRoundOffTypeConstants val ) {
    HRESULT _hr = put_PrimaryFractionRoundOff(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1720)
inline enum TGFrameworkSupport::DimFractionRoundOffTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetPrimaryFractionRoundOff ( ) {
    enum DimFractionRoundOffTypeConstants _result;
    HRESULT _hr = get_PrimaryFractionRoundOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1721)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutAngularUnits ( enum DimAngularUnitConstants val ) {
    HRESULT _hr = put_AngularUnits(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1722)
inline enum TGFrameworkSupport::DimAngularUnitConstants TGFrameworkSupport::_IDimensionStyleAuto::GetAngularUnits ( ) {
    enum DimAngularUnitConstants _result;
    HRESULT _hr = get_AngularUnits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1723)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutAngularDMSRoundOff ( enum DimDMSRoundOffTypeConstants val ) {
    HRESULT _hr = put_AngularDMSRoundOff(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1724)
inline enum TGFrameworkSupport::DimDMSRoundOffTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetAngularDMSRoundOff ( ) {
    enum DimDMSRoundOffTypeConstants _result;
    HRESULT _hr = get_AngularDMSRoundOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1725)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutAngularDecimalRoundOff ( enum DimDecimalRoundOffTypeConstants val ) {
    HRESULT _hr = put_AngularDecimalRoundOff(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1726)
inline enum TGFrameworkSupport::DimDecimalRoundOffTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetAngularDecimalRoundOff ( ) {
    enum DimDecimalRoundOffTypeConstants _result;
    HRESULT _hr = get_AngularDecimalRoundOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1727)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutAngularFractionRoundOff ( enum DimFractionRoundOffTypeConstants val ) {
    HRESULT _hr = put_AngularFractionRoundOff(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1728)
inline enum TGFrameworkSupport::DimFractionRoundOffTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetAngularFractionRoundOff ( ) {
    enum DimFractionRoundOffTypeConstants _result;
    HRESULT _hr = get_AngularFractionRoundOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1729)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutPrimaryLeadingZeros ( VARIANT_BOOL val ) {
    HRESULT _hr = put_PrimaryLeadingZeros(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1730)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetPrimaryLeadingZeros ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_PrimaryLeadingZeros(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1731)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutPrimaryTrailingZeros ( VARIANT_BOOL val ) {
    HRESULT _hr = put_PrimaryTrailingZeros(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1732)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetPrimaryTrailingZeros ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_PrimaryTrailingZeros(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1733)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutPrimaryUnitLabel ( _bstr_t val ) {
    HRESULT _hr = put_PrimaryUnitLabel(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1734)
inline _bstr_t TGFrameworkSupport::_IDimensionStyleAuto::GetPrimaryUnitLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PrimaryUnitLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1735)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutPrimarySubunitsLabel ( _bstr_t val ) {
    HRESULT _hr = put_PrimarySubunitsLabel(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1736)
inline _bstr_t TGFrameworkSupport::_IDimensionStyleAuto::GetPrimarySubunitsLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PrimarySubunitsLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1737)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutMaximumSubunits ( int val ) {
    HRESULT _hr = put_MaximumSubunits(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1738)
inline int TGFrameworkSupport::_IDimensionStyleAuto::GetMaximumSubunits ( ) {
    int _result = 0;
    HRESULT _hr = get_MaximumSubunits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1739)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutDualDisplay ( VARIANT_BOOL val ) {
    HRESULT _hr = put_DualDisplay(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1740)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetDualDisplay ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DualDisplay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1741)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutSecondaryUnits ( enum DimLinearUnitConstants val ) {
    HRESULT _hr = put_SecondaryUnits(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1742)
inline enum TGFrameworkSupport::DimLinearUnitConstants TGFrameworkSupport::_IDimensionStyleAuto::GetSecondaryUnits ( ) {
    enum DimLinearUnitConstants _result;
    HRESULT _hr = get_SecondaryUnits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1743)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutSecondaryUnitRoundOff ( enum DimRoundOffTypeConstants val ) {
    HRESULT _hr = put_SecondaryUnitRoundOff(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1744)
inline enum TGFrameworkSupport::DimRoundOffTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetSecondaryUnitRoundOff ( ) {
    enum DimRoundOffTypeConstants _result;
    HRESULT _hr = get_SecondaryUnitRoundOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1745)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutSecondaryDecimalRoundOff ( enum DimDecimalRoundOffTypeConstants val ) {
    HRESULT _hr = put_SecondaryDecimalRoundOff(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1746)
inline enum TGFrameworkSupport::DimDecimalRoundOffTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetSecondaryDecimalRoundOff ( ) {
    enum DimDecimalRoundOffTypeConstants _result;
    HRESULT _hr = get_SecondaryDecimalRoundOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1747)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutSecondaryFractionRoundOff ( enum DimFractionRoundOffTypeConstants val ) {
    HRESULT _hr = put_SecondaryFractionRoundOff(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1748)
inline enum TGFrameworkSupport::DimFractionRoundOffTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetSecondaryFractionRoundOff ( ) {
    enum DimFractionRoundOffTypeConstants _result;
    HRESULT _hr = get_SecondaryFractionRoundOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1749)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutSecondaryLeadingZeros ( VARIANT_BOOL val ) {
    HRESULT _hr = put_SecondaryLeadingZeros(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1750)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetSecondaryLeadingZeros ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SecondaryLeadingZeros(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1751)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutSecondaryTrailingZeros ( VARIANT_BOOL val ) {
    HRESULT _hr = put_SecondaryTrailingZeros(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1752)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetSecondaryTrailingZeros ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SecondaryTrailingZeros(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1753)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutSecondaryUnitLabel ( _bstr_t val ) {
    HRESULT _hr = put_SecondaryUnitLabel(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1754)
inline _bstr_t TGFrameworkSupport::_IDimensionStyleAuto::GetSecondaryUnitLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SecondaryUnitLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1755)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutSecondarySubunitsLabel ( _bstr_t val ) {
    HRESULT _hr = put_SecondarySubunitsLabel(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1756)
inline _bstr_t TGFrameworkSupport::_IDimensionStyleAuto::GetSecondarySubunitsLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SecondarySubunitsLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1757)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutHeight ( double val ) {
    HRESULT _hr = put_Height(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1758)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1759)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutRatio ( double val ) {
    HRESULT _hr = put_Ratio(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1760)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_Ratio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1761)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutTextWeight ( double val ) {
    HRESULT _hr = put_TextWeight(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1762)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetTextWeight ( ) {
    double _result = 0;
    HRESULT _hr = get_TextWeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1763)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutFont ( _bstr_t val ) {
    HRESULT _hr = put_Font(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1764)
inline _bstr_t TGFrameworkSupport::_IDimensionStyleAuto::GetFont ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Font(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1765)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutFontStyle ( enum DimTextFontStyleConstants val ) {
    HRESULT _hr = put_FontStyle(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1766)
inline enum TGFrameworkSupport::DimTextFontStyleConstants TGFrameworkSupport::_IDimensionStyleAuto::GetFontStyle ( ) {
    enum DimTextFontStyleConstants _result;
    HRESULT _hr = get_FontStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1767)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutTextOrientation ( enum DimTextOrientationConstants val ) {
    HRESULT _hr = put_TextOrientation(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1768)
inline enum TGFrameworkSupport::DimTextOrientationConstants TGFrameworkSupport::_IDimensionStyleAuto::GetTextOrientation ( ) {
    enum DimTextOrientationConstants _result;
    HRESULT _hr = get_TextOrientation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1769)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutTextPosition ( enum DimTextPositionConstants val ) {
    HRESULT _hr = put_TextPosition(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1770)
inline enum TGFrameworkSupport::DimTextPositionConstants TGFrameworkSupport::_IDimensionStyleAuto::GetTextPosition ( ) {
    enum DimTextPositionConstants _result;
    HRESULT _hr = get_TextPosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1771)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutLimitTextArrangement ( enum DimLimitTextArrangmentConstants val ) {
    HRESULT _hr = put_LimitTextArrangement(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1772)
inline enum TGFrameworkSupport::DimLimitTextArrangmentConstants TGFrameworkSupport::_IDimensionStyleAuto::GetLimitTextArrangement ( ) {
    enum DimLimitTextArrangmentConstants _result;
    HRESULT _hr = get_LimitTextArrangement(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1773)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutToleranceHeightRatio ( double val ) {
    HRESULT _hr = put_ToleranceHeightRatio(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1774)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetToleranceHeightRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_ToleranceHeightRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1775)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutToleranceWeight ( double val ) {
    HRESULT _hr = put_ToleranceWeight(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1776)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetToleranceWeight ( ) {
    double _result = 0;
    HRESULT _hr = get_ToleranceWeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1777)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutNTSSymbol ( enum DimNTSTypeConstants val ) {
    HRESULT _hr = put_NTSSymbol(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1778)
inline enum TGFrameworkSupport::DimNTSTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetNTSSymbol ( ) {
    enum DimNTSTypeConstants _result;
    HRESULT _hr = get_NTSSymbol(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1779)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutTerminatorType ( enum DimTermTypeConstants val ) {
    HRESULT _hr = put_TerminatorType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1780)
inline enum TGFrameworkSupport::DimTermTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetTerminatorType ( ) {
    enum DimTermTypeConstants _result;
    HRESULT _hr = get_TerminatorType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1781)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutTerminatorDisplay ( enum DimTermDisplayTypeConstants val ) {
    HRESULT _hr = put_TerminatorDisplay(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1782)
inline enum TGFrameworkSupport::DimTermDisplayTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetTerminatorDisplay ( ) {
    enum DimTermDisplayTypeConstants _result;
    HRESULT _hr = get_TerminatorDisplay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1783)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutOriginTerminatorType ( enum DimTermTypeConstants val ) {
    HRESULT _hr = put_OriginTerminatorType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1784)
inline enum TGFrameworkSupport::DimTermTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetOriginTerminatorType ( ) {
    enum DimTermTypeConstants _result;
    HRESULT _hr = get_OriginTerminatorType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1785)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutFreeSpaceTerminatorType ( enum DimTermTypeConstants val ) {
    HRESULT _hr = put_FreeSpaceTerminatorType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1786)
inline enum TGFrameworkSupport::DimTermTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetFreeSpaceTerminatorType ( ) {
    enum DimTermTypeConstants _result;
    HRESULT _hr = get_FreeSpaceTerminatorType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1787)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutDatumTerminatorType ( enum DimDatumTermTypeConstants val ) {
    HRESULT _hr = put_DatumTerminatorType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1788)
inline enum TGFrameworkSupport::DimDatumTermTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetDatumTerminatorType ( ) {
    enum DimDatumTermTypeConstants _result;
    HRESULT _hr = get_DatumTerminatorType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1789)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutTerminatorSize ( double val ) {
    HRESULT _hr = put_TerminatorSize(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1790)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetTerminatorSize ( ) {
    double _result = 0;
    HRESULT _hr = get_TerminatorSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1791)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutTerminatorInsideLimit ( double val ) {
    HRESULT _hr = put_TerminatorInsideLimit(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1792)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetTerminatorInsideLimit ( ) {
    double _result = 0;
    HRESULT _hr = get_TerminatorInsideLimit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1793)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutLineWidth ( double val ) {
    HRESULT _hr = put_LineWidth(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1794)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetLineWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_LineWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1795)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutProjectionExtensionGap ( double val ) {
    HRESULT _hr = put_ProjectionExtensionGap(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1796)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetProjectionExtensionGap ( ) {
    double _result = 0;
    HRESULT _hr = get_ProjectionExtensionGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1797)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutProjectionOffsetGap ( double val ) {
    HRESULT _hr = put_ProjectionOffsetGap(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1798)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetProjectionOffsetGap ( ) {
    double _result = 0;
    HRESULT _hr = get_ProjectionOffsetGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1799)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutProjectionOffsetGapAlignment ( VARIANT_BOOL val ) {
    HRESULT _hr = put_ProjectionOffsetGapAlignment(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1800)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetProjectionOffsetGapAlignment ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ProjectionOffsetGapAlignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1801)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutProjectionAngle ( double val ) {
    HRESULT _hr = put_ProjectionAngle(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1802)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetProjectionAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_ProjectionAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1803)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutLineConnect ( VARIANT_BOOL val ) {
    HRESULT _hr = put_LineConnect(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1804)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetLineConnect ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_LineConnect(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1805)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutStackPitch ( double val ) {
    HRESULT _hr = put_StackPitch(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1806)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetStackPitch ( ) {
    double _result = 0;
    HRESULT _hr = get_StackPitch(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1807)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutLeaderLineLength ( double val ) {
    HRESULT _hr = put_LeaderLineLength(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1808)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetLeaderLineLength ( ) {
    double _result = 0;
    HRESULT _hr = get_LeaderLineLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1809)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutCoordinateAutoJog ( VARIANT_BOOL val ) {
    HRESULT _hr = put_CoordinateAutoJog(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1810)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetCoordinateAutoJog ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CoordinateAutoJog(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1811)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutCoordinateStackPitch ( double val ) {
    HRESULT _hr = put_CoordinateStackPitch(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1812)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetCoordinateStackPitch ( ) {
    double _result = 0;
    HRESULT _hr = get_CoordinateStackPitch(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1813)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutCommonOrigin ( enum DimCommonOriginTypeConstants val ) {
    HRESULT _hr = put_CommonOrigin(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1814)
inline enum TGFrameworkSupport::DimCommonOriginTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetCommonOrigin ( ) {
    enum DimCommonOriginTypeConstants _result;
    HRESULT _hr = get_CommonOrigin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1815)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutCoordinateTextPosition ( enum DimCoordTextPositionConstants val ) {
    HRESULT _hr = put_CoordinateTextPosition(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1816)
inline enum TGFrameworkSupport::DimCoordTextPositionConstants TGFrameworkSupport::_IDimensionStyleAuto::GetCoordinateTextPosition ( ) {
    enum DimCoordTextPositionConstants _result;
    HRESULT _hr = get_CoordinateTextPosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1817)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutSymbolPosition ( enum DimSymbolPositionConstants val ) {
    HRESULT _hr = put_SymbolPosition(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1818)
inline enum TGFrameworkSupport::DimSymbolPositionConstants TGFrameworkSupport::_IDimensionStyleAuto::GetSymbolPosition ( ) {
    enum DimSymbolPositionConstants _result;
    HRESULT _hr = get_SymbolPosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1819)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutAutoSuppressDiameter ( VARIANT_BOOL val ) {
    HRESULT _hr = put_AutoSuppressDiameter(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1820)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetAutoSuppressDiameter ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AutoSuppressDiameter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1821)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutDimensionScaleMode ( enum DimScaleModeConstants val ) {
    HRESULT _hr = put_DimensionScaleMode(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1822)
inline enum TGFrameworkSupport::DimScaleModeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetDimensionScaleMode ( ) {
    enum DimScaleModeConstants _result;
    HRESULT _hr = get_DimensionScaleMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1823)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutDimensionScale ( double val ) {
    HRESULT _hr = put_DimensionScale(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1824)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetDimensionScale ( ) {
    double _result = 0;
    HRESULT _hr = get_DimensionScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1825)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutErrorColor ( long val ) {
    HRESULT _hr = put_ErrorColor(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1826)
inline long TGFrameworkSupport::_IDimensionStyleAuto::GetErrorColor ( ) {
    long _result = 0;
    HRESULT _hr = get_ErrorColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1827)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutDrivingColor ( long val ) {
    HRESULT _hr = put_DrivingColor(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1828)
inline long TGFrameworkSupport::_IDimensionStyleAuto::GetDrivingColor ( ) {
    long _result = 0;
    HRESULT _hr = get_DrivingColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1829)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutDrivenColor ( long val ) {
    HRESULT _hr = put_DrivenColor(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1830)
inline long TGFrameworkSupport::_IDimensionStyleAuto::GetDrivenColor ( ) {
    long _result = 0;
    HRESULT _hr = get_DrivenColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1831)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutAutoCenterLine ( VARIANT_BOOL val ) {
    HRESULT _hr = put_AutoCenterLine(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1832)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetAutoCenterLine ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AutoCenterLine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1833)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutAutoCenterProjectionLine ( VARIANT_BOOL val ) {
    HRESULT _hr = put_AutoCenterProjectionLine(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1834)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetAutoCenterProjectionLine ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AutoCenterProjectionLine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1835)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutProjectionLineDisplay ( enum DimProjDisplayTypeConstants val ) {
    HRESULT _hr = put_ProjectionLineDisplay(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1836)
inline enum TGFrameworkSupport::DimProjDisplayTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetProjectionLineDisplay ( ) {
    enum DimProjDisplayTypeConstants _result;
    HRESULT _hr = get_ProjectionLineDisplay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1837)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutProjectionLineDisplayForIntersectionPoint ( enum DimProjDisplayTypeConstants val ) {
    HRESULT _hr = put_ProjectionLineDisplayForIntersectionPoint(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1838)
inline enum TGFrameworkSupport::DimProjDisplayTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetProjectionLineDisplayForIntersectionPoint ( ) {
    enum DimProjDisplayTypeConstants _result;
    HRESULT _hr = get_ProjectionLineDisplayForIntersectionPoint(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1839)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutTextClearanceGap ( double val ) {
    HRESULT _hr = put_TextClearanceGap(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1840)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetTextClearanceGap ( ) {
    double _result = 0;
    HRESULT _hr = get_TextClearanceGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1841)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutDualModeVerticalGap ( double val ) {
    HRESULT _hr = put_DualModeVerticalGap(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1842)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetDualModeVerticalGap ( ) {
    double _result = 0;
    HRESULT _hr = get_DualModeVerticalGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1843)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutCharacterPitch ( double val ) {
    HRESULT _hr = put_CharacterPitch(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1844)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetCharacterPitch ( ) {
    double _result = 0;
    HRESULT _hr = get_CharacterPitch(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1845)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutLineSpacing ( double val ) {
    HRESULT _hr = put_LineSpacing(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1846)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetLineSpacing ( ) {
    double _result = 0;
    HRESULT _hr = get_LineSpacing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1847)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutAboveGap ( double val ) {
    HRESULT _hr = put_AboveGap(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1848)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetAboveGap ( ) {
    double _result = 0;
    HRESULT _hr = get_AboveGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1849)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutHorizontalToleranceGap ( double val ) {
    HRESULT _hr = put_HorizontalToleranceGap(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1850)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetHorizontalToleranceGap ( ) {
    double _result = 0;
    HRESULT _hr = get_HorizontalToleranceGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1851)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutVerticalToleranceGap ( double val ) {
    HRESULT _hr = put_VerticalToleranceGap(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1852)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetVerticalToleranceGap ( ) {
    double _result = 0;
    HRESULT _hr = get_VerticalToleranceGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1853)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutVerticalLimitsGap ( double val ) {
    HRESULT _hr = put_VerticalLimitsGap(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1854)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetVerticalLimitsGap ( ) {
    double _result = 0;
    HRESULT _hr = get_VerticalLimitsGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1855)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutHorizontalBoxGap ( double val ) {
    HRESULT _hr = put_HorizontalBoxGap(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1856)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetHorizontalBoxGap ( ) {
    double _result = 0;
    HRESULT _hr = get_HorizontalBoxGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1857)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutVerticalBoxGap ( double val ) {
    HRESULT _hr = put_VerticalBoxGap(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1858)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetVerticalBoxGap ( ) {
    double _result = 0;
    HRESULT _hr = get_VerticalBoxGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1859)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutPrefixSuffixGap ( double val ) {
    HRESULT _hr = put_PrefixSuffixGap(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1860)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetPrefixSuffixGap ( ) {
    double _result = 0;
    HRESULT _hr = get_PrefixSuffixGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1861)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutSymbolGap ( double val ) {
    HRESULT _hr = put_SymbolGap(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1862)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetSymbolGap ( ) {
    double _result = 0;
    HRESULT _hr = get_SymbolGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1863)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutMaximumViewAngle ( double val ) {
    HRESULT _hr = put_MaximumViewAngle(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1864)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetMaximumViewAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_MaximumViewAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1865)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutProjectionToleranceZonePosition ( enum DimProjTolZonePositionConstants val ) {
    HRESULT _hr = put_ProjectionToleranceZonePosition(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1866)
inline enum TGFrameworkSupport::DimProjTolZonePositionConstants TGFrameworkSupport::_IDimensionStyleAuto::GetProjectionToleranceZonePosition ( ) {
    enum DimProjTolZonePositionConstants _result;
    HRESULT _hr = get_ProjectionToleranceZonePosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1867)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutDatumFrameDashes ( VARIANT_BOOL val ) {
    HRESULT _hr = put_DatumFrameDashes(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1868)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetDatumFrameDashes ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DatumFrameDashes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1869)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutViewTextRatio ( double val ) {
    HRESULT _hr = put_ViewTextRatio(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1870)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetViewTextRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_ViewTextRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1871)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutViewTerminatorRatio ( double val ) {
    HRESULT _hr = put_ViewTerminatorRatio(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1872)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetViewTerminatorRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_ViewTerminatorRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1873)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutViewLineWidth ( double val ) {
    HRESULT _hr = put_ViewLineWidth(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1874)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetViewLineWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_ViewLineWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1875)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutViewLineType ( _bstr_t val ) {
    HRESULT _hr = put_ViewLineType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1876)
inline _bstr_t TGFrameworkSupport::_IDimensionStyleAuto::GetViewLineType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ViewLineType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1877)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutViewCuttingPlaneLineDisplay ( enum DimViewCuttingPlaneDisplayTypeConstants val ) {
    HRESULT _hr = put_ViewCuttingPlaneLineDisplay(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1878)
inline enum TGFrameworkSupport::DimViewCuttingPlaneDisplayTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetViewCuttingPlaneLineDisplay ( ) {
    enum DimViewCuttingPlaneDisplayTypeConstants _result;
    HRESULT _hr = get_ViewCuttingPlaneLineDisplay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1879)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutViewPlaneLineDisplay ( enum DimViewPlaneDisplayTypeConstants val ) {
    HRESULT _hr = put_ViewPlaneLineDisplay(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1880)
inline enum TGFrameworkSupport::DimViewPlaneDisplayTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetViewPlaneLineDisplay ( ) {
    enum DimViewPlaneDisplayTypeConstants _result;
    HRESULT _hr = get_ViewPlaneLineDisplay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1881)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutViewCaptionLocation ( enum DimViewCaptionLocationConstants val ) {
    HRESULT _hr = put_ViewCaptionLocation(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1882)
inline enum TGFrameworkSupport::DimViewCaptionLocationConstants TGFrameworkSupport::_IDimensionStyleAuto::GetViewCaptionLocation ( ) {
    enum DimViewCaptionLocationConstants _result;
    HRESULT _hr = get_ViewCaptionLocation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1883)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutViewCPLCaptionLocation ( enum DimViewCPLCaptionLocationConstants val ) {
    HRESULT _hr = put_ViewCPLCaptionLocation(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1884)
inline enum TGFrameworkSupport::DimViewCPLCaptionLocationConstants TGFrameworkSupport::_IDimensionStyleAuto::GetViewCPLCaptionLocation ( ) {
    enum DimViewCPLCaptionLocationConstants _result;
    HRESULT _hr = get_ViewCPLCaptionLocation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1885)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutViewSuffixAsPrefix ( VARIANT_BOOL val ) {
    HRESULT _hr = put_ViewSuffixAsPrefix(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1886)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetViewSuffixAsPrefix ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ViewSuffixAsPrefix(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1887)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutViewThinTerminator ( VARIANT_BOOL val ) {
    HRESULT _hr = put_ViewThinTerminator(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1888)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetViewThinTerminator ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ViewThinTerminator(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1889)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutViewVPLCaptionAtEnd ( VARIANT_BOOL val ) {
    HRESULT _hr = put_ViewVPLCaptionAtEnd(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1890)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetViewVPLCaptionAtEnd ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ViewVPLCaptionAtEnd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1891)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutOffsetLeaderType ( enum DimOffsetLeaderTypeConstants val ) {
    HRESULT _hr = put_OffsetLeaderType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1892)
inline enum TGFrameworkSupport::DimOffsetLeaderTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetOffsetLeaderType ( ) {
    enum DimOffsetLeaderTypeConstants _result;
    HRESULT _hr = get_OffsetLeaderType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1893)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutSecondaryToleranceEquivalent ( VARIANT_BOOL val ) {
    HRESULT _hr = put_SecondaryToleranceEquivalent(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1894)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetSecondaryToleranceEquivalent ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SecondaryToleranceEquivalent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1895)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutCenterLineType ( _bstr_t val ) {
    HRESULT _hr = put_CenterLineType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1896)
inline _bstr_t TGFrameworkSupport::_IDimensionStyleAuto::GetCenterLineType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CenterLineType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1897)
inline _bstr_t TGFrameworkSupport::_IDimensionStyleAuto::GetDescription ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Description(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1898)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutParent ( _bstr_t Name ) {
    HRESULT _hr = put_Parent(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1899)
inline _bstr_t TGFrameworkSupport::_IDimensionStyleAuto::GetParent ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1900)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutCenterMarkSize ( double val ) {
    HRESULT _hr = put_CenterMarkSize(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1901)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetCenterMarkSize ( ) {
    double _result = 0;
    HRESULT _hr = get_CenterMarkSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1902)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutAutoPhase ( VARIANT_BOOL val ) {
    HRESULT _hr = put_AutoPhase(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1903)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetAutoPhase ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AutoPhase(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1904)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutRoundUp ( enum DimRoundUpTypeConstants val ) {
    HRESULT _hr = put_RoundUp(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1905)
inline enum TGFrameworkSupport::DimRoundUpTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetRoundUp ( ) {
    enum DimRoundUpTypeConstants _result;
    HRESULT _hr = get_RoundUp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1906)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutSecondaryLinearRoundOffType ( enum DimRoundOffTypeConstants val ) {
    HRESULT _hr = put_SecondaryLinearRoundOffType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1907)
inline enum TGFrameworkSupport::DimRoundOffTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetSecondaryLinearRoundOffType ( ) {
    enum DimRoundOffTypeConstants _result;
    HRESULT _hr = get_SecondaryLinearRoundOffType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1908)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutAngularRoundOffType ( enum DimRoundOffTypeConstants val ) {
    HRESULT _hr = put_AngularRoundOffType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1909)
inline enum TGFrameworkSupport::DimRoundOffTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetAngularRoundOffType ( ) {
    enum DimRoundOffTypeConstants _result;
    HRESULT _hr = get_AngularRoundOffType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1910)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutCenterMarkExtension ( double val ) {
    HRESULT _hr = put_CenterMarkExtension(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1911)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetCenterMarkExtension ( ) {
    double _result = 0;
    HRESULT _hr = get_CenterMarkExtension(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1912)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutChamferUse45DegreeCharacter ( VARIANT_BOOL val ) {
    HRESULT _hr = put_ChamferUse45DegreeCharacter(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1913)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetChamferUse45DegreeCharacter ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ChamferUse45DegreeCharacter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1914)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutSmartDepthHoleThru ( _bstr_t val ) {
    HRESULT _hr = put_SmartDepthHoleThru(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1915)
inline _bstr_t TGFrameworkSupport::_IDimensionStyleAuto::GetSmartDepthHoleThru ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SmartDepthHoleThru(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1916)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutSmartDepthHoleFinite ( _bstr_t val ) {
    HRESULT _hr = put_SmartDepthHoleFinite(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1917)
inline _bstr_t TGFrameworkSupport::_IDimensionStyleAuto::GetSmartDepthHoleFinite ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SmartDepthHoleFinite(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1918)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutSmartDepthThreadThru ( _bstr_t val ) {
    HRESULT _hr = put_SmartDepthThreadThru(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1919)
inline _bstr_t TGFrameworkSupport::_IDimensionStyleAuto::GetSmartDepthThreadThru ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SmartDepthThreadThru(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1920)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutSmartDepthThreadFinite ( _bstr_t val ) {
    HRESULT _hr = put_SmartDepthThreadFinite(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1921)
inline _bstr_t TGFrameworkSupport::_IDimensionStyleAuto::GetSmartDepthThreadFinite ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SmartDepthThreadFinite(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1922)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutLowerCaseMultiplicationSymbol ( VARIANT_BOOL val ) {
    HRESULT _hr = put_LowerCaseMultiplicationSymbol(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1923)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetLowerCaseMultiplicationSymbol ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_LowerCaseMultiplicationSymbol(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1924)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutHoleCalloutSimple ( _bstr_t val ) {
    HRESULT _hr = put_HoleCalloutSimple(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1925)
inline _bstr_t TGFrameworkSupport::_IDimensionStyleAuto::GetHoleCalloutSimple ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HoleCalloutSimple(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1926)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutHoleCalloutCounterbore ( _bstr_t val ) {
    HRESULT _hr = put_HoleCalloutCounterbore(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1927)
inline _bstr_t TGFrameworkSupport::_IDimensionStyleAuto::GetHoleCalloutCounterbore ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HoleCalloutCounterbore(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1928)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutHoleCalloutCountersink ( _bstr_t val ) {
    HRESULT _hr = put_HoleCalloutCountersink(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1929)
inline _bstr_t TGFrameworkSupport::_IDimensionStyleAuto::GetHoleCalloutCountersink ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HoleCalloutCountersink(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1930)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutHoleCalloutSimpleThreaded ( _bstr_t val ) {
    HRESULT _hr = put_HoleCalloutSimpleThreaded(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1931)
inline _bstr_t TGFrameworkSupport::_IDimensionStyleAuto::GetHoleCalloutSimpleThreaded ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HoleCalloutSimpleThreaded(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1932)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutHoleCalloutCounterboreThreaded ( _bstr_t val ) {
    HRESULT _hr = put_HoleCalloutCounterboreThreaded(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1933)
inline _bstr_t TGFrameworkSupport::_IDimensionStyleAuto::GetHoleCalloutCounterboreThreaded ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HoleCalloutCounterboreThreaded(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1934)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutHoleCalloutCountersinkThreaded ( _bstr_t val ) {
    HRESULT _hr = put_HoleCalloutCountersinkThreaded(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1935)
inline _bstr_t TGFrameworkSupport::_IDimensionStyleAuto::GetHoleCalloutCountersinkThreaded ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HoleCalloutCountersinkThreaded(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1936)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutApplyBreakLineGap ( VARIANT_BOOL val ) {
    HRESULT _hr = put_ApplyBreakLineGap(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1937)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetApplyBreakLineGap ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ApplyBreakLineGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1938)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutTextAutoFillBackground ( VARIANT_BOOL val ) {
    HRESULT _hr = put_TextAutoFillBackground(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1939)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetTextAutoFillBackground ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_TextAutoFillBackground(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1940)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutPulledOutTextOrientation ( enum DimTextOrientationConstants val ) {
    HRESULT _hr = put_PulledOutTextOrientation(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1941)
inline enum TGFrameworkSupport::DimTextOrientationConstants TGFrameworkSupport::_IDimensionStyleAuto::GetPulledOutTextOrientation ( ) {
    enum DimTextOrientationConstants _result;
    HRESULT _hr = get_PulledOutTextOrientation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1942)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutPulledOutTextPosition ( enum DimTextPositionConstants val ) {
    HRESULT _hr = put_PulledOutTextPosition(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1943)
inline enum TGFrameworkSupport::DimTextPositionConstants TGFrameworkSupport::_IDimensionStyleAuto::GetPulledOutTextPosition ( ) {
    enum DimTextPositionConstants _result;
    HRESULT _hr = get_PulledOutTextPosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1944)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutOverridePulledOutText ( VARIANT_BOOL val ) {
    HRESULT _hr = put_OverridePulledOutText(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1945)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetOverridePulledOutText ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_OverridePulledOutText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1946)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutViewLineArrowOffset ( double val ) {
    HRESULT _hr = put_ViewLineArrowOffset(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1947)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetViewLineArrowOffset ( ) {
    double _result = 0;
    HRESULT _hr = get_ViewLineArrowOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1948)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutViewThickLineLength ( double val ) {
    HRESULT _hr = put_ViewThickLineLength(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1949)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetViewThickLineLength ( ) {
    double _result = 0;
    HRESULT _hr = get_ViewThickLineLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1950)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutOrigTerminatorSize ( double val ) {
    HRESULT _hr = put_OrigTerminatorSize(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1951)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetOrigTerminatorSize ( ) {
    double _result = 0;
    HRESULT _hr = get_OrigTerminatorSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1952)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutConnectorLineType ( _bstr_t val ) {
    HRESULT _hr = put_ConnectorLineType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1953)
inline _bstr_t TGFrameworkSupport::_IDimensionStyleAuto::GetConnectorLineType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ConnectorLineType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1954)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutConnectorColor ( long val ) {
    HRESULT _hr = put_ConnectorColor(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1955)
inline long TGFrameworkSupport::_IDimensionStyleAuto::GetConnectorColor ( ) {
    long _result = 0;
    HRESULT _hr = get_ConnectorColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1956)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutConnectorWidth ( double val ) {
    HRESULT _hr = put_ConnectorWidth(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1957)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetConnectorWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_ConnectorWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1958)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutFractionSeparator ( _bstr_t val ) {
    HRESULT _hr = put_FractionSeparator(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1959)
inline _bstr_t TGFrameworkSupport::_IDimensionStyleAuto::GetFractionSeparator ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FractionSeparator(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1960)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutHeightPMI ( double val ) {
    HRESULT _hr = put_HeightPMI(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1961)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetHeightPMI ( ) {
    double _result = 0;
    HRESULT _hr = get_HeightPMI(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1962)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutProjectionBreakGap ( double val ) {
    HRESULT _hr = put_ProjectionBreakGap(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1963)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetProjectionBreakGap ( ) {
    double _result = 0;
    HRESULT _hr = get_ProjectionBreakGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1964)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutSecondaryDelimiter ( enum DimDelimiterTypeConstants val ) {
    HRESULT _hr = put_SecondaryDelimiter(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1965)
inline enum TGFrameworkSupport::DimDelimiterTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetSecondaryDelimiter ( ) {
    enum DimDelimiterTypeConstants _result;
    HRESULT _hr = get_SecondaryDelimiter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1966)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutMatchPrimaryDelimiter ( VARIANT_BOOL val ) {
    HRESULT _hr = put_MatchPrimaryDelimiter(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1967)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetMatchPrimaryDelimiter ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_MatchPrimaryDelimiter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1968)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutInhibitZeroToleranceDisplay ( VARIANT_BOOL val ) {
    HRESULT _hr = put_InhibitZeroToleranceDisplay(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1969)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetInhibitZeroToleranceDisplay ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_InhibitZeroToleranceDisplay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1970)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutAllAroundMultiplier ( double val ) {
    HRESULT _hr = put_AllAroundMultiplier(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1971)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetAllAroundMultiplier ( ) {
    double _result = 0;
    HRESULT _hr = get_AllAroundMultiplier(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1972)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutOverridePulledOutText2 ( VARIANT_BOOL val ) {
    HRESULT _hr = put_OverridePulledOutText2(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1973)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetOverridePulledOutText2 ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_OverridePulledOutText2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1974)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutPulledOutText2Orientation ( enum DimTextOrientationConstants val ) {
    HRESULT _hr = put_PulledOutText2Orientation(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1975)
inline enum TGFrameworkSupport::DimTextOrientationConstants TGFrameworkSupport::_IDimensionStyleAuto::GetPulledOutText2Orientation ( ) {
    enum DimTextOrientationConstants _result;
    HRESULT _hr = get_PulledOutText2Orientation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1976)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutPulledOutText2Position ( enum DimTextPositionConstants val ) {
    HRESULT _hr = put_PulledOutText2Position(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1977)
inline enum TGFrameworkSupport::DimTextPositionConstants TGFrameworkSupport::_IDimensionStyleAuto::GetPulledOutText2Position ( ) {
    enum DimTextPositionConstants _result;
    HRESULT _hr = get_PulledOutText2Position(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1978)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutDisplayDegreeSymbolOnNumericTolerance ( VARIANT_BOOL val ) {
    HRESULT _hr = put_DisplayDegreeSymbolOnNumericTolerance(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1979)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetDisplayDegreeSymbolOnNumericTolerance ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayDegreeSymbolOnNumericTolerance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1980)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutZeroInchesForFTIN ( VARIANT_BOOL val ) {
    HRESULT _hr = put_ZeroInchesForFTIN(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1981)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetZeroInchesForFTIN ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ZeroInchesForFTIN(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1982)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutSymbolFont ( enum DimStyleSymbolFontConstants val ) {
    HRESULT _hr = put_SymbolFont(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1983)
inline enum TGFrameworkSupport::DimStyleSymbolFontConstants TGFrameworkSupport::_IDimensionStyleAuto::GetSymbolFont ( ) {
    enum DimStyleSymbolFontConstants _result;
    HRESULT _hr = get_SymbolFont(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1984)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutCalloutTextAspectRatio ( double val ) {
    HRESULT _hr = put_CalloutTextAspectRatio(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1985)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetCalloutTextAspectRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_CalloutTextAspectRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1986)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutDatumTerminatorGap ( double val ) {
    HRESULT _hr = put_DatumTerminatorGap(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1987)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetDatumTerminatorGap ( ) {
    double _result = 0;
    HRESULT _hr = get_DatumTerminatorGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1988)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutDatumFrameShape ( enum DimStyleDatumFrameShapeConstants val ) {
    HRESULT _hr = put_DatumFrameShape(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1989)
inline enum TGFrameworkSupport::DimStyleDatumFrameShapeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetDatumFrameShape ( ) {
    enum DimStyleDatumFrameShapeConstants _result;
    HRESULT _hr = get_DatumFrameShape(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1990)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutDisplayCoordinateOriginText ( VARIANT_BOOL val ) {
    HRESULT _hr = put_DisplayCoordinateOriginText(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1991)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetDisplayCoordinateOriginText ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayCoordinateOriginText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1992)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutPlacePrefixInsideBasicDimensionBox ( VARIANT_BOOL val ) {
    HRESULT _hr = put_PlacePrefixInsideBasicDimensionBox(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1993)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetPlacePrefixInsideBasicDimensionBox ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_PlacePrefixInsideBasicDimensionBox(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1994)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutSecondaryUnitSeparator ( enum DimStyleSecondaryUnitSeparatorConstants val ) {
    HRESULT _hr = put_SecondaryUnitSeparator(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1995)
inline enum TGFrameworkSupport::DimStyleSecondaryUnitSeparatorConstants TGFrameworkSupport::_IDimensionStyleAuto::GetSecondaryUnitSeparator ( ) {
    enum DimStyleSecondaryUnitSeparatorConstants _result;
    HRESULT _hr = get_SecondaryUnitSeparator(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1996)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutWeldSymbolLineWidth ( double val ) {
    HRESULT _hr = put_WeldSymbolLineWidth(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1997)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetWeldSymbolLineWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_WeldSymbolLineWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1998)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutThreeSidedSymbolOffsetGap ( double val ) {
    HRESULT _hr = put_ThreeSidedSymbolOffsetGap(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1999)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetThreeSidedSymbolOffsetGap ( ) {
    double _result = 0;
    HRESULT _hr = get_ThreeSidedSymbolOffsetGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2000)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutHoleShaftToleranceSeparatorType ( enum DimHoleShaftSeparatorTypeConstants val ) {
    HRESULT _hr = put_HoleShaftToleranceSeparatorType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2001)
inline enum TGFrameworkSupport::DimHoleShaftSeparatorTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetHoleShaftToleranceSeparatorType ( ) {
    enum DimHoleShaftSeparatorTypeConstants _result;
    HRESULT _hr = get_HoleShaftToleranceSeparatorType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2002)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutToleranceTextVerticalAlignment ( enum TextVerticalAlignmentConstants val ) {
    HRESULT _hr = put_ToleranceTextVerticalAlignment(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2003)
inline enum TGFrameworkSupport::TextVerticalAlignmentConstants TGFrameworkSupport::_IDimensionStyleAuto::GetToleranceTextVerticalAlignment ( ) {
    enum TextVerticalAlignmentConstants _result;
    HRESULT _hr = get_ToleranceTextVerticalAlignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2004)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutToleranceTextHorizontalAlignment ( enum DimToleranceTextHorizontalAlignOptionsConstants val ) {
    HRESULT _hr = put_ToleranceTextHorizontalAlignment(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2005)
inline enum TGFrameworkSupport::DimToleranceTextHorizontalAlignOptionsConstants TGFrameworkSupport::_IDimensionStyleAuto::GetToleranceTextHorizontalAlignment ( ) {
    enum DimToleranceTextHorizontalAlignOptionsConstants _result;
    HRESULT _hr = get_ToleranceTextHorizontalAlignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2006)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutUseTextSizeForCombinedTolValueDisplay ( VARIANT_BOOL val ) {
    HRESULT _hr = put_UseTextSizeForCombinedTolValueDisplay(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2007)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetUseTextSizeForCombinedTolValueDisplay ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseTextSizeForCombinedTolValueDisplay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2008)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutDatumFrameLineTermThickness ( double val ) {
    HRESULT _hr = put_DatumFrameLineTermThickness(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2009)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetDatumFrameLineTermThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_DatumFrameLineTermThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2010)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutDatumTargetTerminatorType ( enum DimDatumTargetTermTypeConstants val ) {
    HRESULT _hr = put_DatumTargetTerminatorType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2011)
inline enum TGFrameworkSupport::DimDatumTargetTermTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetDatumTargetTerminatorType ( ) {
    enum DimDatumTargetTermTypeConstants _result;
    HRESULT _hr = get_DatumTargetTerminatorType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2012)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutPinSymbolTerminatorType ( enum DimPinSymbolTermTypeConstants val ) {
    HRESULT _hr = put_PinSymbolTerminatorType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2013)
inline enum TGFrameworkSupport::DimPinSymbolTermTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetPinSymbolTerminatorType ( ) {
    enum DimPinSymbolTermTypeConstants _result;
    HRESULT _hr = get_PinSymbolTerminatorType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2014)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutPrimaryLinearToleranceUnits ( enum DimLinearUnitConstants val ) {
    HRESULT _hr = put_PrimaryLinearToleranceUnits(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2015)
inline enum TGFrameworkSupport::DimLinearUnitConstants TGFrameworkSupport::_IDimensionStyleAuto::GetPrimaryLinearToleranceUnits ( ) {
    enum DimLinearUnitConstants _result;
    HRESULT _hr = get_PrimaryLinearToleranceUnits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2016)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutPrimaryLinearToleranceRoundOffType ( enum DimRoundOffTypeConstants val ) {
    HRESULT _hr = put_PrimaryLinearToleranceRoundOffType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2017)
inline enum TGFrameworkSupport::DimRoundOffTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetPrimaryLinearToleranceRoundOffType ( ) {
    enum DimRoundOffTypeConstants _result;
    HRESULT _hr = get_PrimaryLinearToleranceRoundOffType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2018)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutPrimaryLinearToleranceDecimalRoundOff ( enum DimDecimalRoundOffTypeConstants val ) {
    HRESULT _hr = put_PrimaryLinearToleranceDecimalRoundOff(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2019)
inline enum TGFrameworkSupport::DimDecimalRoundOffTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetPrimaryLinearToleranceDecimalRoundOff ( ) {
    enum DimDecimalRoundOffTypeConstants _result;
    HRESULT _hr = get_PrimaryLinearToleranceDecimalRoundOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2020)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutPrimaryLinearToleranceFractionRoundOff ( enum DimFractionRoundOffTypeConstants val ) {
    HRESULT _hr = put_PrimaryLinearToleranceFractionRoundOff(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2021)
inline enum TGFrameworkSupport::DimFractionRoundOffTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetPrimaryLinearToleranceFractionRoundOff ( ) {
    enum DimFractionRoundOffTypeConstants _result;
    HRESULT _hr = get_PrimaryLinearToleranceFractionRoundOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2022)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutPrimaryLinearToleranceUnitLabel ( _bstr_t val ) {
    HRESULT _hr = put_PrimaryLinearToleranceUnitLabel(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2023)
inline _bstr_t TGFrameworkSupport::_IDimensionStyleAuto::GetPrimaryLinearToleranceUnitLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PrimaryLinearToleranceUnitLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2024)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutPrimaryLinearToleranceSubunitsLabel ( _bstr_t val ) {
    HRESULT _hr = put_PrimaryLinearToleranceSubunitsLabel(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2025)
inline _bstr_t TGFrameworkSupport::_IDimensionStyleAuto::GetPrimaryLinearToleranceSubunitsLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PrimaryLinearToleranceSubunitsLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2026)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutPrimaryLinearToleranceMaximumSubunits ( int val ) {
    HRESULT _hr = put_PrimaryLinearToleranceMaximumSubunits(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2027)
inline int TGFrameworkSupport::_IDimensionStyleAuto::GetPrimaryLinearToleranceMaximumSubunits ( ) {
    int _result = 0;
    HRESULT _hr = get_PrimaryLinearToleranceMaximumSubunits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2028)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutPrimaryLinearToleranceFractionSeparator ( _bstr_t val ) {
    HRESULT _hr = put_PrimaryLinearToleranceFractionSeparator(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2029)
inline _bstr_t TGFrameworkSupport::_IDimensionStyleAuto::GetPrimaryLinearToleranceFractionSeparator ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PrimaryLinearToleranceFractionSeparator(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2030)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutAngularToleranceUnits ( enum DimAngularUnitConstants val ) {
    HRESULT _hr = put_AngularToleranceUnits(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2031)
inline enum TGFrameworkSupport::DimAngularUnitConstants TGFrameworkSupport::_IDimensionStyleAuto::GetAngularToleranceUnits ( ) {
    enum DimAngularUnitConstants _result;
    HRESULT _hr = get_AngularToleranceUnits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2032)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutAngularToleranceRoundOffType ( enum DimRoundOffTypeConstants val ) {
    HRESULT _hr = put_AngularToleranceRoundOffType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2033)
inline enum TGFrameworkSupport::DimRoundOffTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetAngularToleranceRoundOffType ( ) {
    enum DimRoundOffTypeConstants _result;
    HRESULT _hr = get_AngularToleranceRoundOffType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2034)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutAngularToleranceDMSRoundOff ( enum DimDMSRoundOffTypeConstants val ) {
    HRESULT _hr = put_AngularToleranceDMSRoundOff(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2035)
inline enum TGFrameworkSupport::DimDMSRoundOffTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetAngularToleranceDMSRoundOff ( ) {
    enum DimDMSRoundOffTypeConstants _result;
    HRESULT _hr = get_AngularToleranceDMSRoundOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2036)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutAngularToleranceDecimalRoundOff ( enum DimDecimalRoundOffTypeConstants val ) {
    HRESULT _hr = put_AngularToleranceDecimalRoundOff(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2037)
inline enum TGFrameworkSupport::DimDecimalRoundOffTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetAngularToleranceDecimalRoundOff ( ) {
    enum DimDecimalRoundOffTypeConstants _result;
    HRESULT _hr = get_AngularToleranceDecimalRoundOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2038)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutAngularToleranceFractionRoundOff ( enum DimFractionRoundOffTypeConstants val ) {
    HRESULT _hr = put_AngularToleranceFractionRoundOff(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2039)
inline enum TGFrameworkSupport::DimFractionRoundOffTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetAngularToleranceFractionRoundOff ( ) {
    enum DimFractionRoundOffTypeConstants _result;
    HRESULT _hr = get_AngularToleranceFractionRoundOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2040)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutSecondaryLinearToleranceUnits ( enum DimLinearUnitConstants val ) {
    HRESULT _hr = put_SecondaryLinearToleranceUnits(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2041)
inline enum TGFrameworkSupport::DimLinearUnitConstants TGFrameworkSupport::_IDimensionStyleAuto::GetSecondaryLinearToleranceUnits ( ) {
    enum DimLinearUnitConstants _result;
    HRESULT _hr = get_SecondaryLinearToleranceUnits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2042)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutSecondaryLinearToleranceRoundOffType ( enum DimRoundOffTypeConstants val ) {
    HRESULT _hr = put_SecondaryLinearToleranceRoundOffType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2043)
inline enum TGFrameworkSupport::DimRoundOffTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetSecondaryLinearToleranceRoundOffType ( ) {
    enum DimRoundOffTypeConstants _result;
    HRESULT _hr = get_SecondaryLinearToleranceRoundOffType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2044)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutSecondaryLinearToleranceDecimalRoundOff ( enum DimDecimalRoundOffTypeConstants val ) {
    HRESULT _hr = put_SecondaryLinearToleranceDecimalRoundOff(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2045)
inline enum TGFrameworkSupport::DimDecimalRoundOffTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetSecondaryLinearToleranceDecimalRoundOff ( ) {
    enum DimDecimalRoundOffTypeConstants _result;
    HRESULT _hr = get_SecondaryLinearToleranceDecimalRoundOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2046)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutSecondaryLinearToleranceFractionRoundOff ( enum DimFractionRoundOffTypeConstants val ) {
    HRESULT _hr = put_SecondaryLinearToleranceFractionRoundOff(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2047)
inline enum TGFrameworkSupport::DimFractionRoundOffTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetSecondaryLinearToleranceFractionRoundOff ( ) {
    enum DimFractionRoundOffTypeConstants _result;
    HRESULT _hr = get_SecondaryLinearToleranceFractionRoundOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2048)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutSecondaryLinearToleranceUnitLabel ( _bstr_t val ) {
    HRESULT _hr = put_SecondaryLinearToleranceUnitLabel(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2049)
inline _bstr_t TGFrameworkSupport::_IDimensionStyleAuto::GetSecondaryLinearToleranceUnitLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SecondaryLinearToleranceUnitLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2050)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutSecondaryLinearToleranceSubunitsLabel ( _bstr_t val ) {
    HRESULT _hr = put_SecondaryLinearToleranceSubunitsLabel(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2051)
inline _bstr_t TGFrameworkSupport::_IDimensionStyleAuto::GetSecondaryLinearToleranceSubunitsLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SecondaryLinearToleranceSubunitsLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2052)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutSecondaryLinearToleranceMaximumSubunits ( int val ) {
    HRESULT _hr = put_SecondaryLinearToleranceMaximumSubunits(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2053)
inline int TGFrameworkSupport::_IDimensionStyleAuto::GetSecondaryLinearToleranceMaximumSubunits ( ) {
    int _result = 0;
    HRESULT _hr = get_SecondaryLinearToleranceMaximumSubunits(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2054)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutSecondaryLinearToleranceFractionSeparator ( _bstr_t val ) {
    HRESULT _hr = put_SecondaryLinearToleranceFractionSeparator(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2055)
inline _bstr_t TGFrameworkSupport::_IDimensionStyleAuto::GetSecondaryLinearToleranceFractionSeparator ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SecondaryLinearToleranceFractionSeparator(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2056)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutSecondaryLinearFractionSeparator ( _bstr_t val ) {
    HRESULT _hr = put_SecondaryLinearFractionSeparator(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2057)
inline _bstr_t TGFrameworkSupport::_IDimensionStyleAuto::GetSecondaryLinearFractionSeparator ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SecondaryLinearFractionSeparator(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2058)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutDualUnitPosition ( enum DimDualUnitPositionConstants val ) {
    HRESULT _hr = put_DualUnitPosition(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2059)
inline enum TGFrameworkSupport::DimDualUnitPositionConstants TGFrameworkSupport::_IDimensionStyleAuto::GetDualUnitPosition ( ) {
    enum DimDualUnitPositionConstants _result;
    HRESULT _hr = get_DualUnitPosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2060)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutDualUnitJustification ( enum TextHorizontalAlignmentConstants val ) {
    HRESULT _hr = put_DualUnitJustification(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2061)
inline enum TGFrameworkSupport::TextHorizontalAlignmentConstants TGFrameworkSupport::_IDimensionStyleAuto::GetDualUnitJustification ( ) {
    enum TextHorizontalAlignmentConstants _result;
    HRESULT _hr = get_DualUnitJustification(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2062)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutSmartDepthSlotThru ( _bstr_t val ) {
    HRESULT _hr = put_SmartDepthSlotThru(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2063)
inline _bstr_t TGFrameworkSupport::_IDimensionStyleAuto::GetSmartDepthSlotThru ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SmartDepthSlotThru(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2064)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutSmartDepthSlotFinite ( _bstr_t val ) {
    HRESULT _hr = put_SmartDepthSlotFinite(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2065)
inline _bstr_t TGFrameworkSupport::_IDimensionStyleAuto::GetSmartDepthSlotFinite ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SmartDepthSlotFinite(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2066)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutSlotCalloutSimple ( _bstr_t val ) {
    HRESULT _hr = put_SlotCalloutSimple(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2067)
inline _bstr_t TGFrameworkSupport::_IDimensionStyleAuto::GetSlotCalloutSimple ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SlotCalloutSimple(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2068)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutSlotCalloutCounterbore ( _bstr_t val ) {
    HRESULT _hr = put_SlotCalloutCounterbore(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2069)
inline _bstr_t TGFrameworkSupport::_IDimensionStyleAuto::GetSlotCalloutCounterbore ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SlotCalloutCounterbore(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2070)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutCoordinateTextOrientation ( enum DimTextOrientationConstants val ) {
    HRESULT _hr = put_CoordinateTextOrientation(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2071)
inline enum TGFrameworkSupport::DimTextOrientationConstants TGFrameworkSupport::_IDimensionStyleAuto::GetCoordinateTextOrientation ( ) {
    enum DimTextOrientationConstants _result;
    HRESULT _hr = get_CoordinateTextOrientation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2072)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutEnableAutoJogForCoordinate ( VARIANT_BOOL val ) {
    HRESULT _hr = put_EnableAutoJogForCoordinate(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2073)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetEnableAutoJogForCoordinate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_EnableAutoJogForCoordinate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2074)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutAllowNegativeValueForCoordinate ( VARIANT_BOOL val ) {
    HRESULT _hr = put_AllowNegativeValueForCoordinate(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2075)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetAllowNegativeValueForCoordinate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AllowNegativeValueForCoordinate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2076)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutAllowOriginValueChangeForCoordinate ( VARIANT_BOOL val ) {
    HRESULT _hr = put_AllowOriginValueChangeForCoordinate(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2077)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetAllowOriginValueChangeForCoordinate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AllowOriginValueChangeForCoordinate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2078)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutShowOriginLineForCoordinate ( VARIANT_BOOL val ) {
    HRESULT _hr = put_ShowOriginLineForCoordinate(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2079)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetShowOriginLineForCoordinate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowOriginLineForCoordinate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2080)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutOverlineExtension ( double val ) {
    HRESULT _hr = put_OverlineExtension(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2081)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetOverlineExtension ( ) {
    double _result = 0;
    HRESULT _hr = get_OverlineExtension(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2082)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutSuppressSymmetricDiameterSymbol ( VARIANT_BOOL val ) {
    HRESULT _hr = put_SuppressSymmetricDiameterSymbol(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2083)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetSuppressSymmetricDiameterSymbol ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SuppressSymmetricDiameterSymbol(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2084)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutUnderlineSymbolAndPrefix ( VARIANT_BOOL val ) {
    HRESULT _hr = put_UnderlineSymbolAndPrefix(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2085)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetUnderlineSymbolAndPrefix ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UnderlineSymbolAndPrefix(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2086)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutInitialStackPitch ( double val ) {
    HRESULT _hr = put_InitialStackPitch(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2087)
inline double TGFrameworkSupport::_IDimensionStyleAuto::GetInitialStackPitch ( ) {
    double _result = 0;
    HRESULT _hr = get_InitialStackPitch(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2088)
inline IDispatchPtr TGFrameworkSupport::_IDimensionStyleAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2089)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2090)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutHoleCalloutCounterdrill ( _bstr_t val ) {
    HRESULT _hr = put_HoleCalloutCounterdrill(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2091)
inline _bstr_t TGFrameworkSupport::_IDimensionStyleAuto::GetHoleCalloutCounterdrill ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HoleCalloutCounterdrill(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2092)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutHoleCalloutCounterdrillThreaded ( _bstr_t val ) {
    HRESULT _hr = put_HoleCalloutCounterdrillThreaded(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2093)
inline _bstr_t TGFrameworkSupport::_IDimensionStyleAuto::GetHoleCalloutCounterdrillThreaded ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HoleCalloutCounterdrillThreaded(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2094)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutPrimaryStackFraction ( enum DimStackFractionTypeConstants val ) {
    HRESULT _hr = put_PrimaryStackFraction(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2095)
inline enum TGFrameworkSupport::DimStackFractionTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetPrimaryStackFraction ( ) {
    enum DimStackFractionTypeConstants _result;
    HRESULT _hr = get_PrimaryStackFraction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2096)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutSecondaryStackFraction ( enum DimStackFractionTypeConstants val ) {
    HRESULT _hr = put_SecondaryStackFraction(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2097)
inline enum TGFrameworkSupport::DimStackFractionTypeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetSecondaryStackFraction ( ) {
    enum DimStackFractionTypeConstants _result;
    HRESULT _hr = get_SecondaryStackFraction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2098)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutPrimaryStackFractionSize ( enum DimStackFractionSizeConstants val ) {
    HRESULT _hr = put_PrimaryStackFractionSize(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2099)
inline enum TGFrameworkSupport::DimStackFractionSizeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetPrimaryStackFractionSize ( ) {
    enum DimStackFractionSizeConstants _result;
    HRESULT _hr = get_PrimaryStackFractionSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2100)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutSecondaryStackFractionSize ( enum DimStackFractionSizeConstants val ) {
    HRESULT _hr = put_SecondaryStackFractionSize(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2101)
inline enum TGFrameworkSupport::DimStackFractionSizeConstants TGFrameworkSupport::_IDimensionStyleAuto::GetSecondaryStackFractionSize ( ) {
    enum DimStackFractionSizeConstants _result;
    HRESULT _hr = get_SecondaryStackFractionSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2102)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutShowHideReferenceGeometry ( VARIANT_BOOL val ) {
    HRESULT _hr = put_ShowHideReferenceGeometry(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2103)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetShowHideReferenceGeometry ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowHideReferenceGeometry(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2104)
inline void TGFrameworkSupport::_IDimensionStyleAuto::PutEnableAngularJog ( VARIANT_BOOL val ) {
    HRESULT _hr = put_EnableAngularJog(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2105)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStyleAuto::GetEnableAngularJog ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_EnableAngularJog(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface DimInitData wrapper method implementations
//

#pragma implementation_key(2106)
inline TGFramework::ApplicationPtr TGFrameworkSupport::DimInitData::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2107)
inline HRESULT TGFrameworkSupport::DimInitData::SetType ( enum DimTypeConstants DimensionType ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", DimensionType);
}

#pragma implementation_key(2108)
inline HRESULT TGFrameworkSupport::DimInitData::SetAxisMode ( enum DimAxisModeConstants AxisMode ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", AxisMode);
}

#pragma implementation_key(2109)
inline HRESULT TGFrameworkSupport::DimInitData::SetChamferAxisMode ( enum DimChamferModeConstants chamferAxisMode ) {
    return _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", chamferAxisMode);
}

#pragma implementation_key(2110)
inline HRESULT TGFrameworkSupport::DimInitData::SetNumberOfParents ( int numberOfParents ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", numberOfParents);
}

#pragma implementation_key(2111)
inline HRESULT TGFrameworkSupport::DimInitData::SetParentByIndex ( int Index, IDispatch * Object, VARIANT_BOOL IsKeyPoint, VARIANT_BOOL IsIntersection, VARIANT_BOOL IsTangentPoint, VARIANT_BOOL UseVirtualVertex, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0009\x000b\x000b\x000b\x000b\x0005\x0005\x0005", Index, Object, IsKeyPoint, IsIntersection, IsTangentPoint, UseVirtualVertex, x, y, z);
}

#pragma implementation_key(2112)
inline HRESULT TGFrameworkSupport::DimInitData::ClearParents ( ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2113)
inline HRESULT TGFrameworkSupport::DimInitData::ClearCreationData ( ) {
    return _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2114)
inline HRESULT TGFrameworkSupport::DimInitData::SetAxis ( IDispatch * Axis ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Axis);
}

#pragma implementation_key(2115)
inline HRESULT TGFrameworkSupport::DimInitData::ClearAxis ( ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2116)
inline HRESULT TGFrameworkSupport::DimInitData::SetPlane ( IDispatch * Plane ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Plane);
}

#pragma implementation_key(2117)
inline HRESULT TGFrameworkSupport::DimInitData::ClearPlane ( ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2118)
inline HRESULT TGFrameworkSupport::DimInitData::SetAngularCoordinateCounterClockwise ( VARIANT_BOOL bCounterClockWise ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", bCounterClockWise);
}

#pragma implementation_key(2119)
inline HRESULT TGFrameworkSupport::DimInitData::SetDimPositionMode ( VARIANT_BOOL bPositionDim ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", bPositionDim);
}

#pragma implementation_key(2120)
inline HRESULT TGFrameworkSupport::DimInitData::SetDimPosition ( double x, double y, double z ) {
    return _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", x, y, z);
}

#pragma implementation_key(2121)
inline HRESULT TGFrameworkSupport::DimInitData::SetAngularCoordOrigin ( VARIANT_BOOL bIsOriginDim ) {
    return _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", bIsOriginDim);
}

#pragma implementation_key(2122)
inline HRESULT TGFrameworkSupport::DimInitData::SetTrue3DSketchDimension ( VARIANT_BOOL bTrueDim ) {
    return _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", bTrueDim);
}

#pragma implementation_key(2123)
inline HRESULT TGFrameworkSupport::DimInitData::SetNormalDiameterMode ( VARIANT_BOOL bNormalDiameterDim ) {
    return _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", bNormalDiameterDim);
}

//
// interface _IDimensionsAuto wrapper method implementations
//

#pragma implementation_key(2124)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IDimensionsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2125)
inline long TGFrameworkSupport::_IDimensionsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2126)
inline IDispatchPtr TGFrameworkSupport::_IDimensionsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2127)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::_IDimensionsAuto::Item ( const _variant_t & Index ) {
    struct Dimension * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionPtr(_result, false);
}

#pragma implementation_key(2128)
inline IUnknownPtr TGFrameworkSupport::_IDimensionsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2129)
inline void TGFrameworkSupport::_IDimensionsAuto::PutConstraint ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_Constraint(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2130)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionsAuto::GetConstraint ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Constraint(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2131)
inline void TGFrameworkSupport::_IDimensionsAuto::PutAxisMode ( enum DimAxisModeConstants Value ) {
    HRESULT _hr = put_AxisMode(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2132)
inline enum TGFrameworkSupport::DimAxisModeConstants TGFrameworkSupport::_IDimensionsAuto::GetAxisMode ( ) {
    enum DimAxisModeConstants _result;
    HRESULT _hr = get_AxisMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2133)
inline void TGFrameworkSupport::_IDimensionsAuto::PutAngleCompliment ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_AngleCompliment(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2134)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionsAuto::GetAngleCompliment ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AngleCompliment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2135)
inline void TGFrameworkSupport::_IDimensionsAuto::PutPlane ( IDispatch * Plane ) {
    HRESULT _hr = put_Plane(Plane);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2136)
inline IDispatchPtr TGFrameworkSupport::_IDimensionsAuto::GetPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Plane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2137)
inline void TGFrameworkSupport::_IDimensionsAuto::PutStyle ( struct DimensionStyle * Style ) {
    HRESULT _hr = put_Style(Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2138)
inline TGFrameworkSupport::DimensionStylePtr TGFrameworkSupport::_IDimensionsAuto::GetStyle ( ) {
    struct DimensionStyle * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionStylePtr(_result, false);
}

#pragma implementation_key(2139)
inline void TGFrameworkSupport::_IDimensionsAuto::PutAxis ( IDispatch * Axis ) {
    HRESULT _hr = put_Axis(Axis);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2140)
inline IDispatchPtr TGFrameworkSupport::_IDimensionsAuto::GetAxis ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Axis(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2141)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::_IDimensionsAuto::AddLength ( IDispatch * Object ) {
    struct Dimension * _result = 0;
    HRESULT _hr = raw_AddLength(Object, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionPtr(_result, false);
}

#pragma implementation_key(2142)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::_IDimensionsAuto::AddAngle ( IDispatch * Object ) {
    struct Dimension * _result = 0;
    HRESULT _hr = raw_AddAngle(Object, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionPtr(_result, false);
}

#pragma implementation_key(2143)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::_IDimensionsAuto::AddRadius ( IDispatch * Object ) {
    struct Dimension * _result = 0;
    HRESULT _hr = raw_AddRadius(Object, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionPtr(_result, false);
}

#pragma implementation_key(2144)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::_IDimensionsAuto::AddRadialDiameter ( IDispatch * Object ) {
    struct Dimension * _result = 0;
    HRESULT _hr = raw_AddRadialDiameter(Object, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionPtr(_result, false);
}

#pragma implementation_key(2145)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::_IDimensionsAuto::AddCircularDiameter ( IDispatch * Object ) {
    struct Dimension * _result = 0;
    HRESULT _hr = raw_AddCircularDiameter(Object, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionPtr(_result, false);
}

#pragma implementation_key(2146)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::_IDimensionsAuto::AddSymmetricalDiameter ( IDispatch * Object1, double x1, double y1, double z1, VARIANT_BOOL keyPoint1, IDispatch * Object2, double x2, double y2, double z2, VARIANT_BOOL keyPoint2 ) {
    struct Dimension * _result = 0;
    HRESULT _hr = raw_AddSymmetricalDiameter(Object1, x1, y1, z1, keyPoint1, Object2, x2, y2, z2, keyPoint2, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionPtr(_result, false);
}

#pragma implementation_key(2147)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::_IDimensionsAuto::AddDistanceBetweenObjects ( IDispatch * Object1, double x1, double y1, double z1, VARIANT_BOOL keyPoint1, IDispatch * Object2, double x2, double y2, double z2, VARIANT_BOOL keyPoint2 ) {
    struct Dimension * _result = 0;
    HRESULT _hr = raw_AddDistanceBetweenObjects(Object1, x1, y1, z1, keyPoint1, Object2, x2, y2, z2, keyPoint2, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionPtr(_result, false);
}

#pragma implementation_key(2148)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::_IDimensionsAuto::AddDistanceObjectToIntersection ( IDispatch * Object1, double x1, double y1, double z1, VARIANT_BOOL keyPoint1, IDispatch * Object21, double x21, double y21, double z21, IDispatch * Object22, double x22, double y22, double z22 ) {
    struct Dimension * _result = 0;
    HRESULT _hr = raw_AddDistanceObjectToIntersection(Object1, x1, y1, z1, keyPoint1, Object21, x21, y21, z21, Object22, x22, y22, z22, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionPtr(_result, false);
}

#pragma implementation_key(2149)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::_IDimensionsAuto::AddDistanceIntersectionToObject ( IDispatch * Object11, double x11, double y11, double z11, IDispatch * Object12, double x12, double y12, double z12, IDispatch * Object2, double x2, double y2, double z2, VARIANT_BOOL keyPoint2 ) {
    struct Dimension * _result = 0;
    HRESULT _hr = raw_AddDistanceIntersectionToObject(Object11, x11, y11, z11, Object12, x12, y12, z12, Object2, x2, y2, z2, keyPoint2, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionPtr(_result, false);
}

#pragma implementation_key(2150)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::_IDimensionsAuto::AddDistanceIntersectionToIntersection ( IDispatch * Object11, double x11, double y11, double z11, IDispatch * Object12, double x12, double y12, double z12, IDispatch * Object21, double x21, double y21, double z21, IDispatch * Object22, double x22, double y22, double z22 ) {
    struct Dimension * _result = 0;
    HRESULT _hr = raw_AddDistanceIntersectionToIntersection(Object11, x11, y11, z11, Object12, x12, y12, z12, Object21, x21, y21, z21, Object22, x22, y22, z22, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionPtr(_result, false);
}

#pragma implementation_key(2151)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::_IDimensionsAuto::AddAngleBetweenObjects ( IDispatch * ele1, double x1, double y1, double z1, VARIANT_BOOL keyPoint1, IDispatch * ele2, double x2, double y2, double z2, VARIANT_BOOL keyPoint2 ) {
    struct Dimension * _result = 0;
    HRESULT _hr = raw_AddAngleBetweenObjects(ele1, x1, y1, z1, keyPoint1, ele2, x2, y2, z2, keyPoint2, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionPtr(_result, false);
}

#pragma implementation_key(2152)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::_IDimensionsAuto::AddAngleBetween3Objects ( IDispatch * ele1, double x1, double y1, double z1, VARIANT_BOOL keyPoint1, IDispatch * ele2, double x2, double y2, double z2, VARIANT_BOOL keyPoint2, IDispatch * ele3, double x3, double y3, double z3, VARIANT_BOOL keyPoint3 ) {
    struct Dimension * _result = 0;
    HRESULT _hr = raw_AddAngleBetween3Objects(ele1, x1, y1, z1, keyPoint1, ele2, x2, y2, z2, keyPoint2, ele3, x3, y3, z3, keyPoint3, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionPtr(_result, false);
}

#pragma implementation_key(2153)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::_IDimensionsAuto::AddCoordinateOrigin ( IDispatch * Object, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    struct Dimension * _result = 0;
    HRESULT _hr = raw_AddCoordinateOrigin(Object, x, y, z, keyPoint, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionPtr(_result, false);
}

#pragma implementation_key(2154)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::_IDimensionsAuto::AddCoordinate ( IDispatch * Obj1, double x1, double y1, double z1, VARIANT_BOOL keyPoint1, IDispatch * Obj2, double x2, double y2, double z2, VARIANT_BOOL keyPoint2 ) {
    struct Dimension * _result = 0;
    HRESULT _hr = raw_AddCoordinate(Obj1, x1, y1, z1, keyPoint1, Obj2, x2, y2, z2, keyPoint2, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionPtr(_result, false);
}

#pragma implementation_key(2155)
inline HRESULT TGFrameworkSupport::_IDimensionsAuto::ClearPlane ( ) {
    HRESULT _hr = raw_ClearPlane();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2156)
inline HRESULT TGFrameworkSupport::_IDimensionsAuto::ClearStyle ( ) {
    HRESULT _hr = raw_ClearStyle();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2157)
inline HRESULT TGFrameworkSupport::_IDimensionsAuto::ClearAxis ( ) {
    HRESULT _hr = raw_ClearAxis();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2158)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::_IDimensionsAuto::AddChamfer ( IDispatch * Object1, double x1, double y1, double z1, VARIANT_BOOL keyPoint1, IDispatch * Object2, double x2, double y2, double z2, VARIANT_BOOL keyPoint2, enum DimChamferModeConstants valChamferMode ) {
    struct Dimension * _result = 0;
    HRESULT _hr = raw_AddChamfer(Object1, x1, y1, z1, keyPoint1, Object2, x2, y2, z2, keyPoint2, valChamferMode, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionPtr(_result, false);
}

#pragma implementation_key(2159)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::_IDimensionsAuto::AddAngularCoordinateOrigin ( IDispatch * Obj1, double x1, double y1, double z1, VARIANT_BOOL keyPoint1, IDispatch * Obj2, double x2, double y2, double z2, VARIANT_BOOL keyPoint2, double x3, double y3, double z3 ) {
    struct Dimension * _result = 0;
    HRESULT _hr = raw_AddAngularCoordinateOrigin(Obj1, x1, y1, z1, keyPoint1, Obj2, x2, y2, z2, keyPoint2, x3, y3, z3, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionPtr(_result, false);
}

#pragma implementation_key(2160)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::_IDimensionsAuto::AddAngularCoordinate ( IDispatch * Obj1, IDispatch * Obj2, double x2, double y2, double z2, VARIANT_BOOL keyPoint2, double x3, double y3, double z3, enum DimAngularCoordnateOrientationConstants valAngCoordMode ) {
    struct Dimension * _result = 0;
    HRESULT _hr = raw_AddAngularCoordinate(Obj1, Obj2, x2, y2, z2, keyPoint2, x3, y3, z3, valAngCoordMode, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionPtr(_result, false);
}

#pragma implementation_key(2161)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::_IDimensionsAuto::AddCoordinateOriginEx ( IDispatch * Object, double x, double y, double z, VARIANT_BOOL keyPoint1, double x3, double y3, double z3 ) {
    struct Dimension * _result = 0;
    HRESULT _hr = raw_AddCoordinateOriginEx(Object, x, y, z, keyPoint1, x3, y3, z3, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionPtr(_result, false);
}

#pragma implementation_key(2162)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::_IDimensionsAuto::AddCoordinateEx ( IDispatch * Obj1, IDispatch * Obj2, double x2, double y2, double z2, VARIANT_BOOL keyPoint2, double x3, double y3, double z3 ) {
    struct Dimension * _result = 0;
    HRESULT _hr = raw_AddCoordinateEx(Obj1, Obj2, x2, y2, z2, keyPoint2, x3, y3, z3, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionPtr(_result, false);
}

#pragma implementation_key(2163)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::_IDimensionsAuto::AddDistanceBetweenObjectsEX ( IDispatch * Object1, double x1, double y1, double z1, VARIANT_BOOL keyPoint1, VARIANT_BOOL bTangent1, IDispatch * Object2, double x2, double y2, double z2, VARIANT_BOOL keyPoint2, VARIANT_BOOL bTangent2 ) {
    struct Dimension * _result = 0;
    HRESULT _hr = raw_AddDistanceBetweenObjectsEX(Object1, x1, y1, z1, keyPoint1, bTangent1, Object2, x2, y2, z2, keyPoint2, bTangent2, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionPtr(_result, false);
}

#pragma implementation_key(2164)
inline TGFrameworkSupport::DimInitDataPtr TGFrameworkSupport::_IDimensionsAuto::GetDimInitData ( ) {
    struct DimInitData * _result = 0;
    HRESULT _hr = get_DimInitData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimInitDataPtr(_result, false);
}

#pragma implementation_key(2165)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::_IDimensionsAuto::AddDimension ( struct DimInitData * DimInitData ) {
    struct Dimension * _result = 0;
    HRESULT _hr = raw_AddDimension(DimInitData, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionPtr(_result, false);
}

//
// interface _IDimInitDataAuto wrapper method implementations
//

#pragma implementation_key(2166)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IDimInitDataAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2167)
inline HRESULT TGFrameworkSupport::_IDimInitDataAuto::SetType ( enum DimTypeConstants DimensionType ) {
    HRESULT _hr = raw_SetType(DimensionType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2168)
inline HRESULT TGFrameworkSupport::_IDimInitDataAuto::SetAxisMode ( enum DimAxisModeConstants AxisMode ) {
    HRESULT _hr = raw_SetAxisMode(AxisMode);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2169)
inline HRESULT TGFrameworkSupport::_IDimInitDataAuto::SetChamferAxisMode ( enum DimChamferModeConstants chamferAxisMode ) {
    HRESULT _hr = raw_SetChamferAxisMode(chamferAxisMode);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2170)
inline HRESULT TGFrameworkSupport::_IDimInitDataAuto::SetNumberOfParents ( int numberOfParents ) {
    HRESULT _hr = raw_SetNumberOfParents(numberOfParents);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2171)
inline HRESULT TGFrameworkSupport::_IDimInitDataAuto::SetParentByIndex ( int Index, IDispatch * Object, VARIANT_BOOL IsKeyPoint, VARIANT_BOOL IsIntersection, VARIANT_BOOL IsTangentPoint, VARIANT_BOOL UseVirtualVertex, double x, double y, double z ) {
    HRESULT _hr = raw_SetParentByIndex(Index, Object, IsKeyPoint, IsIntersection, IsTangentPoint, UseVirtualVertex, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2172)
inline HRESULT TGFrameworkSupport::_IDimInitDataAuto::ClearParents ( ) {
    HRESULT _hr = raw_ClearParents();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2173)
inline HRESULT TGFrameworkSupport::_IDimInitDataAuto::ClearCreationData ( ) {
    HRESULT _hr = raw_ClearCreationData();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2174)
inline HRESULT TGFrameworkSupport::_IDimInitDataAuto::SetAxis ( IDispatch * Axis ) {
    HRESULT _hr = raw_SetAxis(Axis);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2175)
inline HRESULT TGFrameworkSupport::_IDimInitDataAuto::ClearAxis ( ) {
    HRESULT _hr = raw_ClearAxis();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2176)
inline HRESULT TGFrameworkSupport::_IDimInitDataAuto::SetPlane ( IDispatch * Plane ) {
    HRESULT _hr = raw_SetPlane(Plane);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2177)
inline HRESULT TGFrameworkSupport::_IDimInitDataAuto::ClearPlane ( ) {
    HRESULT _hr = raw_ClearPlane();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2178)
inline HRESULT TGFrameworkSupport::_IDimInitDataAuto::SetAngularCoordinateCounterClockwise ( VARIANT_BOOL bCounterClockWise ) {
    HRESULT _hr = raw_SetAngularCoordinateCounterClockwise(bCounterClockWise);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2179)
inline HRESULT TGFrameworkSupport::_IDimInitDataAuto::SetDimPositionMode ( VARIANT_BOOL bPositionDim ) {
    HRESULT _hr = raw_SetDimPositionMode(bPositionDim);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2180)
inline HRESULT TGFrameworkSupport::_IDimInitDataAuto::SetDimPosition ( double x, double y, double z ) {
    HRESULT _hr = raw_SetDimPosition(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2181)
inline HRESULT TGFrameworkSupport::_IDimInitDataAuto::SetAngularCoordOrigin ( VARIANT_BOOL bIsOriginDim ) {
    HRESULT _hr = raw_SetAngularCoordOrigin(bIsOriginDim);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2182)
inline HRESULT TGFrameworkSupport::_IDimInitDataAuto::SetTrue3DSketchDimension ( VARIANT_BOOL bTrueDim ) {
    HRESULT _hr = raw_SetTrue3DSketchDimension(bTrueDim);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2183)
inline HRESULT TGFrameworkSupport::_IDimInitDataAuto::SetNormalDiameterMode ( VARIANT_BOOL bNormalDiameterDim ) {
    HRESULT _hr = raw_SetNormalDiameterMode(bNormalDiameterDim);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface Leaders wrapper method implementations
//

#pragma implementation_key(2184)
inline TGFramework::ApplicationPtr TGFrameworkSupport::Leaders::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2185)
inline long TGFrameworkSupport::Leaders::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2186)
inline IDispatchPtr TGFrameworkSupport::Leaders::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2187)
inline TGFrameworkSupport::LeaderPtr TGFrameworkSupport::Leaders::Item ( const _variant_t & Index ) {
    struct Leader * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return LeaderPtr(_result, false);
}

#pragma implementation_key(2188)
inline void TGFrameworkSupport::Leaders::PutPlane ( IDispatch * _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(2189)
inline IDispatchPtr TGFrameworkSupport::Leaders::GetPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2190)
inline void TGFrameworkSupport::Leaders::PutStyle ( struct DimensionStyle * _arg1 ) {
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(2191)
inline TGFrameworkSupport::DimensionStylePtr TGFrameworkSupport::Leaders::GetStyle ( ) {
    struct DimensionStyle * _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DimensionStylePtr(_result, false);
}

#pragma implementation_key(2192)
inline TGFrameworkSupport::LeaderPtr TGFrameworkSupport::Leaders::Add ( double x1, double y1, double z1, double x2, double y2, double z2 ) {
    struct Leader * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005", x1, y1, z1, x2, y2, z2);
    return LeaderPtr(_result, false);
}

#pragma implementation_key(2193)
inline TGFrameworkSupport::LeaderPtr TGFrameworkSupport::Leaders::AddByConnect ( IDispatch * ConnectObject, double x1, double y1, double z1, VARIANT_BOOL keyPoint, double x2, double y2, double z2 ) {
    struct Leader * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x000b\x0005\x0005\x0005", ConnectObject, x1, y1, z1, keyPoint, x2, y2, z2);
    return LeaderPtr(_result, false);
}

#pragma implementation_key(2194)
inline TGFrameworkSupport::LeaderPtr TGFrameworkSupport::Leaders::AddByTerminator ( IDispatch * TerminatorObject, double x1, double y1, double z1, VARIANT_BOOL keyPoint1, double x2, double y2, double z2 ) {
    struct Leader * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x000b\x0005\x0005\x0005", TerminatorObject, x1, y1, z1, keyPoint1, x2, y2, z2);
    return LeaderPtr(_result, false);
}

#pragma implementation_key(2195)
inline TGFrameworkSupport::LeaderPtr TGFrameworkSupport::Leaders::AddByTerminatorConnect ( IDispatch * TerminatorObject, double x1, double y1, double z1, VARIANT_BOOL keyPoint1, IDispatch * ConnectObject, double x2, double y2, double z2, VARIANT_BOOL keyPoint2 ) {
    struct Leader * _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x000b\x0009\x0005\x0005\x0005\x000b", TerminatorObject, x1, y1, z1, keyPoint1, ConnectObject, x2, y2, z2, keyPoint2);
    return LeaderPtr(_result, false);
}

#pragma implementation_key(2196)
inline HRESULT TGFrameworkSupport::Leaders::ClearPlane ( ) {
    return _com_dispatch_method(this, 0x78, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2197)
inline HRESULT TGFrameworkSupport::Leaders::ClearStyle ( ) {
    return _com_dispatch_method(this, 0x79, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2198)
inline TGFrameworkSupport::AnnotInitDataPtr TGFrameworkSupport::Leaders::GetAnnotInitData ( ) {
    struct AnnotInitData * _result = 0;
    _com_dispatch_method(this, 0x7a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AnnotInitDataPtr(_result, false);
}

#pragma implementation_key(2199)
inline TGFrameworkSupport::LeaderPtr TGFrameworkSupport::Leaders::AddLeader ( struct AnnotInitData * AnnotInitData, double x, double y, double z ) {
    struct Leader * _result = 0;
    _com_dispatch_method(this, 0x7b, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005", AnnotInitData, x, y, z);
    return LeaderPtr(_result, false);
}

//
// dispinterface Leader wrapper method implementations
//

#pragma implementation_key(2200)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::Leader::GetStyle ( ) {
    struct DimStyle * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DimStylePtr(_result, false);
}

#pragma implementation_key(2201)
inline HRESULT TGFrameworkSupport::Leader::SetTerminator ( IDispatch * TerminatorObj, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    return _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0005\x0005\x0005\x000b", TerminatorObj, x, y, z, keyPoint);
}

#pragma implementation_key(2202)
inline HRESULT TGFrameworkSupport::Leader::GetTerminator ( IDispatch * * TerminatorObj, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    return _com_dispatch_method(this, 0x18, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4005\x4005\x4005\x400b", TerminatorObj, x, y, z, keyPoint);
}

#pragma implementation_key(2203)
inline HRESULT TGFrameworkSupport::Leader::SetFreeSpacePoint ( double x, double y, double z ) {
    return _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", x, y, z);
}

#pragma implementation_key(2204)
inline HRESULT TGFrameworkSupport::Leader::GetFreeSpacePoint ( double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0x19, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005", x, y, z);
}

#pragma implementation_key(2205)
inline HRESULT TGFrameworkSupport::Leader::SetConnect ( IDispatch * ConnectObject, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    return _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0005\x0005\x0005\x000b", ConnectObject, x, y, z, keyPoint);
}

#pragma implementation_key(2206)
inline HRESULT TGFrameworkSupport::Leader::GetConnect ( IDispatch * * ConnectObj, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    return _com_dispatch_method(this, 0x1a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4005\x4005\x4005\x400b", ConnectObj, x, y, z, keyPoint);
}

#pragma implementation_key(2207)
inline HRESULT TGFrameworkSupport::Leader::SetConnectPoint ( double x, double y, double z ) {
    return _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", x, y, z);
}

#pragma implementation_key(2208)
inline HRESULT TGFrameworkSupport::Leader::GetConnectPoint ( double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0x1b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005", x, y, z);
}

#pragma implementation_key(2209)
inline IDispatchPtr TGFrameworkSupport::Leader::GetPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2210)
inline TGFramework::ApplicationPtr TGFrameworkSupport::Leader::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2211)
inline long TGFrameworkSupport::Leader::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1066, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2212)
inline _bstr_t TGFrameworkSupport::Leader::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1067, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2213)
inline IDispatchPtr TGFrameworkSupport::Leader::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1068, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2214)
inline long TGFrameworkSupport::Leader::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1069, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2215)
inline long TGFrameworkSupport::Leader::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x106b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2216)
inline _bstr_t TGFrameworkSupport::Leader::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x106c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2217)
inline IDispatchPtr TGFrameworkSupport::Leader::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x106d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2218)
inline HRESULT TGFrameworkSupport::Leader::Copy ( ) {
    return _com_dispatch_method(this, 0x6001100a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2219)
inline HRESULT TGFrameworkSupport::Leader::Cut ( ) {
    return _com_dispatch_method(this, 0x6001100b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2220)
inline HRESULT TGFrameworkSupport::Leader::Delete ( ) {
    return _com_dispatch_method(this, 0x6001100c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2221)
inline HRESULT TGFrameworkSupport::Leader::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    return _com_dispatch_method(this, 0x6001100d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", XFrom, YFrom, XTo, YTo);
}

#pragma implementation_key(2222)
inline HRESULT TGFrameworkSupport::Leader::Scale ( double Factor ) {
    return _com_dispatch_method(this, 0x6001100e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Factor);
}

#pragma implementation_key(2223)
inline HRESULT TGFrameworkSupport::Leader::Rotate ( double Angle, double x, double y ) {
    return _com_dispatch_method(this, 0x6001100f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", Angle, x, y);
}

#pragma implementation_key(2224)
inline HRESULT TGFrameworkSupport::Leader::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60011011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(2225)
inline IDispatchPtr TGFrameworkSupport::Leader::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60011012, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &XDistance, &YDistance);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2226)
inline IDispatchPtr TGFrameworkSupport::Leader::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60011013, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x080c", x1, y1, x2, y2, &BooleanCopyFlag);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2227)
inline HRESULT TGFrameworkSupport::Leader::BringToFront ( ) {
    return _com_dispatch_method(this, 0x60011014, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2228)
inline HRESULT TGFrameworkSupport::Leader::BringForward ( ) {
    return _com_dispatch_method(this, 0x60011015, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2229)
inline HRESULT TGFrameworkSupport::Leader::SendToBack ( ) {
    return _com_dispatch_method(this, 0x60011016, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2230)
inline HRESULT TGFrameworkSupport::Leader::SendBackward ( ) {
    return _com_dispatch_method(this, 0x60011017, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2231)
inline HRESULT TGFrameworkSupport::Leader::Select ( ) {
    return _com_dispatch_method(this, 0x60011018, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2232)
inline double TGFrameworkSupport::Leader::GetBreakLineDistance ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3004, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2233)
inline void TGFrameworkSupport::Leader::PutBreakLineDistance ( double _arg1 ) {
    _com_dispatch_method(this, 0x3004, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2234)
inline VARIANT_BOOL TGFrameworkSupport::Leader::GetBreakLine ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3005, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2235)
inline void TGFrameworkSupport::Leader::PutBreakLine ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3005, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2236)
inline VARIANT_BOOL TGFrameworkSupport::Leader::GetBreakLineDirection ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3006, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2237)
inline void TGFrameworkSupport::Leader::PutBreakLineDirection ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3006, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2238)
inline VARIANT_BOOL TGFrameworkSupport::Leader::GetLeader ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3007, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2239)
inline void TGFrameworkSupport::Leader::PutLeader ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3007, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2240)
inline long TGFrameworkSupport::Leader::GetVertexCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3003, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2241)
inline HRESULT TGFrameworkSupport::Leader::GetVertices ( long * VertexCount, SAFEARRAY * * Vertices ) {
    return _com_dispatch_method(this, 0x60013009, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6005", VertexCount, Vertices);
}

#pragma implementation_key(2242)
inline HRESULT TGFrameworkSupport::Leader::SetVertices ( long VertexCount, SAFEARRAY * * Vertices ) {
    return _com_dispatch_method(this, 0x6001300a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6005", VertexCount, Vertices);
}

#pragma implementation_key(2243)
inline HRESULT TGFrameworkSupport::Leader::GetVertex ( long Index, double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0x6001300b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005", Index, x, y, z);
}

#pragma implementation_key(2244)
inline HRESULT TGFrameworkSupport::Leader::SetVertex ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x6001300c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(2245)
inline HRESULT TGFrameworkSupport::Leader::InsertVertex ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x6001300d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(2246)
inline HRESULT TGFrameworkSupport::Leader::AddVertex ( double x, double y, double z ) {
    return _com_dispatch_method(this, 0x6001300e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", x, y, z);
}

#pragma implementation_key(2247)
inline HRESULT TGFrameworkSupport::Leader::RemoveVertex ( long Index ) {
    return _com_dispatch_method(this, 0x6001300f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Index);
}

#pragma implementation_key(2248)
inline long TGFrameworkSupport::Leader::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2249)
inline HRESULT TGFrameworkSupport::Leader::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x4002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(2250)
inline HRESULT TGFrameworkSupport::Leader::SetKeyPoint ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x4003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(2251)
inline void TGFrameworkSupport::Leader::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1075, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2252)
inline _bstr_t TGFrameworkSupport::Leader::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1075, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2253)
inline IDispatchPtr TGFrameworkSupport::Leader::GetPMIPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1076, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2254)
inline double TGFrameworkSupport::Leader::GetPMITrackDistance ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1077, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2255)
inline void TGFrameworkSupport::Leader::PutPMITrackDistance ( double _arg1 ) {
    _com_dispatch_method(this, 0x1077, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2256)
inline void TGFrameworkSupport::Leader::PutHidePMI ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1078, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2257)
inline VARIANT_BOOL TGFrameworkSupport::Leader::GetHidePMI ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1078, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2258)
inline void TGFrameworkSupport::Leader::PutVerticalBreakLine ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1079, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2259)
inline VARIANT_BOOL TGFrameworkSupport::Leader::GetVerticalBreakLine ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1079, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2260)
inline TGFrameworkSupport::DisplayDataPtr TGFrameworkSupport::Leader::GetDisplayData ( ) {
    struct DisplayData * _result = 0;
    _com_dispatch_method(this, 0x107a, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return DisplayDataPtr(_result, false);
}

#pragma implementation_key(2261)
inline HRESULT TGFrameworkSupport::Leader::PromoteToCurrentVersion ( ) {
    return _com_dispatch_method(this, 0x107b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2262)
inline void TGFrameworkSupport::Leader::PutPMIName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x107c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2263)
inline _bstr_t TGFrameworkSupport::Leader::GetPMIName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x107c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2264)
inline HRESULT TGFrameworkSupport::Leader::TransformToModelCoordinates ( double InputX, double InputY, double InputZ, double * ModelX, double * ModelY, double * ModelZ ) {
    return _com_dispatch_method(this, 0x107d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x4005\x4005\x4005", InputX, InputY, InputZ, ModelX, ModelY, ModelZ);
}

#pragma implementation_key(2265)
inline VARIANT_BOOL TGFrameworkSupport::Leader::GetIsTerminatorAttachedToEntity ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x107e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2266)
inline HRESULT TGFrameworkSupport::Leader::GetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    return _com_dispatch_method(this, 0x1080, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009", ReferencedGeometries);
}

#pragma implementation_key(2267)
inline HRESULT TGFrameworkSupport::Leader::SetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    return _com_dispatch_method(this, 0x107f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009", ReferencedGeometries);
}

#pragma implementation_key(2268)
inline IDispatchPtr TGFrameworkSupport::Leader::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2269)
inline VARIANT_BOOL TGFrameworkSupport::Leader::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _ILeaderAuto wrapper method implementations
//

#pragma implementation_key(2270)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::_ILeaderAuto::GetStyle ( ) {
    struct DimStyle * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimStylePtr(_result, false);
}

#pragma implementation_key(2271)
inline HRESULT TGFrameworkSupport::_ILeaderAuto::SetTerminator ( IDispatch * TerminatorObj, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    HRESULT _hr = raw_SetTerminator(TerminatorObj, x, y, z, keyPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2272)
inline HRESULT TGFrameworkSupport::_ILeaderAuto::GetTerminator ( IDispatch * * TerminatorObj, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    HRESULT _hr = raw_GetTerminator(TerminatorObj, x, y, z, keyPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2273)
inline HRESULT TGFrameworkSupport::_ILeaderAuto::SetFreeSpacePoint ( double x, double y, double z ) {
    HRESULT _hr = raw_SetFreeSpacePoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2274)
inline HRESULT TGFrameworkSupport::_ILeaderAuto::GetFreeSpacePoint ( double * x, double * y, double * z ) {
    HRESULT _hr = raw_GetFreeSpacePoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2275)
inline HRESULT TGFrameworkSupport::_ILeaderAuto::SetConnect ( IDispatch * ConnectObject, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    HRESULT _hr = raw_SetConnect(ConnectObject, x, y, z, keyPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2276)
inline HRESULT TGFrameworkSupport::_ILeaderAuto::GetConnect ( IDispatch * * ConnectObj, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    HRESULT _hr = raw_GetConnect(ConnectObj, x, y, z, keyPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2277)
inline HRESULT TGFrameworkSupport::_ILeaderAuto::SetConnectPoint ( double x, double y, double z ) {
    HRESULT _hr = raw_SetConnectPoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2278)
inline HRESULT TGFrameworkSupport::_ILeaderAuto::GetConnectPoint ( double * x, double * y, double * z ) {
    HRESULT _hr = raw_GetConnectPoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2279)
inline IDispatchPtr TGFrameworkSupport::_ILeaderAuto::GetPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Plane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2280)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_ILeaderAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2281)
inline long TGFrameworkSupport::_ILeaderAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2282)
inline _bstr_t TGFrameworkSupport::_ILeaderAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2283)
inline IDispatchPtr TGFrameworkSupport::_ILeaderAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2284)
inline long TGFrameworkSupport::_ILeaderAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2285)
inline long TGFrameworkSupport::_ILeaderAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2286)
inline _bstr_t TGFrameworkSupport::_ILeaderAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2287)
inline IDispatchPtr TGFrameworkSupport::_ILeaderAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2288)
inline HRESULT TGFrameworkSupport::_ILeaderAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2289)
inline HRESULT TGFrameworkSupport::_ILeaderAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2290)
inline HRESULT TGFrameworkSupport::_ILeaderAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2291)
inline HRESULT TGFrameworkSupport::_ILeaderAuto::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    HRESULT _hr = raw_Move(XFrom, YFrom, XTo, YTo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2292)
inline HRESULT TGFrameworkSupport::_ILeaderAuto::Scale ( double Factor ) {
    HRESULT _hr = raw_Scale(Factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2293)
inline HRESULT TGFrameworkSupport::_ILeaderAuto::Rotate ( double Angle, double x, double y ) {
    HRESULT _hr = raw_Rotate(Angle, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2294)
inline HRESULT TGFrameworkSupport::_ILeaderAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2295)
inline IDispatchPtr TGFrameworkSupport::_ILeaderAuto::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Duplicate(XDistance, YDistance, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2296)
inline IDispatchPtr TGFrameworkSupport::_ILeaderAuto::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Mirror(x1, y1, x2, y2, BooleanCopyFlag, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2297)
inline HRESULT TGFrameworkSupport::_ILeaderAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2298)
inline HRESULT TGFrameworkSupport::_ILeaderAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2299)
inline HRESULT TGFrameworkSupport::_ILeaderAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2300)
inline HRESULT TGFrameworkSupport::_ILeaderAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2301)
inline HRESULT TGFrameworkSupport::_ILeaderAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2302)
inline double TGFrameworkSupport::_ILeaderAuto::GetBreakLineDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_BreakLineDistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2303)
inline void TGFrameworkSupport::_ILeaderAuto::PutBreakLineDistance ( double Distance ) {
    HRESULT _hr = put_BreakLineDistance(Distance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2304)
inline VARIANT_BOOL TGFrameworkSupport::_ILeaderAuto::GetBreakLine ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BreakLine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2305)
inline void TGFrameworkSupport::_ILeaderAuto::PutBreakLine ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_BreakLine(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2306)
inline VARIANT_BOOL TGFrameworkSupport::_ILeaderAuto::GetBreakLineDirection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BreakLineDirection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2307)
inline void TGFrameworkSupport::_ILeaderAuto::PutBreakLineDirection ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_BreakLineDirection(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2308)
inline VARIANT_BOOL TGFrameworkSupport::_ILeaderAuto::GetLeader ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Leader(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2309)
inline void TGFrameworkSupport::_ILeaderAuto::PutLeader ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_Leader(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2310)
inline long TGFrameworkSupport::_ILeaderAuto::GetVertexCount ( ) {
    long _result = 0;
    HRESULT _hr = get_VertexCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2311)
inline HRESULT TGFrameworkSupport::_ILeaderAuto::GetVertices ( long * VertexCount, SAFEARRAY * * Vertices ) {
    HRESULT _hr = raw_GetVertices(VertexCount, Vertices);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2312)
inline HRESULT TGFrameworkSupport::_ILeaderAuto::SetVertices ( long VertexCount, SAFEARRAY * * Vertices ) {
    HRESULT _hr = raw_SetVertices(VertexCount, Vertices);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2313)
inline HRESULT TGFrameworkSupport::_ILeaderAuto::GetVertex ( long Index, double * x, double * y, double * z ) {
    HRESULT _hr = raw_GetVertex(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2314)
inline HRESULT TGFrameworkSupport::_ILeaderAuto::SetVertex ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetVertex(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2315)
inline HRESULT TGFrameworkSupport::_ILeaderAuto::InsertVertex ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_InsertVertex(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2316)
inline HRESULT TGFrameworkSupport::_ILeaderAuto::AddVertex ( double x, double y, double z ) {
    HRESULT _hr = raw_AddVertex(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2317)
inline HRESULT TGFrameworkSupport::_ILeaderAuto::RemoveVertex ( long Index ) {
    HRESULT _hr = raw_RemoveVertex(Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2318)
inline long TGFrameworkSupport::_ILeaderAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2319)
inline HRESULT TGFrameworkSupport::_ILeaderAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2320)
inline HRESULT TGFrameworkSupport::_ILeaderAuto::SetKeyPoint ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetKeyPoint(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2321)
inline void TGFrameworkSupport::_ILeaderAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2322)
inline _bstr_t TGFrameworkSupport::_ILeaderAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2323)
inline IDispatchPtr TGFrameworkSupport::_ILeaderAuto::GetPMIPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_PMIPlane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2324)
inline double TGFrameworkSupport::_ILeaderAuto::GetPMITrackDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_PMITrackDistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2325)
inline void TGFrameworkSupport::_ILeaderAuto::PutPMITrackDistance ( double pdPMITrackDistance ) {
    HRESULT _hr = put_PMITrackDistance(pdPMITrackDistance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2326)
inline void TGFrameworkSupport::_ILeaderAuto::PutHidePMI ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_HidePMI(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2327)
inline VARIANT_BOOL TGFrameworkSupport::_ILeaderAuto::GetHidePMI ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HidePMI(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2328)
inline void TGFrameworkSupport::_ILeaderAuto::PutVerticalBreakLine ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_VerticalBreakLine(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2329)
inline VARIANT_BOOL TGFrameworkSupport::_ILeaderAuto::GetVerticalBreakLine ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_VerticalBreakLine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2330)
inline TGFrameworkSupport::DisplayDataPtr TGFrameworkSupport::_ILeaderAuto::GetDisplayData ( ) {
    struct DisplayData * _result = 0;
    HRESULT _hr = raw_GetDisplayData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DisplayDataPtr(_result, false);
}

#pragma implementation_key(2331)
inline HRESULT TGFrameworkSupport::_ILeaderAuto::PromoteToCurrentVersion ( ) {
    HRESULT _hr = raw_PromoteToCurrentVersion();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2332)
inline void TGFrameworkSupport::_ILeaderAuto::PutPMIName ( _bstr_t Text ) {
    HRESULT _hr = put_PMIName(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2333)
inline _bstr_t TGFrameworkSupport::_ILeaderAuto::GetPMIName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PMIName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2334)
inline HRESULT TGFrameworkSupport::_ILeaderAuto::TransformToModelCoordinates ( double InputX, double InputY, double InputZ, double * ModelX, double * ModelY, double * ModelZ ) {
    HRESULT _hr = raw_TransformToModelCoordinates(InputX, InputY, InputZ, ModelX, ModelY, ModelZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2335)
inline VARIANT_BOOL TGFrameworkSupport::_ILeaderAuto::GetIsTerminatorAttachedToEntity ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsTerminatorAttachedToEntity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2336)
inline HRESULT TGFrameworkSupport::_ILeaderAuto::GetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    HRESULT _hr = raw_GetReferencedGeometry(ReferencedGeometries);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2337)
inline HRESULT TGFrameworkSupport::_ILeaderAuto::SetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    HRESULT _hr = raw_SetReferencedGeometry(ReferencedGeometries);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2338)
inline IDispatchPtr TGFrameworkSupport::_ILeaderAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2339)
inline VARIANT_BOOL TGFrameworkSupport::_ILeaderAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface AnnotInitData wrapper method implementations
//

#pragma implementation_key(2340)
inline TGFramework::ApplicationPtr TGFrameworkSupport::AnnotInitData::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2341)
inline HRESULT TGFrameworkSupport::AnnotInitData::SetTerminatorElement ( IDispatch * Object, VARIANT_BOOL IsKeyPoint, VARIANT_BOOL UseVirtualEdge, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x000b\x000b\x0005\x0005\x0005", Object, IsKeyPoint, UseVirtualEdge, x, y, z);
}

#pragma implementation_key(2342)
inline HRESULT TGFrameworkSupport::AnnotInitData::ClearTerminatorElement ( ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2343)
inline HRESULT TGFrameworkSupport::AnnotInitData::SetConnectElement ( IDispatch * Object, VARIANT_BOOL IsKeyPoint, VARIANT_BOOL UseVirtualEdge, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x000b\x000b\x0005\x0005\x0005", Object, IsKeyPoint, UseVirtualEdge, x, y, z);
}

#pragma implementation_key(2344)
inline HRESULT TGFrameworkSupport::AnnotInitData::ClearConnectElement ( ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2345)
inline HRESULT TGFrameworkSupport::AnnotInitData::ClearCreationData ( ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2346)
inline HRESULT TGFrameworkSupport::AnnotInitData::SetPlane ( IDispatch * Plane ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", Plane);
}

#pragma implementation_key(2347)
inline HRESULT TGFrameworkSupport::AnnotInitData::ClearPlane ( ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2348)
inline HRESULT TGFrameworkSupport::AnnotInitData::SetTerminatorElementEx ( IDispatch * Object, VARIANT_BOOL IsKeyPoint, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x000b\x0005\x0005\x0005", Object, IsKeyPoint, x, y, z);
}

#pragma implementation_key(2349)
inline HRESULT TGFrameworkSupport::AnnotInitData::SetConnectElementEx ( IDispatch * Object, VARIANT_BOOL IsKeyPoint, double x, double y, double z ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x000b\x0005\x0005\x0005", Object, IsKeyPoint, x, y, z);
}

#pragma implementation_key(2350)
inline HRESULT TGFrameworkSupport::AnnotInitData::SetFirstElement ( IDispatch * Object, VARIANT_BOOL IsKeyPoint, double x, double y, double z ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x000b\x0005\x0005\x0005", Object, IsKeyPoint, x, y, z);
}

#pragma implementation_key(2351)
inline HRESULT TGFrameworkSupport::AnnotInitData::ClearFirstElement ( ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2352)
inline HRESULT TGFrameworkSupport::AnnotInitData::SetSecondElement ( IDispatch * Object, VARIANT_BOOL IsKeyPoint, double x, double y, double z ) {
    return _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x000b\x0005\x0005\x0005", Object, IsKeyPoint, x, y, z);
}

#pragma implementation_key(2353)
inline HRESULT TGFrameworkSupport::AnnotInitData::ClearSecondElement ( ) {
    return _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2354)
inline HRESULT TGFrameworkSupport::AnnotInitData::SetThirdElement ( IDispatch * Object, VARIANT_BOOL IsKeyPoint, double x, double y, double z ) {
    return _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x000b\x0005\x0005\x0005", Object, IsKeyPoint, x, y, z);
}

#pragma implementation_key(2355)
inline HRESULT TGFrameworkSupport::AnnotInitData::ClearThirdElement ( ) {
    return _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// interface _ILeadersAuto wrapper method implementations
//

#pragma implementation_key(2356)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_ILeadersAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2357)
inline long TGFrameworkSupport::_ILeadersAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2358)
inline IDispatchPtr TGFrameworkSupport::_ILeadersAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2359)
inline TGFrameworkSupport::LeaderPtr TGFrameworkSupport::_ILeadersAuto::Item ( const _variant_t & Index ) {
    struct Leader * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return LeaderPtr(_result, false);
}

#pragma implementation_key(2360)
inline IUnknownPtr TGFrameworkSupport::_ILeadersAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2361)
inline void TGFrameworkSupport::_ILeadersAuto::PutPlane ( IDispatch * Plane ) {
    HRESULT _hr = put_Plane(Plane);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2362)
inline IDispatchPtr TGFrameworkSupport::_ILeadersAuto::GetPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Plane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2363)
inline void TGFrameworkSupport::_ILeadersAuto::PutStyle ( struct DimensionStyle * Style ) {
    HRESULT _hr = put_Style(Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2364)
inline TGFrameworkSupport::DimensionStylePtr TGFrameworkSupport::_ILeadersAuto::GetStyle ( ) {
    struct DimensionStyle * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionStylePtr(_result, false);
}

#pragma implementation_key(2365)
inline TGFrameworkSupport::LeaderPtr TGFrameworkSupport::_ILeadersAuto::Add ( double x1, double y1, double z1, double x2, double y2, double z2 ) {
    struct Leader * _result = 0;
    HRESULT _hr = raw_Add(x1, y1, z1, x2, y2, z2, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return LeaderPtr(_result, false);
}

#pragma implementation_key(2366)
inline TGFrameworkSupport::LeaderPtr TGFrameworkSupport::_ILeadersAuto::AddByConnect ( IDispatch * ConnectObject, double x1, double y1, double z1, VARIANT_BOOL keyPoint, double x2, double y2, double z2 ) {
    struct Leader * _result = 0;
    HRESULT _hr = raw_AddByConnect(ConnectObject, x1, y1, z1, keyPoint, x2, y2, z2, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return LeaderPtr(_result, false);
}

#pragma implementation_key(2367)
inline TGFrameworkSupport::LeaderPtr TGFrameworkSupport::_ILeadersAuto::AddByTerminator ( IDispatch * TerminatorObject, double x1, double y1, double z1, VARIANT_BOOL keyPoint1, double x2, double y2, double z2 ) {
    struct Leader * _result = 0;
    HRESULT _hr = raw_AddByTerminator(TerminatorObject, x1, y1, z1, keyPoint1, x2, y2, z2, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return LeaderPtr(_result, false);
}

#pragma implementation_key(2368)
inline TGFrameworkSupport::LeaderPtr TGFrameworkSupport::_ILeadersAuto::AddByTerminatorConnect ( IDispatch * TerminatorObject, double x1, double y1, double z1, VARIANT_BOOL keyPoint1, IDispatch * ConnectObject, double x2, double y2, double z2, VARIANT_BOOL keyPoint2 ) {
    struct Leader * _result = 0;
    HRESULT _hr = raw_AddByTerminatorConnect(TerminatorObject, x1, y1, z1, keyPoint1, ConnectObject, x2, y2, z2, keyPoint2, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return LeaderPtr(_result, false);
}

#pragma implementation_key(2369)
inline HRESULT TGFrameworkSupport::_ILeadersAuto::ClearPlane ( ) {
    HRESULT _hr = raw_ClearPlane();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2370)
inline HRESULT TGFrameworkSupport::_ILeadersAuto::ClearStyle ( ) {
    HRESULT _hr = raw_ClearStyle();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2371)
inline TGFrameworkSupport::AnnotInitDataPtr TGFrameworkSupport::_ILeadersAuto::GetAnnotInitData ( ) {
    struct AnnotInitData * _result = 0;
    HRESULT _hr = get_AnnotInitData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AnnotInitDataPtr(_result, false);
}

#pragma implementation_key(2372)
inline TGFrameworkSupport::LeaderPtr TGFrameworkSupport::_ILeadersAuto::AddLeader ( struct AnnotInitData * AnnotInitData, double x, double y, double z ) {
    struct Leader * _result = 0;
    HRESULT _hr = raw_AddLeader(AnnotInitData, x, y, z, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return LeaderPtr(_result, false);
}

//
// interface _IAnnotInitDataAuto wrapper method implementations
//

#pragma implementation_key(2373)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IAnnotInitDataAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2374)
inline HRESULT TGFrameworkSupport::_IAnnotInitDataAuto::SetTerminatorElement ( IDispatch * Object, VARIANT_BOOL IsKeyPoint, VARIANT_BOOL UseVirtualEdge, double x, double y, double z ) {
    HRESULT _hr = raw_SetTerminatorElement(Object, IsKeyPoint, UseVirtualEdge, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2375)
inline HRESULT TGFrameworkSupport::_IAnnotInitDataAuto::ClearTerminatorElement ( ) {
    HRESULT _hr = raw_ClearTerminatorElement();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2376)
inline HRESULT TGFrameworkSupport::_IAnnotInitDataAuto::SetConnectElement ( IDispatch * Object, VARIANT_BOOL IsKeyPoint, VARIANT_BOOL UseVirtualEdge, double x, double y, double z ) {
    HRESULT _hr = raw_SetConnectElement(Object, IsKeyPoint, UseVirtualEdge, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2377)
inline HRESULT TGFrameworkSupport::_IAnnotInitDataAuto::ClearConnectElement ( ) {
    HRESULT _hr = raw_ClearConnectElement();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2378)
inline HRESULT TGFrameworkSupport::_IAnnotInitDataAuto::ClearCreationData ( ) {
    HRESULT _hr = raw_ClearCreationData();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2379)
inline HRESULT TGFrameworkSupport::_IAnnotInitDataAuto::SetPlane ( IDispatch * Plane ) {
    HRESULT _hr = raw_SetPlane(Plane);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2380)
inline HRESULT TGFrameworkSupport::_IAnnotInitDataAuto::ClearPlane ( ) {
    HRESULT _hr = raw_ClearPlane();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2381)
inline HRESULT TGFrameworkSupport::_IAnnotInitDataAuto::SetTerminatorElementEx ( IDispatch * Object, VARIANT_BOOL IsKeyPoint, double x, double y, double z ) {
    HRESULT _hr = raw_SetTerminatorElementEx(Object, IsKeyPoint, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2382)
inline HRESULT TGFrameworkSupport::_IAnnotInitDataAuto::SetConnectElementEx ( IDispatch * Object, VARIANT_BOOL IsKeyPoint, double x, double y, double z ) {
    HRESULT _hr = raw_SetConnectElementEx(Object, IsKeyPoint, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2383)
inline HRESULT TGFrameworkSupport::_IAnnotInitDataAuto::SetFirstElement ( IDispatch * Object, VARIANT_BOOL IsKeyPoint, double x, double y, double z ) {
    HRESULT _hr = raw_SetFirstElement(Object, IsKeyPoint, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2384)
inline HRESULT TGFrameworkSupport::_IAnnotInitDataAuto::ClearFirstElement ( ) {
    HRESULT _hr = raw_ClearFirstElement();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2385)
inline HRESULT TGFrameworkSupport::_IAnnotInitDataAuto::SetSecondElement ( IDispatch * Object, VARIANT_BOOL IsKeyPoint, double x, double y, double z ) {
    HRESULT _hr = raw_SetSecondElement(Object, IsKeyPoint, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2386)
inline HRESULT TGFrameworkSupport::_IAnnotInitDataAuto::ClearSecondElement ( ) {
    HRESULT _hr = raw_ClearSecondElement();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2387)
inline HRESULT TGFrameworkSupport::_IAnnotInitDataAuto::SetThirdElement ( IDispatch * Object, VARIANT_BOOL IsKeyPoint, double x, double y, double z ) {
    HRESULT _hr = raw_SetThirdElement(Object, IsKeyPoint, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2388)
inline HRESULT TGFrameworkSupport::_IAnnotInitDataAuto::ClearThirdElement ( ) {
    HRESULT _hr = raw_ClearThirdElement();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface Balloons wrapper method implementations
//

#pragma implementation_key(2389)
inline TGFramework::ApplicationPtr TGFrameworkSupport::Balloons::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2390)
inline long TGFrameworkSupport::Balloons::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2391)
inline IDispatchPtr TGFrameworkSupport::Balloons::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2392)
inline TGFrameworkSupport::BalloonPtr TGFrameworkSupport::Balloons::Item ( const _variant_t & Index ) {
    struct Balloon * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return BalloonPtr(_result, false);
}

#pragma implementation_key(2393)
inline void TGFrameworkSupport::Balloons::PutPlane ( IDispatch * _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(2394)
inline IDispatchPtr TGFrameworkSupport::Balloons::GetPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2395)
inline void TGFrameworkSupport::Balloons::PutStyle ( struct DimensionStyle * _arg1 ) {
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(2396)
inline TGFrameworkSupport::DimensionStylePtr TGFrameworkSupport::Balloons::GetStyle ( ) {
    struct DimensionStyle * _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DimensionStylePtr(_result, false);
}

#pragma implementation_key(2397)
inline TGFrameworkSupport::BalloonPtr TGFrameworkSupport::Balloons::Add ( double x1, double y1, double z1 ) {
    struct Balloon * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005", x1, y1, z1);
    return BalloonPtr(_result, false);
}

#pragma implementation_key(2398)
inline TGFrameworkSupport::BalloonPtr TGFrameworkSupport::Balloons::AddByTerminator ( IDispatch * TerminatorObject, double x1, double y1, double z1, VARIANT_BOOL keyPoint1 ) {
    struct Balloon * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x000b", TerminatorObject, x1, y1, z1, keyPoint1);
    return BalloonPtr(_result, false);
}

#pragma implementation_key(2399)
inline HRESULT TGFrameworkSupport::Balloons::ClearPlane ( ) {
    return _com_dispatch_method(this, 0x78, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2400)
inline HRESULT TGFrameworkSupport::Balloons::ClearStyle ( ) {
    return _com_dispatch_method(this, 0x79, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2401)
inline TGFrameworkSupport::AnnotInitDataPtr TGFrameworkSupport::Balloons::GetAnnotInitData ( ) {
    struct AnnotInitData * _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AnnotInitDataPtr(_result, false);
}

#pragma implementation_key(2402)
inline TGFrameworkSupport::BalloonPtr TGFrameworkSupport::Balloons::AddBalloon ( struct AnnotInitData * AnnotInitData ) {
    struct Balloon * _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", AnnotInitData);
    return BalloonPtr(_result, false);
}

//
// dispinterface Balloon wrapper method implementations
//

#pragma implementation_key(2403)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::Balloon::GetStyle ( ) {
    struct DimStyle * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DimStylePtr(_result, false);
}

#pragma implementation_key(2404)
inline void TGFrameworkSupport::Balloon::PutBalloonType ( enum DimBalloonTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2405)
inline enum TGFrameworkSupport::DimBalloonTypeConstants TGFrameworkSupport::Balloon::GetBalloonType ( ) {
    enum DimBalloonTypeConstants _result;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2406)
inline void TGFrameworkSupport::Balloon::PutBalloonSides ( int _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2407)
inline int TGFrameworkSupport::Balloon::GetBalloonSides ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2408)
inline void TGFrameworkSupport::Balloon::PutBalloonDirection ( enum DimBalloonDirTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2409)
inline enum TGFrameworkSupport::DimBalloonDirTypeConstants TGFrameworkSupport::Balloon::GetBalloonDirection ( ) {
    enum DimBalloonDirTypeConstants _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2410)
inline void TGFrameworkSupport::Balloon::PutBalloonSize ( double _arg1 ) {
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2411)
inline double TGFrameworkSupport::Balloon::GetBalloonSize ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2412)
inline void TGFrameworkSupport::Balloon::PutBalloonText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2413)
inline _bstr_t TGFrameworkSupport::Balloon::GetBalloonText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2414)
inline void TGFrameworkSupport::Balloon::PutDisplayByItemNumber ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2415)
inline VARIANT_BOOL TGFrameworkSupport::Balloon::GetDisplayByItemNumber ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2416)
inline HRESULT TGFrameworkSupport::Balloon::SetTerminator ( IDispatch * TerminatorObj, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    return _com_dispatch_method(this, 0x19, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0005\x0005\x0005\x000b", TerminatorObj, x, y, z, keyPoint);
}

#pragma implementation_key(2417)
inline HRESULT TGFrameworkSupport::Balloon::GetTerminator ( IDispatch * * TerminatorObj, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    return _com_dispatch_method(this, 0x1b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4005\x4005\x4005\x400b", TerminatorObj, x, y, z, keyPoint);
}

#pragma implementation_key(2418)
inline HRESULT TGFrameworkSupport::Balloon::SetFreeSpacePoint ( double x, double y, double z ) {
    return _com_dispatch_method(this, 0x1a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", x, y, z);
}

#pragma implementation_key(2419)
inline HRESULT TGFrameworkSupport::Balloon::GetFreeSpacePoint ( double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0x1c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005", x, y, z);
}

#pragma implementation_key(2420)
inline IDispatchPtr TGFrameworkSupport::Balloon::GetPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2421)
inline HRESULT TGFrameworkSupport::Balloon::SetItemNumber ( long ulItemNumber ) {
    return _com_dispatch_method(this, 0x1e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", ulItemNumber);
}

#pragma implementation_key(2422)
inline HRESULT TGFrameworkSupport::Balloon::GetItemNumber ( long * pulItemNumber ) {
    return _com_dispatch_method(this, 0x1f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003", pulItemNumber);
}

#pragma implementation_key(2423)
inline void TGFrameworkSupport::Balloon::PutCallout ( long _arg1 ) {
    _com_dispatch_method(this, 0x20, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2424)
inline long TGFrameworkSupport::Balloon::GetCallout ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x20, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2425)
inline TGFramework::ApplicationPtr TGFrameworkSupport::Balloon::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2426)
inline long TGFrameworkSupport::Balloon::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1066, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2427)
inline _bstr_t TGFrameworkSupport::Balloon::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1067, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2428)
inline IDispatchPtr TGFrameworkSupport::Balloon::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1068, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2429)
inline long TGFrameworkSupport::Balloon::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1069, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2430)
inline long TGFrameworkSupport::Balloon::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x106b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2431)
inline _bstr_t TGFrameworkSupport::Balloon::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x106c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2432)
inline IDispatchPtr TGFrameworkSupport::Balloon::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x106d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2433)
inline HRESULT TGFrameworkSupport::Balloon::Copy ( ) {
    return _com_dispatch_method(this, 0x6001100a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2434)
inline HRESULT TGFrameworkSupport::Balloon::Cut ( ) {
    return _com_dispatch_method(this, 0x6001100b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2435)
inline HRESULT TGFrameworkSupport::Balloon::Delete ( ) {
    return _com_dispatch_method(this, 0x6001100c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2436)
inline HRESULT TGFrameworkSupport::Balloon::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    return _com_dispatch_method(this, 0x6001100d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", XFrom, YFrom, XTo, YTo);
}

#pragma implementation_key(2437)
inline HRESULT TGFrameworkSupport::Balloon::Scale ( double Factor ) {
    return _com_dispatch_method(this, 0x6001100e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Factor);
}

#pragma implementation_key(2438)
inline HRESULT TGFrameworkSupport::Balloon::Rotate ( double Angle, double x, double y ) {
    return _com_dispatch_method(this, 0x6001100f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", Angle, x, y);
}

#pragma implementation_key(2439)
inline HRESULT TGFrameworkSupport::Balloon::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60011011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(2440)
inline IDispatchPtr TGFrameworkSupport::Balloon::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60011012, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &XDistance, &YDistance);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2441)
inline IDispatchPtr TGFrameworkSupport::Balloon::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60011013, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x080c", x1, y1, x2, y2, &BooleanCopyFlag);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2442)
inline HRESULT TGFrameworkSupport::Balloon::BringToFront ( ) {
    return _com_dispatch_method(this, 0x60011014, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2443)
inline HRESULT TGFrameworkSupport::Balloon::BringForward ( ) {
    return _com_dispatch_method(this, 0x60011015, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2444)
inline HRESULT TGFrameworkSupport::Balloon::SendToBack ( ) {
    return _com_dispatch_method(this, 0x60011016, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2445)
inline HRESULT TGFrameworkSupport::Balloon::SendBackward ( ) {
    return _com_dispatch_method(this, 0x60011017, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2446)
inline HRESULT TGFrameworkSupport::Balloon::Select ( ) {
    return _com_dispatch_method(this, 0x60011018, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2447)
inline double TGFrameworkSupport::Balloon::GetBreakLineDistance ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3004, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2448)
inline void TGFrameworkSupport::Balloon::PutBreakLineDistance ( double _arg1 ) {
    _com_dispatch_method(this, 0x3004, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2449)
inline VARIANT_BOOL TGFrameworkSupport::Balloon::GetBreakLine ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3005, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2450)
inline void TGFrameworkSupport::Balloon::PutBreakLine ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3005, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2451)
inline VARIANT_BOOL TGFrameworkSupport::Balloon::GetBreakLineDirection ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3006, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2452)
inline void TGFrameworkSupport::Balloon::PutBreakLineDirection ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3006, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2453)
inline VARIANT_BOOL TGFrameworkSupport::Balloon::GetLeader ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3007, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2454)
inline void TGFrameworkSupport::Balloon::PutLeader ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3007, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2455)
inline long TGFrameworkSupport::Balloon::GetVertexCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3003, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2456)
inline HRESULT TGFrameworkSupport::Balloon::GetVertices ( long * VertexCount, SAFEARRAY * * Vertices ) {
    return _com_dispatch_method(this, 0x60013009, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6005", VertexCount, Vertices);
}

#pragma implementation_key(2457)
inline HRESULT TGFrameworkSupport::Balloon::SetVertices ( long VertexCount, SAFEARRAY * * Vertices ) {
    return _com_dispatch_method(this, 0x6001300a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6005", VertexCount, Vertices);
}

#pragma implementation_key(2458)
inline HRESULT TGFrameworkSupport::Balloon::GetVertex ( long Index, double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0x6001300b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005", Index, x, y, z);
}

#pragma implementation_key(2459)
inline HRESULT TGFrameworkSupport::Balloon::SetVertex ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x6001300c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(2460)
inline HRESULT TGFrameworkSupport::Balloon::InsertVertex ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x6001300d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(2461)
inline HRESULT TGFrameworkSupport::Balloon::AddVertex ( double x, double y, double z ) {
    return _com_dispatch_method(this, 0x6001300e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", x, y, z);
}

#pragma implementation_key(2462)
inline HRESULT TGFrameworkSupport::Balloon::RemoveVertex ( long Index ) {
    return _com_dispatch_method(this, 0x6001300f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Index);
}

#pragma implementation_key(2463)
inline long TGFrameworkSupport::Balloon::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2464)
inline HRESULT TGFrameworkSupport::Balloon::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x4002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(2465)
inline HRESULT TGFrameworkSupport::Balloon::SetKeyPoint ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x4003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(2466)
inline void TGFrameworkSupport::Balloon::PutBalloonTextLower ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x21, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2467)
inline _bstr_t TGFrameworkSupport::Balloon::GetBalloonTextLower ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x21, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2468)
inline void TGFrameworkSupport::Balloon::PutBalloonTextPrefix ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x22, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2469)
inline _bstr_t TGFrameworkSupport::Balloon::GetBalloonTextPrefix ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x22, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2470)
inline void TGFrameworkSupport::Balloon::PutBalloonTextSuffix ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x23, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2471)
inline _bstr_t TGFrameworkSupport::Balloon::GetBalloonTextSuffix ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x23, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2472)
inline void TGFrameworkSupport::Balloon::PutLinkToPartsList ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x24, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2473)
inline VARIANT_BOOL TGFrameworkSupport::Balloon::GetLinkToPartsList ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x24, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2474)
inline void TGFrameworkSupport::Balloon::PutDisplayItemCount ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x25, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2475)
inline VARIANT_BOOL TGFrameworkSupport::Balloon::GetDisplayItemCount ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x25, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2476)
inline double TGFrameworkSupport::Balloon::GetRotationAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3008, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2477)
inline void TGFrameworkSupport::Balloon::PutRotationAngle ( double _arg1 ) {
    _com_dispatch_method(this, 0x3008, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2478)
inline double TGFrameworkSupport::Balloon::GetTextScale ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3009, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2479)
inline void TGFrameworkSupport::Balloon::PutTextScale ( double _arg1 ) {
    _com_dispatch_method(this, 0x3009, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2480)
inline void TGFrameworkSupport::Balloon::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x26, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2481)
inline _bstr_t TGFrameworkSupport::Balloon::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x26, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2482)
inline _bstr_t TGFrameworkSupport::Balloon::GetBalloonDisplayedText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x27, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2483)
inline _bstr_t TGFrameworkSupport::Balloon::GetBalloonDisplayedTextLower ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x28, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2484)
inline _bstr_t TGFrameworkSupport::Balloon::GetBalloonDisplayedTextPrefix ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x29, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2485)
inline _bstr_t TGFrameworkSupport::Balloon::GetBalloonDisplayedTextSuffix ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x2a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2486)
inline IDispatchPtr TGFrameworkSupport::Balloon::GetPMIPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2487)
inline double TGFrameworkSupport::Balloon::GetPMITrackDistance ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x2c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2488)
inline void TGFrameworkSupport::Balloon::PutPMITrackDistance ( double _arg1 ) {
    _com_dispatch_method(this, 0x2c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2489)
inline void TGFrameworkSupport::Balloon::PutCalloutAllAround ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x2d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2490)
inline VARIANT_BOOL TGFrameworkSupport::Balloon::GetCalloutAllAround ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2491)
inline void TGFrameworkSupport::Balloon::PutHidePMI ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x2e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2492)
inline VARIANT_BOOL TGFrameworkSupport::Balloon::GetHidePMI ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2493)
inline HRESULT TGFrameworkSupport::Balloon::AddFSStackBalloon ( enum DimBalloonDirTypeConstants Direction ) {
    return _com_dispatch_method(this, 0x2f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Direction);
}

#pragma implementation_key(2494)
inline HRESULT TGFrameworkSupport::Balloon::RemoveFSStackBalloon ( ) {
    return _com_dispatch_method(this, 0x30, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2495)
inline HRESULT TGFrameworkSupport::Balloon::BalloonHorizontalAlignment ( enum TextHorizontalAlignmentConstants Alignment ) {
    return _com_dispatch_method(this, 0x31, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Alignment);
}

#pragma implementation_key(2496)
inline void TGFrameworkSupport::Balloon::PutCalloutAllOver ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x32, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2497)
inline VARIANT_BOOL TGFrameworkSupport::Balloon::GetCalloutAllOver ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x32, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2498)
inline void TGFrameworkSupport::Balloon::PutCalloutBorder ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x33, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2499)
inline VARIANT_BOOL TGFrameworkSupport::Balloon::GetCalloutBorder ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x33, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2500)
inline void TGFrameworkSupport::Balloon::PutCalloutBorderHorizontalGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x34, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2501)
inline double TGFrameworkSupport::Balloon::GetCalloutBorderHorizontalGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x34, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2502)
inline void TGFrameworkSupport::Balloon::PutCalloutBorderVerticalGap ( double _arg1 ) {
    _com_dispatch_method(this, 0x35, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2503)
inline double TGFrameworkSupport::Balloon::GetCalloutBorderVerticalGap ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x35, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2504)
inline void TGFrameworkSupport::Balloon::PutCalloutTextWidth ( double _arg1 ) {
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2505)
inline double TGFrameworkSupport::Balloon::GetCalloutTextWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2506)
inline void TGFrameworkSupport::Balloon::PutCalloutTextAspectRatio ( double _arg1 ) {
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2507)
inline double TGFrameworkSupport::Balloon::GetCalloutTextAspectRatio ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2508)
inline void TGFrameworkSupport::Balloon::PutCalloutTextWidthMode ( enum DimCalloutTextWidthModeConstants _arg1 ) {
    _com_dispatch_method(this, 0x38, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2509)
inline enum TGFrameworkSupport::DimCalloutTextWidthModeConstants TGFrameworkSupport::Balloon::GetCalloutTextWidthMode ( ) {
    enum DimCalloutTextWidthModeConstants _result;
    _com_dispatch_method(this, 0x38, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2510)
inline void TGFrameworkSupport::Balloon::PutCalloutHorizontalAlignment ( enum TextJustificationConstants _arg1 ) {
    _com_dispatch_method(this, 0x39, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2511)
inline enum TGFrameworkSupport::TextJustificationConstants TGFrameworkSupport::Balloon::GetCalloutHorizontalAlignment ( ) {
    enum TextJustificationConstants _result;
    _com_dispatch_method(this, 0x39, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2512)
inline TGFrameworkSupport::DisplayDataPtr TGFrameworkSupport::Balloon::GetDisplayData ( ) {
    struct DisplayData * _result = 0;
    _com_dispatch_method(this, 0x3a, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return DisplayDataPtr(_result, false);
}

#pragma implementation_key(2513)
inline void TGFrameworkSupport::Balloon::PutCalloutLeaderTextConnectionPoint ( enum DimCalloutLeaderTextConnectionPointConstants _arg1 ) {
    _com_dispatch_method(this, 0x3b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2514)
inline enum TGFrameworkSupport::DimCalloutLeaderTextConnectionPointConstants TGFrameworkSupport::Balloon::GetCalloutLeaderTextConnectionPoint ( ) {
    enum DimCalloutLeaderTextConnectionPointConstants _result;
    _com_dispatch_method(this, 0x3b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2515)
inline void TGFrameworkSupport::Balloon::PutBalloonLeaderTextConnectionPoint ( int _arg1 ) {
    _com_dispatch_method(this, 0x3c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2516)
inline int TGFrameworkSupport::Balloon::GetBalloonLeaderTextConnectionPoint ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x3c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2517)
inline void TGFrameworkSupport::Balloon::PutCalloutBalloonBreaklineDirection ( enum DimCalloutBalloonBreaklineDirectionConstants _arg1 ) {
    _com_dispatch_method(this, 0x3d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2518)
inline enum TGFrameworkSupport::DimCalloutBalloonBreaklineDirectionConstants TGFrameworkSupport::Balloon::GetCalloutBalloonBreaklineDirection ( ) {
    enum DimCalloutBalloonBreaklineDirectionConstants _result;
    _com_dispatch_method(this, 0x3d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2519)
inline void TGFrameworkSupport::Balloon::PutFSBalloonOverridePrefixText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2520)
inline _bstr_t TGFrameworkSupport::Balloon::GetFSBalloonOverridePrefixText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x3e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2521)
inline void TGFrameworkSupport::Balloon::PutFSBalloonOverrideSuffixText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2522)
inline _bstr_t TGFrameworkSupport::Balloon::GetFSBalloonOverrideSuffixText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x3f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2523)
inline HRESULT TGFrameworkSupport::Balloon::FSBalloonClearOverrides ( ) {
    return _com_dispatch_method(this, 0x40, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2524)
inline HRESULT TGFrameworkSupport::Balloon::PromoteToCurrentVersion ( ) {
    return _com_dispatch_method(this, 0x41, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2525)
inline HRESULT TGFrameworkSupport::Balloon::SetAlignmentShape ( IDispatch * AlignmentShapeObj, double x, double y ) {
    return _com_dispatch_method(this, 0x42, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0005\x0005", AlignmentShapeObj, x, y);
}

#pragma implementation_key(2526)
inline HRESULT TGFrameworkSupport::Balloon::GetAlignmentShape ( IDispatch * * AlignmentShapeObj, double * x, double * y ) {
    return _com_dispatch_method(this, 0x43, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4005\x4005", AlignmentShapeObj, x, y);
}

#pragma implementation_key(2527)
inline void TGFrameworkSupport::Balloon::PutCalloutParallel ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x44, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2528)
inline VARIANT_BOOL TGFrameworkSupport::Balloon::GetCalloutParallel ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x44, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2529)
inline void TGFrameworkSupport::Balloon::PutPMIName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x45, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2530)
inline _bstr_t TGFrameworkSupport::Balloon::GetPMIName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x45, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2531)
inline HRESULT TGFrameworkSupport::Balloon::TransformToModelCoordinates ( double InputX, double InputY, double InputZ, double * ModelX, double * ModelY, double * ModelZ ) {
    return _com_dispatch_method(this, 0x46, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x4005\x4005\x4005", InputX, InputY, InputZ, ModelX, ModelY, ModelZ);
}

#pragma implementation_key(2532)
inline VARIANT_BOOL TGFrameworkSupport::Balloon::GetIsTerminatorAttachedToEntity ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x47, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2533)
inline HRESULT TGFrameworkSupport::Balloon::GetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    return _com_dispatch_method(this, 0x49, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009", ReferencedGeometries);
}

#pragma implementation_key(2534)
inline HRESULT TGFrameworkSupport::Balloon::SetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    return _com_dispatch_method(this, 0x48, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009", ReferencedGeometries);
}

#pragma implementation_key(2535)
inline void TGFrameworkSupport::Balloon::PutLinkToFOAPartsList ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2536)
inline VARIANT_BOOL TGFrameworkSupport::Balloon::GetLinkToFOAPartsList ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2537)
inline HRESULT TGFrameworkSupport::Balloon::GetReferencedObjectInfo ( SAFEARRAY * * ReferencedObjects, SAFEARRAY * * ReferencedObjectTypes ) {
    return _com_dispatch_method(this, 0x4b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009\x6003", ReferencedObjects, ReferencedObjectTypes);
}

#pragma implementation_key(2538)
inline enum TGFrameworkSupport::TGBalloonReattachStatusConstants TGFrameworkSupport::Balloon::TGReattachToDrawingView ( IDispatch * DrawingView ) {
    enum TGBalloonReattachStatusConstants _result;
    _com_dispatch_method(this, 0x4c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0009", DrawingView);
    return _result;
}

#pragma implementation_key(2539)
inline IDispatchPtr TGFrameworkSupport::Balloon::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2540)
inline VARIANT_BOOL TGFrameworkSupport::Balloon::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _IBalloonsAuto wrapper method implementations
//

#pragma implementation_key(2541)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IBalloonsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2542)
inline long TGFrameworkSupport::_IBalloonsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2543)
inline IDispatchPtr TGFrameworkSupport::_IBalloonsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2544)
inline TGFrameworkSupport::BalloonPtr TGFrameworkSupport::_IBalloonsAuto::Item ( const _variant_t & Index ) {
    struct Balloon * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BalloonPtr(_result, false);
}

#pragma implementation_key(2545)
inline IUnknownPtr TGFrameworkSupport::_IBalloonsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2546)
inline void TGFrameworkSupport::_IBalloonsAuto::PutPlane ( IDispatch * Plane ) {
    HRESULT _hr = put_Plane(Plane);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2547)
inline IDispatchPtr TGFrameworkSupport::_IBalloonsAuto::GetPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Plane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2548)
inline void TGFrameworkSupport::_IBalloonsAuto::PutStyle ( struct DimensionStyle * Style ) {
    HRESULT _hr = put_Style(Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2549)
inline TGFrameworkSupport::DimensionStylePtr TGFrameworkSupport::_IBalloonsAuto::GetStyle ( ) {
    struct DimensionStyle * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionStylePtr(_result, false);
}

#pragma implementation_key(2550)
inline TGFrameworkSupport::BalloonPtr TGFrameworkSupport::_IBalloonsAuto::Add ( double x1, double y1, double z1 ) {
    struct Balloon * _result = 0;
    HRESULT _hr = raw_Add(x1, y1, z1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BalloonPtr(_result, false);
}

#pragma implementation_key(2551)
inline TGFrameworkSupport::BalloonPtr TGFrameworkSupport::_IBalloonsAuto::AddByTerminator ( IDispatch * TerminatorObject, double x1, double y1, double z1, VARIANT_BOOL keyPoint1 ) {
    struct Balloon * _result = 0;
    HRESULT _hr = raw_AddByTerminator(TerminatorObject, x1, y1, z1, keyPoint1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BalloonPtr(_result, false);
}

#pragma implementation_key(2552)
inline HRESULT TGFrameworkSupport::_IBalloonsAuto::ClearPlane ( ) {
    HRESULT _hr = raw_ClearPlane();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2553)
inline HRESULT TGFrameworkSupport::_IBalloonsAuto::ClearStyle ( ) {
    HRESULT _hr = raw_ClearStyle();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2554)
inline TGFrameworkSupport::AnnotInitDataPtr TGFrameworkSupport::_IBalloonsAuto::GetAnnotInitData ( ) {
    struct AnnotInitData * _result = 0;
    HRESULT _hr = get_AnnotInitData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AnnotInitDataPtr(_result, false);
}

#pragma implementation_key(2555)
inline TGFrameworkSupport::BalloonPtr TGFrameworkSupport::_IBalloonsAuto::AddBalloon ( struct AnnotInitData * AnnotInitData ) {
    struct Balloon * _result = 0;
    HRESULT _hr = raw_AddBalloon(AnnotInitData, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BalloonPtr(_result, false);
}

//
// interface _IBalloonAuto wrapper method implementations
//

#pragma implementation_key(2556)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::_IBalloonAuto::GetStyle ( ) {
    struct DimStyle * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimStylePtr(_result, false);
}

#pragma implementation_key(2557)
inline void TGFrameworkSupport::_IBalloonAuto::PutBalloonType ( enum DimBalloonTypeConstants Type ) {
    HRESULT _hr = put_BalloonType(Type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2558)
inline enum TGFrameworkSupport::DimBalloonTypeConstants TGFrameworkSupport::_IBalloonAuto::GetBalloonType ( ) {
    enum DimBalloonTypeConstants _result;
    HRESULT _hr = get_BalloonType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2559)
inline void TGFrameworkSupport::_IBalloonAuto::PutBalloonSides ( int Sides ) {
    HRESULT _hr = put_BalloonSides(Sides);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2560)
inline int TGFrameworkSupport::_IBalloonAuto::GetBalloonSides ( ) {
    int _result = 0;
    HRESULT _hr = get_BalloonSides(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2561)
inline void TGFrameworkSupport::_IBalloonAuto::PutBalloonDirection ( enum DimBalloonDirTypeConstants Direction ) {
    HRESULT _hr = put_BalloonDirection(Direction);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2562)
inline enum TGFrameworkSupport::DimBalloonDirTypeConstants TGFrameworkSupport::_IBalloonAuto::GetBalloonDirection ( ) {
    enum DimBalloonDirTypeConstants _result;
    HRESULT _hr = get_BalloonDirection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2563)
inline void TGFrameworkSupport::_IBalloonAuto::PutBalloonSize ( double Size ) {
    HRESULT _hr = put_BalloonSize(Size);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2564)
inline double TGFrameworkSupport::_IBalloonAuto::GetBalloonSize ( ) {
    double _result = 0;
    HRESULT _hr = get_BalloonSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2565)
inline void TGFrameworkSupport::_IBalloonAuto::PutBalloonText ( _bstr_t Text ) {
    HRESULT _hr = put_BalloonText(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2566)
inline _bstr_t TGFrameworkSupport::_IBalloonAuto::GetBalloonText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BalloonText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2567)
inline void TGFrameworkSupport::_IBalloonAuto::PutDisplayByItemNumber ( VARIANT_BOOL pbDisplayByItemNumber ) {
    HRESULT _hr = put_DisplayByItemNumber(pbDisplayByItemNumber);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2568)
inline VARIANT_BOOL TGFrameworkSupport::_IBalloonAuto::GetDisplayByItemNumber ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayByItemNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2569)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::SetTerminator ( IDispatch * TerminatorObj, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    HRESULT _hr = raw_SetTerminator(TerminatorObj, x, y, z, keyPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2570)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::GetTerminator ( IDispatch * * TerminatorObj, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    HRESULT _hr = raw_GetTerminator(TerminatorObj, x, y, z, keyPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2571)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::SetFreeSpacePoint ( double x, double y, double z ) {
    HRESULT _hr = raw_SetFreeSpacePoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2572)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::GetFreeSpacePoint ( double * x, double * y, double * z ) {
    HRESULT _hr = raw_GetFreeSpacePoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2573)
inline IDispatchPtr TGFrameworkSupport::_IBalloonAuto::GetPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Plane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2574)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::SetItemNumber ( long ulItemNumber ) {
    HRESULT _hr = raw_SetItemNumber(ulItemNumber);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2575)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::GetItemNumber ( long * pulItemNumber ) {
    HRESULT _hr = raw_GetItemNumber(pulItemNumber);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2576)
inline void TGFrameworkSupport::_IBalloonAuto::PutCallout ( long pbCallout ) {
    HRESULT _hr = put_Callout(pbCallout);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2577)
inline long TGFrameworkSupport::_IBalloonAuto::GetCallout ( ) {
    long _result = 0;
    HRESULT _hr = get_Callout(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2578)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IBalloonAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2579)
inline long TGFrameworkSupport::_IBalloonAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2580)
inline _bstr_t TGFrameworkSupport::_IBalloonAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2581)
inline IDispatchPtr TGFrameworkSupport::_IBalloonAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2582)
inline long TGFrameworkSupport::_IBalloonAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2583)
inline long TGFrameworkSupport::_IBalloonAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2584)
inline _bstr_t TGFrameworkSupport::_IBalloonAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2585)
inline IDispatchPtr TGFrameworkSupport::_IBalloonAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2586)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2587)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2588)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2589)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    HRESULT _hr = raw_Move(XFrom, YFrom, XTo, YTo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2590)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::Scale ( double Factor ) {
    HRESULT _hr = raw_Scale(Factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2591)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::Rotate ( double Angle, double x, double y ) {
    HRESULT _hr = raw_Rotate(Angle, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2592)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2593)
inline IDispatchPtr TGFrameworkSupport::_IBalloonAuto::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Duplicate(XDistance, YDistance, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2594)
inline IDispatchPtr TGFrameworkSupport::_IBalloonAuto::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Mirror(x1, y1, x2, y2, BooleanCopyFlag, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2595)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2596)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2597)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2598)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2599)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2600)
inline double TGFrameworkSupport::_IBalloonAuto::GetBreakLineDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_BreakLineDistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2601)
inline void TGFrameworkSupport::_IBalloonAuto::PutBreakLineDistance ( double Distance ) {
    HRESULT _hr = put_BreakLineDistance(Distance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2602)
inline VARIANT_BOOL TGFrameworkSupport::_IBalloonAuto::GetBreakLine ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BreakLine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2603)
inline void TGFrameworkSupport::_IBalloonAuto::PutBreakLine ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_BreakLine(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2604)
inline VARIANT_BOOL TGFrameworkSupport::_IBalloonAuto::GetBreakLineDirection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BreakLineDirection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2605)
inline void TGFrameworkSupport::_IBalloonAuto::PutBreakLineDirection ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_BreakLineDirection(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2606)
inline VARIANT_BOOL TGFrameworkSupport::_IBalloonAuto::GetLeader ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Leader(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2607)
inline void TGFrameworkSupport::_IBalloonAuto::PutLeader ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_Leader(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2608)
inline long TGFrameworkSupport::_IBalloonAuto::GetVertexCount ( ) {
    long _result = 0;
    HRESULT _hr = get_VertexCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2609)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::GetVertices ( long * VertexCount, SAFEARRAY * * Vertices ) {
    HRESULT _hr = raw_GetVertices(VertexCount, Vertices);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2610)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::SetVertices ( long VertexCount, SAFEARRAY * * Vertices ) {
    HRESULT _hr = raw_SetVertices(VertexCount, Vertices);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2611)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::GetVertex ( long Index, double * x, double * y, double * z ) {
    HRESULT _hr = raw_GetVertex(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2612)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::SetVertex ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetVertex(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2613)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::InsertVertex ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_InsertVertex(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2614)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::AddVertex ( double x, double y, double z ) {
    HRESULT _hr = raw_AddVertex(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2615)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::RemoveVertex ( long Index ) {
    HRESULT _hr = raw_RemoveVertex(Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2616)
inline long TGFrameworkSupport::_IBalloonAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2617)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2618)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::SetKeyPoint ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetKeyPoint(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2619)
inline void TGFrameworkSupport::_IBalloonAuto::PutBalloonTextLower ( _bstr_t Text ) {
    HRESULT _hr = put_BalloonTextLower(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2620)
inline _bstr_t TGFrameworkSupport::_IBalloonAuto::GetBalloonTextLower ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BalloonTextLower(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2621)
inline void TGFrameworkSupport::_IBalloonAuto::PutBalloonTextPrefix ( _bstr_t Text ) {
    HRESULT _hr = put_BalloonTextPrefix(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2622)
inline _bstr_t TGFrameworkSupport::_IBalloonAuto::GetBalloonTextPrefix ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BalloonTextPrefix(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2623)
inline void TGFrameworkSupport::_IBalloonAuto::PutBalloonTextSuffix ( _bstr_t Text ) {
    HRESULT _hr = put_BalloonTextSuffix(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2624)
inline _bstr_t TGFrameworkSupport::_IBalloonAuto::GetBalloonTextSuffix ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BalloonTextSuffix(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2625)
inline void TGFrameworkSupport::_IBalloonAuto::PutLinkToPartsList ( VARIANT_BOOL pbLinkToPartsList ) {
    HRESULT _hr = put_LinkToPartsList(pbLinkToPartsList);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2626)
inline VARIANT_BOOL TGFrameworkSupport::_IBalloonAuto::GetLinkToPartsList ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_LinkToPartsList(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2627)
inline void TGFrameworkSupport::_IBalloonAuto::PutDisplayItemCount ( VARIANT_BOOL pbDisplayItemCount ) {
    HRESULT _hr = put_DisplayItemCount(pbDisplayItemCount);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2628)
inline VARIANT_BOOL TGFrameworkSupport::_IBalloonAuto::GetDisplayItemCount ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DisplayItemCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2629)
inline double TGFrameworkSupport::_IBalloonAuto::GetRotationAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_RotationAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2630)
inline void TGFrameworkSupport::_IBalloonAuto::PutRotationAngle ( double pdAngle ) {
    HRESULT _hr = put_RotationAngle(pdAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2631)
inline double TGFrameworkSupport::_IBalloonAuto::GetTextScale ( ) {
    double _result = 0;
    HRESULT _hr = get_TextScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2632)
inline void TGFrameworkSupport::_IBalloonAuto::PutTextScale ( double pdAngle ) {
    HRESULT _hr = put_TextScale(pdAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2633)
inline void TGFrameworkSupport::_IBalloonAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2634)
inline _bstr_t TGFrameworkSupport::_IBalloonAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2635)
inline _bstr_t TGFrameworkSupport::_IBalloonAuto::GetBalloonDisplayedText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BalloonDisplayedText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2636)
inline _bstr_t TGFrameworkSupport::_IBalloonAuto::GetBalloonDisplayedTextLower ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BalloonDisplayedTextLower(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2637)
inline _bstr_t TGFrameworkSupport::_IBalloonAuto::GetBalloonDisplayedTextPrefix ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BalloonDisplayedTextPrefix(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2638)
inline _bstr_t TGFrameworkSupport::_IBalloonAuto::GetBalloonDisplayedTextSuffix ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BalloonDisplayedTextSuffix(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2639)
inline IDispatchPtr TGFrameworkSupport::_IBalloonAuto::GetPMIPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_PMIPlane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2640)
inline double TGFrameworkSupport::_IBalloonAuto::GetPMITrackDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_PMITrackDistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2641)
inline void TGFrameworkSupport::_IBalloonAuto::PutPMITrackDistance ( double pdPMITrackDistance ) {
    HRESULT _hr = put_PMITrackDistance(pdPMITrackDistance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2642)
inline void TGFrameworkSupport::_IBalloonAuto::PutCalloutAllAround ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_CalloutAllAround(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2643)
inline VARIANT_BOOL TGFrameworkSupport::_IBalloonAuto::GetCalloutAllAround ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CalloutAllAround(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2644)
inline void TGFrameworkSupport::_IBalloonAuto::PutHidePMI ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_HidePMI(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2645)
inline VARIANT_BOOL TGFrameworkSupport::_IBalloonAuto::GetHidePMI ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HidePMI(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2646)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::AddFSStackBalloon ( enum DimBalloonDirTypeConstants Direction ) {
    HRESULT _hr = raw_AddFSStackBalloon(Direction);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2647)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::RemoveFSStackBalloon ( ) {
    HRESULT _hr = raw_RemoveFSStackBalloon();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2648)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::BalloonHorizontalAlignment ( enum TextHorizontalAlignmentConstants Alignment ) {
    HRESULT _hr = raw_BalloonHorizontalAlignment(Alignment);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2649)
inline void TGFrameworkSupport::_IBalloonAuto::PutCalloutAllOver ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_CalloutAllOver(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2650)
inline VARIANT_BOOL TGFrameworkSupport::_IBalloonAuto::GetCalloutAllOver ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CalloutAllOver(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2651)
inline void TGFrameworkSupport::_IBalloonAuto::PutCalloutBorder ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_CalloutBorder(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2652)
inline VARIANT_BOOL TGFrameworkSupport::_IBalloonAuto::GetCalloutBorder ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CalloutBorder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2653)
inline void TGFrameworkSupport::_IBalloonAuto::PutCalloutBorderHorizontalGap ( double Flag ) {
    HRESULT _hr = put_CalloutBorderHorizontalGap(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2654)
inline double TGFrameworkSupport::_IBalloonAuto::GetCalloutBorderHorizontalGap ( ) {
    double _result = 0;
    HRESULT _hr = get_CalloutBorderHorizontalGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2655)
inline void TGFrameworkSupport::_IBalloonAuto::PutCalloutBorderVerticalGap ( double Flag ) {
    HRESULT _hr = put_CalloutBorderVerticalGap(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2656)
inline double TGFrameworkSupport::_IBalloonAuto::GetCalloutBorderVerticalGap ( ) {
    double _result = 0;
    HRESULT _hr = get_CalloutBorderVerticalGap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2657)
inline void TGFrameworkSupport::_IBalloonAuto::PutCalloutTextWidth ( double Flag ) {
    HRESULT _hr = put_CalloutTextWidth(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2658)
inline double TGFrameworkSupport::_IBalloonAuto::GetCalloutTextWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_CalloutTextWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2659)
inline void TGFrameworkSupport::_IBalloonAuto::PutCalloutTextAspectRatio ( double Flag ) {
    HRESULT _hr = put_CalloutTextAspectRatio(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2660)
inline double TGFrameworkSupport::_IBalloonAuto::GetCalloutTextAspectRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_CalloutTextAspectRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2661)
inline void TGFrameworkSupport::_IBalloonAuto::PutCalloutTextWidthMode ( enum DimCalloutTextWidthModeConstants WidthMode ) {
    HRESULT _hr = put_CalloutTextWidthMode(WidthMode);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2662)
inline enum TGFrameworkSupport::DimCalloutTextWidthModeConstants TGFrameworkSupport::_IBalloonAuto::GetCalloutTextWidthMode ( ) {
    enum DimCalloutTextWidthModeConstants _result;
    HRESULT _hr = get_CalloutTextWidthMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2663)
inline void TGFrameworkSupport::_IBalloonAuto::PutCalloutHorizontalAlignment ( enum TextJustificationConstants Type ) {
    HRESULT _hr = put_CalloutHorizontalAlignment(Type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2664)
inline enum TGFrameworkSupport::TextJustificationConstants TGFrameworkSupport::_IBalloonAuto::GetCalloutHorizontalAlignment ( ) {
    enum TextJustificationConstants _result;
    HRESULT _hr = get_CalloutHorizontalAlignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2665)
inline TGFrameworkSupport::DisplayDataPtr TGFrameworkSupport::_IBalloonAuto::GetDisplayData ( ) {
    struct DisplayData * _result = 0;
    HRESULT _hr = raw_GetDisplayData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DisplayDataPtr(_result, false);
}

#pragma implementation_key(2666)
inline void TGFrameworkSupport::_IBalloonAuto::PutCalloutLeaderTextConnectionPoint ( enum DimCalloutLeaderTextConnectionPointConstants piIndex ) {
    HRESULT _hr = put_CalloutLeaderTextConnectionPoint(piIndex);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2667)
inline enum TGFrameworkSupport::DimCalloutLeaderTextConnectionPointConstants TGFrameworkSupport::_IBalloonAuto::GetCalloutLeaderTextConnectionPoint ( ) {
    enum DimCalloutLeaderTextConnectionPointConstants _result;
    HRESULT _hr = get_CalloutLeaderTextConnectionPoint(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2668)
inline void TGFrameworkSupport::_IBalloonAuto::PutBalloonLeaderTextConnectionPoint ( int piIndex ) {
    HRESULT _hr = put_BalloonLeaderTextConnectionPoint(piIndex);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2669)
inline int TGFrameworkSupport::_IBalloonAuto::GetBalloonLeaderTextConnectionPoint ( ) {
    int _result = 0;
    HRESULT _hr = get_BalloonLeaderTextConnectionPoint(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2670)
inline void TGFrameworkSupport::_IBalloonAuto::PutCalloutBalloonBreaklineDirection ( enum DimCalloutBalloonBreaklineDirectionConstants piIndex ) {
    HRESULT _hr = put_CalloutBalloonBreaklineDirection(piIndex);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2671)
inline enum TGFrameworkSupport::DimCalloutBalloonBreaklineDirectionConstants TGFrameworkSupport::_IBalloonAuto::GetCalloutBalloonBreaklineDirection ( ) {
    enum DimCalloutBalloonBreaklineDirectionConstants _result;
    HRESULT _hr = get_CalloutBalloonBreaklineDirection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2672)
inline void TGFrameworkSupport::_IBalloonAuto::PutFSBalloonOverridePrefixText ( _bstr_t Text ) {
    HRESULT _hr = put_FSBalloonOverridePrefixText(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2673)
inline _bstr_t TGFrameworkSupport::_IBalloonAuto::GetFSBalloonOverridePrefixText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FSBalloonOverridePrefixText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2674)
inline void TGFrameworkSupport::_IBalloonAuto::PutFSBalloonOverrideSuffixText ( _bstr_t Text ) {
    HRESULT _hr = put_FSBalloonOverrideSuffixText(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2675)
inline _bstr_t TGFrameworkSupport::_IBalloonAuto::GetFSBalloonOverrideSuffixText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FSBalloonOverrideSuffixText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2676)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::FSBalloonClearOverrides ( ) {
    HRESULT _hr = raw_FSBalloonClearOverrides();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2677)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::PromoteToCurrentVersion ( ) {
    HRESULT _hr = raw_PromoteToCurrentVersion();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2678)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::SetAlignmentShape ( IDispatch * AlignmentShapeObj, double x, double y ) {
    HRESULT _hr = raw_SetAlignmentShape(AlignmentShapeObj, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2679)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::GetAlignmentShape ( IDispatch * * AlignmentShapeObj, double * x, double * y ) {
    HRESULT _hr = raw_GetAlignmentShape(AlignmentShapeObj, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2680)
inline void TGFrameworkSupport::_IBalloonAuto::PutCalloutParallel ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_CalloutParallel(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2681)
inline VARIANT_BOOL TGFrameworkSupport::_IBalloonAuto::GetCalloutParallel ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CalloutParallel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2682)
inline void TGFrameworkSupport::_IBalloonAuto::PutPMIName ( _bstr_t Text ) {
    HRESULT _hr = put_PMIName(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2683)
inline _bstr_t TGFrameworkSupport::_IBalloonAuto::GetPMIName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PMIName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2684)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::TransformToModelCoordinates ( double InputX, double InputY, double InputZ, double * ModelX, double * ModelY, double * ModelZ ) {
    HRESULT _hr = raw_TransformToModelCoordinates(InputX, InputY, InputZ, ModelX, ModelY, ModelZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2685)
inline VARIANT_BOOL TGFrameworkSupport::_IBalloonAuto::GetIsTerminatorAttachedToEntity ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsTerminatorAttachedToEntity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2686)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::GetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    HRESULT _hr = raw_GetReferencedGeometry(ReferencedGeometries);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2687)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::SetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    HRESULT _hr = raw_SetReferencedGeometry(ReferencedGeometries);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2688)
inline void TGFrameworkSupport::_IBalloonAuto::PutLinkToFOAPartsList ( VARIANT_BOOL pvbLinkToFOAPartsList ) {
    HRESULT _hr = put_LinkToFOAPartsList(pvbLinkToFOAPartsList);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2689)
inline VARIANT_BOOL TGFrameworkSupport::_IBalloonAuto::GetLinkToFOAPartsList ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_LinkToFOAPartsList(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2690)
inline HRESULT TGFrameworkSupport::_IBalloonAuto::GetReferencedObjectInfo ( SAFEARRAY * * ReferencedObjects, SAFEARRAY * * ReferencedObjectTypes ) {
    HRESULT _hr = raw_GetReferencedObjectInfo(ReferencedObjects, ReferencedObjectTypes);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2691)
inline enum TGFrameworkSupport::TGBalloonReattachStatusConstants TGFrameworkSupport::_IBalloonAuto::TGReattachToDrawingView ( IDispatch * DrawingView ) {
    enum TGBalloonReattachStatusConstants _result;
    HRESULT _hr = raw_TGReattachToDrawingView(DrawingView, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2692)
inline IDispatchPtr TGFrameworkSupport::_IBalloonAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2693)
inline VARIANT_BOOL TGFrameworkSupport::_IBalloonAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface Lines2d wrapper method implementations
//

#pragma implementation_key(2694)
inline TGFrameworkSupport::Line2dPtr TGFrameworkSupport::Lines2d::Item ( const _variant_t & Index ) {
    struct Line2d * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return Line2dPtr(_result, false);
}

#pragma implementation_key(2695)
inline TGFramework::ApplicationPtr TGFrameworkSupport::Lines2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2696)
inline long TGFrameworkSupport::Lines2d::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2697)
inline IDispatchPtr TGFrameworkSupport::Lines2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2698)
inline TGFrameworkSupport::Line2dPtr TGFrameworkSupport::Lines2d::AddBy2Points ( double x1, double y1, double x2, double y2 ) {
    struct Line2d * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005", x1, y1, x2, y2);
    return Line2dPtr(_result, false);
}

#pragma implementation_key(2699)
inline TGFrameworkSupport::Line2dPtr TGFrameworkSupport::Lines2d::AddByPointAngleLength ( double x, double y, double Angle, double Length ) {
    struct Line2d * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005", x, y, Angle, Length);
    return Line2dPtr(_result, false);
}

#pragma implementation_key(2700)
inline TGFrameworkSupport::Line2dPtr TGFrameworkSupport::Lines2d::AddAsChamfer ( IDispatch * Obj1, IDispatch * Obj2, double xDirection, double yDirection, double SetBackA, double SetBackB ) {
    struct Line2d * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009\x0005\x0005\x0005\x0005", Obj1, Obj2, xDirection, yDirection, SetBackA, SetBackB);
    return Line2dPtr(_result, false);
}

#pragma implementation_key(2701)
inline SAFEARRAY * TGFrameworkSupport::Lines2d::AddSlotBy3Points ( double x1, double y1, double x2, double y2, double x3, double y3, long isSlotByCenter ) {
    SAFEARRAY * _result = 0;
    _com_dispatch_method(this, 0x2710, DISPATCH_METHOD, VT_ARRAY|VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005\x0003", x1, y1, x2, y2, x3, y3, isSlotByCenter);
    return _result;
}

//
// dispinterface Line2d wrapper method implementations
//

#pragma implementation_key(2702)
inline TGFrameworkSupport::GeometryStyle2dPtr TGFrameworkSupport::Line2d::GetStyle ( ) {
    struct GeometryStyle2d * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return GeometryStyle2dPtr(_result, false);
}

#pragma implementation_key(2703)
inline TGFrameworkSupport::Relationships2dPtr TGFrameworkSupport::Line2d::GetRelationships ( ) {
    struct Relationships2d * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return Relationships2dPtr(_result, false);
}

#pragma implementation_key(2704)
inline void TGFrameworkSupport::Line2d::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2705)
inline _bstr_t TGFrameworkSupport::Line2d::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2706)
inline TGFrameworkSupport::ChamferGeometry2dPtr TGFrameworkSupport::Line2d::GetChamfer ( ) {
    struct ChamferGeometry2d * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ChamferGeometry2dPtr(_result, false);
}

#pragma implementation_key(2707)
inline TGFramework::ApplicationPtr TGFrameworkSupport::Line2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x865, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2708)
inline long TGFrameworkSupport::Line2d::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x866, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2709)
inline _bstr_t TGFrameworkSupport::Line2d::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x867, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2710)
inline IDispatchPtr TGFrameworkSupport::Line2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x868, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2711)
inline long TGFrameworkSupport::Line2d::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x869, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2712)
inline long TGFrameworkSupport::Line2d::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x86b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2713)
inline _bstr_t TGFrameworkSupport::Line2d::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x86c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2714)
inline IDispatchPtr TGFrameworkSupport::Line2d::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x86d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2715)
inline HRESULT TGFrameworkSupport::Line2d::Copy ( ) {
    return _com_dispatch_method(this, 0x6001080a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2716)
inline HRESULT TGFrameworkSupport::Line2d::Cut ( ) {
    return _com_dispatch_method(this, 0x6001080b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2717)
inline HRESULT TGFrameworkSupport::Line2d::Delete ( ) {
    return _com_dispatch_method(this, 0x6001080c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2718)
inline HRESULT TGFrameworkSupport::Line2d::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    return _com_dispatch_method(this, 0x6001080d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", XFrom, YFrom, XTo, YTo);
}

#pragma implementation_key(2719)
inline HRESULT TGFrameworkSupport::Line2d::Scale ( double Factor ) {
    return _com_dispatch_method(this, 0x6001080e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Factor);
}

#pragma implementation_key(2720)
inline HRESULT TGFrameworkSupport::Line2d::Rotate ( double Angle, double x, double y ) {
    return _com_dispatch_method(this, 0x6001080f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", Angle, x, y);
}

#pragma implementation_key(2721)
inline HRESULT TGFrameworkSupport::Line2d::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60010811, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(2722)
inline IDispatchPtr TGFrameworkSupport::Line2d::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60010812, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &XDistance, &YDistance);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2723)
inline IDispatchPtr TGFrameworkSupport::Line2d::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60010813, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x080c", x1, y1, x2, y2, &BooleanCopyFlag);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2724)
inline HRESULT TGFrameworkSupport::Line2d::BringToFront ( ) {
    return _com_dispatch_method(this, 0x60010814, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2725)
inline HRESULT TGFrameworkSupport::Line2d::BringForward ( ) {
    return _com_dispatch_method(this, 0x60010815, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2726)
inline HRESULT TGFrameworkSupport::Line2d::SendToBack ( ) {
    return _com_dispatch_method(this, 0x60010816, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2727)
inline HRESULT TGFrameworkSupport::Line2d::SendBackward ( ) {
    return _com_dispatch_method(this, 0x60010817, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2728)
inline HRESULT TGFrameworkSupport::Line2d::Select ( ) {
    return _com_dispatch_method(this, 0x60010818, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2729)
inline double TGFrameworkSupport::Line2d::GetLength ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1800, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2730)
inline void TGFrameworkSupport::Line2d::PutLength ( double _arg1 ) {
    _com_dispatch_method(this, 0x1800, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2731)
inline double TGFrameworkSupport::Line2d::GetAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1801, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2732)
inline void TGFrameworkSupport::Line2d::PutAngle ( double _arg1 ) {
    _com_dispatch_method(this, 0x1801, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2733)
inline VARIANT_BOOL TGFrameworkSupport::Line2d::GetIsChamfer ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1804, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2734)
inline HRESULT TGFrameworkSupport::Line2d::GetStartPoint ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x60011805, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(2735)
inline HRESULT TGFrameworkSupport::Line2d::SetStartPoint ( double x, double y ) {
    return _com_dispatch_method(this, 0x60011806, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(2736)
inline HRESULT TGFrameworkSupport::Line2d::GetEndPoint ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x60011807, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(2737)
inline HRESULT TGFrameworkSupport::Line2d::SetEndPoint ( double x, double y ) {
    return _com_dispatch_method(this, 0x60011808, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(2738)
inline HRESULT TGFrameworkSupport::Line2d::Trim ( double x, double y, IDispatch * CutObj1, const _variant_t & CutObj2 ) {
    return _com_dispatch_method(this, 0x60012000, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0009\x080c", x, y, CutObj1, &CutObj2);
}

#pragma implementation_key(2739)
inline long TGFrameworkSupport::Line2d::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2801, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2740)
inline HRESULT TGFrameworkSupport::Line2d::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x2802, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(2741)
inline HRESULT TGFrameworkSupport::Line2d::SetKeyPoint ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x2803, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(2742)
inline HRESULT TGFrameworkSupport::Line2d::Extend ( double x, double y, IDispatch * TargetObj ) {
    return _com_dispatch_method(this, 0x60013000, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0009", x, y, TargetObj);
}

#pragma implementation_key(2743)
inline HRESULT TGFrameworkSupport::Line2d::CornerTrim ( double xKeep, double yKeep, IDispatch * TargetObj, double xTargetKeep, double yTargetKeep ) {
    return _com_dispatch_method(this, 0x60013001, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0009\x0005\x0005", xKeep, yKeep, TargetObj, xTargetKeep, yTargetKeep);
}

#pragma implementation_key(2744)
inline long TGFrameworkSupport::Line2d::GetSegmentedStyleCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3801, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2745)
inline HRESULT TGFrameworkSupport::Line2d::AddSegmentedStyle ( double x1, double y1, double x2, double y2, IDispatch * Style ) {
    return _com_dispatch_method(this, 0x3864, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005\x0009", x1, y1, x2, y2, Style);
}

#pragma implementation_key(2746)
inline HRESULT TGFrameworkSupport::Line2d::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * Style ) {
    return _com_dispatch_method(this, 0x3865, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4005\x4009", Index, x1, y1, x2, y2, Style);
}

#pragma implementation_key(2747)
inline HRESULT TGFrameworkSupport::Line2d::SetSegmentedStyle ( long Index, IDispatch * Style ) {
    return _com_dispatch_method(this, 0x3866, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0009", Index, Style);
}

#pragma implementation_key(2748)
inline HRESULT TGFrameworkSupport::Line2d::RemoveSegmentedStyle ( long Index ) {
    return _com_dispatch_method(this, 0x3867, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Index);
}

#pragma implementation_key(2749)
inline HRESULT TGFrameworkSupport::Line2d::RemoveAllSegmentedStyles ( ) {
    return _com_dispatch_method(this, 0x3868, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2750)
inline HRESULT TGFrameworkSupport::Line2d::RemoveAllSegmentedStylesBetween ( double x1, double y1, double x2, double y2 ) {
    return _com_dispatch_method(this, 0x3869, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", x1, y1, x2, y2);
}

#pragma implementation_key(2751)
inline IDispatchPtr TGFrameworkSupport::Line2d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2752)
inline VARIANT_BOOL TGFrameworkSupport::Line2d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(2753)
inline VARIANT_BOOL TGFrameworkSupport::Line2d::GetProjection ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x870, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2754)
inline void TGFrameworkSupport::Line2d::PutProjection ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x870, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2755)
inline void TGFrameworkSupport::Line2d::PutProjectionDashName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x871, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2756)
inline _bstr_t TGFrameworkSupport::Line2d::GetProjectionDashName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x871, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2757)
inline HRESULT TGFrameworkSupport::Line2d::SplitAtPoint ( double x, double y, VARIANT * OtherSplitElement ) {
    return _com_dispatch_method(this, 0x872, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x480c", x, y, OtherSplitElement);
}

//
// interface _ILines2dAuto wrapper method implementations
//

#pragma implementation_key(2758)
inline TGFrameworkSupport::Line2dPtr TGFrameworkSupport::_ILines2dAuto::Item ( const _variant_t & Index ) {
    struct Line2d * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Line2dPtr(_result, false);
}

#pragma implementation_key(2759)
inline IUnknownPtr TGFrameworkSupport::_ILines2dAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2760)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_ILines2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2761)
inline long TGFrameworkSupport::_ILines2dAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2762)
inline IDispatchPtr TGFrameworkSupport::_ILines2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2763)
inline TGFrameworkSupport::Line2dPtr TGFrameworkSupport::_ILines2dAuto::AddBy2Points ( double x1, double y1, double x2, double y2 ) {
    struct Line2d * _result = 0;
    HRESULT _hr = raw_AddBy2Points(x1, y1, x2, y2, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Line2dPtr(_result, false);
}

#pragma implementation_key(2764)
inline TGFrameworkSupport::Line2dPtr TGFrameworkSupport::_ILines2dAuto::AddByPointAngleLength ( double x, double y, double Angle, double Length ) {
    struct Line2d * _result = 0;
    HRESULT _hr = raw_AddByPointAngleLength(x, y, Angle, Length, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Line2dPtr(_result, false);
}

#pragma implementation_key(2765)
inline TGFrameworkSupport::Line2dPtr TGFrameworkSupport::_ILines2dAuto::AddAsChamfer ( IDispatch * Obj1, IDispatch * Obj2, double xDirection, double yDirection, double SetBackA, double SetBackB ) {
    struct Line2d * _result = 0;
    HRESULT _hr = raw_AddAsChamfer(Obj1, Obj2, xDirection, yDirection, SetBackA, SetBackB, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Line2dPtr(_result, false);
}

#pragma implementation_key(2766)
inline SAFEARRAY * TGFrameworkSupport::_ILines2dAuto::AddSlotBy3Points ( double x1, double y1, double x2, double y2, double x3, double y3, long isSlotByCenter ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_AddSlotBy3Points(x1, y1, x2, y2, x3, y3, isSlotByCenter, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface GeometryStyle2d wrapper method implementations
//

#pragma implementation_key(2767)
inline void TGFrameworkSupport::GeometryStyle2d::PutLinearColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2768)
inline long TGFrameworkSupport::GeometryStyle2d::GetLinearColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2769)
inline double TGFrameworkSupport::GeometryStyle2d::GetWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2770)
inline void TGFrameworkSupport::GeometryStyle2d::PutWidth ( double _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2771)
inline void TGFrameworkSupport::GeometryStyle2d::PutUnits ( long _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(2772)
inline long TGFrameworkSupport::GeometryStyle2d::GetUnits ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2773)
inline VARIANT_BOOL TGFrameworkSupport::GeometryStyle2d::GetAutoPhase ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2774)
inline void TGFrameworkSupport::GeometryStyle2d::PutAutoPhase ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2775)
inline long TGFrameworkSupport::GeometryStyle2d::GetDashGapCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2776)
inline double TGFrameworkSupport::GeometryStyle2d::GetDashStrokePercent ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2777)
inline void TGFrameworkSupport::GeometryStyle2d::PutDashStrokePercent ( double _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2778)
inline void TGFrameworkSupport::GeometryStyle2d::PutLinearName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2779)
inline _bstr_t TGFrameworkSupport::GeometryStyle2d::GetLinearName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2780)
inline void TGFrameworkSupport::GeometryStyle2d::PutDashName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2781)
inline _bstr_t TGFrameworkSupport::GeometryStyle2d::GetDashName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2782)
inline HRESULT TGFrameworkSupport::GeometryStyle2d::UseActiveStyle ( long ForFutureUse ) {
    return _com_dispatch_method(this, 0x6001000f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", ForFutureUse);
}

#pragma implementation_key(2783)
inline HRESULT TGFrameworkSupport::GeometryStyle2d::SetDashGap ( long DashCount, SAFEARRAY * * Dashes ) {
    return _com_dispatch_method(this, 0x60010010, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6005", DashCount, Dashes);
}

#pragma implementation_key(2784)
inline HRESULT TGFrameworkSupport::GeometryStyle2d::GetDashGap ( long DashCount, SAFEARRAY * * Dashes ) {
    return _com_dispatch_method(this, 0x60010011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6005", DashCount, Dashes);
}

//
// interface _IGeometryStyle2dAuto wrapper method implementations
//

#pragma implementation_key(2785)
inline void TGFrameworkSupport::_IGeometryStyle2dAuto::PutLinearColor ( long Color ) {
    HRESULT _hr = put_LinearColor(Color);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2786)
inline long TGFrameworkSupport::_IGeometryStyle2dAuto::GetLinearColor ( ) {
    long _result = 0;
    HRESULT _hr = get_LinearColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2787)
inline double TGFrameworkSupport::_IGeometryStyle2dAuto::GetWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2788)
inline void TGFrameworkSupport::_IGeometryStyle2dAuto::PutWidth ( double PenWidth ) {
    HRESULT _hr = put_Width(PenWidth);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2789)
inline void TGFrameworkSupport::_IGeometryStyle2dAuto::PutUnits ( long Units ) {
    HRESULT _hr = put_Units(Units);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2790)
inline long TGFrameworkSupport::_IGeometryStyle2dAuto::GetUnits ( ) {
    long _result = 0;
    HRESULT _hr = get_Units(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2791)
inline VARIANT_BOOL TGFrameworkSupport::_IGeometryStyle2dAuto::GetAutoPhase ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AutoPhase(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2792)
inline void TGFrameworkSupport::_IGeometryStyle2dAuto::PutAutoPhase ( VARIANT_BOOL AutoPhase ) {
    HRESULT _hr = put_AutoPhase(AutoPhase);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2793)
inline long TGFrameworkSupport::_IGeometryStyle2dAuto::GetDashGapCount ( ) {
    long _result = 0;
    HRESULT _hr = get_DashGapCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2794)
inline double TGFrameworkSupport::_IGeometryStyle2dAuto::GetDashStrokePercent ( ) {
    double _result = 0;
    HRESULT _hr = get_DashStrokePercent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2795)
inline void TGFrameworkSupport::_IGeometryStyle2dAuto::PutDashStrokePercent ( double DashStrokePercent ) {
    HRESULT _hr = put_DashStrokePercent(DashStrokePercent);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2796)
inline void TGFrameworkSupport::_IGeometryStyle2dAuto::PutLinearName ( _bstr_t StyleName ) {
    HRESULT _hr = put_LinearName(StyleName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2797)
inline _bstr_t TGFrameworkSupport::_IGeometryStyle2dAuto::GetLinearName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LinearName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2798)
inline void TGFrameworkSupport::_IGeometryStyle2dAuto::PutDashName ( _bstr_t StyleName ) {
    HRESULT _hr = put_DashName(StyleName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2799)
inline _bstr_t TGFrameworkSupport::_IGeometryStyle2dAuto::GetDashName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DashName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2800)
inline HRESULT TGFrameworkSupport::_IGeometryStyle2dAuto::UseActiveStyle ( long ForFutureUse ) {
    HRESULT _hr = raw_UseActiveStyle(ForFutureUse);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2801)
inline HRESULT TGFrameworkSupport::_IGeometryStyle2dAuto::SetDashGap ( long DashCount, SAFEARRAY * * Dashes ) {
    HRESULT _hr = raw_SetDashGap(DashCount, Dashes);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2802)
inline HRESULT TGFrameworkSupport::_IGeometryStyle2dAuto::GetDashGap ( long DashCount, SAFEARRAY * * Dashes ) {
    HRESULT _hr = raw_GetDashGap(DashCount, Dashes);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface Relationships2d wrapper method implementations
//

#pragma implementation_key(2803)
inline IDispatchPtr TGFrameworkSupport::Relationships2d::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2804)
inline TGFramework::ApplicationPtr TGFrameworkSupport::Relationships2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2805)
inline long TGFrameworkSupport::Relationships2d::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2806)
inline IDispatchPtr TGFrameworkSupport::Relationships2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// interface _IRelationships2dAuto wrapper method implementations
//

#pragma implementation_key(2807)
inline IDispatchPtr TGFrameworkSupport::_IRelationships2dAuto::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2808)
inline IUnknownPtr TGFrameworkSupport::_IRelationships2dAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2809)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IRelationships2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2810)
inline long TGFrameworkSupport::_IRelationships2dAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2811)
inline IDispatchPtr TGFrameworkSupport::_IRelationships2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// dispinterface ChamferGeometry2d wrapper method implementations
//

#pragma implementation_key(2812)
inline double TGFrameworkSupport::ChamferGeometry2d::GetAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2813)
inline void TGFrameworkSupport::ChamferGeometry2d::PutAngle ( double _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2814)
inline double TGFrameworkSupport::ChamferGeometry2d::GetSetBackA ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2815)
inline void TGFrameworkSupport::ChamferGeometry2d::PutSetBackA ( double _arg1 ) {
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2816)
inline double TGFrameworkSupport::ChamferGeometry2d::GetSetBackB ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2817)
inline void TGFrameworkSupport::ChamferGeometry2d::PutSetBackB ( double _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2818)
inline HRESULT TGFrameworkSupport::ChamferGeometry2d::GetConnectedObjects ( IDispatch * * Obj1, IDispatch * * Obj2 ) {
    return _com_dispatch_method(this, 0x60010006, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4009", Obj1, Obj2);
}

#pragma implementation_key(2819)
inline HRESULT TGFrameworkSupport::ChamferGeometry2d::ModifyByPointAndAngle ( double x, double y, double Angle ) {
    return _com_dispatch_method(this, 0x60010007, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", x, y, Angle);
}

#pragma implementation_key(2820)
inline HRESULT TGFrameworkSupport::ChamferGeometry2d::ModifyBySetBacks ( double SetBackA, double SetBackB ) {
    return _com_dispatch_method(this, 0x60010008, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", SetBackA, SetBackB);
}

//
// interface _ILine2dAuto wrapper method implementations
//

#pragma implementation_key(2821)
inline TGFrameworkSupport::GeometryStyle2dPtr TGFrameworkSupport::_ILine2dAuto::GetStyle ( ) {
    struct GeometryStyle2d * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return GeometryStyle2dPtr(_result, false);
}

#pragma implementation_key(2822)
inline TGFrameworkSupport::Relationships2dPtr TGFrameworkSupport::_ILine2dAuto::GetRelationships ( ) {
    struct Relationships2d * _result = 0;
    HRESULT _hr = get_Relationships(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relationships2dPtr(_result, false);
}

#pragma implementation_key(2823)
inline void TGFrameworkSupport::_ILine2dAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2824)
inline _bstr_t TGFrameworkSupport::_ILine2dAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2825)
inline TGFrameworkSupport::ChamferGeometry2dPtr TGFrameworkSupport::_ILine2dAuto::GetChamfer ( ) {
    struct ChamferGeometry2d * _result = 0;
    HRESULT _hr = get_Chamfer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ChamferGeometry2dPtr(_result, false);
}

#pragma implementation_key(2826)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_ILine2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2827)
inline long TGFrameworkSupport::_ILine2dAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2828)
inline _bstr_t TGFrameworkSupport::_ILine2dAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2829)
inline IDispatchPtr TGFrameworkSupport::_ILine2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2830)
inline long TGFrameworkSupport::_ILine2dAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2831)
inline long TGFrameworkSupport::_ILine2dAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2832)
inline _bstr_t TGFrameworkSupport::_ILine2dAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2833)
inline IDispatchPtr TGFrameworkSupport::_ILine2dAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2834)
inline HRESULT TGFrameworkSupport::_ILine2dAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2835)
inline HRESULT TGFrameworkSupport::_ILine2dAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2836)
inline HRESULT TGFrameworkSupport::_ILine2dAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2837)
inline HRESULT TGFrameworkSupport::_ILine2dAuto::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    HRESULT _hr = raw_Move(XFrom, YFrom, XTo, YTo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2838)
inline HRESULT TGFrameworkSupport::_ILine2dAuto::Scale ( double Factor ) {
    HRESULT _hr = raw_Scale(Factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2839)
inline HRESULT TGFrameworkSupport::_ILine2dAuto::Rotate ( double Angle, double x, double y ) {
    HRESULT _hr = raw_Rotate(Angle, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2840)
inline HRESULT TGFrameworkSupport::_ILine2dAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2841)
inline IDispatchPtr TGFrameworkSupport::_ILine2dAuto::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Duplicate(XDistance, YDistance, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2842)
inline IDispatchPtr TGFrameworkSupport::_ILine2dAuto::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Mirror(x1, y1, x2, y2, BooleanCopyFlag, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2843)
inline HRESULT TGFrameworkSupport::_ILine2dAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2844)
inline HRESULT TGFrameworkSupport::_ILine2dAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2845)
inline HRESULT TGFrameworkSupport::_ILine2dAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2846)
inline HRESULT TGFrameworkSupport::_ILine2dAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2847)
inline HRESULT TGFrameworkSupport::_ILine2dAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2848)
inline double TGFrameworkSupport::_ILine2dAuto::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2849)
inline void TGFrameworkSupport::_ILine2dAuto::PutLength ( double Length ) {
    HRESULT _hr = put_Length(Length);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2850)
inline double TGFrameworkSupport::_ILine2dAuto::GetAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_Angle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2851)
inline void TGFrameworkSupport::_ILine2dAuto::PutAngle ( double Angle ) {
    HRESULT _hr = put_Angle(Angle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2852)
inline VARIANT_BOOL TGFrameworkSupport::_ILine2dAuto::GetIsChamfer ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsChamfer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2853)
inline HRESULT TGFrameworkSupport::_ILine2dAuto::GetStartPoint ( double * x, double * y ) {
    HRESULT _hr = raw_GetStartPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2854)
inline HRESULT TGFrameworkSupport::_ILine2dAuto::SetStartPoint ( double x, double y ) {
    HRESULT _hr = raw_SetStartPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2855)
inline HRESULT TGFrameworkSupport::_ILine2dAuto::GetEndPoint ( double * x, double * y ) {
    HRESULT _hr = raw_GetEndPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2856)
inline HRESULT TGFrameworkSupport::_ILine2dAuto::SetEndPoint ( double x, double y ) {
    HRESULT _hr = raw_SetEndPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2857)
inline HRESULT TGFrameworkSupport::_ILine2dAuto::Trim ( double x, double y, IDispatch * CutObj1, const _variant_t & CutObj2 ) {
    HRESULT _hr = raw_Trim(x, y, CutObj1, CutObj2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2858)
inline long TGFrameworkSupport::_ILine2dAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2859)
inline HRESULT TGFrameworkSupport::_ILine2dAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2860)
inline HRESULT TGFrameworkSupport::_ILine2dAuto::SetKeyPoint ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetKeyPoint(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2861)
inline HRESULT TGFrameworkSupport::_ILine2dAuto::Extend ( double x, double y, IDispatch * TargetObj ) {
    HRESULT _hr = raw_Extend(x, y, TargetObj);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2862)
inline HRESULT TGFrameworkSupport::_ILine2dAuto::CornerTrim ( double xKeep, double yKeep, IDispatch * TargetObj, double xTargetKeep, double yTargetKeep ) {
    HRESULT _hr = raw_CornerTrim(xKeep, yKeep, TargetObj, xTargetKeep, yTargetKeep);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2863)
inline long TGFrameworkSupport::_ILine2dAuto::GetSegmentedStyleCount ( ) {
    long _result = 0;
    HRESULT _hr = get_SegmentedStyleCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2864)
inline HRESULT TGFrameworkSupport::_ILine2dAuto::AddSegmentedStyle ( double x1, double y1, double x2, double y2, IDispatch * Style ) {
    HRESULT _hr = raw_AddSegmentedStyle(x1, y1, x2, y2, Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2865)
inline HRESULT TGFrameworkSupport::_ILine2dAuto::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * Style ) {
    HRESULT _hr = raw_GetSegmentedStyle(Index, x1, y1, x2, y2, Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2866)
inline HRESULT TGFrameworkSupport::_ILine2dAuto::SetSegmentedStyle ( long Index, IDispatch * Style ) {
    HRESULT _hr = raw_SetSegmentedStyle(Index, Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2867)
inline HRESULT TGFrameworkSupport::_ILine2dAuto::RemoveSegmentedStyle ( long Index ) {
    HRESULT _hr = raw_RemoveSegmentedStyle(Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2868)
inline HRESULT TGFrameworkSupport::_ILine2dAuto::RemoveAllSegmentedStyles ( ) {
    HRESULT _hr = raw_RemoveAllSegmentedStyles();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2869)
inline HRESULT TGFrameworkSupport::_ILine2dAuto::RemoveAllSegmentedStylesBetween ( double x1, double y1, double x2, double y2 ) {
    HRESULT _hr = raw_RemoveAllSegmentedStylesBetween(x1, y1, x2, y2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2870)
inline IDispatchPtr TGFrameworkSupport::_ILine2dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2871)
inline VARIANT_BOOL TGFrameworkSupport::_ILine2dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2872)
inline VARIANT_BOOL TGFrameworkSupport::_ILine2dAuto::GetProjection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Projection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2873)
inline void TGFrameworkSupport::_ILine2dAuto::PutProjection ( VARIANT_BOOL IsProjection ) {
    HRESULT _hr = put_Projection(IsProjection);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2874)
inline void TGFrameworkSupport::_ILine2dAuto::PutProjectionDashName ( _bstr_t StyleName ) {
    HRESULT _hr = put_ProjectionDashName(StyleName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2875)
inline _bstr_t TGFrameworkSupport::_ILine2dAuto::GetProjectionDashName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ProjectionDashName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2876)
inline HRESULT TGFrameworkSupport::_ILine2dAuto::SplitAtPoint ( double x, double y, VARIANT * OtherSplitElement ) {
    HRESULT _hr = raw_SplitAtPoint(x, y, OtherSplitElement);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _IChamferGeometry2dAuto wrapper method implementations
//

#pragma implementation_key(2877)
inline double TGFrameworkSupport::_IChamferGeometry2dAuto::GetAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_Angle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2878)
inline void TGFrameworkSupport::_IChamferGeometry2dAuto::PutAngle ( double Angle ) {
    HRESULT _hr = put_Angle(Angle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2879)
inline double TGFrameworkSupport::_IChamferGeometry2dAuto::GetSetBackA ( ) {
    double _result = 0;
    HRESULT _hr = get_SetBackA(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2880)
inline void TGFrameworkSupport::_IChamferGeometry2dAuto::PutSetBackA ( double SetBackA ) {
    HRESULT _hr = put_SetBackA(SetBackA);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2881)
inline double TGFrameworkSupport::_IChamferGeometry2dAuto::GetSetBackB ( ) {
    double _result = 0;
    HRESULT _hr = get_SetBackB(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2882)
inline void TGFrameworkSupport::_IChamferGeometry2dAuto::PutSetBackB ( double SetBackB ) {
    HRESULT _hr = put_SetBackB(SetBackB);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2883)
inline HRESULT TGFrameworkSupport::_IChamferGeometry2dAuto::GetConnectedObjects ( IDispatch * * Obj1, IDispatch * * Obj2 ) {
    HRESULT _hr = raw_GetConnectedObjects(Obj1, Obj2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2884)
inline HRESULT TGFrameworkSupport::_IChamferGeometry2dAuto::ModifyByPointAndAngle ( double x, double y, double Angle ) {
    HRESULT _hr = raw_ModifyByPointAndAngle(x, y, Angle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2885)
inline HRESULT TGFrameworkSupport::_IChamferGeometry2dAuto::ModifyBySetBacks ( double SetBackA, double SetBackB ) {
    HRESULT _hr = raw_ModifyBySetBacks(SetBackA, SetBackB);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface Circles2d wrapper method implementations
//

#pragma implementation_key(2886)
inline TGFrameworkSupport::Circle2dPtr TGFrameworkSupport::Circles2d::Item ( const _variant_t & Index ) {
    struct Circle2d * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return Circle2dPtr(_result, false);
}

#pragma implementation_key(2887)
inline TGFramework::ApplicationPtr TGFrameworkSupport::Circles2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2888)
inline long TGFrameworkSupport::Circles2d::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2889)
inline IDispatchPtr TGFrameworkSupport::Circles2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2890)
inline TGFrameworkSupport::Circle2dPtr TGFrameworkSupport::Circles2d::AddByCenterRadius ( double x, double y, double Radius ) {
    struct Circle2d * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005", x, y, Radius);
    return Circle2dPtr(_result, false);
}

#pragma implementation_key(2891)
inline TGFrameworkSupport::Circle2dPtr TGFrameworkSupport::Circles2d::AddBy3Points ( double x1, double y1, double x2, double y2, double x3, double y3 ) {
    struct Circle2d * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005", x1, y1, x2, y2, x3, y3);
    return Circle2dPtr(_result, false);
}

//
// dispinterface Circle2d wrapper method implementations
//

#pragma implementation_key(2892)
inline TGFrameworkSupport::GeometryStyle2dPtr TGFrameworkSupport::Circle2d::GetStyle ( ) {
    struct GeometryStyle2d * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return GeometryStyle2dPtr(_result, false);
}

#pragma implementation_key(2893)
inline TGFrameworkSupport::Relationships2dPtr TGFrameworkSupport::Circle2d::GetRelationships ( ) {
    struct Relationships2d * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return Relationships2dPtr(_result, false);
}

#pragma implementation_key(2894)
inline void TGFrameworkSupport::Circle2d::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(2895)
inline _bstr_t TGFrameworkSupport::Circle2d::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2896)
inline TGFramework::ApplicationPtr TGFrameworkSupport::Circle2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2897)
inline long TGFrameworkSupport::Circle2d::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1066, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2898)
inline _bstr_t TGFrameworkSupport::Circle2d::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1067, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2899)
inline IDispatchPtr TGFrameworkSupport::Circle2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1068, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2900)
inline long TGFrameworkSupport::Circle2d::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1069, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2901)
inline long TGFrameworkSupport::Circle2d::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x106b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2902)
inline _bstr_t TGFrameworkSupport::Circle2d::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x106c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2903)
inline IDispatchPtr TGFrameworkSupport::Circle2d::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x106d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2904)
inline HRESULT TGFrameworkSupport::Circle2d::Copy ( ) {
    return _com_dispatch_method(this, 0x6001100a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2905)
inline HRESULT TGFrameworkSupport::Circle2d::Cut ( ) {
    return _com_dispatch_method(this, 0x6001100b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2906)
inline HRESULT TGFrameworkSupport::Circle2d::Delete ( ) {
    return _com_dispatch_method(this, 0x6001100c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2907)
inline HRESULT TGFrameworkSupport::Circle2d::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    return _com_dispatch_method(this, 0x6001100d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", XFrom, YFrom, XTo, YTo);
}

#pragma implementation_key(2908)
inline HRESULT TGFrameworkSupport::Circle2d::Scale ( double Factor ) {
    return _com_dispatch_method(this, 0x6001100e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Factor);
}

#pragma implementation_key(2909)
inline HRESULT TGFrameworkSupport::Circle2d::Rotate ( double Angle, double x, double y ) {
    return _com_dispatch_method(this, 0x6001100f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", Angle, x, y);
}

#pragma implementation_key(2910)
inline HRESULT TGFrameworkSupport::Circle2d::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60011011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(2911)
inline IDispatchPtr TGFrameworkSupport::Circle2d::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60011012, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &XDistance, &YDistance);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2912)
inline IDispatchPtr TGFrameworkSupport::Circle2d::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60011013, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x080c", x1, y1, x2, y2, &BooleanCopyFlag);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2913)
inline HRESULT TGFrameworkSupport::Circle2d::BringToFront ( ) {
    return _com_dispatch_method(this, 0x60011014, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2914)
inline HRESULT TGFrameworkSupport::Circle2d::BringForward ( ) {
    return _com_dispatch_method(this, 0x60011015, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2915)
inline HRESULT TGFrameworkSupport::Circle2d::SendToBack ( ) {
    return _com_dispatch_method(this, 0x60011016, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2916)
inline HRESULT TGFrameworkSupport::Circle2d::SendBackward ( ) {
    return _com_dispatch_method(this, 0x60011017, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2917)
inline HRESULT TGFrameworkSupport::Circle2d::Select ( ) {
    return _com_dispatch_method(this, 0x60011018, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2918)
inline double TGFrameworkSupport::Circle2d::GetRadius ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3000, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2919)
inline void TGFrameworkSupport::Circle2d::PutRadius ( double _arg1 ) {
    _com_dispatch_method(this, 0x3000, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2920)
inline double TGFrameworkSupport::Circle2d::GetDiameter ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3001, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2921)
inline void TGFrameworkSupport::Circle2d::PutDiameter ( double _arg1 ) {
    _com_dispatch_method(this, 0x3001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(2922)
inline double TGFrameworkSupport::Circle2d::GetCircumference ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3002, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2923)
inline double TGFrameworkSupport::Circle2d::GetArea ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3003, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2924)
inline HRESULT TGFrameworkSupport::Circle2d::GetCenterPoint ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x60013006, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(2925)
inline HRESULT TGFrameworkSupport::Circle2d::SetCenterPoint ( double x, double y ) {
    return _com_dispatch_method(this, 0x60013007, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(2926)
inline HRESULT TGFrameworkSupport::Circle2d::GetMajorAxis ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x60013008, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(2927)
inline HRESULT TGFrameworkSupport::Circle2d::SetMajorAxis ( double x, double y ) {
    return _com_dispatch_method(this, 0x60013009, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(2928)
inline HRESULT TGFrameworkSupport::Circle2d::Trim ( double x, double y, IDispatch * CutObj1, const _variant_t & CutObj2 ) {
    return _com_dispatch_method(this, 0x60014000, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0009\x080c", x, y, CutObj1, &CutObj2);
}

#pragma implementation_key(2929)
inline long TGFrameworkSupport::Circle2d::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2930)
inline HRESULT TGFrameworkSupport::Circle2d::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x5002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(2931)
inline HRESULT TGFrameworkSupport::Circle2d::SetKeyPoint ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x5003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(2932)
inline long TGFrameworkSupport::Circle2d::GetSegmentedStyleCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2933)
inline HRESULT TGFrameworkSupport::Circle2d::AddSegmentedStyle ( double x1, double y1, double x2, double y2, IDispatch * Style ) {
    return _com_dispatch_method(this, 0x6064, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005\x0009", x1, y1, x2, y2, Style);
}

#pragma implementation_key(2934)
inline HRESULT TGFrameworkSupport::Circle2d::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * Style ) {
    return _com_dispatch_method(this, 0x6065, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4005\x4009", Index, x1, y1, x2, y2, Style);
}

#pragma implementation_key(2935)
inline HRESULT TGFrameworkSupport::Circle2d::SetSegmentedStyle ( long Index, IDispatch * Style ) {
    return _com_dispatch_method(this, 0x6066, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0009", Index, Style);
}

#pragma implementation_key(2936)
inline HRESULT TGFrameworkSupport::Circle2d::RemoveSegmentedStyle ( long Index ) {
    return _com_dispatch_method(this, 0x6067, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Index);
}

#pragma implementation_key(2937)
inline HRESULT TGFrameworkSupport::Circle2d::RemoveAllSegmentedStyles ( ) {
    return _com_dispatch_method(this, 0x6068, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(2938)
inline HRESULT TGFrameworkSupport::Circle2d::RemoveAllSegmentedStylesBetween ( double x1, double y1, double x2, double y2 ) {
    return _com_dispatch_method(this, 0x6069, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", x1, y1, x2, y2);
}

#pragma implementation_key(2939)
inline IDispatchPtr TGFrameworkSupport::Circle2d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2940)
inline VARIANT_BOOL TGFrameworkSupport::Circle2d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(2941)
inline VARIANT_BOOL TGFrameworkSupport::Circle2d::GetShowCurvatureComb ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x870, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2942)
inline void TGFrameworkSupport::Circle2d::PutShowCurvatureComb ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x870, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(2943)
inline HRESULT TGFrameworkSupport::Circle2d::SplitAtPoints ( double x1, double y1, double x2, double y2, VARIANT * SplitElement1, VARIANT * SplitElement2 ) {
    return _com_dispatch_method(this, 0x871, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005\x480c\x480c", x1, y1, x2, y2, SplitElement1, SplitElement2);
}

#pragma implementation_key(2944)
inline double TGFrameworkSupport::Circle2d::GetLength ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3005, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

//
// interface _ICircles2dAuto wrapper method implementations
//

#pragma implementation_key(2945)
inline TGFrameworkSupport::Circle2dPtr TGFrameworkSupport::_ICircles2dAuto::Item ( const _variant_t & Index ) {
    struct Circle2d * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Circle2dPtr(_result, false);
}

#pragma implementation_key(2946)
inline IUnknownPtr TGFrameworkSupport::_ICircles2dAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(2947)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_ICircles2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2948)
inline long TGFrameworkSupport::_ICircles2dAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2949)
inline IDispatchPtr TGFrameworkSupport::_ICircles2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2950)
inline TGFrameworkSupport::Circle2dPtr TGFrameworkSupport::_ICircles2dAuto::AddByCenterRadius ( double x, double y, double Radius ) {
    struct Circle2d * _result = 0;
    HRESULT _hr = raw_AddByCenterRadius(x, y, Radius, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Circle2dPtr(_result, false);
}

#pragma implementation_key(2951)
inline TGFrameworkSupport::Circle2dPtr TGFrameworkSupport::_ICircles2dAuto::AddBy3Points ( double x1, double y1, double x2, double y2, double x3, double y3 ) {
    struct Circle2d * _result = 0;
    HRESULT _hr = raw_AddBy3Points(x1, y1, x2, y2, x3, y3, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Circle2dPtr(_result, false);
}

//
// interface _ICircle2dAuto wrapper method implementations
//

#pragma implementation_key(2952)
inline TGFrameworkSupport::GeometryStyle2dPtr TGFrameworkSupport::_ICircle2dAuto::GetStyle ( ) {
    struct GeometryStyle2d * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return GeometryStyle2dPtr(_result, false);
}

#pragma implementation_key(2953)
inline TGFrameworkSupport::Relationships2dPtr TGFrameworkSupport::_ICircle2dAuto::GetRelationships ( ) {
    struct Relationships2d * _result = 0;
    HRESULT _hr = get_Relationships(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relationships2dPtr(_result, false);
}

#pragma implementation_key(2954)
inline void TGFrameworkSupport::_ICircle2dAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2955)
inline _bstr_t TGFrameworkSupport::_ICircle2dAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2956)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_ICircle2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(2957)
inline long TGFrameworkSupport::_ICircle2dAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2958)
inline _bstr_t TGFrameworkSupport::_ICircle2dAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2959)
inline IDispatchPtr TGFrameworkSupport::_ICircle2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2960)
inline long TGFrameworkSupport::_ICircle2dAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2961)
inline long TGFrameworkSupport::_ICircle2dAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2962)
inline _bstr_t TGFrameworkSupport::_ICircle2dAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2963)
inline IDispatchPtr TGFrameworkSupport::_ICircle2dAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2964)
inline HRESULT TGFrameworkSupport::_ICircle2dAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2965)
inline HRESULT TGFrameworkSupport::_ICircle2dAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2966)
inline HRESULT TGFrameworkSupport::_ICircle2dAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2967)
inline HRESULT TGFrameworkSupport::_ICircle2dAuto::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    HRESULT _hr = raw_Move(XFrom, YFrom, XTo, YTo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2968)
inline HRESULT TGFrameworkSupport::_ICircle2dAuto::Scale ( double Factor ) {
    HRESULT _hr = raw_Scale(Factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2969)
inline HRESULT TGFrameworkSupport::_ICircle2dAuto::Rotate ( double Angle, double x, double y ) {
    HRESULT _hr = raw_Rotate(Angle, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2970)
inline HRESULT TGFrameworkSupport::_ICircle2dAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2971)
inline IDispatchPtr TGFrameworkSupport::_ICircle2dAuto::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Duplicate(XDistance, YDistance, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2972)
inline IDispatchPtr TGFrameworkSupport::_ICircle2dAuto::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Mirror(x1, y1, x2, y2, BooleanCopyFlag, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(2973)
inline HRESULT TGFrameworkSupport::_ICircle2dAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2974)
inline HRESULT TGFrameworkSupport::_ICircle2dAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2975)
inline HRESULT TGFrameworkSupport::_ICircle2dAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2976)
inline HRESULT TGFrameworkSupport::_ICircle2dAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2977)
inline HRESULT TGFrameworkSupport::_ICircle2dAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2978)
inline double TGFrameworkSupport::_ICircle2dAuto::GetRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2979)
inline void TGFrameworkSupport::_ICircle2dAuto::PutRadius ( double Radius ) {
    HRESULT _hr = put_Radius(Radius);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2980)
inline double TGFrameworkSupport::_ICircle2dAuto::GetDiameter ( ) {
    double _result = 0;
    HRESULT _hr = get_Diameter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2981)
inline void TGFrameworkSupport::_ICircle2dAuto::PutDiameter ( double Diameter ) {
    HRESULT _hr = put_Diameter(Diameter);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2982)
inline double TGFrameworkSupport::_ICircle2dAuto::GetCircumference ( ) {
    double _result = 0;
    HRESULT _hr = get_Circumference(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2983)
inline double TGFrameworkSupport::_ICircle2dAuto::GetArea ( ) {
    double _result = 0;
    HRESULT _hr = get_Area(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2984)
inline HRESULT TGFrameworkSupport::_ICircle2dAuto::GetCenterPoint ( double * x, double * y ) {
    HRESULT _hr = raw_GetCenterPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2985)
inline HRESULT TGFrameworkSupport::_ICircle2dAuto::SetCenterPoint ( double x, double y ) {
    HRESULT _hr = raw_SetCenterPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2986)
inline HRESULT TGFrameworkSupport::_ICircle2dAuto::GetMajorAxis ( double * x, double * y ) {
    HRESULT _hr = raw_GetMajorAxis(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2987)
inline HRESULT TGFrameworkSupport::_ICircle2dAuto::SetMajorAxis ( double x, double y ) {
    HRESULT _hr = raw_SetMajorAxis(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2988)
inline HRESULT TGFrameworkSupport::_ICircle2dAuto::Trim ( double x, double y, IDispatch * CutObj1, const _variant_t & CutObj2 ) {
    HRESULT _hr = raw_Trim(x, y, CutObj1, CutObj2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2989)
inline long TGFrameworkSupport::_ICircle2dAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2990)
inline HRESULT TGFrameworkSupport::_ICircle2dAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2991)
inline HRESULT TGFrameworkSupport::_ICircle2dAuto::SetKeyPoint ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetKeyPoint(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2992)
inline long TGFrameworkSupport::_ICircle2dAuto::GetSegmentedStyleCount ( ) {
    long _result = 0;
    HRESULT _hr = get_SegmentedStyleCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2993)
inline HRESULT TGFrameworkSupport::_ICircle2dAuto::AddSegmentedStyle ( double x1, double y1, double x2, double y2, IDispatch * Style ) {
    HRESULT _hr = raw_AddSegmentedStyle(x1, y1, x2, y2, Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2994)
inline HRESULT TGFrameworkSupport::_ICircle2dAuto::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * Style ) {
    HRESULT _hr = raw_GetSegmentedStyle(Index, x1, y1, x2, y2, Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2995)
inline HRESULT TGFrameworkSupport::_ICircle2dAuto::SetSegmentedStyle ( long Index, IDispatch * Style ) {
    HRESULT _hr = raw_SetSegmentedStyle(Index, Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2996)
inline HRESULT TGFrameworkSupport::_ICircle2dAuto::RemoveSegmentedStyle ( long Index ) {
    HRESULT _hr = raw_RemoveSegmentedStyle(Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2997)
inline HRESULT TGFrameworkSupport::_ICircle2dAuto::RemoveAllSegmentedStyles ( ) {
    HRESULT _hr = raw_RemoveAllSegmentedStyles();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2998)
inline HRESULT TGFrameworkSupport::_ICircle2dAuto::RemoveAllSegmentedStylesBetween ( double x1, double y1, double x2, double y2 ) {
    HRESULT _hr = raw_RemoveAllSegmentedStylesBetween(x1, y1, x2, y2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(2999)
inline IDispatchPtr TGFrameworkSupport::_ICircle2dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3000)
inline VARIANT_BOOL TGFrameworkSupport::_ICircle2dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3001)
inline VARIANT_BOOL TGFrameworkSupport::_ICircle2dAuto::GetShowCurvatureComb ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowCurvatureComb(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3002)
inline void TGFrameworkSupport::_ICircle2dAuto::PutShowCurvatureComb ( VARIANT_BOOL Show ) {
    HRESULT _hr = put_ShowCurvatureComb(Show);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3003)
inline HRESULT TGFrameworkSupport::_ICircle2dAuto::SplitAtPoints ( double x1, double y1, double x2, double y2, VARIANT * SplitElement1, VARIANT * SplitElement2 ) {
    HRESULT _hr = raw_SplitAtPoints(x1, y1, x2, y2, SplitElement1, SplitElement2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3004)
inline double TGFrameworkSupport::_ICircle2dAuto::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface Arcs2d wrapper method implementations
//

#pragma implementation_key(3005)
inline TGFrameworkSupport::Arc2dPtr TGFrameworkSupport::Arcs2d::Item ( const _variant_t & Index ) {
    struct Arc2d * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return Arc2dPtr(_result, false);
}

#pragma implementation_key(3006)
inline TGFramework::ApplicationPtr TGFrameworkSupport::Arcs2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3007)
inline long TGFrameworkSupport::Arcs2d::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3008)
inline IDispatchPtr TGFrameworkSupport::Arcs2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3009)
inline TGFrameworkSupport::Arc2dPtr TGFrameworkSupport::Arcs2d::AddByStartAlongEnd ( double xStart, double yStart, double xAlong, double yAlong, double xEnd, double yEnd ) {
    struct Arc2d * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005", xStart, yStart, xAlong, yAlong, xEnd, yEnd);
    return Arc2dPtr(_result, false);
}

#pragma implementation_key(3010)
inline TGFrameworkSupport::Arc2dPtr TGFrameworkSupport::Arcs2d::AddByCenterStartEnd ( double xCenter, double yCenter, double xStart, double yStart, double xEnd, double yEnd ) {
    struct Arc2d * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005", xCenter, yCenter, xStart, yStart, xEnd, yEnd);
    return Arc2dPtr(_result, false);
}

#pragma implementation_key(3011)
inline TGFrameworkSupport::Arc2dPtr TGFrameworkSupport::Arcs2d::AddAsFillet ( IDispatch * Obj1, IDispatch * Obj2, double Radius, double xDirection, double yDirection ) {
    struct Arc2d * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009\x0005\x0005\x0005", Obj1, Obj2, Radius, xDirection, yDirection);
    return Arc2dPtr(_result, false);
}

#pragma implementation_key(3012)
inline TGFrameworkSupport::Arc2dPtr TGFrameworkSupport::Arcs2d::AddAsFilletNoTrim ( IDispatch * Obj1, IDispatch * Obj2, double Radius, double xDirection, double yDirection ) {
    struct Arc2d * _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009\x0005\x0005\x0005", Obj1, Obj2, Radius, xDirection, yDirection);
    return Arc2dPtr(_result, false);
}

//
// dispinterface Arc2d wrapper method implementations
//

#pragma implementation_key(3013)
inline TGFrameworkSupport::GeometryStyle2dPtr TGFrameworkSupport::Arc2d::GetStyle ( ) {
    struct GeometryStyle2d * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return GeometryStyle2dPtr(_result, false);
}

#pragma implementation_key(3014)
inline TGFrameworkSupport::Relationships2dPtr TGFrameworkSupport::Arc2d::GetRelationships ( ) {
    struct Relationships2d * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return Relationships2dPtr(_result, false);
}

#pragma implementation_key(3015)
inline void TGFrameworkSupport::Arc2d::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3016)
inline _bstr_t TGFrameworkSupport::Arc2d::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3017)
inline TGFrameworkSupport::FilletGeometry2dPtr TGFrameworkSupport::Arc2d::GetFillet ( ) {
    struct FilletGeometry2d * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return FilletGeometry2dPtr(_result, false);
}

#pragma implementation_key(3018)
inline TGFramework::ApplicationPtr TGFrameworkSupport::Arc2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x865, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3019)
inline long TGFrameworkSupport::Arc2d::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x866, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3020)
inline _bstr_t TGFrameworkSupport::Arc2d::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x867, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3021)
inline IDispatchPtr TGFrameworkSupport::Arc2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x868, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3022)
inline long TGFrameworkSupport::Arc2d::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x869, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3023)
inline long TGFrameworkSupport::Arc2d::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x86b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3024)
inline _bstr_t TGFrameworkSupport::Arc2d::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x86c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3025)
inline IDispatchPtr TGFrameworkSupport::Arc2d::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x86d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3026)
inline HRESULT TGFrameworkSupport::Arc2d::Copy ( ) {
    return _com_dispatch_method(this, 0x6001080a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3027)
inline HRESULT TGFrameworkSupport::Arc2d::Cut ( ) {
    return _com_dispatch_method(this, 0x6001080b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3028)
inline HRESULT TGFrameworkSupport::Arc2d::Delete ( ) {
    return _com_dispatch_method(this, 0x6001080c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3029)
inline HRESULT TGFrameworkSupport::Arc2d::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    return _com_dispatch_method(this, 0x6001080d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", XFrom, YFrom, XTo, YTo);
}

#pragma implementation_key(3030)
inline HRESULT TGFrameworkSupport::Arc2d::Scale ( double Factor ) {
    return _com_dispatch_method(this, 0x6001080e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Factor);
}

#pragma implementation_key(3031)
inline HRESULT TGFrameworkSupport::Arc2d::Rotate ( double Angle, double x, double y ) {
    return _com_dispatch_method(this, 0x6001080f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", Angle, x, y);
}

#pragma implementation_key(3032)
inline HRESULT TGFrameworkSupport::Arc2d::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60010811, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(3033)
inline IDispatchPtr TGFrameworkSupport::Arc2d::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60010812, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &XDistance, &YDistance);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3034)
inline IDispatchPtr TGFrameworkSupport::Arc2d::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60010813, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x080c", x1, y1, x2, y2, &BooleanCopyFlag);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3035)
inline HRESULT TGFrameworkSupport::Arc2d::BringToFront ( ) {
    return _com_dispatch_method(this, 0x60010814, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3036)
inline HRESULT TGFrameworkSupport::Arc2d::BringForward ( ) {
    return _com_dispatch_method(this, 0x60010815, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3037)
inline HRESULT TGFrameworkSupport::Arc2d::SendToBack ( ) {
    return _com_dispatch_method(this, 0x60010816, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3038)
inline HRESULT TGFrameworkSupport::Arc2d::SendBackward ( ) {
    return _com_dispatch_method(this, 0x60010817, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3039)
inline HRESULT TGFrameworkSupport::Arc2d::Select ( ) {
    return _com_dispatch_method(this, 0x60010818, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3040)
inline void TGFrameworkSupport::Arc2d::PutRadius ( double _arg1 ) {
    _com_dispatch_method(this, 0x1800, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3041)
inline double TGFrameworkSupport::Arc2d::GetRadius ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1800, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3042)
inline double TGFrameworkSupport::Arc2d::GetStartAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1801, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3043)
inline void TGFrameworkSupport::Arc2d::PutStartAngle ( double _arg1 ) {
    _com_dispatch_method(this, 0x1801, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3044)
inline double TGFrameworkSupport::Arc2d::GetSweepAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1802, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3045)
inline void TGFrameworkSupport::Arc2d::PutSweepAngle ( double _arg1 ) {
    _com_dispatch_method(this, 0x1802, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3046)
inline void TGFrameworkSupport::Arc2d::PutOrientation ( enum Geom2dOrientationConstants _arg1 ) {
    _com_dispatch_method(this, 0x1803, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3047)
inline enum TGFrameworkSupport::Geom2dOrientationConstants TGFrameworkSupport::Arc2d::GetOrientation ( ) {
    enum Geom2dOrientationConstants _result;
    _com_dispatch_method(this, 0x1803, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3048)
inline VARIANT_BOOL TGFrameworkSupport::Arc2d::GetIsFillet ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1804, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3049)
inline HRESULT TGFrameworkSupport::Arc2d::GetStartPoint ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x60011809, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(3050)
inline HRESULT TGFrameworkSupport::Arc2d::SetStartPoint ( double x, double y ) {
    return _com_dispatch_method(this, 0x6001180a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(3051)
inline HRESULT TGFrameworkSupport::Arc2d::GetEndPoint ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x6001180b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(3052)
inline HRESULT TGFrameworkSupport::Arc2d::SetEndPoint ( double x, double y ) {
    return _com_dispatch_method(this, 0x6001180c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(3053)
inline HRESULT TGFrameworkSupport::Arc2d::GetCenterPoint ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x6001180d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(3054)
inline HRESULT TGFrameworkSupport::Arc2d::SetCenterPoint ( double x, double y ) {
    return _com_dispatch_method(this, 0x6001180e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(3055)
inline HRESULT TGFrameworkSupport::Arc2d::GetMajorAxis ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x6001180f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(3056)
inline HRESULT TGFrameworkSupport::Arc2d::SetMajorAxis ( double x, double y ) {
    return _com_dispatch_method(this, 0x60011810, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(3057)
inline HRESULT TGFrameworkSupport::Arc2d::Trim ( double x, double y, IDispatch * CutObj1, const _variant_t & CutObj2 ) {
    return _com_dispatch_method(this, 0x60012000, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0009\x080c", x, y, CutObj1, &CutObj2);
}

#pragma implementation_key(3058)
inline long TGFrameworkSupport::Arc2d::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2801, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3059)
inline HRESULT TGFrameworkSupport::Arc2d::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x2802, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(3060)
inline HRESULT TGFrameworkSupport::Arc2d::SetKeyPoint ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x2803, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(3061)
inline HRESULT TGFrameworkSupport::Arc2d::Extend ( double x, double y, IDispatch * TargetObj ) {
    return _com_dispatch_method(this, 0x60013000, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0009", x, y, TargetObj);
}

#pragma implementation_key(3062)
inline HRESULT TGFrameworkSupport::Arc2d::CornerTrim ( double xKeep, double yKeep, IDispatch * TargetObj, double xTargetKeep, double yTargetKeep ) {
    return _com_dispatch_method(this, 0x60013001, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0009\x0005\x0005", xKeep, yKeep, TargetObj, xTargetKeep, yTargetKeep);
}

#pragma implementation_key(3063)
inline long TGFrameworkSupport::Arc2d::GetSegmentedStyleCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3801, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3064)
inline HRESULT TGFrameworkSupport::Arc2d::AddSegmentedStyle ( double x1, double y1, double x2, double y2, IDispatch * Style ) {
    return _com_dispatch_method(this, 0x3864, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005\x0009", x1, y1, x2, y2, Style);
}

#pragma implementation_key(3065)
inline HRESULT TGFrameworkSupport::Arc2d::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * Style ) {
    return _com_dispatch_method(this, 0x3865, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4005\x4009", Index, x1, y1, x2, y2, Style);
}

#pragma implementation_key(3066)
inline HRESULT TGFrameworkSupport::Arc2d::SetSegmentedStyle ( long Index, IDispatch * Style ) {
    return _com_dispatch_method(this, 0x3866, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0009", Index, Style);
}

#pragma implementation_key(3067)
inline HRESULT TGFrameworkSupport::Arc2d::RemoveSegmentedStyle ( long Index ) {
    return _com_dispatch_method(this, 0x3867, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Index);
}

#pragma implementation_key(3068)
inline HRESULT TGFrameworkSupport::Arc2d::RemoveAllSegmentedStyles ( ) {
    return _com_dispatch_method(this, 0x3868, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3069)
inline HRESULT TGFrameworkSupport::Arc2d::RemoveAllSegmentedStylesBetween ( double x1, double y1, double x2, double y2 ) {
    return _com_dispatch_method(this, 0x3869, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", x1, y1, x2, y2);
}

#pragma implementation_key(3070)
inline IDispatchPtr TGFrameworkSupport::Arc2d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3071)
inline VARIANT_BOOL TGFrameworkSupport::Arc2d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(3072)
inline VARIANT_BOOL TGFrameworkSupport::Arc2d::GetShowCurvatureComb ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x870, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3073)
inline void TGFrameworkSupport::Arc2d::PutShowCurvatureComb ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x870, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3074)
inline HRESULT TGFrameworkSupport::Arc2d::SplitAtPoint ( double x, double y, VARIANT * OtherSplitElement ) {
    return _com_dispatch_method(this, 0x871, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x480c", x, y, OtherSplitElement);
}

#pragma implementation_key(3075)
inline double TGFrameworkSupport::Arc2d::GetLength ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1806, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

//
// interface _IArcs2dAuto wrapper method implementations
//

#pragma implementation_key(3076)
inline TGFrameworkSupport::Arc2dPtr TGFrameworkSupport::_IArcs2dAuto::Item ( const _variant_t & Index ) {
    struct Arc2d * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Arc2dPtr(_result, false);
}

#pragma implementation_key(3077)
inline IUnknownPtr TGFrameworkSupport::_IArcs2dAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3078)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IArcs2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3079)
inline long TGFrameworkSupport::_IArcs2dAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3080)
inline IDispatchPtr TGFrameworkSupport::_IArcs2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3081)
inline TGFrameworkSupport::Arc2dPtr TGFrameworkSupport::_IArcs2dAuto::AddByStartAlongEnd ( double xStart, double yStart, double xAlong, double yAlong, double xEnd, double yEnd ) {
    struct Arc2d * _result = 0;
    HRESULT _hr = raw_AddByStartAlongEnd(xStart, yStart, xAlong, yAlong, xEnd, yEnd, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Arc2dPtr(_result, false);
}

#pragma implementation_key(3082)
inline TGFrameworkSupport::Arc2dPtr TGFrameworkSupport::_IArcs2dAuto::AddByCenterStartEnd ( double xCenter, double yCenter, double xStart, double yStart, double xEnd, double yEnd ) {
    struct Arc2d * _result = 0;
    HRESULT _hr = raw_AddByCenterStartEnd(xCenter, yCenter, xStart, yStart, xEnd, yEnd, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Arc2dPtr(_result, false);
}

#pragma implementation_key(3083)
inline TGFrameworkSupport::Arc2dPtr TGFrameworkSupport::_IArcs2dAuto::AddAsFillet ( IDispatch * Obj1, IDispatch * Obj2, double Radius, double xDirection, double yDirection ) {
    struct Arc2d * _result = 0;
    HRESULT _hr = raw_AddAsFillet(Obj1, Obj2, Radius, xDirection, yDirection, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Arc2dPtr(_result, false);
}

#pragma implementation_key(3084)
inline TGFrameworkSupport::Arc2dPtr TGFrameworkSupport::_IArcs2dAuto::AddAsFilletNoTrim ( IDispatch * Obj1, IDispatch * Obj2, double Radius, double xDirection, double yDirection ) {
    struct Arc2d * _result = 0;
    HRESULT _hr = raw_AddAsFilletNoTrim(Obj1, Obj2, Radius, xDirection, yDirection, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Arc2dPtr(_result, false);
}

//
// dispinterface FilletGeometry2d wrapper method implementations
//

#pragma implementation_key(3085)
inline HRESULT TGFrameworkSupport::FilletGeometry2d::GetConnectedObjects ( IDispatch * * Obj1, IDispatch * * Obj2 ) {
    return _com_dispatch_method(this, 0x60010000, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4009", Obj1, Obj2);
}

//
// interface _IFilletGeom2dAuto wrapper method implementations
//

#pragma implementation_key(3086)
inline HRESULT TGFrameworkSupport::_IFilletGeom2dAuto::GetConnectedObjects ( IDispatch * * Obj1, IDispatch * * Obj2 ) {
    HRESULT _hr = raw_GetConnectedObjects(Obj1, Obj2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _IArc2dAuto wrapper method implementations
//

#pragma implementation_key(3087)
inline TGFrameworkSupport::GeometryStyle2dPtr TGFrameworkSupport::_IArc2dAuto::GetStyle ( ) {
    struct GeometryStyle2d * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return GeometryStyle2dPtr(_result, false);
}

#pragma implementation_key(3088)
inline TGFrameworkSupport::Relationships2dPtr TGFrameworkSupport::_IArc2dAuto::GetRelationships ( ) {
    struct Relationships2d * _result = 0;
    HRESULT _hr = get_Relationships(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relationships2dPtr(_result, false);
}

#pragma implementation_key(3089)
inline void TGFrameworkSupport::_IArc2dAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3090)
inline _bstr_t TGFrameworkSupport::_IArc2dAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3091)
inline TGFrameworkSupport::FilletGeometry2dPtr TGFrameworkSupport::_IArc2dAuto::GetFillet ( ) {
    struct FilletGeometry2d * _result = 0;
    HRESULT _hr = get_Fillet(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return FilletGeometry2dPtr(_result, false);
}

#pragma implementation_key(3092)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IArc2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3093)
inline long TGFrameworkSupport::_IArc2dAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3094)
inline _bstr_t TGFrameworkSupport::_IArc2dAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3095)
inline IDispatchPtr TGFrameworkSupport::_IArc2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3096)
inline long TGFrameworkSupport::_IArc2dAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3097)
inline long TGFrameworkSupport::_IArc2dAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3098)
inline _bstr_t TGFrameworkSupport::_IArc2dAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3099)
inline IDispatchPtr TGFrameworkSupport::_IArc2dAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3100)
inline HRESULT TGFrameworkSupport::_IArc2dAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3101)
inline HRESULT TGFrameworkSupport::_IArc2dAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3102)
inline HRESULT TGFrameworkSupport::_IArc2dAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3103)
inline HRESULT TGFrameworkSupport::_IArc2dAuto::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    HRESULT _hr = raw_Move(XFrom, YFrom, XTo, YTo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3104)
inline HRESULT TGFrameworkSupport::_IArc2dAuto::Scale ( double Factor ) {
    HRESULT _hr = raw_Scale(Factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3105)
inline HRESULT TGFrameworkSupport::_IArc2dAuto::Rotate ( double Angle, double x, double y ) {
    HRESULT _hr = raw_Rotate(Angle, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3106)
inline HRESULT TGFrameworkSupport::_IArc2dAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3107)
inline IDispatchPtr TGFrameworkSupport::_IArc2dAuto::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Duplicate(XDistance, YDistance, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3108)
inline IDispatchPtr TGFrameworkSupport::_IArc2dAuto::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Mirror(x1, y1, x2, y2, BooleanCopyFlag, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3109)
inline HRESULT TGFrameworkSupport::_IArc2dAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3110)
inline HRESULT TGFrameworkSupport::_IArc2dAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3111)
inline HRESULT TGFrameworkSupport::_IArc2dAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3112)
inline HRESULT TGFrameworkSupport::_IArc2dAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3113)
inline HRESULT TGFrameworkSupport::_IArc2dAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3114)
inline void TGFrameworkSupport::_IArc2dAuto::PutRadius ( double Radius ) {
    HRESULT _hr = put_Radius(Radius);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3115)
inline double TGFrameworkSupport::_IArc2dAuto::GetRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3116)
inline double TGFrameworkSupport::_IArc2dAuto::GetStartAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_StartAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3117)
inline void TGFrameworkSupport::_IArc2dAuto::PutStartAngle ( double Angle ) {
    HRESULT _hr = put_StartAngle(Angle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3118)
inline double TGFrameworkSupport::_IArc2dAuto::GetSweepAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_SweepAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3119)
inline void TGFrameworkSupport::_IArc2dAuto::PutSweepAngle ( double Angle ) {
    HRESULT _hr = put_SweepAngle(Angle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3120)
inline void TGFrameworkSupport::_IArc2dAuto::PutOrientation ( enum Geom2dOrientationConstants Orientation ) {
    HRESULT _hr = put_Orientation(Orientation);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3121)
inline enum TGFrameworkSupport::Geom2dOrientationConstants TGFrameworkSupport::_IArc2dAuto::GetOrientation ( ) {
    enum Geom2dOrientationConstants _result;
    HRESULT _hr = get_Orientation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3122)
inline VARIANT_BOOL TGFrameworkSupport::_IArc2dAuto::GetIsFillet ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsFillet(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3123)
inline HRESULT TGFrameworkSupport::_IArc2dAuto::GetStartPoint ( double * x, double * y ) {
    HRESULT _hr = raw_GetStartPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3124)
inline HRESULT TGFrameworkSupport::_IArc2dAuto::SetStartPoint ( double x, double y ) {
    HRESULT _hr = raw_SetStartPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3125)
inline HRESULT TGFrameworkSupport::_IArc2dAuto::GetEndPoint ( double * x, double * y ) {
    HRESULT _hr = raw_GetEndPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3126)
inline HRESULT TGFrameworkSupport::_IArc2dAuto::SetEndPoint ( double x, double y ) {
    HRESULT _hr = raw_SetEndPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3127)
inline HRESULT TGFrameworkSupport::_IArc2dAuto::GetCenterPoint ( double * x, double * y ) {
    HRESULT _hr = raw_GetCenterPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3128)
inline HRESULT TGFrameworkSupport::_IArc2dAuto::SetCenterPoint ( double x, double y ) {
    HRESULT _hr = raw_SetCenterPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3129)
inline HRESULT TGFrameworkSupport::_IArc2dAuto::GetMajorAxis ( double * x, double * y ) {
    HRESULT _hr = raw_GetMajorAxis(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3130)
inline HRESULT TGFrameworkSupport::_IArc2dAuto::SetMajorAxis ( double x, double y ) {
    HRESULT _hr = raw_SetMajorAxis(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3131)
inline HRESULT TGFrameworkSupport::_IArc2dAuto::Trim ( double x, double y, IDispatch * CutObj1, const _variant_t & CutObj2 ) {
    HRESULT _hr = raw_Trim(x, y, CutObj1, CutObj2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3132)
inline long TGFrameworkSupport::_IArc2dAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3133)
inline HRESULT TGFrameworkSupport::_IArc2dAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3134)
inline HRESULT TGFrameworkSupport::_IArc2dAuto::SetKeyPoint ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetKeyPoint(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3135)
inline HRESULT TGFrameworkSupport::_IArc2dAuto::Extend ( double x, double y, IDispatch * TargetObj ) {
    HRESULT _hr = raw_Extend(x, y, TargetObj);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3136)
inline HRESULT TGFrameworkSupport::_IArc2dAuto::CornerTrim ( double xKeep, double yKeep, IDispatch * TargetObj, double xTargetKeep, double yTargetKeep ) {
    HRESULT _hr = raw_CornerTrim(xKeep, yKeep, TargetObj, xTargetKeep, yTargetKeep);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3137)
inline long TGFrameworkSupport::_IArc2dAuto::GetSegmentedStyleCount ( ) {
    long _result = 0;
    HRESULT _hr = get_SegmentedStyleCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3138)
inline HRESULT TGFrameworkSupport::_IArc2dAuto::AddSegmentedStyle ( double x1, double y1, double x2, double y2, IDispatch * Style ) {
    HRESULT _hr = raw_AddSegmentedStyle(x1, y1, x2, y2, Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3139)
inline HRESULT TGFrameworkSupport::_IArc2dAuto::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * Style ) {
    HRESULT _hr = raw_GetSegmentedStyle(Index, x1, y1, x2, y2, Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3140)
inline HRESULT TGFrameworkSupport::_IArc2dAuto::SetSegmentedStyle ( long Index, IDispatch * Style ) {
    HRESULT _hr = raw_SetSegmentedStyle(Index, Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3141)
inline HRESULT TGFrameworkSupport::_IArc2dAuto::RemoveSegmentedStyle ( long Index ) {
    HRESULT _hr = raw_RemoveSegmentedStyle(Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3142)
inline HRESULT TGFrameworkSupport::_IArc2dAuto::RemoveAllSegmentedStyles ( ) {
    HRESULT _hr = raw_RemoveAllSegmentedStyles();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3143)
inline HRESULT TGFrameworkSupport::_IArc2dAuto::RemoveAllSegmentedStylesBetween ( double x1, double y1, double x2, double y2 ) {
    HRESULT _hr = raw_RemoveAllSegmentedStylesBetween(x1, y1, x2, y2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3144)
inline IDispatchPtr TGFrameworkSupport::_IArc2dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3145)
inline VARIANT_BOOL TGFrameworkSupport::_IArc2dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3146)
inline VARIANT_BOOL TGFrameworkSupport::_IArc2dAuto::GetShowCurvatureComb ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowCurvatureComb(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3147)
inline void TGFrameworkSupport::_IArc2dAuto::PutShowCurvatureComb ( VARIANT_BOOL Show ) {
    HRESULT _hr = put_ShowCurvatureComb(Show);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3148)
inline HRESULT TGFrameworkSupport::_IArc2dAuto::SplitAtPoint ( double x, double y, VARIANT * OtherSplitElement ) {
    HRESULT _hr = raw_SplitAtPoint(x, y, OtherSplitElement);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3149)
inline double TGFrameworkSupport::_IArc2dAuto::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface Ellipses2d wrapper method implementations
//

#pragma implementation_key(3150)
inline TGFrameworkSupport::Ellipse2dPtr TGFrameworkSupport::Ellipses2d::Item ( const _variant_t & Index ) {
    struct Ellipse2d * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return Ellipse2dPtr(_result, false);
}

#pragma implementation_key(3151)
inline TGFramework::ApplicationPtr TGFrameworkSupport::Ellipses2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3152)
inline long TGFrameworkSupport::Ellipses2d::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3153)
inline IDispatchPtr TGFrameworkSupport::Ellipses2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3154)
inline TGFrameworkSupport::Ellipse2dPtr TGFrameworkSupport::Ellipses2d::AddByCenter ( double xCenter, double yCenter, double xMajor, double yMajor, double Ratio, enum Geom2dOrientationConstants Orientation ) {
    struct Ellipse2d * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0003", xCenter, yCenter, xMajor, yMajor, Ratio, Orientation);
    return Ellipse2dPtr(_result, false);
}

//
// dispinterface Ellipse2d wrapper method implementations
//

#pragma implementation_key(3155)
inline TGFrameworkSupport::GeometryStyle2dPtr TGFrameworkSupport::Ellipse2d::GetStyle ( ) {
    struct GeometryStyle2d * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return GeometryStyle2dPtr(_result, false);
}

#pragma implementation_key(3156)
inline TGFrameworkSupport::Relationships2dPtr TGFrameworkSupport::Ellipse2d::GetRelationships ( ) {
    struct Relationships2d * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return Relationships2dPtr(_result, false);
}

#pragma implementation_key(3157)
inline void TGFrameworkSupport::Ellipse2d::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3158)
inline _bstr_t TGFrameworkSupport::Ellipse2d::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3159)
inline TGFramework::ApplicationPtr TGFrameworkSupport::Ellipse2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3160)
inline long TGFrameworkSupport::Ellipse2d::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1066, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3161)
inline _bstr_t TGFrameworkSupport::Ellipse2d::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1067, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3162)
inline IDispatchPtr TGFrameworkSupport::Ellipse2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1068, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3163)
inline long TGFrameworkSupport::Ellipse2d::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1069, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3164)
inline long TGFrameworkSupport::Ellipse2d::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x106b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3165)
inline _bstr_t TGFrameworkSupport::Ellipse2d::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x106c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3166)
inline IDispatchPtr TGFrameworkSupport::Ellipse2d::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x106d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3167)
inline HRESULT TGFrameworkSupport::Ellipse2d::Copy ( ) {
    return _com_dispatch_method(this, 0x6001100a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3168)
inline HRESULT TGFrameworkSupport::Ellipse2d::Cut ( ) {
    return _com_dispatch_method(this, 0x6001100b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3169)
inline HRESULT TGFrameworkSupport::Ellipse2d::Delete ( ) {
    return _com_dispatch_method(this, 0x6001100c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3170)
inline HRESULT TGFrameworkSupport::Ellipse2d::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    return _com_dispatch_method(this, 0x6001100d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", XFrom, YFrom, XTo, YTo);
}

#pragma implementation_key(3171)
inline HRESULT TGFrameworkSupport::Ellipse2d::Scale ( double Factor ) {
    return _com_dispatch_method(this, 0x6001100e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Factor);
}

#pragma implementation_key(3172)
inline HRESULT TGFrameworkSupport::Ellipse2d::Rotate ( double Angle, double x, double y ) {
    return _com_dispatch_method(this, 0x6001100f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", Angle, x, y);
}

#pragma implementation_key(3173)
inline HRESULT TGFrameworkSupport::Ellipse2d::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60011011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(3174)
inline IDispatchPtr TGFrameworkSupport::Ellipse2d::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60011012, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &XDistance, &YDistance);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3175)
inline IDispatchPtr TGFrameworkSupport::Ellipse2d::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60011013, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x080c", x1, y1, x2, y2, &BooleanCopyFlag);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3176)
inline HRESULT TGFrameworkSupport::Ellipse2d::BringToFront ( ) {
    return _com_dispatch_method(this, 0x60011014, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3177)
inline HRESULT TGFrameworkSupport::Ellipse2d::BringForward ( ) {
    return _com_dispatch_method(this, 0x60011015, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3178)
inline HRESULT TGFrameworkSupport::Ellipse2d::SendToBack ( ) {
    return _com_dispatch_method(this, 0x60011016, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3179)
inline HRESULT TGFrameworkSupport::Ellipse2d::SendBackward ( ) {
    return _com_dispatch_method(this, 0x60011017, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3180)
inline HRESULT TGFrameworkSupport::Ellipse2d::Select ( ) {
    return _com_dispatch_method(this, 0x60011018, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3181)
inline void TGFrameworkSupport::Ellipse2d::PutMajorRadius ( double _arg1 ) {
    _com_dispatch_method(this, 0x3000, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3182)
inline double TGFrameworkSupport::Ellipse2d::GetMajorRadius ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3000, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3183)
inline double TGFrameworkSupport::Ellipse2d::GetMinorRadius ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3001, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3184)
inline void TGFrameworkSupport::Ellipse2d::PutMinorRadius ( double _arg1 ) {
    _com_dispatch_method(this, 0x3001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3185)
inline void TGFrameworkSupport::Ellipse2d::PutOrientation ( enum Geom2dOrientationConstants _arg1 ) {
    _com_dispatch_method(this, 0x3002, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3186)
inline enum TGFrameworkSupport::Geom2dOrientationConstants TGFrameworkSupport::Ellipse2d::GetOrientation ( ) {
    enum Geom2dOrientationConstants _result;
    _com_dispatch_method(this, 0x3002, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3187)
inline double TGFrameworkSupport::Ellipse2d::GetRotationAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3003, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3188)
inline void TGFrameworkSupport::Ellipse2d::PutRotationAngle ( double _arg1 ) {
    _com_dispatch_method(this, 0x3003, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3189)
inline double TGFrameworkSupport::Ellipse2d::GetMinorMajorRatio ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3004, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3190)
inline void TGFrameworkSupport::Ellipse2d::PutMinorMajorRatio ( double _arg1 ) {
    _com_dispatch_method(this, 0x3004, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3191)
inline double TGFrameworkSupport::Ellipse2d::GetCircumference ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3005, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3192)
inline double TGFrameworkSupport::Ellipse2d::GetArea ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3006, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3193)
inline HRESULT TGFrameworkSupport::Ellipse2d::GetCenterPoint ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x6001300c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(3194)
inline HRESULT TGFrameworkSupport::Ellipse2d::SetCenterPoint ( double x, double y ) {
    return _com_dispatch_method(this, 0x6001300d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(3195)
inline HRESULT TGFrameworkSupport::Ellipse2d::GetMajorAxis ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x6001300e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(3196)
inline HRESULT TGFrameworkSupport::Ellipse2d::SetMajorAxis ( double x, double y ) {
    return _com_dispatch_method(this, 0x6001300f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(3197)
inline HRESULT TGFrameworkSupport::Ellipse2d::GetMinorAxis ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x60013010, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(3198)
inline HRESULT TGFrameworkSupport::Ellipse2d::SetMinorAxis ( double x, double y ) {
    return _com_dispatch_method(this, 0x60013011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(3199)
inline HRESULT TGFrameworkSupport::Ellipse2d::Trim ( double x, double y, IDispatch * CutObj1, const _variant_t & CutObj2 ) {
    return _com_dispatch_method(this, 0x60014000, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0009\x080c", x, y, CutObj1, &CutObj2);
}

#pragma implementation_key(3200)
inline long TGFrameworkSupport::Ellipse2d::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3201)
inline HRESULT TGFrameworkSupport::Ellipse2d::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x5002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(3202)
inline HRESULT TGFrameworkSupport::Ellipse2d::SetKeyPoint ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x5003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(3203)
inline long TGFrameworkSupport::Ellipse2d::GetSegmentedStyleCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3204)
inline HRESULT TGFrameworkSupport::Ellipse2d::AddSegmentedStyle ( double x1, double y1, double x2, double y2, IDispatch * Style ) {
    return _com_dispatch_method(this, 0x6064, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005\x0009", x1, y1, x2, y2, Style);
}

#pragma implementation_key(3205)
inline HRESULT TGFrameworkSupport::Ellipse2d::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * Style ) {
    return _com_dispatch_method(this, 0x6065, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4005\x4009", Index, x1, y1, x2, y2, Style);
}

#pragma implementation_key(3206)
inline HRESULT TGFrameworkSupport::Ellipse2d::SetSegmentedStyle ( long Index, IDispatch * Style ) {
    return _com_dispatch_method(this, 0x6066, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0009", Index, Style);
}

#pragma implementation_key(3207)
inline HRESULT TGFrameworkSupport::Ellipse2d::RemoveSegmentedStyle ( long Index ) {
    return _com_dispatch_method(this, 0x6067, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Index);
}

#pragma implementation_key(3208)
inline HRESULT TGFrameworkSupport::Ellipse2d::RemoveAllSegmentedStyles ( ) {
    return _com_dispatch_method(this, 0x6068, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3209)
inline HRESULT TGFrameworkSupport::Ellipse2d::RemoveAllSegmentedStylesBetween ( double x1, double y1, double x2, double y2 ) {
    return _com_dispatch_method(this, 0x6069, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", x1, y1, x2, y2);
}

#pragma implementation_key(3210)
inline IDispatchPtr TGFrameworkSupport::Ellipse2d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3211)
inline VARIANT_BOOL TGFrameworkSupport::Ellipse2d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(3212)
inline VARIANT_BOOL TGFrameworkSupport::Ellipse2d::GetShowCurvatureComb ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x870, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3213)
inline void TGFrameworkSupport::Ellipse2d::PutShowCurvatureComb ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x870, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3214)
inline HRESULT TGFrameworkSupport::Ellipse2d::SplitAtPoints ( double x1, double y1, double x2, double y2, VARIANT * SplitElement1, VARIANT * SplitElement2 ) {
    return _com_dispatch_method(this, 0x871, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005\x480c\x480c", x1, y1, x2, y2, SplitElement1, SplitElement2);
}

#pragma implementation_key(3215)
inline double TGFrameworkSupport::Ellipse2d::GetLength ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3007, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

//
// interface _IEllipses2dAuto wrapper method implementations
//

#pragma implementation_key(3216)
inline TGFrameworkSupport::Ellipse2dPtr TGFrameworkSupport::_IEllipses2dAuto::Item ( const _variant_t & Index ) {
    struct Ellipse2d * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Ellipse2dPtr(_result, false);
}

#pragma implementation_key(3217)
inline IUnknownPtr TGFrameworkSupport::_IEllipses2dAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3218)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IEllipses2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3219)
inline long TGFrameworkSupport::_IEllipses2dAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3220)
inline IDispatchPtr TGFrameworkSupport::_IEllipses2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3221)
inline TGFrameworkSupport::Ellipse2dPtr TGFrameworkSupport::_IEllipses2dAuto::AddByCenter ( double xCenter, double yCenter, double xMajor, double yMajor, double Ratio, enum Geom2dOrientationConstants Orientation ) {
    struct Ellipse2d * _result = 0;
    HRESULT _hr = raw_AddByCenter(xCenter, yCenter, xMajor, yMajor, Ratio, Orientation, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Ellipse2dPtr(_result, false);
}

//
// interface _IEllipse2dAuto wrapper method implementations
//

#pragma implementation_key(3222)
inline TGFrameworkSupport::GeometryStyle2dPtr TGFrameworkSupport::_IEllipse2dAuto::GetStyle ( ) {
    struct GeometryStyle2d * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return GeometryStyle2dPtr(_result, false);
}

#pragma implementation_key(3223)
inline TGFrameworkSupport::Relationships2dPtr TGFrameworkSupport::_IEllipse2dAuto::GetRelationships ( ) {
    struct Relationships2d * _result = 0;
    HRESULT _hr = get_Relationships(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relationships2dPtr(_result, false);
}

#pragma implementation_key(3224)
inline void TGFrameworkSupport::_IEllipse2dAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3225)
inline _bstr_t TGFrameworkSupport::_IEllipse2dAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3226)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IEllipse2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3227)
inline long TGFrameworkSupport::_IEllipse2dAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3228)
inline _bstr_t TGFrameworkSupport::_IEllipse2dAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3229)
inline IDispatchPtr TGFrameworkSupport::_IEllipse2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3230)
inline long TGFrameworkSupport::_IEllipse2dAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3231)
inline long TGFrameworkSupport::_IEllipse2dAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3232)
inline _bstr_t TGFrameworkSupport::_IEllipse2dAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3233)
inline IDispatchPtr TGFrameworkSupport::_IEllipse2dAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3234)
inline HRESULT TGFrameworkSupport::_IEllipse2dAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3235)
inline HRESULT TGFrameworkSupport::_IEllipse2dAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3236)
inline HRESULT TGFrameworkSupport::_IEllipse2dAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3237)
inline HRESULT TGFrameworkSupport::_IEllipse2dAuto::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    HRESULT _hr = raw_Move(XFrom, YFrom, XTo, YTo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3238)
inline HRESULT TGFrameworkSupport::_IEllipse2dAuto::Scale ( double Factor ) {
    HRESULT _hr = raw_Scale(Factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3239)
inline HRESULT TGFrameworkSupport::_IEllipse2dAuto::Rotate ( double Angle, double x, double y ) {
    HRESULT _hr = raw_Rotate(Angle, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3240)
inline HRESULT TGFrameworkSupport::_IEllipse2dAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3241)
inline IDispatchPtr TGFrameworkSupport::_IEllipse2dAuto::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Duplicate(XDistance, YDistance, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3242)
inline IDispatchPtr TGFrameworkSupport::_IEllipse2dAuto::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Mirror(x1, y1, x2, y2, BooleanCopyFlag, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3243)
inline HRESULT TGFrameworkSupport::_IEllipse2dAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3244)
inline HRESULT TGFrameworkSupport::_IEllipse2dAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3245)
inline HRESULT TGFrameworkSupport::_IEllipse2dAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3246)
inline HRESULT TGFrameworkSupport::_IEllipse2dAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3247)
inline HRESULT TGFrameworkSupport::_IEllipse2dAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3248)
inline void TGFrameworkSupport::_IEllipse2dAuto::PutMajorRadius ( double MajorRadius ) {
    HRESULT _hr = put_MajorRadius(MajorRadius);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3249)
inline double TGFrameworkSupport::_IEllipse2dAuto::GetMajorRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_MajorRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3250)
inline double TGFrameworkSupport::_IEllipse2dAuto::GetMinorRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_MinorRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3251)
inline void TGFrameworkSupport::_IEllipse2dAuto::PutMinorRadius ( double MinorRadius ) {
    HRESULT _hr = put_MinorRadius(MinorRadius);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3252)
inline void TGFrameworkSupport::_IEllipse2dAuto::PutOrientation ( enum Geom2dOrientationConstants Orientation ) {
    HRESULT _hr = put_Orientation(Orientation);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3253)
inline enum TGFrameworkSupport::Geom2dOrientationConstants TGFrameworkSupport::_IEllipse2dAuto::GetOrientation ( ) {
    enum Geom2dOrientationConstants _result;
    HRESULT _hr = get_Orientation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3254)
inline double TGFrameworkSupport::_IEllipse2dAuto::GetRotationAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_RotationAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3255)
inline void TGFrameworkSupport::_IEllipse2dAuto::PutRotationAngle ( double Angle ) {
    HRESULT _hr = put_RotationAngle(Angle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3256)
inline double TGFrameworkSupport::_IEllipse2dAuto::GetMinorMajorRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_MinorMajorRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3257)
inline void TGFrameworkSupport::_IEllipse2dAuto::PutMinorMajorRatio ( double Ratio ) {
    HRESULT _hr = put_MinorMajorRatio(Ratio);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3258)
inline double TGFrameworkSupport::_IEllipse2dAuto::GetCircumference ( ) {
    double _result = 0;
    HRESULT _hr = get_Circumference(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3259)
inline double TGFrameworkSupport::_IEllipse2dAuto::GetArea ( ) {
    double _result = 0;
    HRESULT _hr = get_Area(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3260)
inline HRESULT TGFrameworkSupport::_IEllipse2dAuto::GetCenterPoint ( double * x, double * y ) {
    HRESULT _hr = raw_GetCenterPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3261)
inline HRESULT TGFrameworkSupport::_IEllipse2dAuto::SetCenterPoint ( double x, double y ) {
    HRESULT _hr = raw_SetCenterPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3262)
inline HRESULT TGFrameworkSupport::_IEllipse2dAuto::GetMajorAxis ( double * x, double * y ) {
    HRESULT _hr = raw_GetMajorAxis(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3263)
inline HRESULT TGFrameworkSupport::_IEllipse2dAuto::SetMajorAxis ( double x, double y ) {
    HRESULT _hr = raw_SetMajorAxis(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3264)
inline HRESULT TGFrameworkSupport::_IEllipse2dAuto::GetMinorAxis ( double * x, double * y ) {
    HRESULT _hr = raw_GetMinorAxis(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3265)
inline HRESULT TGFrameworkSupport::_IEllipse2dAuto::SetMinorAxis ( double x, double y ) {
    HRESULT _hr = raw_SetMinorAxis(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3266)
inline HRESULT TGFrameworkSupport::_IEllipse2dAuto::Trim ( double x, double y, IDispatch * CutObj1, const _variant_t & CutObj2 ) {
    HRESULT _hr = raw_Trim(x, y, CutObj1, CutObj2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3267)
inline long TGFrameworkSupport::_IEllipse2dAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3268)
inline HRESULT TGFrameworkSupport::_IEllipse2dAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3269)
inline HRESULT TGFrameworkSupport::_IEllipse2dAuto::SetKeyPoint ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetKeyPoint(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3270)
inline long TGFrameworkSupport::_IEllipse2dAuto::GetSegmentedStyleCount ( ) {
    long _result = 0;
    HRESULT _hr = get_SegmentedStyleCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3271)
inline HRESULT TGFrameworkSupport::_IEllipse2dAuto::AddSegmentedStyle ( double x1, double y1, double x2, double y2, IDispatch * Style ) {
    HRESULT _hr = raw_AddSegmentedStyle(x1, y1, x2, y2, Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3272)
inline HRESULT TGFrameworkSupport::_IEllipse2dAuto::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * Style ) {
    HRESULT _hr = raw_GetSegmentedStyle(Index, x1, y1, x2, y2, Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3273)
inline HRESULT TGFrameworkSupport::_IEllipse2dAuto::SetSegmentedStyle ( long Index, IDispatch * Style ) {
    HRESULT _hr = raw_SetSegmentedStyle(Index, Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3274)
inline HRESULT TGFrameworkSupport::_IEllipse2dAuto::RemoveSegmentedStyle ( long Index ) {
    HRESULT _hr = raw_RemoveSegmentedStyle(Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3275)
inline HRESULT TGFrameworkSupport::_IEllipse2dAuto::RemoveAllSegmentedStyles ( ) {
    HRESULT _hr = raw_RemoveAllSegmentedStyles();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3276)
inline HRESULT TGFrameworkSupport::_IEllipse2dAuto::RemoveAllSegmentedStylesBetween ( double x1, double y1, double x2, double y2 ) {
    HRESULT _hr = raw_RemoveAllSegmentedStylesBetween(x1, y1, x2, y2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3277)
inline IDispatchPtr TGFrameworkSupport::_IEllipse2dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3278)
inline VARIANT_BOOL TGFrameworkSupport::_IEllipse2dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3279)
inline VARIANT_BOOL TGFrameworkSupport::_IEllipse2dAuto::GetShowCurvatureComb ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowCurvatureComb(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3280)
inline void TGFrameworkSupport::_IEllipse2dAuto::PutShowCurvatureComb ( VARIANT_BOOL Show ) {
    HRESULT _hr = put_ShowCurvatureComb(Show);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3281)
inline HRESULT TGFrameworkSupport::_IEllipse2dAuto::SplitAtPoints ( double x1, double y1, double x2, double y2, VARIANT * SplitElement1, VARIANT * SplitElement2 ) {
    HRESULT _hr = raw_SplitAtPoints(x1, y1, x2, y2, SplitElement1, SplitElement2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3282)
inline double TGFrameworkSupport::_IEllipse2dAuto::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface BSplineCurves2d wrapper method implementations
//

#pragma implementation_key(3283)
inline TGFrameworkSupport::BSplineCurve2dPtr TGFrameworkSupport::BSplineCurves2d::Item ( const _variant_t & Index ) {
    struct BSplineCurve2d * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return BSplineCurve2dPtr(_result, false);
}

#pragma implementation_key(3284)
inline TGFramework::ApplicationPtr TGFrameworkSupport::BSplineCurves2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3285)
inline long TGFrameworkSupport::BSplineCurves2d::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3286)
inline IDispatchPtr TGFrameworkSupport::BSplineCurves2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3287)
inline TGFrameworkSupport::BSplineCurve2dPtr TGFrameworkSupport::BSplineCurves2d::AddByPoints ( long Order, long ArraySize, SAFEARRAY * * Array ) {
    struct BSplineCurve2d * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0003\x6005", Order, ArraySize, Array);
    return BSplineCurve2dPtr(_result, false);
}

#pragma implementation_key(3288)
inline TGFrameworkSupport::BSplineCurve2dPtr TGFrameworkSupport::BSplineCurves2d::Add ( long Degree, long NumberOfPoles, SAFEARRAY * * Poles, SAFEARRAY * * Knots, const _variant_t & Weights ) {
    struct BSplineCurve2d * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0003\x6005\x6005\x080c", Degree, NumberOfPoles, Poles, Knots, &Weights);
    return BSplineCurve2dPtr(_result, false);
}

#pragma implementation_key(3289)
inline TGFrameworkSupport::BSplineCurve2dPtr TGFrameworkSupport::BSplineCurves2d::AddByPointsWithCloseOption ( long Order, long ArraySize, SAFEARRAY * * Array, VARIANT_BOOL bCreateTangentiallyClosedCurve ) {
    struct BSplineCurve2d * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0003\x6005\x000b", Order, ArraySize, Array, bCreateTangentiallyClosedCurve);
    return BSplineCurve2dPtr(_result, false);
}

//
// dispinterface BSplineCurve2d wrapper method implementations
//

#pragma implementation_key(3290)
inline TGFrameworkSupport::GeometryStyle2dPtr TGFrameworkSupport::BSplineCurve2d::GetStyle ( ) {
    struct GeometryStyle2d * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return GeometryStyle2dPtr(_result, false);
}

#pragma implementation_key(3291)
inline TGFrameworkSupport::Relationships2dPtr TGFrameworkSupport::BSplineCurve2d::GetRelationships ( ) {
    struct Relationships2d * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return Relationships2dPtr(_result, false);
}

#pragma implementation_key(3292)
inline _bstr_t TGFrameworkSupport::BSplineCurve2d::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3293)
inline void TGFrameworkSupport::BSplineCurve2d::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3294)
inline TGFramework::ApplicationPtr TGFrameworkSupport::BSplineCurve2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x865, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3295)
inline long TGFrameworkSupport::BSplineCurve2d::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x866, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3296)
inline _bstr_t TGFrameworkSupport::BSplineCurve2d::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x867, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3297)
inline IDispatchPtr TGFrameworkSupport::BSplineCurve2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x868, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3298)
inline long TGFrameworkSupport::BSplineCurve2d::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x869, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3299)
inline long TGFrameworkSupport::BSplineCurve2d::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x86b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3300)
inline _bstr_t TGFrameworkSupport::BSplineCurve2d::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x86c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3301)
inline IDispatchPtr TGFrameworkSupport::BSplineCurve2d::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x86d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3302)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::Copy ( ) {
    return _com_dispatch_method(this, 0x6001080a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3303)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::Cut ( ) {
    return _com_dispatch_method(this, 0x6001080b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3304)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::Delete ( ) {
    return _com_dispatch_method(this, 0x6001080c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3305)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    return _com_dispatch_method(this, 0x6001080d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", XFrom, YFrom, XTo, YTo);
}

#pragma implementation_key(3306)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::Scale ( double Factor ) {
    return _com_dispatch_method(this, 0x6001080e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Factor);
}

#pragma implementation_key(3307)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::Rotate ( double Angle, double x, double y ) {
    return _com_dispatch_method(this, 0x6001080f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", Angle, x, y);
}

#pragma implementation_key(3308)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60010811, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(3309)
inline IDispatchPtr TGFrameworkSupport::BSplineCurve2d::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60010812, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &XDistance, &YDistance);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3310)
inline IDispatchPtr TGFrameworkSupport::BSplineCurve2d::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60010813, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x080c", x1, y1, x2, y2, &BooleanCopyFlag);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3311)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::BringToFront ( ) {
    return _com_dispatch_method(this, 0x60010814, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3312)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::BringForward ( ) {
    return _com_dispatch_method(this, 0x60010815, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3313)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::SendToBack ( ) {
    return _com_dispatch_method(this, 0x60010816, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3314)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::SendBackward ( ) {
    return _com_dispatch_method(this, 0x60010817, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3315)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::Select ( ) {
    return _com_dispatch_method(this, 0x60010818, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3316)
inline long TGFrameworkSupport::BSplineCurve2d::GetOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1801, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3317)
inline double TGFrameworkSupport::BSplineCurve2d::GetLength ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1802, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3318)
inline enum TGFrameworkSupport::Geom2dFormConstants TGFrameworkSupport::BSplineCurve2d::GetForm ( ) {
    enum Geom2dFormConstants _result;
    _com_dispatch_method(this, 0x1804, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3319)
inline enum TGFrameworkSupport::Geom2dScopeConstants TGFrameworkSupport::BSplineCurve2d::GetScope ( ) {
    enum Geom2dScopeConstants _result;
    _com_dispatch_method(this, 0x1805, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3320)
inline long TGFrameworkSupport::BSplineCurve2d::GetPoleCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1806, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3321)
inline long TGFrameworkSupport::BSplineCurve2d::GetNodeCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1807, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3322)
inline double TGFrameworkSupport::BSplineCurve2d::GetArea ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1808, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3323)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::GetPole ( long Index, double * x, double * y ) {
    return _com_dispatch_method(this, 0x60011807, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005", Index, x, y);
}

#pragma implementation_key(3324)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::SetPole ( long Index, double x, double y ) {
    return _com_dispatch_method(this, 0x60011808, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005", Index, x, y);
}

#pragma implementation_key(3325)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::GetNode ( long Index, double * x, double * y ) {
    return _com_dispatch_method(this, 0x60011809, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005", Index, x, y);
}

#pragma implementation_key(3326)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::SetNode ( long Index, double x, double y ) {
    return _com_dispatch_method(this, 0x6001180a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005", Index, x, y);
}

#pragma implementation_key(3327)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::DeleteNode ( long Index ) {
    return _com_dispatch_method(this, 0x6001180b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Index);
}

#pragma implementation_key(3328)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::InsertNode ( long Index, double x, double y ) {
    return _com_dispatch_method(this, 0x6001180c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005", Index, x, y);
}

#pragma implementation_key(3329)
inline long TGFrameworkSupport::BSplineCurve2d::GetNearestNode ( double x, double y ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6001180d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005", x, y);
    return _result;
}

#pragma implementation_key(3330)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::GetCentroid ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x6001180e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(3331)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::Trim ( double x, double y, IDispatch * CutObj1, const _variant_t & CutObj2 ) {
    return _com_dispatch_method(this, 0x60012000, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0009\x080c", x, y, CutObj1, &CutObj2);
}

#pragma implementation_key(3332)
inline long TGFrameworkSupport::BSplineCurve2d::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2801, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3333)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x2802, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(3334)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::SetKeyPoint ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x2803, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(3335)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::Extend ( double x, double y, IDispatch * TargetObj ) {
    return _com_dispatch_method(this, 0x60013000, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0009", x, y, TargetObj);
}

#pragma implementation_key(3336)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::CornerTrim ( double xKeep, double yKeep, IDispatch * TargetObj, double xTargetKeep, double yTargetKeep ) {
    return _com_dispatch_method(this, 0x60013001, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0009\x0005\x0005", xKeep, yKeep, TargetObj, xTargetKeep, yTargetKeep);
}

#pragma implementation_key(3337)
inline long TGFrameworkSupport::BSplineCurve2d::GetSegmentedStyleCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3801, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3338)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::AddSegmentedStyle ( double x1, double y1, double x2, double y2, IDispatch * Style ) {
    return _com_dispatch_method(this, 0x3864, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005\x0009", x1, y1, x2, y2, Style);
}

#pragma implementation_key(3339)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * Style ) {
    return _com_dispatch_method(this, 0x3865, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4005\x4009", Index, x1, y1, x2, y2, Style);
}

#pragma implementation_key(3340)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::SetSegmentedStyle ( long Index, IDispatch * Style ) {
    return _com_dispatch_method(this, 0x3866, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0009", Index, Style);
}

#pragma implementation_key(3341)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::RemoveSegmentedStyle ( long Index ) {
    return _com_dispatch_method(this, 0x3867, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Index);
}

#pragma implementation_key(3342)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::RemoveAllSegmentedStyles ( ) {
    return _com_dispatch_method(this, 0x3868, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3343)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::RemoveAllSegmentedStylesBetween ( double x1, double y1, double x2, double y2 ) {
    return _com_dispatch_method(this, 0x3869, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", x1, y1, x2, y2);
}

#pragma implementation_key(3344)
inline IDispatchPtr TGFrameworkSupport::BSplineCurve2d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3345)
inline VARIANT_BOOL TGFrameworkSupport::BSplineCurve2d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(3346)
inline VARIANT_BOOL TGFrameworkSupport::BSplineCurve2d::GetShowCurvatureComb ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x870, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3347)
inline void TGFrameworkSupport::BSplineCurve2d::PutShowCurvatureComb ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x870, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3348)
inline VARIANT_BOOL TGFrameworkSupport::BSplineCurve2d::GetShowControlPolygon ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x871, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3349)
inline void TGFrameworkSupport::BSplineCurve2d::PutShowControlPolygon ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x871, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3350)
inline VARIANT_BOOL TGFrameworkSupport::BSplineCurve2d::GetFlexible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x872, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3351)
inline void TGFrameworkSupport::BSplineCurve2d::PutFlexible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x872, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3352)
inline VARIANT_BOOL TGFrameworkSupport::BSplineCurve2d::GetShapeEdit ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x873, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3353)
inline void TGFrameworkSupport::BSplineCurve2d::PutShapeEdit ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x873, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3354)
inline VARIANT_BOOL TGFrameworkSupport::BSplineCurve2d::GetDerived ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x874, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3355)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::GetClosestPoint ( double x, double y, VARIANT * Point, VARIANT * Parameter ) {
    return _com_dispatch_method(this, 0x875, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x480c\x480c", x, y, Point, Parameter);
}

#pragma implementation_key(3356)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::InsertNodeAtPoint ( double x, double y, VARIANT * InsertedNodeIndex ) {
    return _com_dispatch_method(this, 0x876, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x480c", x, y, InsertedNodeIndex);
}

#pragma implementation_key(3357)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::GetParameterRange ( double * Start, double * End ) {
    return _com_dispatch_method(this, 0x877, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", Start, End);
}

#pragma implementation_key(3358)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::Reparameterize ( ) {
    return _com_dispatch_method(this, 0x878, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3359)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::Evaluate ( double Parameter, VARIANT * Point, VARIANT * FirstDerivative, VARIANT * SecondDerivative, VARIANT * Curvature ) {
    return _com_dispatch_method(this, 0x879, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x480c\x480c\x480c\x480c", Parameter, Point, FirstDerivative, SecondDerivative, Curvature);
}

#pragma implementation_key(3360)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::GetData ( VARIANT * NumberOfNodes, VARIANT * Nodes, VARIANT * NumberOfPoles, VARIANT * Poles, VARIANT * Knots, VARIANT * Rational, VARIANT * Weights, VARIANT * Degree, VARIANT * Form, VARIANT * Scope ) {
    return _com_dispatch_method(this, 0x87a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x480c\x480c\x480c\x480c\x480c\x480c\x480c\x480c\x480c\x480c", NumberOfNodes, Nodes, NumberOfPoles, Poles, Knots, Rational, Weights, Degree, Form, Scope);
}

#pragma implementation_key(3361)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::SetDegree ( long Degree ) {
    return _com_dispatch_method(this, 0x87b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Degree);
}

#pragma implementation_key(3362)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::Simplify ( double Tolerance ) {
    return _com_dispatch_method(this, 0x87c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Tolerance);
}

#pragma implementation_key(3363)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::SplitAtPoint ( double x, double y, VARIANT * OtherSplitElement ) {
    return _com_dispatch_method(this, 0x87d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x480c", x, y, OtherSplitElement);
}

#pragma implementation_key(3364)
inline HRESULT TGFrameworkSupport::BSplineCurve2d::SplitAtPoints ( double x1, double y1, double x2, double y2, VARIANT * SplitElement1, VARIANT * SplitElement2 ) {
    return _com_dispatch_method(this, 0x87e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005\x480c\x480c", x1, y1, x2, y2, SplitElement1, SplitElement2);
}

#pragma implementation_key(3365)
inline VARIANT_BOOL TGFrameworkSupport::BSplineCurve2d::GetIsTangentiallyClosedCurve ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8db, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3366)
inline void TGFrameworkSupport::BSplineCurve2d::PutIsTangentiallyClosedCurve ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8db, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

//
// interface _IBspCurves2dAuto wrapper method implementations
//

#pragma implementation_key(3367)
inline TGFrameworkSupport::BSplineCurve2dPtr TGFrameworkSupport::_IBspCurves2dAuto::Item ( const _variant_t & Index ) {
    struct BSplineCurve2d * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BSplineCurve2dPtr(_result, false);
}

#pragma implementation_key(3368)
inline IUnknownPtr TGFrameworkSupport::_IBspCurves2dAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3369)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IBspCurves2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3370)
inline long TGFrameworkSupport::_IBspCurves2dAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3371)
inline IDispatchPtr TGFrameworkSupport::_IBspCurves2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3372)
inline TGFrameworkSupport::BSplineCurve2dPtr TGFrameworkSupport::_IBspCurves2dAuto::AddByPoints ( long Order, long ArraySize, SAFEARRAY * * Array ) {
    struct BSplineCurve2d * _result = 0;
    HRESULT _hr = raw_AddByPoints(Order, ArraySize, Array, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BSplineCurve2dPtr(_result, false);
}

#pragma implementation_key(3373)
inline TGFrameworkSupport::BSplineCurve2dPtr TGFrameworkSupport::_IBspCurves2dAuto::Add ( long Degree, long NumberOfPoles, SAFEARRAY * * Poles, SAFEARRAY * * Knots, const _variant_t & Weights ) {
    struct BSplineCurve2d * _result = 0;
    HRESULT _hr = raw_Add(Degree, NumberOfPoles, Poles, Knots, Weights, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BSplineCurve2dPtr(_result, false);
}

#pragma implementation_key(3374)
inline TGFrameworkSupport::BSplineCurve2dPtr TGFrameworkSupport::_IBspCurves2dAuto::AddByPointsWithCloseOption ( long Order, long ArraySize, SAFEARRAY * * Array, VARIANT_BOOL bCreateTangentiallyClosedCurve ) {
    struct BSplineCurve2d * _result = 0;
    HRESULT _hr = raw_AddByPointsWithCloseOption(Order, ArraySize, Array, bCreateTangentiallyClosedCurve, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BSplineCurve2dPtr(_result, false);
}

//
// interface _IBspCurve2dAuto wrapper method implementations
//

#pragma implementation_key(3375)
inline TGFrameworkSupport::GeometryStyle2dPtr TGFrameworkSupport::_IBspCurve2dAuto::GetStyle ( ) {
    struct GeometryStyle2d * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return GeometryStyle2dPtr(_result, false);
}

#pragma implementation_key(3376)
inline TGFrameworkSupport::Relationships2dPtr TGFrameworkSupport::_IBspCurve2dAuto::GetRelationships ( ) {
    struct Relationships2d * _result = 0;
    HRESULT _hr = get_Relationships(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relationships2dPtr(_result, false);
}

#pragma implementation_key(3377)
inline _bstr_t TGFrameworkSupport::_IBspCurve2dAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3378)
inline void TGFrameworkSupport::_IBspCurve2dAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3379)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IBspCurve2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3380)
inline long TGFrameworkSupport::_IBspCurve2dAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3381)
inline _bstr_t TGFrameworkSupport::_IBspCurve2dAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3382)
inline IDispatchPtr TGFrameworkSupport::_IBspCurve2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3383)
inline long TGFrameworkSupport::_IBspCurve2dAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3384)
inline long TGFrameworkSupport::_IBspCurve2dAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3385)
inline _bstr_t TGFrameworkSupport::_IBspCurve2dAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3386)
inline IDispatchPtr TGFrameworkSupport::_IBspCurve2dAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3387)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3388)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3389)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3390)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    HRESULT _hr = raw_Move(XFrom, YFrom, XTo, YTo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3391)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::Scale ( double Factor ) {
    HRESULT _hr = raw_Scale(Factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3392)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::Rotate ( double Angle, double x, double y ) {
    HRESULT _hr = raw_Rotate(Angle, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3393)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3394)
inline IDispatchPtr TGFrameworkSupport::_IBspCurve2dAuto::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Duplicate(XDistance, YDistance, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3395)
inline IDispatchPtr TGFrameworkSupport::_IBspCurve2dAuto::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Mirror(x1, y1, x2, y2, BooleanCopyFlag, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3396)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3397)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3398)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3399)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3400)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3401)
inline long TGFrameworkSupport::_IBspCurve2dAuto::GetOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_Order(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3402)
inline double TGFrameworkSupport::_IBspCurve2dAuto::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3403)
inline enum TGFrameworkSupport::Geom2dFormConstants TGFrameworkSupport::_IBspCurve2dAuto::GetForm ( ) {
    enum Geom2dFormConstants _result;
    HRESULT _hr = get_Form(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3404)
inline enum TGFrameworkSupport::Geom2dScopeConstants TGFrameworkSupport::_IBspCurve2dAuto::GetScope ( ) {
    enum Geom2dScopeConstants _result;
    HRESULT _hr = get_Scope(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3405)
inline long TGFrameworkSupport::_IBspCurve2dAuto::GetPoleCount ( ) {
    long _result = 0;
    HRESULT _hr = get_PoleCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3406)
inline long TGFrameworkSupport::_IBspCurve2dAuto::GetNodeCount ( ) {
    long _result = 0;
    HRESULT _hr = get_NodeCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3407)
inline double TGFrameworkSupport::_IBspCurve2dAuto::GetArea ( ) {
    double _result = 0;
    HRESULT _hr = get_Area(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3408)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::GetPole ( long Index, double * x, double * y ) {
    HRESULT _hr = raw_GetPole(Index, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3409)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::SetPole ( long Index, double x, double y ) {
    HRESULT _hr = raw_SetPole(Index, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3410)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::GetNode ( long Index, double * x, double * y ) {
    HRESULT _hr = raw_GetNode(Index, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3411)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::SetNode ( long Index, double x, double y ) {
    HRESULT _hr = raw_SetNode(Index, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3412)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::DeleteNode ( long Index ) {
    HRESULT _hr = raw_DeleteNode(Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3413)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::InsertNode ( long Index, double x, double y ) {
    HRESULT _hr = raw_InsertNode(Index, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3414)
inline long TGFrameworkSupport::_IBspCurve2dAuto::GetNearestNode ( double x, double y ) {
    long _result = 0;
    HRESULT _hr = raw_GetNearestNode(x, y, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3415)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::GetCentroid ( double * x, double * y ) {
    HRESULT _hr = raw_GetCentroid(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3416)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::Trim ( double x, double y, IDispatch * CutObj1, const _variant_t & CutObj2 ) {
    HRESULT _hr = raw_Trim(x, y, CutObj1, CutObj2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3417)
inline long TGFrameworkSupport::_IBspCurve2dAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3418)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3419)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::SetKeyPoint ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetKeyPoint(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3420)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::Extend ( double x, double y, IDispatch * TargetObj ) {
    HRESULT _hr = raw_Extend(x, y, TargetObj);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3421)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::CornerTrim ( double xKeep, double yKeep, IDispatch * TargetObj, double xTargetKeep, double yTargetKeep ) {
    HRESULT _hr = raw_CornerTrim(xKeep, yKeep, TargetObj, xTargetKeep, yTargetKeep);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3422)
inline long TGFrameworkSupport::_IBspCurve2dAuto::GetSegmentedStyleCount ( ) {
    long _result = 0;
    HRESULT _hr = get_SegmentedStyleCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3423)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::AddSegmentedStyle ( double x1, double y1, double x2, double y2, IDispatch * Style ) {
    HRESULT _hr = raw_AddSegmentedStyle(x1, y1, x2, y2, Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3424)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * Style ) {
    HRESULT _hr = raw_GetSegmentedStyle(Index, x1, y1, x2, y2, Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3425)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::SetSegmentedStyle ( long Index, IDispatch * Style ) {
    HRESULT _hr = raw_SetSegmentedStyle(Index, Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3426)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::RemoveSegmentedStyle ( long Index ) {
    HRESULT _hr = raw_RemoveSegmentedStyle(Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3427)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::RemoveAllSegmentedStyles ( ) {
    HRESULT _hr = raw_RemoveAllSegmentedStyles();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3428)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::RemoveAllSegmentedStylesBetween ( double x1, double y1, double x2, double y2 ) {
    HRESULT _hr = raw_RemoveAllSegmentedStylesBetween(x1, y1, x2, y2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3429)
inline IDispatchPtr TGFrameworkSupport::_IBspCurve2dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3430)
inline VARIANT_BOOL TGFrameworkSupport::_IBspCurve2dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3431)
inline VARIANT_BOOL TGFrameworkSupport::_IBspCurve2dAuto::GetShowCurvatureComb ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowCurvatureComb(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3432)
inline void TGFrameworkSupport::_IBspCurve2dAuto::PutShowCurvatureComb ( VARIANT_BOOL Show ) {
    HRESULT _hr = put_ShowCurvatureComb(Show);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3433)
inline VARIANT_BOOL TGFrameworkSupport::_IBspCurve2dAuto::GetShowControlPolygon ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowControlPolygon(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3434)
inline void TGFrameworkSupport::_IBspCurve2dAuto::PutShowControlPolygon ( VARIANT_BOOL Show ) {
    HRESULT _hr = put_ShowControlPolygon(Show);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3435)
inline VARIANT_BOOL TGFrameworkSupport::_IBspCurve2dAuto::GetFlexible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Flexible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3436)
inline void TGFrameworkSupport::_IBspCurve2dAuto::PutFlexible ( VARIANT_BOOL Flexible ) {
    HRESULT _hr = put_Flexible(Flexible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3437)
inline VARIANT_BOOL TGFrameworkSupport::_IBspCurve2dAuto::GetShapeEdit ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShapeEdit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3438)
inline void TGFrameworkSupport::_IBspCurve2dAuto::PutShapeEdit ( VARIANT_BOOL ShapeEdit ) {
    HRESULT _hr = put_ShapeEdit(ShapeEdit);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3439)
inline VARIANT_BOOL TGFrameworkSupport::_IBspCurve2dAuto::GetDerived ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Derived(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3440)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::GetClosestPoint ( double x, double y, VARIANT * Point, VARIANT * Parameter ) {
    HRESULT _hr = raw_GetClosestPoint(x, y, Point, Parameter);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3441)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::InsertNodeAtPoint ( double x, double y, VARIANT * InsertedNodeIndex ) {
    HRESULT _hr = raw_InsertNodeAtPoint(x, y, InsertedNodeIndex);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3442)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::GetParameterRange ( double * Start, double * End ) {
    HRESULT _hr = raw_GetParameterRange(Start, End);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3443)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::Reparameterize ( ) {
    HRESULT _hr = raw_Reparameterize();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3444)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::Evaluate ( double Parameter, VARIANT * Point, VARIANT * FirstDerivative, VARIANT * SecondDerivative, VARIANT * Curvature ) {
    HRESULT _hr = raw_Evaluate(Parameter, Point, FirstDerivative, SecondDerivative, Curvature);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3445)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::GetData ( VARIANT * NumberOfNodes, VARIANT * Nodes, VARIANT * NumberOfPoles, VARIANT * Poles, VARIANT * Knots, VARIANT * Rational, VARIANT * Weights, VARIANT * Degree, VARIANT * Form, VARIANT * Scope ) {
    HRESULT _hr = raw_GetData(NumberOfNodes, Nodes, NumberOfPoles, Poles, Knots, Rational, Weights, Degree, Form, Scope);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3446)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::SetDegree ( long Degree ) {
    HRESULT _hr = raw_SetDegree(Degree);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3447)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::Simplify ( double Tolerance ) {
    HRESULT _hr = raw_Simplify(Tolerance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3448)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::SplitAtPoint ( double x, double y, VARIANT * OtherSplitElement ) {
    HRESULT _hr = raw_SplitAtPoint(x, y, OtherSplitElement);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3449)
inline HRESULT TGFrameworkSupport::_IBspCurve2dAuto::SplitAtPoints ( double x1, double y1, double x2, double y2, VARIANT * SplitElement1, VARIANT * SplitElement2 ) {
    HRESULT _hr = raw_SplitAtPoints(x1, y1, x2, y2, SplitElement1, SplitElement2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3450)
inline VARIANT_BOOL TGFrameworkSupport::_IBspCurve2dAuto::GetIsTangentiallyClosedCurve ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsTangentiallyClosedCurve(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3451)
inline void TGFrameworkSupport::_IBspCurve2dAuto::PutIsTangentiallyClosedCurve ( VARIANT_BOOL pbIsClosedCurve ) {
    HRESULT _hr = put_IsTangentiallyClosedCurve(pbIsClosedCurve);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// dispinterface Points2d wrapper method implementations
//

#pragma implementation_key(3452)
inline TGFrameworkSupport::Point2dPtr TGFrameworkSupport::Points2d::Item ( const _variant_t & Index ) {
    struct Point2d * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return Point2dPtr(_result, false);
}

#pragma implementation_key(3453)
inline TGFramework::ApplicationPtr TGFrameworkSupport::Points2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3454)
inline long TGFrameworkSupport::Points2d::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3455)
inline IDispatchPtr TGFrameworkSupport::Points2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3456)
inline TGFrameworkSupport::Point2dPtr TGFrameworkSupport::Points2d::Add ( double x, double y ) {
    struct Point2d * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005", x, y);
    return Point2dPtr(_result, false);
}

//
// dispinterface Point2d wrapper method implementations
//

#pragma implementation_key(3457)
inline TGFrameworkSupport::GeometryStyle2dPtr TGFrameworkSupport::Point2d::GetStyle ( ) {
    struct GeometryStyle2d * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return GeometryStyle2dPtr(_result, false);
}

#pragma implementation_key(3458)
inline TGFrameworkSupport::Relationships2dPtr TGFrameworkSupport::Point2d::GetRelationships ( ) {
    struct Relationships2d * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return Relationships2dPtr(_result, false);
}

#pragma implementation_key(3459)
inline void TGFrameworkSupport::Point2d::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3460)
inline _bstr_t TGFrameworkSupport::Point2d::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3461)
inline TGFramework::ApplicationPtr TGFrameworkSupport::Point2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3462)
inline long TGFrameworkSupport::Point2d::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1066, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3463)
inline _bstr_t TGFrameworkSupport::Point2d::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1067, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3464)
inline IDispatchPtr TGFrameworkSupport::Point2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1068, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3465)
inline long TGFrameworkSupport::Point2d::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1069, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3466)
inline long TGFrameworkSupport::Point2d::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x106b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3467)
inline _bstr_t TGFrameworkSupport::Point2d::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x106c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3468)
inline IDispatchPtr TGFrameworkSupport::Point2d::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x106d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3469)
inline HRESULT TGFrameworkSupport::Point2d::Copy ( ) {
    return _com_dispatch_method(this, 0x6001100a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3470)
inline HRESULT TGFrameworkSupport::Point2d::Cut ( ) {
    return _com_dispatch_method(this, 0x6001100b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3471)
inline HRESULT TGFrameworkSupport::Point2d::Delete ( ) {
    return _com_dispatch_method(this, 0x6001100c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3472)
inline HRESULT TGFrameworkSupport::Point2d::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    return _com_dispatch_method(this, 0x6001100d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", XFrom, YFrom, XTo, YTo);
}

#pragma implementation_key(3473)
inline HRESULT TGFrameworkSupport::Point2d::Scale ( double Factor ) {
    return _com_dispatch_method(this, 0x6001100e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Factor);
}

#pragma implementation_key(3474)
inline HRESULT TGFrameworkSupport::Point2d::Rotate ( double Angle, double x, double y ) {
    return _com_dispatch_method(this, 0x6001100f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", Angle, x, y);
}

#pragma implementation_key(3475)
inline HRESULT TGFrameworkSupport::Point2d::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60011011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(3476)
inline IDispatchPtr TGFrameworkSupport::Point2d::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60011012, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &XDistance, &YDistance);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3477)
inline IDispatchPtr TGFrameworkSupport::Point2d::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60011013, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x080c", x1, y1, x2, y2, &BooleanCopyFlag);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3478)
inline HRESULT TGFrameworkSupport::Point2d::BringToFront ( ) {
    return _com_dispatch_method(this, 0x60011014, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3479)
inline HRESULT TGFrameworkSupport::Point2d::BringForward ( ) {
    return _com_dispatch_method(this, 0x60011015, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3480)
inline HRESULT TGFrameworkSupport::Point2d::SendToBack ( ) {
    return _com_dispatch_method(this, 0x60011016, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3481)
inline HRESULT TGFrameworkSupport::Point2d::SendBackward ( ) {
    return _com_dispatch_method(this, 0x60011017, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3482)
inline HRESULT TGFrameworkSupport::Point2d::Select ( ) {
    return _com_dispatch_method(this, 0x60011018, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3483)
inline void TGFrameworkSupport::Point2d::Putx ( double _arg1 ) {
    _com_dispatch_method(this, 0x3000, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3484)
inline double TGFrameworkSupport::Point2d::Getx ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3000, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3485)
inline void TGFrameworkSupport::Point2d::Puty ( double _arg1 ) {
    _com_dispatch_method(this, 0x3001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3486)
inline double TGFrameworkSupport::Point2d::Gety ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3001, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3487)
inline HRESULT TGFrameworkSupport::Point2d::GetPoint ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x60013004, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(3488)
inline HRESULT TGFrameworkSupport::Point2d::SetPoint ( double x, double y ) {
    return _com_dispatch_method(this, 0x60013005, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(3489)
inline long TGFrameworkSupport::Point2d::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3490)
inline HRESULT TGFrameworkSupport::Point2d::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x4002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(3491)
inline HRESULT TGFrameworkSupport::Point2d::SetKeyPoint ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x4003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(3492)
inline long TGFrameworkSupport::Point2d::GetSegmentedStyleCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3493)
inline HRESULT TGFrameworkSupport::Point2d::AddSegmentedStyle ( double x1, double y1, double x2, double y2, IDispatch * Style ) {
    return _com_dispatch_method(this, 0x5064, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005\x0009", x1, y1, x2, y2, Style);
}

#pragma implementation_key(3494)
inline HRESULT TGFrameworkSupport::Point2d::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * Style ) {
    return _com_dispatch_method(this, 0x5065, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4005\x4009", Index, x1, y1, x2, y2, Style);
}

#pragma implementation_key(3495)
inline HRESULT TGFrameworkSupport::Point2d::SetSegmentedStyle ( long Index, IDispatch * Style ) {
    return _com_dispatch_method(this, 0x5066, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0009", Index, Style);
}

#pragma implementation_key(3496)
inline HRESULT TGFrameworkSupport::Point2d::RemoveSegmentedStyle ( long Index ) {
    return _com_dispatch_method(this, 0x5067, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Index);
}

#pragma implementation_key(3497)
inline HRESULT TGFrameworkSupport::Point2d::RemoveAllSegmentedStyles ( ) {
    return _com_dispatch_method(this, 0x5068, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3498)
inline HRESULT TGFrameworkSupport::Point2d::RemoveAllSegmentedStylesBetween ( double x1, double y1, double x2, double y2 ) {
    return _com_dispatch_method(this, 0x5069, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", x1, y1, x2, y2);
}

#pragma implementation_key(3499)
inline IDispatchPtr TGFrameworkSupport::Point2d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3500)
inline VARIANT_BOOL TGFrameworkSupport::Point2d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _IPoints2dAuto wrapper method implementations
//

#pragma implementation_key(3501)
inline TGFrameworkSupport::Point2dPtr TGFrameworkSupport::_IPoints2dAuto::Item ( const _variant_t & Index ) {
    struct Point2d * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Point2dPtr(_result, false);
}

#pragma implementation_key(3502)
inline IUnknownPtr TGFrameworkSupport::_IPoints2dAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3503)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IPoints2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3504)
inline long TGFrameworkSupport::_IPoints2dAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3505)
inline IDispatchPtr TGFrameworkSupport::_IPoints2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3506)
inline TGFrameworkSupport::Point2dPtr TGFrameworkSupport::_IPoints2dAuto::Add ( double x, double y ) {
    struct Point2d * _result = 0;
    HRESULT _hr = raw_Add(x, y, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Point2dPtr(_result, false);
}

//
// interface _IPoint2dAuto wrapper method implementations
//

#pragma implementation_key(3507)
inline TGFrameworkSupport::GeometryStyle2dPtr TGFrameworkSupport::_IPoint2dAuto::GetStyle ( ) {
    struct GeometryStyle2d * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return GeometryStyle2dPtr(_result, false);
}

#pragma implementation_key(3508)
inline TGFrameworkSupport::Relationships2dPtr TGFrameworkSupport::_IPoint2dAuto::GetRelationships ( ) {
    struct Relationships2d * _result = 0;
    HRESULT _hr = get_Relationships(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relationships2dPtr(_result, false);
}

#pragma implementation_key(3509)
inline void TGFrameworkSupport::_IPoint2dAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3510)
inline _bstr_t TGFrameworkSupport::_IPoint2dAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3511)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IPoint2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3512)
inline long TGFrameworkSupport::_IPoint2dAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3513)
inline _bstr_t TGFrameworkSupport::_IPoint2dAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3514)
inline IDispatchPtr TGFrameworkSupport::_IPoint2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3515)
inline long TGFrameworkSupport::_IPoint2dAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3516)
inline long TGFrameworkSupport::_IPoint2dAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3517)
inline _bstr_t TGFrameworkSupport::_IPoint2dAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3518)
inline IDispatchPtr TGFrameworkSupport::_IPoint2dAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3519)
inline HRESULT TGFrameworkSupport::_IPoint2dAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3520)
inline HRESULT TGFrameworkSupport::_IPoint2dAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3521)
inline HRESULT TGFrameworkSupport::_IPoint2dAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3522)
inline HRESULT TGFrameworkSupport::_IPoint2dAuto::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    HRESULT _hr = raw_Move(XFrom, YFrom, XTo, YTo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3523)
inline HRESULT TGFrameworkSupport::_IPoint2dAuto::Scale ( double Factor ) {
    HRESULT _hr = raw_Scale(Factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3524)
inline HRESULT TGFrameworkSupport::_IPoint2dAuto::Rotate ( double Angle, double x, double y ) {
    HRESULT _hr = raw_Rotate(Angle, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3525)
inline HRESULT TGFrameworkSupport::_IPoint2dAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3526)
inline IDispatchPtr TGFrameworkSupport::_IPoint2dAuto::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Duplicate(XDistance, YDistance, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3527)
inline IDispatchPtr TGFrameworkSupport::_IPoint2dAuto::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Mirror(x1, y1, x2, y2, BooleanCopyFlag, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3528)
inline HRESULT TGFrameworkSupport::_IPoint2dAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3529)
inline HRESULT TGFrameworkSupport::_IPoint2dAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3530)
inline HRESULT TGFrameworkSupport::_IPoint2dAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3531)
inline HRESULT TGFrameworkSupport::_IPoint2dAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3532)
inline HRESULT TGFrameworkSupport::_IPoint2dAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3533)
inline void TGFrameworkSupport::_IPoint2dAuto::Putx ( double x ) {
    HRESULT _hr = put_x(x);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3534)
inline double TGFrameworkSupport::_IPoint2dAuto::Getx ( ) {
    double _result = 0;
    HRESULT _hr = get_x(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3535)
inline void TGFrameworkSupport::_IPoint2dAuto::Puty ( double y ) {
    HRESULT _hr = put_y(y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3536)
inline double TGFrameworkSupport::_IPoint2dAuto::Gety ( ) {
    double _result = 0;
    HRESULT _hr = get_y(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3537)
inline HRESULT TGFrameworkSupport::_IPoint2dAuto::GetPoint ( double * x, double * y ) {
    HRESULT _hr = raw_GetPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3538)
inline HRESULT TGFrameworkSupport::_IPoint2dAuto::SetPoint ( double x, double y ) {
    HRESULT _hr = raw_SetPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3539)
inline long TGFrameworkSupport::_IPoint2dAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3540)
inline HRESULT TGFrameworkSupport::_IPoint2dAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3541)
inline HRESULT TGFrameworkSupport::_IPoint2dAuto::SetKeyPoint ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetKeyPoint(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3542)
inline long TGFrameworkSupport::_IPoint2dAuto::GetSegmentedStyleCount ( ) {
    long _result = 0;
    HRESULT _hr = get_SegmentedStyleCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3543)
inline HRESULT TGFrameworkSupport::_IPoint2dAuto::AddSegmentedStyle ( double x1, double y1, double x2, double y2, IDispatch * Style ) {
    HRESULT _hr = raw_AddSegmentedStyle(x1, y1, x2, y2, Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3544)
inline HRESULT TGFrameworkSupport::_IPoint2dAuto::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * Style ) {
    HRESULT _hr = raw_GetSegmentedStyle(Index, x1, y1, x2, y2, Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3545)
inline HRESULT TGFrameworkSupport::_IPoint2dAuto::SetSegmentedStyle ( long Index, IDispatch * Style ) {
    HRESULT _hr = raw_SetSegmentedStyle(Index, Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3546)
inline HRESULT TGFrameworkSupport::_IPoint2dAuto::RemoveSegmentedStyle ( long Index ) {
    HRESULT _hr = raw_RemoveSegmentedStyle(Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3547)
inline HRESULT TGFrameworkSupport::_IPoint2dAuto::RemoveAllSegmentedStyles ( ) {
    HRESULT _hr = raw_RemoveAllSegmentedStyles();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3548)
inline HRESULT TGFrameworkSupport::_IPoint2dAuto::RemoveAllSegmentedStylesBetween ( double x1, double y1, double x2, double y2 ) {
    HRESULT _hr = raw_RemoveAllSegmentedStylesBetween(x1, y1, x2, y2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3549)
inline IDispatchPtr TGFrameworkSupport::_IPoint2dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3550)
inline VARIANT_BOOL TGFrameworkSupport::_IPoint2dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface EllipticalArcs2d wrapper method implementations
//

#pragma implementation_key(3551)
inline TGFrameworkSupport::EllipticalArc2dPtr TGFrameworkSupport::EllipticalArcs2d::Item ( const _variant_t & Index ) {
    struct EllipticalArc2d * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return EllipticalArc2dPtr(_result, false);
}

#pragma implementation_key(3552)
inline TGFramework::ApplicationPtr TGFrameworkSupport::EllipticalArcs2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3553)
inline long TGFrameworkSupport::EllipticalArcs2d::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3554)
inline IDispatchPtr TGFrameworkSupport::EllipticalArcs2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3555)
inline TGFrameworkSupport::EllipticalArc2dPtr TGFrameworkSupport::EllipticalArcs2d::AddByCenter ( double xCenter, double yCenter, double xMajorAxis, double yMajorAxis, double Ratio, enum Geom2dOrientationConstants Orientation, double StartAngle, double EndAngle ) {
    struct EllipticalArc2d * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0003\x0005\x0005", xCenter, yCenter, xMajorAxis, yMajorAxis, Ratio, Orientation, StartAngle, EndAngle);
    return EllipticalArc2dPtr(_result, false);
}

#pragma implementation_key(3556)
inline TGFrameworkSupport::EllipticalArc2dPtr TGFrameworkSupport::EllipticalArcs2d::AddByStartEndEllipse ( double StartAngle, double EndAngle, struct Ellipse2d * Ellipse ) {
    struct EllipticalArc2d * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0009", StartAngle, EndAngle, Ellipse);
    return EllipticalArc2dPtr(_result, false);
}

//
// dispinterface EllipticalArc2d wrapper method implementations
//

#pragma implementation_key(3557)
inline TGFrameworkSupport::GeometryStyle2dPtr TGFrameworkSupport::EllipticalArc2d::GetStyle ( ) {
    struct GeometryStyle2d * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return GeometryStyle2dPtr(_result, false);
}

#pragma implementation_key(3558)
inline TGFrameworkSupport::Relationships2dPtr TGFrameworkSupport::EllipticalArc2d::GetRelationships ( ) {
    struct Relationships2d * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return Relationships2dPtr(_result, false);
}

#pragma implementation_key(3559)
inline void TGFrameworkSupport::EllipticalArc2d::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3560)
inline _bstr_t TGFrameworkSupport::EllipticalArc2d::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3561)
inline TGFramework::ApplicationPtr TGFrameworkSupport::EllipticalArc2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x865, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3562)
inline long TGFrameworkSupport::EllipticalArc2d::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x866, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3563)
inline _bstr_t TGFrameworkSupport::EllipticalArc2d::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x867, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3564)
inline IDispatchPtr TGFrameworkSupport::EllipticalArc2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x868, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3565)
inline long TGFrameworkSupport::EllipticalArc2d::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x869, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3566)
inline long TGFrameworkSupport::EllipticalArc2d::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x86b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3567)
inline _bstr_t TGFrameworkSupport::EllipticalArc2d::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x86c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3568)
inline IDispatchPtr TGFrameworkSupport::EllipticalArc2d::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x86d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3569)
inline HRESULT TGFrameworkSupport::EllipticalArc2d::Copy ( ) {
    return _com_dispatch_method(this, 0x6001080a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3570)
inline HRESULT TGFrameworkSupport::EllipticalArc2d::Cut ( ) {
    return _com_dispatch_method(this, 0x6001080b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3571)
inline HRESULT TGFrameworkSupport::EllipticalArc2d::Delete ( ) {
    return _com_dispatch_method(this, 0x6001080c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3572)
inline HRESULT TGFrameworkSupport::EllipticalArc2d::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    return _com_dispatch_method(this, 0x6001080d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", XFrom, YFrom, XTo, YTo);
}

#pragma implementation_key(3573)
inline HRESULT TGFrameworkSupport::EllipticalArc2d::Scale ( double Factor ) {
    return _com_dispatch_method(this, 0x6001080e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Factor);
}

#pragma implementation_key(3574)
inline HRESULT TGFrameworkSupport::EllipticalArc2d::Rotate ( double Angle, double x, double y ) {
    return _com_dispatch_method(this, 0x6001080f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", Angle, x, y);
}

#pragma implementation_key(3575)
inline HRESULT TGFrameworkSupport::EllipticalArc2d::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60010811, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(3576)
inline IDispatchPtr TGFrameworkSupport::EllipticalArc2d::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60010812, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &XDistance, &YDistance);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3577)
inline IDispatchPtr TGFrameworkSupport::EllipticalArc2d::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60010813, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x080c", x1, y1, x2, y2, &BooleanCopyFlag);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3578)
inline HRESULT TGFrameworkSupport::EllipticalArc2d::BringToFront ( ) {
    return _com_dispatch_method(this, 0x60010814, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3579)
inline HRESULT TGFrameworkSupport::EllipticalArc2d::BringForward ( ) {
    return _com_dispatch_method(this, 0x60010815, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3580)
inline HRESULT TGFrameworkSupport::EllipticalArc2d::SendToBack ( ) {
    return _com_dispatch_method(this, 0x60010816, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3581)
inline HRESULT TGFrameworkSupport::EllipticalArc2d::SendBackward ( ) {
    return _com_dispatch_method(this, 0x60010817, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3582)
inline HRESULT TGFrameworkSupport::EllipticalArc2d::Select ( ) {
    return _com_dispatch_method(this, 0x60010818, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3583)
inline void TGFrameworkSupport::EllipticalArc2d::PutMajorRadius ( double _arg1 ) {
    _com_dispatch_method(this, 0x1800, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3584)
inline double TGFrameworkSupport::EllipticalArc2d::GetMajorRadius ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1800, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3585)
inline void TGFrameworkSupport::EllipticalArc2d::PutMinorRadius ( double _arg1 ) {
    _com_dispatch_method(this, 0x1801, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3586)
inline double TGFrameworkSupport::EllipticalArc2d::GetMinorRadius ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1801, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3587)
inline enum TGFrameworkSupport::Geom2dOrientationConstants TGFrameworkSupport::EllipticalArc2d::GetOrientation ( ) {
    enum Geom2dOrientationConstants _result;
    _com_dispatch_method(this, 0x1802, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3588)
inline void TGFrameworkSupport::EllipticalArc2d::PutOrientation ( enum Geom2dOrientationConstants _arg1 ) {
    _com_dispatch_method(this, 0x1802, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3589)
inline void TGFrameworkSupport::EllipticalArc2d::PutStartAngle ( double _arg1 ) {
    _com_dispatch_method(this, 0x1803, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3590)
inline double TGFrameworkSupport::EllipticalArc2d::GetStartAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1803, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3591)
inline double TGFrameworkSupport::EllipticalArc2d::GetSweepAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1804, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3592)
inline void TGFrameworkSupport::EllipticalArc2d::PutSweepAngle ( double _arg1 ) {
    _com_dispatch_method(this, 0x1804, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3593)
inline double TGFrameworkSupport::EllipticalArc2d::GetRotationAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1805, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3594)
inline void TGFrameworkSupport::EllipticalArc2d::PutRotationAngle ( double _arg1 ) {
    _com_dispatch_method(this, 0x1805, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3595)
inline HRESULT TGFrameworkSupport::EllipticalArc2d::GetStartPoint ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x6001180c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(3596)
inline HRESULT TGFrameworkSupport::EllipticalArc2d::SetStartPoint ( double x, double y ) {
    return _com_dispatch_method(this, 0x6001180d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(3597)
inline HRESULT TGFrameworkSupport::EllipticalArc2d::GetEndPoint ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x6001180e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(3598)
inline HRESULT TGFrameworkSupport::EllipticalArc2d::SetEndPoint ( double x, double y ) {
    return _com_dispatch_method(this, 0x6001180f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(3599)
inline HRESULT TGFrameworkSupport::EllipticalArc2d::GetCenterPoint ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x60011810, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(3600)
inline HRESULT TGFrameworkSupport::EllipticalArc2d::SetCenterPoint ( double x, double y ) {
    return _com_dispatch_method(this, 0x60011811, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(3601)
inline HRESULT TGFrameworkSupport::EllipticalArc2d::GetMajorAxis ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x60011812, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(3602)
inline HRESULT TGFrameworkSupport::EllipticalArc2d::SetMajorAxis ( double x, double y ) {
    return _com_dispatch_method(this, 0x60011813, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(3603)
inline HRESULT TGFrameworkSupport::EllipticalArc2d::GetMinorAxis ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x60011814, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(3604)
inline HRESULT TGFrameworkSupport::EllipticalArc2d::SetMinorAxis ( double x, double y ) {
    return _com_dispatch_method(this, 0x60011815, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(3605)
inline HRESULT TGFrameworkSupport::EllipticalArc2d::Trim ( double x, double y, IDispatch * CutObj1, const _variant_t & CutObj2 ) {
    return _com_dispatch_method(this, 0x60012000, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0009\x080c", x, y, CutObj1, &CutObj2);
}

#pragma implementation_key(3606)
inline long TGFrameworkSupport::EllipticalArc2d::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2801, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3607)
inline HRESULT TGFrameworkSupport::EllipticalArc2d::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x2802, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(3608)
inline HRESULT TGFrameworkSupport::EllipticalArc2d::SetKeyPoint ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x2803, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(3609)
inline HRESULT TGFrameworkSupport::EllipticalArc2d::Extend ( double x, double y, IDispatch * TargetObj ) {
    return _com_dispatch_method(this, 0x60013000, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0009", x, y, TargetObj);
}

#pragma implementation_key(3610)
inline HRESULT TGFrameworkSupport::EllipticalArc2d::CornerTrim ( double xKeep, double yKeep, IDispatch * TargetObj, double xTargetKeep, double yTargetKeep ) {
    return _com_dispatch_method(this, 0x60013001, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0009\x0005\x0005", xKeep, yKeep, TargetObj, xTargetKeep, yTargetKeep);
}

#pragma implementation_key(3611)
inline long TGFrameworkSupport::EllipticalArc2d::GetSegmentedStyleCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3801, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3612)
inline HRESULT TGFrameworkSupport::EllipticalArc2d::AddSegmentedStyle ( double x1, double y1, double x2, double y2, IDispatch * Style ) {
    return _com_dispatch_method(this, 0x3864, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005\x0009", x1, y1, x2, y2, Style);
}

#pragma implementation_key(3613)
inline HRESULT TGFrameworkSupport::EllipticalArc2d::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * Style ) {
    return _com_dispatch_method(this, 0x3865, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4005\x4009", Index, x1, y1, x2, y2, Style);
}

#pragma implementation_key(3614)
inline HRESULT TGFrameworkSupport::EllipticalArc2d::SetSegmentedStyle ( long Index, IDispatch * Style ) {
    return _com_dispatch_method(this, 0x3866, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0009", Index, Style);
}

#pragma implementation_key(3615)
inline HRESULT TGFrameworkSupport::EllipticalArc2d::RemoveSegmentedStyle ( long Index ) {
    return _com_dispatch_method(this, 0x3867, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Index);
}

#pragma implementation_key(3616)
inline HRESULT TGFrameworkSupport::EllipticalArc2d::RemoveAllSegmentedStyles ( ) {
    return _com_dispatch_method(this, 0x3868, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3617)
inline HRESULT TGFrameworkSupport::EllipticalArc2d::RemoveAllSegmentedStylesBetween ( double x1, double y1, double x2, double y2 ) {
    return _com_dispatch_method(this, 0x3869, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", x1, y1, x2, y2);
}

#pragma implementation_key(3618)
inline IDispatchPtr TGFrameworkSupport::EllipticalArc2d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3619)
inline VARIANT_BOOL TGFrameworkSupport::EllipticalArc2d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(3620)
inline VARIANT_BOOL TGFrameworkSupport::EllipticalArc2d::GetShowCurvatureComb ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x870, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3621)
inline void TGFrameworkSupport::EllipticalArc2d::PutShowCurvatureComb ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x870, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(3622)
inline HRESULT TGFrameworkSupport::EllipticalArc2d::SplitAtPoint ( double x, double y, VARIANT * OtherSplitElement ) {
    return _com_dispatch_method(this, 0x871, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x480c", x, y, OtherSplitElement);
}

#pragma implementation_key(3623)
inline double TGFrameworkSupport::EllipticalArc2d::GetLength ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1806, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

//
// interface _IEllipArcs2dAuto wrapper method implementations
//

#pragma implementation_key(3624)
inline TGFrameworkSupport::EllipticalArc2dPtr TGFrameworkSupport::_IEllipArcs2dAuto::Item ( const _variant_t & Index ) {
    struct EllipticalArc2d * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return EllipticalArc2dPtr(_result, false);
}

#pragma implementation_key(3625)
inline IUnknownPtr TGFrameworkSupport::_IEllipArcs2dAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3626)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IEllipArcs2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3627)
inline long TGFrameworkSupport::_IEllipArcs2dAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3628)
inline IDispatchPtr TGFrameworkSupport::_IEllipArcs2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3629)
inline TGFrameworkSupport::EllipticalArc2dPtr TGFrameworkSupport::_IEllipArcs2dAuto::AddByCenter ( double xCenter, double yCenter, double xMajorAxis, double yMajorAxis, double Ratio, enum Geom2dOrientationConstants Orientation, double StartAngle, double EndAngle ) {
    struct EllipticalArc2d * _result = 0;
    HRESULT _hr = raw_AddByCenter(xCenter, yCenter, xMajorAxis, yMajorAxis, Ratio, Orientation, StartAngle, EndAngle, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return EllipticalArc2dPtr(_result, false);
}

#pragma implementation_key(3630)
inline TGFrameworkSupport::EllipticalArc2dPtr TGFrameworkSupport::_IEllipArcs2dAuto::AddByStartEndEllipse ( double StartAngle, double EndAngle, struct Ellipse2d * Ellipse ) {
    struct EllipticalArc2d * _result = 0;
    HRESULT _hr = raw_AddByStartEndEllipse(StartAngle, EndAngle, Ellipse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return EllipticalArc2dPtr(_result, false);
}

//
// interface _IEllipArc2dAuto wrapper method implementations
//

#pragma implementation_key(3631)
inline TGFrameworkSupport::GeometryStyle2dPtr TGFrameworkSupport::_IEllipArc2dAuto::GetStyle ( ) {
    struct GeometryStyle2d * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return GeometryStyle2dPtr(_result, false);
}

#pragma implementation_key(3632)
inline TGFrameworkSupport::Relationships2dPtr TGFrameworkSupport::_IEllipArc2dAuto::GetRelationships ( ) {
    struct Relationships2d * _result = 0;
    HRESULT _hr = get_Relationships(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relationships2dPtr(_result, false);
}

#pragma implementation_key(3633)
inline void TGFrameworkSupport::_IEllipArc2dAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3634)
inline _bstr_t TGFrameworkSupport::_IEllipArc2dAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3635)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IEllipArc2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3636)
inline long TGFrameworkSupport::_IEllipArc2dAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3637)
inline _bstr_t TGFrameworkSupport::_IEllipArc2dAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3638)
inline IDispatchPtr TGFrameworkSupport::_IEllipArc2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3639)
inline long TGFrameworkSupport::_IEllipArc2dAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3640)
inline long TGFrameworkSupport::_IEllipArc2dAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3641)
inline _bstr_t TGFrameworkSupport::_IEllipArc2dAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3642)
inline IDispatchPtr TGFrameworkSupport::_IEllipArc2dAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3643)
inline HRESULT TGFrameworkSupport::_IEllipArc2dAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3644)
inline HRESULT TGFrameworkSupport::_IEllipArc2dAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3645)
inline HRESULT TGFrameworkSupport::_IEllipArc2dAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3646)
inline HRESULT TGFrameworkSupport::_IEllipArc2dAuto::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    HRESULT _hr = raw_Move(XFrom, YFrom, XTo, YTo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3647)
inline HRESULT TGFrameworkSupport::_IEllipArc2dAuto::Scale ( double Factor ) {
    HRESULT _hr = raw_Scale(Factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3648)
inline HRESULT TGFrameworkSupport::_IEllipArc2dAuto::Rotate ( double Angle, double x, double y ) {
    HRESULT _hr = raw_Rotate(Angle, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3649)
inline HRESULT TGFrameworkSupport::_IEllipArc2dAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3650)
inline IDispatchPtr TGFrameworkSupport::_IEllipArc2dAuto::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Duplicate(XDistance, YDistance, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3651)
inline IDispatchPtr TGFrameworkSupport::_IEllipArc2dAuto::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Mirror(x1, y1, x2, y2, BooleanCopyFlag, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3652)
inline HRESULT TGFrameworkSupport::_IEllipArc2dAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3653)
inline HRESULT TGFrameworkSupport::_IEllipArc2dAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3654)
inline HRESULT TGFrameworkSupport::_IEllipArc2dAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3655)
inline HRESULT TGFrameworkSupport::_IEllipArc2dAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3656)
inline HRESULT TGFrameworkSupport::_IEllipArc2dAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3657)
inline void TGFrameworkSupport::_IEllipArc2dAuto::PutMajorRadius ( double Radius ) {
    HRESULT _hr = put_MajorRadius(Radius);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3658)
inline double TGFrameworkSupport::_IEllipArc2dAuto::GetMajorRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_MajorRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3659)
inline void TGFrameworkSupport::_IEllipArc2dAuto::PutMinorRadius ( double Radius ) {
    HRESULT _hr = put_MinorRadius(Radius);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3660)
inline double TGFrameworkSupport::_IEllipArc2dAuto::GetMinorRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_MinorRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3661)
inline enum TGFrameworkSupport::Geom2dOrientationConstants TGFrameworkSupport::_IEllipArc2dAuto::GetOrientation ( ) {
    enum Geom2dOrientationConstants _result;
    HRESULT _hr = get_Orientation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3662)
inline void TGFrameworkSupport::_IEllipArc2dAuto::PutOrientation ( enum Geom2dOrientationConstants Orientation ) {
    HRESULT _hr = put_Orientation(Orientation);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3663)
inline void TGFrameworkSupport::_IEllipArc2dAuto::PutStartAngle ( double Angle ) {
    HRESULT _hr = put_StartAngle(Angle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3664)
inline double TGFrameworkSupport::_IEllipArc2dAuto::GetStartAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_StartAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3665)
inline double TGFrameworkSupport::_IEllipArc2dAuto::GetSweepAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_SweepAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3666)
inline void TGFrameworkSupport::_IEllipArc2dAuto::PutSweepAngle ( double Angle ) {
    HRESULT _hr = put_SweepAngle(Angle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3667)
inline double TGFrameworkSupport::_IEllipArc2dAuto::GetRotationAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_RotationAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3668)
inline void TGFrameworkSupport::_IEllipArc2dAuto::PutRotationAngle ( double Angle ) {
    HRESULT _hr = put_RotationAngle(Angle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3669)
inline HRESULT TGFrameworkSupport::_IEllipArc2dAuto::GetStartPoint ( double * x, double * y ) {
    HRESULT _hr = raw_GetStartPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3670)
inline HRESULT TGFrameworkSupport::_IEllipArc2dAuto::SetStartPoint ( double x, double y ) {
    HRESULT _hr = raw_SetStartPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3671)
inline HRESULT TGFrameworkSupport::_IEllipArc2dAuto::GetEndPoint ( double * x, double * y ) {
    HRESULT _hr = raw_GetEndPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3672)
inline HRESULT TGFrameworkSupport::_IEllipArc2dAuto::SetEndPoint ( double x, double y ) {
    HRESULT _hr = raw_SetEndPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3673)
inline HRESULT TGFrameworkSupport::_IEllipArc2dAuto::GetCenterPoint ( double * x, double * y ) {
    HRESULT _hr = raw_GetCenterPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3674)
inline HRESULT TGFrameworkSupport::_IEllipArc2dAuto::SetCenterPoint ( double x, double y ) {
    HRESULT _hr = raw_SetCenterPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3675)
inline HRESULT TGFrameworkSupport::_IEllipArc2dAuto::GetMajorAxis ( double * x, double * y ) {
    HRESULT _hr = raw_GetMajorAxis(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3676)
inline HRESULT TGFrameworkSupport::_IEllipArc2dAuto::SetMajorAxis ( double x, double y ) {
    HRESULT _hr = raw_SetMajorAxis(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3677)
inline HRESULT TGFrameworkSupport::_IEllipArc2dAuto::GetMinorAxis ( double * x, double * y ) {
    HRESULT _hr = raw_GetMinorAxis(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3678)
inline HRESULT TGFrameworkSupport::_IEllipArc2dAuto::SetMinorAxis ( double x, double y ) {
    HRESULT _hr = raw_SetMinorAxis(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3679)
inline HRESULT TGFrameworkSupport::_IEllipArc2dAuto::Trim ( double x, double y, IDispatch * CutObj1, const _variant_t & CutObj2 ) {
    HRESULT _hr = raw_Trim(x, y, CutObj1, CutObj2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3680)
inline long TGFrameworkSupport::_IEllipArc2dAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3681)
inline HRESULT TGFrameworkSupport::_IEllipArc2dAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3682)
inline HRESULT TGFrameworkSupport::_IEllipArc2dAuto::SetKeyPoint ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetKeyPoint(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3683)
inline HRESULT TGFrameworkSupport::_IEllipArc2dAuto::Extend ( double x, double y, IDispatch * TargetObj ) {
    HRESULT _hr = raw_Extend(x, y, TargetObj);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3684)
inline HRESULT TGFrameworkSupport::_IEllipArc2dAuto::CornerTrim ( double xKeep, double yKeep, IDispatch * TargetObj, double xTargetKeep, double yTargetKeep ) {
    HRESULT _hr = raw_CornerTrim(xKeep, yKeep, TargetObj, xTargetKeep, yTargetKeep);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3685)
inline long TGFrameworkSupport::_IEllipArc2dAuto::GetSegmentedStyleCount ( ) {
    long _result = 0;
    HRESULT _hr = get_SegmentedStyleCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3686)
inline HRESULT TGFrameworkSupport::_IEllipArc2dAuto::AddSegmentedStyle ( double x1, double y1, double x2, double y2, IDispatch * Style ) {
    HRESULT _hr = raw_AddSegmentedStyle(x1, y1, x2, y2, Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3687)
inline HRESULT TGFrameworkSupport::_IEllipArc2dAuto::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * Style ) {
    HRESULT _hr = raw_GetSegmentedStyle(Index, x1, y1, x2, y2, Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3688)
inline HRESULT TGFrameworkSupport::_IEllipArc2dAuto::SetSegmentedStyle ( long Index, IDispatch * Style ) {
    HRESULT _hr = raw_SetSegmentedStyle(Index, Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3689)
inline HRESULT TGFrameworkSupport::_IEllipArc2dAuto::RemoveSegmentedStyle ( long Index ) {
    HRESULT _hr = raw_RemoveSegmentedStyle(Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3690)
inline HRESULT TGFrameworkSupport::_IEllipArc2dAuto::RemoveAllSegmentedStyles ( ) {
    HRESULT _hr = raw_RemoveAllSegmentedStyles();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3691)
inline HRESULT TGFrameworkSupport::_IEllipArc2dAuto::RemoveAllSegmentedStylesBetween ( double x1, double y1, double x2, double y2 ) {
    HRESULT _hr = raw_RemoveAllSegmentedStylesBetween(x1, y1, x2, y2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3692)
inline IDispatchPtr TGFrameworkSupport::_IEllipArc2dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3693)
inline VARIANT_BOOL TGFrameworkSupport::_IEllipArc2dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3694)
inline VARIANT_BOOL TGFrameworkSupport::_IEllipArc2dAuto::GetShowCurvatureComb ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowCurvatureComb(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3695)
inline void TGFrameworkSupport::_IEllipArc2dAuto::PutShowCurvatureComb ( VARIANT_BOOL Show ) {
    HRESULT _hr = put_ShowCurvatureComb(Show);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3696)
inline HRESULT TGFrameworkSupport::_IEllipArc2dAuto::SplitAtPoint ( double x, double y, VARIANT * OtherSplitElement ) {
    HRESULT _hr = raw_SplitAtPoint(x, y, OtherSplitElement);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3697)
inline double TGFrameworkSupport::_IEllipArc2dAuto::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface Curves2d wrapper method implementations
//

#pragma implementation_key(3698)
inline TGFramework::ApplicationPtr TGFrameworkSupport::Curves2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3699)
inline long TGFrameworkSupport::Curves2d::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3700)
inline IDispatchPtr TGFrameworkSupport::Curves2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3701)
inline TGFrameworkSupport::Curve2dPtr TGFrameworkSupport::Curves2d::Item ( const _variant_t & Index ) {
    struct Curve2d * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return Curve2dPtr(_result, false);
}

#pragma implementation_key(3702)
inline TGFrameworkSupport::Curve2dPtr TGFrameworkSupport::Curves2d::AddByPoints ( long PointCount, SAFEARRAY * * Points, const _variant_t & FitType, const _variant_t & Closed ) {
    struct Curve2d * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x6005\x080c\x080c", PointCount, Points, &FitType, &Closed);
    return Curve2dPtr(_result, false);
}

//
// dispinterface Curve2d wrapper method implementations
//

#pragma implementation_key(3703)
inline TGFrameworkSupport::GeometryStyle2dPtr TGFrameworkSupport::Curve2d::GetStyle ( ) {
    struct GeometryStyle2d * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return GeometryStyle2dPtr(_result, false);
}

#pragma implementation_key(3704)
inline TGFrameworkSupport::Relationships2dPtr TGFrameworkSupport::Curve2d::GetRelationships ( ) {
    struct Relationships2d * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return Relationships2dPtr(_result, false);
}

#pragma implementation_key(3705)
inline void TGFrameworkSupport::Curve2d::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3706)
inline _bstr_t TGFrameworkSupport::Curve2d::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3707)
inline TGFramework::ApplicationPtr TGFrameworkSupport::Curve2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3708)
inline long TGFrameworkSupport::Curve2d::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1066, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3709)
inline _bstr_t TGFrameworkSupport::Curve2d::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1067, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3710)
inline IDispatchPtr TGFrameworkSupport::Curve2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1068, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3711)
inline long TGFrameworkSupport::Curve2d::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1069, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3712)
inline long TGFrameworkSupport::Curve2d::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x106b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3713)
inline _bstr_t TGFrameworkSupport::Curve2d::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x106c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3714)
inline IDispatchPtr TGFrameworkSupport::Curve2d::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x106d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3715)
inline HRESULT TGFrameworkSupport::Curve2d::Copy ( ) {
    return _com_dispatch_method(this, 0x6001100a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3716)
inline HRESULT TGFrameworkSupport::Curve2d::Cut ( ) {
    return _com_dispatch_method(this, 0x6001100b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3717)
inline HRESULT TGFrameworkSupport::Curve2d::Delete ( ) {
    return _com_dispatch_method(this, 0x6001100c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3718)
inline HRESULT TGFrameworkSupport::Curve2d::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    return _com_dispatch_method(this, 0x6001100d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", XFrom, YFrom, XTo, YTo);
}

#pragma implementation_key(3719)
inline HRESULT TGFrameworkSupport::Curve2d::Scale ( double Factor ) {
    return _com_dispatch_method(this, 0x6001100e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Factor);
}

#pragma implementation_key(3720)
inline HRESULT TGFrameworkSupport::Curve2d::Rotate ( double Angle, double x, double y ) {
    return _com_dispatch_method(this, 0x6001100f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", Angle, x, y);
}

#pragma implementation_key(3721)
inline HRESULT TGFrameworkSupport::Curve2d::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60011011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(3722)
inline IDispatchPtr TGFrameworkSupport::Curve2d::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60011012, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &XDistance, &YDistance);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3723)
inline IDispatchPtr TGFrameworkSupport::Curve2d::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60011013, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x080c", x1, y1, x2, y2, &BooleanCopyFlag);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3724)
inline HRESULT TGFrameworkSupport::Curve2d::BringToFront ( ) {
    return _com_dispatch_method(this, 0x60011014, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3725)
inline HRESULT TGFrameworkSupport::Curve2d::BringForward ( ) {
    return _com_dispatch_method(this, 0x60011015, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3726)
inline HRESULT TGFrameworkSupport::Curve2d::SendToBack ( ) {
    return _com_dispatch_method(this, 0x60011016, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3727)
inline HRESULT TGFrameworkSupport::Curve2d::SendBackward ( ) {
    return _com_dispatch_method(this, 0x60011017, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3728)
inline HRESULT TGFrameworkSupport::Curve2d::Select ( ) {
    return _com_dispatch_method(this, 0x60011018, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3729)
inline double TGFrameworkSupport::Curve2d::GetLength ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3001, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3730)
inline long TGFrameworkSupport::Curve2d::GetVertexCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3002, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3731)
inline enum TGFrameworkSupport::CurveFitTypeConstants TGFrameworkSupport::Curve2d::GetFitType ( ) {
    enum CurveFitTypeConstants _result;
    _com_dispatch_method(this, 0x3003, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3732)
inline void TGFrameworkSupport::Curve2d::PutFitType ( enum CurveFitTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x3003, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(3733)
inline VARIANT_BOOL TGFrameworkSupport::Curve2d::GetClosed ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3004, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3734)
inline double TGFrameworkSupport::Curve2d::GetArea ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3005, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3735)
inline double TGFrameworkSupport::Curve2d::GetFitTolerance ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3006, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3736)
inline void TGFrameworkSupport::Curve2d::PutFitTolerance ( double _arg1 ) {
    _com_dispatch_method(this, 0x3006, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(3737)
inline HRESULT TGFrameworkSupport::Curve2d::GetVertex ( long Index, double * x, double * y ) {
    return _com_dispatch_method(this, 0x3064, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005", Index, x, y);
}

#pragma implementation_key(3738)
inline HRESULT TGFrameworkSupport::Curve2d::SetVertex ( long Index, double x, double y ) {
    return _com_dispatch_method(this, 0x3065, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005", Index, x, y);
}

#pragma implementation_key(3739)
inline HRESULT TGFrameworkSupport::Curve2d::AddVertex ( double x, double y ) {
    return _com_dispatch_method(this, 0x3066, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(3740)
inline HRESULT TGFrameworkSupport::Curve2d::RemoveVertex ( long Index ) {
    return _com_dispatch_method(this, 0x3068, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Index);
}

#pragma implementation_key(3741)
inline HRESULT TGFrameworkSupport::Curve2d::InsertVertex ( long Index, double x, double y ) {
    return _com_dispatch_method(this, 0x3067, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005", Index, x, y);
}

#pragma implementation_key(3742)
inline HRESULT TGFrameworkSupport::Curve2d::GetCentroid ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x3069, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(3743)
inline long TGFrameworkSupport::Curve2d::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3744)
inline HRESULT TGFrameworkSupport::Curve2d::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x4002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(3745)
inline HRESULT TGFrameworkSupport::Curve2d::SetKeyPoint ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x4003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(3746)
inline HRESULT TGFrameworkSupport::Curve2d::Extend ( double x, double y, IDispatch * TargetObj ) {
    return _com_dispatch_method(this, 0x60015000, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0009", x, y, TargetObj);
}

#pragma implementation_key(3747)
inline HRESULT TGFrameworkSupport::Curve2d::CornerTrim ( double xKeep, double yKeep, IDispatch * TargetObj, double xTargetKeep, double yTargetKeep ) {
    return _com_dispatch_method(this, 0x60015001, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0009\x0005\x0005", xKeep, yKeep, TargetObj, xTargetKeep, yTargetKeep);
}

#pragma implementation_key(3748)
inline long TGFrameworkSupport::Curve2d::GetSegmentedStyleCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3749)
inline HRESULT TGFrameworkSupport::Curve2d::AddSegmentedStyle ( double x1, double y1, double x2, double y2, IDispatch * Style ) {
    return _com_dispatch_method(this, 0x6064, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005\x0009", x1, y1, x2, y2, Style);
}

#pragma implementation_key(3750)
inline HRESULT TGFrameworkSupport::Curve2d::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * Style ) {
    return _com_dispatch_method(this, 0x6065, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4005\x4009", Index, x1, y1, x2, y2, Style);
}

#pragma implementation_key(3751)
inline HRESULT TGFrameworkSupport::Curve2d::SetSegmentedStyle ( long Index, IDispatch * Style ) {
    return _com_dispatch_method(this, 0x6066, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0009", Index, Style);
}

#pragma implementation_key(3752)
inline HRESULT TGFrameworkSupport::Curve2d::RemoveSegmentedStyle ( long Index ) {
    return _com_dispatch_method(this, 0x6067, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Index);
}

#pragma implementation_key(3753)
inline HRESULT TGFrameworkSupport::Curve2d::RemoveAllSegmentedStyles ( ) {
    return _com_dispatch_method(this, 0x6068, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3754)
inline HRESULT TGFrameworkSupport::Curve2d::RemoveAllSegmentedStylesBetween ( double x1, double y1, double x2, double y2 ) {
    return _com_dispatch_method(this, 0x6069, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", x1, y1, x2, y2);
}

#pragma implementation_key(3755)
inline IDispatchPtr TGFrameworkSupport::Curve2d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3756)
inline VARIANT_BOOL TGFrameworkSupport::Curve2d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _ICurves2dAuto wrapper method implementations
//

#pragma implementation_key(3757)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_ICurves2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3758)
inline long TGFrameworkSupport::_ICurves2dAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3759)
inline IDispatchPtr TGFrameworkSupport::_ICurves2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3760)
inline TGFrameworkSupport::Curve2dPtr TGFrameworkSupport::_ICurves2dAuto::Item ( const _variant_t & Index ) {
    struct Curve2d * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Curve2dPtr(_result, false);
}

#pragma implementation_key(3761)
inline IUnknownPtr TGFrameworkSupport::_ICurves2dAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3762)
inline TGFrameworkSupport::Curve2dPtr TGFrameworkSupport::_ICurves2dAuto::AddByPoints ( long PointCount, SAFEARRAY * * Points, const _variant_t & FitType, const _variant_t & Closed ) {
    struct Curve2d * _result = 0;
    HRESULT _hr = raw_AddByPoints(PointCount, Points, FitType, Closed, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Curve2dPtr(_result, false);
}

//
// interface _ICurve2dAuto wrapper method implementations
//

#pragma implementation_key(3763)
inline TGFrameworkSupport::GeometryStyle2dPtr TGFrameworkSupport::_ICurve2dAuto::GetStyle ( ) {
    struct GeometryStyle2d * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return GeometryStyle2dPtr(_result, false);
}

#pragma implementation_key(3764)
inline TGFrameworkSupport::Relationships2dPtr TGFrameworkSupport::_ICurve2dAuto::GetRelationships ( ) {
    struct Relationships2d * _result = 0;
    HRESULT _hr = get_Relationships(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relationships2dPtr(_result, false);
}

#pragma implementation_key(3765)
inline void TGFrameworkSupport::_ICurve2dAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3766)
inline _bstr_t TGFrameworkSupport::_ICurve2dAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3767)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_ICurve2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3768)
inline long TGFrameworkSupport::_ICurve2dAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3769)
inline _bstr_t TGFrameworkSupport::_ICurve2dAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3770)
inline IDispatchPtr TGFrameworkSupport::_ICurve2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3771)
inline long TGFrameworkSupport::_ICurve2dAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3772)
inline long TGFrameworkSupport::_ICurve2dAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3773)
inline _bstr_t TGFrameworkSupport::_ICurve2dAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3774)
inline IDispatchPtr TGFrameworkSupport::_ICurve2dAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3775)
inline HRESULT TGFrameworkSupport::_ICurve2dAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3776)
inline HRESULT TGFrameworkSupport::_ICurve2dAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3777)
inline HRESULT TGFrameworkSupport::_ICurve2dAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3778)
inline HRESULT TGFrameworkSupport::_ICurve2dAuto::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    HRESULT _hr = raw_Move(XFrom, YFrom, XTo, YTo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3779)
inline HRESULT TGFrameworkSupport::_ICurve2dAuto::Scale ( double Factor ) {
    HRESULT _hr = raw_Scale(Factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3780)
inline HRESULT TGFrameworkSupport::_ICurve2dAuto::Rotate ( double Angle, double x, double y ) {
    HRESULT _hr = raw_Rotate(Angle, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3781)
inline HRESULT TGFrameworkSupport::_ICurve2dAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3782)
inline IDispatchPtr TGFrameworkSupport::_ICurve2dAuto::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Duplicate(XDistance, YDistance, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3783)
inline IDispatchPtr TGFrameworkSupport::_ICurve2dAuto::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Mirror(x1, y1, x2, y2, BooleanCopyFlag, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3784)
inline HRESULT TGFrameworkSupport::_ICurve2dAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3785)
inline HRESULT TGFrameworkSupport::_ICurve2dAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3786)
inline HRESULT TGFrameworkSupport::_ICurve2dAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3787)
inline HRESULT TGFrameworkSupport::_ICurve2dAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3788)
inline HRESULT TGFrameworkSupport::_ICurve2dAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3789)
inline double TGFrameworkSupport::_ICurve2dAuto::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3790)
inline long TGFrameworkSupport::_ICurve2dAuto::GetVertexCount ( ) {
    long _result = 0;
    HRESULT _hr = get_VertexCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3791)
inline enum TGFrameworkSupport::CurveFitTypeConstants TGFrameworkSupport::_ICurve2dAuto::GetFitType ( ) {
    enum CurveFitTypeConstants _result;
    HRESULT _hr = get_FitType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3792)
inline void TGFrameworkSupport::_ICurve2dAuto::PutFitType ( enum CurveFitTypeConstants Fit ) {
    HRESULT _hr = put_FitType(Fit);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3793)
inline VARIANT_BOOL TGFrameworkSupport::_ICurve2dAuto::GetClosed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Closed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3794)
inline double TGFrameworkSupport::_ICurve2dAuto::GetArea ( ) {
    double _result = 0;
    HRESULT _hr = get_Area(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3795)
inline double TGFrameworkSupport::_ICurve2dAuto::GetFitTolerance ( ) {
    double _result = 0;
    HRESULT _hr = get_FitTolerance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3796)
inline void TGFrameworkSupport::_ICurve2dAuto::PutFitTolerance ( double Tolerance ) {
    HRESULT _hr = put_FitTolerance(Tolerance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3797)
inline HRESULT TGFrameworkSupport::_ICurve2dAuto::GetVertex ( long Index, double * x, double * y ) {
    HRESULT _hr = raw_GetVertex(Index, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3798)
inline HRESULT TGFrameworkSupport::_ICurve2dAuto::SetVertex ( long Index, double x, double y ) {
    HRESULT _hr = raw_SetVertex(Index, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3799)
inline HRESULT TGFrameworkSupport::_ICurve2dAuto::AddVertex ( double x, double y ) {
    HRESULT _hr = raw_AddVertex(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3800)
inline HRESULT TGFrameworkSupport::_ICurve2dAuto::RemoveVertex ( long Index ) {
    HRESULT _hr = raw_RemoveVertex(Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3801)
inline HRESULT TGFrameworkSupport::_ICurve2dAuto::InsertVertex ( long Index, double x, double y ) {
    HRESULT _hr = raw_InsertVertex(Index, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3802)
inline HRESULT TGFrameworkSupport::_ICurve2dAuto::GetCentroid ( double * x, double * y ) {
    HRESULT _hr = raw_GetCentroid(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3803)
inline long TGFrameworkSupport::_ICurve2dAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3804)
inline HRESULT TGFrameworkSupport::_ICurve2dAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3805)
inline HRESULT TGFrameworkSupport::_ICurve2dAuto::SetKeyPoint ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetKeyPoint(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3806)
inline HRESULT TGFrameworkSupport::_ICurve2dAuto::Extend ( double x, double y, IDispatch * TargetObj ) {
    HRESULT _hr = raw_Extend(x, y, TargetObj);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3807)
inline HRESULT TGFrameworkSupport::_ICurve2dAuto::CornerTrim ( double xKeep, double yKeep, IDispatch * TargetObj, double xTargetKeep, double yTargetKeep ) {
    HRESULT _hr = raw_CornerTrim(xKeep, yKeep, TargetObj, xTargetKeep, yTargetKeep);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3808)
inline long TGFrameworkSupport::_ICurve2dAuto::GetSegmentedStyleCount ( ) {
    long _result = 0;
    HRESULT _hr = get_SegmentedStyleCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3809)
inline HRESULT TGFrameworkSupport::_ICurve2dAuto::AddSegmentedStyle ( double x1, double y1, double x2, double y2, IDispatch * Style ) {
    HRESULT _hr = raw_AddSegmentedStyle(x1, y1, x2, y2, Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3810)
inline HRESULT TGFrameworkSupport::_ICurve2dAuto::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * Style ) {
    HRESULT _hr = raw_GetSegmentedStyle(Index, x1, y1, x2, y2, Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3811)
inline HRESULT TGFrameworkSupport::_ICurve2dAuto::SetSegmentedStyle ( long Index, IDispatch * Style ) {
    HRESULT _hr = raw_SetSegmentedStyle(Index, Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3812)
inline HRESULT TGFrameworkSupport::_ICurve2dAuto::RemoveSegmentedStyle ( long Index ) {
    HRESULT _hr = raw_RemoveSegmentedStyle(Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3813)
inline HRESULT TGFrameworkSupport::_ICurve2dAuto::RemoveAllSegmentedStyles ( ) {
    HRESULT _hr = raw_RemoveAllSegmentedStyles();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3814)
inline HRESULT TGFrameworkSupport::_ICurve2dAuto::RemoveAllSegmentedStylesBetween ( double x1, double y1, double x2, double y2 ) {
    HRESULT _hr = raw_RemoveAllSegmentedStylesBetween(x1, y1, x2, y2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3815)
inline IDispatchPtr TGFrameworkSupport::_ICurve2dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3816)
inline VARIANT_BOOL TGFrameworkSupport::_ICurve2dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface LineStrings2d wrapper method implementations
//

#pragma implementation_key(3817)
inline TGFrameworkSupport::LineString2dPtr TGFrameworkSupport::LineStrings2d::Item ( const _variant_t & Index ) {
    struct LineString2d * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return LineString2dPtr(_result, false);
}

#pragma implementation_key(3818)
inline TGFramework::ApplicationPtr TGFrameworkSupport::LineStrings2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3819)
inline long TGFrameworkSupport::LineStrings2d::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3820)
inline IDispatchPtr TGFrameworkSupport::LineStrings2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3821)
inline TGFrameworkSupport::LineString2dPtr TGFrameworkSupport::LineStrings2d::AddByPoints ( long PointCount, SAFEARRAY * * Points ) {
    struct LineString2d * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x6005", PointCount, Points);
    return LineString2dPtr(_result, false);
}

//
// dispinterface LineString2d wrapper method implementations
//

#pragma implementation_key(3822)
inline TGFrameworkSupport::GeometryStyle2dPtr TGFrameworkSupport::LineString2d::GetStyle ( ) {
    struct GeometryStyle2d * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return GeometryStyle2dPtr(_result, false);
}

#pragma implementation_key(3823)
inline void TGFrameworkSupport::LineString2d::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3824)
inline _bstr_t TGFrameworkSupport::LineString2d::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3825)
inline HRESULT TGFrameworkSupport::LineString2d::Drop ( ) {
    return _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3826)
inline TGFramework::ApplicationPtr TGFrameworkSupport::LineString2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3827)
inline long TGFrameworkSupport::LineString2d::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1066, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3828)
inline _bstr_t TGFrameworkSupport::LineString2d::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1067, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3829)
inline IDispatchPtr TGFrameworkSupport::LineString2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1068, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3830)
inline long TGFrameworkSupport::LineString2d::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1069, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3831)
inline long TGFrameworkSupport::LineString2d::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x106b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3832)
inline _bstr_t TGFrameworkSupport::LineString2d::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x106c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3833)
inline IDispatchPtr TGFrameworkSupport::LineString2d::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x106d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3834)
inline HRESULT TGFrameworkSupport::LineString2d::Copy ( ) {
    return _com_dispatch_method(this, 0x6001100a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3835)
inline HRESULT TGFrameworkSupport::LineString2d::Cut ( ) {
    return _com_dispatch_method(this, 0x6001100b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3836)
inline HRESULT TGFrameworkSupport::LineString2d::Delete ( ) {
    return _com_dispatch_method(this, 0x6001100c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3837)
inline HRESULT TGFrameworkSupport::LineString2d::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    return _com_dispatch_method(this, 0x6001100d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", XFrom, YFrom, XTo, YTo);
}

#pragma implementation_key(3838)
inline HRESULT TGFrameworkSupport::LineString2d::Scale ( double Factor ) {
    return _com_dispatch_method(this, 0x6001100e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Factor);
}

#pragma implementation_key(3839)
inline HRESULT TGFrameworkSupport::LineString2d::Rotate ( double Angle, double x, double y ) {
    return _com_dispatch_method(this, 0x6001100f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", Angle, x, y);
}

#pragma implementation_key(3840)
inline HRESULT TGFrameworkSupport::LineString2d::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60011011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(3841)
inline IDispatchPtr TGFrameworkSupport::LineString2d::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60011012, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &XDistance, &YDistance);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3842)
inline IDispatchPtr TGFrameworkSupport::LineString2d::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60011013, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x080c", x1, y1, x2, y2, &BooleanCopyFlag);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3843)
inline HRESULT TGFrameworkSupport::LineString2d::BringToFront ( ) {
    return _com_dispatch_method(this, 0x60011014, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3844)
inline HRESULT TGFrameworkSupport::LineString2d::BringForward ( ) {
    return _com_dispatch_method(this, 0x60011015, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3845)
inline HRESULT TGFrameworkSupport::LineString2d::SendToBack ( ) {
    return _com_dispatch_method(this, 0x60011016, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3846)
inline HRESULT TGFrameworkSupport::LineString2d::SendBackward ( ) {
    return _com_dispatch_method(this, 0x60011017, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3847)
inline HRESULT TGFrameworkSupport::LineString2d::Select ( ) {
    return _com_dispatch_method(this, 0x60011018, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3848)
inline double TGFrameworkSupport::LineString2d::GetLength ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3000, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3849)
inline long TGFrameworkSupport::LineString2d::GetVertexCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3002, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3850)
inline VARIANT_BOOL TGFrameworkSupport::LineString2d::GetClosed ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3003, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3851)
inline double TGFrameworkSupport::LineString2d::GetArea ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3004, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3852)
inline HRESULT TGFrameworkSupport::LineString2d::GetVertices ( long * VertexCount, SAFEARRAY * * Vertices ) {
    return _com_dispatch_method(this, 0x60013004, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6005", VertexCount, Vertices);
}

#pragma implementation_key(3853)
inline HRESULT TGFrameworkSupport::LineString2d::SetVertices ( long VertexCount, SAFEARRAY * * Vertices ) {
    return _com_dispatch_method(this, 0x60013005, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6005", VertexCount, Vertices);
}

#pragma implementation_key(3854)
inline HRESULT TGFrameworkSupport::LineString2d::GetVertex ( long Index, double * x, double * y ) {
    return _com_dispatch_method(this, 0x60013006, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005", Index, x, y);
}

#pragma implementation_key(3855)
inline HRESULT TGFrameworkSupport::LineString2d::SetVertex ( long Index, double x, double y ) {
    return _com_dispatch_method(this, 0x60013007, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005", Index, x, y);
}

#pragma implementation_key(3856)
inline HRESULT TGFrameworkSupport::LineString2d::InsertVertex ( long Index, double x, double y ) {
    return _com_dispatch_method(this, 0x60013008, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005", Index, x, y);
}

#pragma implementation_key(3857)
inline HRESULT TGFrameworkSupport::LineString2d::AddVertex ( double x, double y ) {
    return _com_dispatch_method(this, 0x60013009, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(3858)
inline HRESULT TGFrameworkSupport::LineString2d::RemoveVertex ( long Index ) {
    return _com_dispatch_method(this, 0x6001300a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Index);
}

#pragma implementation_key(3859)
inline HRESULT TGFrameworkSupport::LineString2d::GetCentroid ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x6001300b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(3860)
inline long TGFrameworkSupport::LineString2d::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3861)
inline HRESULT TGFrameworkSupport::LineString2d::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x4002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(3862)
inline HRESULT TGFrameworkSupport::LineString2d::SetKeyPoint ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x4003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(3863)
inline HRESULT TGFrameworkSupport::LineString2d::Extend ( double x, double y, IDispatch * TargetObj ) {
    return _com_dispatch_method(this, 0x60015000, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0009", x, y, TargetObj);
}

#pragma implementation_key(3864)
inline HRESULT TGFrameworkSupport::LineString2d::CornerTrim ( double xKeep, double yKeep, IDispatch * TargetObj, double xTargetKeep, double yTargetKeep ) {
    return _com_dispatch_method(this, 0x60015001, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0009\x0005\x0005", xKeep, yKeep, TargetObj, xTargetKeep, yTargetKeep);
}

#pragma implementation_key(3865)
inline long TGFrameworkSupport::LineString2d::GetSegmentedStyleCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3866)
inline HRESULT TGFrameworkSupport::LineString2d::AddSegmentedStyle ( double x1, double y1, double x2, double y2, IDispatch * Style ) {
    return _com_dispatch_method(this, 0x6064, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005\x0009", x1, y1, x2, y2, Style);
}

#pragma implementation_key(3867)
inline HRESULT TGFrameworkSupport::LineString2d::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * Style ) {
    return _com_dispatch_method(this, 0x6065, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4005\x4009", Index, x1, y1, x2, y2, Style);
}

#pragma implementation_key(3868)
inline HRESULT TGFrameworkSupport::LineString2d::SetSegmentedStyle ( long Index, IDispatch * Style ) {
    return _com_dispatch_method(this, 0x6066, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0009", Index, Style);
}

#pragma implementation_key(3869)
inline HRESULT TGFrameworkSupport::LineString2d::RemoveSegmentedStyle ( long Index ) {
    return _com_dispatch_method(this, 0x6067, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Index);
}

#pragma implementation_key(3870)
inline HRESULT TGFrameworkSupport::LineString2d::RemoveAllSegmentedStyles ( ) {
    return _com_dispatch_method(this, 0x6068, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3871)
inline HRESULT TGFrameworkSupport::LineString2d::RemoveAllSegmentedStylesBetween ( double x1, double y1, double x2, double y2 ) {
    return _com_dispatch_method(this, 0x6069, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", x1, y1, x2, y2);
}

#pragma implementation_key(3872)
inline IDispatchPtr TGFrameworkSupport::LineString2d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3873)
inline VARIANT_BOOL TGFrameworkSupport::LineString2d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _ILineStrings2dAuto wrapper method implementations
//

#pragma implementation_key(3874)
inline TGFrameworkSupport::LineString2dPtr TGFrameworkSupport::_ILineStrings2dAuto::Item ( const _variant_t & Index ) {
    struct LineString2d * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return LineString2dPtr(_result, false);
}

#pragma implementation_key(3875)
inline IUnknownPtr TGFrameworkSupport::_ILineStrings2dAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3876)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_ILineStrings2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3877)
inline long TGFrameworkSupport::_ILineStrings2dAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3878)
inline IDispatchPtr TGFrameworkSupport::_ILineStrings2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3879)
inline TGFrameworkSupport::LineString2dPtr TGFrameworkSupport::_ILineStrings2dAuto::AddByPoints ( long PointCount, SAFEARRAY * * Points ) {
    struct LineString2d * _result = 0;
    HRESULT _hr = raw_AddByPoints(PointCount, Points, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return LineString2dPtr(_result, false);
}

//
// interface _ILineString2dAuto wrapper method implementations
//

#pragma implementation_key(3880)
inline TGFrameworkSupport::GeometryStyle2dPtr TGFrameworkSupport::_ILineString2dAuto::GetStyle ( ) {
    struct GeometryStyle2d * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return GeometryStyle2dPtr(_result, false);
}

#pragma implementation_key(3881)
inline void TGFrameworkSupport::_ILineString2dAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3882)
inline _bstr_t TGFrameworkSupport::_ILineString2dAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3883)
inline HRESULT TGFrameworkSupport::_ILineString2dAuto::Drop ( ) {
    HRESULT _hr = raw_Drop();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3884)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_ILineString2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3885)
inline long TGFrameworkSupport::_ILineString2dAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3886)
inline _bstr_t TGFrameworkSupport::_ILineString2dAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3887)
inline IDispatchPtr TGFrameworkSupport::_ILineString2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3888)
inline long TGFrameworkSupport::_ILineString2dAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3889)
inline long TGFrameworkSupport::_ILineString2dAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3890)
inline _bstr_t TGFrameworkSupport::_ILineString2dAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3891)
inline IDispatchPtr TGFrameworkSupport::_ILineString2dAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3892)
inline HRESULT TGFrameworkSupport::_ILineString2dAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3893)
inline HRESULT TGFrameworkSupport::_ILineString2dAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3894)
inline HRESULT TGFrameworkSupport::_ILineString2dAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3895)
inline HRESULT TGFrameworkSupport::_ILineString2dAuto::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    HRESULT _hr = raw_Move(XFrom, YFrom, XTo, YTo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3896)
inline HRESULT TGFrameworkSupport::_ILineString2dAuto::Scale ( double Factor ) {
    HRESULT _hr = raw_Scale(Factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3897)
inline HRESULT TGFrameworkSupport::_ILineString2dAuto::Rotate ( double Angle, double x, double y ) {
    HRESULT _hr = raw_Rotate(Angle, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3898)
inline HRESULT TGFrameworkSupport::_ILineString2dAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3899)
inline IDispatchPtr TGFrameworkSupport::_ILineString2dAuto::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Duplicate(XDistance, YDistance, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3900)
inline IDispatchPtr TGFrameworkSupport::_ILineString2dAuto::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Mirror(x1, y1, x2, y2, BooleanCopyFlag, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3901)
inline HRESULT TGFrameworkSupport::_ILineString2dAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3902)
inline HRESULT TGFrameworkSupport::_ILineString2dAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3903)
inline HRESULT TGFrameworkSupport::_ILineString2dAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3904)
inline HRESULT TGFrameworkSupport::_ILineString2dAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3905)
inline HRESULT TGFrameworkSupport::_ILineString2dAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3906)
inline double TGFrameworkSupport::_ILineString2dAuto::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3907)
inline long TGFrameworkSupport::_ILineString2dAuto::GetVertexCount ( ) {
    long _result = 0;
    HRESULT _hr = get_VertexCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3908)
inline VARIANT_BOOL TGFrameworkSupport::_ILineString2dAuto::GetClosed ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Closed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3909)
inline double TGFrameworkSupport::_ILineString2dAuto::GetArea ( ) {
    double _result = 0;
    HRESULT _hr = get_Area(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3910)
inline HRESULT TGFrameworkSupport::_ILineString2dAuto::GetVertices ( long * VertexCount, SAFEARRAY * * Vertices ) {
    HRESULT _hr = raw_GetVertices(VertexCount, Vertices);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3911)
inline HRESULT TGFrameworkSupport::_ILineString2dAuto::SetVertices ( long VertexCount, SAFEARRAY * * Vertices ) {
    HRESULT _hr = raw_SetVertices(VertexCount, Vertices);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3912)
inline HRESULT TGFrameworkSupport::_ILineString2dAuto::GetVertex ( long Index, double * x, double * y ) {
    HRESULT _hr = raw_GetVertex(Index, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3913)
inline HRESULT TGFrameworkSupport::_ILineString2dAuto::SetVertex ( long Index, double x, double y ) {
    HRESULT _hr = raw_SetVertex(Index, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3914)
inline HRESULT TGFrameworkSupport::_ILineString2dAuto::InsertVertex ( long Index, double x, double y ) {
    HRESULT _hr = raw_InsertVertex(Index, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3915)
inline HRESULT TGFrameworkSupport::_ILineString2dAuto::AddVertex ( double x, double y ) {
    HRESULT _hr = raw_AddVertex(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3916)
inline HRESULT TGFrameworkSupport::_ILineString2dAuto::RemoveVertex ( long Index ) {
    HRESULT _hr = raw_RemoveVertex(Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3917)
inline HRESULT TGFrameworkSupport::_ILineString2dAuto::GetCentroid ( double * x, double * y ) {
    HRESULT _hr = raw_GetCentroid(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3918)
inline long TGFrameworkSupport::_ILineString2dAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3919)
inline HRESULT TGFrameworkSupport::_ILineString2dAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3920)
inline HRESULT TGFrameworkSupport::_ILineString2dAuto::SetKeyPoint ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetKeyPoint(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3921)
inline HRESULT TGFrameworkSupport::_ILineString2dAuto::Extend ( double x, double y, IDispatch * TargetObj ) {
    HRESULT _hr = raw_Extend(x, y, TargetObj);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3922)
inline HRESULT TGFrameworkSupport::_ILineString2dAuto::CornerTrim ( double xKeep, double yKeep, IDispatch * TargetObj, double xTargetKeep, double yTargetKeep ) {
    HRESULT _hr = raw_CornerTrim(xKeep, yKeep, TargetObj, xTargetKeep, yTargetKeep);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3923)
inline long TGFrameworkSupport::_ILineString2dAuto::GetSegmentedStyleCount ( ) {
    long _result = 0;
    HRESULT _hr = get_SegmentedStyleCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3924)
inline HRESULT TGFrameworkSupport::_ILineString2dAuto::AddSegmentedStyle ( double x1, double y1, double x2, double y2, IDispatch * Style ) {
    HRESULT _hr = raw_AddSegmentedStyle(x1, y1, x2, y2, Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3925)
inline HRESULT TGFrameworkSupport::_ILineString2dAuto::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * Style ) {
    HRESULT _hr = raw_GetSegmentedStyle(Index, x1, y1, x2, y2, Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3926)
inline HRESULT TGFrameworkSupport::_ILineString2dAuto::SetSegmentedStyle ( long Index, IDispatch * Style ) {
    HRESULT _hr = raw_SetSegmentedStyle(Index, Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3927)
inline HRESULT TGFrameworkSupport::_ILineString2dAuto::RemoveSegmentedStyle ( long Index ) {
    HRESULT _hr = raw_RemoveSegmentedStyle(Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3928)
inline HRESULT TGFrameworkSupport::_ILineString2dAuto::RemoveAllSegmentedStyles ( ) {
    HRESULT _hr = raw_RemoveAllSegmentedStyles();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3929)
inline HRESULT TGFrameworkSupport::_ILineString2dAuto::RemoveAllSegmentedStylesBetween ( double x1, double y1, double x2, double y2 ) {
    HRESULT _hr = raw_RemoveAllSegmentedStylesBetween(x1, y1, x2, y2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3930)
inline IDispatchPtr TGFrameworkSupport::_ILineString2dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3931)
inline VARIANT_BOOL TGFrameworkSupport::_ILineString2dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface ComplexStrings2d wrapper method implementations
//

#pragma implementation_key(3932)
inline TGFrameworkSupport::ComplexString2dPtr TGFrameworkSupport::ComplexStrings2d::Item ( const _variant_t & Index ) {
    struct ComplexString2d * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return ComplexString2dPtr(_result, false);
}

#pragma implementation_key(3933)
inline TGFramework::ApplicationPtr TGFrameworkSupport::ComplexStrings2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3934)
inline long TGFrameworkSupport::ComplexStrings2d::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3935)
inline IDispatchPtr TGFrameworkSupport::ComplexStrings2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3936)
inline TGFrameworkSupport::ComplexString2dPtr TGFrameworkSupport::ComplexStrings2d::AddByObjects ( long ArraySize, SAFEARRAY * * members ) {
    struct ComplexString2d * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x6009", ArraySize, members);
    return ComplexString2dPtr(_result, false);
}

//
// dispinterface ComplexString2d wrapper method implementations
//

#pragma implementation_key(3937)
inline TGFrameworkSupport::GeometryStyle2dPtr TGFrameworkSupport::ComplexString2d::GetStyle ( ) {
    struct GeometryStyle2d * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return GeometryStyle2dPtr(_result, false);
}

#pragma implementation_key(3938)
inline TGFrameworkSupport::DrawingObjectsPtr TGFrameworkSupport::ComplexString2d::GetDrawingObjects ( ) {
    struct DrawingObjects * _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DrawingObjectsPtr(_result, false);
}

#pragma implementation_key(3939)
inline _bstr_t TGFrameworkSupport::ComplexString2d::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3940)
inline void TGFrameworkSupport::ComplexString2d::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(3941)
inline HRESULT TGFrameworkSupport::ComplexString2d::AddMember ( IDispatch * pMember ) {
    return _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", pMember);
}

#pragma implementation_key(3942)
inline HRESULT TGFrameworkSupport::ComplexString2d::RemoveMember ( IDispatch * pMember ) {
    return _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009", pMember);
}

#pragma implementation_key(3943)
inline HRESULT TGFrameworkSupport::ComplexString2d::Drop ( ) {
    return _com_dispatch_method(this, 0x66, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3944)
inline TGFramework::ApplicationPtr TGFrameworkSupport::ComplexString2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3945)
inline long TGFrameworkSupport::ComplexString2d::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1066, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3946)
inline _bstr_t TGFrameworkSupport::ComplexString2d::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1067, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3947)
inline IDispatchPtr TGFrameworkSupport::ComplexString2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1068, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3948)
inline long TGFrameworkSupport::ComplexString2d::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1069, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3949)
inline long TGFrameworkSupport::ComplexString2d::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x106b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3950)
inline _bstr_t TGFrameworkSupport::ComplexString2d::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x106c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3951)
inline IDispatchPtr TGFrameworkSupport::ComplexString2d::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x106d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3952)
inline HRESULT TGFrameworkSupport::ComplexString2d::Copy ( ) {
    return _com_dispatch_method(this, 0x6001100a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3953)
inline HRESULT TGFrameworkSupport::ComplexString2d::Cut ( ) {
    return _com_dispatch_method(this, 0x6001100b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3954)
inline HRESULT TGFrameworkSupport::ComplexString2d::Delete ( ) {
    return _com_dispatch_method(this, 0x6001100c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3955)
inline HRESULT TGFrameworkSupport::ComplexString2d::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    return _com_dispatch_method(this, 0x6001100d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", XFrom, YFrom, XTo, YTo);
}

#pragma implementation_key(3956)
inline HRESULT TGFrameworkSupport::ComplexString2d::Scale ( double Factor ) {
    return _com_dispatch_method(this, 0x6001100e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Factor);
}

#pragma implementation_key(3957)
inline HRESULT TGFrameworkSupport::ComplexString2d::Rotate ( double Angle, double x, double y ) {
    return _com_dispatch_method(this, 0x6001100f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", Angle, x, y);
}

#pragma implementation_key(3958)
inline HRESULT TGFrameworkSupport::ComplexString2d::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60011011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(3959)
inline IDispatchPtr TGFrameworkSupport::ComplexString2d::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60011012, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &XDistance, &YDistance);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3960)
inline IDispatchPtr TGFrameworkSupport::ComplexString2d::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60011013, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x080c", x1, y1, x2, y2, &BooleanCopyFlag);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3961)
inline HRESULT TGFrameworkSupport::ComplexString2d::BringToFront ( ) {
    return _com_dispatch_method(this, 0x60011014, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3962)
inline HRESULT TGFrameworkSupport::ComplexString2d::BringForward ( ) {
    return _com_dispatch_method(this, 0x60011015, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3963)
inline HRESULT TGFrameworkSupport::ComplexString2d::SendToBack ( ) {
    return _com_dispatch_method(this, 0x60011016, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3964)
inline HRESULT TGFrameworkSupport::ComplexString2d::SendBackward ( ) {
    return _com_dispatch_method(this, 0x60011017, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3965)
inline HRESULT TGFrameworkSupport::ComplexString2d::Select ( ) {
    return _com_dispatch_method(this, 0x60011018, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3966)
inline int TGFrameworkSupport::ComplexString2d::GetForm ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x3000, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3967)
inline double TGFrameworkSupport::ComplexString2d::GetLength ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3001, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3968)
inline double TGFrameworkSupport::ComplexString2d::GetArea ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3002, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3969)
inline HRESULT TGFrameworkSupport::ComplexString2d::GetCentroid ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x60013003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(3970)
inline long TGFrameworkSupport::ComplexString2d::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3971)
inline HRESULT TGFrameworkSupport::ComplexString2d::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x4002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(3972)
inline HRESULT TGFrameworkSupport::ComplexString2d::SetKeyPoint ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x4003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(3973)
inline long TGFrameworkSupport::ComplexString2d::GetSegmentedStyleCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3974)
inline HRESULT TGFrameworkSupport::ComplexString2d::AddSegmentedStyle ( double x1, double y1, double x2, double y2, IDispatch * Style ) {
    return _com_dispatch_method(this, 0x5064, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005\x0009", x1, y1, x2, y2, Style);
}

#pragma implementation_key(3975)
inline HRESULT TGFrameworkSupport::ComplexString2d::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * Style ) {
    return _com_dispatch_method(this, 0x5065, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4005\x4009", Index, x1, y1, x2, y2, Style);
}

#pragma implementation_key(3976)
inline HRESULT TGFrameworkSupport::ComplexString2d::SetSegmentedStyle ( long Index, IDispatch * Style ) {
    return _com_dispatch_method(this, 0x5066, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0009", Index, Style);
}

#pragma implementation_key(3977)
inline HRESULT TGFrameworkSupport::ComplexString2d::RemoveSegmentedStyle ( long Index ) {
    return _com_dispatch_method(this, 0x5067, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Index);
}

#pragma implementation_key(3978)
inline HRESULT TGFrameworkSupport::ComplexString2d::RemoveAllSegmentedStyles ( ) {
    return _com_dispatch_method(this, 0x5068, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(3979)
inline HRESULT TGFrameworkSupport::ComplexString2d::RemoveAllSegmentedStylesBetween ( double x1, double y1, double x2, double y2 ) {
    return _com_dispatch_method(this, 0x5069, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", x1, y1, x2, y2);
}

#pragma implementation_key(3980)
inline IDispatchPtr TGFrameworkSupport::ComplexString2d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3981)
inline VARIANT_BOOL TGFrameworkSupport::ComplexString2d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _IComplexStrings2dAuto wrapper method implementations
//

#pragma implementation_key(3982)
inline TGFrameworkSupport::ComplexString2dPtr TGFrameworkSupport::_IComplexStrings2dAuto::Item ( const _variant_t & Index ) {
    struct ComplexString2d * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ComplexString2dPtr(_result, false);
}

#pragma implementation_key(3983)
inline IUnknownPtr TGFrameworkSupport::_IComplexStrings2dAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(3984)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IComplexStrings2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3985)
inline long TGFrameworkSupport::_IComplexStrings2dAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(3986)
inline IDispatchPtr TGFrameworkSupport::_IComplexStrings2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3987)
inline TGFrameworkSupport::ComplexString2dPtr TGFrameworkSupport::_IComplexStrings2dAuto::AddByObjects ( long ArraySize, SAFEARRAY * * members ) {
    struct ComplexString2d * _result = 0;
    HRESULT _hr = raw_AddByObjects(ArraySize, members, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ComplexString2dPtr(_result, false);
}

//
// dispinterface DrawingObjects wrapper method implementations
//

#pragma implementation_key(3988)
inline TGFramework::ApplicationPtr TGFrameworkSupport::DrawingObjects::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(3989)
inline IDispatchPtr TGFrameworkSupport::DrawingObjects::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(3990)
inline long TGFrameworkSupport::DrawingObjects::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3991)
inline IDispatchPtr TGFrameworkSupport::DrawingObjects::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return IDispatchPtr(_result, false);
}

//
// interface _IComplexString2dAuto wrapper method implementations
//

#pragma implementation_key(3992)
inline TGFrameworkSupport::GeometryStyle2dPtr TGFrameworkSupport::_IComplexString2dAuto::GetStyle ( ) {
    struct GeometryStyle2d * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return GeometryStyle2dPtr(_result, false);
}

#pragma implementation_key(3993)
inline TGFrameworkSupport::DrawingObjectsPtr TGFrameworkSupport::_IComplexString2dAuto::GetDrawingObjects ( ) {
    struct DrawingObjects * _result = 0;
    HRESULT _hr = get_DrawingObjects(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingObjectsPtr(_result, false);
}

#pragma implementation_key(3994)
inline _bstr_t TGFrameworkSupport::_IComplexString2dAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(3995)
inline void TGFrameworkSupport::_IComplexString2dAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3996)
inline HRESULT TGFrameworkSupport::_IComplexString2dAuto::AddMember ( IDispatch * pMember ) {
    HRESULT _hr = raw_AddMember(pMember);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3997)
inline HRESULT TGFrameworkSupport::_IComplexString2dAuto::RemoveMember ( IDispatch * pMember ) {
    HRESULT _hr = raw_RemoveMember(pMember);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3998)
inline HRESULT TGFrameworkSupport::_IComplexString2dAuto::Drop ( ) {
    HRESULT _hr = raw_Drop();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(3999)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IComplexString2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4000)
inline long TGFrameworkSupport::_IComplexString2dAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4001)
inline _bstr_t TGFrameworkSupport::_IComplexString2dAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4002)
inline IDispatchPtr TGFrameworkSupport::_IComplexString2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4003)
inline long TGFrameworkSupport::_IComplexString2dAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4004)
inline long TGFrameworkSupport::_IComplexString2dAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4005)
inline _bstr_t TGFrameworkSupport::_IComplexString2dAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4006)
inline IDispatchPtr TGFrameworkSupport::_IComplexString2dAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4007)
inline HRESULT TGFrameworkSupport::_IComplexString2dAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4008)
inline HRESULT TGFrameworkSupport::_IComplexString2dAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4009)
inline HRESULT TGFrameworkSupport::_IComplexString2dAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4010)
inline HRESULT TGFrameworkSupport::_IComplexString2dAuto::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    HRESULT _hr = raw_Move(XFrom, YFrom, XTo, YTo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4011)
inline HRESULT TGFrameworkSupport::_IComplexString2dAuto::Scale ( double Factor ) {
    HRESULT _hr = raw_Scale(Factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4012)
inline HRESULT TGFrameworkSupport::_IComplexString2dAuto::Rotate ( double Angle, double x, double y ) {
    HRESULT _hr = raw_Rotate(Angle, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4013)
inline HRESULT TGFrameworkSupport::_IComplexString2dAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4014)
inline IDispatchPtr TGFrameworkSupport::_IComplexString2dAuto::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Duplicate(XDistance, YDistance, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4015)
inline IDispatchPtr TGFrameworkSupport::_IComplexString2dAuto::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Mirror(x1, y1, x2, y2, BooleanCopyFlag, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4016)
inline HRESULT TGFrameworkSupport::_IComplexString2dAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4017)
inline HRESULT TGFrameworkSupport::_IComplexString2dAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4018)
inline HRESULT TGFrameworkSupport::_IComplexString2dAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4019)
inline HRESULT TGFrameworkSupport::_IComplexString2dAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4020)
inline HRESULT TGFrameworkSupport::_IComplexString2dAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4021)
inline int TGFrameworkSupport::_IComplexString2dAuto::GetForm ( ) {
    int _result = 0;
    HRESULT _hr = get_Form(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4022)
inline double TGFrameworkSupport::_IComplexString2dAuto::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4023)
inline double TGFrameworkSupport::_IComplexString2dAuto::GetArea ( ) {
    double _result = 0;
    HRESULT _hr = get_Area(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4024)
inline HRESULT TGFrameworkSupport::_IComplexString2dAuto::GetCentroid ( double * x, double * y ) {
    HRESULT _hr = raw_GetCentroid(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4025)
inline long TGFrameworkSupport::_IComplexString2dAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4026)
inline HRESULT TGFrameworkSupport::_IComplexString2dAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4027)
inline HRESULT TGFrameworkSupport::_IComplexString2dAuto::SetKeyPoint ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetKeyPoint(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4028)
inline long TGFrameworkSupport::_IComplexString2dAuto::GetSegmentedStyleCount ( ) {
    long _result = 0;
    HRESULT _hr = get_SegmentedStyleCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4029)
inline HRESULT TGFrameworkSupport::_IComplexString2dAuto::AddSegmentedStyle ( double x1, double y1, double x2, double y2, IDispatch * Style ) {
    HRESULT _hr = raw_AddSegmentedStyle(x1, y1, x2, y2, Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4030)
inline HRESULT TGFrameworkSupport::_IComplexString2dAuto::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * Style ) {
    HRESULT _hr = raw_GetSegmentedStyle(Index, x1, y1, x2, y2, Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4031)
inline HRESULT TGFrameworkSupport::_IComplexString2dAuto::SetSegmentedStyle ( long Index, IDispatch * Style ) {
    HRESULT _hr = raw_SetSegmentedStyle(Index, Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4032)
inline HRESULT TGFrameworkSupport::_IComplexString2dAuto::RemoveSegmentedStyle ( long Index ) {
    HRESULT _hr = raw_RemoveSegmentedStyle(Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4033)
inline HRESULT TGFrameworkSupport::_IComplexString2dAuto::RemoveAllSegmentedStyles ( ) {
    HRESULT _hr = raw_RemoveAllSegmentedStyles();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4034)
inline HRESULT TGFrameworkSupport::_IComplexString2dAuto::RemoveAllSegmentedStylesBetween ( double x1, double y1, double x2, double y2 ) {
    HRESULT _hr = raw_RemoveAllSegmentedStylesBetween(x1, y1, x2, y2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4035)
inline IDispatchPtr TGFrameworkSupport::_IComplexString2dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4036)
inline VARIANT_BOOL TGFrameworkSupport::_IComplexString2dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface Boundaries2d wrapper method implementations
//

#pragma implementation_key(4037)
inline TGFrameworkSupport::Boundary2dPtr TGFrameworkSupport::Boundaries2d::Item ( const _variant_t & Index ) {
    struct Boundary2d * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return Boundary2dPtr(_result, false);
}

#pragma implementation_key(4038)
inline TGFramework::ApplicationPtr TGFrameworkSupport::Boundaries2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4039)
inline long TGFrameworkSupport::Boundaries2d::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4040)
inline IDispatchPtr TGFrameworkSupport::Boundaries2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4041)
inline TGFrameworkSupport::Boundary2dPtr TGFrameworkSupport::Boundaries2d::AddByObjects ( long ObjectCount, SAFEARRAY * * Objects, double xFlood, double yFlood ) {
    struct Boundary2d * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x6009\x0005\x0005", ObjectCount, Objects, xFlood, yFlood);
    return Boundary2dPtr(_result, false);
}

#pragma implementation_key(4042)
inline TGFrameworkSupport::Boundary2dPtr TGFrameworkSupport::Boundaries2d::AddByPoints ( long PointCount, SAFEARRAY * * Points ) {
    struct Boundary2d * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x6005", PointCount, Points);
    return Boundary2dPtr(_result, false);
}

//
// dispinterface Boundary2d wrapper method implementations
//

#pragma implementation_key(4043)
inline TGFrameworkSupport::BoundaryStyle2dPtr TGFrameworkSupport::Boundary2d::GetStyle ( ) {
    struct BoundaryStyle2d * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return BoundaryStyle2dPtr(_result, false);
}

#pragma implementation_key(4044)
inline TGFrameworkSupport::BoundingObjects2dPtr TGFrameworkSupport::Boundary2d::GetBoundingObjects ( ) {
    struct BoundingObjects2d * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return BoundingObjects2dPtr(_result, false);
}

#pragma implementation_key(4045)
inline _bstr_t TGFrameworkSupport::Boundary2d::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4046)
inline void TGFrameworkSupport::Boundary2d::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4047)
inline TGFramework::ApplicationPtr TGFrameworkSupport::Boundary2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4048)
inline long TGFrameworkSupport::Boundary2d::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1066, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4049)
inline _bstr_t TGFrameworkSupport::Boundary2d::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1067, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4050)
inline IDispatchPtr TGFrameworkSupport::Boundary2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1068, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4051)
inline long TGFrameworkSupport::Boundary2d::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1069, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4052)
inline long TGFrameworkSupport::Boundary2d::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x106b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4053)
inline _bstr_t TGFrameworkSupport::Boundary2d::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x106c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4054)
inline IDispatchPtr TGFrameworkSupport::Boundary2d::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x106d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4055)
inline HRESULT TGFrameworkSupport::Boundary2d::Copy ( ) {
    return _com_dispatch_method(this, 0x6001100a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4056)
inline HRESULT TGFrameworkSupport::Boundary2d::Cut ( ) {
    return _com_dispatch_method(this, 0x6001100b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4057)
inline HRESULT TGFrameworkSupport::Boundary2d::Delete ( ) {
    return _com_dispatch_method(this, 0x6001100c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4058)
inline HRESULT TGFrameworkSupport::Boundary2d::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    return _com_dispatch_method(this, 0x6001100d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", XFrom, YFrom, XTo, YTo);
}

#pragma implementation_key(4059)
inline HRESULT TGFrameworkSupport::Boundary2d::Scale ( double Factor ) {
    return _com_dispatch_method(this, 0x6001100e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Factor);
}

#pragma implementation_key(4060)
inline HRESULT TGFrameworkSupport::Boundary2d::Rotate ( double Angle, double x, double y ) {
    return _com_dispatch_method(this, 0x6001100f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", Angle, x, y);
}

#pragma implementation_key(4061)
inline HRESULT TGFrameworkSupport::Boundary2d::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60011011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(4062)
inline IDispatchPtr TGFrameworkSupport::Boundary2d::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60011012, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &XDistance, &YDistance);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4063)
inline IDispatchPtr TGFrameworkSupport::Boundary2d::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60011013, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x080c", x1, y1, x2, y2, &BooleanCopyFlag);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4064)
inline HRESULT TGFrameworkSupport::Boundary2d::BringToFront ( ) {
    return _com_dispatch_method(this, 0x60011014, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4065)
inline HRESULT TGFrameworkSupport::Boundary2d::BringForward ( ) {
    return _com_dispatch_method(this, 0x60011015, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4066)
inline HRESULT TGFrameworkSupport::Boundary2d::SendToBack ( ) {
    return _com_dispatch_method(this, 0x60011016, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4067)
inline HRESULT TGFrameworkSupport::Boundary2d::SendBackward ( ) {
    return _com_dispatch_method(this, 0x60011017, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4068)
inline HRESULT TGFrameworkSupport::Boundary2d::Select ( ) {
    return _com_dispatch_method(this, 0x60011018, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4069)
inline double TGFrameworkSupport::Boundary2d::GetPerimeter ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3001, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4070)
inline double TGFrameworkSupport::Boundary2d::GetArea ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3002, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4071)
inline enum TGFrameworkSupport::Boundary2dStateConstants TGFrameworkSupport::Boundary2d::GetState ( ) {
    enum Boundary2dStateConstants _result;
    _com_dispatch_method(this, 0x3003, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4072)
inline HRESULT TGFrameworkSupport::Boundary2d::GetFloodPoint ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x3068, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(4073)
inline HRESULT TGFrameworkSupport::Boundary2d::GetCentroid ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x3069, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(4074)
inline HRESULT TGFrameworkSupport::Boundary2d::ConstructGeometry ( ) {
    return _com_dispatch_method(this, 0x306a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4075)
inline long TGFrameworkSupport::Boundary2d::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4076)
inline HRESULT TGFrameworkSupport::Boundary2d::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x4002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(4077)
inline HRESULT TGFrameworkSupport::Boundary2d::SetKeyPoint ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x4003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(4078)
inline IDispatchPtr TGFrameworkSupport::Boundary2d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4079)
inline VARIANT_BOOL TGFrameworkSupport::Boundary2d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _IBoundaries2dAuto wrapper method implementations
//

#pragma implementation_key(4080)
inline TGFrameworkSupport::Boundary2dPtr TGFrameworkSupport::_IBoundaries2dAuto::Item ( const _variant_t & Index ) {
    struct Boundary2d * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Boundary2dPtr(_result, false);
}

#pragma implementation_key(4081)
inline IUnknownPtr TGFrameworkSupport::_IBoundaries2dAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4082)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IBoundaries2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4083)
inline long TGFrameworkSupport::_IBoundaries2dAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4084)
inline IDispatchPtr TGFrameworkSupport::_IBoundaries2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4085)
inline TGFrameworkSupport::Boundary2dPtr TGFrameworkSupport::_IBoundaries2dAuto::AddByObjects ( long ObjectCount, SAFEARRAY * * Objects, double xFlood, double yFlood ) {
    struct Boundary2d * _result = 0;
    HRESULT _hr = raw_AddByObjects(ObjectCount, Objects, xFlood, yFlood, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Boundary2dPtr(_result, false);
}

#pragma implementation_key(4086)
inline TGFrameworkSupport::Boundary2dPtr TGFrameworkSupport::_IBoundaries2dAuto::AddByPoints ( long PointCount, SAFEARRAY * * Points ) {
    struct Boundary2d * _result = 0;
    HRESULT _hr = raw_AddByPoints(PointCount, Points, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Boundary2dPtr(_result, false);
}

//
// dispinterface BoundaryStyle2d wrapper method implementations
//

#pragma implementation_key(4087)
inline void TGFrameworkSupport::BoundaryStyle2d::PutFillColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4088)
inline long TGFrameworkSupport::BoundaryStyle2d::GetFillColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4089)
inline void TGFrameworkSupport::BoundaryStyle2d::PutLinearColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4090)
inline long TGFrameworkSupport::BoundaryStyle2d::GetLinearColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4091)
inline void TGFrameworkSupport::BoundaryStyle2d::PutWidth ( double _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4092)
inline double TGFrameworkSupport::BoundaryStyle2d::GetWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4093)
inline _bstr_t TGFrameworkSupport::BoundaryStyle2d::GetDashName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4094)
inline void TGFrameworkSupport::BoundaryStyle2d::PutDashName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4095)
inline double TGFrameworkSupport::BoundaryStyle2d::GetRotation ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4096)
inline void TGFrameworkSupport::BoundaryStyle2d::PutRotation ( double _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4097)
inline double TGFrameworkSupport::BoundaryStyle2d::GetScale ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4098)
inline void TGFrameworkSupport::BoundaryStyle2d::PutScale ( double _arg1 ) {
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4099)
inline long TGFrameworkSupport::BoundaryStyle2d::GetUnits ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4100)
inline void TGFrameworkSupport::BoundaryStyle2d::PutUnits ( long _arg1 ) {
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4101)
inline long TGFrameworkSupport::BoundaryStyle2d::GetFillType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4102)
inline double TGFrameworkSupport::BoundaryStyle2d::Getspacing ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4103)
inline void TGFrameworkSupport::BoundaryStyle2d::Putspacing ( double _arg1 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4104)
inline _bstr_t TGFrameworkSupport::BoundaryStyle2d::GetFillName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4105)
inline void TGFrameworkSupport::BoundaryStyle2d::PutFillName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4106)
inline HRESULT TGFrameworkSupport::BoundaryStyle2d::UseActiveFillStyle ( ) {
    return _com_dispatch_method(this, 0x60010013, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// interface _IBoundaryStyle2dAuto wrapper method implementations
//

#pragma implementation_key(4107)
inline void TGFrameworkSupport::_IBoundaryStyle2dAuto::PutFillColor ( long FillColor ) {
    HRESULT _hr = put_FillColor(FillColor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4108)
inline long TGFrameworkSupport::_IBoundaryStyle2dAuto::GetFillColor ( ) {
    long _result = 0;
    HRESULT _hr = get_FillColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4109)
inline void TGFrameworkSupport::_IBoundaryStyle2dAuto::PutLinearColor ( long Color ) {
    HRESULT _hr = put_LinearColor(Color);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4110)
inline long TGFrameworkSupport::_IBoundaryStyle2dAuto::GetLinearColor ( ) {
    long _result = 0;
    HRESULT _hr = get_LinearColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4111)
inline void TGFrameworkSupport::_IBoundaryStyle2dAuto::PutWidth ( double PenWidth ) {
    HRESULT _hr = put_Width(PenWidth);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4112)
inline double TGFrameworkSupport::_IBoundaryStyle2dAuto::GetWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4113)
inline _bstr_t TGFrameworkSupport::_IBoundaryStyle2dAuto::GetDashName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DashName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4114)
inline void TGFrameworkSupport::_IBoundaryStyle2dAuto::PutDashName ( _bstr_t LineTypeName ) {
    HRESULT _hr = put_DashName(LineTypeName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4115)
inline double TGFrameworkSupport::_IBoundaryStyle2dAuto::GetRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_Rotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4116)
inline void TGFrameworkSupport::_IBoundaryStyle2dAuto::PutRotation ( double Angle ) {
    HRESULT _hr = put_Rotation(Angle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4117)
inline double TGFrameworkSupport::_IBoundaryStyle2dAuto::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4118)
inline void TGFrameworkSupport::_IBoundaryStyle2dAuto::PutScale ( double Factor ) {
    HRESULT _hr = put_Scale(Factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4119)
inline long TGFrameworkSupport::_IBoundaryStyle2dAuto::GetUnits ( ) {
    long _result = 0;
    HRESULT _hr = get_Units(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4120)
inline void TGFrameworkSupport::_IBoundaryStyle2dAuto::PutUnits ( long Units ) {
    HRESULT _hr = put_Units(Units);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4121)
inline long TGFrameworkSupport::_IBoundaryStyle2dAuto::GetFillType ( ) {
    long _result = 0;
    HRESULT _hr = get_FillType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4122)
inline double TGFrameworkSupport::_IBoundaryStyle2dAuto::Getspacing ( ) {
    double _result = 0;
    HRESULT _hr = get_spacing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4123)
inline void TGFrameworkSupport::_IBoundaryStyle2dAuto::Putspacing ( double Distance ) {
    HRESULT _hr = put_spacing(Distance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4124)
inline _bstr_t TGFrameworkSupport::_IBoundaryStyle2dAuto::GetFillName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FillName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4125)
inline void TGFrameworkSupport::_IBoundaryStyle2dAuto::PutFillName ( _bstr_t FillStyleName ) {
    HRESULT _hr = put_FillName(FillStyleName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4126)
inline HRESULT TGFrameworkSupport::_IBoundaryStyle2dAuto::UseActiveFillStyle ( ) {
    HRESULT _hr = raw_UseActiveFillStyle();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface BoundingObjects2d wrapper method implementations
//

#pragma implementation_key(4127)
inline IDispatchPtr TGFrameworkSupport::BoundingObjects2d::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4128)
inline TGFramework::ApplicationPtr TGFrameworkSupport::BoundingObjects2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4129)
inline long TGFrameworkSupport::BoundingObjects2d::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4130)
inline IDispatchPtr TGFrameworkSupport::BoundingObjects2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// interface _IBoundingObjects2dAuto wrapper method implementations
//

#pragma implementation_key(4131)
inline IDispatchPtr TGFrameworkSupport::_IBoundingObjects2dAuto::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4132)
inline IUnknownPtr TGFrameworkSupport::_IBoundingObjects2dAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4133)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IBoundingObjects2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4134)
inline long TGFrameworkSupport::_IBoundingObjects2dAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4135)
inline IDispatchPtr TGFrameworkSupport::_IBoundingObjects2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// interface _IBoundary2dAuto wrapper method implementations
//

#pragma implementation_key(4136)
inline TGFrameworkSupport::BoundaryStyle2dPtr TGFrameworkSupport::_IBoundary2dAuto::GetStyle ( ) {
    struct BoundaryStyle2d * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BoundaryStyle2dPtr(_result, false);
}

#pragma implementation_key(4137)
inline TGFrameworkSupport::BoundingObjects2dPtr TGFrameworkSupport::_IBoundary2dAuto::GetBoundingObjects ( ) {
    struct BoundingObjects2d * _result = 0;
    HRESULT _hr = get_BoundingObjects(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BoundingObjects2dPtr(_result, false);
}

#pragma implementation_key(4138)
inline _bstr_t TGFrameworkSupport::_IBoundary2dAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4139)
inline void TGFrameworkSupport::_IBoundary2dAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4140)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IBoundary2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4141)
inline long TGFrameworkSupport::_IBoundary2dAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4142)
inline _bstr_t TGFrameworkSupport::_IBoundary2dAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4143)
inline IDispatchPtr TGFrameworkSupport::_IBoundary2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4144)
inline long TGFrameworkSupport::_IBoundary2dAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4145)
inline long TGFrameworkSupport::_IBoundary2dAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4146)
inline _bstr_t TGFrameworkSupport::_IBoundary2dAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4147)
inline IDispatchPtr TGFrameworkSupport::_IBoundary2dAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4148)
inline HRESULT TGFrameworkSupport::_IBoundary2dAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4149)
inline HRESULT TGFrameworkSupport::_IBoundary2dAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4150)
inline HRESULT TGFrameworkSupport::_IBoundary2dAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4151)
inline HRESULT TGFrameworkSupport::_IBoundary2dAuto::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    HRESULT _hr = raw_Move(XFrom, YFrom, XTo, YTo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4152)
inline HRESULT TGFrameworkSupport::_IBoundary2dAuto::Scale ( double Factor ) {
    HRESULT _hr = raw_Scale(Factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4153)
inline HRESULT TGFrameworkSupport::_IBoundary2dAuto::Rotate ( double Angle, double x, double y ) {
    HRESULT _hr = raw_Rotate(Angle, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4154)
inline HRESULT TGFrameworkSupport::_IBoundary2dAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4155)
inline IDispatchPtr TGFrameworkSupport::_IBoundary2dAuto::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Duplicate(XDistance, YDistance, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4156)
inline IDispatchPtr TGFrameworkSupport::_IBoundary2dAuto::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Mirror(x1, y1, x2, y2, BooleanCopyFlag, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4157)
inline HRESULT TGFrameworkSupport::_IBoundary2dAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4158)
inline HRESULT TGFrameworkSupport::_IBoundary2dAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4159)
inline HRESULT TGFrameworkSupport::_IBoundary2dAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4160)
inline HRESULT TGFrameworkSupport::_IBoundary2dAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4161)
inline HRESULT TGFrameworkSupport::_IBoundary2dAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4162)
inline double TGFrameworkSupport::_IBoundary2dAuto::GetPerimeter ( ) {
    double _result = 0;
    HRESULT _hr = get_Perimeter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4163)
inline double TGFrameworkSupport::_IBoundary2dAuto::GetArea ( ) {
    double _result = 0;
    HRESULT _hr = get_Area(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4164)
inline enum TGFrameworkSupport::Boundary2dStateConstants TGFrameworkSupport::_IBoundary2dAuto::GetState ( ) {
    enum Boundary2dStateConstants _result;
    HRESULT _hr = get_State(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4165)
inline HRESULT TGFrameworkSupport::_IBoundary2dAuto::GetFloodPoint ( double * x, double * y ) {
    HRESULT _hr = raw_GetFloodPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4166)
inline HRESULT TGFrameworkSupport::_IBoundary2dAuto::GetCentroid ( double * x, double * y ) {
    HRESULT _hr = raw_GetCentroid(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4167)
inline HRESULT TGFrameworkSupport::_IBoundary2dAuto::ConstructGeometry ( ) {
    HRESULT _hr = raw_ConstructGeometry();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4168)
inline long TGFrameworkSupport::_IBoundary2dAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4169)
inline HRESULT TGFrameworkSupport::_IBoundary2dAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4170)
inline HRESULT TGFrameworkSupport::_IBoundary2dAuto::SetKeyPoint ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetKeyPoint(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4171)
inline IDispatchPtr TGFrameworkSupport::_IBoundary2dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4172)
inline VARIANT_BOOL TGFrameworkSupport::_IBoundary2dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface TextBoxes wrapper method implementations
//

#pragma implementation_key(4173)
inline IDispatchPtr TGFrameworkSupport::TextBoxes::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4174)
inline long TGFrameworkSupport::TextBoxes::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4175)
inline IDispatchPtr TGFrameworkSupport::TextBoxes::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4176)
inline TGFrameworkSupport::TextBoxPtr TGFrameworkSupport::TextBoxes::Item ( const _variant_t & Index ) {
    struct TextBox * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return TextBoxPtr(_result, false);
}

#pragma implementation_key(4177)
inline TGFrameworkSupport::TextBoxPtr TGFrameworkSupport::TextBoxes::AddByTwoPoints ( double x1, double y1, double z1, double x2, double y2, double z2 ) {
    struct TextBox * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005", x1, y1, z1, x2, y2, z2);
    return TextBoxPtr(_result, false);
}

#pragma implementation_key(4178)
inline TGFrameworkSupport::TextBoxPtr TGFrameworkSupport::TextBoxes::Add ( double x1, double y1, double z1 ) {
    struct TextBox * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005", x1, y1, z1);
    return TextBoxPtr(_result, false);
}

#pragma implementation_key(4179)
inline TGFrameworkSupport::TextBoxPtr TGFrameworkSupport::TextBoxes::AddByHtWdAng ( double x1, double y1, double z1, double ht, double wd, double ang ) {
    struct TextBox * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005", x1, y1, z1, ht, wd, ang);
    return TextBoxPtr(_result, false);
}

#pragma implementation_key(4180)
inline TGFrameworkSupport::TextBoxPtr TGFrameworkSupport::TextBoxes::AddWatermark ( double x1, double y1, double z1 ) {
    struct TextBox * _result = 0;
    _com_dispatch_method(this, 0x4078, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005", x1, y1, z1);
    return TextBoxPtr(_result, false);
}

#pragma implementation_key(4181)
inline TGFrameworkSupport::TextBoxPtr TGFrameworkSupport::TextBoxes::AddPMITextBox ( IUnknown * unkPlane, double x1, double y1, double z1 ) {
    struct TextBox * _result = 0;
    _com_dispatch_method(this, 0x6d, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000d\x0005\x0005\x0005", unkPlane, x1, y1, z1);
    return TextBoxPtr(_result, false);
}

//
// dispinterface TextBox wrapper method implementations
//

#pragma implementation_key(4182)
inline TGFrameworkSupport::TextEditPtr TGFrameworkSupport::TextBox::GetEdit ( ) {
    struct TextEdit * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TextEditPtr(_result, false);
}

#pragma implementation_key(4183)
inline void TGFrameworkSupport::TextBox::PutHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4184)
inline double TGFrameworkSupport::TextBox::GetHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4185)
inline void TGFrameworkSupport::TextBox::PutWidth ( double _arg1 ) {
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4186)
inline double TGFrameworkSupport::TextBox::GetWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4187)
inline void TGFrameworkSupport::TextBox::PutRotationAngle ( double _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4188)
inline double TGFrameworkSupport::TextBox::GetRotationAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4189)
inline void TGFrameworkSupport::TextBox::PutBorderType ( enum TextBorderTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4190)
inline enum TGFrameworkSupport::TextBorderTypeConstants TGFrameworkSupport::TextBox::GetBorderType ( ) {
    enum TextBorderTypeConstants _result;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4191)
inline void TGFrameworkSupport::TextBox::PutBorderLineStyle ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4192)
inline _bstr_t TGFrameworkSupport::TextBox::GetBorderLineStyle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4193)
inline void TGFrameworkSupport::TextBox::PutBorderLineWidth ( double _arg1 ) {
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4194)
inline double TGFrameworkSupport::TextBox::GetBorderLineWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4195)
inline void TGFrameworkSupport::TextBox::PutBorderLineColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4196)
inline long TGFrameworkSupport::TextBox::GetBorderLineColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4197)
inline void TGFrameworkSupport::TextBox::PutBorderOffset ( double _arg1 ) {
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4198)
inline double TGFrameworkSupport::TextBox::GetBorderOffset ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4199)
inline void TGFrameworkSupport::TextBox::PutVerticalAlignment ( enum TextVerticalAlignmentConstants _arg1 ) {
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4200)
inline enum TGFrameworkSupport::TextVerticalAlignmentConstants TGFrameworkSupport::TextBox::GetVerticalAlignment ( ) {
    enum TextVerticalAlignmentConstants _result;
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4201)
inline void TGFrameworkSupport::TextBox::PutJustification ( enum TextJustificationConstants _arg1 ) {
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4202)
inline enum TGFrameworkSupport::TextJustificationConstants TGFrameworkSupport::TextBox::GetJustification ( ) {
    enum TextJustificationConstants _result;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4203)
inline HRESULT TGFrameworkSupport::TextBox::SetOrigin ( double x, double y, double z ) {
    return _com_dispatch_method(this, 0x60010015, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", x, y, z);
}

#pragma implementation_key(4204)
inline HRESULT TGFrameworkSupport::TextBox::GetOrigin ( double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0x60010016, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005", x, y, z);
}

#pragma implementation_key(4205)
inline void TGFrameworkSupport::TextBox::PutFill ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4206)
inline VARIANT_BOOL TGFrameworkSupport::TextBox::GetFill ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4207)
inline void TGFrameworkSupport::TextBox::PutShadow ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4208)
inline VARIANT_BOOL TGFrameworkSupport::TextBox::GetShadow ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4209)
inline void TGFrameworkSupport::TextBox::PutFillColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4210)
inline long TGFrameworkSupport::TextBox::GetFillColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4211)
inline void TGFrameworkSupport::TextBox::PutShadowOffset ( double _arg1 ) {
    _com_dispatch_method(this, 0x1c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4212)
inline double TGFrameworkSupport::TextBox::GetShadowOffset ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4213)
inline void TGFrameworkSupport::TextBox::PutFlowDirection ( enum TextFlowDirectionConstants _arg1 ) {
    _com_dispatch_method(this, 0x1d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4214)
inline enum TGFrameworkSupport::TextFlowDirectionConstants TGFrameworkSupport::TextBox::GetFlowDirection ( ) {
    enum TextFlowDirectionConstants _result;
    _com_dispatch_method(this, 0x1d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4215)
inline void TGFrameworkSupport::TextBox::PutFlowOrientation ( enum TextFlowOrientationConstants _arg1 ) {
    _com_dispatch_method(this, 0x1e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4216)
inline enum TGFrameworkSupport::TextFlowOrientationConstants TGFrameworkSupport::TextBox::GetFlowOrientation ( ) {
    enum TextFlowOrientationConstants _result;
    _com_dispatch_method(this, 0x1e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4217)
inline void TGFrameworkSupport::TextBox::PutText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4218)
inline _bstr_t TGFrameworkSupport::TextBox::GetText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4219)
inline void TGFrameworkSupport::TextBox::PutPropertyText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x4079, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4220)
inline HRESULT TGFrameworkSupport::TextBox::FindAndReplacePropertyText ( _bstr_t findText, _bstr_t propText, VARIANT_BOOL ReplaceAll ) {
    return _com_dispatch_method(this, 0x407a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x000b", (BSTR)findText, (BSTR)propText, ReplaceAll);
}

#pragma implementation_key(4221)
inline void TGFrameworkSupport::TextBox::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x20, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4222)
inline _bstr_t TGFrameworkSupport::TextBox::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x20, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4223)
inline void TGFrameworkSupport::TextBox::PutPlacementType ( enum TextPlacementTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x21, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4224)
inline enum TGFrameworkSupport::TextPlacementTypeConstants TGFrameworkSupport::TextBox::GetPlacementType ( ) {
    enum TextPlacementTypeConstants _result;
    _com_dispatch_method(this, 0x21, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4225)
inline TGFramework::ApplicationPtr TGFrameworkSupport::TextBox::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x4065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4226)
inline long TGFrameworkSupport::TextBox::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4066, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4227)
inline _bstr_t TGFrameworkSupport::TextBox::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4067, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4228)
inline IDispatchPtr TGFrameworkSupport::TextBox::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4068, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4229)
inline long TGFrameworkSupport::TextBox::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4069, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4230)
inline long TGFrameworkSupport::TextBox::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x406b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4231)
inline _bstr_t TGFrameworkSupport::TextBox::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x406c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4232)
inline IDispatchPtr TGFrameworkSupport::TextBox::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x406d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4233)
inline HRESULT TGFrameworkSupport::TextBox::Copy ( ) {
    return _com_dispatch_method(this, 0x6001400a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4234)
inline HRESULT TGFrameworkSupport::TextBox::Cut ( ) {
    return _com_dispatch_method(this, 0x6001400b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4235)
inline HRESULT TGFrameworkSupport::TextBox::Delete ( ) {
    return _com_dispatch_method(this, 0x6001400c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4236)
inline HRESULT TGFrameworkSupport::TextBox::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    return _com_dispatch_method(this, 0x6001400d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", XFrom, YFrom, XTo, YTo);
}

#pragma implementation_key(4237)
inline HRESULT TGFrameworkSupport::TextBox::Scale ( double Factor ) {
    return _com_dispatch_method(this, 0x6001400e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Factor);
}

#pragma implementation_key(4238)
inline HRESULT TGFrameworkSupport::TextBox::Rotate ( double Angle, double x, double y ) {
    return _com_dispatch_method(this, 0x6001400f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", Angle, x, y);
}

#pragma implementation_key(4239)
inline HRESULT TGFrameworkSupport::TextBox::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60014011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(4240)
inline IDispatchPtr TGFrameworkSupport::TextBox::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60014012, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &XDistance, &YDistance);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4241)
inline IDispatchPtr TGFrameworkSupport::TextBox::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60014013, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x080c", x1, y1, x2, y2, &BooleanCopyFlag);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4242)
inline HRESULT TGFrameworkSupport::TextBox::BringToFront ( ) {
    return _com_dispatch_method(this, 0x60014014, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4243)
inline HRESULT TGFrameworkSupport::TextBox::BringForward ( ) {
    return _com_dispatch_method(this, 0x60014015, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4244)
inline HRESULT TGFrameworkSupport::TextBox::SendToBack ( ) {
    return _com_dispatch_method(this, 0x60014016, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4245)
inline HRESULT TGFrameworkSupport::TextBox::SendBackward ( ) {
    return _com_dispatch_method(this, 0x60014017, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4246)
inline HRESULT TGFrameworkSupport::TextBox::Select ( ) {
    return _com_dispatch_method(this, 0x60014018, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4247)
inline long TGFrameworkSupport::TextBox::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4248)
inline HRESULT TGFrameworkSupport::TextBox::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x6002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(4249)
inline HRESULT TGFrameworkSupport::TextBox::SetKeyPoint ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x6003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(4250)
inline IDispatchPtr TGFrameworkSupport::TextBox::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4251)
inline VARIANT_BOOL TGFrameworkSupport::TextBox::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(4252)
inline double TGFrameworkSupport::TextBox::GetTextScale ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3009, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4253)
inline void TGFrameworkSupport::TextBox::PutTextScale ( double _arg1 ) {
    _com_dispatch_method(this, 0x3009, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4254)
inline void TGFrameworkSupport::TextBox::PutHorizontalAlignment ( enum TextHorizontalAlignmentConstants _arg1 ) {
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4255)
inline enum TGFrameworkSupport::TextHorizontalAlignmentConstants TGFrameworkSupport::TextBox::GetHorizontalAlignment ( ) {
    enum TextHorizontalAlignmentConstants _result;
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4256)
inline HRESULT TGFrameworkSupport::TextBox::PromoteToCurrentVersion ( ) {
    return _com_dispatch_method(this, 0x406e, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4257)
inline void TGFrameworkSupport::TextBox::PutTabStopWidth ( double _arg1 ) {
    _com_dispatch_method(this, 0x406f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4258)
inline double TGFrameworkSupport::TextBox::GetTabStopWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x406f, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4259)
inline void TGFrameworkSupport::TextBox::PutMinimumAspectRatio ( double _arg1 ) {
    _com_dispatch_method(this, 0x4070, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4260)
inline double TGFrameworkSupport::TextBox::GetMinimumAspectRatio ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4070, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4261)
inline void TGFrameworkSupport::TextBox::PutLineSpacingType ( enum TextLineSpacingTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x4071, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4262)
inline enum TGFrameworkSupport::TextLineSpacingTypeConstants TGFrameworkSupport::TextBox::GetLineSpacingType ( ) {
    enum TextLineSpacingTypeConstants _result;
    _com_dispatch_method(this, 0x4071, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4263)
inline void TGFrameworkSupport::TextBox::PutTextControlType ( enum TextControlTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x4072, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4264)
inline enum TGFrameworkSupport::TextControlTypeConstants TGFrameworkSupport::TextBox::GetTextControlType ( ) {
    enum TextControlTypeConstants _result;
    _com_dispatch_method(this, 0x4072, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4265)
inline void TGFrameworkSupport::TextBox::PutLineSpacing ( double _arg1 ) {
    _com_dispatch_method(this, 0x4073, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4266)
inline double TGFrameworkSupport::TextBox::GetLineSpacing ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4073, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4267)
inline double TGFrameworkSupport::TextBox::GetActualTextLength ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4074, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4268)
inline void TGFrameworkSupport::TextBox::PutFillBackgroundColor ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4075, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4269)
inline VARIANT_BOOL TGFrameworkSupport::TextBox::GetFillBackgroundColor ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4075, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4270)
inline HRESULT TGFrameworkSupport::TextBox::GetReferencedObjectInfo ( SAFEARRAY * * ReferencedObjects, SAFEARRAY * * ReferencedObjectTypes ) {
    return _com_dispatch_method(this, 0x4076, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009\x6003", ReferencedObjects, ReferencedObjectTypes);
}

#pragma implementation_key(4271)
inline void TGFrameworkSupport::TextBox::PutWatermark ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4077, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4272)
inline VARIANT_BOOL TGFrameworkSupport::TextBox::GetWatermark ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4077, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4273)
inline HRESULT TGFrameworkSupport::TextBox::ReplaceTextWithSymbol ( _bstr_t Text ) {
    return _com_dispatch_method(this, 0x407b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Text);
}

#pragma implementation_key(4274)
inline HRESULT TGFrameworkSupport::TextBox::SaveAsNote ( _bstr_t NoteName, VARIANT_BOOL bNoteOverWrite ) {
    return _com_dispatch_method(this, 0x407c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x000b", (BSTR)NoteName, bNoteOverWrite);
}

#pragma implementation_key(4275)
inline void TGFrameworkSupport::TextBox::PutParallelToScreen ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x407d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4276)
inline long TGFrameworkSupport::TextBox::GetParallelToScreen ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x407d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

//
// interface _ITextBoxesAuto wrapper method implementations
//

#pragma implementation_key(4277)
inline IDispatchPtr TGFrameworkSupport::_ITextBoxesAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4278)
inline long TGFrameworkSupport::_ITextBoxesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4279)
inline IDispatchPtr TGFrameworkSupport::_ITextBoxesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4280)
inline TGFrameworkSupport::TextBoxPtr TGFrameworkSupport::_ITextBoxesAuto::Item ( const _variant_t & Index ) {
    struct TextBox * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TextBoxPtr(_result, false);
}

#pragma implementation_key(4281)
inline IUnknownPtr TGFrameworkSupport::_ITextBoxesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4282)
inline TGFrameworkSupport::TextBoxPtr TGFrameworkSupport::_ITextBoxesAuto::AddByTwoPoints ( double x1, double y1, double z1, double x2, double y2, double z2 ) {
    struct TextBox * _result = 0;
    HRESULT _hr = raw_AddByTwoPoints(x1, y1, z1, x2, y2, z2, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TextBoxPtr(_result, false);
}

#pragma implementation_key(4283)
inline TGFrameworkSupport::TextBoxPtr TGFrameworkSupport::_ITextBoxesAuto::Add ( double x1, double y1, double z1 ) {
    struct TextBox * _result = 0;
    HRESULT _hr = raw_Add(x1, y1, z1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TextBoxPtr(_result, false);
}

#pragma implementation_key(4284)
inline TGFrameworkSupport::TextBoxPtr TGFrameworkSupport::_ITextBoxesAuto::AddByHtWdAng ( double x1, double y1, double z1, double ht, double wd, double ang ) {
    struct TextBox * _result = 0;
    HRESULT _hr = raw_AddByHtWdAng(x1, y1, z1, ht, wd, ang, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TextBoxPtr(_result, false);
}

#pragma implementation_key(4285)
inline TGFrameworkSupport::TextBoxPtr TGFrameworkSupport::_ITextBoxesAuto::AddWatermark ( double x1, double y1, double z1 ) {
    struct TextBox * _result = 0;
    HRESULT _hr = raw_AddWatermark(x1, y1, z1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TextBoxPtr(_result, false);
}

#pragma implementation_key(4286)
inline TGFrameworkSupport::TextBoxPtr TGFrameworkSupport::_ITextBoxesAuto::AddPMITextBox ( IUnknown * unkPlane, double x1, double y1, double z1 ) {
    struct TextBox * _result = 0;
    HRESULT _hr = raw_AddPMITextBox(unkPlane, x1, y1, z1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TextBoxPtr(_result, false);
}

//
// dispinterface TextEdit wrapper method implementations
//

#pragma implementation_key(4287)
inline void TGFrameworkSupport::TextEdit::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4288)
inline _bstr_t TGFrameworkSupport::TextEdit::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4289)
inline void TGFrameworkSupport::TextEdit::PutLanguage ( long _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4290)
inline long TGFrameworkSupport::TextEdit::GetLanguage ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4291)
inline void TGFrameworkSupport::TextEdit::PutTextSize ( double _arg1 ) {
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4292)
inline double TGFrameworkSupport::TextEdit::GetTextSize ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4293)
inline void TGFrameworkSupport::TextEdit::PutAspectRatio ( double _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4294)
inline double TGFrameworkSupport::TextEdit::GetAspectRatio ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4295)
inline void TGFrameworkSupport::TextEdit::PutBold ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4296)
inline VARIANT_BOOL TGFrameworkSupport::TextEdit::GetBold ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4297)
inline void TGFrameworkSupport::TextEdit::PutItalic ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4298)
inline VARIANT_BOOL TGFrameworkSupport::TextEdit::GetItalic ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4299)
inline void TGFrameworkSupport::TextEdit::PutUnderLine ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4300)
inline VARIANT_BOOL TGFrameworkSupport::TextEdit::GetUnderLine ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4301)
inline void TGFrameworkSupport::TextEdit::PutSubScript ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4302)
inline VARIANT_BOOL TGFrameworkSupport::TextEdit::GetSubScript ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4303)
inline void TGFrameworkSupport::TextEdit::PutSuperScript ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4304)
inline VARIANT_BOOL TGFrameworkSupport::TextEdit::GetSuperScript ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4305)
inline void TGFrameworkSupport::TextEdit::PutFont ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4306)
inline _bstr_t TGFrameworkSupport::TextEdit::GetFont ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4307)
inline void TGFrameworkSupport::TextEdit::PutCharacterSpacing ( double _arg1 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4308)
inline double TGFrameworkSupport::TextEdit::GetCharacterSpacing ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4309)
inline void TGFrameworkSupport::TextEdit::PutVerticalPosition ( double _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4310)
inline double TGFrameworkSupport::TextEdit::GetVerticalPosition ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4311)
inline void TGFrameworkSupport::TextEdit::PutColor ( long _arg1 ) {
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4312)
inline long TGFrameworkSupport::TextEdit::GetColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4313)
inline void TGFrameworkSupport::TextEdit::PutHorizontalAlignment ( enum TextHorizontalAlignmentConstants _arg1 ) {
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4314)
inline enum TGFrameworkSupport::TextHorizontalAlignmentConstants TGFrameworkSupport::TextEdit::GetHorizontalAlignment ( ) {
    enum TextHorizontalAlignmentConstants _result;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4315)
inline void TGFrameworkSupport::TextEdit::PutBullet ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4316)
inline VARIANT_BOOL TGFrameworkSupport::TextEdit::GetBullet ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4317)
inline void TGFrameworkSupport::TextEdit::PutNumber ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4318)
inline VARIANT_BOOL TGFrameworkSupport::TextEdit::GetNumber ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4319)
inline void TGFrameworkSupport::TextEdit::PutRightIndent ( double _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4320)
inline double TGFrameworkSupport::TextEdit::GetRightIndent ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4321)
inline void TGFrameworkSupport::TextEdit::PutLeftIndent ( double _arg1 ) {
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4322)
inline double TGFrameworkSupport::TextEdit::GetLeftIndent ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4323)
inline void TGFrameworkSupport::TextEdit::PutFirstLineIndent ( double _arg1 ) {
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4324)
inline double TGFrameworkSupport::TextEdit::GetFirstLineIndent ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4325)
inline void TGFrameworkSupport::TextEdit::PutLineSpacing ( double _arg1 ) {
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4326)
inline double TGFrameworkSupport::TextEdit::GetLineSpacing ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4327)
inline void TGFrameworkSupport::TextEdit::PutBeforeSpacing ( double _arg1 ) {
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4328)
inline double TGFrameworkSupport::TextEdit::GetBeforeSpacing ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4329)
inline void TGFrameworkSupport::TextEdit::PutAfterSpacing ( double _arg1 ) {
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4330)
inline double TGFrameworkSupport::TextEdit::GetAfterSpacing ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4331)
inline VARIANT_BOOL TGFrameworkSupport::TextEdit::GetIsEmpty ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4332)
inline void TGFrameworkSupport::TextEdit::PutCharacters ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4333)
inline _bstr_t TGFrameworkSupport::TextEdit::GetCharacters ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4334)
inline void TGFrameworkSupport::TextEdit::PutInsertIndex ( long _arg1 ) {
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4335)
inline long TGFrameworkSupport::TextEdit::GetInsertIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4336)
inline int TGFrameworkSupport::TextEdit::GetTabCount ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x1c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4337)
inline HRESULT TGFrameworkSupport::TextEdit::TabStop ( enum TextTabTypeConstants Type, double Distance ) {
    return _com_dispatch_method(this, 0x21, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005", Type, Distance);
}

#pragma implementation_key(4338)
inline HRESULT TGFrameworkSupport::TextEdit::SetTabStop ( int Index, enum TextTabTypeConstants Type, double Distance ) {
    return _com_dispatch_method(this, 0x23, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0005", Index, Type, Distance);
}

#pragma implementation_key(4339)
inline HRESULT TGFrameworkSupport::TextEdit::GetTabStop ( int Index, enum TextTabTypeConstants * Type, double * Distance ) {
    return _com_dispatch_method(this, 0x22, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4003\x4005", Index, Type, Distance);
}

#pragma implementation_key(4340)
inline HRESULT TGFrameworkSupport::TextEdit::ClearTabStops ( ) {
    return _com_dispatch_method(this, 0x24, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4341)
inline HRESULT TGFrameworkSupport::TextEdit::SetSelect ( long Start, long End, enum TextSelectConstants option ) {
    return _com_dispatch_method(this, 0x35, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0003", Start, End, option);
}

#pragma implementation_key(4342)
inline HRESULT TGFrameworkSupport::TextEdit::GetSelect ( long * Start, long * End ) {
    return _com_dispatch_method(this, 0x34, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4003", Start, End);
}

#pragma implementation_key(4343)
inline HRESULT TGFrameworkSupport::TextEdit::Cut ( ) {
    return _com_dispatch_method(this, 0x26, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4344)
inline HRESULT TGFrameworkSupport::TextEdit::Paste ( ) {
    return _com_dispatch_method(this, 0x27, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4345)
inline HRESULT TGFrameworkSupport::TextEdit::Copy ( ) {
    return _com_dispatch_method(this, 0x28, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4346)
inline HRESULT TGFrameworkSupport::TextEdit::Clear ( ) {
    return _com_dispatch_method(this, 0x29, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4347)
inline VARIANT_BOOL TGFrameworkSupport::TextEdit::PointInsideBox ( double x, double y, double z ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2c, DISPATCH_METHOD, VT_BOOL, (void*)&_result, 
        L"\x0005\x0005\x0005", x, y, z);
    return _result;
}

#pragma implementation_key(4348)
inline double TGFrameworkSupport::TextEdit::GetTextScale ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3009, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4349)
inline void TGFrameworkSupport::TextEdit::PutTextScale ( double _arg1 ) {
    _com_dispatch_method(this, 0x3009, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4350)
inline void TGFrameworkSupport::TextEdit::PutSpecialIndentType ( enum TextSpecialIndentTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x413c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4351)
inline enum TGFrameworkSupport::TextSpecialIndentTypeConstants TGFrameworkSupport::TextEdit::GetSpecialIndentType ( ) {
    enum TextSpecialIndentTypeConstants _result;
    _com_dispatch_method(this, 0x413c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4352)
inline void TGFrameworkSupport::TextEdit::PutLineSpacingType ( enum TextLineSpacingTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x413d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4353)
inline enum TGFrameworkSupport::TextLineSpacingTypeConstants TGFrameworkSupport::TextEdit::GetLineSpacingType ( ) {
    enum TextLineSpacingTypeConstants _result;
    _com_dispatch_method(this, 0x413d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4354)
inline HRESULT TGFrameworkSupport::TextEdit::InsertFraction ( _bstr_t UpperText, _bstr_t LowerText, enum TextFractionTypeConstants typeOption, enum TextFractionAlignConstants alignOption, enum TextFractionSizeConstants fractionSize ) {
    return _com_dispatch_method(this, 0x413e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0003\x0003\x0003", (BSTR)UpperText, (BSTR)LowerText, typeOption, alignOption, fractionSize);
}

#pragma implementation_key(4355)
inline HRESULT TGFrameworkSupport::TextEdit::GetFraction ( VARIANT_BOOL * Flag, BSTR * UpperText, BSTR * LowerText, enum TextFractionTypeConstants * typeOption, enum TextFractionAlignConstants * alignOption, enum TextFractionSizeConstants * fractionSize ) {
    return _com_dispatch_method(this, 0x413f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b\x4008\x4008\x4003\x4003\x4003", Flag, UpperText, LowerText, typeOption, alignOption, fractionSize);
}

#pragma implementation_key(4356)
inline HRESULT TGFrameworkSupport::TextEdit::SetBulletList ( enum TextBulletTypeConstants Value ) {
    return _com_dispatch_method(this, 0x4140, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Value);
}

#pragma implementation_key(4357)
inline HRESULT TGFrameworkSupport::TextEdit::GetBulletList ( VARIANT_BOOL * Flag, enum TextBulletTypeConstants * Value ) {
    return _com_dispatch_method(this, 0x4141, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b\x4003", Flag, Value);
}

#pragma implementation_key(4358)
inline HRESULT TGFrameworkSupport::TextEdit::SetNumberList ( enum TextNumberTypeConstants Type, enum TextNumberFormatConstants format, enum TextNumberJustificationConstants align ) {
    return _com_dispatch_method(this, 0x4142, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0003", Type, format, align);
}

#pragma implementation_key(4359)
inline HRESULT TGFrameworkSupport::TextEdit::GetNumberList ( VARIANT_BOOL * Flag, enum TextNumberTypeConstants * Type, enum TextNumberFormatConstants * format, enum TextNumberJustificationConstants * align ) {
    return _com_dispatch_method(this, 0x4143, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b\x4003\x4003\x4003", Flag, Type, format, align);
}

#pragma implementation_key(4360)
inline HRESULT TGFrameworkSupport::TextEdit::SetNoList ( ) {
    return _com_dispatch_method(this, 0x4144, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4361)
inline HRESULT TGFrameworkSupport::TextEdit::IncreaseIndent ( ) {
    return _com_dispatch_method(this, 0x4145, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4362)
inline HRESULT TGFrameworkSupport::TextEdit::DecreaseIndent ( ) {
    return _com_dispatch_method(this, 0x4146, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4363)
inline HRESULT TGFrameworkSupport::TextEdit::RestartNumbering ( ) {
    return _com_dispatch_method(this, 0x4147, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4364)
inline HRESULT TGFrameworkSupport::TextEdit::ContinueNumbering ( ) {
    return _com_dispatch_method(this, 0x4148, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4365)
inline void TGFrameworkSupport::TextEdit::PutNumberingStartValue ( int _arg1 ) {
    _com_dispatch_method(this, 0x4149, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4366)
inline int TGFrameworkSupport::TextEdit::GetNumberingStartValue ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4149, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

//
// interface _ITextEditAuto wrapper method implementations
//

#pragma implementation_key(4367)
inline void TGFrameworkSupport::_ITextEditAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4368)
inline _bstr_t TGFrameworkSupport::_ITextEditAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4369)
inline void TGFrameworkSupport::_ITextEditAuto::PutLanguage ( long Lcid ) {
    HRESULT _hr = put_Language(Lcid);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4370)
inline long TGFrameworkSupport::_ITextEditAuto::GetLanguage ( ) {
    long _result = 0;
    HRESULT _hr = get_Language(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4371)
inline void TGFrameworkSupport::_ITextEditAuto::PutTextSize ( double TextSize ) {
    HRESULT _hr = put_TextSize(TextSize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4372)
inline double TGFrameworkSupport::_ITextEditAuto::GetTextSize ( ) {
    double _result = 0;
    HRESULT _hr = get_TextSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4373)
inline void TGFrameworkSupport::_ITextEditAuto::PutAspectRatio ( double Ratio ) {
    HRESULT _hr = put_AspectRatio(Ratio);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4374)
inline double TGFrameworkSupport::_ITextEditAuto::GetAspectRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_AspectRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4375)
inline void TGFrameworkSupport::_ITextEditAuto::PutBold ( VARIANT_BOOL Bold ) {
    HRESULT _hr = put_Bold(Bold);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4376)
inline VARIANT_BOOL TGFrameworkSupport::_ITextEditAuto::GetBold ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Bold(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4377)
inline void TGFrameworkSupport::_ITextEditAuto::PutItalic ( VARIANT_BOOL Italic ) {
    HRESULT _hr = put_Italic(Italic);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4378)
inline VARIANT_BOOL TGFrameworkSupport::_ITextEditAuto::GetItalic ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Italic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4379)
inline void TGFrameworkSupport::_ITextEditAuto::PutUnderLine ( VARIANT_BOOL uline ) {
    HRESULT _hr = put_UnderLine(uline);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4380)
inline VARIANT_BOOL TGFrameworkSupport::_ITextEditAuto::GetUnderLine ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UnderLine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4381)
inline void TGFrameworkSupport::_ITextEditAuto::PutSubScript ( VARIANT_BOOL SubScript ) {
    HRESULT _hr = put_SubScript(SubScript);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4382)
inline VARIANT_BOOL TGFrameworkSupport::_ITextEditAuto::GetSubScript ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SubScript(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4383)
inline void TGFrameworkSupport::_ITextEditAuto::PutSuperScript ( VARIANT_BOOL SuperScript ) {
    HRESULT _hr = put_SuperScript(SuperScript);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4384)
inline VARIANT_BOOL TGFrameworkSupport::_ITextEditAuto::GetSuperScript ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SuperScript(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4385)
inline void TGFrameworkSupport::_ITextEditAuto::PutFont ( _bstr_t FontName ) {
    HRESULT _hr = put_Font(FontName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4386)
inline _bstr_t TGFrameworkSupport::_ITextEditAuto::GetFont ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Font(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4387)
inline void TGFrameworkSupport::_ITextEditAuto::PutCharacterSpacing ( double space ) {
    HRESULT _hr = put_CharacterSpacing(space);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4388)
inline double TGFrameworkSupport::_ITextEditAuto::GetCharacterSpacing ( ) {
    double _result = 0;
    HRESULT _hr = get_CharacterSpacing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4389)
inline void TGFrameworkSupport::_ITextEditAuto::PutVerticalPosition ( double space ) {
    HRESULT _hr = put_VerticalPosition(space);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4390)
inline double TGFrameworkSupport::_ITextEditAuto::GetVerticalPosition ( ) {
    double _result = 0;
    HRESULT _hr = get_VerticalPosition(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4391)
inline void TGFrameworkSupport::_ITextEditAuto::PutColor ( long Color ) {
    HRESULT _hr = put_Color(Color);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4392)
inline long TGFrameworkSupport::_ITextEditAuto::GetColor ( ) {
    long _result = 0;
    HRESULT _hr = get_Color(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4393)
inline void TGFrameworkSupport::_ITextEditAuto::PutHorizontalAlignment ( enum TextHorizontalAlignmentConstants align ) {
    HRESULT _hr = put_HorizontalAlignment(align);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4394)
inline enum TGFrameworkSupport::TextHorizontalAlignmentConstants TGFrameworkSupport::_ITextEditAuto::GetHorizontalAlignment ( ) {
    enum TextHorizontalAlignmentConstants _result;
    HRESULT _hr = get_HorizontalAlignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4395)
inline void TGFrameworkSupport::_ITextEditAuto::PutBullet ( VARIANT_BOOL Bullet ) {
    HRESULT _hr = put_Bullet(Bullet);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4396)
inline VARIANT_BOOL TGFrameworkSupport::_ITextEditAuto::GetBullet ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Bullet(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4397)
inline void TGFrameworkSupport::_ITextEditAuto::PutNumber ( VARIANT_BOOL Number ) {
    HRESULT _hr = put_Number(Number);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4398)
inline VARIANT_BOOL TGFrameworkSupport::_ITextEditAuto::GetNumber ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Number(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4399)
inline void TGFrameworkSupport::_ITextEditAuto::PutRightIndent ( double Distance ) {
    HRESULT _hr = put_RightIndent(Distance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4400)
inline double TGFrameworkSupport::_ITextEditAuto::GetRightIndent ( ) {
    double _result = 0;
    HRESULT _hr = get_RightIndent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4401)
inline void TGFrameworkSupport::_ITextEditAuto::PutLeftIndent ( double Distance ) {
    HRESULT _hr = put_LeftIndent(Distance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4402)
inline double TGFrameworkSupport::_ITextEditAuto::GetLeftIndent ( ) {
    double _result = 0;
    HRESULT _hr = get_LeftIndent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4403)
inline void TGFrameworkSupport::_ITextEditAuto::PutFirstLineIndent ( double Distance ) {
    HRESULT _hr = put_FirstLineIndent(Distance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4404)
inline double TGFrameworkSupport::_ITextEditAuto::GetFirstLineIndent ( ) {
    double _result = 0;
    HRESULT _hr = get_FirstLineIndent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4405)
inline void TGFrameworkSupport::_ITextEditAuto::PutLineSpacing ( double Distance ) {
    HRESULT _hr = put_LineSpacing(Distance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4406)
inline double TGFrameworkSupport::_ITextEditAuto::GetLineSpacing ( ) {
    double _result = 0;
    HRESULT _hr = get_LineSpacing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4407)
inline void TGFrameworkSupport::_ITextEditAuto::PutBeforeSpacing ( double Distance ) {
    HRESULT _hr = put_BeforeSpacing(Distance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4408)
inline double TGFrameworkSupport::_ITextEditAuto::GetBeforeSpacing ( ) {
    double _result = 0;
    HRESULT _hr = get_BeforeSpacing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4409)
inline void TGFrameworkSupport::_ITextEditAuto::PutAfterSpacing ( double Distance ) {
    HRESULT _hr = put_AfterSpacing(Distance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4410)
inline double TGFrameworkSupport::_ITextEditAuto::GetAfterSpacing ( ) {
    double _result = 0;
    HRESULT _hr = get_AfterSpacing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4411)
inline VARIANT_BOOL TGFrameworkSupport::_ITextEditAuto::GetIsEmpty ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsEmpty(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4412)
inline void TGFrameworkSupport::_ITextEditAuto::PutCharacters ( _bstr_t Text ) {
    HRESULT _hr = put_Characters(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4413)
inline _bstr_t TGFrameworkSupport::_ITextEditAuto::GetCharacters ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Characters(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4414)
inline void TGFrameworkSupport::_ITextEditAuto::PutInsertIndex ( long Index ) {
    HRESULT _hr = put_InsertIndex(Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4415)
inline long TGFrameworkSupport::_ITextEditAuto::GetInsertIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_InsertIndex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4416)
inline int TGFrameworkSupport::_ITextEditAuto::GetTabCount ( ) {
    int _result = 0;
    HRESULT _hr = get_TabCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4417)
inline HRESULT TGFrameworkSupport::_ITextEditAuto::TabStop ( enum TextTabTypeConstants Type, double Distance ) {
    HRESULT _hr = raw_TabStop(Type, Distance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4418)
inline HRESULT TGFrameworkSupport::_ITextEditAuto::SetTabStop ( int Index, enum TextTabTypeConstants Type, double Distance ) {
    HRESULT _hr = raw_SetTabStop(Index, Type, Distance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4419)
inline HRESULT TGFrameworkSupport::_ITextEditAuto::GetTabStop ( int Index, enum TextTabTypeConstants * Type, double * Distance ) {
    HRESULT _hr = raw_GetTabStop(Index, Type, Distance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4420)
inline HRESULT TGFrameworkSupport::_ITextEditAuto::ClearTabStops ( ) {
    HRESULT _hr = raw_ClearTabStops();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4421)
inline HRESULT TGFrameworkSupport::_ITextEditAuto::SetSelect ( long Start, long End, enum TextSelectConstants option ) {
    HRESULT _hr = raw_SetSelect(Start, End, option);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4422)
inline HRESULT TGFrameworkSupport::_ITextEditAuto::GetSelect ( long * Start, long * End ) {
    HRESULT _hr = raw_GetSelect(Start, End);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4423)
inline HRESULT TGFrameworkSupport::_ITextEditAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4424)
inline HRESULT TGFrameworkSupport::_ITextEditAuto::Paste ( ) {
    HRESULT _hr = raw_Paste();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4425)
inline HRESULT TGFrameworkSupport::_ITextEditAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4426)
inline HRESULT TGFrameworkSupport::_ITextEditAuto::Clear ( ) {
    HRESULT _hr = raw_Clear();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4427)
inline VARIANT_BOOL TGFrameworkSupport::_ITextEditAuto::PointInsideBox ( double x, double y, double z ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_PointInsideBox(x, y, z, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4428)
inline double TGFrameworkSupport::_ITextEditAuto::GetTextScale ( ) {
    double _result = 0;
    HRESULT _hr = get_TextScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4429)
inline void TGFrameworkSupport::_ITextEditAuto::PutTextScale ( double pdAngle ) {
    HRESULT _hr = put_TextScale(pdAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4430)
inline void TGFrameworkSupport::_ITextEditAuto::PutSpecialIndentType ( enum TextSpecialIndentTypeConstants Value ) {
    HRESULT _hr = put_SpecialIndentType(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4431)
inline enum TGFrameworkSupport::TextSpecialIndentTypeConstants TGFrameworkSupport::_ITextEditAuto::GetSpecialIndentType ( ) {
    enum TextSpecialIndentTypeConstants _result;
    HRESULT _hr = get_SpecialIndentType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4432)
inline void TGFrameworkSupport::_ITextEditAuto::PutLineSpacingType ( enum TextLineSpacingTypeConstants Value ) {
    HRESULT _hr = put_LineSpacingType(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4433)
inline enum TGFrameworkSupport::TextLineSpacingTypeConstants TGFrameworkSupport::_ITextEditAuto::GetLineSpacingType ( ) {
    enum TextLineSpacingTypeConstants _result;
    HRESULT _hr = get_LineSpacingType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4434)
inline HRESULT TGFrameworkSupport::_ITextEditAuto::InsertFraction ( _bstr_t UpperText, _bstr_t LowerText, enum TextFractionTypeConstants typeOption, enum TextFractionAlignConstants alignOption, enum TextFractionSizeConstants fractionSize ) {
    HRESULT _hr = raw_InsertFraction(UpperText, LowerText, typeOption, alignOption, fractionSize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4435)
inline HRESULT TGFrameworkSupport::_ITextEditAuto::GetFraction ( VARIANT_BOOL * Flag, BSTR * UpperText, BSTR * LowerText, enum TextFractionTypeConstants * typeOption, enum TextFractionAlignConstants * alignOption, enum TextFractionSizeConstants * fractionSize ) {
    HRESULT _hr = raw_GetFraction(Flag, UpperText, LowerText, typeOption, alignOption, fractionSize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4436)
inline HRESULT TGFrameworkSupport::_ITextEditAuto::SetBulletList ( enum TextBulletTypeConstants Value ) {
    HRESULT _hr = raw_SetBulletList(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4437)
inline HRESULT TGFrameworkSupport::_ITextEditAuto::GetBulletList ( VARIANT_BOOL * Flag, enum TextBulletTypeConstants * Value ) {
    HRESULT _hr = raw_GetBulletList(Flag, Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4438)
inline HRESULT TGFrameworkSupport::_ITextEditAuto::SetNumberList ( enum TextNumberTypeConstants Type, enum TextNumberFormatConstants format, enum TextNumberJustificationConstants align ) {
    HRESULT _hr = raw_SetNumberList(Type, format, align);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4439)
inline HRESULT TGFrameworkSupport::_ITextEditAuto::GetNumberList ( VARIANT_BOOL * Flag, enum TextNumberTypeConstants * Type, enum TextNumberFormatConstants * format, enum TextNumberJustificationConstants * align ) {
    HRESULT _hr = raw_GetNumberList(Flag, Type, format, align);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4440)
inline HRESULT TGFrameworkSupport::_ITextEditAuto::SetNoList ( ) {
    HRESULT _hr = raw_SetNoList();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4441)
inline HRESULT TGFrameworkSupport::_ITextEditAuto::IncreaseIndent ( ) {
    HRESULT _hr = raw_IncreaseIndent();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4442)
inline HRESULT TGFrameworkSupport::_ITextEditAuto::DecreaseIndent ( ) {
    HRESULT _hr = raw_DecreaseIndent();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4443)
inline HRESULT TGFrameworkSupport::_ITextEditAuto::RestartNumbering ( ) {
    HRESULT _hr = raw_RestartNumbering();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4444)
inline HRESULT TGFrameworkSupport::_ITextEditAuto::ContinueNumbering ( ) {
    HRESULT _hr = raw_ContinueNumbering();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4445)
inline void TGFrameworkSupport::_ITextEditAuto::PutNumberingStartValue ( int Value ) {
    HRESULT _hr = put_NumberingStartValue(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4446)
inline int TGFrameworkSupport::_ITextEditAuto::GetNumberingStartValue ( ) {
    int _result = 0;
    HRESULT _hr = get_NumberingStartValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface _ITextBoxAuto wrapper method implementations
//

#pragma implementation_key(4447)
inline TGFrameworkSupport::TextEditPtr TGFrameworkSupport::_ITextBoxAuto::GetEdit ( ) {
    struct TextEdit * _result = 0;
    HRESULT _hr = get_Edit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TextEditPtr(_result, false);
}

#pragma implementation_key(4448)
inline void TGFrameworkSupport::_ITextBoxAuto::PutHeight ( double Value ) {
    HRESULT _hr = put_Height(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4449)
inline double TGFrameworkSupport::_ITextBoxAuto::GetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4450)
inline void TGFrameworkSupport::_ITextBoxAuto::PutWidth ( double Value ) {
    HRESULT _hr = put_Width(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4451)
inline double TGFrameworkSupport::_ITextBoxAuto::GetWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4452)
inline void TGFrameworkSupport::_ITextBoxAuto::PutRotationAngle ( double Value ) {
    HRESULT _hr = put_RotationAngle(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4453)
inline double TGFrameworkSupport::_ITextBoxAuto::GetRotationAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_RotationAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4454)
inline void TGFrameworkSupport::_ITextBoxAuto::PutBorderType ( enum TextBorderTypeConstants Value ) {
    HRESULT _hr = put_BorderType(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4455)
inline enum TGFrameworkSupport::TextBorderTypeConstants TGFrameworkSupport::_ITextBoxAuto::GetBorderType ( ) {
    enum TextBorderTypeConstants _result;
    HRESULT _hr = get_BorderType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4456)
inline void TGFrameworkSupport::_ITextBoxAuto::PutBorderLineStyle ( _bstr_t Style ) {
    HRESULT _hr = put_BorderLineStyle(Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4457)
inline _bstr_t TGFrameworkSupport::_ITextBoxAuto::GetBorderLineStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BorderLineStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4458)
inline void TGFrameworkSupport::_ITextBoxAuto::PutBorderLineWidth ( double Value ) {
    HRESULT _hr = put_BorderLineWidth(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4459)
inline double TGFrameworkSupport::_ITextBoxAuto::GetBorderLineWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_BorderLineWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4460)
inline void TGFrameworkSupport::_ITextBoxAuto::PutBorderLineColor ( long Value ) {
    HRESULT _hr = put_BorderLineColor(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4461)
inline long TGFrameworkSupport::_ITextBoxAuto::GetBorderLineColor ( ) {
    long _result = 0;
    HRESULT _hr = get_BorderLineColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4462)
inline void TGFrameworkSupport::_ITextBoxAuto::PutBorderOffset ( double Value ) {
    HRESULT _hr = put_BorderOffset(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4463)
inline double TGFrameworkSupport::_ITextBoxAuto::GetBorderOffset ( ) {
    double _result = 0;
    HRESULT _hr = get_BorderOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4464)
inline void TGFrameworkSupport::_ITextBoxAuto::PutVerticalAlignment ( enum TextVerticalAlignmentConstants Value ) {
    HRESULT _hr = put_VerticalAlignment(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4465)
inline enum TGFrameworkSupport::TextVerticalAlignmentConstants TGFrameworkSupport::_ITextBoxAuto::GetVerticalAlignment ( ) {
    enum TextVerticalAlignmentConstants _result;
    HRESULT _hr = get_VerticalAlignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4466)
inline void TGFrameworkSupport::_ITextBoxAuto::PutJustification ( enum TextJustificationConstants Value ) {
    HRESULT _hr = put_Justification(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4467)
inline enum TGFrameworkSupport::TextJustificationConstants TGFrameworkSupport::_ITextBoxAuto::GetJustification ( ) {
    enum TextJustificationConstants _result;
    HRESULT _hr = get_Justification(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4468)
inline HRESULT TGFrameworkSupport::_ITextBoxAuto::SetOrigin ( double x, double y, double z ) {
    HRESULT _hr = raw_SetOrigin(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4469)
inline HRESULT TGFrameworkSupport::_ITextBoxAuto::GetOrigin ( double * x, double * y, double * z ) {
    HRESULT _hr = raw_GetOrigin(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4470)
inline void TGFrameworkSupport::_ITextBoxAuto::PutFill ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_Fill(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4471)
inline VARIANT_BOOL TGFrameworkSupport::_ITextBoxAuto::GetFill ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Fill(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4472)
inline void TGFrameworkSupport::_ITextBoxAuto::PutShadow ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_Shadow(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4473)
inline VARIANT_BOOL TGFrameworkSupport::_ITextBoxAuto::GetShadow ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Shadow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4474)
inline void TGFrameworkSupport::_ITextBoxAuto::PutFillColor ( long FillColor ) {
    HRESULT _hr = put_FillColor(FillColor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4475)
inline long TGFrameworkSupport::_ITextBoxAuto::GetFillColor ( ) {
    long _result = 0;
    HRESULT _hr = get_FillColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4476)
inline void TGFrameworkSupport::_ITextBoxAuto::PutShadowOffset ( double ShadowOffset ) {
    HRESULT _hr = put_ShadowOffset(ShadowOffset);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4477)
inline double TGFrameworkSupport::_ITextBoxAuto::GetShadowOffset ( ) {
    double _result = 0;
    HRESULT _hr = get_ShadowOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4478)
inline void TGFrameworkSupport::_ITextBoxAuto::PutFlowDirection ( enum TextFlowDirectionConstants flowDirn ) {
    HRESULT _hr = put_FlowDirection(flowDirn);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4479)
inline enum TGFrameworkSupport::TextFlowDirectionConstants TGFrameworkSupport::_ITextBoxAuto::GetFlowDirection ( ) {
    enum TextFlowDirectionConstants _result;
    HRESULT _hr = get_FlowDirection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4480)
inline void TGFrameworkSupport::_ITextBoxAuto::PutFlowOrientation ( enum TextFlowOrientationConstants flowOrient ) {
    HRESULT _hr = put_FlowOrientation(flowOrient);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4481)
inline enum TGFrameworkSupport::TextFlowOrientationConstants TGFrameworkSupport::_ITextBoxAuto::GetFlowOrientation ( ) {
    enum TextFlowOrientationConstants _result;
    HRESULT _hr = get_FlowOrientation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4482)
inline void TGFrameworkSupport::_ITextBoxAuto::PutText ( _bstr_t Text ) {
    HRESULT _hr = put_Text(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4483)
inline _bstr_t TGFrameworkSupport::_ITextBoxAuto::GetText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Text(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4484)
inline void TGFrameworkSupport::_ITextBoxAuto::PutPropertyText ( _bstr_t _arg1 ) {
    HRESULT _hr = put_PropertyText(_arg1);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4485)
inline HRESULT TGFrameworkSupport::_ITextBoxAuto::FindAndReplacePropertyText ( _bstr_t findText, _bstr_t propText, VARIANT_BOOL ReplaceAll ) {
    HRESULT _hr = raw_FindAndReplacePropertyText(findText, propText, ReplaceAll);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4486)
inline void TGFrameworkSupport::_ITextBoxAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4487)
inline _bstr_t TGFrameworkSupport::_ITextBoxAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4488)
inline void TGFrameworkSupport::_ITextBoxAuto::PutPlacementType ( enum TextPlacementTypeConstants Type ) {
    HRESULT _hr = put_PlacementType(Type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4489)
inline enum TGFrameworkSupport::TextPlacementTypeConstants TGFrameworkSupport::_ITextBoxAuto::GetPlacementType ( ) {
    enum TextPlacementTypeConstants _result;
    HRESULT _hr = get_PlacementType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4490)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_ITextBoxAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4491)
inline long TGFrameworkSupport::_ITextBoxAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4492)
inline _bstr_t TGFrameworkSupport::_ITextBoxAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4493)
inline IDispatchPtr TGFrameworkSupport::_ITextBoxAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4494)
inline long TGFrameworkSupport::_ITextBoxAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4495)
inline long TGFrameworkSupport::_ITextBoxAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4496)
inline _bstr_t TGFrameworkSupport::_ITextBoxAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4497)
inline IDispatchPtr TGFrameworkSupport::_ITextBoxAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4498)
inline HRESULT TGFrameworkSupport::_ITextBoxAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4499)
inline HRESULT TGFrameworkSupport::_ITextBoxAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4500)
inline HRESULT TGFrameworkSupport::_ITextBoxAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4501)
inline HRESULT TGFrameworkSupport::_ITextBoxAuto::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    HRESULT _hr = raw_Move(XFrom, YFrom, XTo, YTo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4502)
inline HRESULT TGFrameworkSupport::_ITextBoxAuto::Scale ( double Factor ) {
    HRESULT _hr = raw_Scale(Factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4503)
inline HRESULT TGFrameworkSupport::_ITextBoxAuto::Rotate ( double Angle, double x, double y ) {
    HRESULT _hr = raw_Rotate(Angle, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4504)
inline HRESULT TGFrameworkSupport::_ITextBoxAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4505)
inline IDispatchPtr TGFrameworkSupport::_ITextBoxAuto::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Duplicate(XDistance, YDistance, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4506)
inline IDispatchPtr TGFrameworkSupport::_ITextBoxAuto::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Mirror(x1, y1, x2, y2, BooleanCopyFlag, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4507)
inline HRESULT TGFrameworkSupport::_ITextBoxAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4508)
inline HRESULT TGFrameworkSupport::_ITextBoxAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4509)
inline HRESULT TGFrameworkSupport::_ITextBoxAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4510)
inline HRESULT TGFrameworkSupport::_ITextBoxAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4511)
inline HRESULT TGFrameworkSupport::_ITextBoxAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4512)
inline long TGFrameworkSupport::_ITextBoxAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4513)
inline HRESULT TGFrameworkSupport::_ITextBoxAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4514)
inline HRESULT TGFrameworkSupport::_ITextBoxAuto::SetKeyPoint ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetKeyPoint(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4515)
inline IDispatchPtr TGFrameworkSupport::_ITextBoxAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4516)
inline VARIANT_BOOL TGFrameworkSupport::_ITextBoxAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4517)
inline double TGFrameworkSupport::_ITextBoxAuto::GetTextScale ( ) {
    double _result = 0;
    HRESULT _hr = get_TextScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4518)
inline void TGFrameworkSupport::_ITextBoxAuto::PutTextScale ( double pdAngle ) {
    HRESULT _hr = put_TextScale(pdAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4519)
inline void TGFrameworkSupport::_ITextBoxAuto::PutHorizontalAlignment ( enum TextHorizontalAlignmentConstants Value ) {
    HRESULT _hr = put_HorizontalAlignment(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4520)
inline enum TGFrameworkSupport::TextHorizontalAlignmentConstants TGFrameworkSupport::_ITextBoxAuto::GetHorizontalAlignment ( ) {
    enum TextHorizontalAlignmentConstants _result;
    HRESULT _hr = get_HorizontalAlignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4521)
inline HRESULT TGFrameworkSupport::_ITextBoxAuto::PromoteToCurrentVersion ( ) {
    HRESULT _hr = raw_PromoteToCurrentVersion();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4522)
inline void TGFrameworkSupport::_ITextBoxAuto::PutTabStopWidth ( double Value ) {
    HRESULT _hr = put_TabStopWidth(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4523)
inline double TGFrameworkSupport::_ITextBoxAuto::GetTabStopWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_TabStopWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4524)
inline void TGFrameworkSupport::_ITextBoxAuto::PutMinimumAspectRatio ( double Value ) {
    HRESULT _hr = put_MinimumAspectRatio(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4525)
inline double TGFrameworkSupport::_ITextBoxAuto::GetMinimumAspectRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_MinimumAspectRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4526)
inline void TGFrameworkSupport::_ITextBoxAuto::PutLineSpacingType ( enum TextLineSpacingTypeConstants Value ) {
    HRESULT _hr = put_LineSpacingType(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4527)
inline enum TGFrameworkSupport::TextLineSpacingTypeConstants TGFrameworkSupport::_ITextBoxAuto::GetLineSpacingType ( ) {
    enum TextLineSpacingTypeConstants _result;
    HRESULT _hr = get_LineSpacingType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4528)
inline void TGFrameworkSupport::_ITextBoxAuto::PutTextControlType ( enum TextControlTypeConstants Value ) {
    HRESULT _hr = put_TextControlType(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4529)
inline enum TGFrameworkSupport::TextControlTypeConstants TGFrameworkSupport::_ITextBoxAuto::GetTextControlType ( ) {
    enum TextControlTypeConstants _result;
    HRESULT _hr = get_TextControlType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4530)
inline void TGFrameworkSupport::_ITextBoxAuto::PutLineSpacing ( double Distance ) {
    HRESULT _hr = put_LineSpacing(Distance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4531)
inline double TGFrameworkSupport::_ITextBoxAuto::GetLineSpacing ( ) {
    double _result = 0;
    HRESULT _hr = get_LineSpacing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4532)
inline double TGFrameworkSupport::_ITextBoxAuto::GetActualTextLength ( ) {
    double _result = 0;
    HRESULT _hr = get_ActualTextLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4533)
inline void TGFrameworkSupport::_ITextBoxAuto::PutFillBackgroundColor ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_FillBackgroundColor(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4534)
inline VARIANT_BOOL TGFrameworkSupport::_ITextBoxAuto::GetFillBackgroundColor ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_FillBackgroundColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4535)
inline HRESULT TGFrameworkSupport::_ITextBoxAuto::GetReferencedObjectInfo ( SAFEARRAY * * ReferencedObjects, SAFEARRAY * * ReferencedObjectTypes ) {
    HRESULT _hr = raw_GetReferencedObjectInfo(ReferencedObjects, ReferencedObjectTypes);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4536)
inline void TGFrameworkSupport::_ITextBoxAuto::PutWatermark ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_Watermark(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4537)
inline VARIANT_BOOL TGFrameworkSupport::_ITextBoxAuto::GetWatermark ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Watermark(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4538)
inline HRESULT TGFrameworkSupport::_ITextBoxAuto::ReplaceTextWithSymbol ( _bstr_t Text ) {
    HRESULT _hr = raw_ReplaceTextWithSymbol(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4539)
inline HRESULT TGFrameworkSupport::_ITextBoxAuto::SaveAsNote ( _bstr_t NoteName, VARIANT_BOOL bNoteOverWrite ) {
    HRESULT _hr = raw_SaveAsNote(NoteName, bNoteOverWrite);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4540)
inline void TGFrameworkSupport::_ITextBoxAuto::PutParallelToScreen ( VARIANT_BOOL bGetParallelToScreen ) {
    HRESULT _hr = put_ParallelToScreen(bGetParallelToScreen);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4541)
inline long TGFrameworkSupport::_ITextBoxAuto::GetParallelToScreen ( ) {
    long _result = 0;
    HRESULT _hr = get_ParallelToScreen(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface TextProfiles wrapper method implementations
//

#pragma implementation_key(4542)
inline TGFramework::ApplicationPtr TGFrameworkSupport::TextProfiles::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x6004, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4543)
inline IDispatchPtr TGFrameworkSupport::TextProfiles::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x6005, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4544)
inline long TGFrameworkSupport::TextProfiles::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6006, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4545)
inline TGFrameworkSupport::TextProfilePtr TGFrameworkSupport::TextProfiles::Item ( const _variant_t & Index ) {
    struct TextProfile * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return TextProfilePtr(_result, false);
}

//
// dispinterface TextProfile wrapper method implementations
//

#pragma implementation_key(4546)
inline TGFramework::ApplicationPtr TGFrameworkSupport::TextProfile::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x6009, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4547)
inline IDispatchPtr TGFrameworkSupport::TextProfile::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x600a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4548)
inline _bstr_t TGFrameworkSupport::TextProfile::GetText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x600b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4549)
inline HRESULT TGFrameworkSupport::TextProfile::GetCharCount ( long * NumChars ) {
    return _com_dispatch_method(this, 0x6022, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003", NumChars);
}

#pragma implementation_key(4550)
inline HRESULT TGFrameworkSupport::TextProfile::GetCharCurveCount ( int CharIndex, long * NumCurves ) {
    return _com_dispatch_method(this, 0x601e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4003", CharIndex, NumCurves);
}

#pragma implementation_key(4551)
inline HRESULT TGFrameworkSupport::TextProfile::GetCharStrokedCurveData ( int CharIndex, int CurveIndex, long * NumNodes, VARIANT * Nodes, long * NumPoles, VARIANT * Poles, VARIANT * Knots, VARIANT * Rational, VARIANT * Weights, long * Degree, enum Geom2dFormConstants * Form, enum Geom2dScopeConstants * Scope ) {
    return _com_dispatch_method(this, 0x601f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x4003\x400c\x4003\x400c\x400c\x400c\x400c\x4003\x4003\x4003", CharIndex, CurveIndex, NumNodes, Nodes, NumPoles, Poles, Knots, Rational, Weights, Degree, Form, Scope);
}

#pragma implementation_key(4552)
inline _bstr_t TGFrameworkSupport::TextProfile::GetFontName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x600c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4553)
inline HRESULT TGFrameworkSupport::TextProfile::GetBoldState ( int CharIndex, VARIANT_BOOL * IsBold ) {
    return _com_dispatch_method(this, 0x6020, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x400b", CharIndex, IsBold);
}

#pragma implementation_key(4554)
inline HRESULT TGFrameworkSupport::TextProfile::GetItalicState ( int CharIndex, VARIANT_BOOL * IsItalic ) {
    return _com_dispatch_method(this, 0x6021, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x400b", CharIndex, IsItalic);
}

#pragma implementation_key(4555)
inline double TGFrameworkSupport::TextProfile::GetTextSize ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x600d, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4556)
inline HRESULT TGFrameworkSupport::TextProfile::GetAlignment ( int TextLineIndex, enum TextNumberJustificationConstants * JustifValue ) {
    return _com_dispatch_method(this, 0x6013, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4003", TextLineIndex, JustifValue);
}

#pragma implementation_key(4557)
inline HRESULT TGFrameworkSupport::TextProfile::Copy ( ) {
    return _com_dispatch_method(this, 0x6015, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4558)
inline HRESULT TGFrameworkSupport::TextProfile::Cut ( ) {
    return _com_dispatch_method(this, 0x6017, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4559)
inline HRESULT TGFrameworkSupport::TextProfile::Delete ( ) {
    return _com_dispatch_method(this, 0x6018, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4560)
inline HRESULT TGFrameworkSupport::TextProfile::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    return _com_dispatch_method(this, 0x6019, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", XFrom, YFrom, XTo, YTo);
}

#pragma implementation_key(4561)
inline HRESULT TGFrameworkSupport::TextProfile::GetAnchorPoint ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x601a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(4562)
inline HRESULT TGFrameworkSupport::TextProfile::SetAnchorPoint ( double x, double y ) {
    return _com_dispatch_method(this, 0x601b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(4563)
inline void TGFrameworkSupport::TextProfile::PutAnchorPointLocation ( enum AnchorPointLocationConstants _arg1 ) {
    _com_dispatch_method(this, 0x601c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4564)
inline enum TGFrameworkSupport::AnchorPointLocationConstants TGFrameworkSupport::TextProfile::GetAnchorPointLocation ( ) {
    enum AnchorPointLocationConstants _result;
    _com_dispatch_method(this, 0x601c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4565)
inline double TGFrameworkSupport::TextProfile::GetLetterSpacing ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x600e, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4566)
inline double TGFrameworkSupport::TextProfile::GetLineSpacing ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x600f, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4567)
inline double TGFrameworkSupport::TextProfile::GetMargin ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6010, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4568)
inline int TGFrameworkSupport::TextProfile::GetSmoothness ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x601d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4569)
inline void TGFrameworkSupport::TextProfile::PutMargin ( double _arg1 ) {
    _com_dispatch_method(this, 0x6010, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4570)
inline void TGFrameworkSupport::TextProfile::PutLineSpacing ( double _arg1 ) {
    _com_dispatch_method(this, 0x600f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4571)
inline void TGFrameworkSupport::TextProfile::PutLetterSpacing ( double _arg1 ) {
    _com_dispatch_method(this, 0x600e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4572)
inline void TGFrameworkSupport::TextProfile::PutTextSize ( double _arg1 ) {
    _com_dispatch_method(this, 0x600d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4573)
inline void TGFrameworkSupport::TextProfile::PutSmoothness ( int _arg1 ) {
    _com_dispatch_method(this, 0x601d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4574)
inline void TGFrameworkSupport::TextProfile::PutFontName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x600c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4575)
inline HRESULT TGFrameworkSupport::TextProfile::SetAlignment ( int TextLineIndex, enum TextNumberJustificationConstants JustifValue ) {
    return _com_dispatch_method(this, 0x6014, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", TextLineIndex, JustifValue);
}

#pragma implementation_key(4576)
inline HRESULT TGFrameworkSupport::TextProfile::SetBoldState ( int startCharIndex, int endCharIndex, VARIANT_BOOL IsBold ) {
    return _com_dispatch_method(this, 0x6011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x000b", startCharIndex, endCharIndex, IsBold);
}

#pragma implementation_key(4577)
inline HRESULT TGFrameworkSupport::TextProfile::SetItalicState ( int startCharIndex, int endCharIndex, VARIANT_BOOL IsItalic ) {
    return _com_dispatch_method(this, 0x6012, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x000b", startCharIndex, endCharIndex, IsItalic);
}

#pragma implementation_key(4578)
inline void TGFrameworkSupport::TextProfile::PutText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x600b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4579)
inline IDispatchPtr TGFrameworkSupport::TextProfile::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4580)
inline VARIANT_BOOL TGFrameworkSupport::TextProfile::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _ITextProfilesAuto wrapper method implementations
//

#pragma implementation_key(4581)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_ITextProfilesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4582)
inline IDispatchPtr TGFrameworkSupport::_ITextProfilesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4583)
inline long TGFrameworkSupport::_ITextProfilesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4584)
inline TGFrameworkSupport::TextProfilePtr TGFrameworkSupport::_ITextProfilesAuto::Item ( const _variant_t & Index ) {
    struct TextProfile * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TextProfilePtr(_result, false);
}

#pragma implementation_key(4585)
inline IUnknownPtr TGFrameworkSupport::_ITextProfilesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

//
// interface _ITextProfileAuto wrapper method implementations
//

#pragma implementation_key(4586)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_ITextProfileAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4587)
inline IDispatchPtr TGFrameworkSupport::_ITextProfileAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4588)
inline _bstr_t TGFrameworkSupport::_ITextProfileAuto::GetText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Text(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4589)
inline HRESULT TGFrameworkSupport::_ITextProfileAuto::GetCharCount ( long * NumChars ) {
    HRESULT _hr = raw_GetCharCount(NumChars);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4590)
inline HRESULT TGFrameworkSupport::_ITextProfileAuto::GetCharCurveCount ( int CharIndex, long * NumCurves ) {
    HRESULT _hr = raw_GetCharCurveCount(CharIndex, NumCurves);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4591)
inline HRESULT TGFrameworkSupport::_ITextProfileAuto::GetCharStrokedCurveData ( int CharIndex, int CurveIndex, long * NumNodes, VARIANT * Nodes, long * NumPoles, VARIANT * Poles, VARIANT * Knots, VARIANT * Rational, VARIANT * Weights, long * Degree, enum Geom2dFormConstants * Form, enum Geom2dScopeConstants * Scope ) {
    HRESULT _hr = raw_GetCharStrokedCurveData(CharIndex, CurveIndex, NumNodes, Nodes, NumPoles, Poles, Knots, Rational, Weights, Degree, Form, Scope);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4592)
inline _bstr_t TGFrameworkSupport::_ITextProfileAuto::GetFontName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FontName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4593)
inline HRESULT TGFrameworkSupport::_ITextProfileAuto::GetBoldState ( int CharIndex, VARIANT_BOOL * IsBold ) {
    HRESULT _hr = raw_GetBoldState(CharIndex, IsBold);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4594)
inline HRESULT TGFrameworkSupport::_ITextProfileAuto::GetItalicState ( int CharIndex, VARIANT_BOOL * IsItalic ) {
    HRESULT _hr = raw_GetItalicState(CharIndex, IsItalic);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4595)
inline double TGFrameworkSupport::_ITextProfileAuto::GetTextSize ( ) {
    double _result = 0;
    HRESULT _hr = get_TextSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4596)
inline HRESULT TGFrameworkSupport::_ITextProfileAuto::GetAlignment ( int TextLineIndex, enum TextNumberJustificationConstants * JustifValue ) {
    HRESULT _hr = raw_GetAlignment(TextLineIndex, JustifValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4597)
inline HRESULT TGFrameworkSupport::_ITextProfileAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4598)
inline HRESULT TGFrameworkSupport::_ITextProfileAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4599)
inline HRESULT TGFrameworkSupport::_ITextProfileAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4600)
inline HRESULT TGFrameworkSupport::_ITextProfileAuto::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    HRESULT _hr = raw_Move(XFrom, YFrom, XTo, YTo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4601)
inline HRESULT TGFrameworkSupport::_ITextProfileAuto::GetAnchorPoint ( double * x, double * y ) {
    HRESULT _hr = raw_GetAnchorPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4602)
inline HRESULT TGFrameworkSupport::_ITextProfileAuto::SetAnchorPoint ( double x, double y ) {
    HRESULT _hr = raw_SetAnchorPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4603)
inline void TGFrameworkSupport::_ITextProfileAuto::PutAnchorPointLocation ( enum AnchorPointLocationConstants Value ) {
    HRESULT _hr = put_AnchorPointLocation(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4604)
inline enum TGFrameworkSupport::AnchorPointLocationConstants TGFrameworkSupport::_ITextProfileAuto::GetAnchorPointLocation ( ) {
    enum AnchorPointLocationConstants _result;
    HRESULT _hr = get_AnchorPointLocation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4605)
inline double TGFrameworkSupport::_ITextProfileAuto::GetLetterSpacing ( ) {
    double _result = 0;
    HRESULT _hr = get_LetterSpacing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4606)
inline double TGFrameworkSupport::_ITextProfileAuto::GetLineSpacing ( ) {
    double _result = 0;
    HRESULT _hr = get_LineSpacing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4607)
inline double TGFrameworkSupport::_ITextProfileAuto::GetMargin ( ) {
    double _result = 0;
    HRESULT _hr = get_Margin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4608)
inline int TGFrameworkSupport::_ITextProfileAuto::GetSmoothness ( ) {
    int _result = 0;
    HRESULT _hr = get_Smoothness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4609)
inline void TGFrameworkSupport::_ITextProfileAuto::PutMargin ( double Margin ) {
    HRESULT _hr = put_Margin(Margin);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4610)
inline void TGFrameworkSupport::_ITextProfileAuto::PutLineSpacing ( double Distance ) {
    HRESULT _hr = put_LineSpacing(Distance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4611)
inline void TGFrameworkSupport::_ITextProfileAuto::PutLetterSpacing ( double space ) {
    HRESULT _hr = put_LetterSpacing(space);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4612)
inline void TGFrameworkSupport::_ITextProfileAuto::PutTextSize ( double TextSize ) {
    HRESULT _hr = put_TextSize(TextSize);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4613)
inline void TGFrameworkSupport::_ITextProfileAuto::PutSmoothness ( int Smoothness ) {
    HRESULT _hr = put_Smoothness(Smoothness);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4614)
inline void TGFrameworkSupport::_ITextProfileAuto::PutFontName ( _bstr_t FontName ) {
    HRESULT _hr = put_FontName(FontName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4615)
inline HRESULT TGFrameworkSupport::_ITextProfileAuto::SetAlignment ( int TextLineIndex, enum TextNumberJustificationConstants JustifValue ) {
    HRESULT _hr = raw_SetAlignment(TextLineIndex, JustifValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4616)
inline HRESULT TGFrameworkSupport::_ITextProfileAuto::SetBoldState ( int startCharIndex, int endCharIndex, VARIANT_BOOL IsBold ) {
    HRESULT _hr = raw_SetBoldState(startCharIndex, endCharIndex, IsBold);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4617)
inline HRESULT TGFrameworkSupport::_ITextProfileAuto::SetItalicState ( int startCharIndex, int endCharIndex, VARIANT_BOOL IsItalic ) {
    HRESULT _hr = raw_SetItalicState(startCharIndex, endCharIndex, IsItalic);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4618)
inline void TGFrameworkSupport::_ITextProfileAuto::PutText ( _bstr_t Text ) {
    HRESULT _hr = put_Text(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4619)
inline IDispatchPtr TGFrameworkSupport::_ITextProfileAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4620)
inline VARIANT_BOOL TGFrameworkSupport::_ITextProfileAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface DatumFrames wrapper method implementations
//

#pragma implementation_key(4621)
inline TGFramework::ApplicationPtr TGFrameworkSupport::DatumFrames::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4622)
inline long TGFrameworkSupport::DatumFrames::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4623)
inline IDispatchPtr TGFrameworkSupport::DatumFrames::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4624)
inline TGFrameworkSupport::DatumFramePtr TGFrameworkSupport::DatumFrames::Item ( const _variant_t & Index ) {
    struct DatumFrame * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return DatumFramePtr(_result, false);
}

#pragma implementation_key(4625)
inline void TGFrameworkSupport::DatumFrames::PutPlane ( IDispatch * _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(4626)
inline IDispatchPtr TGFrameworkSupport::DatumFrames::GetPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4627)
inline void TGFrameworkSupport::DatumFrames::PutStyle ( struct DimensionStyle * _arg1 ) {
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(4628)
inline TGFrameworkSupport::DimensionStylePtr TGFrameworkSupport::DatumFrames::GetStyle ( ) {
    struct DimensionStyle * _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DimensionStylePtr(_result, false);
}

#pragma implementation_key(4629)
inline TGFrameworkSupport::DatumFramePtr TGFrameworkSupport::DatumFrames::Add ( double x1, double y1, double z1 ) {
    struct DatumFrame * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005", x1, y1, z1);
    return DatumFramePtr(_result, false);
}

#pragma implementation_key(4630)
inline TGFrameworkSupport::DatumFramePtr TGFrameworkSupport::DatumFrames::AddByTerminator ( IDispatch * TerminatorObject, double x1, double y1, double z1, VARIANT_BOOL keyPoint1 ) {
    struct DatumFrame * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x000b", TerminatorObject, x1, y1, z1, keyPoint1);
    return DatumFramePtr(_result, false);
}

#pragma implementation_key(4631)
inline HRESULT TGFrameworkSupport::DatumFrames::ClearPlane ( ) {
    return _com_dispatch_method(this, 0x78, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4632)
inline HRESULT TGFrameworkSupport::DatumFrames::ClearStyle ( ) {
    return _com_dispatch_method(this, 0x79, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4633)
inline TGFrameworkSupport::AnnotInitDataPtr TGFrameworkSupport::DatumFrames::GetAnnotInitData ( ) {
    struct AnnotInitData * _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AnnotInitDataPtr(_result, false);
}

#pragma implementation_key(4634)
inline TGFrameworkSupport::DatumFramePtr TGFrameworkSupport::DatumFrames::AddDatumFrame ( struct AnnotInitData * AnnotInitData ) {
    struct DatumFrame * _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", AnnotInitData);
    return DatumFramePtr(_result, false);
}

//
// dispinterface DatumFrame wrapper method implementations
//

#pragma implementation_key(4635)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::DatumFrame::GetStyle ( ) {
    struct DimStyle * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DimStylePtr(_result, false);
}

#pragma implementation_key(4636)
inline _bstr_t TGFrameworkSupport::DatumFrame::GetDatum ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4637)
inline void TGFrameworkSupport::DatumFrame::PutDatum ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4638)
inline HRESULT TGFrameworkSupport::DatumFrame::SetTerminator ( IDispatch * TerminatorObj, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    return _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0005\x0005\x0005\x000b", TerminatorObj, x, y, z, keyPoint);
}

#pragma implementation_key(4639)
inline HRESULT TGFrameworkSupport::DatumFrame::GetTerminator ( IDispatch * * TerminatorObj, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    return _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4005\x4005\x4005\x400b", TerminatorObj, x, y, z, keyPoint);
}

#pragma implementation_key(4640)
inline HRESULT TGFrameworkSupport::DatumFrame::SetFreeSpacePoint ( double x, double y, double z ) {
    return _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", x, y, z);
}

#pragma implementation_key(4641)
inline HRESULT TGFrameworkSupport::DatumFrame::GetFreeSpacePoint ( double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005", x, y, z);
}

#pragma implementation_key(4642)
inline IDispatchPtr TGFrameworkSupport::DatumFrame::GetPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4643)
inline TGFramework::ApplicationPtr TGFrameworkSupport::DatumFrame::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4644)
inline long TGFrameworkSupport::DatumFrame::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1066, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4645)
inline _bstr_t TGFrameworkSupport::DatumFrame::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1067, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4646)
inline IDispatchPtr TGFrameworkSupport::DatumFrame::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1068, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4647)
inline long TGFrameworkSupport::DatumFrame::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1069, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4648)
inline long TGFrameworkSupport::DatumFrame::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x106b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4649)
inline _bstr_t TGFrameworkSupport::DatumFrame::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x106c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4650)
inline IDispatchPtr TGFrameworkSupport::DatumFrame::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x106d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4651)
inline HRESULT TGFrameworkSupport::DatumFrame::Copy ( ) {
    return _com_dispatch_method(this, 0x6001100a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4652)
inline HRESULT TGFrameworkSupport::DatumFrame::Cut ( ) {
    return _com_dispatch_method(this, 0x6001100b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4653)
inline HRESULT TGFrameworkSupport::DatumFrame::Delete ( ) {
    return _com_dispatch_method(this, 0x6001100c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4654)
inline HRESULT TGFrameworkSupport::DatumFrame::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    return _com_dispatch_method(this, 0x6001100d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", XFrom, YFrom, XTo, YTo);
}

#pragma implementation_key(4655)
inline HRESULT TGFrameworkSupport::DatumFrame::Scale ( double Factor ) {
    return _com_dispatch_method(this, 0x6001100e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Factor);
}

#pragma implementation_key(4656)
inline HRESULT TGFrameworkSupport::DatumFrame::Rotate ( double Angle, double x, double y ) {
    return _com_dispatch_method(this, 0x6001100f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", Angle, x, y);
}

#pragma implementation_key(4657)
inline HRESULT TGFrameworkSupport::DatumFrame::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60011011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(4658)
inline IDispatchPtr TGFrameworkSupport::DatumFrame::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60011012, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &XDistance, &YDistance);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4659)
inline IDispatchPtr TGFrameworkSupport::DatumFrame::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60011013, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x080c", x1, y1, x2, y2, &BooleanCopyFlag);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4660)
inline HRESULT TGFrameworkSupport::DatumFrame::BringToFront ( ) {
    return _com_dispatch_method(this, 0x60011014, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4661)
inline HRESULT TGFrameworkSupport::DatumFrame::BringForward ( ) {
    return _com_dispatch_method(this, 0x60011015, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4662)
inline HRESULT TGFrameworkSupport::DatumFrame::SendToBack ( ) {
    return _com_dispatch_method(this, 0x60011016, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4663)
inline HRESULT TGFrameworkSupport::DatumFrame::SendBackward ( ) {
    return _com_dispatch_method(this, 0x60011017, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4664)
inline HRESULT TGFrameworkSupport::DatumFrame::Select ( ) {
    return _com_dispatch_method(this, 0x60011018, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4665)
inline double TGFrameworkSupport::DatumFrame::GetBreakLineDistance ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3004, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4666)
inline void TGFrameworkSupport::DatumFrame::PutBreakLineDistance ( double _arg1 ) {
    _com_dispatch_method(this, 0x3004, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4667)
inline VARIANT_BOOL TGFrameworkSupport::DatumFrame::GetBreakLine ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3005, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4668)
inline void TGFrameworkSupport::DatumFrame::PutBreakLine ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3005, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4669)
inline VARIANT_BOOL TGFrameworkSupport::DatumFrame::GetBreakLineDirection ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3006, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4670)
inline void TGFrameworkSupport::DatumFrame::PutBreakLineDirection ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3006, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4671)
inline VARIANT_BOOL TGFrameworkSupport::DatumFrame::GetLeader ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3007, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4672)
inline void TGFrameworkSupport::DatumFrame::PutLeader ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3007, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4673)
inline long TGFrameworkSupport::DatumFrame::GetVertexCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3003, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4674)
inline HRESULT TGFrameworkSupport::DatumFrame::GetVertices ( long * VertexCount, SAFEARRAY * * Vertices ) {
    return _com_dispatch_method(this, 0x60013009, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6005", VertexCount, Vertices);
}

#pragma implementation_key(4675)
inline HRESULT TGFrameworkSupport::DatumFrame::SetVertices ( long VertexCount, SAFEARRAY * * Vertices ) {
    return _com_dispatch_method(this, 0x6001300a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6005", VertexCount, Vertices);
}

#pragma implementation_key(4676)
inline HRESULT TGFrameworkSupport::DatumFrame::GetVertex ( long Index, double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0x6001300b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005", Index, x, y, z);
}

#pragma implementation_key(4677)
inline HRESULT TGFrameworkSupport::DatumFrame::SetVertex ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x6001300c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(4678)
inline HRESULT TGFrameworkSupport::DatumFrame::InsertVertex ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x6001300d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(4679)
inline HRESULT TGFrameworkSupport::DatumFrame::AddVertex ( double x, double y, double z ) {
    return _com_dispatch_method(this, 0x6001300e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", x, y, z);
}

#pragma implementation_key(4680)
inline HRESULT TGFrameworkSupport::DatumFrame::RemoveVertex ( long Index ) {
    return _com_dispatch_method(this, 0x6001300f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Index);
}

#pragma implementation_key(4681)
inline long TGFrameworkSupport::DatumFrame::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4682)
inline HRESULT TGFrameworkSupport::DatumFrame::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x4002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(4683)
inline HRESULT TGFrameworkSupport::DatumFrame::SetKeyPoint ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x4003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(4684)
inline IDispatchPtr TGFrameworkSupport::DatumFrame::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4685)
inline VARIANT_BOOL TGFrameworkSupport::DatumFrame::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(4686)
inline double TGFrameworkSupport::DatumFrame::GetTextScale ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3009, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4687)
inline void TGFrameworkSupport::DatumFrame::PutTextScale ( double _arg1 ) {
    _com_dispatch_method(this, 0x3009, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4688)
inline void TGFrameworkSupport::DatumFrame::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x106f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4689)
inline _bstr_t TGFrameworkSupport::DatumFrame::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x106f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4690)
inline IDispatchPtr TGFrameworkSupport::DatumFrame::GetPMIPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1070, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4691)
inline double TGFrameworkSupport::DatumFrame::GetPMITrackDistance ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1071, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4692)
inline void TGFrameworkSupport::DatumFrame::PutPMITrackDistance ( double _arg1 ) {
    _com_dispatch_method(this, 0x1071, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4693)
inline void TGFrameworkSupport::DatumFrame::PutHidePMI ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1072, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4694)
inline VARIANT_BOOL TGFrameworkSupport::DatumFrame::GetHidePMI ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1072, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4695)
inline TGFrameworkSupport::DisplayDataPtr TGFrameworkSupport::DatumFrame::GetDisplayData ( ) {
    struct DisplayData * _result = 0;
    _com_dispatch_method(this, 0x1073, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return DisplayDataPtr(_result, false);
}

#pragma implementation_key(4696)
inline HRESULT TGFrameworkSupport::DatumFrame::PromoteToCurrentVersion ( ) {
    return _com_dispatch_method(this, 0x1074, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4697)
inline void TGFrameworkSupport::DatumFrame::PutPMIName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1075, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4698)
inline _bstr_t TGFrameworkSupport::DatumFrame::GetPMIName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1075, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4699)
inline HRESULT TGFrameworkSupport::DatumFrame::TransformToModelCoordinates ( double InputX, double InputY, double InputZ, double * ModelX, double * ModelY, double * ModelZ ) {
    return _com_dispatch_method(this, 0x1076, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x4005\x4005\x4005", InputX, InputY, InputZ, ModelX, ModelY, ModelZ);
}

#pragma implementation_key(4700)
inline VARIANT_BOOL TGFrameworkSupport::DatumFrame::GetIsTerminatorAttachedToEntity ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1077, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4701)
inline HRESULT TGFrameworkSupport::DatumFrame::GetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    return _com_dispatch_method(this, 0x1079, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009", ReferencedGeometries);
}

#pragma implementation_key(4702)
inline HRESULT TGFrameworkSupport::DatumFrame::SetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    return _com_dispatch_method(this, 0x1078, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009", ReferencedGeometries);
}

//
// interface _IDatumFramesAuto wrapper method implementations
//

#pragma implementation_key(4703)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IDatumFramesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4704)
inline long TGFrameworkSupport::_IDatumFramesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4705)
inline IDispatchPtr TGFrameworkSupport::_IDatumFramesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4706)
inline TGFrameworkSupport::DatumFramePtr TGFrameworkSupport::_IDatumFramesAuto::Item ( const _variant_t & Index ) {
    struct DatumFrame * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DatumFramePtr(_result, false);
}

#pragma implementation_key(4707)
inline IUnknownPtr TGFrameworkSupport::_IDatumFramesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(4708)
inline void TGFrameworkSupport::_IDatumFramesAuto::PutPlane ( IDispatch * Plane ) {
    HRESULT _hr = put_Plane(Plane);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4709)
inline IDispatchPtr TGFrameworkSupport::_IDatumFramesAuto::GetPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Plane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4710)
inline void TGFrameworkSupport::_IDatumFramesAuto::PutStyle ( struct DimensionStyle * Style ) {
    HRESULT _hr = put_Style(Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4711)
inline TGFrameworkSupport::DimensionStylePtr TGFrameworkSupport::_IDatumFramesAuto::GetStyle ( ) {
    struct DimensionStyle * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionStylePtr(_result, false);
}

#pragma implementation_key(4712)
inline TGFrameworkSupport::DatumFramePtr TGFrameworkSupport::_IDatumFramesAuto::Add ( double x1, double y1, double z1 ) {
    struct DatumFrame * _result = 0;
    HRESULT _hr = raw_Add(x1, y1, z1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DatumFramePtr(_result, false);
}

#pragma implementation_key(4713)
inline TGFrameworkSupport::DatumFramePtr TGFrameworkSupport::_IDatumFramesAuto::AddByTerminator ( IDispatch * TerminatorObject, double x1, double y1, double z1, VARIANT_BOOL keyPoint1 ) {
    struct DatumFrame * _result = 0;
    HRESULT _hr = raw_AddByTerminator(TerminatorObject, x1, y1, z1, keyPoint1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DatumFramePtr(_result, false);
}

#pragma implementation_key(4714)
inline HRESULT TGFrameworkSupport::_IDatumFramesAuto::ClearPlane ( ) {
    HRESULT _hr = raw_ClearPlane();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4715)
inline HRESULT TGFrameworkSupport::_IDatumFramesAuto::ClearStyle ( ) {
    HRESULT _hr = raw_ClearStyle();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4716)
inline TGFrameworkSupport::AnnotInitDataPtr TGFrameworkSupport::_IDatumFramesAuto::GetAnnotInitData ( ) {
    struct AnnotInitData * _result = 0;
    HRESULT _hr = get_AnnotInitData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AnnotInitDataPtr(_result, false);
}

#pragma implementation_key(4717)
inline TGFrameworkSupport::DatumFramePtr TGFrameworkSupport::_IDatumFramesAuto::AddDatumFrame ( struct AnnotInitData * AnnotInitData ) {
    struct DatumFrame * _result = 0;
    HRESULT _hr = raw_AddDatumFrame(AnnotInitData, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DatumFramePtr(_result, false);
}

//
// interface _IDatumFrameAuto wrapper method implementations
//

#pragma implementation_key(4718)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::_IDatumFrameAuto::GetStyle ( ) {
    struct DimStyle * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimStylePtr(_result, false);
}

#pragma implementation_key(4719)
inline _bstr_t TGFrameworkSupport::_IDatumFrameAuto::GetDatum ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Datum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4720)
inline void TGFrameworkSupport::_IDatumFrameAuto::PutDatum ( _bstr_t Text ) {
    HRESULT _hr = put_Datum(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4721)
inline HRESULT TGFrameworkSupport::_IDatumFrameAuto::SetTerminator ( IDispatch * TerminatorObj, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    HRESULT _hr = raw_SetTerminator(TerminatorObj, x, y, z, keyPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4722)
inline HRESULT TGFrameworkSupport::_IDatumFrameAuto::GetTerminator ( IDispatch * * TerminatorObj, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    HRESULT _hr = raw_GetTerminator(TerminatorObj, x, y, z, keyPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4723)
inline HRESULT TGFrameworkSupport::_IDatumFrameAuto::SetFreeSpacePoint ( double x, double y, double z ) {
    HRESULT _hr = raw_SetFreeSpacePoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4724)
inline HRESULT TGFrameworkSupport::_IDatumFrameAuto::GetFreeSpacePoint ( double * x, double * y, double * z ) {
    HRESULT _hr = raw_GetFreeSpacePoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4725)
inline IDispatchPtr TGFrameworkSupport::_IDatumFrameAuto::GetPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Plane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4726)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IDatumFrameAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4727)
inline long TGFrameworkSupport::_IDatumFrameAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4728)
inline _bstr_t TGFrameworkSupport::_IDatumFrameAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4729)
inline IDispatchPtr TGFrameworkSupport::_IDatumFrameAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4730)
inline long TGFrameworkSupport::_IDatumFrameAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4731)
inline long TGFrameworkSupport::_IDatumFrameAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4732)
inline _bstr_t TGFrameworkSupport::_IDatumFrameAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4733)
inline IDispatchPtr TGFrameworkSupport::_IDatumFrameAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4734)
inline HRESULT TGFrameworkSupport::_IDatumFrameAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4735)
inline HRESULT TGFrameworkSupport::_IDatumFrameAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4736)
inline HRESULT TGFrameworkSupport::_IDatumFrameAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4737)
inline HRESULT TGFrameworkSupport::_IDatumFrameAuto::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    HRESULT _hr = raw_Move(XFrom, YFrom, XTo, YTo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4738)
inline HRESULT TGFrameworkSupport::_IDatumFrameAuto::Scale ( double Factor ) {
    HRESULT _hr = raw_Scale(Factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4739)
inline HRESULT TGFrameworkSupport::_IDatumFrameAuto::Rotate ( double Angle, double x, double y ) {
    HRESULT _hr = raw_Rotate(Angle, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4740)
inline HRESULT TGFrameworkSupport::_IDatumFrameAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4741)
inline IDispatchPtr TGFrameworkSupport::_IDatumFrameAuto::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Duplicate(XDistance, YDistance, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4742)
inline IDispatchPtr TGFrameworkSupport::_IDatumFrameAuto::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Mirror(x1, y1, x2, y2, BooleanCopyFlag, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4743)
inline HRESULT TGFrameworkSupport::_IDatumFrameAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4744)
inline HRESULT TGFrameworkSupport::_IDatumFrameAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4745)
inline HRESULT TGFrameworkSupport::_IDatumFrameAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4746)
inline HRESULT TGFrameworkSupport::_IDatumFrameAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4747)
inline HRESULT TGFrameworkSupport::_IDatumFrameAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4748)
inline double TGFrameworkSupport::_IDatumFrameAuto::GetBreakLineDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_BreakLineDistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4749)
inline void TGFrameworkSupport::_IDatumFrameAuto::PutBreakLineDistance ( double Distance ) {
    HRESULT _hr = put_BreakLineDistance(Distance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4750)
inline VARIANT_BOOL TGFrameworkSupport::_IDatumFrameAuto::GetBreakLine ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BreakLine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4751)
inline void TGFrameworkSupport::_IDatumFrameAuto::PutBreakLine ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_BreakLine(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4752)
inline VARIANT_BOOL TGFrameworkSupport::_IDatumFrameAuto::GetBreakLineDirection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BreakLineDirection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4753)
inline void TGFrameworkSupport::_IDatumFrameAuto::PutBreakLineDirection ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_BreakLineDirection(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4754)
inline VARIANT_BOOL TGFrameworkSupport::_IDatumFrameAuto::GetLeader ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Leader(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4755)
inline void TGFrameworkSupport::_IDatumFrameAuto::PutLeader ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_Leader(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4756)
inline long TGFrameworkSupport::_IDatumFrameAuto::GetVertexCount ( ) {
    long _result = 0;
    HRESULT _hr = get_VertexCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4757)
inline HRESULT TGFrameworkSupport::_IDatumFrameAuto::GetVertices ( long * VertexCount, SAFEARRAY * * Vertices ) {
    HRESULT _hr = raw_GetVertices(VertexCount, Vertices);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4758)
inline HRESULT TGFrameworkSupport::_IDatumFrameAuto::SetVertices ( long VertexCount, SAFEARRAY * * Vertices ) {
    HRESULT _hr = raw_SetVertices(VertexCount, Vertices);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4759)
inline HRESULT TGFrameworkSupport::_IDatumFrameAuto::GetVertex ( long Index, double * x, double * y, double * z ) {
    HRESULT _hr = raw_GetVertex(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4760)
inline HRESULT TGFrameworkSupport::_IDatumFrameAuto::SetVertex ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetVertex(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4761)
inline HRESULT TGFrameworkSupport::_IDatumFrameAuto::InsertVertex ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_InsertVertex(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4762)
inline HRESULT TGFrameworkSupport::_IDatumFrameAuto::AddVertex ( double x, double y, double z ) {
    HRESULT _hr = raw_AddVertex(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4763)
inline HRESULT TGFrameworkSupport::_IDatumFrameAuto::RemoveVertex ( long Index ) {
    HRESULT _hr = raw_RemoveVertex(Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4764)
inline long TGFrameworkSupport::_IDatumFrameAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4765)
inline HRESULT TGFrameworkSupport::_IDatumFrameAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4766)
inline HRESULT TGFrameworkSupport::_IDatumFrameAuto::SetKeyPoint ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetKeyPoint(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4767)
inline IDispatchPtr TGFrameworkSupport::_IDatumFrameAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4768)
inline VARIANT_BOOL TGFrameworkSupport::_IDatumFrameAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4769)
inline double TGFrameworkSupport::_IDatumFrameAuto::GetTextScale ( ) {
    double _result = 0;
    HRESULT _hr = get_TextScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4770)
inline void TGFrameworkSupport::_IDatumFrameAuto::PutTextScale ( double pdAngle ) {
    HRESULT _hr = put_TextScale(pdAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4771)
inline void TGFrameworkSupport::_IDatumFrameAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4772)
inline _bstr_t TGFrameworkSupport::_IDatumFrameAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4773)
inline IDispatchPtr TGFrameworkSupport::_IDatumFrameAuto::GetPMIPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_PMIPlane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4774)
inline double TGFrameworkSupport::_IDatumFrameAuto::GetPMITrackDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_PMITrackDistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4775)
inline void TGFrameworkSupport::_IDatumFrameAuto::PutPMITrackDistance ( double pdPMITrackDistance ) {
    HRESULT _hr = put_PMITrackDistance(pdPMITrackDistance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4776)
inline void TGFrameworkSupport::_IDatumFrameAuto::PutHidePMI ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_HidePMI(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4777)
inline VARIANT_BOOL TGFrameworkSupport::_IDatumFrameAuto::GetHidePMI ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HidePMI(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4778)
inline TGFrameworkSupport::DisplayDataPtr TGFrameworkSupport::_IDatumFrameAuto::GetDisplayData ( ) {
    struct DisplayData * _result = 0;
    HRESULT _hr = raw_GetDisplayData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DisplayDataPtr(_result, false);
}

#pragma implementation_key(4779)
inline HRESULT TGFrameworkSupport::_IDatumFrameAuto::PromoteToCurrentVersion ( ) {
    HRESULT _hr = raw_PromoteToCurrentVersion();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4780)
inline void TGFrameworkSupport::_IDatumFrameAuto::PutPMIName ( _bstr_t Text ) {
    HRESULT _hr = put_PMIName(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4781)
inline _bstr_t TGFrameworkSupport::_IDatumFrameAuto::GetPMIName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PMIName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4782)
inline HRESULT TGFrameworkSupport::_IDatumFrameAuto::TransformToModelCoordinates ( double InputX, double InputY, double InputZ, double * ModelX, double * ModelY, double * ModelZ ) {
    HRESULT _hr = raw_TransformToModelCoordinates(InputX, InputY, InputZ, ModelX, ModelY, ModelZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4783)
inline VARIANT_BOOL TGFrameworkSupport::_IDatumFrameAuto::GetIsTerminatorAttachedToEntity ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsTerminatorAttachedToEntity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4784)
inline HRESULT TGFrameworkSupport::_IDatumFrameAuto::GetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    HRESULT _hr = raw_GetReferencedGeometry(ReferencedGeometries);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4785)
inline HRESULT TGFrameworkSupport::_IDatumFrameAuto::SetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    HRESULT _hr = raw_SetReferencedGeometry(ReferencedGeometries);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface FeatureControlFrames wrapper method implementations
//

#pragma implementation_key(4786)
inline TGFramework::ApplicationPtr TGFrameworkSupport::FeatureControlFrames::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4787)
inline long TGFrameworkSupport::FeatureControlFrames::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4788)
inline IDispatchPtr TGFrameworkSupport::FeatureControlFrames::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4789)
inline TGFrameworkSupport::FeatureControlFramePtr TGFrameworkSupport::FeatureControlFrames::Item ( const _variant_t & Index ) {
    struct FeatureControlFrame * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return FeatureControlFramePtr(_result, false);
}

#pragma implementation_key(4790)
inline void TGFrameworkSupport::FeatureControlFrames::PutPlane ( IDispatch * _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(4791)
inline IDispatchPtr TGFrameworkSupport::FeatureControlFrames::GetPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4792)
inline void TGFrameworkSupport::FeatureControlFrames::PutStyle ( struct DimensionStyle * _arg1 ) {
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(4793)
inline TGFrameworkSupport::DimensionStylePtr TGFrameworkSupport::FeatureControlFrames::GetStyle ( ) {
    struct DimensionStyle * _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DimensionStylePtr(_result, false);
}

#pragma implementation_key(4794)
inline void TGFrameworkSupport::FeatureControlFrames::PutDataSet ( struct FeatureControlFrameDataSet * _arg1 ) {
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(4795)
inline TGFrameworkSupport::FeatureControlFrameDataSetPtr TGFrameworkSupport::FeatureControlFrames::GetDataSet ( ) {
    struct FeatureControlFrameDataSet * _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return FeatureControlFrameDataSetPtr(_result, false);
}

#pragma implementation_key(4796)
inline TGFrameworkSupport::FeatureControlFramePtr TGFrameworkSupport::FeatureControlFrames::Add ( double x, double y, double z ) {
    struct FeatureControlFrame * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005", x, y, z);
    return FeatureControlFramePtr(_result, false);
}

#pragma implementation_key(4797)
inline TGFrameworkSupport::FeatureControlFramePtr TGFrameworkSupport::FeatureControlFrames::AddByTerminator ( IDispatch * TerminatorObject, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    struct FeatureControlFrame * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x000b", TerminatorObject, x, y, z, keyPoint);
    return FeatureControlFramePtr(_result, false);
}

#pragma implementation_key(4798)
inline HRESULT TGFrameworkSupport::FeatureControlFrames::ClearPlane ( ) {
    return _com_dispatch_method(this, 0x78, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4799)
inline HRESULT TGFrameworkSupport::FeatureControlFrames::ClearStyle ( ) {
    return _com_dispatch_method(this, 0x79, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4800)
inline HRESULT TGFrameworkSupport::FeatureControlFrames::ClearDataSet ( ) {
    return _com_dispatch_method(this, 0x7a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4801)
inline TGFrameworkSupport::AnnotInitDataPtr TGFrameworkSupport::FeatureControlFrames::GetAnnotInitData ( ) {
    struct AnnotInitData * _result = 0;
    _com_dispatch_method(this, 0x107d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AnnotInitDataPtr(_result, false);
}

#pragma implementation_key(4802)
inline TGFrameworkSupport::FeatureControlFramePtr TGFrameworkSupport::FeatureControlFrames::AddFeatureControlFrame ( struct AnnotInitData * AnnotInitData ) {
    struct FeatureControlFrame * _result = 0;
    _com_dispatch_method(this, 0x107e, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", AnnotInitData);
    return FeatureControlFramePtr(_result, false);
}

//
// dispinterface FeatureControlFrame wrapper method implementations
//

#pragma implementation_key(4803)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::FeatureControlFrame::GetStyle ( ) {
    struct DimStyle * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DimStylePtr(_result, false);
}

#pragma implementation_key(4804)
inline void TGFrameworkSupport::FeatureControlFrame::PutBoxAlignment ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8ae, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4805)
inline VARIANT_BOOL TGFrameworkSupport::FeatureControlFrame::GetBoxAlignment ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8ae, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4806)
inline void TGFrameworkSupport::FeatureControlFrame::PutCompositeFrame ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4807)
inline VARIANT_BOOL TGFrameworkSupport::FeatureControlFrame::GetCompositeFrame ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4808)
inline HRESULT TGFrameworkSupport::FeatureControlFrame::SetTerminator ( IDispatch * TerminatorObj, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    return _com_dispatch_method(this, 0x19, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0005\x0005\x0005\x000b", TerminatorObj, x, y, z, keyPoint);
}

#pragma implementation_key(4809)
inline HRESULT TGFrameworkSupport::FeatureControlFrame::GetTerminator ( IDispatch * * TerminatorObj, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    return _com_dispatch_method(this, 0x1b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4005\x4005\x4005\x400b", TerminatorObj, x, y, z, keyPoint);
}

#pragma implementation_key(4810)
inline HRESULT TGFrameworkSupport::FeatureControlFrame::SetFreeSpacePoint ( double x, double y, double z ) {
    return _com_dispatch_method(this, 0x1a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", x, y, z);
}

#pragma implementation_key(4811)
inline HRESULT TGFrameworkSupport::FeatureControlFrame::GetFreeSpacePoint ( double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0x1c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005", x, y, z);
}

#pragma implementation_key(4812)
inline IDispatchPtr TGFrameworkSupport::FeatureControlFrame::GetPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4813)
inline void TGFrameworkSupport::FeatureControlFrame::PutFCFAllAround ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4814)
inline VARIANT_BOOL TGFrameworkSupport::FeatureControlFrame::GetFCFAllAround ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4815)
inline void TGFrameworkSupport::FeatureControlFrame::PutPrimaryFrame ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x23, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4816)
inline _bstr_t TGFrameworkSupport::FeatureControlFrame::GetPrimaryFrame ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x23, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4817)
inline void TGFrameworkSupport::FeatureControlFrame::PutSecondaryFrame ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x24, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4818)
inline _bstr_t TGFrameworkSupport::FeatureControlFrame::GetSecondaryFrame ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x24, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4819)
inline void TGFrameworkSupport::FeatureControlFrame::PutProjectedToleranceFrame ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x25, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4820)
inline _bstr_t TGFrameworkSupport::FeatureControlFrame::GetProjectedToleranceFrame ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x25, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4821)
inline TGFramework::ApplicationPtr TGFrameworkSupport::FeatureControlFrame::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4822)
inline long TGFrameworkSupport::FeatureControlFrame::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1066, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4823)
inline _bstr_t TGFrameworkSupport::FeatureControlFrame::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1067, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4824)
inline IDispatchPtr TGFrameworkSupport::FeatureControlFrame::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1068, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4825)
inline long TGFrameworkSupport::FeatureControlFrame::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1069, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4826)
inline long TGFrameworkSupport::FeatureControlFrame::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x106b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4827)
inline _bstr_t TGFrameworkSupport::FeatureControlFrame::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x106c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4828)
inline IDispatchPtr TGFrameworkSupport::FeatureControlFrame::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x106d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4829)
inline HRESULT TGFrameworkSupport::FeatureControlFrame::Copy ( ) {
    return _com_dispatch_method(this, 0x6001100a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4830)
inline HRESULT TGFrameworkSupport::FeatureControlFrame::Cut ( ) {
    return _com_dispatch_method(this, 0x6001100b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4831)
inline HRESULT TGFrameworkSupport::FeatureControlFrame::Delete ( ) {
    return _com_dispatch_method(this, 0x6001100c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4832)
inline HRESULT TGFrameworkSupport::FeatureControlFrame::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    return _com_dispatch_method(this, 0x6001100d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", XFrom, YFrom, XTo, YTo);
}

#pragma implementation_key(4833)
inline HRESULT TGFrameworkSupport::FeatureControlFrame::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60011011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(4834)
inline IDispatchPtr TGFrameworkSupport::FeatureControlFrame::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60011012, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &XDistance, &YDistance);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4835)
inline HRESULT TGFrameworkSupport::FeatureControlFrame::BringToFront ( ) {
    return _com_dispatch_method(this, 0x60011014, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4836)
inline HRESULT TGFrameworkSupport::FeatureControlFrame::BringForward ( ) {
    return _com_dispatch_method(this, 0x60011015, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4837)
inline HRESULT TGFrameworkSupport::FeatureControlFrame::SendToBack ( ) {
    return _com_dispatch_method(this, 0x60011016, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4838)
inline HRESULT TGFrameworkSupport::FeatureControlFrame::SendBackward ( ) {
    return _com_dispatch_method(this, 0x60011017, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4839)
inline HRESULT TGFrameworkSupport::FeatureControlFrame::Select ( ) {
    return _com_dispatch_method(this, 0x60011018, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4840)
inline double TGFrameworkSupport::FeatureControlFrame::GetBreakLineDistance ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3004, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4841)
inline void TGFrameworkSupport::FeatureControlFrame::PutBreakLineDistance ( double _arg1 ) {
    _com_dispatch_method(this, 0x3004, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4842)
inline VARIANT_BOOL TGFrameworkSupport::FeatureControlFrame::GetBreakLine ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3005, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4843)
inline void TGFrameworkSupport::FeatureControlFrame::PutBreakLine ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3005, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4844)
inline VARIANT_BOOL TGFrameworkSupport::FeatureControlFrame::GetBreakLineDirection ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3006, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4845)
inline void TGFrameworkSupport::FeatureControlFrame::PutBreakLineDirection ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3006, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4846)
inline VARIANT_BOOL TGFrameworkSupport::FeatureControlFrame::GetLeader ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3007, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4847)
inline void TGFrameworkSupport::FeatureControlFrame::PutLeader ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3007, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4848)
inline long TGFrameworkSupport::FeatureControlFrame::GetVertexCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3003, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4849)
inline HRESULT TGFrameworkSupport::FeatureControlFrame::GetVertices ( long * VertexCount, SAFEARRAY * * Vertices ) {
    return _com_dispatch_method(this, 0x60013009, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6005", VertexCount, Vertices);
}

#pragma implementation_key(4850)
inline HRESULT TGFrameworkSupport::FeatureControlFrame::SetVertices ( long VertexCount, SAFEARRAY * * Vertices ) {
    return _com_dispatch_method(this, 0x6001300a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6005", VertexCount, Vertices);
}

#pragma implementation_key(4851)
inline HRESULT TGFrameworkSupport::FeatureControlFrame::GetVertex ( long Index, double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0x6001300b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005", Index, x, y, z);
}

#pragma implementation_key(4852)
inline HRESULT TGFrameworkSupport::FeatureControlFrame::SetVertex ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x6001300c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(4853)
inline HRESULT TGFrameworkSupport::FeatureControlFrame::InsertVertex ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x6001300d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(4854)
inline HRESULT TGFrameworkSupport::FeatureControlFrame::AddVertex ( double x, double y, double z ) {
    return _com_dispatch_method(this, 0x6001300e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", x, y, z);
}

#pragma implementation_key(4855)
inline HRESULT TGFrameworkSupport::FeatureControlFrame::RemoveVertex ( long Index ) {
    return _com_dispatch_method(this, 0x6001300f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Index);
}

#pragma implementation_key(4856)
inline long TGFrameworkSupport::FeatureControlFrame::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4857)
inline HRESULT TGFrameworkSupport::FeatureControlFrame::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x4002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(4858)
inline HRESULT TGFrameworkSupport::FeatureControlFrame::SetKeyPoint ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x4003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(4859)
inline double TGFrameworkSupport::FeatureControlFrame::GetRotationAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3008, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4860)
inline void TGFrameworkSupport::FeatureControlFrame::PutRotationAngle ( double _arg1 ) {
    _com_dispatch_method(this, 0x3008, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4861)
inline double TGFrameworkSupport::FeatureControlFrame::GetTextScale ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3009, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4862)
inline void TGFrameworkSupport::FeatureControlFrame::PutTextScale ( double _arg1 ) {
    _com_dispatch_method(this, 0x3009, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4863)
inline void TGFrameworkSupport::FeatureControlFrame::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x106e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4864)
inline _bstr_t TGFrameworkSupport::FeatureControlFrame::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x106e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4865)
inline IDispatchPtr TGFrameworkSupport::FeatureControlFrame::GetPMIPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x106f, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4866)
inline double TGFrameworkSupport::FeatureControlFrame::GetPMITrackDistance ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1070, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4867)
inline void TGFrameworkSupport::FeatureControlFrame::PutPMITrackDistance ( double _arg1 ) {
    _com_dispatch_method(this, 0x1070, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(4868)
inline void TGFrameworkSupport::FeatureControlFrame::PutHidePMI ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1071, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4869)
inline VARIANT_BOOL TGFrameworkSupport::FeatureControlFrame::GetHidePMI ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1071, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4870)
inline void TGFrameworkSupport::FeatureControlFrame::PutFCFAllOver ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x62, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4871)
inline VARIANT_BOOL TGFrameworkSupport::FeatureControlFrame::GetFCFAllOver ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x62, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4872)
inline void TGFrameworkSupport::FeatureControlFrame::PutTertiaryFrame ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1073, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4873)
inline _bstr_t TGFrameworkSupport::FeatureControlFrame::GetTertiaryFrame ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1073, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4874)
inline void TGFrameworkSupport::FeatureControlFrame::PutQuaternaryFrame ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1074, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4875)
inline _bstr_t TGFrameworkSupport::FeatureControlFrame::GetQuaternaryFrame ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1074, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4876)
inline void TGFrameworkSupport::FeatureControlFrame::PutCompositePrimaryAndSecondaryText ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1075, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4877)
inline VARIANT_BOOL TGFrameworkSupport::FeatureControlFrame::GetCompositePrimaryAndSecondaryText ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1075, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4878)
inline void TGFrameworkSupport::FeatureControlFrame::PutCompositeSecondaryAndTertiaryText ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1076, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4879)
inline VARIANT_BOOL TGFrameworkSupport::FeatureControlFrame::GetCompositeSecondaryAndTertiaryText ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1076, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4880)
inline void TGFrameworkSupport::FeatureControlFrame::PutCompositeTertiaryAndQuaternaryText ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1077, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(4881)
inline VARIANT_BOOL TGFrameworkSupport::FeatureControlFrame::GetCompositeTertiaryAndQuaternaryText ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1077, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4882)
inline void TGFrameworkSupport::FeatureControlFrame::PutOrientation ( enum DimFCFOrientationConstants _arg1 ) {
    _com_dispatch_method(this, 0x1078, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4883)
inline enum TGFrameworkSupport::DimFCFOrientationConstants TGFrameworkSupport::FeatureControlFrame::GetOrientation ( ) {
    enum DimFCFOrientationConstants _result;
    _com_dispatch_method(this, 0x1078, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4884)
inline void TGFrameworkSupport::FeatureControlFrame::PutLeaderTextConnectionPoint ( enum DimFCFLeaderTextConnectionPointConstants _arg1 ) {
    _com_dispatch_method(this, 0x1079, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(4885)
inline enum TGFrameworkSupport::DimFCFLeaderTextConnectionPointConstants TGFrameworkSupport::FeatureControlFrame::GetLeaderTextConnectionPoint ( ) {
    enum DimFCFLeaderTextConnectionPointConstants _result;
    _com_dispatch_method(this, 0x1079, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4886)
inline long TGFrameworkSupport::FeatureControlFrame::GetFCFBorderPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x107a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4887)
inline HRESULT TGFrameworkSupport::FeatureControlFrame::FCFBorderPointAtIndex ( long Index, double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0x107b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005", Index, x, y, z);
}

#pragma implementation_key(4888)
inline TGFrameworkSupport::DisplayDataPtr TGFrameworkSupport::FeatureControlFrame::GetDisplayData ( ) {
    struct DisplayData * _result = 0;
    _com_dispatch_method(this, 0x107c, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return DisplayDataPtr(_result, false);
}

#pragma implementation_key(4889)
inline HRESULT TGFrameworkSupport::FeatureControlFrame::PromoteToCurrentVersion ( ) {
    return _com_dispatch_method(this, 0x107d, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(4890)
inline HRESULT TGFrameworkSupport::FeatureControlFrame::SetAlignmentShape ( IDispatch * AlignmentShapeObj, double x, double y ) {
    return _com_dispatch_method(this, 0x107e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0005\x0005", AlignmentShapeObj, x, y);
}

#pragma implementation_key(4891)
inline HRESULT TGFrameworkSupport::FeatureControlFrame::GetAlignmentShape ( IDispatch * * AlignmentShapeObj, double * x, double * y ) {
    return _com_dispatch_method(this, 0x107f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4005\x4005", AlignmentShapeObj, x, y);
}

#pragma implementation_key(4892)
inline void TGFrameworkSupport::FeatureControlFrame::PutPMIName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1080, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(4893)
inline _bstr_t TGFrameworkSupport::FeatureControlFrame::GetPMIName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1080, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4894)
inline HRESULT TGFrameworkSupport::FeatureControlFrame::TransformToModelCoordinates ( double InputX, double InputY, double InputZ, double * ModelX, double * ModelY, double * ModelZ ) {
    return _com_dispatch_method(this, 0x1081, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x4005\x4005\x4005", InputX, InputY, InputZ, ModelX, ModelY, ModelZ);
}

#pragma implementation_key(4895)
inline VARIANT_BOOL TGFrameworkSupport::FeatureControlFrame::GetIsTerminatorAttachedToEntity ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1082, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4896)
inline HRESULT TGFrameworkSupport::FeatureControlFrame::GetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    return _com_dispatch_method(this, 0x1084, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009", ReferencedGeometries);
}

#pragma implementation_key(4897)
inline HRESULT TGFrameworkSupport::FeatureControlFrame::SetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    return _com_dispatch_method(this, 0x1083, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009", ReferencedGeometries);
}

#pragma implementation_key(4898)
inline HRESULT TGFrameworkSupport::FeatureControlFrame::GetReferencedObjectInfo ( SAFEARRAY * * ReferencedObjects, SAFEARRAY * * ReferencedObjectTypes ) {
    return _com_dispatch_method(this, 0x1085, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009\x6003", ReferencedObjects, ReferencedObjectTypes);
}

#pragma implementation_key(4899)
inline IDispatchPtr TGFrameworkSupport::FeatureControlFrame::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4900)
inline VARIANT_BOOL TGFrameworkSupport::FeatureControlFrame::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _IFeatureControlFrameAuto wrapper method implementations
//

#pragma implementation_key(4901)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::_IFeatureControlFrameAuto::GetStyle ( ) {
    struct DimStyle * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimStylePtr(_result, false);
}

#pragma implementation_key(4902)
inline void TGFrameworkSupport::_IFeatureControlFrameAuto::PutBoxAlignment ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_BoxAlignment(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4903)
inline VARIANT_BOOL TGFrameworkSupport::_IFeatureControlFrameAuto::GetBoxAlignment ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BoxAlignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4904)
inline void TGFrameworkSupport::_IFeatureControlFrameAuto::PutCompositeFrame ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_CompositeFrame(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4905)
inline VARIANT_BOOL TGFrameworkSupport::_IFeatureControlFrameAuto::GetCompositeFrame ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CompositeFrame(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4906)
inline HRESULT TGFrameworkSupport::_IFeatureControlFrameAuto::SetTerminator ( IDispatch * TerminatorObj, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    HRESULT _hr = raw_SetTerminator(TerminatorObj, x, y, z, keyPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4907)
inline HRESULT TGFrameworkSupport::_IFeatureControlFrameAuto::GetTerminator ( IDispatch * * TerminatorObj, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    HRESULT _hr = raw_GetTerminator(TerminatorObj, x, y, z, keyPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4908)
inline HRESULT TGFrameworkSupport::_IFeatureControlFrameAuto::SetFreeSpacePoint ( double x, double y, double z ) {
    HRESULT _hr = raw_SetFreeSpacePoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4909)
inline HRESULT TGFrameworkSupport::_IFeatureControlFrameAuto::GetFreeSpacePoint ( double * x, double * y, double * z ) {
    HRESULT _hr = raw_GetFreeSpacePoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4910)
inline IDispatchPtr TGFrameworkSupport::_IFeatureControlFrameAuto::GetPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Plane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4911)
inline void TGFrameworkSupport::_IFeatureControlFrameAuto::PutFCFAllAround ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_FCFAllAround(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4912)
inline VARIANT_BOOL TGFrameworkSupport::_IFeatureControlFrameAuto::GetFCFAllAround ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_FCFAllAround(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4913)
inline void TGFrameworkSupport::_IFeatureControlFrameAuto::PutPrimaryFrame ( _bstr_t Text ) {
    HRESULT _hr = put_PrimaryFrame(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4914)
inline _bstr_t TGFrameworkSupport::_IFeatureControlFrameAuto::GetPrimaryFrame ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PrimaryFrame(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4915)
inline void TGFrameworkSupport::_IFeatureControlFrameAuto::PutSecondaryFrame ( _bstr_t Text ) {
    HRESULT _hr = put_SecondaryFrame(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4916)
inline _bstr_t TGFrameworkSupport::_IFeatureControlFrameAuto::GetSecondaryFrame ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SecondaryFrame(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4917)
inline void TGFrameworkSupport::_IFeatureControlFrameAuto::PutProjectedToleranceFrame ( _bstr_t Text ) {
    HRESULT _hr = put_ProjectedToleranceFrame(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4918)
inline _bstr_t TGFrameworkSupport::_IFeatureControlFrameAuto::GetProjectedToleranceFrame ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ProjectedToleranceFrame(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4919)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IFeatureControlFrameAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(4920)
inline long TGFrameworkSupport::_IFeatureControlFrameAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4921)
inline _bstr_t TGFrameworkSupport::_IFeatureControlFrameAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4922)
inline IDispatchPtr TGFrameworkSupport::_IFeatureControlFrameAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4923)
inline long TGFrameworkSupport::_IFeatureControlFrameAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4924)
inline long TGFrameworkSupport::_IFeatureControlFrameAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4925)
inline _bstr_t TGFrameworkSupport::_IFeatureControlFrameAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4926)
inline IDispatchPtr TGFrameworkSupport::_IFeatureControlFrameAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4927)
inline HRESULT TGFrameworkSupport::_IFeatureControlFrameAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4928)
inline HRESULT TGFrameworkSupport::_IFeatureControlFrameAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4929)
inline HRESULT TGFrameworkSupport::_IFeatureControlFrameAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4930)
inline HRESULT TGFrameworkSupport::_IFeatureControlFrameAuto::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    HRESULT _hr = raw_Move(XFrom, YFrom, XTo, YTo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4931)
inline HRESULT TGFrameworkSupport::_IFeatureControlFrameAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4932)
inline IDispatchPtr TGFrameworkSupport::_IFeatureControlFrameAuto::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Duplicate(XDistance, YDistance, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4933)
inline HRESULT TGFrameworkSupport::_IFeatureControlFrameAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4934)
inline HRESULT TGFrameworkSupport::_IFeatureControlFrameAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4935)
inline HRESULT TGFrameworkSupport::_IFeatureControlFrameAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4936)
inline HRESULT TGFrameworkSupport::_IFeatureControlFrameAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4937)
inline HRESULT TGFrameworkSupport::_IFeatureControlFrameAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4938)
inline double TGFrameworkSupport::_IFeatureControlFrameAuto::GetBreakLineDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_BreakLineDistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4939)
inline void TGFrameworkSupport::_IFeatureControlFrameAuto::PutBreakLineDistance ( double Distance ) {
    HRESULT _hr = put_BreakLineDistance(Distance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4940)
inline VARIANT_BOOL TGFrameworkSupport::_IFeatureControlFrameAuto::GetBreakLine ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BreakLine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4941)
inline void TGFrameworkSupport::_IFeatureControlFrameAuto::PutBreakLine ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_BreakLine(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4942)
inline VARIANT_BOOL TGFrameworkSupport::_IFeatureControlFrameAuto::GetBreakLineDirection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BreakLineDirection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4943)
inline void TGFrameworkSupport::_IFeatureControlFrameAuto::PutBreakLineDirection ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_BreakLineDirection(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4944)
inline VARIANT_BOOL TGFrameworkSupport::_IFeatureControlFrameAuto::GetLeader ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Leader(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4945)
inline void TGFrameworkSupport::_IFeatureControlFrameAuto::PutLeader ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_Leader(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4946)
inline long TGFrameworkSupport::_IFeatureControlFrameAuto::GetVertexCount ( ) {
    long _result = 0;
    HRESULT _hr = get_VertexCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4947)
inline HRESULT TGFrameworkSupport::_IFeatureControlFrameAuto::GetVertices ( long * VertexCount, SAFEARRAY * * Vertices ) {
    HRESULT _hr = raw_GetVertices(VertexCount, Vertices);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4948)
inline HRESULT TGFrameworkSupport::_IFeatureControlFrameAuto::SetVertices ( long VertexCount, SAFEARRAY * * Vertices ) {
    HRESULT _hr = raw_SetVertices(VertexCount, Vertices);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4949)
inline HRESULT TGFrameworkSupport::_IFeatureControlFrameAuto::GetVertex ( long Index, double * x, double * y, double * z ) {
    HRESULT _hr = raw_GetVertex(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4950)
inline HRESULT TGFrameworkSupport::_IFeatureControlFrameAuto::SetVertex ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetVertex(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4951)
inline HRESULT TGFrameworkSupport::_IFeatureControlFrameAuto::InsertVertex ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_InsertVertex(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4952)
inline HRESULT TGFrameworkSupport::_IFeatureControlFrameAuto::AddVertex ( double x, double y, double z ) {
    HRESULT _hr = raw_AddVertex(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4953)
inline HRESULT TGFrameworkSupport::_IFeatureControlFrameAuto::RemoveVertex ( long Index ) {
    HRESULT _hr = raw_RemoveVertex(Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4954)
inline long TGFrameworkSupport::_IFeatureControlFrameAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4955)
inline HRESULT TGFrameworkSupport::_IFeatureControlFrameAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4956)
inline HRESULT TGFrameworkSupport::_IFeatureControlFrameAuto::SetKeyPoint ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetKeyPoint(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4957)
inline double TGFrameworkSupport::_IFeatureControlFrameAuto::GetRotationAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_RotationAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4958)
inline void TGFrameworkSupport::_IFeatureControlFrameAuto::PutRotationAngle ( double pdAngle ) {
    HRESULT _hr = put_RotationAngle(pdAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4959)
inline double TGFrameworkSupport::_IFeatureControlFrameAuto::GetTextScale ( ) {
    double _result = 0;
    HRESULT _hr = get_TextScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4960)
inline void TGFrameworkSupport::_IFeatureControlFrameAuto::PutTextScale ( double pdAngle ) {
    HRESULT _hr = put_TextScale(pdAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4961)
inline void TGFrameworkSupport::_IFeatureControlFrameAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4962)
inline _bstr_t TGFrameworkSupport::_IFeatureControlFrameAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4963)
inline IDispatchPtr TGFrameworkSupport::_IFeatureControlFrameAuto::GetPMIPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_PMIPlane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4964)
inline double TGFrameworkSupport::_IFeatureControlFrameAuto::GetPMITrackDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_PMITrackDistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4965)
inline void TGFrameworkSupport::_IFeatureControlFrameAuto::PutPMITrackDistance ( double pdPMITrackDistance ) {
    HRESULT _hr = put_PMITrackDistance(pdPMITrackDistance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4966)
inline void TGFrameworkSupport::_IFeatureControlFrameAuto::PutHidePMI ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_HidePMI(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4967)
inline VARIANT_BOOL TGFrameworkSupport::_IFeatureControlFrameAuto::GetHidePMI ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HidePMI(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4968)
inline void TGFrameworkSupport::_IFeatureControlFrameAuto::PutFCFAllOver ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_FCFAllOver(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4969)
inline VARIANT_BOOL TGFrameworkSupport::_IFeatureControlFrameAuto::GetFCFAllOver ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_FCFAllOver(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4970)
inline void TGFrameworkSupport::_IFeatureControlFrameAuto::PutTertiaryFrame ( _bstr_t Text ) {
    HRESULT _hr = put_TertiaryFrame(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4971)
inline _bstr_t TGFrameworkSupport::_IFeatureControlFrameAuto::GetTertiaryFrame ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TertiaryFrame(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4972)
inline void TGFrameworkSupport::_IFeatureControlFrameAuto::PutQuaternaryFrame ( _bstr_t Text ) {
    HRESULT _hr = put_QuaternaryFrame(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4973)
inline _bstr_t TGFrameworkSupport::_IFeatureControlFrameAuto::GetQuaternaryFrame ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_QuaternaryFrame(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4974)
inline void TGFrameworkSupport::_IFeatureControlFrameAuto::PutCompositePrimaryAndSecondaryText ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_CompositePrimaryAndSecondaryText(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4975)
inline VARIANT_BOOL TGFrameworkSupport::_IFeatureControlFrameAuto::GetCompositePrimaryAndSecondaryText ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CompositePrimaryAndSecondaryText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4976)
inline void TGFrameworkSupport::_IFeatureControlFrameAuto::PutCompositeSecondaryAndTertiaryText ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_CompositeSecondaryAndTertiaryText(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4977)
inline VARIANT_BOOL TGFrameworkSupport::_IFeatureControlFrameAuto::GetCompositeSecondaryAndTertiaryText ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CompositeSecondaryAndTertiaryText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4978)
inline void TGFrameworkSupport::_IFeatureControlFrameAuto::PutCompositeTertiaryAndQuaternaryText ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_CompositeTertiaryAndQuaternaryText(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4979)
inline VARIANT_BOOL TGFrameworkSupport::_IFeatureControlFrameAuto::GetCompositeTertiaryAndQuaternaryText ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CompositeTertiaryAndQuaternaryText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4980)
inline void TGFrameworkSupport::_IFeatureControlFrameAuto::PutOrientation ( enum DimFCFOrientationConstants Flag ) {
    HRESULT _hr = put_Orientation(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4981)
inline enum TGFrameworkSupport::DimFCFOrientationConstants TGFrameworkSupport::_IFeatureControlFrameAuto::GetOrientation ( ) {
    enum DimFCFOrientationConstants _result;
    HRESULT _hr = get_Orientation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4982)
inline void TGFrameworkSupport::_IFeatureControlFrameAuto::PutLeaderTextConnectionPoint ( enum DimFCFLeaderTextConnectionPointConstants Flag ) {
    HRESULT _hr = put_LeaderTextConnectionPoint(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4983)
inline enum TGFrameworkSupport::DimFCFLeaderTextConnectionPointConstants TGFrameworkSupport::_IFeatureControlFrameAuto::GetLeaderTextConnectionPoint ( ) {
    enum DimFCFLeaderTextConnectionPointConstants _result;
    HRESULT _hr = get_LeaderTextConnectionPoint(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4984)
inline long TGFrameworkSupport::_IFeatureControlFrameAuto::GetFCFBorderPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_FCFBorderPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4985)
inline HRESULT TGFrameworkSupport::_IFeatureControlFrameAuto::FCFBorderPointAtIndex ( long Index, double * x, double * y, double * z ) {
    HRESULT _hr = raw_FCFBorderPointAtIndex(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4986)
inline TGFrameworkSupport::DisplayDataPtr TGFrameworkSupport::_IFeatureControlFrameAuto::GetDisplayData ( ) {
    struct DisplayData * _result = 0;
    HRESULT _hr = raw_GetDisplayData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DisplayDataPtr(_result, false);
}

#pragma implementation_key(4987)
inline HRESULT TGFrameworkSupport::_IFeatureControlFrameAuto::PromoteToCurrentVersion ( ) {
    HRESULT _hr = raw_PromoteToCurrentVersion();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4988)
inline HRESULT TGFrameworkSupport::_IFeatureControlFrameAuto::SetAlignmentShape ( IDispatch * AlignmentShapeObj, double x, double y ) {
    HRESULT _hr = raw_SetAlignmentShape(AlignmentShapeObj, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4989)
inline HRESULT TGFrameworkSupport::_IFeatureControlFrameAuto::GetAlignmentShape ( IDispatch * * AlignmentShapeObj, double * x, double * y ) {
    HRESULT _hr = raw_GetAlignmentShape(AlignmentShapeObj, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4990)
inline void TGFrameworkSupport::_IFeatureControlFrameAuto::PutPMIName ( _bstr_t Text ) {
    HRESULT _hr = put_PMIName(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(4991)
inline _bstr_t TGFrameworkSupport::_IFeatureControlFrameAuto::GetPMIName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PMIName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(4992)
inline HRESULT TGFrameworkSupport::_IFeatureControlFrameAuto::TransformToModelCoordinates ( double InputX, double InputY, double InputZ, double * ModelX, double * ModelY, double * ModelZ ) {
    HRESULT _hr = raw_TransformToModelCoordinates(InputX, InputY, InputZ, ModelX, ModelY, ModelZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4993)
inline VARIANT_BOOL TGFrameworkSupport::_IFeatureControlFrameAuto::GetIsTerminatorAttachedToEntity ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsTerminatorAttachedToEntity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4994)
inline HRESULT TGFrameworkSupport::_IFeatureControlFrameAuto::GetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    HRESULT _hr = raw_GetReferencedGeometry(ReferencedGeometries);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4995)
inline HRESULT TGFrameworkSupport::_IFeatureControlFrameAuto::SetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    HRESULT _hr = raw_SetReferencedGeometry(ReferencedGeometries);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4996)
inline HRESULT TGFrameworkSupport::_IFeatureControlFrameAuto::GetReferencedObjectInfo ( SAFEARRAY * * ReferencedObjects, SAFEARRAY * * ReferencedObjectTypes ) {
    HRESULT _hr = raw_GetReferencedObjectInfo(ReferencedObjects, ReferencedObjectTypes);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(4997)
inline IDispatchPtr TGFrameworkSupport::_IFeatureControlFrameAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(4998)
inline VARIANT_BOOL TGFrameworkSupport::_IFeatureControlFrameAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface FeatureControlFrameDataSet wrapper method implementations
//

#pragma implementation_key(4999)
inline void TGFrameworkSupport::FeatureControlFrameDataSet::PutBoxAlignment ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8ae, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5000)
inline VARIANT_BOOL TGFrameworkSupport::FeatureControlFrameDataSet::GetBoxAlignment ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8ae, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5001)
inline void TGFrameworkSupport::FeatureControlFrameDataSet::PutCompositeFrame ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5002)
inline VARIANT_BOOL TGFrameworkSupport::FeatureControlFrameDataSet::GetCompositeFrame ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5003)
inline void TGFrameworkSupport::FeatureControlFrameDataSet::PutFCFAllAround ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5004)
inline VARIANT_BOOL TGFrameworkSupport::FeatureControlFrameDataSet::GetFCFAllAround ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5005)
inline void TGFrameworkSupport::FeatureControlFrameDataSet::PutPrimaryFrame ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x23, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5006)
inline _bstr_t TGFrameworkSupport::FeatureControlFrameDataSet::GetPrimaryFrame ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x23, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5007)
inline void TGFrameworkSupport::FeatureControlFrameDataSet::PutSecondaryFrame ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x24, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5008)
inline _bstr_t TGFrameworkSupport::FeatureControlFrameDataSet::GetSecondaryFrame ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x24, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5009)
inline void TGFrameworkSupport::FeatureControlFrameDataSet::PutProjectedToleranceFrame ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x25, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5010)
inline _bstr_t TGFrameworkSupport::FeatureControlFrameDataSet::GetProjectedToleranceFrame ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x25, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5011)
inline void TGFrameworkSupport::FeatureControlFrameDataSet::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5012)
inline _bstr_t TGFrameworkSupport::FeatureControlFrameDataSet::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5013)
inline void TGFrameworkSupport::FeatureControlFrameDataSet::PutFCFAllOver ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x62, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5014)
inline VARIANT_BOOL TGFrameworkSupport::FeatureControlFrameDataSet::GetFCFAllOver ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x62, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5015)
inline void TGFrameworkSupport::FeatureControlFrameDataSet::PutTertiaryFrame ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x106d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5016)
inline _bstr_t TGFrameworkSupport::FeatureControlFrameDataSet::GetTertiaryFrame ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x106d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5017)
inline void TGFrameworkSupport::FeatureControlFrameDataSet::PutQuaternaryFrame ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x106e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5018)
inline _bstr_t TGFrameworkSupport::FeatureControlFrameDataSet::GetQuaternaryFrame ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x106e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5019)
inline void TGFrameworkSupport::FeatureControlFrameDataSet::PutCompositePrimaryAndSecondaryText ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x106f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5020)
inline VARIANT_BOOL TGFrameworkSupport::FeatureControlFrameDataSet::GetCompositePrimaryAndSecondaryText ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x106f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5021)
inline void TGFrameworkSupport::FeatureControlFrameDataSet::PutCompositeSecondaryAndTertiaryText ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1070, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5022)
inline VARIANT_BOOL TGFrameworkSupport::FeatureControlFrameDataSet::GetCompositeSecondaryAndTertiaryText ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1070, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5023)
inline void TGFrameworkSupport::FeatureControlFrameDataSet::PutCompositeTertiaryAndQuaternaryText ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1071, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5024)
inline VARIANT_BOOL TGFrameworkSupport::FeatureControlFrameDataSet::GetCompositeTertiaryAndQuaternaryText ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1071, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5025)
inline IDispatchPtr TGFrameworkSupport::FeatureControlFrameDataSet::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5026)
inline VARIANT_BOOL TGFrameworkSupport::FeatureControlFrameDataSet::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _IFeatureControlFramesAuto wrapper method implementations
//

#pragma implementation_key(5027)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IFeatureControlFramesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5028)
inline long TGFrameworkSupport::_IFeatureControlFramesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5029)
inline IDispatchPtr TGFrameworkSupport::_IFeatureControlFramesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5030)
inline TGFrameworkSupport::FeatureControlFramePtr TGFrameworkSupport::_IFeatureControlFramesAuto::Item ( const _variant_t & Index ) {
    struct FeatureControlFrame * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return FeatureControlFramePtr(_result, false);
}

#pragma implementation_key(5031)
inline IUnknownPtr TGFrameworkSupport::_IFeatureControlFramesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5032)
inline void TGFrameworkSupport::_IFeatureControlFramesAuto::PutPlane ( IDispatch * Plane ) {
    HRESULT _hr = put_Plane(Plane);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5033)
inline IDispatchPtr TGFrameworkSupport::_IFeatureControlFramesAuto::GetPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Plane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5034)
inline void TGFrameworkSupport::_IFeatureControlFramesAuto::PutStyle ( struct DimensionStyle * Style ) {
    HRESULT _hr = put_Style(Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5035)
inline TGFrameworkSupport::DimensionStylePtr TGFrameworkSupport::_IFeatureControlFramesAuto::GetStyle ( ) {
    struct DimensionStyle * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionStylePtr(_result, false);
}

#pragma implementation_key(5036)
inline void TGFrameworkSupport::_IFeatureControlFramesAuto::PutDataSet ( struct FeatureControlFrameDataSet * DataSet ) {
    HRESULT _hr = put_DataSet(DataSet);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5037)
inline TGFrameworkSupport::FeatureControlFrameDataSetPtr TGFrameworkSupport::_IFeatureControlFramesAuto::GetDataSet ( ) {
    struct FeatureControlFrameDataSet * _result = 0;
    HRESULT _hr = get_DataSet(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return FeatureControlFrameDataSetPtr(_result, false);
}

#pragma implementation_key(5038)
inline TGFrameworkSupport::FeatureControlFramePtr TGFrameworkSupport::_IFeatureControlFramesAuto::Add ( double x, double y, double z ) {
    struct FeatureControlFrame * _result = 0;
    HRESULT _hr = raw_Add(x, y, z, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return FeatureControlFramePtr(_result, false);
}

#pragma implementation_key(5039)
inline TGFrameworkSupport::FeatureControlFramePtr TGFrameworkSupport::_IFeatureControlFramesAuto::AddByTerminator ( IDispatch * TerminatorObject, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    struct FeatureControlFrame * _result = 0;
    HRESULT _hr = raw_AddByTerminator(TerminatorObject, x, y, z, keyPoint, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return FeatureControlFramePtr(_result, false);
}

#pragma implementation_key(5040)
inline HRESULT TGFrameworkSupport::_IFeatureControlFramesAuto::ClearPlane ( ) {
    HRESULT _hr = raw_ClearPlane();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5041)
inline HRESULT TGFrameworkSupport::_IFeatureControlFramesAuto::ClearStyle ( ) {
    HRESULT _hr = raw_ClearStyle();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5042)
inline HRESULT TGFrameworkSupport::_IFeatureControlFramesAuto::ClearDataSet ( ) {
    HRESULT _hr = raw_ClearDataSet();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5043)
inline TGFrameworkSupport::AnnotInitDataPtr TGFrameworkSupport::_IFeatureControlFramesAuto::GetAnnotInitData ( ) {
    struct AnnotInitData * _result = 0;
    HRESULT _hr = get_AnnotInitData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AnnotInitDataPtr(_result, false);
}

#pragma implementation_key(5044)
inline TGFrameworkSupport::FeatureControlFramePtr TGFrameworkSupport::_IFeatureControlFramesAuto::AddFeatureControlFrame ( struct AnnotInitData * AnnotInitData ) {
    struct FeatureControlFrame * _result = 0;
    HRESULT _hr = raw_AddFeatureControlFrame(AnnotInitData, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return FeatureControlFramePtr(_result, false);
}

//
// interface _IFeatureControlFrameDataSetAuto wrapper method implementations
//

#pragma implementation_key(5045)
inline void TGFrameworkSupport::_IFeatureControlFrameDataSetAuto::PutBoxAlignment ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_BoxAlignment(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5046)
inline VARIANT_BOOL TGFrameworkSupport::_IFeatureControlFrameDataSetAuto::GetBoxAlignment ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BoxAlignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5047)
inline void TGFrameworkSupport::_IFeatureControlFrameDataSetAuto::PutCompositeFrame ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_CompositeFrame(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5048)
inline VARIANT_BOOL TGFrameworkSupport::_IFeatureControlFrameDataSetAuto::GetCompositeFrame ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CompositeFrame(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5049)
inline void TGFrameworkSupport::_IFeatureControlFrameDataSetAuto::PutFCFAllAround ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_FCFAllAround(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5050)
inline VARIANT_BOOL TGFrameworkSupport::_IFeatureControlFrameDataSetAuto::GetFCFAllAround ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_FCFAllAround(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5051)
inline void TGFrameworkSupport::_IFeatureControlFrameDataSetAuto::PutPrimaryFrame ( _bstr_t Text ) {
    HRESULT _hr = put_PrimaryFrame(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5052)
inline _bstr_t TGFrameworkSupport::_IFeatureControlFrameDataSetAuto::GetPrimaryFrame ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PrimaryFrame(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5053)
inline void TGFrameworkSupport::_IFeatureControlFrameDataSetAuto::PutSecondaryFrame ( _bstr_t Text ) {
    HRESULT _hr = put_SecondaryFrame(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5054)
inline _bstr_t TGFrameworkSupport::_IFeatureControlFrameDataSetAuto::GetSecondaryFrame ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SecondaryFrame(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5055)
inline void TGFrameworkSupport::_IFeatureControlFrameDataSetAuto::PutProjectedToleranceFrame ( _bstr_t Text ) {
    HRESULT _hr = put_ProjectedToleranceFrame(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5056)
inline _bstr_t TGFrameworkSupport::_IFeatureControlFrameDataSetAuto::GetProjectedToleranceFrame ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ProjectedToleranceFrame(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5057)
inline void TGFrameworkSupport::_IFeatureControlFrameDataSetAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5058)
inline _bstr_t TGFrameworkSupport::_IFeatureControlFrameDataSetAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5059)
inline void TGFrameworkSupport::_IFeatureControlFrameDataSetAuto::PutFCFAllOver ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_FCFAllOver(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5060)
inline VARIANT_BOOL TGFrameworkSupport::_IFeatureControlFrameDataSetAuto::GetFCFAllOver ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_FCFAllOver(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5061)
inline void TGFrameworkSupport::_IFeatureControlFrameDataSetAuto::PutTertiaryFrame ( _bstr_t Text ) {
    HRESULT _hr = put_TertiaryFrame(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5062)
inline _bstr_t TGFrameworkSupport::_IFeatureControlFrameDataSetAuto::GetTertiaryFrame ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TertiaryFrame(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5063)
inline void TGFrameworkSupport::_IFeatureControlFrameDataSetAuto::PutQuaternaryFrame ( _bstr_t Text ) {
    HRESULT _hr = put_QuaternaryFrame(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5064)
inline _bstr_t TGFrameworkSupport::_IFeatureControlFrameDataSetAuto::GetQuaternaryFrame ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_QuaternaryFrame(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5065)
inline void TGFrameworkSupport::_IFeatureControlFrameDataSetAuto::PutCompositePrimaryAndSecondaryText ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_CompositePrimaryAndSecondaryText(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5066)
inline VARIANT_BOOL TGFrameworkSupport::_IFeatureControlFrameDataSetAuto::GetCompositePrimaryAndSecondaryText ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CompositePrimaryAndSecondaryText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5067)
inline void TGFrameworkSupport::_IFeatureControlFrameDataSetAuto::PutCompositeSecondaryAndTertiaryText ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_CompositeSecondaryAndTertiaryText(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5068)
inline VARIANT_BOOL TGFrameworkSupport::_IFeatureControlFrameDataSetAuto::GetCompositeSecondaryAndTertiaryText ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CompositeSecondaryAndTertiaryText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5069)
inline void TGFrameworkSupport::_IFeatureControlFrameDataSetAuto::PutCompositeTertiaryAndQuaternaryText ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_CompositeTertiaryAndQuaternaryText(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5070)
inline VARIANT_BOOL TGFrameworkSupport::_IFeatureControlFrameDataSetAuto::GetCompositeTertiaryAndQuaternaryText ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CompositeTertiaryAndQuaternaryText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5071)
inline IDispatchPtr TGFrameworkSupport::_IFeatureControlFrameDataSetAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5072)
inline VARIANT_BOOL TGFrameworkSupport::_IFeatureControlFrameDataSetAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface SurfaceFinishSymbols wrapper method implementations
//

#pragma implementation_key(5073)
inline TGFramework::ApplicationPtr TGFrameworkSupport::SurfaceFinishSymbols::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5074)
inline long TGFrameworkSupport::SurfaceFinishSymbols::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5075)
inline IDispatchPtr TGFrameworkSupport::SurfaceFinishSymbols::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5076)
inline TGFrameworkSupport::SurfaceFinishSymbolPtr TGFrameworkSupport::SurfaceFinishSymbols::Item ( const _variant_t & Index ) {
    struct SurfaceFinishSymbol * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return SurfaceFinishSymbolPtr(_result, false);
}

#pragma implementation_key(5077)
inline void TGFrameworkSupport::SurfaceFinishSymbols::PutPlane ( IDispatch * _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(5078)
inline IDispatchPtr TGFrameworkSupport::SurfaceFinishSymbols::GetPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5079)
inline void TGFrameworkSupport::SurfaceFinishSymbols::PutStyle ( struct DimensionStyle * _arg1 ) {
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(5080)
inline TGFrameworkSupport::DimensionStylePtr TGFrameworkSupport::SurfaceFinishSymbols::GetStyle ( ) {
    struct DimensionStyle * _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DimensionStylePtr(_result, false);
}

#pragma implementation_key(5081)
inline void TGFrameworkSupport::SurfaceFinishSymbols::PutDataSet ( struct SurfaceFinishSymbolDataSet * _arg1 ) {
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(5082)
inline TGFrameworkSupport::SurfaceFinishSymbolPtr TGFrameworkSupport::SurfaceFinishSymbols::AddByTerminator ( IDispatch * TerminatorObject, double x1, double y1, double z1, VARIANT_BOOL keyPoint1 ) {
    struct SurfaceFinishSymbol * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x000b", TerminatorObject, x1, y1, z1, keyPoint1);
    return SurfaceFinishSymbolPtr(_result, false);
}

#pragma implementation_key(5083)
inline HRESULT TGFrameworkSupport::SurfaceFinishSymbols::ClearPlane ( ) {
    return _com_dispatch_method(this, 0x78, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5084)
inline HRESULT TGFrameworkSupport::SurfaceFinishSymbols::ClearStyle ( ) {
    return _com_dispatch_method(this, 0x79, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5085)
inline HRESULT TGFrameworkSupport::SurfaceFinishSymbols::ClearDataSet ( ) {
    return _com_dispatch_method(this, 0x7a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5086)
inline TGFrameworkSupport::AnnotInitDataPtr TGFrameworkSupport::SurfaceFinishSymbols::GetAnnotInitData ( ) {
    struct AnnotInitData * _result = 0;
    _com_dispatch_method(this, 0x1078, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AnnotInitDataPtr(_result, false);
}

#pragma implementation_key(5087)
inline TGFrameworkSupport::SurfaceFinishSymbolPtr TGFrameworkSupport::SurfaceFinishSymbols::AddSurfaceFinishSymbol ( struct AnnotInitData * AnnotInitData ) {
    struct SurfaceFinishSymbol * _result = 0;
    _com_dispatch_method(this, 0x1079, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", AnnotInitData);
    return SurfaceFinishSymbolPtr(_result, false);
}

//
// dispinterface SurfaceFinishSymbol wrapper method implementations
//

#pragma implementation_key(5088)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::SurfaceFinishSymbol::GetStyle ( ) {
    struct DimStyle * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DimStylePtr(_result, false);
}

#pragma implementation_key(5089)
inline void TGFrameworkSupport::SurfaceFinishSymbol::PutSurfaceFinishSymbol ( enum DimSurfTextureSymTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5090)
inline enum TGFrameworkSupport::DimSurfTextureSymTypeConstants TGFrameworkSupport::SurfaceFinishSymbol::GetSurfaceFinishSymbol ( ) {
    enum DimSurfTextureSymTypeConstants _result;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5091)
inline void TGFrameworkSupport::SurfaceFinishSymbol::PutMachiningAllowance ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5092)
inline _bstr_t TGFrameworkSupport::SurfaceFinishSymbol::GetMachiningAllowance ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5093)
inline void TGFrameworkSupport::SurfaceFinishSymbol::PutMinimumRoughnessValue ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5094)
inline _bstr_t TGFrameworkSupport::SurfaceFinishSymbol::GetMinimumRoughnessValue ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5095)
inline void TGFrameworkSupport::SurfaceFinishSymbol::PutMaximumRoughnessValue ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5096)
inline _bstr_t TGFrameworkSupport::SurfaceFinishSymbol::GetMaximumRoughnessValue ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5097)
inline void TGFrameworkSupport::SurfaceFinishSymbol::PutProductionMethod ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5098)
inline _bstr_t TGFrameworkSupport::SurfaceFinishSymbol::GetProductionMethod ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5099)
inline void TGFrameworkSupport::SurfaceFinishSymbol::PutRoughnessWidthCutOff ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5100)
inline _bstr_t TGFrameworkSupport::SurfaceFinishSymbol::GetRoughnessWidthCutOff ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5101)
inline void TGFrameworkSupport::SurfaceFinishSymbol::PutSamplingLength ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5102)
inline _bstr_t TGFrameworkSupport::SurfaceFinishSymbol::GetSamplingLength ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5103)
inline void TGFrameworkSupport::SurfaceFinishSymbol::PutSurfaceLaySymbol ( enum DimSurfTextureLaySymTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5104)
inline enum TGFrameworkSupport::DimSurfTextureLaySymTypeConstants TGFrameworkSupport::SurfaceFinishSymbol::GetSurfaceLaySymbol ( ) {
    enum DimSurfTextureLaySymTypeConstants _result;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5105)
inline HRESULT TGFrameworkSupport::SurfaceFinishSymbol::SetTerminator ( IDispatch * TerminatorObj, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    return _com_dispatch_method(this, 0x19, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0005\x0005\x0005\x000b", TerminatorObj, x, y, z, keyPoint);
}

#pragma implementation_key(5106)
inline HRESULT TGFrameworkSupport::SurfaceFinishSymbol::GetTerminator ( IDispatch * * TerminatorObj, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    return _com_dispatch_method(this, 0x1a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4005\x4005\x4005\x400b", TerminatorObj, x, y, z, keyPoint);
}

#pragma implementation_key(5107)
inline IDispatchPtr TGFrameworkSupport::SurfaceFinishSymbol::GetPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5108)
inline TGFramework::ApplicationPtr TGFrameworkSupport::SurfaceFinishSymbol::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5109)
inline long TGFrameworkSupport::SurfaceFinishSymbol::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1066, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5110)
inline _bstr_t TGFrameworkSupport::SurfaceFinishSymbol::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1067, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5111)
inline IDispatchPtr TGFrameworkSupport::SurfaceFinishSymbol::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1068, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5112)
inline long TGFrameworkSupport::SurfaceFinishSymbol::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1069, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5113)
inline long TGFrameworkSupport::SurfaceFinishSymbol::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x106b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5114)
inline _bstr_t TGFrameworkSupport::SurfaceFinishSymbol::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x106c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5115)
inline IDispatchPtr TGFrameworkSupport::SurfaceFinishSymbol::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x106d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5116)
inline HRESULT TGFrameworkSupport::SurfaceFinishSymbol::Copy ( ) {
    return _com_dispatch_method(this, 0x6001100a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5117)
inline HRESULT TGFrameworkSupport::SurfaceFinishSymbol::Cut ( ) {
    return _com_dispatch_method(this, 0x6001100b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5118)
inline HRESULT TGFrameworkSupport::SurfaceFinishSymbol::Delete ( ) {
    return _com_dispatch_method(this, 0x6001100c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5119)
inline HRESULT TGFrameworkSupport::SurfaceFinishSymbol::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    return _com_dispatch_method(this, 0x6001100d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", XFrom, YFrom, XTo, YTo);
}

#pragma implementation_key(5120)
inline HRESULT TGFrameworkSupport::SurfaceFinishSymbol::Scale ( double Factor ) {
    return _com_dispatch_method(this, 0x6001100e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Factor);
}

#pragma implementation_key(5121)
inline HRESULT TGFrameworkSupport::SurfaceFinishSymbol::Rotate ( double Angle, double x, double y ) {
    return _com_dispatch_method(this, 0x6001100f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", Angle, x, y);
}

#pragma implementation_key(5122)
inline HRESULT TGFrameworkSupport::SurfaceFinishSymbol::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60011011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(5123)
inline IDispatchPtr TGFrameworkSupport::SurfaceFinishSymbol::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60011012, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &XDistance, &YDistance);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5124)
inline IDispatchPtr TGFrameworkSupport::SurfaceFinishSymbol::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60011013, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x080c", x1, y1, x2, y2, &BooleanCopyFlag);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5125)
inline HRESULT TGFrameworkSupport::SurfaceFinishSymbol::BringToFront ( ) {
    return _com_dispatch_method(this, 0x60011014, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5126)
inline HRESULT TGFrameworkSupport::SurfaceFinishSymbol::BringForward ( ) {
    return _com_dispatch_method(this, 0x60011015, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5127)
inline HRESULT TGFrameworkSupport::SurfaceFinishSymbol::SendToBack ( ) {
    return _com_dispatch_method(this, 0x60011016, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5128)
inline HRESULT TGFrameworkSupport::SurfaceFinishSymbol::SendBackward ( ) {
    return _com_dispatch_method(this, 0x60011017, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5129)
inline HRESULT TGFrameworkSupport::SurfaceFinishSymbol::Select ( ) {
    return _com_dispatch_method(this, 0x60011018, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5130)
inline double TGFrameworkSupport::SurfaceFinishSymbol::GetBreakLineDistance ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3004, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5131)
inline void TGFrameworkSupport::SurfaceFinishSymbol::PutBreakLineDistance ( double _arg1 ) {
    _com_dispatch_method(this, 0x3004, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(5132)
inline VARIANT_BOOL TGFrameworkSupport::SurfaceFinishSymbol::GetBreakLine ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3005, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5133)
inline void TGFrameworkSupport::SurfaceFinishSymbol::PutBreakLine ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3005, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5134)
inline VARIANT_BOOL TGFrameworkSupport::SurfaceFinishSymbol::GetBreakLineDirection ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3006, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5135)
inline void TGFrameworkSupport::SurfaceFinishSymbol::PutBreakLineDirection ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3006, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5136)
inline VARIANT_BOOL TGFrameworkSupport::SurfaceFinishSymbol::GetLeader ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3007, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5137)
inline void TGFrameworkSupport::SurfaceFinishSymbol::PutLeader ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3007, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5138)
inline long TGFrameworkSupport::SurfaceFinishSymbol::GetVertexCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3003, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5139)
inline HRESULT TGFrameworkSupport::SurfaceFinishSymbol::GetVertices ( long * VertexCount, SAFEARRAY * * Vertices ) {
    return _com_dispatch_method(this, 0x60013009, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6005", VertexCount, Vertices);
}

#pragma implementation_key(5140)
inline HRESULT TGFrameworkSupport::SurfaceFinishSymbol::SetVertices ( long VertexCount, SAFEARRAY * * Vertices ) {
    return _com_dispatch_method(this, 0x6001300a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6005", VertexCount, Vertices);
}

#pragma implementation_key(5141)
inline HRESULT TGFrameworkSupport::SurfaceFinishSymbol::GetVertex ( long Index, double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0x6001300b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005", Index, x, y, z);
}

#pragma implementation_key(5142)
inline HRESULT TGFrameworkSupport::SurfaceFinishSymbol::SetVertex ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x6001300c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(5143)
inline HRESULT TGFrameworkSupport::SurfaceFinishSymbol::InsertVertex ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x6001300d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(5144)
inline HRESULT TGFrameworkSupport::SurfaceFinishSymbol::AddVertex ( double x, double y, double z ) {
    return _com_dispatch_method(this, 0x6001300e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", x, y, z);
}

#pragma implementation_key(5145)
inline HRESULT TGFrameworkSupport::SurfaceFinishSymbol::RemoveVertex ( long Index ) {
    return _com_dispatch_method(this, 0x6001300f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Index);
}

#pragma implementation_key(5146)
inline long TGFrameworkSupport::SurfaceFinishSymbol::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5147)
inline HRESULT TGFrameworkSupport::SurfaceFinishSymbol::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x4002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(5148)
inline HRESULT TGFrameworkSupport::SurfaceFinishSymbol::SetKeyPoint ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x4003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(5149)
inline double TGFrameworkSupport::SurfaceFinishSymbol::GetRotationAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3008, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5150)
inline void TGFrameworkSupport::SurfaceFinishSymbol::PutRotationAngle ( double _arg1 ) {
    _com_dispatch_method(this, 0x3008, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(5151)
inline void TGFrameworkSupport::SurfaceFinishSymbol::PutAllAround ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x60013012, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5152)
inline VARIANT_BOOL TGFrameworkSupport::SurfaceFinishSymbol::GetAllAround ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60013012, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5153)
inline void TGFrameworkSupport::SurfaceFinishSymbol::PutRoughnessValue ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x60013013, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5154)
inline _bstr_t TGFrameworkSupport::SurfaceFinishSymbol::GetRoughnessValue ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x60013013, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5155)
inline void TGFrameworkSupport::SurfaceFinishSymbol::PutRequirements ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x60013014, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5156)
inline _bstr_t TGFrameworkSupport::SurfaceFinishSymbol::GetRequirements ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x60013014, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5157)
inline double TGFrameworkSupport::SurfaceFinishSymbol::GetTextScale ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3009, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5158)
inline void TGFrameworkSupport::SurfaceFinishSymbol::PutTextScale ( double _arg1 ) {
    _com_dispatch_method(this, 0x3009, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(5159)
inline void TGFrameworkSupport::SurfaceFinishSymbol::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1071, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5160)
inline _bstr_t TGFrameworkSupport::SurfaceFinishSymbol::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1071, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5161)
inline IDispatchPtr TGFrameworkSupport::SurfaceFinishSymbol::GetPMIPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1072, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5162)
inline double TGFrameworkSupport::SurfaceFinishSymbol::GetPMITrackDistance ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1073, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5163)
inline void TGFrameworkSupport::SurfaceFinishSymbol::PutPMITrackDistance ( double _arg1 ) {
    _com_dispatch_method(this, 0x1073, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(5164)
inline void TGFrameworkSupport::SurfaceFinishSymbol::PutAllAroundLeaderSymbol ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1074, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5165)
inline VARIANT_BOOL TGFrameworkSupport::SurfaceFinishSymbol::GetAllAroundLeaderSymbol ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1074, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5166)
inline void TGFrameworkSupport::SurfaceFinishSymbol::PutCompressSymbolSize ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1075, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5167)
inline VARIANT_BOOL TGFrameworkSupport::SurfaceFinishSymbol::GetCompressSymbolSize ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1075, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5168)
inline void TGFrameworkSupport::SurfaceFinishSymbol::PutHidePMI ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1076, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5169)
inline VARIANT_BOOL TGFrameworkSupport::SurfaceFinishSymbol::GetHidePMI ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1076, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5170)
inline TGFrameworkSupport::DisplayDataPtr TGFrameworkSupport::SurfaceFinishSymbol::GetDisplayData ( ) {
    struct DisplayData * _result = 0;
    _com_dispatch_method(this, 0x1077, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return DisplayDataPtr(_result, false);
}

#pragma implementation_key(5171)
inline HRESULT TGFrameworkSupport::SurfaceFinishSymbol::PromoteToCurrentVersion ( ) {
    return _com_dispatch_method(this, 0x1078, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5172)
inline HRESULT TGFrameworkSupport::SurfaceFinishSymbol::SetAlignmentShape ( IDispatch * AlignmentShapeObj, double x, double y ) {
    return _com_dispatch_method(this, 0x1079, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0005\x0005", AlignmentShapeObj, x, y);
}

#pragma implementation_key(5173)
inline HRESULT TGFrameworkSupport::SurfaceFinishSymbol::GetAlignmentShape ( IDispatch * * AlignmentShapeObj, double * x, double * y ) {
    return _com_dispatch_method(this, 0x107a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4005\x4005", AlignmentShapeObj, x, y);
}

#pragma implementation_key(5174)
inline void TGFrameworkSupport::SurfaceFinishSymbol::PutPMIName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x107b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5175)
inline _bstr_t TGFrameworkSupport::SurfaceFinishSymbol::GetPMIName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x107b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5176)
inline HRESULT TGFrameworkSupport::SurfaceFinishSymbol::TransformToModelCoordinates ( double InputX, double InputY, double InputZ, double * ModelX, double * ModelY, double * ModelZ ) {
    return _com_dispatch_method(this, 0x107c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x4005\x4005\x4005", InputX, InputY, InputZ, ModelX, ModelY, ModelZ);
}

#pragma implementation_key(5177)
inline VARIANT_BOOL TGFrameworkSupport::SurfaceFinishSymbol::GetIsTerminatorAttachedToEntity ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x107d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5178)
inline HRESULT TGFrameworkSupport::SurfaceFinishSymbol::GetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    return _com_dispatch_method(this, 0x278c8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009", ReferencedGeometries);
}

#pragma implementation_key(5179)
inline HRESULT TGFrameworkSupport::SurfaceFinishSymbol::SetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    return _com_dispatch_method(this, 0x278c7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009", ReferencedGeometries);
}

#pragma implementation_key(5180)
inline IDispatchPtr TGFrameworkSupport::SurfaceFinishSymbol::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5181)
inline VARIANT_BOOL TGFrameworkSupport::SurfaceFinishSymbol::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _ISurfaceFinishSymbolAuto wrapper method implementations
//

#pragma implementation_key(5182)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetStyle ( ) {
    struct DimStyle * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimStylePtr(_result, false);
}

#pragma implementation_key(5183)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolAuto::PutSurfaceFinishSymbol ( enum DimSurfTextureSymTypeConstants val ) {
    HRESULT _hr = put_SurfaceFinishSymbol(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5184)
inline enum TGFrameworkSupport::DimSurfTextureSymTypeConstants TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetSurfaceFinishSymbol ( ) {
    enum DimSurfTextureSymTypeConstants _result;
    HRESULT _hr = get_SurfaceFinishSymbol(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5185)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolAuto::PutMachiningAllowance ( _bstr_t Text ) {
    HRESULT _hr = put_MachiningAllowance(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5186)
inline _bstr_t TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetMachiningAllowance ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_MachiningAllowance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5187)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolAuto::PutMinimumRoughnessValue ( _bstr_t Text ) {
    HRESULT _hr = put_MinimumRoughnessValue(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5188)
inline _bstr_t TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetMinimumRoughnessValue ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_MinimumRoughnessValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5189)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolAuto::PutMaximumRoughnessValue ( _bstr_t Text ) {
    HRESULT _hr = put_MaximumRoughnessValue(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5190)
inline _bstr_t TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetMaximumRoughnessValue ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_MaximumRoughnessValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5191)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolAuto::PutProductionMethod ( _bstr_t Text ) {
    HRESULT _hr = put_ProductionMethod(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5192)
inline _bstr_t TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetProductionMethod ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ProductionMethod(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5193)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolAuto::PutRoughnessWidthCutOff ( _bstr_t Text ) {
    HRESULT _hr = put_RoughnessWidthCutOff(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5194)
inline _bstr_t TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetRoughnessWidthCutOff ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RoughnessWidthCutOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5195)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolAuto::PutSamplingLength ( _bstr_t Text ) {
    HRESULT _hr = put_SamplingLength(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5196)
inline _bstr_t TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetSamplingLength ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SamplingLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5197)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolAuto::PutSurfaceLaySymbol ( enum DimSurfTextureLaySymTypeConstants Flag ) {
    HRESULT _hr = put_SurfaceLaySymbol(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5198)
inline enum TGFrameworkSupport::DimSurfTextureLaySymTypeConstants TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetSurfaceLaySymbol ( ) {
    enum DimSurfTextureLaySymTypeConstants _result;
    HRESULT _hr = get_SurfaceLaySymbol(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5199)
inline HRESULT TGFrameworkSupport::_ISurfaceFinishSymbolAuto::SetTerminator ( IDispatch * TerminatorObj, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    HRESULT _hr = raw_SetTerminator(TerminatorObj, x, y, z, keyPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5200)
inline HRESULT TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetTerminator ( IDispatch * * TerminatorObj, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    HRESULT _hr = raw_GetTerminator(TerminatorObj, x, y, z, keyPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5201)
inline IDispatchPtr TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Plane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5202)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5203)
inline long TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5204)
inline _bstr_t TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5205)
inline IDispatchPtr TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5206)
inline long TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5207)
inline long TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5208)
inline _bstr_t TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5209)
inline IDispatchPtr TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5210)
inline HRESULT TGFrameworkSupport::_ISurfaceFinishSymbolAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5211)
inline HRESULT TGFrameworkSupport::_ISurfaceFinishSymbolAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5212)
inline HRESULT TGFrameworkSupport::_ISurfaceFinishSymbolAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5213)
inline HRESULT TGFrameworkSupport::_ISurfaceFinishSymbolAuto::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    HRESULT _hr = raw_Move(XFrom, YFrom, XTo, YTo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5214)
inline HRESULT TGFrameworkSupport::_ISurfaceFinishSymbolAuto::Scale ( double Factor ) {
    HRESULT _hr = raw_Scale(Factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5215)
inline HRESULT TGFrameworkSupport::_ISurfaceFinishSymbolAuto::Rotate ( double Angle, double x, double y ) {
    HRESULT _hr = raw_Rotate(Angle, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5216)
inline HRESULT TGFrameworkSupport::_ISurfaceFinishSymbolAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5217)
inline IDispatchPtr TGFrameworkSupport::_ISurfaceFinishSymbolAuto::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Duplicate(XDistance, YDistance, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5218)
inline IDispatchPtr TGFrameworkSupport::_ISurfaceFinishSymbolAuto::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Mirror(x1, y1, x2, y2, BooleanCopyFlag, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5219)
inline HRESULT TGFrameworkSupport::_ISurfaceFinishSymbolAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5220)
inline HRESULT TGFrameworkSupport::_ISurfaceFinishSymbolAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5221)
inline HRESULT TGFrameworkSupport::_ISurfaceFinishSymbolAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5222)
inline HRESULT TGFrameworkSupport::_ISurfaceFinishSymbolAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5223)
inline HRESULT TGFrameworkSupport::_ISurfaceFinishSymbolAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5224)
inline double TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetBreakLineDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_BreakLineDistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5225)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolAuto::PutBreakLineDistance ( double Distance ) {
    HRESULT _hr = put_BreakLineDistance(Distance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5226)
inline VARIANT_BOOL TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetBreakLine ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BreakLine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5227)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolAuto::PutBreakLine ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_BreakLine(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5228)
inline VARIANT_BOOL TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetBreakLineDirection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BreakLineDirection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5229)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolAuto::PutBreakLineDirection ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_BreakLineDirection(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5230)
inline VARIANT_BOOL TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetLeader ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Leader(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5231)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolAuto::PutLeader ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_Leader(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5232)
inline long TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetVertexCount ( ) {
    long _result = 0;
    HRESULT _hr = get_VertexCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5233)
inline HRESULT TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetVertices ( long * VertexCount, SAFEARRAY * * Vertices ) {
    HRESULT _hr = raw_GetVertices(VertexCount, Vertices);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5234)
inline HRESULT TGFrameworkSupport::_ISurfaceFinishSymbolAuto::SetVertices ( long VertexCount, SAFEARRAY * * Vertices ) {
    HRESULT _hr = raw_SetVertices(VertexCount, Vertices);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5235)
inline HRESULT TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetVertex ( long Index, double * x, double * y, double * z ) {
    HRESULT _hr = raw_GetVertex(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5236)
inline HRESULT TGFrameworkSupport::_ISurfaceFinishSymbolAuto::SetVertex ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetVertex(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5237)
inline HRESULT TGFrameworkSupport::_ISurfaceFinishSymbolAuto::InsertVertex ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_InsertVertex(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5238)
inline HRESULT TGFrameworkSupport::_ISurfaceFinishSymbolAuto::AddVertex ( double x, double y, double z ) {
    HRESULT _hr = raw_AddVertex(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5239)
inline HRESULT TGFrameworkSupport::_ISurfaceFinishSymbolAuto::RemoveVertex ( long Index ) {
    HRESULT _hr = raw_RemoveVertex(Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5240)
inline long TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5241)
inline HRESULT TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5242)
inline HRESULT TGFrameworkSupport::_ISurfaceFinishSymbolAuto::SetKeyPoint ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetKeyPoint(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5243)
inline double TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetRotationAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_RotationAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5244)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolAuto::PutRotationAngle ( double pdAngle ) {
    HRESULT _hr = put_RotationAngle(pdAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5245)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolAuto::PutAllAround ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_AllAround(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5246)
inline VARIANT_BOOL TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetAllAround ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AllAround(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5247)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolAuto::PutRoughnessValue ( _bstr_t Text ) {
    HRESULT _hr = put_RoughnessValue(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5248)
inline _bstr_t TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetRoughnessValue ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RoughnessValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5249)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolAuto::PutRequirements ( _bstr_t Text ) {
    HRESULT _hr = put_Requirements(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5250)
inline _bstr_t TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetRequirements ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Requirements(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5251)
inline double TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetTextScale ( ) {
    double _result = 0;
    HRESULT _hr = get_TextScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5252)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolAuto::PutTextScale ( double pdAngle ) {
    HRESULT _hr = put_TextScale(pdAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5253)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5254)
inline _bstr_t TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5255)
inline IDispatchPtr TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetPMIPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_PMIPlane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5256)
inline double TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetPMITrackDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_PMITrackDistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5257)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolAuto::PutPMITrackDistance ( double pdPMITrackDistance ) {
    HRESULT _hr = put_PMITrackDistance(pdPMITrackDistance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5258)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolAuto::PutAllAroundLeaderSymbol ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_AllAroundLeaderSymbol(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5259)
inline VARIANT_BOOL TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetAllAroundLeaderSymbol ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AllAroundLeaderSymbol(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5260)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolAuto::PutCompressSymbolSize ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_CompressSymbolSize(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5261)
inline VARIANT_BOOL TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetCompressSymbolSize ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CompressSymbolSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5262)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolAuto::PutHidePMI ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_HidePMI(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5263)
inline VARIANT_BOOL TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetHidePMI ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HidePMI(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5264)
inline TGFrameworkSupport::DisplayDataPtr TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetDisplayData ( ) {
    struct DisplayData * _result = 0;
    HRESULT _hr = raw_GetDisplayData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DisplayDataPtr(_result, false);
}

#pragma implementation_key(5265)
inline HRESULT TGFrameworkSupport::_ISurfaceFinishSymbolAuto::PromoteToCurrentVersion ( ) {
    HRESULT _hr = raw_PromoteToCurrentVersion();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5266)
inline HRESULT TGFrameworkSupport::_ISurfaceFinishSymbolAuto::SetAlignmentShape ( IDispatch * AlignmentShapeObj, double x, double y ) {
    HRESULT _hr = raw_SetAlignmentShape(AlignmentShapeObj, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5267)
inline HRESULT TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetAlignmentShape ( IDispatch * * AlignmentShapeObj, double * x, double * y ) {
    HRESULT _hr = raw_GetAlignmentShape(AlignmentShapeObj, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5268)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolAuto::PutPMIName ( _bstr_t Text ) {
    HRESULT _hr = put_PMIName(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5269)
inline _bstr_t TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetPMIName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PMIName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5270)
inline HRESULT TGFrameworkSupport::_ISurfaceFinishSymbolAuto::TransformToModelCoordinates ( double InputX, double InputY, double InputZ, double * ModelX, double * ModelY, double * ModelZ ) {
    HRESULT _hr = raw_TransformToModelCoordinates(InputX, InputY, InputZ, ModelX, ModelY, ModelZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5271)
inline VARIANT_BOOL TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetIsTerminatorAttachedToEntity ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsTerminatorAttachedToEntity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5272)
inline HRESULT TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    HRESULT _hr = raw_GetReferencedGeometry(ReferencedGeometries);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5273)
inline HRESULT TGFrameworkSupport::_ISurfaceFinishSymbolAuto::SetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    HRESULT _hr = raw_SetReferencedGeometry(ReferencedGeometries);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5274)
inline IDispatchPtr TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5275)
inline VARIANT_BOOL TGFrameworkSupport::_ISurfaceFinishSymbolAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface SurfaceFinishSymbolDataSet wrapper method implementations
//

#pragma implementation_key(5276)
inline void TGFrameworkSupport::SurfaceFinishSymbolDataSet::PutSurfaceFinishSymbol ( enum DimSurfTextureSymTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5277)
inline enum TGFrameworkSupport::DimSurfTextureSymTypeConstants TGFrameworkSupport::SurfaceFinishSymbolDataSet::GetSurfaceFinishSymbol ( ) {
    enum DimSurfTextureSymTypeConstants _result;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5278)
inline void TGFrameworkSupport::SurfaceFinishSymbolDataSet::PutMachiningAllowance ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5279)
inline _bstr_t TGFrameworkSupport::SurfaceFinishSymbolDataSet::GetMachiningAllowance ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5280)
inline void TGFrameworkSupport::SurfaceFinishSymbolDataSet::PutMinimumRoughnessValue ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5281)
inline _bstr_t TGFrameworkSupport::SurfaceFinishSymbolDataSet::GetMinimumRoughnessValue ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5282)
inline void TGFrameworkSupport::SurfaceFinishSymbolDataSet::PutMaximumRoughnessValue ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5283)
inline _bstr_t TGFrameworkSupport::SurfaceFinishSymbolDataSet::GetMaximumRoughnessValue ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5284)
inline void TGFrameworkSupport::SurfaceFinishSymbolDataSet::PutProductionMethod ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5285)
inline _bstr_t TGFrameworkSupport::SurfaceFinishSymbolDataSet::GetProductionMethod ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5286)
inline void TGFrameworkSupport::SurfaceFinishSymbolDataSet::PutRoughnessWidthCutOff ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5287)
inline _bstr_t TGFrameworkSupport::SurfaceFinishSymbolDataSet::GetRoughnessWidthCutOff ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5288)
inline void TGFrameworkSupport::SurfaceFinishSymbolDataSet::PutSamplingLength ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5289)
inline _bstr_t TGFrameworkSupport::SurfaceFinishSymbolDataSet::GetSamplingLength ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5290)
inline void TGFrameworkSupport::SurfaceFinishSymbolDataSet::PutSurfaceLaySymbol ( enum DimSurfTextureLaySymTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5291)
inline enum TGFrameworkSupport::DimSurfTextureLaySymTypeConstants TGFrameworkSupport::SurfaceFinishSymbolDataSet::GetSurfaceLaySymbol ( ) {
    enum DimSurfTextureLaySymTypeConstants _result;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5292)
inline void TGFrameworkSupport::SurfaceFinishSymbolDataSet::PutAllAround ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x60013012, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5293)
inline VARIANT_BOOL TGFrameworkSupport::SurfaceFinishSymbolDataSet::GetAllAround ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x60013012, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5294)
inline void TGFrameworkSupport::SurfaceFinishSymbolDataSet::PutRoughnessValue ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x60013013, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5295)
inline _bstr_t TGFrameworkSupport::SurfaceFinishSymbolDataSet::GetRoughnessValue ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x60013013, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5296)
inline void TGFrameworkSupport::SurfaceFinishSymbolDataSet::PutRequirements ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x60013014, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5297)
inline _bstr_t TGFrameworkSupport::SurfaceFinishSymbolDataSet::GetRequirements ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x60013014, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5298)
inline void TGFrameworkSupport::SurfaceFinishSymbolDataSet::PutAllAroundLeaderSymbol ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1074, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5299)
inline VARIANT_BOOL TGFrameworkSupport::SurfaceFinishSymbolDataSet::GetAllAroundLeaderSymbol ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1074, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5300)
inline void TGFrameworkSupport::SurfaceFinishSymbolDataSet::PutCompressSymbolSize ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1075, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5301)
inline VARIANT_BOOL TGFrameworkSupport::SurfaceFinishSymbolDataSet::GetCompressSymbolSize ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1075, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5302)
inline void TGFrameworkSupport::SurfaceFinishSymbolDataSet::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5303)
inline _bstr_t TGFrameworkSupport::SurfaceFinishSymbolDataSet::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

//
// interface _ISurfaceFinishSymbolsAuto wrapper method implementations
//

#pragma implementation_key(5304)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_ISurfaceFinishSymbolsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5305)
inline long TGFrameworkSupport::_ISurfaceFinishSymbolsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5306)
inline IDispatchPtr TGFrameworkSupport::_ISurfaceFinishSymbolsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5307)
inline TGFrameworkSupport::SurfaceFinishSymbolPtr TGFrameworkSupport::_ISurfaceFinishSymbolsAuto::Item ( const _variant_t & Index ) {
    struct SurfaceFinishSymbol * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SurfaceFinishSymbolPtr(_result, false);
}

#pragma implementation_key(5308)
inline IUnknownPtr TGFrameworkSupport::_ISurfaceFinishSymbolsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5309)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolsAuto::PutPlane ( IDispatch * Plane ) {
    HRESULT _hr = put_Plane(Plane);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5310)
inline IDispatchPtr TGFrameworkSupport::_ISurfaceFinishSymbolsAuto::GetPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Plane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5311)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolsAuto::PutStyle ( struct DimensionStyle * Style ) {
    HRESULT _hr = put_Style(Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5312)
inline TGFrameworkSupport::DimensionStylePtr TGFrameworkSupport::_ISurfaceFinishSymbolsAuto::GetStyle ( ) {
    struct DimensionStyle * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionStylePtr(_result, false);
}

#pragma implementation_key(5313)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolsAuto::PutDataSet ( struct SurfaceFinishSymbolDataSet * _arg1 ) {
    HRESULT _hr = put_DataSet(_arg1);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5314)
inline TGFrameworkSupport::SurfaceFinishSymbolPtr TGFrameworkSupport::_ISurfaceFinishSymbolsAuto::AddByTerminator ( IDispatch * TerminatorObject, double x1, double y1, double z1, VARIANT_BOOL keyPoint1 ) {
    struct SurfaceFinishSymbol * _result = 0;
    HRESULT _hr = raw_AddByTerminator(TerminatorObject, x1, y1, z1, keyPoint1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SurfaceFinishSymbolPtr(_result, false);
}

#pragma implementation_key(5315)
inline HRESULT TGFrameworkSupport::_ISurfaceFinishSymbolsAuto::ClearPlane ( ) {
    HRESULT _hr = raw_ClearPlane();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5316)
inline HRESULT TGFrameworkSupport::_ISurfaceFinishSymbolsAuto::ClearStyle ( ) {
    HRESULT _hr = raw_ClearStyle();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5317)
inline HRESULT TGFrameworkSupport::_ISurfaceFinishSymbolsAuto::ClearDataSet ( ) {
    HRESULT _hr = raw_ClearDataSet();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5318)
inline TGFrameworkSupport::AnnotInitDataPtr TGFrameworkSupport::_ISurfaceFinishSymbolsAuto::GetAnnotInitData ( ) {
    struct AnnotInitData * _result = 0;
    HRESULT _hr = get_AnnotInitData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AnnotInitDataPtr(_result, false);
}

#pragma implementation_key(5319)
inline TGFrameworkSupport::SurfaceFinishSymbolPtr TGFrameworkSupport::_ISurfaceFinishSymbolsAuto::AddSurfaceFinishSymbol ( struct AnnotInitData * AnnotInitData ) {
    struct SurfaceFinishSymbol * _result = 0;
    HRESULT _hr = raw_AddSurfaceFinishSymbol(AnnotInitData, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SurfaceFinishSymbolPtr(_result, false);
}

//
// interface _ISurfaceFinishSymbolDataSetAuto wrapper method implementations
//

#pragma implementation_key(5320)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolDataSetAuto::PutSurfaceFinishSymbol ( enum DimSurfTextureSymTypeConstants val ) {
    HRESULT _hr = put_SurfaceFinishSymbol(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5321)
inline enum TGFrameworkSupport::DimSurfTextureSymTypeConstants TGFrameworkSupport::_ISurfaceFinishSymbolDataSetAuto::GetSurfaceFinishSymbol ( ) {
    enum DimSurfTextureSymTypeConstants _result;
    HRESULT _hr = get_SurfaceFinishSymbol(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5322)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolDataSetAuto::PutMachiningAllowance ( _bstr_t Text ) {
    HRESULT _hr = put_MachiningAllowance(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5323)
inline _bstr_t TGFrameworkSupport::_ISurfaceFinishSymbolDataSetAuto::GetMachiningAllowance ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_MachiningAllowance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5324)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolDataSetAuto::PutMinimumRoughnessValue ( _bstr_t Text ) {
    HRESULT _hr = put_MinimumRoughnessValue(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5325)
inline _bstr_t TGFrameworkSupport::_ISurfaceFinishSymbolDataSetAuto::GetMinimumRoughnessValue ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_MinimumRoughnessValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5326)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolDataSetAuto::PutMaximumRoughnessValue ( _bstr_t Text ) {
    HRESULT _hr = put_MaximumRoughnessValue(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5327)
inline _bstr_t TGFrameworkSupport::_ISurfaceFinishSymbolDataSetAuto::GetMaximumRoughnessValue ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_MaximumRoughnessValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5328)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolDataSetAuto::PutProductionMethod ( _bstr_t Text ) {
    HRESULT _hr = put_ProductionMethod(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5329)
inline _bstr_t TGFrameworkSupport::_ISurfaceFinishSymbolDataSetAuto::GetProductionMethod ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ProductionMethod(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5330)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolDataSetAuto::PutRoughnessWidthCutOff ( _bstr_t Text ) {
    HRESULT _hr = put_RoughnessWidthCutOff(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5331)
inline _bstr_t TGFrameworkSupport::_ISurfaceFinishSymbolDataSetAuto::GetRoughnessWidthCutOff ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RoughnessWidthCutOff(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5332)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolDataSetAuto::PutSamplingLength ( _bstr_t Text ) {
    HRESULT _hr = put_SamplingLength(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5333)
inline _bstr_t TGFrameworkSupport::_ISurfaceFinishSymbolDataSetAuto::GetSamplingLength ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SamplingLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5334)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolDataSetAuto::PutSurfaceLaySymbol ( enum DimSurfTextureLaySymTypeConstants Flag ) {
    HRESULT _hr = put_SurfaceLaySymbol(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5335)
inline enum TGFrameworkSupport::DimSurfTextureLaySymTypeConstants TGFrameworkSupport::_ISurfaceFinishSymbolDataSetAuto::GetSurfaceLaySymbol ( ) {
    enum DimSurfTextureLaySymTypeConstants _result;
    HRESULT _hr = get_SurfaceLaySymbol(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5336)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolDataSetAuto::PutAllAround ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_AllAround(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5337)
inline VARIANT_BOOL TGFrameworkSupport::_ISurfaceFinishSymbolDataSetAuto::GetAllAround ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AllAround(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5338)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolDataSetAuto::PutRoughnessValue ( _bstr_t Text ) {
    HRESULT _hr = put_RoughnessValue(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5339)
inline _bstr_t TGFrameworkSupport::_ISurfaceFinishSymbolDataSetAuto::GetRoughnessValue ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RoughnessValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5340)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolDataSetAuto::PutRequirements ( _bstr_t Text ) {
    HRESULT _hr = put_Requirements(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5341)
inline _bstr_t TGFrameworkSupport::_ISurfaceFinishSymbolDataSetAuto::GetRequirements ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Requirements(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5342)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolDataSetAuto::PutAllAroundLeaderSymbol ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_AllAroundLeaderSymbol(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5343)
inline VARIANT_BOOL TGFrameworkSupport::_ISurfaceFinishSymbolDataSetAuto::GetAllAroundLeaderSymbol ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AllAroundLeaderSymbol(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5344)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolDataSetAuto::PutCompressSymbolSize ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_CompressSymbolSize(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5345)
inline VARIANT_BOOL TGFrameworkSupport::_ISurfaceFinishSymbolDataSetAuto::GetCompressSymbolSize ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_CompressSymbolSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5346)
inline void TGFrameworkSupport::_ISurfaceFinishSymbolDataSetAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5347)
inline _bstr_t TGFrameworkSupport::_ISurfaceFinishSymbolDataSetAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// dispinterface WeldSymbols wrapper method implementations
//

#pragma implementation_key(5348)
inline TGFramework::ApplicationPtr TGFrameworkSupport::WeldSymbols::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5349)
inline long TGFrameworkSupport::WeldSymbols::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5350)
inline IDispatchPtr TGFrameworkSupport::WeldSymbols::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5351)
inline TGFrameworkSupport::WeldSymbolPtr TGFrameworkSupport::WeldSymbols::Item ( const _variant_t & Index ) {
    struct WeldSymbol * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return WeldSymbolPtr(_result, false);
}

#pragma implementation_key(5352)
inline void TGFrameworkSupport::WeldSymbols::PutPlane ( IDispatch * _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(5353)
inline IDispatchPtr TGFrameworkSupport::WeldSymbols::GetPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5354)
inline void TGFrameworkSupport::WeldSymbols::PutStyle ( struct DimensionStyle * _arg1 ) {
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(5355)
inline TGFrameworkSupport::DimensionStylePtr TGFrameworkSupport::WeldSymbols::GetStyle ( ) {
    struct DimensionStyle * _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DimensionStylePtr(_result, false);
}

#pragma implementation_key(5356)
inline void TGFrameworkSupport::WeldSymbols::PutDataSet ( struct WeldSymbolDataSet * _arg1 ) {
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(5357)
inline TGFrameworkSupport::WeldSymbolPtr TGFrameworkSupport::WeldSymbols::Add ( double x1, double y1, double z1 ) {
    struct WeldSymbol * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005", x1, y1, z1);
    return WeldSymbolPtr(_result, false);
}

#pragma implementation_key(5358)
inline TGFrameworkSupport::WeldSymbolPtr TGFrameworkSupport::WeldSymbols::AddByTerminator ( IDispatch * TerminatorObject, double x1, double y1, double z1, VARIANT_BOOL keyPoint1 ) {
    struct WeldSymbol * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x000b", TerminatorObject, x1, y1, z1, keyPoint1);
    return WeldSymbolPtr(_result, false);
}

#pragma implementation_key(5359)
inline HRESULT TGFrameworkSupport::WeldSymbols::ClearPlane ( ) {
    return _com_dispatch_method(this, 0x78, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5360)
inline HRESULT TGFrameworkSupport::WeldSymbols::ClearStyle ( ) {
    return _com_dispatch_method(this, 0x79, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5361)
inline HRESULT TGFrameworkSupport::WeldSymbols::ClearDataSet ( ) {
    return _com_dispatch_method(this, 0x7a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5362)
inline TGFrameworkSupport::AnnotInitDataPtr TGFrameworkSupport::WeldSymbols::GetAnnotInitData ( ) {
    struct AnnotInitData * _result = 0;
    _com_dispatch_method(this, 0x10ce, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AnnotInitDataPtr(_result, false);
}

#pragma implementation_key(5363)
inline TGFrameworkSupport::WeldSymbolPtr TGFrameworkSupport::WeldSymbols::AddWeldSymbol ( struct AnnotInitData * AnnotInitData ) {
    struct WeldSymbol * _result = 0;
    _com_dispatch_method(this, 0x10cf, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", AnnotInitData);
    return WeldSymbolPtr(_result, false);
}

//
// dispinterface WeldSymbol wrapper method implementations
//

#pragma implementation_key(5364)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::WeldSymbol::GetStyle ( ) {
    struct DimStyle * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DimStylePtr(_result, false);
}

#pragma implementation_key(5365)
inline void TGFrameworkSupport::WeldSymbol::PutZSymbol ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5366)
inline VARIANT_BOOL TGFrameworkSupport::WeldSymbol::GetZSymbol ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5367)
inline void TGFrameworkSupport::WeldSymbol::PutTail ( enum DimWeldTailTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5368)
inline enum TGFrameworkSupport::DimWeldTailTypeConstants TGFrameworkSupport::WeldSymbol::GetTail ( ) {
    enum DimWeldTailTypeConstants _result;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5369)
inline void TGFrameworkSupport::WeldSymbol::PutDashLine ( enum DimWeldDashLineTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5370)
inline enum TGFrameworkSupport::DimWeldDashLineTypeConstants TGFrameworkSupport::WeldSymbol::GetDashLine ( ) {
    enum DimWeldDashLineTypeConstants _result;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5371)
inline void TGFrameworkSupport::WeldSymbol::PutWeldInField ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5372)
inline VARIANT_BOOL TGFrameworkSupport::WeldSymbol::GetWeldInField ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5373)
inline void TGFrameworkSupport::WeldSymbol::PutOffsetTopBottom ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5374)
inline VARIANT_BOOL TGFrameworkSupport::WeldSymbol::GetOffsetTopBottom ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5375)
inline void TGFrameworkSupport::WeldSymbol::PutWeldAllAround ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5376)
inline VARIANT_BOOL TGFrameworkSupport::WeldSymbol::GetWeldAllAround ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5377)
inline void TGFrameworkSupport::WeldSymbol::PutSymmetrical ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x23, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5378)
inline VARIANT_BOOL TGFrameworkSupport::WeldSymbol::GetSymmetrical ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x23, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5379)
inline void TGFrameworkSupport::WeldSymbol::PutTopNote1 ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5380)
inline _bstr_t TGFrameworkSupport::WeldSymbol::GetTopNote1 ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5381)
inline void TGFrameworkSupport::WeldSymbol::PutTopNote2 ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5382)
inline _bstr_t TGFrameworkSupport::WeldSymbol::GetTopNote2 ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5383)
inline void TGFrameworkSupport::WeldSymbol::PutTopTreatmentType ( enum DimWeldTreatmentTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5384)
inline enum TGFrameworkSupport::DimWeldTreatmentTypeConstants TGFrameworkSupport::WeldSymbol::GetTopTreatmentType ( ) {
    enum DimWeldTreatmentTypeConstants _result;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5385)
inline void TGFrameworkSupport::WeldSymbol::PutTopType ( enum DimWeldTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5386)
inline enum TGFrameworkSupport::DimWeldTypeConstants TGFrameworkSupport::WeldSymbol::GetTopType ( ) {
    enum DimWeldTypeConstants _result;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5387)
inline void TGFrameworkSupport::WeldSymbol::PutTopNote3 ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5388)
inline _bstr_t TGFrameworkSupport::WeldSymbol::GetTopNote3 ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5389)
inline void TGFrameworkSupport::WeldSymbol::PutTopNoteZ ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5390)
inline _bstr_t TGFrameworkSupport::WeldSymbol::GetTopNoteZ ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5391)
inline void TGFrameworkSupport::WeldSymbol::PutTailNote ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5392)
inline _bstr_t TGFrameworkSupport::WeldSymbol::GetTailNote ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5393)
inline void TGFrameworkSupport::WeldSymbol::PutBottomNote1 ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5394)
inline _bstr_t TGFrameworkSupport::WeldSymbol::GetBottomNote1 ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5395)
inline void TGFrameworkSupport::WeldSymbol::PutBottomNote2 ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5396)
inline _bstr_t TGFrameworkSupport::WeldSymbol::GetBottomNote2 ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5397)
inline void TGFrameworkSupport::WeldSymbol::PutBottomTreatmentType ( enum DimWeldTreatmentTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5398)
inline enum TGFrameworkSupport::DimWeldTreatmentTypeConstants TGFrameworkSupport::WeldSymbol::GetBottomTreatmentType ( ) {
    enum DimWeldTreatmentTypeConstants _result;
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5399)
inline void TGFrameworkSupport::WeldSymbol::PutBottomType ( enum DimWeldTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5400)
inline enum TGFrameworkSupport::DimWeldTypeConstants TGFrameworkSupport::WeldSymbol::GetBottomType ( ) {
    enum DimWeldTypeConstants _result;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5401)
inline void TGFrameworkSupport::WeldSymbol::PutBottomNote3 ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5402)
inline _bstr_t TGFrameworkSupport::WeldSymbol::GetBottomNote3 ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5403)
inline void TGFrameworkSupport::WeldSymbol::PutBottomNoteZ ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5404)
inline _bstr_t TGFrameworkSupport::WeldSymbol::GetBottomNoteZ ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5405)
inline HRESULT TGFrameworkSupport::WeldSymbol::SetTerminator ( IDispatch * TerminatorObj, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    return _com_dispatch_method(this, 0x19, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0005\x0005\x0005\x000b", TerminatorObj, x, y, z, keyPoint);
}

#pragma implementation_key(5406)
inline HRESULT TGFrameworkSupport::WeldSymbol::GetTerminator ( IDispatch * * TerminatorObj, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    return _com_dispatch_method(this, 0x1b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4005\x4005\x4005\x400b", TerminatorObj, x, y, z, keyPoint);
}

#pragma implementation_key(5407)
inline HRESULT TGFrameworkSupport::WeldSymbol::SetFreeSpacePoint ( double x, double y, double z ) {
    return _com_dispatch_method(this, 0x1a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", x, y, z);
}

#pragma implementation_key(5408)
inline HRESULT TGFrameworkSupport::WeldSymbol::GetFreeSpacePoint ( double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0x1c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005", x, y, z);
}

#pragma implementation_key(5409)
inline IDispatchPtr TGFrameworkSupport::WeldSymbol::GetPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5410)
inline TGFramework::ApplicationPtr TGFrameworkSupport::WeldSymbol::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5411)
inline long TGFrameworkSupport::WeldSymbol::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1066, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5412)
inline _bstr_t TGFrameworkSupport::WeldSymbol::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1067, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5413)
inline IDispatchPtr TGFrameworkSupport::WeldSymbol::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1068, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5414)
inline long TGFrameworkSupport::WeldSymbol::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1069, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5415)
inline long TGFrameworkSupport::WeldSymbol::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x106b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5416)
inline _bstr_t TGFrameworkSupport::WeldSymbol::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x106c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5417)
inline IDispatchPtr TGFrameworkSupport::WeldSymbol::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x106d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5418)
inline HRESULT TGFrameworkSupport::WeldSymbol::Copy ( ) {
    return _com_dispatch_method(this, 0x6001100a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5419)
inline HRESULT TGFrameworkSupport::WeldSymbol::Cut ( ) {
    return _com_dispatch_method(this, 0x6001100b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5420)
inline HRESULT TGFrameworkSupport::WeldSymbol::Delete ( ) {
    return _com_dispatch_method(this, 0x6001100c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5421)
inline HRESULT TGFrameworkSupport::WeldSymbol::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    return _com_dispatch_method(this, 0x6001100d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", XFrom, YFrom, XTo, YTo);
}

#pragma implementation_key(5422)
inline HRESULT TGFrameworkSupport::WeldSymbol::Scale ( double Factor ) {
    return _com_dispatch_method(this, 0x6001100e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Factor);
}

#pragma implementation_key(5423)
inline HRESULT TGFrameworkSupport::WeldSymbol::Rotate ( double Angle, double x, double y ) {
    return _com_dispatch_method(this, 0x6001100f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", Angle, x, y);
}

#pragma implementation_key(5424)
inline HRESULT TGFrameworkSupport::WeldSymbol::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60011011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(5425)
inline IDispatchPtr TGFrameworkSupport::WeldSymbol::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60011012, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &XDistance, &YDistance);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5426)
inline IDispatchPtr TGFrameworkSupport::WeldSymbol::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60011013, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x080c", x1, y1, x2, y2, &BooleanCopyFlag);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5427)
inline HRESULT TGFrameworkSupport::WeldSymbol::BringToFront ( ) {
    return _com_dispatch_method(this, 0x60011014, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5428)
inline HRESULT TGFrameworkSupport::WeldSymbol::BringForward ( ) {
    return _com_dispatch_method(this, 0x60011015, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5429)
inline HRESULT TGFrameworkSupport::WeldSymbol::SendToBack ( ) {
    return _com_dispatch_method(this, 0x60011016, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5430)
inline HRESULT TGFrameworkSupport::WeldSymbol::SendBackward ( ) {
    return _com_dispatch_method(this, 0x60011017, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5431)
inline HRESULT TGFrameworkSupport::WeldSymbol::Select ( ) {
    return _com_dispatch_method(this, 0x60011018, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5432)
inline double TGFrameworkSupport::WeldSymbol::GetBreakLineDistance ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3004, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5433)
inline void TGFrameworkSupport::WeldSymbol::PutBreakLineDistance ( double _arg1 ) {
    _com_dispatch_method(this, 0x3004, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(5434)
inline VARIANT_BOOL TGFrameworkSupport::WeldSymbol::GetBreakLine ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3005, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5435)
inline void TGFrameworkSupport::WeldSymbol::PutBreakLine ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3005, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5436)
inline VARIANT_BOOL TGFrameworkSupport::WeldSymbol::GetBreakLineDirection ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3006, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5437)
inline void TGFrameworkSupport::WeldSymbol::PutBreakLineDirection ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3006, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5438)
inline VARIANT_BOOL TGFrameworkSupport::WeldSymbol::GetLeader ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3007, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5439)
inline void TGFrameworkSupport::WeldSymbol::PutLeader ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3007, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5440)
inline long TGFrameworkSupport::WeldSymbol::GetVertexCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3003, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5441)
inline HRESULT TGFrameworkSupport::WeldSymbol::GetVertices ( long * VertexCount, SAFEARRAY * * Vertices ) {
    return _com_dispatch_method(this, 0x60013009, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6005", VertexCount, Vertices);
}

#pragma implementation_key(5442)
inline HRESULT TGFrameworkSupport::WeldSymbol::SetVertices ( long VertexCount, SAFEARRAY * * Vertices ) {
    return _com_dispatch_method(this, 0x6001300a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6005", VertexCount, Vertices);
}

#pragma implementation_key(5443)
inline HRESULT TGFrameworkSupport::WeldSymbol::GetVertex ( long Index, double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0x6001300b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005", Index, x, y, z);
}

#pragma implementation_key(5444)
inline HRESULT TGFrameworkSupport::WeldSymbol::SetVertex ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x6001300c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(5445)
inline HRESULT TGFrameworkSupport::WeldSymbol::InsertVertex ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x6001300d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(5446)
inline HRESULT TGFrameworkSupport::WeldSymbol::AddVertex ( double x, double y, double z ) {
    return _com_dispatch_method(this, 0x6001300e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", x, y, z);
}

#pragma implementation_key(5447)
inline HRESULT TGFrameworkSupport::WeldSymbol::RemoveVertex ( long Index ) {
    return _com_dispatch_method(this, 0x6001300f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Index);
}

#pragma implementation_key(5448)
inline long TGFrameworkSupport::WeldSymbol::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5449)
inline HRESULT TGFrameworkSupport::WeldSymbol::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x4002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(5450)
inline HRESULT TGFrameworkSupport::WeldSymbol::SetKeyPoint ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x4003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(5451)
inline double TGFrameworkSupport::WeldSymbol::GetRotationAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3008, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5452)
inline void TGFrameworkSupport::WeldSymbol::PutRotationAngle ( double _arg1 ) {
    _com_dispatch_method(this, 0x3008, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(5453)
inline IDispatchPtr TGFrameworkSupport::WeldSymbol::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5454)
inline VARIANT_BOOL TGFrameworkSupport::WeldSymbol::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(5455)
inline void TGFrameworkSupport::WeldSymbol::PutTailNote2 ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x28, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5456)
inline _bstr_t TGFrameworkSupport::WeldSymbol::GetTailNote2 ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x28, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5457)
inline void TGFrameworkSupport::WeldSymbol::PutTopNoteCSize ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x29, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5458)
inline _bstr_t TGFrameworkSupport::WeldSymbol::GetTopNoteCSize ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x29, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5459)
inline void TGFrameworkSupport::WeldSymbol::PutBottomNoteCSize ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x2a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5460)
inline _bstr_t TGFrameworkSupport::WeldSymbol::GetBottomNoteCSize ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x2a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5461)
inline void TGFrameworkSupport::WeldSymbol::PutTopNoteAngle ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x2b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5462)
inline _bstr_t TGFrameworkSupport::WeldSymbol::GetTopNoteAngle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x2b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5463)
inline void TGFrameworkSupport::WeldSymbol::PutBottomNoteAngle ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x2c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5464)
inline _bstr_t TGFrameworkSupport::WeldSymbol::GetBottomNoteAngle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x2c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5465)
inline void TGFrameworkSupport::WeldSymbol::PutTopNoteDepth ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x2d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5466)
inline _bstr_t TGFrameworkSupport::WeldSymbol::GetTopNoteDepth ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x2d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5467)
inline void TGFrameworkSupport::WeldSymbol::PutBottomNoteDepth ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x2e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5468)
inline _bstr_t TGFrameworkSupport::WeldSymbol::GetBottomNoteDepth ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x2e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5469)
inline void TGFrameworkSupport::WeldSymbol::PutTopPosOffset ( int _arg1 ) {
    _com_dispatch_method(this, 0x2f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5470)
inline int TGFrameworkSupport::WeldSymbol::GetTopPosOffset ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x2f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5471)
inline void TGFrameworkSupport::WeldSymbol::PutBottomPosOffset ( int _arg1 ) {
    _com_dispatch_method(this, 0x30, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5472)
inline int TGFrameworkSupport::WeldSymbol::GetBottomPosOffset ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x30, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5473)
inline double TGFrameworkSupport::WeldSymbol::GetTextScale ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3009, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5474)
inline void TGFrameworkSupport::WeldSymbol::PutTextScale ( double _arg1 ) {
    _com_dispatch_method(this, 0x3009, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(5475)
inline void TGFrameworkSupport::WeldSymbol::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1072, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5476)
inline _bstr_t TGFrameworkSupport::WeldSymbol::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1072, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5477)
inline IDispatchPtr TGFrameworkSupport::WeldSymbol::GetPMIPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1073, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5478)
inline double TGFrameworkSupport::WeldSymbol::GetPMITrackDistance ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1074, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5479)
inline void TGFrameworkSupport::WeldSymbol::PutPMITrackDistance ( double _arg1 ) {
    _com_dispatch_method(this, 0x1074, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(5480)
inline void TGFrameworkSupport::WeldSymbol::PutHidePMI ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1075, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5481)
inline VARIANT_BOOL TGFrameworkSupport::WeldSymbol::GetHidePMI ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1075, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5482)
inline void TGFrameworkSupport::WeldSymbol::PutTopWeldModifier ( enum DimWeldModifierConstants _arg1 ) {
    _com_dispatch_method(this, 0x10cc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5483)
inline enum TGFrameworkSupport::DimWeldModifierConstants TGFrameworkSupport::WeldSymbol::GetTopWeldModifier ( ) {
    enum DimWeldModifierConstants _result;
    _com_dispatch_method(this, 0x10cc, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5484)
inline void TGFrameworkSupport::WeldSymbol::PutBottomWeldModifier ( enum DimWeldModifierConstants _arg1 ) {
    _com_dispatch_method(this, 0x10cd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5485)
inline enum TGFrameworkSupport::DimWeldModifierConstants TGFrameworkSupport::WeldSymbol::GetBottomWeldModifier ( ) {
    enum DimWeldModifierConstants _result;
    _com_dispatch_method(this, 0x10cd, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5486)
inline TGFrameworkSupport::DisplayDataPtr TGFrameworkSupport::WeldSymbol::GetDisplayData ( ) {
    struct DisplayData * _result = 0;
    _com_dispatch_method(this, 0x10ce, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return DisplayDataPtr(_result, false);
}

#pragma implementation_key(5487)
inline HRESULT TGFrameworkSupport::WeldSymbol::PromoteToCurrentVersion ( ) {
    return _com_dispatch_method(this, 0x10cf, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5488)
inline HRESULT TGFrameworkSupport::WeldSymbol::SetAlignmentShape ( IDispatch * AlignmentShapeObj, double x, double y ) {
    return _com_dispatch_method(this, 0x10d0, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0005\x0005", AlignmentShapeObj, x, y);
}

#pragma implementation_key(5489)
inline HRESULT TGFrameworkSupport::WeldSymbol::GetAlignmentShape ( IDispatch * * AlignmentShapeObj, double * x, double * y ) {
    return _com_dispatch_method(this, 0x10d1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4005\x4005", AlignmentShapeObj, x, y);
}

#pragma implementation_key(5490)
inline void TGFrameworkSupport::WeldSymbol::PutPMIName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x10d2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5491)
inline _bstr_t TGFrameworkSupport::WeldSymbol::GetPMIName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x10d2, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5492)
inline void TGFrameworkSupport::WeldSymbol::PutWeldInFieldFlagDirection ( enum WeldSymbolFlagDirectionConstants _arg1 ) {
    _com_dispatch_method(this, 0x10d3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5493)
inline enum TGFrameworkSupport::WeldSymbolFlagDirectionConstants TGFrameworkSupport::WeldSymbol::GetWeldInFieldFlagDirection ( ) {
    enum WeldSymbolFlagDirectionConstants _result;
    _com_dispatch_method(this, 0x10d3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5494)
inline HRESULT TGFrameworkSupport::WeldSymbol::TransformToModelCoordinates ( double InputX, double InputY, double InputZ, double * ModelX, double * ModelY, double * ModelZ ) {
    return _com_dispatch_method(this, 0x10d4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x4005\x4005\x4005", InputX, InputY, InputZ, ModelX, ModelY, ModelZ);
}

#pragma implementation_key(5495)
inline void TGFrameworkSupport::WeldSymbol::PutCenterType ( enum DimWeldTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x10d5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5496)
inline enum TGFrameworkSupport::DimWeldTypeConstants TGFrameworkSupport::WeldSymbol::GetCenterType ( ) {
    enum DimWeldTypeConstants _result;
    _com_dispatch_method(this, 0x10d5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5497)
inline HRESULT TGFrameworkSupport::WeldSymbol::SetCenterTreatmentTypes ( enum DimWeldTreatmentTypeConstants AboveType, enum DimWeldTreatmentTypeConstants BelowType ) {
    return _com_dispatch_method(this, 0x10d6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003", AboveType, BelowType);
}

#pragma implementation_key(5498)
inline HRESULT TGFrameworkSupport::WeldSymbol::GetCenterTreatmentTypes ( enum DimWeldTreatmentTypeConstants * AboveType, enum DimWeldTreatmentTypeConstants * BelowType ) {
    return _com_dispatch_method(this, 0x10d7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x4003", AboveType, BelowType);
}

#pragma implementation_key(5499)
inline VARIANT_BOOL TGFrameworkSupport::WeldSymbol::GetIsTerminatorAttachedToEntity ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10d8, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5500)
inline HRESULT TGFrameworkSupport::WeldSymbol::GetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    return _com_dispatch_method(this, 0x10da, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009", ReferencedGeometries);
}

#pragma implementation_key(5501)
inline HRESULT TGFrameworkSupport::WeldSymbol::SetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    return _com_dispatch_method(this, 0x10d9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009", ReferencedGeometries);
}

//
// interface _IWeldSymbolAuto wrapper method implementations
//

#pragma implementation_key(5502)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::_IWeldSymbolAuto::GetStyle ( ) {
    struct DimStyle * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimStylePtr(_result, false);
}

#pragma implementation_key(5503)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutZSymbol ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_ZSymbol(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5504)
inline VARIANT_BOOL TGFrameworkSupport::_IWeldSymbolAuto::GetZSymbol ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ZSymbol(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5505)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutTail ( enum DimWeldTailTypeConstants pVal ) {
    HRESULT _hr = put_Tail(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5506)
inline enum TGFrameworkSupport::DimWeldTailTypeConstants TGFrameworkSupport::_IWeldSymbolAuto::GetTail ( ) {
    enum DimWeldTailTypeConstants _result;
    HRESULT _hr = get_Tail(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5507)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutDashLine ( enum DimWeldDashLineTypeConstants pVal ) {
    HRESULT _hr = put_DashLine(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5508)
inline enum TGFrameworkSupport::DimWeldDashLineTypeConstants TGFrameworkSupport::_IWeldSymbolAuto::GetDashLine ( ) {
    enum DimWeldDashLineTypeConstants _result;
    HRESULT _hr = get_DashLine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5509)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutWeldInField ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_WeldInField(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5510)
inline VARIANT_BOOL TGFrameworkSupport::_IWeldSymbolAuto::GetWeldInField ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WeldInField(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5511)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutOffsetTopBottom ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_OffsetTopBottom(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5512)
inline VARIANT_BOOL TGFrameworkSupport::_IWeldSymbolAuto::GetOffsetTopBottom ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_OffsetTopBottom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5513)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutWeldAllAround ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_WeldAllAround(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5514)
inline VARIANT_BOOL TGFrameworkSupport::_IWeldSymbolAuto::GetWeldAllAround ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WeldAllAround(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5515)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutSymmetrical ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_Symmetrical(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5516)
inline VARIANT_BOOL TGFrameworkSupport::_IWeldSymbolAuto::GetSymmetrical ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Symmetrical(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5517)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutTopNote1 ( _bstr_t Text ) {
    HRESULT _hr = put_TopNote1(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5518)
inline _bstr_t TGFrameworkSupport::_IWeldSymbolAuto::GetTopNote1 ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TopNote1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5519)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutTopNote2 ( _bstr_t Text ) {
    HRESULT _hr = put_TopNote2(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5520)
inline _bstr_t TGFrameworkSupport::_IWeldSymbolAuto::GetTopNote2 ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TopNote2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5521)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutTopTreatmentType ( enum DimWeldTreatmentTypeConstants Type ) {
    HRESULT _hr = put_TopTreatmentType(Type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5522)
inline enum TGFrameworkSupport::DimWeldTreatmentTypeConstants TGFrameworkSupport::_IWeldSymbolAuto::GetTopTreatmentType ( ) {
    enum DimWeldTreatmentTypeConstants _result;
    HRESULT _hr = get_TopTreatmentType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5523)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutTopType ( enum DimWeldTypeConstants Type ) {
    HRESULT _hr = put_TopType(Type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5524)
inline enum TGFrameworkSupport::DimWeldTypeConstants TGFrameworkSupport::_IWeldSymbolAuto::GetTopType ( ) {
    enum DimWeldTypeConstants _result;
    HRESULT _hr = get_TopType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5525)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutTopNote3 ( _bstr_t Text ) {
    HRESULT _hr = put_TopNote3(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5526)
inline _bstr_t TGFrameworkSupport::_IWeldSymbolAuto::GetTopNote3 ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TopNote3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5527)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutTopNoteZ ( _bstr_t Text ) {
    HRESULT _hr = put_TopNoteZ(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5528)
inline _bstr_t TGFrameworkSupport::_IWeldSymbolAuto::GetTopNoteZ ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TopNoteZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5529)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutTailNote ( _bstr_t Text ) {
    HRESULT _hr = put_TailNote(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5530)
inline _bstr_t TGFrameworkSupport::_IWeldSymbolAuto::GetTailNote ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TailNote(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5531)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutBottomNote1 ( _bstr_t Text ) {
    HRESULT _hr = put_BottomNote1(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5532)
inline _bstr_t TGFrameworkSupport::_IWeldSymbolAuto::GetBottomNote1 ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BottomNote1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5533)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutBottomNote2 ( _bstr_t Text ) {
    HRESULT _hr = put_BottomNote2(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5534)
inline _bstr_t TGFrameworkSupport::_IWeldSymbolAuto::GetBottomNote2 ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BottomNote2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5535)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutBottomTreatmentType ( enum DimWeldTreatmentTypeConstants Type ) {
    HRESULT _hr = put_BottomTreatmentType(Type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5536)
inline enum TGFrameworkSupport::DimWeldTreatmentTypeConstants TGFrameworkSupport::_IWeldSymbolAuto::GetBottomTreatmentType ( ) {
    enum DimWeldTreatmentTypeConstants _result;
    HRESULT _hr = get_BottomTreatmentType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5537)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutBottomType ( enum DimWeldTypeConstants Type ) {
    HRESULT _hr = put_BottomType(Type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5538)
inline enum TGFrameworkSupport::DimWeldTypeConstants TGFrameworkSupport::_IWeldSymbolAuto::GetBottomType ( ) {
    enum DimWeldTypeConstants _result;
    HRESULT _hr = get_BottomType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5539)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutBottomNote3 ( _bstr_t Text ) {
    HRESULT _hr = put_BottomNote3(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5540)
inline _bstr_t TGFrameworkSupport::_IWeldSymbolAuto::GetBottomNote3 ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BottomNote3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5541)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutBottomNoteZ ( _bstr_t Text ) {
    HRESULT _hr = put_BottomNoteZ(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5542)
inline _bstr_t TGFrameworkSupport::_IWeldSymbolAuto::GetBottomNoteZ ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BottomNoteZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5543)
inline HRESULT TGFrameworkSupport::_IWeldSymbolAuto::SetTerminator ( IDispatch * TerminatorObj, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    HRESULT _hr = raw_SetTerminator(TerminatorObj, x, y, z, keyPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5544)
inline HRESULT TGFrameworkSupport::_IWeldSymbolAuto::GetTerminator ( IDispatch * * TerminatorObj, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    HRESULT _hr = raw_GetTerminator(TerminatorObj, x, y, z, keyPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5545)
inline HRESULT TGFrameworkSupport::_IWeldSymbolAuto::SetFreeSpacePoint ( double x, double y, double z ) {
    HRESULT _hr = raw_SetFreeSpacePoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5546)
inline HRESULT TGFrameworkSupport::_IWeldSymbolAuto::GetFreeSpacePoint ( double * x, double * y, double * z ) {
    HRESULT _hr = raw_GetFreeSpacePoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5547)
inline IDispatchPtr TGFrameworkSupport::_IWeldSymbolAuto::GetPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Plane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5548)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IWeldSymbolAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5549)
inline long TGFrameworkSupport::_IWeldSymbolAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5550)
inline _bstr_t TGFrameworkSupport::_IWeldSymbolAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5551)
inline IDispatchPtr TGFrameworkSupport::_IWeldSymbolAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5552)
inline long TGFrameworkSupport::_IWeldSymbolAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5553)
inline long TGFrameworkSupport::_IWeldSymbolAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5554)
inline _bstr_t TGFrameworkSupport::_IWeldSymbolAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5555)
inline IDispatchPtr TGFrameworkSupport::_IWeldSymbolAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5556)
inline HRESULT TGFrameworkSupport::_IWeldSymbolAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5557)
inline HRESULT TGFrameworkSupport::_IWeldSymbolAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5558)
inline HRESULT TGFrameworkSupport::_IWeldSymbolAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5559)
inline HRESULT TGFrameworkSupport::_IWeldSymbolAuto::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    HRESULT _hr = raw_Move(XFrom, YFrom, XTo, YTo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5560)
inline HRESULT TGFrameworkSupport::_IWeldSymbolAuto::Scale ( double Factor ) {
    HRESULT _hr = raw_Scale(Factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5561)
inline HRESULT TGFrameworkSupport::_IWeldSymbolAuto::Rotate ( double Angle, double x, double y ) {
    HRESULT _hr = raw_Rotate(Angle, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5562)
inline HRESULT TGFrameworkSupport::_IWeldSymbolAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5563)
inline IDispatchPtr TGFrameworkSupport::_IWeldSymbolAuto::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Duplicate(XDistance, YDistance, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5564)
inline IDispatchPtr TGFrameworkSupport::_IWeldSymbolAuto::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Mirror(x1, y1, x2, y2, BooleanCopyFlag, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5565)
inline HRESULT TGFrameworkSupport::_IWeldSymbolAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5566)
inline HRESULT TGFrameworkSupport::_IWeldSymbolAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5567)
inline HRESULT TGFrameworkSupport::_IWeldSymbolAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5568)
inline HRESULT TGFrameworkSupport::_IWeldSymbolAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5569)
inline HRESULT TGFrameworkSupport::_IWeldSymbolAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5570)
inline double TGFrameworkSupport::_IWeldSymbolAuto::GetBreakLineDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_BreakLineDistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5571)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutBreakLineDistance ( double Distance ) {
    HRESULT _hr = put_BreakLineDistance(Distance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5572)
inline VARIANT_BOOL TGFrameworkSupport::_IWeldSymbolAuto::GetBreakLine ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BreakLine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5573)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutBreakLine ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_BreakLine(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5574)
inline VARIANT_BOOL TGFrameworkSupport::_IWeldSymbolAuto::GetBreakLineDirection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BreakLineDirection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5575)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutBreakLineDirection ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_BreakLineDirection(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5576)
inline VARIANT_BOOL TGFrameworkSupport::_IWeldSymbolAuto::GetLeader ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Leader(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5577)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutLeader ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_Leader(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5578)
inline long TGFrameworkSupport::_IWeldSymbolAuto::GetVertexCount ( ) {
    long _result = 0;
    HRESULT _hr = get_VertexCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5579)
inline HRESULT TGFrameworkSupport::_IWeldSymbolAuto::GetVertices ( long * VertexCount, SAFEARRAY * * Vertices ) {
    HRESULT _hr = raw_GetVertices(VertexCount, Vertices);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5580)
inline HRESULT TGFrameworkSupport::_IWeldSymbolAuto::SetVertices ( long VertexCount, SAFEARRAY * * Vertices ) {
    HRESULT _hr = raw_SetVertices(VertexCount, Vertices);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5581)
inline HRESULT TGFrameworkSupport::_IWeldSymbolAuto::GetVertex ( long Index, double * x, double * y, double * z ) {
    HRESULT _hr = raw_GetVertex(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5582)
inline HRESULT TGFrameworkSupport::_IWeldSymbolAuto::SetVertex ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetVertex(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5583)
inline HRESULT TGFrameworkSupport::_IWeldSymbolAuto::InsertVertex ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_InsertVertex(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5584)
inline HRESULT TGFrameworkSupport::_IWeldSymbolAuto::AddVertex ( double x, double y, double z ) {
    HRESULT _hr = raw_AddVertex(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5585)
inline HRESULT TGFrameworkSupport::_IWeldSymbolAuto::RemoveVertex ( long Index ) {
    HRESULT _hr = raw_RemoveVertex(Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5586)
inline long TGFrameworkSupport::_IWeldSymbolAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5587)
inline HRESULT TGFrameworkSupport::_IWeldSymbolAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5588)
inline HRESULT TGFrameworkSupport::_IWeldSymbolAuto::SetKeyPoint ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetKeyPoint(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5589)
inline double TGFrameworkSupport::_IWeldSymbolAuto::GetRotationAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_RotationAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5590)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutRotationAngle ( double pdAngle ) {
    HRESULT _hr = put_RotationAngle(pdAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5591)
inline IDispatchPtr TGFrameworkSupport::_IWeldSymbolAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5592)
inline VARIANT_BOOL TGFrameworkSupport::_IWeldSymbolAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5593)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutTailNote2 ( _bstr_t Text ) {
    HRESULT _hr = put_TailNote2(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5594)
inline _bstr_t TGFrameworkSupport::_IWeldSymbolAuto::GetTailNote2 ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TailNote2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5595)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutTopNoteCSize ( _bstr_t Text ) {
    HRESULT _hr = put_TopNoteCSize(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5596)
inline _bstr_t TGFrameworkSupport::_IWeldSymbolAuto::GetTopNoteCSize ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TopNoteCSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5597)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutBottomNoteCSize ( _bstr_t Text ) {
    HRESULT _hr = put_BottomNoteCSize(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5598)
inline _bstr_t TGFrameworkSupport::_IWeldSymbolAuto::GetBottomNoteCSize ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BottomNoteCSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5599)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutTopNoteAngle ( _bstr_t Text ) {
    HRESULT _hr = put_TopNoteAngle(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5600)
inline _bstr_t TGFrameworkSupport::_IWeldSymbolAuto::GetTopNoteAngle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TopNoteAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5601)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutBottomNoteAngle ( _bstr_t Text ) {
    HRESULT _hr = put_BottomNoteAngle(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5602)
inline _bstr_t TGFrameworkSupport::_IWeldSymbolAuto::GetBottomNoteAngle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BottomNoteAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5603)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutTopNoteDepth ( _bstr_t Text ) {
    HRESULT _hr = put_TopNoteDepth(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5604)
inline _bstr_t TGFrameworkSupport::_IWeldSymbolAuto::GetTopNoteDepth ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TopNoteDepth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5605)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutBottomNoteDepth ( _bstr_t Text ) {
    HRESULT _hr = put_BottomNoteDepth(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5606)
inline _bstr_t TGFrameworkSupport::_IWeldSymbolAuto::GetBottomNoteDepth ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BottomNoteDepth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5607)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutTopPosOffset ( int Offset ) {
    HRESULT _hr = put_TopPosOffset(Offset);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5608)
inline int TGFrameworkSupport::_IWeldSymbolAuto::GetTopPosOffset ( ) {
    int _result = 0;
    HRESULT _hr = get_TopPosOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5609)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutBottomPosOffset ( int Offset ) {
    HRESULT _hr = put_BottomPosOffset(Offset);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5610)
inline int TGFrameworkSupport::_IWeldSymbolAuto::GetBottomPosOffset ( ) {
    int _result = 0;
    HRESULT _hr = get_BottomPosOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5611)
inline double TGFrameworkSupport::_IWeldSymbolAuto::GetTextScale ( ) {
    double _result = 0;
    HRESULT _hr = get_TextScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5612)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutTextScale ( double pdAngle ) {
    HRESULT _hr = put_TextScale(pdAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5613)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5614)
inline _bstr_t TGFrameworkSupport::_IWeldSymbolAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5615)
inline IDispatchPtr TGFrameworkSupport::_IWeldSymbolAuto::GetPMIPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_PMIPlane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5616)
inline double TGFrameworkSupport::_IWeldSymbolAuto::GetPMITrackDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_PMITrackDistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5617)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutPMITrackDistance ( double pdPMITrackDistance ) {
    HRESULT _hr = put_PMITrackDistance(pdPMITrackDistance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5618)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutHidePMI ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_HidePMI(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5619)
inline VARIANT_BOOL TGFrameworkSupport::_IWeldSymbolAuto::GetHidePMI ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HidePMI(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5620)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutTopWeldModifier ( enum DimWeldModifierConstants Type ) {
    HRESULT _hr = put_TopWeldModifier(Type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5621)
inline enum TGFrameworkSupport::DimWeldModifierConstants TGFrameworkSupport::_IWeldSymbolAuto::GetTopWeldModifier ( ) {
    enum DimWeldModifierConstants _result;
    HRESULT _hr = get_TopWeldModifier(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5622)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutBottomWeldModifier ( enum DimWeldModifierConstants Type ) {
    HRESULT _hr = put_BottomWeldModifier(Type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5623)
inline enum TGFrameworkSupport::DimWeldModifierConstants TGFrameworkSupport::_IWeldSymbolAuto::GetBottomWeldModifier ( ) {
    enum DimWeldModifierConstants _result;
    HRESULT _hr = get_BottomWeldModifier(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5624)
inline TGFrameworkSupport::DisplayDataPtr TGFrameworkSupport::_IWeldSymbolAuto::GetDisplayData ( ) {
    struct DisplayData * _result = 0;
    HRESULT _hr = raw_GetDisplayData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DisplayDataPtr(_result, false);
}

#pragma implementation_key(5625)
inline HRESULT TGFrameworkSupport::_IWeldSymbolAuto::PromoteToCurrentVersion ( ) {
    HRESULT _hr = raw_PromoteToCurrentVersion();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5626)
inline HRESULT TGFrameworkSupport::_IWeldSymbolAuto::SetAlignmentShape ( IDispatch * AlignmentShapeObj, double x, double y ) {
    HRESULT _hr = raw_SetAlignmentShape(AlignmentShapeObj, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5627)
inline HRESULT TGFrameworkSupport::_IWeldSymbolAuto::GetAlignmentShape ( IDispatch * * AlignmentShapeObj, double * x, double * y ) {
    HRESULT _hr = raw_GetAlignmentShape(AlignmentShapeObj, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5628)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutPMIName ( _bstr_t Text ) {
    HRESULT _hr = put_PMIName(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5629)
inline _bstr_t TGFrameworkSupport::_IWeldSymbolAuto::GetPMIName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PMIName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5630)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutWeldInFieldFlagDirection ( enum WeldSymbolFlagDirectionConstants Flag ) {
    HRESULT _hr = put_WeldInFieldFlagDirection(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5631)
inline enum TGFrameworkSupport::WeldSymbolFlagDirectionConstants TGFrameworkSupport::_IWeldSymbolAuto::GetWeldInFieldFlagDirection ( ) {
    enum WeldSymbolFlagDirectionConstants _result;
    HRESULT _hr = get_WeldInFieldFlagDirection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5632)
inline HRESULT TGFrameworkSupport::_IWeldSymbolAuto::TransformToModelCoordinates ( double InputX, double InputY, double InputZ, double * ModelX, double * ModelY, double * ModelZ ) {
    HRESULT _hr = raw_TransformToModelCoordinates(InputX, InputY, InputZ, ModelX, ModelY, ModelZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5633)
inline void TGFrameworkSupport::_IWeldSymbolAuto::PutCenterType ( enum DimWeldTypeConstants Type ) {
    HRESULT _hr = put_CenterType(Type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5634)
inline enum TGFrameworkSupport::DimWeldTypeConstants TGFrameworkSupport::_IWeldSymbolAuto::GetCenterType ( ) {
    enum DimWeldTypeConstants _result;
    HRESULT _hr = get_CenterType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5635)
inline HRESULT TGFrameworkSupport::_IWeldSymbolAuto::SetCenterTreatmentTypes ( enum DimWeldTreatmentTypeConstants AboveType, enum DimWeldTreatmentTypeConstants BelowType ) {
    HRESULT _hr = raw_SetCenterTreatmentTypes(AboveType, BelowType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5636)
inline HRESULT TGFrameworkSupport::_IWeldSymbolAuto::GetCenterTreatmentTypes ( enum DimWeldTreatmentTypeConstants * AboveType, enum DimWeldTreatmentTypeConstants * BelowType ) {
    HRESULT _hr = raw_GetCenterTreatmentTypes(AboveType, BelowType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5637)
inline VARIANT_BOOL TGFrameworkSupport::_IWeldSymbolAuto::GetIsTerminatorAttachedToEntity ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsTerminatorAttachedToEntity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5638)
inline HRESULT TGFrameworkSupport::_IWeldSymbolAuto::GetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    HRESULT _hr = raw_GetReferencedGeometry(ReferencedGeometries);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5639)
inline HRESULT TGFrameworkSupport::_IWeldSymbolAuto::SetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    HRESULT _hr = raw_SetReferencedGeometry(ReferencedGeometries);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface WeldSymbolDataSet wrapper method implementations
//

#pragma implementation_key(5640)
inline void TGFrameworkSupport::WeldSymbolDataSet::PutZSymbol ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5641)
inline VARIANT_BOOL TGFrameworkSupport::WeldSymbolDataSet::GetZSymbol ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5642)
inline void TGFrameworkSupport::WeldSymbolDataSet::PutTail ( enum DimWeldTailTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5643)
inline enum TGFrameworkSupport::DimWeldTailTypeConstants TGFrameworkSupport::WeldSymbolDataSet::GetTail ( ) {
    enum DimWeldTailTypeConstants _result;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5644)
inline void TGFrameworkSupport::WeldSymbolDataSet::PutDashLine ( enum DimWeldDashLineTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5645)
inline enum TGFrameworkSupport::DimWeldDashLineTypeConstants TGFrameworkSupport::WeldSymbolDataSet::GetDashLine ( ) {
    enum DimWeldDashLineTypeConstants _result;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5646)
inline void TGFrameworkSupport::WeldSymbolDataSet::PutWeldInField ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5647)
inline VARIANT_BOOL TGFrameworkSupport::WeldSymbolDataSet::GetWeldInField ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5648)
inline void TGFrameworkSupport::WeldSymbolDataSet::PutOffsetTopBottom ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5649)
inline VARIANT_BOOL TGFrameworkSupport::WeldSymbolDataSet::GetOffsetTopBottom ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5650)
inline void TGFrameworkSupport::WeldSymbolDataSet::PutWeldAllAround ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5651)
inline VARIANT_BOOL TGFrameworkSupport::WeldSymbolDataSet::GetWeldAllAround ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5652)
inline void TGFrameworkSupport::WeldSymbolDataSet::PutSymmetrical ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x23, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5653)
inline VARIANT_BOOL TGFrameworkSupport::WeldSymbolDataSet::GetSymmetrical ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x23, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5654)
inline void TGFrameworkSupport::WeldSymbolDataSet::PutTopNote1 ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5655)
inline _bstr_t TGFrameworkSupport::WeldSymbolDataSet::GetTopNote1 ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5656)
inline void TGFrameworkSupport::WeldSymbolDataSet::PutTopNote2 ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5657)
inline _bstr_t TGFrameworkSupport::WeldSymbolDataSet::GetTopNote2 ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5658)
inline void TGFrameworkSupport::WeldSymbolDataSet::PutTopTreatmentType ( enum DimWeldTreatmentTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5659)
inline enum TGFrameworkSupport::DimWeldTreatmentTypeConstants TGFrameworkSupport::WeldSymbolDataSet::GetTopTreatmentType ( ) {
    enum DimWeldTreatmentTypeConstants _result;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5660)
inline void TGFrameworkSupport::WeldSymbolDataSet::PutTopType ( enum DimWeldTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5661)
inline enum TGFrameworkSupport::DimWeldTypeConstants TGFrameworkSupport::WeldSymbolDataSet::GetTopType ( ) {
    enum DimWeldTypeConstants _result;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5662)
inline void TGFrameworkSupport::WeldSymbolDataSet::PutTopNote3 ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5663)
inline _bstr_t TGFrameworkSupport::WeldSymbolDataSet::GetTopNote3 ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5664)
inline void TGFrameworkSupport::WeldSymbolDataSet::PutTopNoteZ ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5665)
inline _bstr_t TGFrameworkSupport::WeldSymbolDataSet::GetTopNoteZ ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5666)
inline void TGFrameworkSupport::WeldSymbolDataSet::PutTailNote ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5667)
inline _bstr_t TGFrameworkSupport::WeldSymbolDataSet::GetTailNote ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5668)
inline void TGFrameworkSupport::WeldSymbolDataSet::PutBottomNote1 ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5669)
inline _bstr_t TGFrameworkSupport::WeldSymbolDataSet::GetBottomNote1 ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5670)
inline void TGFrameworkSupport::WeldSymbolDataSet::PutBottomNote2 ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5671)
inline _bstr_t TGFrameworkSupport::WeldSymbolDataSet::GetBottomNote2 ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5672)
inline void TGFrameworkSupport::WeldSymbolDataSet::PutBottomTreatmentType ( enum DimWeldTreatmentTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5673)
inline enum TGFrameworkSupport::DimWeldTreatmentTypeConstants TGFrameworkSupport::WeldSymbolDataSet::GetBottomTreatmentType ( ) {
    enum DimWeldTreatmentTypeConstants _result;
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5674)
inline void TGFrameworkSupport::WeldSymbolDataSet::PutBottomType ( enum DimWeldTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5675)
inline enum TGFrameworkSupport::DimWeldTypeConstants TGFrameworkSupport::WeldSymbolDataSet::GetBottomType ( ) {
    enum DimWeldTypeConstants _result;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5676)
inline void TGFrameworkSupport::WeldSymbolDataSet::PutBottomNote3 ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5677)
inline _bstr_t TGFrameworkSupport::WeldSymbolDataSet::GetBottomNote3 ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5678)
inline void TGFrameworkSupport::WeldSymbolDataSet::PutBottomNoteZ ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5679)
inline _bstr_t TGFrameworkSupport::WeldSymbolDataSet::GetBottomNoteZ ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5680)
inline void TGFrameworkSupport::WeldSymbolDataSet::PutTopWeldModifier ( enum DimWeldModifierConstants _arg1 ) {
    _com_dispatch_method(this, 0x10cc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5681)
inline enum TGFrameworkSupport::DimWeldModifierConstants TGFrameworkSupport::WeldSymbolDataSet::GetTopWeldModifier ( ) {
    enum DimWeldModifierConstants _result;
    _com_dispatch_method(this, 0x10cc, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5682)
inline void TGFrameworkSupport::WeldSymbolDataSet::PutBottomWeldModifier ( enum DimWeldModifierConstants _arg1 ) {
    _com_dispatch_method(this, 0x10cd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5683)
inline enum TGFrameworkSupport::DimWeldModifierConstants TGFrameworkSupport::WeldSymbolDataSet::GetBottomWeldModifier ( ) {
    enum DimWeldModifierConstants _result;
    _com_dispatch_method(this, 0x10cd, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

//
// interface _IWeldSymbolsAuto wrapper method implementations
//

#pragma implementation_key(5684)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IWeldSymbolsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5685)
inline long TGFrameworkSupport::_IWeldSymbolsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5686)
inline IDispatchPtr TGFrameworkSupport::_IWeldSymbolsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5687)
inline TGFrameworkSupport::WeldSymbolPtr TGFrameworkSupport::_IWeldSymbolsAuto::Item ( const _variant_t & Index ) {
    struct WeldSymbol * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return WeldSymbolPtr(_result, false);
}

#pragma implementation_key(5688)
inline IUnknownPtr TGFrameworkSupport::_IWeldSymbolsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5689)
inline void TGFrameworkSupport::_IWeldSymbolsAuto::PutPlane ( IDispatch * Plane ) {
    HRESULT _hr = put_Plane(Plane);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5690)
inline IDispatchPtr TGFrameworkSupport::_IWeldSymbolsAuto::GetPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Plane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5691)
inline void TGFrameworkSupport::_IWeldSymbolsAuto::PutStyle ( struct DimensionStyle * Style ) {
    HRESULT _hr = put_Style(Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5692)
inline TGFrameworkSupport::DimensionStylePtr TGFrameworkSupport::_IWeldSymbolsAuto::GetStyle ( ) {
    struct DimensionStyle * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionStylePtr(_result, false);
}

#pragma implementation_key(5693)
inline void TGFrameworkSupport::_IWeldSymbolsAuto::PutDataSet ( struct WeldSymbolDataSet * _arg1 ) {
    HRESULT _hr = put_DataSet(_arg1);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5694)
inline TGFrameworkSupport::WeldSymbolPtr TGFrameworkSupport::_IWeldSymbolsAuto::Add ( double x1, double y1, double z1 ) {
    struct WeldSymbol * _result = 0;
    HRESULT _hr = raw_Add(x1, y1, z1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return WeldSymbolPtr(_result, false);
}

#pragma implementation_key(5695)
inline TGFrameworkSupport::WeldSymbolPtr TGFrameworkSupport::_IWeldSymbolsAuto::AddByTerminator ( IDispatch * TerminatorObject, double x1, double y1, double z1, VARIANT_BOOL keyPoint1 ) {
    struct WeldSymbol * _result = 0;
    HRESULT _hr = raw_AddByTerminator(TerminatorObject, x1, y1, z1, keyPoint1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return WeldSymbolPtr(_result, false);
}

#pragma implementation_key(5696)
inline HRESULT TGFrameworkSupport::_IWeldSymbolsAuto::ClearPlane ( ) {
    HRESULT _hr = raw_ClearPlane();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5697)
inline HRESULT TGFrameworkSupport::_IWeldSymbolsAuto::ClearStyle ( ) {
    HRESULT _hr = raw_ClearStyle();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5698)
inline HRESULT TGFrameworkSupport::_IWeldSymbolsAuto::ClearDataSet ( ) {
    HRESULT _hr = raw_ClearDataSet();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5699)
inline TGFrameworkSupport::AnnotInitDataPtr TGFrameworkSupport::_IWeldSymbolsAuto::GetAnnotInitData ( ) {
    struct AnnotInitData * _result = 0;
    HRESULT _hr = get_AnnotInitData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AnnotInitDataPtr(_result, false);
}

#pragma implementation_key(5700)
inline TGFrameworkSupport::WeldSymbolPtr TGFrameworkSupport::_IWeldSymbolsAuto::AddWeldSymbol ( struct AnnotInitData * AnnotInitData ) {
    struct WeldSymbol * _result = 0;
    HRESULT _hr = raw_AddWeldSymbol(AnnotInitData, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return WeldSymbolPtr(_result, false);
}

//
// interface _IWeldSymbolDataSetAuto wrapper method implementations
//

#pragma implementation_key(5701)
inline void TGFrameworkSupport::_IWeldSymbolDataSetAuto::PutZSymbol ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_ZSymbol(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5702)
inline VARIANT_BOOL TGFrameworkSupport::_IWeldSymbolDataSetAuto::GetZSymbol ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ZSymbol(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5703)
inline void TGFrameworkSupport::_IWeldSymbolDataSetAuto::PutTail ( enum DimWeldTailTypeConstants pVal ) {
    HRESULT _hr = put_Tail(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5704)
inline enum TGFrameworkSupport::DimWeldTailTypeConstants TGFrameworkSupport::_IWeldSymbolDataSetAuto::GetTail ( ) {
    enum DimWeldTailTypeConstants _result;
    HRESULT _hr = get_Tail(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5705)
inline void TGFrameworkSupport::_IWeldSymbolDataSetAuto::PutDashLine ( enum DimWeldDashLineTypeConstants pVal ) {
    HRESULT _hr = put_DashLine(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5706)
inline enum TGFrameworkSupport::DimWeldDashLineTypeConstants TGFrameworkSupport::_IWeldSymbolDataSetAuto::GetDashLine ( ) {
    enum DimWeldDashLineTypeConstants _result;
    HRESULT _hr = get_DashLine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5707)
inline void TGFrameworkSupport::_IWeldSymbolDataSetAuto::PutWeldInField ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_WeldInField(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5708)
inline VARIANT_BOOL TGFrameworkSupport::_IWeldSymbolDataSetAuto::GetWeldInField ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WeldInField(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5709)
inline void TGFrameworkSupport::_IWeldSymbolDataSetAuto::PutOffsetTopBottom ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_OffsetTopBottom(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5710)
inline VARIANT_BOOL TGFrameworkSupport::_IWeldSymbolDataSetAuto::GetOffsetTopBottom ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_OffsetTopBottom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5711)
inline void TGFrameworkSupport::_IWeldSymbolDataSetAuto::PutWeldAllAround ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_WeldAllAround(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5712)
inline VARIANT_BOOL TGFrameworkSupport::_IWeldSymbolDataSetAuto::GetWeldAllAround ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WeldAllAround(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5713)
inline void TGFrameworkSupport::_IWeldSymbolDataSetAuto::PutSymmetrical ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_Symmetrical(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5714)
inline VARIANT_BOOL TGFrameworkSupport::_IWeldSymbolDataSetAuto::GetSymmetrical ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Symmetrical(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5715)
inline void TGFrameworkSupport::_IWeldSymbolDataSetAuto::PutTopNote1 ( _bstr_t Text ) {
    HRESULT _hr = put_TopNote1(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5716)
inline _bstr_t TGFrameworkSupport::_IWeldSymbolDataSetAuto::GetTopNote1 ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TopNote1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5717)
inline void TGFrameworkSupport::_IWeldSymbolDataSetAuto::PutTopNote2 ( _bstr_t Text ) {
    HRESULT _hr = put_TopNote2(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5718)
inline _bstr_t TGFrameworkSupport::_IWeldSymbolDataSetAuto::GetTopNote2 ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TopNote2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5719)
inline void TGFrameworkSupport::_IWeldSymbolDataSetAuto::PutTopTreatmentType ( enum DimWeldTreatmentTypeConstants Type ) {
    HRESULT _hr = put_TopTreatmentType(Type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5720)
inline enum TGFrameworkSupport::DimWeldTreatmentTypeConstants TGFrameworkSupport::_IWeldSymbolDataSetAuto::GetTopTreatmentType ( ) {
    enum DimWeldTreatmentTypeConstants _result;
    HRESULT _hr = get_TopTreatmentType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5721)
inline void TGFrameworkSupport::_IWeldSymbolDataSetAuto::PutTopType ( enum DimWeldTypeConstants Type ) {
    HRESULT _hr = put_TopType(Type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5722)
inline enum TGFrameworkSupport::DimWeldTypeConstants TGFrameworkSupport::_IWeldSymbolDataSetAuto::GetTopType ( ) {
    enum DimWeldTypeConstants _result;
    HRESULT _hr = get_TopType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5723)
inline void TGFrameworkSupport::_IWeldSymbolDataSetAuto::PutTopNote3 ( _bstr_t Text ) {
    HRESULT _hr = put_TopNote3(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5724)
inline _bstr_t TGFrameworkSupport::_IWeldSymbolDataSetAuto::GetTopNote3 ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TopNote3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5725)
inline void TGFrameworkSupport::_IWeldSymbolDataSetAuto::PutTopNoteZ ( _bstr_t Text ) {
    HRESULT _hr = put_TopNoteZ(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5726)
inline _bstr_t TGFrameworkSupport::_IWeldSymbolDataSetAuto::GetTopNoteZ ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TopNoteZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5727)
inline void TGFrameworkSupport::_IWeldSymbolDataSetAuto::PutTailNote ( _bstr_t Text ) {
    HRESULT _hr = put_TailNote(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5728)
inline _bstr_t TGFrameworkSupport::_IWeldSymbolDataSetAuto::GetTailNote ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TailNote(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5729)
inline void TGFrameworkSupport::_IWeldSymbolDataSetAuto::PutBottomNote1 ( _bstr_t Text ) {
    HRESULT _hr = put_BottomNote1(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5730)
inline _bstr_t TGFrameworkSupport::_IWeldSymbolDataSetAuto::GetBottomNote1 ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BottomNote1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5731)
inline void TGFrameworkSupport::_IWeldSymbolDataSetAuto::PutBottomNote2 ( _bstr_t Text ) {
    HRESULT _hr = put_BottomNote2(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5732)
inline _bstr_t TGFrameworkSupport::_IWeldSymbolDataSetAuto::GetBottomNote2 ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BottomNote2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5733)
inline void TGFrameworkSupport::_IWeldSymbolDataSetAuto::PutBottomTreatmentType ( enum DimWeldTreatmentTypeConstants Type ) {
    HRESULT _hr = put_BottomTreatmentType(Type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5734)
inline enum TGFrameworkSupport::DimWeldTreatmentTypeConstants TGFrameworkSupport::_IWeldSymbolDataSetAuto::GetBottomTreatmentType ( ) {
    enum DimWeldTreatmentTypeConstants _result;
    HRESULT _hr = get_BottomTreatmentType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5735)
inline void TGFrameworkSupport::_IWeldSymbolDataSetAuto::PutBottomType ( enum DimWeldTypeConstants Type ) {
    HRESULT _hr = put_BottomType(Type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5736)
inline enum TGFrameworkSupport::DimWeldTypeConstants TGFrameworkSupport::_IWeldSymbolDataSetAuto::GetBottomType ( ) {
    enum DimWeldTypeConstants _result;
    HRESULT _hr = get_BottomType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5737)
inline void TGFrameworkSupport::_IWeldSymbolDataSetAuto::PutBottomNote3 ( _bstr_t Text ) {
    HRESULT _hr = put_BottomNote3(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5738)
inline _bstr_t TGFrameworkSupport::_IWeldSymbolDataSetAuto::GetBottomNote3 ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BottomNote3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5739)
inline void TGFrameworkSupport::_IWeldSymbolDataSetAuto::PutBottomNoteZ ( _bstr_t Text ) {
    HRESULT _hr = put_BottomNoteZ(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5740)
inline _bstr_t TGFrameworkSupport::_IWeldSymbolDataSetAuto::GetBottomNoteZ ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BottomNoteZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5741)
inline void TGFrameworkSupport::_IWeldSymbolDataSetAuto::PutTopWeldModifier ( enum DimWeldModifierConstants Type ) {
    HRESULT _hr = put_TopWeldModifier(Type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5742)
inline enum TGFrameworkSupport::DimWeldModifierConstants TGFrameworkSupport::_IWeldSymbolDataSetAuto::GetTopWeldModifier ( ) {
    enum DimWeldModifierConstants _result;
    HRESULT _hr = get_TopWeldModifier(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5743)
inline void TGFrameworkSupport::_IWeldSymbolDataSetAuto::PutBottomWeldModifier ( enum DimWeldModifierConstants Type ) {
    HRESULT _hr = put_BottomWeldModifier(Type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5744)
inline enum TGFrameworkSupport::DimWeldModifierConstants TGFrameworkSupport::_IWeldSymbolDataSetAuto::GetBottomWeldModifier ( ) {
    enum DimWeldModifierConstants _result;
    HRESULT _hr = get_BottomWeldModifier(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface CenterMarks wrapper method implementations
//

#pragma implementation_key(5745)
inline TGFramework::ApplicationPtr TGFrameworkSupport::CenterMarks::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5746)
inline long TGFrameworkSupport::CenterMarks::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5747)
inline IDispatchPtr TGFrameworkSupport::CenterMarks::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5748)
inline TGFrameworkSupport::CenterMarkPtr TGFrameworkSupport::CenterMarks::Item ( const _variant_t & Index ) {
    struct CenterMark * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return CenterMarkPtr(_result, false);
}

#pragma implementation_key(5749)
inline void TGFrameworkSupport::CenterMarks::PutPlane ( IDispatch * _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(5750)
inline IDispatchPtr TGFrameworkSupport::CenterMarks::GetPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5751)
inline void TGFrameworkSupport::CenterMarks::PutStyle ( struct DimensionStyle * _arg1 ) {
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(5752)
inline TGFrameworkSupport::DimensionStylePtr TGFrameworkSupport::CenterMarks::GetStyle ( ) {
    struct DimensionStyle * _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DimensionStylePtr(_result, false);
}

#pragma implementation_key(5753)
inline void TGFrameworkSupport::CenterMarks::PutAxis ( IDispatch * _arg1 ) {
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(5754)
inline IDispatchPtr TGFrameworkSupport::CenterMarks::GetAxis ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5755)
inline TGFrameworkSupport::CenterMarkPtr TGFrameworkSupport::CenterMarks::Add ( double x, double y, double z ) {
    struct CenterMark * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005", x, y, z);
    return CenterMarkPtr(_result, false);
}

#pragma implementation_key(5756)
inline TGFrameworkSupport::CenterMarkPtr TGFrameworkSupport::CenterMarks::AddByCenter ( IDispatch * CenterObject, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    struct CenterMark * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x000b", CenterObject, x, y, z, keyPoint);
    return CenterMarkPtr(_result, false);
}

#pragma implementation_key(5757)
inline HRESULT TGFrameworkSupport::CenterMarks::ClearPlane ( ) {
    return _com_dispatch_method(this, 0x78, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5758)
inline HRESULT TGFrameworkSupport::CenterMarks::ClearStyle ( ) {
    return _com_dispatch_method(this, 0x79, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5759)
inline HRESULT TGFrameworkSupport::CenterMarks::ClearAxis ( ) {
    return _com_dispatch_method(this, 0x7a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5760)
inline TGFrameworkSupport::CenterMarkPtr TGFrameworkSupport::CenterMarks::Add2PointCenterMark ( IDispatch * Object1, double x1, double y1, double z1, VARIANT_BOOL keyPoint1, IDispatch * Object2, double x2, double y2, double z2, VARIANT_BOOL keyPoint2, VARIANT_BOOL bHonorKeyPoints ) {
    struct CenterMark * _result = 0;
    _com_dispatch_method(this, 0x7b, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x000b\x0009\x0005\x0005\x0005\x000b\x000b", Object1, x1, y1, z1, keyPoint1, Object2, x2, y2, z2, keyPoint2, bHonorKeyPoints);
    return CenterMarkPtr(_result, false);
}

#pragma implementation_key(5761)
inline TGFrameworkSupport::AnnotInitDataPtr TGFrameworkSupport::CenterMarks::GetAnnotInitData ( ) {
    struct AnnotInitData * _result = 0;
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AnnotInitDataPtr(_result, false);
}

#pragma implementation_key(5762)
inline TGFrameworkSupport::CenterMarkPtr TGFrameworkSupport::CenterMarks::AddCenterMark ( struct AnnotInitData * AnnotInitData ) {
    struct CenterMark * _result = 0;
    _com_dispatch_method(this, 0x7d, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", AnnotInitData);
    return CenterMarkPtr(_result, false);
}

//
// dispinterface CenterMark wrapper method implementations
//

#pragma implementation_key(5763)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::CenterMark::GetStyle ( ) {
    struct DimStyle * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DimStylePtr(_result, false);
}

#pragma implementation_key(5764)
inline HRESULT TGFrameworkSupport::CenterMark::SetCenter ( IDispatch * CenterObj, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0005\x0005\x0005\x000b", CenterObj, x, y, z, keyPoint);
}

#pragma implementation_key(5765)
inline HRESULT TGFrameworkSupport::CenterMark::GetCenter ( IDispatch * * CenterObj, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4005\x4005\x4005\x400b", CenterObj, x, y, z, keyPoint);
}

#pragma implementation_key(5766)
inline HRESULT TGFrameworkSupport::CenterMark::SetCenterPoint ( double x, double y, double z ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", x, y, z);
}

#pragma implementation_key(5767)
inline HRESULT TGFrameworkSupport::CenterMark::GetCenterPoint ( double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005", x, y, z);
}

#pragma implementation_key(5768)
inline IDispatchPtr TGFrameworkSupport::CenterMark::GetPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5769)
inline IDispatchPtr TGFrameworkSupport::CenterMark::GetAxis ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5770)
inline TGFramework::ApplicationPtr TGFrameworkSupport::CenterMark::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x2065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5771)
inline long TGFrameworkSupport::CenterMark::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2066, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5772)
inline _bstr_t TGFrameworkSupport::CenterMark::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x2067, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5773)
inline IDispatchPtr TGFrameworkSupport::CenterMark::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2068, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5774)
inline long TGFrameworkSupport::CenterMark::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2069, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5775)
inline long TGFrameworkSupport::CenterMark::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x206b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5776)
inline _bstr_t TGFrameworkSupport::CenterMark::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x206c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5777)
inline IDispatchPtr TGFrameworkSupport::CenterMark::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x206d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5778)
inline HRESULT TGFrameworkSupport::CenterMark::Copy ( ) {
    return _com_dispatch_method(this, 0x6001200a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5779)
inline HRESULT TGFrameworkSupport::CenterMark::Cut ( ) {
    return _com_dispatch_method(this, 0x6001200b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5780)
inline HRESULT TGFrameworkSupport::CenterMark::Delete ( ) {
    return _com_dispatch_method(this, 0x6001200c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5781)
inline HRESULT TGFrameworkSupport::CenterMark::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    return _com_dispatch_method(this, 0x6001200d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", XFrom, YFrom, XTo, YTo);
}

#pragma implementation_key(5782)
inline HRESULT TGFrameworkSupport::CenterMark::Scale ( double Factor ) {
    return _com_dispatch_method(this, 0x6001200e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Factor);
}

#pragma implementation_key(5783)
inline HRESULT TGFrameworkSupport::CenterMark::Rotate ( double Angle, double x, double y ) {
    return _com_dispatch_method(this, 0x6001200f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", Angle, x, y);
}

#pragma implementation_key(5784)
inline HRESULT TGFrameworkSupport::CenterMark::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60012011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(5785)
inline IDispatchPtr TGFrameworkSupport::CenterMark::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60012012, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &XDistance, &YDistance);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5786)
inline IDispatchPtr TGFrameworkSupport::CenterMark::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60012013, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x080c", x1, y1, x2, y2, &BooleanCopyFlag);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5787)
inline HRESULT TGFrameworkSupport::CenterMark::BringToFront ( ) {
    return _com_dispatch_method(this, 0x60012014, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5788)
inline HRESULT TGFrameworkSupport::CenterMark::BringForward ( ) {
    return _com_dispatch_method(this, 0x60012015, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5789)
inline HRESULT TGFrameworkSupport::CenterMark::SendToBack ( ) {
    return _com_dispatch_method(this, 0x60012016, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5790)
inline HRESULT TGFrameworkSupport::CenterMark::SendBackward ( ) {
    return _com_dispatch_method(this, 0x60012017, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5791)
inline HRESULT TGFrameworkSupport::CenterMark::Select ( ) {
    return _com_dispatch_method(this, 0x60012018, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5792)
inline long TGFrameworkSupport::CenterMark::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5793)
inline HRESULT TGFrameworkSupport::CenterMark::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x6002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(5794)
inline HRESULT TGFrameworkSupport::CenterMark::SetKeyPoint ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x6003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(5795)
inline IDispatchPtr TGFrameworkSupport::CenterMark::GetConnectObject ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5796)
inline VARIANT_BOOL TGFrameworkSupport::CenterMark::GetTwoPoint ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x206e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5797)
inline HRESULT TGFrameworkSupport::CenterMark::SetArcCenter ( IDispatch * CenterObj, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    return _com_dispatch_method(this, 0x2070, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0005\x0005\x0005\x000b", CenterObj, x, y, z, keyPoint);
}

#pragma implementation_key(5798)
inline HRESULT TGFrameworkSupport::CenterMark::GetArcCenter ( IDispatch * * CenterObj, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    return _com_dispatch_method(this, 0x206f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4005\x4005\x4005\x400b", CenterObj, x, y, z, keyPoint);
}

#pragma implementation_key(5799)
inline HRESULT TGFrameworkSupport::CenterMark::SetArcCenterPoint ( double x, double y, double z ) {
    return _com_dispatch_method(this, 0x2072, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", x, y, z);
}

#pragma implementation_key(5800)
inline HRESULT TGFrameworkSupport::CenterMark::GetArcCenterPoint ( double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0x2071, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005", x, y, z);
}

#pragma implementation_key(5801)
inline IDispatchPtr TGFrameworkSupport::CenterMark::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5802)
inline VARIANT_BOOL TGFrameworkSupport::CenterMark::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(5803)
inline double TGFrameworkSupport::CenterMark::GetTextScale ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3009, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5804)
inline void TGFrameworkSupport::CenterMark::PutTextScale ( double _arg1 ) {
    _com_dispatch_method(this, 0x3009, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(5805)
inline void TGFrameworkSupport::CenterMark::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1073, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5806)
inline _bstr_t TGFrameworkSupport::CenterMark::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1073, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5807)
inline HRESULT TGFrameworkSupport::CenterMark::PromoteToCurrentVersion ( ) {
    return _com_dispatch_method(this, 0x2073, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5808)
inline void TGFrameworkSupport::CenterMark::PutPMIName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x2074, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5809)
inline _bstr_t TGFrameworkSupport::CenterMark::GetPMIName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x2074, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5810)
inline void TGFrameworkSupport::CenterMark::PutHidePMI ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x2075, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5811)
inline VARIANT_BOOL TGFrameworkSupport::CenterMark::GetHidePMI ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2075, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5812)
inline IDispatchPtr TGFrameworkSupport::CenterMark::GetPMIPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2076, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// interface _ICenterMarksAuto wrapper method implementations
//

#pragma implementation_key(5813)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_ICenterMarksAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5814)
inline long TGFrameworkSupport::_ICenterMarksAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5815)
inline IDispatchPtr TGFrameworkSupport::_ICenterMarksAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5816)
inline TGFrameworkSupport::CenterMarkPtr TGFrameworkSupport::_ICenterMarksAuto::Item ( const _variant_t & Index ) {
    struct CenterMark * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CenterMarkPtr(_result, false);
}

#pragma implementation_key(5817)
inline IUnknownPtr TGFrameworkSupport::_ICenterMarksAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5818)
inline void TGFrameworkSupport::_ICenterMarksAuto::PutPlane ( IDispatch * Plane ) {
    HRESULT _hr = put_Plane(Plane);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5819)
inline IDispatchPtr TGFrameworkSupport::_ICenterMarksAuto::GetPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Plane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5820)
inline void TGFrameworkSupport::_ICenterMarksAuto::PutStyle ( struct DimensionStyle * Style ) {
    HRESULT _hr = put_Style(Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5821)
inline TGFrameworkSupport::DimensionStylePtr TGFrameworkSupport::_ICenterMarksAuto::GetStyle ( ) {
    struct DimensionStyle * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionStylePtr(_result, false);
}

#pragma implementation_key(5822)
inline void TGFrameworkSupport::_ICenterMarksAuto::PutAxis ( IDispatch * Axis ) {
    HRESULT _hr = put_Axis(Axis);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5823)
inline IDispatchPtr TGFrameworkSupport::_ICenterMarksAuto::GetAxis ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Axis(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5824)
inline TGFrameworkSupport::CenterMarkPtr TGFrameworkSupport::_ICenterMarksAuto::Add ( double x, double y, double z ) {
    struct CenterMark * _result = 0;
    HRESULT _hr = raw_Add(x, y, z, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CenterMarkPtr(_result, false);
}

#pragma implementation_key(5825)
inline TGFrameworkSupport::CenterMarkPtr TGFrameworkSupport::_ICenterMarksAuto::AddByCenter ( IDispatch * CenterObject, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    struct CenterMark * _result = 0;
    HRESULT _hr = raw_AddByCenter(CenterObject, x, y, z, keyPoint, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CenterMarkPtr(_result, false);
}

#pragma implementation_key(5826)
inline HRESULT TGFrameworkSupport::_ICenterMarksAuto::ClearPlane ( ) {
    HRESULT _hr = raw_ClearPlane();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5827)
inline HRESULT TGFrameworkSupport::_ICenterMarksAuto::ClearStyle ( ) {
    HRESULT _hr = raw_ClearStyle();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5828)
inline HRESULT TGFrameworkSupport::_ICenterMarksAuto::ClearAxis ( ) {
    HRESULT _hr = raw_ClearAxis();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5829)
inline TGFrameworkSupport::CenterMarkPtr TGFrameworkSupport::_ICenterMarksAuto::Add2PointCenterMark ( IDispatch * Object1, double x1, double y1, double z1, VARIANT_BOOL keyPoint1, IDispatch * Object2, double x2, double y2, double z2, VARIANT_BOOL keyPoint2, VARIANT_BOOL bHonorKeyPoints ) {
    struct CenterMark * _result = 0;
    HRESULT _hr = raw_Add2PointCenterMark(Object1, x1, y1, z1, keyPoint1, Object2, x2, y2, z2, keyPoint2, bHonorKeyPoints, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CenterMarkPtr(_result, false);
}

#pragma implementation_key(5830)
inline TGFrameworkSupport::AnnotInitDataPtr TGFrameworkSupport::_ICenterMarksAuto::GetAnnotInitData ( ) {
    struct AnnotInitData * _result = 0;
    HRESULT _hr = get_AnnotInitData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AnnotInitDataPtr(_result, false);
}

#pragma implementation_key(5831)
inline TGFrameworkSupport::CenterMarkPtr TGFrameworkSupport::_ICenterMarksAuto::AddCenterMark ( struct AnnotInitData * AnnotInitData ) {
    struct CenterMark * _result = 0;
    HRESULT _hr = raw_AddCenterMark(AnnotInitData, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CenterMarkPtr(_result, false);
}

//
// interface _ICenterMarkAuto wrapper method implementations
//

#pragma implementation_key(5832)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::_ICenterMarkAuto::GetStyle ( ) {
    struct DimStyle * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimStylePtr(_result, false);
}

#pragma implementation_key(5833)
inline HRESULT TGFrameworkSupport::_ICenterMarkAuto::SetCenter ( IDispatch * CenterObj, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    HRESULT _hr = raw_SetCenter(CenterObj, x, y, z, keyPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5834)
inline HRESULT TGFrameworkSupport::_ICenterMarkAuto::GetCenter ( IDispatch * * CenterObj, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    HRESULT _hr = raw_GetCenter(CenterObj, x, y, z, keyPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5835)
inline HRESULT TGFrameworkSupport::_ICenterMarkAuto::SetCenterPoint ( double x, double y, double z ) {
    HRESULT _hr = raw_SetCenterPoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5836)
inline HRESULT TGFrameworkSupport::_ICenterMarkAuto::GetCenterPoint ( double * x, double * y, double * z ) {
    HRESULT _hr = raw_GetCenterPoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5837)
inline IDispatchPtr TGFrameworkSupport::_ICenterMarkAuto::GetPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Plane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5838)
inline IDispatchPtr TGFrameworkSupport::_ICenterMarkAuto::GetAxis ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Axis(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5839)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_ICenterMarkAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5840)
inline long TGFrameworkSupport::_ICenterMarkAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5841)
inline _bstr_t TGFrameworkSupport::_ICenterMarkAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5842)
inline IDispatchPtr TGFrameworkSupport::_ICenterMarkAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5843)
inline long TGFrameworkSupport::_ICenterMarkAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5844)
inline long TGFrameworkSupport::_ICenterMarkAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5845)
inline _bstr_t TGFrameworkSupport::_ICenterMarkAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5846)
inline IDispatchPtr TGFrameworkSupport::_ICenterMarkAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5847)
inline HRESULT TGFrameworkSupport::_ICenterMarkAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5848)
inline HRESULT TGFrameworkSupport::_ICenterMarkAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5849)
inline HRESULT TGFrameworkSupport::_ICenterMarkAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5850)
inline HRESULT TGFrameworkSupport::_ICenterMarkAuto::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    HRESULT _hr = raw_Move(XFrom, YFrom, XTo, YTo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5851)
inline HRESULT TGFrameworkSupport::_ICenterMarkAuto::Scale ( double Factor ) {
    HRESULT _hr = raw_Scale(Factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5852)
inline HRESULT TGFrameworkSupport::_ICenterMarkAuto::Rotate ( double Angle, double x, double y ) {
    HRESULT _hr = raw_Rotate(Angle, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5853)
inline HRESULT TGFrameworkSupport::_ICenterMarkAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5854)
inline IDispatchPtr TGFrameworkSupport::_ICenterMarkAuto::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Duplicate(XDistance, YDistance, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5855)
inline IDispatchPtr TGFrameworkSupport::_ICenterMarkAuto::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Mirror(x1, y1, x2, y2, BooleanCopyFlag, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5856)
inline HRESULT TGFrameworkSupport::_ICenterMarkAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5857)
inline HRESULT TGFrameworkSupport::_ICenterMarkAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5858)
inline HRESULT TGFrameworkSupport::_ICenterMarkAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5859)
inline HRESULT TGFrameworkSupport::_ICenterMarkAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5860)
inline HRESULT TGFrameworkSupport::_ICenterMarkAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5861)
inline long TGFrameworkSupport::_ICenterMarkAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5862)
inline HRESULT TGFrameworkSupport::_ICenterMarkAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5863)
inline HRESULT TGFrameworkSupport::_ICenterMarkAuto::SetKeyPoint ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetKeyPoint(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5864)
inline IDispatchPtr TGFrameworkSupport::_ICenterMarkAuto::GetConnectObject ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_ConnectObject(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5865)
inline VARIANT_BOOL TGFrameworkSupport::_ICenterMarkAuto::GetTwoPoint ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_TwoPoint(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5866)
inline HRESULT TGFrameworkSupport::_ICenterMarkAuto::SetArcCenter ( IDispatch * CenterObj, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    HRESULT _hr = raw_SetArcCenter(CenterObj, x, y, z, keyPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5867)
inline HRESULT TGFrameworkSupport::_ICenterMarkAuto::GetArcCenter ( IDispatch * * CenterObj, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    HRESULT _hr = raw_GetArcCenter(CenterObj, x, y, z, keyPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5868)
inline HRESULT TGFrameworkSupport::_ICenterMarkAuto::SetArcCenterPoint ( double x, double y, double z ) {
    HRESULT _hr = raw_SetArcCenterPoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5869)
inline HRESULT TGFrameworkSupport::_ICenterMarkAuto::GetArcCenterPoint ( double * x, double * y, double * z ) {
    HRESULT _hr = raw_GetArcCenterPoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5870)
inline IDispatchPtr TGFrameworkSupport::_ICenterMarkAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5871)
inline VARIANT_BOOL TGFrameworkSupport::_ICenterMarkAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5872)
inline double TGFrameworkSupport::_ICenterMarkAuto::GetTextScale ( ) {
    double _result = 0;
    HRESULT _hr = get_TextScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5873)
inline void TGFrameworkSupport::_ICenterMarkAuto::PutTextScale ( double pdAngle ) {
    HRESULT _hr = put_TextScale(pdAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5874)
inline void TGFrameworkSupport::_ICenterMarkAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5875)
inline _bstr_t TGFrameworkSupport::_ICenterMarkAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5876)
inline HRESULT TGFrameworkSupport::_ICenterMarkAuto::PromoteToCurrentVersion ( ) {
    HRESULT _hr = raw_PromoteToCurrentVersion();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5877)
inline void TGFrameworkSupport::_ICenterMarkAuto::PutPMIName ( _bstr_t Text ) {
    HRESULT _hr = put_PMIName(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5878)
inline _bstr_t TGFrameworkSupport::_ICenterMarkAuto::GetPMIName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PMIName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5879)
inline void TGFrameworkSupport::_ICenterMarkAuto::PutHidePMI ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_HidePMI(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5880)
inline VARIANT_BOOL TGFrameworkSupport::_ICenterMarkAuto::GetHidePMI ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HidePMI(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5881)
inline IDispatchPtr TGFrameworkSupport::_ICenterMarkAuto::GetPMIPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_PMIPlane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// dispinterface CenterLines wrapper method implementations
//

#pragma implementation_key(5882)
inline TGFramework::ApplicationPtr TGFrameworkSupport::CenterLines::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5883)
inline long TGFrameworkSupport::CenterLines::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5884)
inline IDispatchPtr TGFrameworkSupport::CenterLines::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5885)
inline TGFrameworkSupport::CenterLinePtr TGFrameworkSupport::CenterLines::Item ( const _variant_t & Index ) {
    struct CenterLine * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return CenterLinePtr(_result, false);
}

#pragma implementation_key(5886)
inline void TGFrameworkSupport::CenterLines::PutPlane ( IDispatch * _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(5887)
inline IDispatchPtr TGFrameworkSupport::CenterLines::GetPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5888)
inline void TGFrameworkSupport::CenterLines::PutStyle ( struct DimensionStyle * _arg1 ) {
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(5889)
inline TGFrameworkSupport::DimensionStylePtr TGFrameworkSupport::CenterLines::GetStyle ( ) {
    struct DimensionStyle * _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DimensionStylePtr(_result, false);
}

#pragma implementation_key(5890)
inline TGFrameworkSupport::CenterLinePtr TGFrameworkSupport::CenterLines::Add ( double x1, double y1, double z1, double x2, double y2, double z2 ) {
    struct CenterLine * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005", x1, y1, z1, x2, y2, z2);
    return CenterLinePtr(_result, false);
}

#pragma implementation_key(5891)
inline TGFrameworkSupport::CenterLinePtr TGFrameworkSupport::CenterLines::AddByStart ( IDispatch * StartObject, double x1, double y1, double z1, VARIANT_BOOL keyPoint, double x2, double y2, double z2 ) {
    struct CenterLine * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x000b\x0005\x0005\x0005", StartObject, x1, y1, z1, keyPoint, x2, y2, z2);
    return CenterLinePtr(_result, false);
}

#pragma implementation_key(5892)
inline TGFrameworkSupport::CenterLinePtr TGFrameworkSupport::CenterLines::AddByEnd ( IDispatch * EndObject, double x1, double y1, double z1, VARIANT_BOOL keyPoint1, double x2, double y2, double z2 ) {
    struct CenterLine * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x000b\x0005\x0005\x0005", EndObject, x1, y1, z1, keyPoint1, x2, y2, z2);
    return CenterLinePtr(_result, false);
}

#pragma implementation_key(5893)
inline TGFrameworkSupport::CenterLinePtr TGFrameworkSupport::CenterLines::AddByStartEnd ( IDispatch * StartObject, double x1, double y1, double z1, VARIANT_BOOL keyPoint1, IDispatch * EndObject, double x2, double y2, double z2, VARIANT_BOOL keyPoint2 ) {
    struct CenterLine * _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x000b\x0009\x0005\x0005\x0005\x000b", StartObject, x1, y1, z1, keyPoint1, EndObject, x2, y2, z2, keyPoint2);
    return CenterLinePtr(_result, false);
}

#pragma implementation_key(5894)
inline HRESULT TGFrameworkSupport::CenterLines::ClearPlane ( ) {
    return _com_dispatch_method(this, 0x78, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5895)
inline HRESULT TGFrameworkSupport::CenterLines::ClearStyle ( ) {
    return _com_dispatch_method(this, 0x79, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5896)
inline TGFrameworkSupport::CenterLinePtr TGFrameworkSupport::CenterLines::AddBetweenTwoParallelLines ( IDispatch * StartObject, IDispatch * EndObject ) {
    struct CenterLine * _result = 0;
    _com_dispatch_method(this, 0x8a, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009", StartObject, EndObject);
    return CenterLinePtr(_result, false);
}

#pragma implementation_key(5897)
inline TGFrameworkSupport::CenterLinePtr TGFrameworkSupport::CenterLines::AddCenterArcBy3Points ( IDispatch * StartObject, double Start_X, double Start_Y, double Start_Z, VARIANT_BOOL Start_Keypoint, IDispatch * EndObject, double End_X, double End_Y, double End_Z, VARIANT_BOOL End_Keypoint, IDispatch * CenterObject, double Center_X, double Center_Y, double Center_Z, VARIANT_BOOL Center_Keypoint ) {
    struct CenterLine * _result = 0;
    _com_dispatch_method(this, 0x8b, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x000b\x0009\x0005\x0005\x0005\x000b\x0009\x0005\x0005\x0005\x000b", StartObject, Start_X, Start_Y, Start_Z, Start_Keypoint, EndObject, End_X, End_Y, End_Z, End_Keypoint, CenterObject, Center_X, Center_Y, Center_Z, Center_Keypoint);
    return CenterLinePtr(_result, false);
}

#pragma implementation_key(5898)
inline TGFrameworkSupport::CenterLinePtr TGFrameworkSupport::CenterLines::AddCenterArcBy2Arcs ( IDispatch * StartObject, IDispatch * EndObject ) {
    struct CenterLine * _result = 0;
    _com_dispatch_method(this, 0x8c, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009", StartObject, EndObject);
    return CenterLinePtr(_result, false);
}

#pragma implementation_key(5899)
inline TGFrameworkSupport::CenterLinePtr TGFrameworkSupport::CenterLines::AddBetweenTwoLines ( IDispatch * StartObject, IDispatch * EndObject ) {
    struct CenterLine * _result = 0;
    _com_dispatch_method(this, 0x8d, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009", StartObject, EndObject);
    return CenterLinePtr(_result, false);
}

#pragma implementation_key(5900)
inline TGFrameworkSupport::AnnotInitDataPtr TGFrameworkSupport::CenterLines::GetAnnotInitData ( ) {
    struct AnnotInitData * _result = 0;
    _com_dispatch_method(this, 0x8e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AnnotInitDataPtr(_result, false);
}

#pragma implementation_key(5901)
inline TGFrameworkSupport::CenterLinePtr TGFrameworkSupport::CenterLines::AddCenterLine ( struct AnnotInitData * AnnotInitData, long bIsBy2Lines ) {
    struct CenterLine * _result = 0;
    _com_dispatch_method(this, 0x8f, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0003", AnnotInitData, bIsBy2Lines);
    return CenterLinePtr(_result, false);
}

#pragma implementation_key(5902)
inline TGFrameworkSupport::CenterLinePtr TGFrameworkSupport::CenterLines::AddCenterArc ( struct AnnotInitData * AnnotInitData ) {
    struct CenterLine * _result = 0;
    _com_dispatch_method(this, 0x90, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", AnnotInitData);
    return CenterLinePtr(_result, false);
}

#pragma implementation_key(5903)
inline TGFrameworkSupport::CenterLinePtr TGFrameworkSupport::CenterLines::AddCenterAxis ( struct AnnotInitData * AnnotInitData ) {
    struct CenterLine * _result = 0;
    _com_dispatch_method(this, 0x91, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", AnnotInitData);
    return CenterLinePtr(_result, false);
}

//
// dispinterface CenterLine wrapper method implementations
//

#pragma implementation_key(5904)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::CenterLine::GetStyle ( ) {
    struct DimStyle * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DimStylePtr(_result, false);
}

#pragma implementation_key(5905)
inline HRESULT TGFrameworkSupport::CenterLine::SetStart ( IDispatch * StartObj, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0005\x0005\x0005\x000b", StartObj, x, y, z, keyPoint);
}

#pragma implementation_key(5906)
inline HRESULT TGFrameworkSupport::CenterLine::GetStart ( IDispatch * * StartObj, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4005\x4005\x4005\x400b", StartObj, x, y, z, keyPoint);
}

#pragma implementation_key(5907)
inline HRESULT TGFrameworkSupport::CenterLine::SetStartPoint ( double x, double y, double z ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", x, y, z);
}

#pragma implementation_key(5908)
inline HRESULT TGFrameworkSupport::CenterLine::GetStartPoint ( double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005", x, y, z);
}

#pragma implementation_key(5909)
inline HRESULT TGFrameworkSupport::CenterLine::SetEnd ( IDispatch * ConnectObject, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0005\x0005\x0005\x000b", ConnectObject, x, y, z, keyPoint);
}

#pragma implementation_key(5910)
inline HRESULT TGFrameworkSupport::CenterLine::GetEnd ( IDispatch * * ConnectObject, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4005\x4005\x4005\x400b", ConnectObject, x, y, z, keyPoint);
}

#pragma implementation_key(5911)
inline HRESULT TGFrameworkSupport::CenterLine::SetEndPoint ( double x, double y, double z ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", x, y, z);
}

#pragma implementation_key(5912)
inline HRESULT TGFrameworkSupport::CenterLine::GetEndPoint ( double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005", x, y, z);
}

#pragma implementation_key(5913)
inline IDispatchPtr TGFrameworkSupport::CenterLine::GetPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5914)
inline enum TGFrameworkSupport::DimCenterlineTypeConstants TGFrameworkSupport::CenterLine::GetCenterLineType ( ) {
    enum DimCenterlineTypeConstants _result;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5915)
inline void TGFrameworkSupport::CenterLine::PutCenterLineType ( enum DimCenterlineTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(5916)
inline TGFramework::ApplicationPtr TGFrameworkSupport::CenterLine::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x2065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5917)
inline long TGFrameworkSupport::CenterLine::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2066, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5918)
inline _bstr_t TGFrameworkSupport::CenterLine::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x2067, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5919)
inline IDispatchPtr TGFrameworkSupport::CenterLine::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2068, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5920)
inline long TGFrameworkSupport::CenterLine::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2069, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5921)
inline long TGFrameworkSupport::CenterLine::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x206b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5922)
inline _bstr_t TGFrameworkSupport::CenterLine::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x206c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5923)
inline IDispatchPtr TGFrameworkSupport::CenterLine::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x206d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5924)
inline HRESULT TGFrameworkSupport::CenterLine::Copy ( ) {
    return _com_dispatch_method(this, 0x6001200a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5925)
inline HRESULT TGFrameworkSupport::CenterLine::Cut ( ) {
    return _com_dispatch_method(this, 0x6001200b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5926)
inline HRESULT TGFrameworkSupport::CenterLine::Delete ( ) {
    return _com_dispatch_method(this, 0x6001200c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5927)
inline HRESULT TGFrameworkSupport::CenterLine::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    return _com_dispatch_method(this, 0x6001200d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", XFrom, YFrom, XTo, YTo);
}

#pragma implementation_key(5928)
inline HRESULT TGFrameworkSupport::CenterLine::Scale ( double Factor ) {
    return _com_dispatch_method(this, 0x6001200e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Factor);
}

#pragma implementation_key(5929)
inline HRESULT TGFrameworkSupport::CenterLine::Rotate ( double Angle, double x, double y ) {
    return _com_dispatch_method(this, 0x6001200f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", Angle, x, y);
}

#pragma implementation_key(5930)
inline HRESULT TGFrameworkSupport::CenterLine::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60012011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(5931)
inline IDispatchPtr TGFrameworkSupport::CenterLine::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60012012, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &XDistance, &YDistance);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5932)
inline IDispatchPtr TGFrameworkSupport::CenterLine::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60012013, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x080c", x1, y1, x2, y2, &BooleanCopyFlag);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5933)
inline HRESULT TGFrameworkSupport::CenterLine::BringToFront ( ) {
    return _com_dispatch_method(this, 0x60012014, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5934)
inline HRESULT TGFrameworkSupport::CenterLine::BringForward ( ) {
    return _com_dispatch_method(this, 0x60012015, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5935)
inline HRESULT TGFrameworkSupport::CenterLine::SendToBack ( ) {
    return _com_dispatch_method(this, 0x60012016, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5936)
inline HRESULT TGFrameworkSupport::CenterLine::SendBackward ( ) {
    return _com_dispatch_method(this, 0x60012017, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5937)
inline HRESULT TGFrameworkSupport::CenterLine::Select ( ) {
    return _com_dispatch_method(this, 0x60012018, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(5938)
inline long TGFrameworkSupport::CenterLine::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5939)
inline HRESULT TGFrameworkSupport::CenterLine::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x6002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(5940)
inline HRESULT TGFrameworkSupport::CenterLine::SetKeyPoint ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x6003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(5941)
inline HRESULT TGFrameworkSupport::CenterLine::ConnectObjects ( IDispatch * * ConnectObject1, IDispatch * * ConnectObject2 ) {
    return _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4009", ConnectObject1, ConnectObject2);
}

#pragma implementation_key(5942)
inline void TGFrameworkSupport::CenterLine::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1074, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5943)
inline _bstr_t TGFrameworkSupport::CenterLine::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1074, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5944)
inline HRESULT TGFrameworkSupport::CenterLine::SetCenter ( IDispatch * CenterObj, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    return _com_dispatch_method(this, 0x1075, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0005\x0005\x0005\x000b", CenterObj, x, y, z, keyPoint);
}

#pragma implementation_key(5945)
inline HRESULT TGFrameworkSupport::CenterLine::GetCenter ( IDispatch * * CenterObj, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    return _com_dispatch_method(this, 0x1076, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4005\x4005\x4005\x400b", CenterObj, x, y, z, keyPoint);
}

#pragma implementation_key(5946)
inline HRESULT TGFrameworkSupport::CenterLine::SetCenterPoint ( double x, double y, double z ) {
    return _com_dispatch_method(this, 0x1077, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", x, y, z);
}

#pragma implementation_key(5947)
inline HRESULT TGFrameworkSupport::CenterLine::GetCenterPoint ( double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0x1078, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005", x, y, z);
}

#pragma implementation_key(5948)
inline void TGFrameworkSupport::CenterLine::PutPMIName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1079, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(5949)
inline _bstr_t TGFrameworkSupport::CenterLine::GetPMIName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1079, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5950)
inline void TGFrameworkSupport::CenterLine::PutHidePMI ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x107a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(5951)
inline VARIANT_BOOL TGFrameworkSupport::CenterLine::GetHidePMI ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x107a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5952)
inline IDispatchPtr TGFrameworkSupport::CenterLine::GetPMIPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x107b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5953)
inline IDispatchPtr TGFrameworkSupport::CenterLine::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5954)
inline VARIANT_BOOL TGFrameworkSupport::CenterLine::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _ICenterLinesAuto wrapper method implementations
//

#pragma implementation_key(5955)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_ICenterLinesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5956)
inline long TGFrameworkSupport::_ICenterLinesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5957)
inline IDispatchPtr TGFrameworkSupport::_ICenterLinesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5958)
inline TGFrameworkSupport::CenterLinePtr TGFrameworkSupport::_ICenterLinesAuto::Item ( const _variant_t & Index ) {
    struct CenterLine * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CenterLinePtr(_result, false);
}

#pragma implementation_key(5959)
inline IUnknownPtr TGFrameworkSupport::_ICenterLinesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(5960)
inline void TGFrameworkSupport::_ICenterLinesAuto::PutPlane ( IDispatch * Plane ) {
    HRESULT _hr = put_Plane(Plane);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5961)
inline IDispatchPtr TGFrameworkSupport::_ICenterLinesAuto::GetPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Plane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5962)
inline void TGFrameworkSupport::_ICenterLinesAuto::PutStyle ( struct DimensionStyle * Style ) {
    HRESULT _hr = put_Style(Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5963)
inline TGFrameworkSupport::DimensionStylePtr TGFrameworkSupport::_ICenterLinesAuto::GetStyle ( ) {
    struct DimensionStyle * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionStylePtr(_result, false);
}

#pragma implementation_key(5964)
inline TGFrameworkSupport::CenterLinePtr TGFrameworkSupport::_ICenterLinesAuto::Add ( double x1, double y1, double z1, double x2, double y2, double z2 ) {
    struct CenterLine * _result = 0;
    HRESULT _hr = raw_Add(x1, y1, z1, x2, y2, z2, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CenterLinePtr(_result, false);
}

#pragma implementation_key(5965)
inline TGFrameworkSupport::CenterLinePtr TGFrameworkSupport::_ICenterLinesAuto::AddByStart ( IDispatch * StartObject, double x1, double y1, double z1, VARIANT_BOOL keyPoint, double x2, double y2, double z2 ) {
    struct CenterLine * _result = 0;
    HRESULT _hr = raw_AddByStart(StartObject, x1, y1, z1, keyPoint, x2, y2, z2, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CenterLinePtr(_result, false);
}

#pragma implementation_key(5966)
inline TGFrameworkSupport::CenterLinePtr TGFrameworkSupport::_ICenterLinesAuto::AddByEnd ( IDispatch * EndObject, double x1, double y1, double z1, VARIANT_BOOL keyPoint1, double x2, double y2, double z2 ) {
    struct CenterLine * _result = 0;
    HRESULT _hr = raw_AddByEnd(EndObject, x1, y1, z1, keyPoint1, x2, y2, z2, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CenterLinePtr(_result, false);
}

#pragma implementation_key(5967)
inline TGFrameworkSupport::CenterLinePtr TGFrameworkSupport::_ICenterLinesAuto::AddByStartEnd ( IDispatch * StartObject, double x1, double y1, double z1, VARIANT_BOOL keyPoint1, IDispatch * EndObject, double x2, double y2, double z2, VARIANT_BOOL keyPoint2 ) {
    struct CenterLine * _result = 0;
    HRESULT _hr = raw_AddByStartEnd(StartObject, x1, y1, z1, keyPoint1, EndObject, x2, y2, z2, keyPoint2, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CenterLinePtr(_result, false);
}

#pragma implementation_key(5968)
inline HRESULT TGFrameworkSupport::_ICenterLinesAuto::ClearPlane ( ) {
    HRESULT _hr = raw_ClearPlane();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5969)
inline HRESULT TGFrameworkSupport::_ICenterLinesAuto::ClearStyle ( ) {
    HRESULT _hr = raw_ClearStyle();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5970)
inline TGFrameworkSupport::CenterLinePtr TGFrameworkSupport::_ICenterLinesAuto::AddBetweenTwoParallelLines ( IDispatch * StartObject, IDispatch * EndObject ) {
    struct CenterLine * _result = 0;
    HRESULT _hr = raw_AddBetweenTwoParallelLines(StartObject, EndObject, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CenterLinePtr(_result, false);
}

#pragma implementation_key(5971)
inline TGFrameworkSupport::CenterLinePtr TGFrameworkSupport::_ICenterLinesAuto::AddCenterArcBy3Points ( IDispatch * StartObject, double Start_X, double Start_Y, double Start_Z, VARIANT_BOOL Start_Keypoint, IDispatch * EndObject, double End_X, double End_Y, double End_Z, VARIANT_BOOL End_Keypoint, IDispatch * CenterObject, double Center_X, double Center_Y, double Center_Z, VARIANT_BOOL Center_Keypoint ) {
    struct CenterLine * _result = 0;
    HRESULT _hr = raw_AddCenterArcBy3Points(StartObject, Start_X, Start_Y, Start_Z, Start_Keypoint, EndObject, End_X, End_Y, End_Z, End_Keypoint, CenterObject, Center_X, Center_Y, Center_Z, Center_Keypoint, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CenterLinePtr(_result, false);
}

#pragma implementation_key(5972)
inline TGFrameworkSupport::CenterLinePtr TGFrameworkSupport::_ICenterLinesAuto::AddCenterArcBy2Arcs ( IDispatch * StartObject, IDispatch * EndObject ) {
    struct CenterLine * _result = 0;
    HRESULT _hr = raw_AddCenterArcBy2Arcs(StartObject, EndObject, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CenterLinePtr(_result, false);
}

#pragma implementation_key(5973)
inline TGFrameworkSupport::CenterLinePtr TGFrameworkSupport::_ICenterLinesAuto::AddBetweenTwoLines ( IDispatch * StartObject, IDispatch * EndObject ) {
    struct CenterLine * _result = 0;
    HRESULT _hr = raw_AddBetweenTwoLines(StartObject, EndObject, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CenterLinePtr(_result, false);
}

#pragma implementation_key(5974)
inline TGFrameworkSupport::AnnotInitDataPtr TGFrameworkSupport::_ICenterLinesAuto::GetAnnotInitData ( ) {
    struct AnnotInitData * _result = 0;
    HRESULT _hr = get_AnnotInitData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AnnotInitDataPtr(_result, false);
}

#pragma implementation_key(5975)
inline TGFrameworkSupport::CenterLinePtr TGFrameworkSupport::_ICenterLinesAuto::AddCenterLine ( struct AnnotInitData * AnnotInitData, long bIsBy2Lines ) {
    struct CenterLine * _result = 0;
    HRESULT _hr = raw_AddCenterLine(AnnotInitData, bIsBy2Lines, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CenterLinePtr(_result, false);
}

#pragma implementation_key(5976)
inline TGFrameworkSupport::CenterLinePtr TGFrameworkSupport::_ICenterLinesAuto::AddCenterArc ( struct AnnotInitData * AnnotInitData ) {
    struct CenterLine * _result = 0;
    HRESULT _hr = raw_AddCenterArc(AnnotInitData, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CenterLinePtr(_result, false);
}

#pragma implementation_key(5977)
inline TGFrameworkSupport::CenterLinePtr TGFrameworkSupport::_ICenterLinesAuto::AddCenterAxis ( struct AnnotInitData * AnnotInitData ) {
    struct CenterLine * _result = 0;
    HRESULT _hr = raw_AddCenterAxis(AnnotInitData, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CenterLinePtr(_result, false);
}

//
// interface _ICenterLineAuto wrapper method implementations
//

#pragma implementation_key(5978)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::_ICenterLineAuto::GetStyle ( ) {
    struct DimStyle * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimStylePtr(_result, false);
}

#pragma implementation_key(5979)
inline HRESULT TGFrameworkSupport::_ICenterLineAuto::SetStart ( IDispatch * StartObj, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    HRESULT _hr = raw_SetStart(StartObj, x, y, z, keyPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5980)
inline HRESULT TGFrameworkSupport::_ICenterLineAuto::GetStart ( IDispatch * * StartObj, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    HRESULT _hr = raw_GetStart(StartObj, x, y, z, keyPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5981)
inline HRESULT TGFrameworkSupport::_ICenterLineAuto::SetStartPoint ( double x, double y, double z ) {
    HRESULT _hr = raw_SetStartPoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5982)
inline HRESULT TGFrameworkSupport::_ICenterLineAuto::GetStartPoint ( double * x, double * y, double * z ) {
    HRESULT _hr = raw_GetStartPoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5983)
inline HRESULT TGFrameworkSupport::_ICenterLineAuto::SetEnd ( IDispatch * ConnectObject, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    HRESULT _hr = raw_SetEnd(ConnectObject, x, y, z, keyPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5984)
inline HRESULT TGFrameworkSupport::_ICenterLineAuto::GetEnd ( IDispatch * * ConnectObject, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    HRESULT _hr = raw_GetEnd(ConnectObject, x, y, z, keyPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5985)
inline HRESULT TGFrameworkSupport::_ICenterLineAuto::SetEndPoint ( double x, double y, double z ) {
    HRESULT _hr = raw_SetEndPoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5986)
inline HRESULT TGFrameworkSupport::_ICenterLineAuto::GetEndPoint ( double * x, double * y, double * z ) {
    HRESULT _hr = raw_GetEndPoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5987)
inline IDispatchPtr TGFrameworkSupport::_ICenterLineAuto::GetPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Plane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5988)
inline enum TGFrameworkSupport::DimCenterlineTypeConstants TGFrameworkSupport::_ICenterLineAuto::GetCenterLineType ( ) {
    enum DimCenterlineTypeConstants _result;
    HRESULT _hr = get_CenterLineType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5989)
inline void TGFrameworkSupport::_ICenterLineAuto::PutCenterLineType ( enum DimCenterlineTypeConstants Size ) {
    HRESULT _hr = put_CenterLineType(Size);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5990)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_ICenterLineAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(5991)
inline long TGFrameworkSupport::_ICenterLineAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5992)
inline _bstr_t TGFrameworkSupport::_ICenterLineAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5993)
inline IDispatchPtr TGFrameworkSupport::_ICenterLineAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5994)
inline long TGFrameworkSupport::_ICenterLineAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5995)
inline long TGFrameworkSupport::_ICenterLineAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(5996)
inline _bstr_t TGFrameworkSupport::_ICenterLineAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(5997)
inline IDispatchPtr TGFrameworkSupport::_ICenterLineAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(5998)
inline HRESULT TGFrameworkSupport::_ICenterLineAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(5999)
inline HRESULT TGFrameworkSupport::_ICenterLineAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6000)
inline HRESULT TGFrameworkSupport::_ICenterLineAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6001)
inline HRESULT TGFrameworkSupport::_ICenterLineAuto::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    HRESULT _hr = raw_Move(XFrom, YFrom, XTo, YTo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6002)
inline HRESULT TGFrameworkSupport::_ICenterLineAuto::Scale ( double Factor ) {
    HRESULT _hr = raw_Scale(Factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6003)
inline HRESULT TGFrameworkSupport::_ICenterLineAuto::Rotate ( double Angle, double x, double y ) {
    HRESULT _hr = raw_Rotate(Angle, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6004)
inline HRESULT TGFrameworkSupport::_ICenterLineAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6005)
inline IDispatchPtr TGFrameworkSupport::_ICenterLineAuto::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Duplicate(XDistance, YDistance, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6006)
inline IDispatchPtr TGFrameworkSupport::_ICenterLineAuto::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Mirror(x1, y1, x2, y2, BooleanCopyFlag, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6007)
inline HRESULT TGFrameworkSupport::_ICenterLineAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6008)
inline HRESULT TGFrameworkSupport::_ICenterLineAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6009)
inline HRESULT TGFrameworkSupport::_ICenterLineAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6010)
inline HRESULT TGFrameworkSupport::_ICenterLineAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6011)
inline HRESULT TGFrameworkSupport::_ICenterLineAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6012)
inline long TGFrameworkSupport::_ICenterLineAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6013)
inline HRESULT TGFrameworkSupport::_ICenterLineAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6014)
inline HRESULT TGFrameworkSupport::_ICenterLineAuto::SetKeyPoint ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetKeyPoint(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6015)
inline HRESULT TGFrameworkSupport::_ICenterLineAuto::ConnectObjects ( IDispatch * * ConnectObject1, IDispatch * * ConnectObject2 ) {
    HRESULT _hr = raw_ConnectObjects(ConnectObject1, ConnectObject2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6016)
inline void TGFrameworkSupport::_ICenterLineAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6017)
inline _bstr_t TGFrameworkSupport::_ICenterLineAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6018)
inline HRESULT TGFrameworkSupport::_ICenterLineAuto::SetCenter ( IDispatch * CenterObj, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    HRESULT _hr = raw_SetCenter(CenterObj, x, y, z, keyPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6019)
inline HRESULT TGFrameworkSupport::_ICenterLineAuto::GetCenter ( IDispatch * * CenterObj, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    HRESULT _hr = raw_GetCenter(CenterObj, x, y, z, keyPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6020)
inline HRESULT TGFrameworkSupport::_ICenterLineAuto::SetCenterPoint ( double x, double y, double z ) {
    HRESULT _hr = raw_SetCenterPoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6021)
inline HRESULT TGFrameworkSupport::_ICenterLineAuto::GetCenterPoint ( double * x, double * y, double * z ) {
    HRESULT _hr = raw_GetCenterPoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6022)
inline void TGFrameworkSupport::_ICenterLineAuto::PutPMIName ( _bstr_t Text ) {
    HRESULT _hr = put_PMIName(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6023)
inline _bstr_t TGFrameworkSupport::_ICenterLineAuto::GetPMIName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PMIName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6024)
inline void TGFrameworkSupport::_ICenterLineAuto::PutHidePMI ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_HidePMI(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6025)
inline VARIANT_BOOL TGFrameworkSupport::_ICenterLineAuto::GetHidePMI ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HidePMI(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6026)
inline IDispatchPtr TGFrameworkSupport::_ICenterLineAuto::GetPMIPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_PMIPlane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6027)
inline IDispatchPtr TGFrameworkSupport::_ICenterLineAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6028)
inline VARIANT_BOOL TGFrameworkSupport::_ICenterLineAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface DatumTargets wrapper method implementations
//

#pragma implementation_key(6029)
inline TGFramework::ApplicationPtr TGFrameworkSupport::DatumTargets::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(6030)
inline long TGFrameworkSupport::DatumTargets::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6031)
inline IDispatchPtr TGFrameworkSupport::DatumTargets::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6032)
inline TGFrameworkSupport::DatumTargetPtr TGFrameworkSupport::DatumTargets::Item ( const _variant_t & Index ) {
    struct DatumTarget * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return DatumTargetPtr(_result, false);
}

#pragma implementation_key(6033)
inline void TGFrameworkSupport::DatumTargets::PutPlane ( IDispatch * _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(6034)
inline IDispatchPtr TGFrameworkSupport::DatumTargets::GetPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6035)
inline void TGFrameworkSupport::DatumTargets::PutStyle ( struct DimensionStyle * _arg1 ) {
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(6036)
inline TGFrameworkSupport::DimensionStylePtr TGFrameworkSupport::DatumTargets::GetStyle ( ) {
    struct DimensionStyle * _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DimensionStylePtr(_result, false);
}

#pragma implementation_key(6037)
inline TGFrameworkSupport::DatumTargetPtr TGFrameworkSupport::DatumTargets::Add ( double x1, double y1, double z1 ) {
    struct DatumTarget * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005", x1, y1, z1);
    return DatumTargetPtr(_result, false);
}

#pragma implementation_key(6038)
inline TGFrameworkSupport::DatumTargetPtr TGFrameworkSupport::DatumTargets::AddByTerminator ( IDispatch * TerminatorObject, double x1, double y1, double z1, VARIANT_BOOL keyPoint1 ) {
    struct DatumTarget * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x000b", TerminatorObject, x1, y1, z1, keyPoint1);
    return DatumTargetPtr(_result, false);
}

#pragma implementation_key(6039)
inline HRESULT TGFrameworkSupport::DatumTargets::ClearPlane ( ) {
    return _com_dispatch_method(this, 0x78, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6040)
inline HRESULT TGFrameworkSupport::DatumTargets::ClearStyle ( ) {
    return _com_dispatch_method(this, 0x79, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6041)
inline TGFrameworkSupport::AnnotInitDataPtr TGFrameworkSupport::DatumTargets::GetAnnotInitData ( ) {
    struct AnnotInitData * _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AnnotInitDataPtr(_result, false);
}

#pragma implementation_key(6042)
inline TGFrameworkSupport::DatumTargetPtr TGFrameworkSupport::DatumTargets::AddDatumTarget ( struct AnnotInitData * AnnotInitData ) {
    struct DatumTarget * _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", AnnotInitData);
    return DatumTargetPtr(_result, false);
}

//
// dispinterface DatumTarget wrapper method implementations
//

#pragma implementation_key(6043)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::DatumTarget::GetStyle ( ) {
    struct DimStyle * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DimStylePtr(_result, false);
}

#pragma implementation_key(6044)
inline _bstr_t TGFrameworkSupport::DatumTarget::GetDatumReference ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6045)
inline void TGFrameworkSupport::DatumTarget::PutDatumReference ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(6046)
inline double TGFrameworkSupport::DatumTarget::GetDatumAreaSize ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6047)
inline void TGFrameworkSupport::DatumTarget::PutDatumAreaSize ( double _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(6048)
inline HRESULT TGFrameworkSupport::DatumTarget::SetTerminator ( IDispatch * TerminatorObj, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    return _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0005\x0005\x0005\x000b", TerminatorObj, x, y, z, keyPoint);
}

#pragma implementation_key(6049)
inline HRESULT TGFrameworkSupport::DatumTarget::GetTerminator ( IDispatch * * TerminatorObj, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    return _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4005\x4005\x4005\x400b", TerminatorObj, x, y, z, keyPoint);
}

#pragma implementation_key(6050)
inline HRESULT TGFrameworkSupport::DatumTarget::SetFreeSpacePoint ( double x, double y, double z ) {
    return _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", x, y, z);
}

#pragma implementation_key(6051)
inline HRESULT TGFrameworkSupport::DatumTarget::GetFreeSpacePoint ( double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005", x, y, z);
}

#pragma implementation_key(6052)
inline enum TGFrameworkSupport::DimDatumTargetLeaderTypeConstants TGFrameworkSupport::DatumTarget::GetLeaderType ( ) {
    enum DimDatumTargetLeaderTypeConstants _result;
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6053)
inline void TGFrameworkSupport::DatumTarget::PutLeaderType ( enum DimDatumTargetLeaderTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(6054)
inline VARIANT_BOOL TGFrameworkSupport::DatumTarget::GetDatumAreaSizeDisplay ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6055)
inline void TGFrameworkSupport::DatumTarget::PutDatumAreaSizeDisplay ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(6056)
inline TGFramework::ApplicationPtr TGFrameworkSupport::DatumTarget::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(6057)
inline long TGFrameworkSupport::DatumTarget::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1066, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6058)
inline _bstr_t TGFrameworkSupport::DatumTarget::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1067, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6059)
inline IDispatchPtr TGFrameworkSupport::DatumTarget::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1068, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6060)
inline long TGFrameworkSupport::DatumTarget::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1069, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6061)
inline long TGFrameworkSupport::DatumTarget::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x106b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6062)
inline _bstr_t TGFrameworkSupport::DatumTarget::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x106c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6063)
inline IDispatchPtr TGFrameworkSupport::DatumTarget::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x106d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6064)
inline HRESULT TGFrameworkSupport::DatumTarget::Copy ( ) {
    return _com_dispatch_method(this, 0x6001100a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6065)
inline HRESULT TGFrameworkSupport::DatumTarget::Cut ( ) {
    return _com_dispatch_method(this, 0x6001100b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6066)
inline HRESULT TGFrameworkSupport::DatumTarget::Delete ( ) {
    return _com_dispatch_method(this, 0x6001100c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6067)
inline HRESULT TGFrameworkSupport::DatumTarget::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    return _com_dispatch_method(this, 0x6001100d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", XFrom, YFrom, XTo, YTo);
}

#pragma implementation_key(6068)
inline HRESULT TGFrameworkSupport::DatumTarget::Scale ( double Factor ) {
    return _com_dispatch_method(this, 0x6001100e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Factor);
}

#pragma implementation_key(6069)
inline HRESULT TGFrameworkSupport::DatumTarget::Rotate ( double Angle, double x, double y ) {
    return _com_dispatch_method(this, 0x6001100f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", Angle, x, y);
}

#pragma implementation_key(6070)
inline HRESULT TGFrameworkSupport::DatumTarget::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60011011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(6071)
inline IDispatchPtr TGFrameworkSupport::DatumTarget::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60011012, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &XDistance, &YDistance);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6072)
inline IDispatchPtr TGFrameworkSupport::DatumTarget::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60011013, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x080c", x1, y1, x2, y2, &BooleanCopyFlag);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6073)
inline HRESULT TGFrameworkSupport::DatumTarget::BringToFront ( ) {
    return _com_dispatch_method(this, 0x60011014, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6074)
inline HRESULT TGFrameworkSupport::DatumTarget::BringForward ( ) {
    return _com_dispatch_method(this, 0x60011015, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6075)
inline HRESULT TGFrameworkSupport::DatumTarget::SendToBack ( ) {
    return _com_dispatch_method(this, 0x60011016, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6076)
inline HRESULT TGFrameworkSupport::DatumTarget::SendBackward ( ) {
    return _com_dispatch_method(this, 0x60011017, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6077)
inline HRESULT TGFrameworkSupport::DatumTarget::Select ( ) {
    return _com_dispatch_method(this, 0x60011018, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6078)
inline double TGFrameworkSupport::DatumTarget::GetBreakLineDistance ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3004, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6079)
inline void TGFrameworkSupport::DatumTarget::PutBreakLineDistance ( double _arg1 ) {
    _com_dispatch_method(this, 0x3004, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(6080)
inline VARIANT_BOOL TGFrameworkSupport::DatumTarget::GetBreakLine ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3005, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6081)
inline void TGFrameworkSupport::DatumTarget::PutBreakLine ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3005, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(6082)
inline VARIANT_BOOL TGFrameworkSupport::DatumTarget::GetBreakLineDirection ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3006, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6083)
inline void TGFrameworkSupport::DatumTarget::PutBreakLineDirection ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3006, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(6084)
inline VARIANT_BOOL TGFrameworkSupport::DatumTarget::GetLeader ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3007, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6085)
inline void TGFrameworkSupport::DatumTarget::PutLeader ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3007, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(6086)
inline long TGFrameworkSupport::DatumTarget::GetVertexCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3003, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6087)
inline HRESULT TGFrameworkSupport::DatumTarget::GetVertices ( long * VertexCount, SAFEARRAY * * Vertices ) {
    return _com_dispatch_method(this, 0x60013009, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6005", VertexCount, Vertices);
}

#pragma implementation_key(6088)
inline HRESULT TGFrameworkSupport::DatumTarget::SetVertices ( long VertexCount, SAFEARRAY * * Vertices ) {
    return _com_dispatch_method(this, 0x6001300a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6005", VertexCount, Vertices);
}

#pragma implementation_key(6089)
inline HRESULT TGFrameworkSupport::DatumTarget::GetVertex ( long Index, double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0x6001300b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005", Index, x, y, z);
}

#pragma implementation_key(6090)
inline HRESULT TGFrameworkSupport::DatumTarget::SetVertex ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x6001300c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(6091)
inline HRESULT TGFrameworkSupport::DatumTarget::InsertVertex ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x6001300d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(6092)
inline HRESULT TGFrameworkSupport::DatumTarget::AddVertex ( double x, double y, double z ) {
    return _com_dispatch_method(this, 0x6001300e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", x, y, z);
}

#pragma implementation_key(6093)
inline HRESULT TGFrameworkSupport::DatumTarget::RemoveVertex ( long Index ) {
    return _com_dispatch_method(this, 0x6001300f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Index);
}

#pragma implementation_key(6094)
inline long TGFrameworkSupport::DatumTarget::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6095)
inline HRESULT TGFrameworkSupport::DatumTarget::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x4002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(6096)
inline HRESULT TGFrameworkSupport::DatumTarget::SetKeyPoint ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x4003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(6097)
inline IDispatchPtr TGFrameworkSupport::DatumTarget::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6098)
inline VARIANT_BOOL TGFrameworkSupport::DatumTarget::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(6099)
inline double TGFrameworkSupport::DatumTarget::GetTextScale ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3009, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6100)
inline void TGFrameworkSupport::DatumTarget::PutTextScale ( double _arg1 ) {
    _com_dispatch_method(this, 0x3009, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(6101)
inline void TGFrameworkSupport::DatumTarget::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1070, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(6102)
inline _bstr_t TGFrameworkSupport::DatumTarget::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1070, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6103)
inline IDispatchPtr TGFrameworkSupport::DatumTarget::GetPMIPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1071, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6104)
inline double TGFrameworkSupport::DatumTarget::GetPMITrackDistance ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1072, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6105)
inline void TGFrameworkSupport::DatumTarget::PutPMITrackDistance ( double _arg1 ) {
    _com_dispatch_method(this, 0x1072, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(6106)
inline void TGFrameworkSupport::DatumTarget::PutHidePMI ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1073, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(6107)
inline VARIANT_BOOL TGFrameworkSupport::DatumTarget::GetHidePMI ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1073, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6108)
inline TGFrameworkSupport::DisplayDataPtr TGFrameworkSupport::DatumTarget::GetDisplayData ( ) {
    struct DisplayData * _result = 0;
    _com_dispatch_method(this, 0x1074, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return DisplayDataPtr(_result, false);
}

#pragma implementation_key(6109)
inline enum TGFrameworkSupport::DimDatumTargetTypeConstants TGFrameworkSupport::DatumTarget::GetDatumTargetType ( ) {
    enum DimDatumTargetTypeConstants _result;
    _com_dispatch_method(this, 0x1075, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6110)
inline void TGFrameworkSupport::DatumTarget::PutDatumTargetType ( enum DimDatumTargetTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x1075, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(6111)
inline HRESULT TGFrameworkSupport::DatumTarget::PromoteToCurrentVersion ( ) {
    return _com_dispatch_method(this, 0x1076, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6112)
inline HRESULT TGFrameworkSupport::DatumTarget::SetAlignmentShape ( IDispatch * AlignmentShapeObj, double x, double y ) {
    return _com_dispatch_method(this, 0x1077, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0005\x0005", AlignmentShapeObj, x, y);
}

#pragma implementation_key(6113)
inline HRESULT TGFrameworkSupport::DatumTarget::GetAlignmentShape ( IDispatch * * AlignmentShapeObj, double * x, double * y ) {
    return _com_dispatch_method(this, 0x1078, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4005\x4005", AlignmentShapeObj, x, y);
}

#pragma implementation_key(6114)
inline void TGFrameworkSupport::DatumTarget::PutPMIName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1079, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(6115)
inline _bstr_t TGFrameworkSupport::DatumTarget::GetPMIName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1079, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6116)
inline HRESULT TGFrameworkSupport::DatumTarget::TransformToModelCoordinates ( double InputX, double InputY, double InputZ, double * ModelX, double * ModelY, double * ModelZ ) {
    return _com_dispatch_method(this, 0x107a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x4005\x4005\x4005", InputX, InputY, InputZ, ModelX, ModelY, ModelZ);
}

#pragma implementation_key(6117)
inline VARIANT_BOOL TGFrameworkSupport::DatumTarget::GetIsTerminatorAttachedToEntity ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x107b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6118)
inline HRESULT TGFrameworkSupport::DatumTarget::GetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    return _com_dispatch_method(this, 0x107d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009", ReferencedGeometries);
}

#pragma implementation_key(6119)
inline HRESULT TGFrameworkSupport::DatumTarget::SetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    return _com_dispatch_method(this, 0x107c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009", ReferencedGeometries);
}

#pragma implementation_key(6120)
inline _bstr_t TGFrameworkSupport::DatumTarget::GetDatumNumber ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x107e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6121)
inline void TGFrameworkSupport::DatumTarget::PutDatumNumber ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x107e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

//
// interface _IDatumTargetsAuto wrapper method implementations
//

#pragma implementation_key(6122)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IDatumTargetsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(6123)
inline long TGFrameworkSupport::_IDatumTargetsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6124)
inline IDispatchPtr TGFrameworkSupport::_IDatumTargetsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6125)
inline TGFrameworkSupport::DatumTargetPtr TGFrameworkSupport::_IDatumTargetsAuto::Item ( const _variant_t & Index ) {
    struct DatumTarget * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DatumTargetPtr(_result, false);
}

#pragma implementation_key(6126)
inline IUnknownPtr TGFrameworkSupport::_IDatumTargetsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(6127)
inline void TGFrameworkSupport::_IDatumTargetsAuto::PutPlane ( IDispatch * Plane ) {
    HRESULT _hr = put_Plane(Plane);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6128)
inline IDispatchPtr TGFrameworkSupport::_IDatumTargetsAuto::GetPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Plane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6129)
inline void TGFrameworkSupport::_IDatumTargetsAuto::PutStyle ( struct DimensionStyle * Style ) {
    HRESULT _hr = put_Style(Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6130)
inline TGFrameworkSupport::DimensionStylePtr TGFrameworkSupport::_IDatumTargetsAuto::GetStyle ( ) {
    struct DimensionStyle * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionStylePtr(_result, false);
}

#pragma implementation_key(6131)
inline TGFrameworkSupport::DatumTargetPtr TGFrameworkSupport::_IDatumTargetsAuto::Add ( double x1, double y1, double z1 ) {
    struct DatumTarget * _result = 0;
    HRESULT _hr = raw_Add(x1, y1, z1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DatumTargetPtr(_result, false);
}

#pragma implementation_key(6132)
inline TGFrameworkSupport::DatumTargetPtr TGFrameworkSupport::_IDatumTargetsAuto::AddByTerminator ( IDispatch * TerminatorObject, double x1, double y1, double z1, VARIANT_BOOL keyPoint1 ) {
    struct DatumTarget * _result = 0;
    HRESULT _hr = raw_AddByTerminator(TerminatorObject, x1, y1, z1, keyPoint1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DatumTargetPtr(_result, false);
}

#pragma implementation_key(6133)
inline HRESULT TGFrameworkSupport::_IDatumTargetsAuto::ClearPlane ( ) {
    HRESULT _hr = raw_ClearPlane();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6134)
inline HRESULT TGFrameworkSupport::_IDatumTargetsAuto::ClearStyle ( ) {
    HRESULT _hr = raw_ClearStyle();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6135)
inline TGFrameworkSupport::AnnotInitDataPtr TGFrameworkSupport::_IDatumTargetsAuto::GetAnnotInitData ( ) {
    struct AnnotInitData * _result = 0;
    HRESULT _hr = get_AnnotInitData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AnnotInitDataPtr(_result, false);
}

#pragma implementation_key(6136)
inline TGFrameworkSupport::DatumTargetPtr TGFrameworkSupport::_IDatumTargetsAuto::AddDatumTarget ( struct AnnotInitData * AnnotInitData ) {
    struct DatumTarget * _result = 0;
    HRESULT _hr = raw_AddDatumTarget(AnnotInitData, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DatumTargetPtr(_result, false);
}

//
// interface _IDatumTargetAuto wrapper method implementations
//

#pragma implementation_key(6137)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::_IDatumTargetAuto::GetStyle ( ) {
    struct DimStyle * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimStylePtr(_result, false);
}

#pragma implementation_key(6138)
inline _bstr_t TGFrameworkSupport::_IDatumTargetAuto::GetDatumReference ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DatumReference(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6139)
inline void TGFrameworkSupport::_IDatumTargetAuto::PutDatumReference ( _bstr_t Text ) {
    HRESULT _hr = put_DatumReference(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6140)
inline double TGFrameworkSupport::_IDatumTargetAuto::GetDatumAreaSize ( ) {
    double _result = 0;
    HRESULT _hr = get_DatumAreaSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6141)
inline void TGFrameworkSupport::_IDatumTargetAuto::PutDatumAreaSize ( double Text ) {
    HRESULT _hr = put_DatumAreaSize(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6142)
inline HRESULT TGFrameworkSupport::_IDatumTargetAuto::SetTerminator ( IDispatch * TerminatorObj, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    HRESULT _hr = raw_SetTerminator(TerminatorObj, x, y, z, keyPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6143)
inline HRESULT TGFrameworkSupport::_IDatumTargetAuto::GetTerminator ( IDispatch * * TerminatorObj, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    HRESULT _hr = raw_GetTerminator(TerminatorObj, x, y, z, keyPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6144)
inline HRESULT TGFrameworkSupport::_IDatumTargetAuto::SetFreeSpacePoint ( double x, double y, double z ) {
    HRESULT _hr = raw_SetFreeSpacePoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6145)
inline HRESULT TGFrameworkSupport::_IDatumTargetAuto::GetFreeSpacePoint ( double * x, double * y, double * z ) {
    HRESULT _hr = raw_GetFreeSpacePoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6146)
inline enum TGFrameworkSupport::DimDatumTargetLeaderTypeConstants TGFrameworkSupport::_IDatumTargetAuto::GetLeaderType ( ) {
    enum DimDatumTargetLeaderTypeConstants _result;
    HRESULT _hr = get_LeaderType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6147)
inline void TGFrameworkSupport::_IDatumTargetAuto::PutLeaderType ( enum DimDatumTargetLeaderTypeConstants Size ) {
    HRESULT _hr = put_LeaderType(Size);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6148)
inline VARIANT_BOOL TGFrameworkSupport::_IDatumTargetAuto::GetDatumAreaSizeDisplay ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_DatumAreaSizeDisplay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6149)
inline void TGFrameworkSupport::_IDatumTargetAuto::PutDatumAreaSizeDisplay ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_DatumAreaSizeDisplay(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6150)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IDatumTargetAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(6151)
inline long TGFrameworkSupport::_IDatumTargetAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6152)
inline _bstr_t TGFrameworkSupport::_IDatumTargetAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6153)
inline IDispatchPtr TGFrameworkSupport::_IDatumTargetAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6154)
inline long TGFrameworkSupport::_IDatumTargetAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6155)
inline long TGFrameworkSupport::_IDatumTargetAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6156)
inline _bstr_t TGFrameworkSupport::_IDatumTargetAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6157)
inline IDispatchPtr TGFrameworkSupport::_IDatumTargetAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6158)
inline HRESULT TGFrameworkSupport::_IDatumTargetAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6159)
inline HRESULT TGFrameworkSupport::_IDatumTargetAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6160)
inline HRESULT TGFrameworkSupport::_IDatumTargetAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6161)
inline HRESULT TGFrameworkSupport::_IDatumTargetAuto::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    HRESULT _hr = raw_Move(XFrom, YFrom, XTo, YTo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6162)
inline HRESULT TGFrameworkSupport::_IDatumTargetAuto::Scale ( double Factor ) {
    HRESULT _hr = raw_Scale(Factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6163)
inline HRESULT TGFrameworkSupport::_IDatumTargetAuto::Rotate ( double Angle, double x, double y ) {
    HRESULT _hr = raw_Rotate(Angle, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6164)
inline HRESULT TGFrameworkSupport::_IDatumTargetAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6165)
inline IDispatchPtr TGFrameworkSupport::_IDatumTargetAuto::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Duplicate(XDistance, YDistance, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6166)
inline IDispatchPtr TGFrameworkSupport::_IDatumTargetAuto::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Mirror(x1, y1, x2, y2, BooleanCopyFlag, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6167)
inline HRESULT TGFrameworkSupport::_IDatumTargetAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6168)
inline HRESULT TGFrameworkSupport::_IDatumTargetAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6169)
inline HRESULT TGFrameworkSupport::_IDatumTargetAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6170)
inline HRESULT TGFrameworkSupport::_IDatumTargetAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6171)
inline HRESULT TGFrameworkSupport::_IDatumTargetAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6172)
inline double TGFrameworkSupport::_IDatumTargetAuto::GetBreakLineDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_BreakLineDistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6173)
inline void TGFrameworkSupport::_IDatumTargetAuto::PutBreakLineDistance ( double Distance ) {
    HRESULT _hr = put_BreakLineDistance(Distance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6174)
inline VARIANT_BOOL TGFrameworkSupport::_IDatumTargetAuto::GetBreakLine ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BreakLine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6175)
inline void TGFrameworkSupport::_IDatumTargetAuto::PutBreakLine ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_BreakLine(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6176)
inline VARIANT_BOOL TGFrameworkSupport::_IDatumTargetAuto::GetBreakLineDirection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BreakLineDirection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6177)
inline void TGFrameworkSupport::_IDatumTargetAuto::PutBreakLineDirection ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_BreakLineDirection(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6178)
inline VARIANT_BOOL TGFrameworkSupport::_IDatumTargetAuto::GetLeader ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Leader(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6179)
inline void TGFrameworkSupport::_IDatumTargetAuto::PutLeader ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_Leader(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6180)
inline long TGFrameworkSupport::_IDatumTargetAuto::GetVertexCount ( ) {
    long _result = 0;
    HRESULT _hr = get_VertexCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6181)
inline HRESULT TGFrameworkSupport::_IDatumTargetAuto::GetVertices ( long * VertexCount, SAFEARRAY * * Vertices ) {
    HRESULT _hr = raw_GetVertices(VertexCount, Vertices);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6182)
inline HRESULT TGFrameworkSupport::_IDatumTargetAuto::SetVertices ( long VertexCount, SAFEARRAY * * Vertices ) {
    HRESULT _hr = raw_SetVertices(VertexCount, Vertices);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6183)
inline HRESULT TGFrameworkSupport::_IDatumTargetAuto::GetVertex ( long Index, double * x, double * y, double * z ) {
    HRESULT _hr = raw_GetVertex(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6184)
inline HRESULT TGFrameworkSupport::_IDatumTargetAuto::SetVertex ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetVertex(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6185)
inline HRESULT TGFrameworkSupport::_IDatumTargetAuto::InsertVertex ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_InsertVertex(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6186)
inline HRESULT TGFrameworkSupport::_IDatumTargetAuto::AddVertex ( double x, double y, double z ) {
    HRESULT _hr = raw_AddVertex(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6187)
inline HRESULT TGFrameworkSupport::_IDatumTargetAuto::RemoveVertex ( long Index ) {
    HRESULT _hr = raw_RemoveVertex(Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6188)
inline long TGFrameworkSupport::_IDatumTargetAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6189)
inline HRESULT TGFrameworkSupport::_IDatumTargetAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6190)
inline HRESULT TGFrameworkSupport::_IDatumTargetAuto::SetKeyPoint ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetKeyPoint(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6191)
inline IDispatchPtr TGFrameworkSupport::_IDatumTargetAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6192)
inline VARIANT_BOOL TGFrameworkSupport::_IDatumTargetAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6193)
inline double TGFrameworkSupport::_IDatumTargetAuto::GetTextScale ( ) {
    double _result = 0;
    HRESULT _hr = get_TextScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6194)
inline void TGFrameworkSupport::_IDatumTargetAuto::PutTextScale ( double pdAngle ) {
    HRESULT _hr = put_TextScale(pdAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6195)
inline void TGFrameworkSupport::_IDatumTargetAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6196)
inline _bstr_t TGFrameworkSupport::_IDatumTargetAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6197)
inline IDispatchPtr TGFrameworkSupport::_IDatumTargetAuto::GetPMIPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_PMIPlane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6198)
inline double TGFrameworkSupport::_IDatumTargetAuto::GetPMITrackDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_PMITrackDistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6199)
inline void TGFrameworkSupport::_IDatumTargetAuto::PutPMITrackDistance ( double pdPMITrackDistance ) {
    HRESULT _hr = put_PMITrackDistance(pdPMITrackDistance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6200)
inline void TGFrameworkSupport::_IDatumTargetAuto::PutHidePMI ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_HidePMI(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6201)
inline VARIANT_BOOL TGFrameworkSupport::_IDatumTargetAuto::GetHidePMI ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HidePMI(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6202)
inline TGFrameworkSupport::DisplayDataPtr TGFrameworkSupport::_IDatumTargetAuto::GetDisplayData ( ) {
    struct DisplayData * _result = 0;
    HRESULT _hr = raw_GetDisplayData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DisplayDataPtr(_result, false);
}

#pragma implementation_key(6203)
inline enum TGFrameworkSupport::DimDatumTargetTypeConstants TGFrameworkSupport::_IDatumTargetAuto::GetDatumTargetType ( ) {
    enum DimDatumTargetTypeConstants _result;
    HRESULT _hr = get_DatumTargetType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6204)
inline void TGFrameworkSupport::_IDatumTargetAuto::PutDatumTargetType ( enum DimDatumTargetTypeConstants Type ) {
    HRESULT _hr = put_DatumTargetType(Type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6205)
inline HRESULT TGFrameworkSupport::_IDatumTargetAuto::PromoteToCurrentVersion ( ) {
    HRESULT _hr = raw_PromoteToCurrentVersion();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6206)
inline HRESULT TGFrameworkSupport::_IDatumTargetAuto::SetAlignmentShape ( IDispatch * AlignmentShapeObj, double x, double y ) {
    HRESULT _hr = raw_SetAlignmentShape(AlignmentShapeObj, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6207)
inline HRESULT TGFrameworkSupport::_IDatumTargetAuto::GetAlignmentShape ( IDispatch * * AlignmentShapeObj, double * x, double * y ) {
    HRESULT _hr = raw_GetAlignmentShape(AlignmentShapeObj, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6208)
inline void TGFrameworkSupport::_IDatumTargetAuto::PutPMIName ( _bstr_t Text ) {
    HRESULT _hr = put_PMIName(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6209)
inline _bstr_t TGFrameworkSupport::_IDatumTargetAuto::GetPMIName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PMIName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6210)
inline HRESULT TGFrameworkSupport::_IDatumTargetAuto::TransformToModelCoordinates ( double InputX, double InputY, double InputZ, double * ModelX, double * ModelY, double * ModelZ ) {
    HRESULT _hr = raw_TransformToModelCoordinates(InputX, InputY, InputZ, ModelX, ModelY, ModelZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6211)
inline VARIANT_BOOL TGFrameworkSupport::_IDatumTargetAuto::GetIsTerminatorAttachedToEntity ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsTerminatorAttachedToEntity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6212)
inline HRESULT TGFrameworkSupport::_IDatumTargetAuto::GetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    HRESULT _hr = raw_GetReferencedGeometry(ReferencedGeometries);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6213)
inline HRESULT TGFrameworkSupport::_IDatumTargetAuto::SetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    HRESULT _hr = raw_SetReferencedGeometry(ReferencedGeometries);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6214)
inline _bstr_t TGFrameworkSupport::_IDatumTargetAuto::GetDatumNumber ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DatumNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6215)
inline void TGFrameworkSupport::_IDatumTargetAuto::PutDatumNumber ( _bstr_t Text ) {
    HRESULT _hr = put_DatumNumber(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// dispinterface PinSymbols wrapper method implementations
//

#pragma implementation_key(6216)
inline TGFramework::ApplicationPtr TGFrameworkSupport::PinSymbols::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(6217)
inline long TGFrameworkSupport::PinSymbols::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6218)
inline IDispatchPtr TGFrameworkSupport::PinSymbols::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6219)
inline TGFrameworkSupport::PinSymbolPtr TGFrameworkSupport::PinSymbols::Item ( const _variant_t & Index ) {
    struct PinSymbol * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return PinSymbolPtr(_result, false);
}

#pragma implementation_key(6220)
inline void TGFrameworkSupport::PinSymbols::PutPlane ( IDispatch * _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(6221)
inline IDispatchPtr TGFrameworkSupport::PinSymbols::GetPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6222)
inline void TGFrameworkSupport::PinSymbols::PutStyle ( struct DimensionStyle * _arg1 ) {
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(6223)
inline TGFrameworkSupport::DimensionStylePtr TGFrameworkSupport::PinSymbols::GetStyle ( ) {
    struct DimensionStyle * _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DimensionStylePtr(_result, false);
}

#pragma implementation_key(6224)
inline TGFrameworkSupport::PinSymbolPtr TGFrameworkSupport::PinSymbols::Add ( double x1, double y1, double z1 ) {
    struct PinSymbol * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005", x1, y1, z1);
    return PinSymbolPtr(_result, false);
}

#pragma implementation_key(6225)
inline TGFrameworkSupport::PinSymbolPtr TGFrameworkSupport::PinSymbols::AddByTerminator ( IDispatch * TerminatorObject, double x1, double y1, double z1, VARIANT_BOOL keyPoint1 ) {
    struct PinSymbol * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x000b", TerminatorObject, x1, y1, z1, keyPoint1);
    return PinSymbolPtr(_result, false);
}

#pragma implementation_key(6226)
inline HRESULT TGFrameworkSupport::PinSymbols::ClearPlane ( ) {
    return _com_dispatch_method(this, 0x78, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6227)
inline HRESULT TGFrameworkSupport::PinSymbols::ClearStyle ( ) {
    return _com_dispatch_method(this, 0x79, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6228)
inline TGFrameworkSupport::AnnotInitDataPtr TGFrameworkSupport::PinSymbols::GetAnnotInitData ( ) {
    struct AnnotInitData * _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AnnotInitDataPtr(_result, false);
}

#pragma implementation_key(6229)
inline TGFrameworkSupport::PinSymbolPtr TGFrameworkSupport::PinSymbols::AddPinSymbol ( struct AnnotInitData * AnnotInitData ) {
    struct PinSymbol * _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", AnnotInitData);
    return PinSymbolPtr(_result, false);
}

//
// dispinterface PinSymbol wrapper method implementations
//

#pragma implementation_key(6230)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::PinSymbol::GetStyle ( ) {
    struct DimStyle * _result = 0;
    _com_dispatch_method(this, 0x6f, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DimStylePtr(_result, false);
}

#pragma implementation_key(6231)
inline _bstr_t TGFrameworkSupport::PinSymbol::GetDatumReference ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xd3, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6232)
inline void TGFrameworkSupport::PinSymbol::PutDatumReference ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xd3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(6233)
inline HRESULT TGFrameworkSupport::PinSymbol::SetTerminator ( IDispatch * TerminatorObj, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    return _com_dispatch_method(this, 0x7db, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0005\x0005\x0005\x000b", TerminatorObj, x, y, z, keyPoint);
}

#pragma implementation_key(6234)
inline HRESULT TGFrameworkSupport::PinSymbol::GetTerminator ( IDispatch * * TerminatorObj, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    return _com_dispatch_method(this, 0x8a3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4005\x4005\x4005\x400b", TerminatorObj, x, y, z, keyPoint);
}

#pragma implementation_key(6235)
inline HRESULT TGFrameworkSupport::PinSymbol::SetFreeSpacePoint ( double x, double y, double z ) {
    return _com_dispatch_method(this, 0x83f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", x, y, z);
}

#pragma implementation_key(6236)
inline HRESULT TGFrameworkSupport::PinSymbol::GetFreeSpacePoint ( double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0x907, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005", x, y, z);
}

#pragma implementation_key(6237)
inline void TGFrameworkSupport::PinSymbol::PutPinSymbolTempRadius ( double _arg1 ) {
    _com_dispatch_method(this, 0xa8d5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(6238)
inline double TGFrameworkSupport::PinSymbol::GetPinSymbolTempRadius ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xa8d5, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6239)
inline void TGFrameworkSupport::PinSymbol::PutPinSymbolTempStyle ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xa8d6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(6240)
inline VARIANT_BOOL TGFrameworkSupport::PinSymbol::GetPinSymbolTempStyle ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xa8d6, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6241)
inline TGFramework::ApplicationPtr TGFrameworkSupport::PinSymbol::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa3f3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(6242)
inline long TGFrameworkSupport::PinSymbol::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa3fd, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6243)
inline _bstr_t TGFrameworkSupport::PinSymbol::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xa407, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6244)
inline IDispatchPtr TGFrameworkSupport::PinSymbol::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xa411, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6245)
inline long TGFrameworkSupport::PinSymbol::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa41b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6246)
inline long TGFrameworkSupport::PinSymbol::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa42f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6247)
inline _bstr_t TGFrameworkSupport::PinSymbol::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xa439, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6248)
inline IDispatchPtr TGFrameworkSupport::PinSymbol::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xa443, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6249)
inline HRESULT TGFrameworkSupport::PinSymbol::Copy ( ) {
    return _com_dispatch_method(this, 0x6099a68a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6250)
inline HRESULT TGFrameworkSupport::PinSymbol::Cut ( ) {
    return _com_dispatch_method(this, 0x6099a68b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6251)
inline HRESULT TGFrameworkSupport::PinSymbol::Delete ( ) {
    return _com_dispatch_method(this, 0x6099a68c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6252)
inline HRESULT TGFrameworkSupport::PinSymbol::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    return _com_dispatch_method(this, 0x6099a68d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", XFrom, YFrom, XTo, YTo);
}

#pragma implementation_key(6253)
inline HRESULT TGFrameworkSupport::PinSymbol::Scale ( double Factor ) {
    return _com_dispatch_method(this, 0x6099a68e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Factor);
}

#pragma implementation_key(6254)
inline HRESULT TGFrameworkSupport::PinSymbol::Rotate ( double Angle, double x, double y ) {
    return _com_dispatch_method(this, 0x6099a68f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", Angle, x, y);
}

#pragma implementation_key(6255)
inline HRESULT TGFrameworkSupport::PinSymbol::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x6099a691, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(6256)
inline IDispatchPtr TGFrameworkSupport::PinSymbol::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x6099a692, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &XDistance, &YDistance);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6257)
inline IDispatchPtr TGFrameworkSupport::PinSymbol::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x6099a693, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x080c", x1, y1, x2, y2, &BooleanCopyFlag);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6258)
inline HRESULT TGFrameworkSupport::PinSymbol::BringToFront ( ) {
    return _com_dispatch_method(this, 0x6099a694, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6259)
inline HRESULT TGFrameworkSupport::PinSymbol::BringForward ( ) {
    return _com_dispatch_method(this, 0x6099a695, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6260)
inline HRESULT TGFrameworkSupport::PinSymbol::SendToBack ( ) {
    return _com_dispatch_method(this, 0x6099a696, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6261)
inline HRESULT TGFrameworkSupport::PinSymbol::SendBackward ( ) {
    return _com_dispatch_method(this, 0x6099a697, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6262)
inline HRESULT TGFrameworkSupport::PinSymbol::Select ( ) {
    return _com_dispatch_method(this, 0x6099a698, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6263)
inline double TGFrameworkSupport::PinSymbol::GetBreakLineDistance ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1e029, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6264)
inline void TGFrameworkSupport::PinSymbol::PutBreakLineDistance ( double _arg1 ) {
    _com_dispatch_method(this, 0x1e029, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(6265)
inline VARIANT_BOOL TGFrameworkSupport::PinSymbol::GetBreakLine ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1e033, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6266)
inline void TGFrameworkSupport::PinSymbol::PutBreakLine ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1e033, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(6267)
inline VARIANT_BOOL TGFrameworkSupport::PinSymbol::GetBreakLineDirection ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1e03d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6268)
inline void TGFrameworkSupport::PinSymbol::PutBreakLineDirection ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1e03d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(6269)
inline VARIANT_BOOL TGFrameworkSupport::PinSymbol::GetLeader ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1e047, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6270)
inline void TGFrameworkSupport::PinSymbol::PutLeader ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1e047, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(6271)
inline long TGFrameworkSupport::PinSymbol::GetVertexCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1e01f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6272)
inline HRESULT TGFrameworkSupport::PinSymbol::GetVertices ( long * VertexCount, SAFEARRAY * * Vertices ) {
    return _com_dispatch_method(this, 0x6099c689, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6005", VertexCount, Vertices);
}

#pragma implementation_key(6273)
inline HRESULT TGFrameworkSupport::PinSymbol::SetVertices ( long VertexCount, SAFEARRAY * * Vertices ) {
    return _com_dispatch_method(this, 0x668fa78a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6005", VertexCount, Vertices);
}

#pragma implementation_key(6274)
inline HRESULT TGFrameworkSupport::PinSymbol::GetVertex ( long Index, double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0x6099c68b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005", Index, x, y, z);
}

#pragma implementation_key(6275)
inline HRESULT TGFrameworkSupport::PinSymbol::SetVertex ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x668fa78c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(6276)
inline HRESULT TGFrameworkSupport::PinSymbol::InsertVertex ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x6099c68d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(6277)
inline HRESULT TGFrameworkSupport::PinSymbol::AddVertex ( double x, double y, double z ) {
    return _com_dispatch_method(this, 0x6099c68e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", x, y, z);
}

#pragma implementation_key(6278)
inline HRESULT TGFrameworkSupport::PinSymbol::RemoveVertex ( long Index ) {
    return _com_dispatch_method(this, 0x6099c68f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Index);
}

#pragma implementation_key(6279)
inline long TGFrameworkSupport::PinSymbol::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2800b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6280)
inline HRESULT TGFrameworkSupport::PinSymbol::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x28015, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(6281)
inline HRESULT TGFrameworkSupport::PinSymbol::SetKeyPoint ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x2801f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(6282)
inline IDispatchPtr TGFrameworkSupport::PinSymbol::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6283)
inline VARIANT_BOOL TGFrameworkSupport::PinSymbol::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(6284)
inline double TGFrameworkSupport::PinSymbol::GetTextScale ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3009, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6285)
inline void TGFrameworkSupport::PinSymbol::PutTextScale ( double _arg1 ) {
    _com_dispatch_method(this, 0x3009, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(6286)
inline void TGFrameworkSupport::PinSymbol::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xa461, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(6287)
inline _bstr_t TGFrameworkSupport::PinSymbol::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xa461, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6288)
inline IDispatchPtr TGFrameworkSupport::PinSymbol::GetPMIPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xa46b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6289)
inline double TGFrameworkSupport::PinSymbol::GetPMITrackDistance ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xa475, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6290)
inline void TGFrameworkSupport::PinSymbol::PutPMITrackDistance ( double _arg1 ) {
    _com_dispatch_method(this, 0xa475, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(6291)
inline void TGFrameworkSupport::PinSymbol::PutHidePMI ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xa47f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(6292)
inline VARIANT_BOOL TGFrameworkSupport::PinSymbol::GetHidePMI ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xa47f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6293)
inline TGFrameworkSupport::DisplayDataPtr TGFrameworkSupport::PinSymbol::GetDisplayData ( ) {
    struct DisplayData * _result = 0;
    _com_dispatch_method(this, 0xa489, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return DisplayDataPtr(_result, false);
}

#pragma implementation_key(6294)
inline HRESULT TGFrameworkSupport::PinSymbol::PromoteToCurrentVersion ( ) {
    return _com_dispatch_method(this, 0xa49d, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6295)
inline HRESULT TGFrameworkSupport::PinSymbol::SetAlignmentShape ( IDispatch * AlignmentShapeObj, double x, double y ) {
    return _com_dispatch_method(this, 0xa4a7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0005\x0005", AlignmentShapeObj, x, y);
}

#pragma implementation_key(6296)
inline HRESULT TGFrameworkSupport::PinSymbol::GetAlignmentShape ( IDispatch * * AlignmentShapeObj, double * x, double * y ) {
    return _com_dispatch_method(this, 0xa4b1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4005\x4005", AlignmentShapeObj, x, y);
}

#pragma implementation_key(6297)
inline void TGFrameworkSupport::PinSymbol::PutPMIName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xa4bb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(6298)
inline _bstr_t TGFrameworkSupport::PinSymbol::GetPMIName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xa4bb, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6299)
inline HRESULT TGFrameworkSupport::PinSymbol::TransformToModelCoordinates ( double InputX, double InputY, double InputZ, double * ModelX, double * ModelY, double * ModelZ ) {
    return _com_dispatch_method(this, 0xa4c5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x4005\x4005\x4005", InputX, InputY, InputZ, ModelX, ModelY, ModelZ);
}

#pragma implementation_key(6300)
inline VARIANT_BOOL TGFrameworkSupport::PinSymbol::GetIsTerminatorAttachedToEntity ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xa4cf, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6301)
inline HRESULT TGFrameworkSupport::PinSymbol::GetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    return _com_dispatch_method(this, 0xa4e3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009", ReferencedGeometries);
}

#pragma implementation_key(6302)
inline HRESULT TGFrameworkSupport::PinSymbol::SetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    return _com_dispatch_method(this, 0xa4d9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009", ReferencedGeometries);
}

//
// interface _IPinSymbolsAuto wrapper method implementations
//

#pragma implementation_key(6303)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IPinSymbolsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(6304)
inline long TGFrameworkSupport::_IPinSymbolsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6305)
inline IDispatchPtr TGFrameworkSupport::_IPinSymbolsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6306)
inline TGFrameworkSupport::PinSymbolPtr TGFrameworkSupport::_IPinSymbolsAuto::Item ( const _variant_t & Index ) {
    struct PinSymbol * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PinSymbolPtr(_result, false);
}

#pragma implementation_key(6307)
inline IUnknownPtr TGFrameworkSupport::_IPinSymbolsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(6308)
inline void TGFrameworkSupport::_IPinSymbolsAuto::PutPlane ( IDispatch * Plane ) {
    HRESULT _hr = put_Plane(Plane);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6309)
inline IDispatchPtr TGFrameworkSupport::_IPinSymbolsAuto::GetPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Plane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6310)
inline void TGFrameworkSupport::_IPinSymbolsAuto::PutStyle ( struct DimensionStyle * Style ) {
    HRESULT _hr = put_Style(Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6311)
inline TGFrameworkSupport::DimensionStylePtr TGFrameworkSupport::_IPinSymbolsAuto::GetStyle ( ) {
    struct DimensionStyle * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionStylePtr(_result, false);
}

#pragma implementation_key(6312)
inline TGFrameworkSupport::PinSymbolPtr TGFrameworkSupport::_IPinSymbolsAuto::Add ( double x1, double y1, double z1 ) {
    struct PinSymbol * _result = 0;
    HRESULT _hr = raw_Add(x1, y1, z1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PinSymbolPtr(_result, false);
}

#pragma implementation_key(6313)
inline TGFrameworkSupport::PinSymbolPtr TGFrameworkSupport::_IPinSymbolsAuto::AddByTerminator ( IDispatch * TerminatorObject, double x1, double y1, double z1, VARIANT_BOOL keyPoint1 ) {
    struct PinSymbol * _result = 0;
    HRESULT _hr = raw_AddByTerminator(TerminatorObject, x1, y1, z1, keyPoint1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PinSymbolPtr(_result, false);
}

#pragma implementation_key(6314)
inline HRESULT TGFrameworkSupport::_IPinSymbolsAuto::ClearPlane ( ) {
    HRESULT _hr = raw_ClearPlane();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6315)
inline HRESULT TGFrameworkSupport::_IPinSymbolsAuto::ClearStyle ( ) {
    HRESULT _hr = raw_ClearStyle();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6316)
inline TGFrameworkSupport::AnnotInitDataPtr TGFrameworkSupport::_IPinSymbolsAuto::GetAnnotInitData ( ) {
    struct AnnotInitData * _result = 0;
    HRESULT _hr = get_AnnotInitData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AnnotInitDataPtr(_result, false);
}

#pragma implementation_key(6317)
inline TGFrameworkSupport::PinSymbolPtr TGFrameworkSupport::_IPinSymbolsAuto::AddPinSymbol ( struct AnnotInitData * AnnotInitData ) {
    struct PinSymbol * _result = 0;
    HRESULT _hr = raw_AddPinSymbol(AnnotInitData, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PinSymbolPtr(_result, false);
}

//
// interface _IPinSymbolAuto wrapper method implementations
//

#pragma implementation_key(6318)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::_IPinSymbolAuto::GetStyle ( ) {
    struct DimStyle * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimStylePtr(_result, false);
}

#pragma implementation_key(6319)
inline _bstr_t TGFrameworkSupport::_IPinSymbolAuto::GetDatumReference ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DatumReference(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6320)
inline void TGFrameworkSupport::_IPinSymbolAuto::PutDatumReference ( _bstr_t Text ) {
    HRESULT _hr = put_DatumReference(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6321)
inline HRESULT TGFrameworkSupport::_IPinSymbolAuto::SetTerminator ( IDispatch * TerminatorObj, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    HRESULT _hr = raw_SetTerminator(TerminatorObj, x, y, z, keyPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6322)
inline HRESULT TGFrameworkSupport::_IPinSymbolAuto::GetTerminator ( IDispatch * * TerminatorObj, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    HRESULT _hr = raw_GetTerminator(TerminatorObj, x, y, z, keyPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6323)
inline HRESULT TGFrameworkSupport::_IPinSymbolAuto::SetFreeSpacePoint ( double x, double y, double z ) {
    HRESULT _hr = raw_SetFreeSpacePoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6324)
inline HRESULT TGFrameworkSupport::_IPinSymbolAuto::GetFreeSpacePoint ( double * x, double * y, double * z ) {
    HRESULT _hr = raw_GetFreeSpacePoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6325)
inline void TGFrameworkSupport::_IPinSymbolAuto::PutPinSymbolTempRadius ( double Radius ) {
    HRESULT _hr = put_PinSymbolTempRadius(Radius);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6326)
inline double TGFrameworkSupport::_IPinSymbolAuto::GetPinSymbolTempRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_PinSymbolTempRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6327)
inline void TGFrameworkSupport::_IPinSymbolAuto::PutPinSymbolTempStyle ( VARIANT_BOOL Style ) {
    HRESULT _hr = put_PinSymbolTempStyle(Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6328)
inline VARIANT_BOOL TGFrameworkSupport::_IPinSymbolAuto::GetPinSymbolTempStyle ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_PinSymbolTempStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6329)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IPinSymbolAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(6330)
inline long TGFrameworkSupport::_IPinSymbolAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6331)
inline _bstr_t TGFrameworkSupport::_IPinSymbolAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6332)
inline IDispatchPtr TGFrameworkSupport::_IPinSymbolAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6333)
inline long TGFrameworkSupport::_IPinSymbolAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6334)
inline long TGFrameworkSupport::_IPinSymbolAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6335)
inline _bstr_t TGFrameworkSupport::_IPinSymbolAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6336)
inline IDispatchPtr TGFrameworkSupport::_IPinSymbolAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6337)
inline HRESULT TGFrameworkSupport::_IPinSymbolAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6338)
inline HRESULT TGFrameworkSupport::_IPinSymbolAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6339)
inline HRESULT TGFrameworkSupport::_IPinSymbolAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6340)
inline HRESULT TGFrameworkSupport::_IPinSymbolAuto::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    HRESULT _hr = raw_Move(XFrom, YFrom, XTo, YTo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6341)
inline HRESULT TGFrameworkSupport::_IPinSymbolAuto::Scale ( double Factor ) {
    HRESULT _hr = raw_Scale(Factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6342)
inline HRESULT TGFrameworkSupport::_IPinSymbolAuto::Rotate ( double Angle, double x, double y ) {
    HRESULT _hr = raw_Rotate(Angle, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6343)
inline HRESULT TGFrameworkSupport::_IPinSymbolAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6344)
inline IDispatchPtr TGFrameworkSupport::_IPinSymbolAuto::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Duplicate(XDistance, YDistance, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6345)
inline IDispatchPtr TGFrameworkSupport::_IPinSymbolAuto::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Mirror(x1, y1, x2, y2, BooleanCopyFlag, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6346)
inline HRESULT TGFrameworkSupport::_IPinSymbolAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6347)
inline HRESULT TGFrameworkSupport::_IPinSymbolAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6348)
inline HRESULT TGFrameworkSupport::_IPinSymbolAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6349)
inline HRESULT TGFrameworkSupport::_IPinSymbolAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6350)
inline HRESULT TGFrameworkSupport::_IPinSymbolAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6351)
inline double TGFrameworkSupport::_IPinSymbolAuto::GetBreakLineDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_BreakLineDistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6352)
inline void TGFrameworkSupport::_IPinSymbolAuto::PutBreakLineDistance ( double Distance ) {
    HRESULT _hr = put_BreakLineDistance(Distance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6353)
inline VARIANT_BOOL TGFrameworkSupport::_IPinSymbolAuto::GetBreakLine ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BreakLine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6354)
inline void TGFrameworkSupport::_IPinSymbolAuto::PutBreakLine ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_BreakLine(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6355)
inline VARIANT_BOOL TGFrameworkSupport::_IPinSymbolAuto::GetBreakLineDirection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BreakLineDirection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6356)
inline void TGFrameworkSupport::_IPinSymbolAuto::PutBreakLineDirection ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_BreakLineDirection(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6357)
inline VARIANT_BOOL TGFrameworkSupport::_IPinSymbolAuto::GetLeader ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Leader(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6358)
inline void TGFrameworkSupport::_IPinSymbolAuto::PutLeader ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_Leader(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6359)
inline long TGFrameworkSupport::_IPinSymbolAuto::GetVertexCount ( ) {
    long _result = 0;
    HRESULT _hr = get_VertexCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6360)
inline HRESULT TGFrameworkSupport::_IPinSymbolAuto::GetVertices ( long * VertexCount, SAFEARRAY * * Vertices ) {
    HRESULT _hr = raw_GetVertices(VertexCount, Vertices);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6361)
inline HRESULT TGFrameworkSupport::_IPinSymbolAuto::SetVertices ( long VertexCount, SAFEARRAY * * Vertices ) {
    HRESULT _hr = raw_SetVertices(VertexCount, Vertices);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6362)
inline HRESULT TGFrameworkSupport::_IPinSymbolAuto::GetVertex ( long Index, double * x, double * y, double * z ) {
    HRESULT _hr = raw_GetVertex(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6363)
inline HRESULT TGFrameworkSupport::_IPinSymbolAuto::SetVertex ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetVertex(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6364)
inline HRESULT TGFrameworkSupport::_IPinSymbolAuto::InsertVertex ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_InsertVertex(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6365)
inline HRESULT TGFrameworkSupport::_IPinSymbolAuto::AddVertex ( double x, double y, double z ) {
    HRESULT _hr = raw_AddVertex(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6366)
inline HRESULT TGFrameworkSupport::_IPinSymbolAuto::RemoveVertex ( long Index ) {
    HRESULT _hr = raw_RemoveVertex(Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6367)
inline long TGFrameworkSupport::_IPinSymbolAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6368)
inline HRESULT TGFrameworkSupport::_IPinSymbolAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6369)
inline HRESULT TGFrameworkSupport::_IPinSymbolAuto::SetKeyPoint ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetKeyPoint(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6370)
inline IDispatchPtr TGFrameworkSupport::_IPinSymbolAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6371)
inline VARIANT_BOOL TGFrameworkSupport::_IPinSymbolAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6372)
inline double TGFrameworkSupport::_IPinSymbolAuto::GetTextScale ( ) {
    double _result = 0;
    HRESULT _hr = get_TextScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6373)
inline void TGFrameworkSupport::_IPinSymbolAuto::PutTextScale ( double pdAngle ) {
    HRESULT _hr = put_TextScale(pdAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6374)
inline void TGFrameworkSupport::_IPinSymbolAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6375)
inline _bstr_t TGFrameworkSupport::_IPinSymbolAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6376)
inline IDispatchPtr TGFrameworkSupport::_IPinSymbolAuto::GetPMIPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_PMIPlane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6377)
inline double TGFrameworkSupport::_IPinSymbolAuto::GetPMITrackDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_PMITrackDistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6378)
inline void TGFrameworkSupport::_IPinSymbolAuto::PutPMITrackDistance ( double pdPMITrackDistance ) {
    HRESULT _hr = put_PMITrackDistance(pdPMITrackDistance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6379)
inline void TGFrameworkSupport::_IPinSymbolAuto::PutHidePMI ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_HidePMI(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6380)
inline VARIANT_BOOL TGFrameworkSupport::_IPinSymbolAuto::GetHidePMI ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HidePMI(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6381)
inline TGFrameworkSupport::DisplayDataPtr TGFrameworkSupport::_IPinSymbolAuto::GetDisplayData ( ) {
    struct DisplayData * _result = 0;
    HRESULT _hr = raw_GetDisplayData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DisplayDataPtr(_result, false);
}

#pragma implementation_key(6382)
inline HRESULT TGFrameworkSupport::_IPinSymbolAuto::PromoteToCurrentVersion ( ) {
    HRESULT _hr = raw_PromoteToCurrentVersion();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6383)
inline HRESULT TGFrameworkSupport::_IPinSymbolAuto::SetAlignmentShape ( IDispatch * AlignmentShapeObj, double x, double y ) {
    HRESULT _hr = raw_SetAlignmentShape(AlignmentShapeObj, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6384)
inline HRESULT TGFrameworkSupport::_IPinSymbolAuto::GetAlignmentShape ( IDispatch * * AlignmentShapeObj, double * x, double * y ) {
    HRESULT _hr = raw_GetAlignmentShape(AlignmentShapeObj, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6385)
inline void TGFrameworkSupport::_IPinSymbolAuto::PutPMIName ( _bstr_t Text ) {
    HRESULT _hr = put_PMIName(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6386)
inline _bstr_t TGFrameworkSupport::_IPinSymbolAuto::GetPMIName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PMIName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6387)
inline HRESULT TGFrameworkSupport::_IPinSymbolAuto::TransformToModelCoordinates ( double InputX, double InputY, double InputZ, double * ModelX, double * ModelY, double * ModelZ ) {
    HRESULT _hr = raw_TransformToModelCoordinates(InputX, InputY, InputZ, ModelX, ModelY, ModelZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6388)
inline VARIANT_BOOL TGFrameworkSupport::_IPinSymbolAuto::GetIsTerminatorAttachedToEntity ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsTerminatorAttachedToEntity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6389)
inline HRESULT TGFrameworkSupport::_IPinSymbolAuto::GetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    HRESULT _hr = raw_GetReferencedGeometry(ReferencedGeometries);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6390)
inline HRESULT TGFrameworkSupport::_IPinSymbolAuto::SetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    HRESULT _hr = raw_SetReferencedGeometry(ReferencedGeometries);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface DatumPoints wrapper method implementations
//

#pragma implementation_key(6391)
inline TGFramework::ApplicationPtr TGFrameworkSupport::DatumPoints::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(6392)
inline long TGFrameworkSupport::DatumPoints::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6393)
inline IDispatchPtr TGFrameworkSupport::DatumPoints::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6394)
inline TGFrameworkSupport::DatumPointPtr TGFrameworkSupport::DatumPoints::Item ( const _variant_t & Index ) {
    struct DatumPoint * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return DatumPointPtr(_result, false);
}

#pragma implementation_key(6395)
inline void TGFrameworkSupport::DatumPoints::PutPlane ( IDispatch * _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(6396)
inline IDispatchPtr TGFrameworkSupport::DatumPoints::GetPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6397)
inline void TGFrameworkSupport::DatumPoints::PutStyle ( struct DimensionStyle * _arg1 ) {
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(6398)
inline TGFrameworkSupport::DimensionStylePtr TGFrameworkSupport::DatumPoints::GetStyle ( ) {
    struct DimensionStyle * _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DimensionStylePtr(_result, false);
}

#pragma implementation_key(6399)
inline void TGFrameworkSupport::DatumPoints::PutAxis ( IDispatch * _arg1 ) {
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(6400)
inline IDispatchPtr TGFrameworkSupport::DatumPoints::GetAxis ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6401)
inline TGFrameworkSupport::DatumPointPtr TGFrameworkSupport::DatumPoints::Add ( double x1, double y1, double z1 ) {
    struct DatumPoint * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005", x1, y1, z1);
    return DatumPointPtr(_result, false);
}

#pragma implementation_key(6402)
inline TGFrameworkSupport::DatumPointPtr TGFrameworkSupport::DatumPoints::AddByElement ( IDispatch * TerminatorObject, double x1, double y1, double z1, VARIANT_BOOL keyPoint1 ) {
    struct DatumPoint * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x000b", TerminatorObject, x1, y1, z1, keyPoint1);
    return DatumPointPtr(_result, false);
}

#pragma implementation_key(6403)
inline HRESULT TGFrameworkSupport::DatumPoints::ClearPlane ( ) {
    return _com_dispatch_method(this, 0x78, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6404)
inline HRESULT TGFrameworkSupport::DatumPoints::ClearStyle ( ) {
    return _com_dispatch_method(this, 0x79, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6405)
inline TGFrameworkSupport::AnnotInitDataPtr TGFrameworkSupport::DatumPoints::GetAnnotInitData ( ) {
    struct AnnotInitData * _result = 0;
    _com_dispatch_method(this, 0x278c2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AnnotInitDataPtr(_result, false);
}

#pragma implementation_key(6406)
inline TGFrameworkSupport::DatumPointPtr TGFrameworkSupport::DatumPoints::AddDatumPoint ( struct AnnotInitData * AnnotInitData ) {
    struct DatumPoint * _result = 0;
    _com_dispatch_method(this, 0x278c3, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", AnnotInitData);
    return DatumPointPtr(_result, false);
}

//
// dispinterface DatumPoint wrapper method implementations
//

#pragma implementation_key(6407)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::DatumPoint::GetStyle ( ) {
    struct DimStyle * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DimStylePtr(_result, false);
}

#pragma implementation_key(6408)
inline IDispatchPtr TGFrameworkSupport::DatumPoint::GetPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6409)
inline double TGFrameworkSupport::DatumPoint::GetAreaSize ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6410)
inline void TGFrameworkSupport::DatumPoint::PutAreaSize ( double _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(6411)
inline enum TGFrameworkSupport::DimDatumPointTypeConstants TGFrameworkSupport::DatumPoint::GetPointType ( ) {
    enum DimDatumPointTypeConstants _result;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6412)
inline void TGFrameworkSupport::DatumPoint::PutPointType ( enum DimDatumPointTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(6413)
inline HRESULT TGFrameworkSupport::DatumPoint::SetElement ( IDispatch * CenterObj, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0005\x0005\x0005\x000b", CenterObj, x, y, z, keyPoint);
}

#pragma implementation_key(6414)
inline HRESULT TGFrameworkSupport::DatumPoint::GetElement ( IDispatch * * CenterObj, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4005\x4005\x4005\x400b", CenterObj, x, y, z, keyPoint);
}

#pragma implementation_key(6415)
inline HRESULT TGFrameworkSupport::DatumPoint::SetCenter ( double x, double y, double z ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", x, y, z);
}

#pragma implementation_key(6416)
inline HRESULT TGFrameworkSupport::DatumPoint::GetCenter ( double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005", x, y, z);
}

#pragma implementation_key(6417)
inline HRESULT TGFrameworkSupport::DatumPoint::SetFreeSpacePoint ( double x, double y, double z ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", x, y, z);
}

#pragma implementation_key(6418)
inline HRESULT TGFrameworkSupport::DatumPoint::GetFreeSpacePoint ( double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005", x, y, z);
}

#pragma implementation_key(6419)
inline TGFramework::ApplicationPtr TGFrameworkSupport::DatumPoint::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x2065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(6420)
inline long TGFrameworkSupport::DatumPoint::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2066, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6421)
inline _bstr_t TGFrameworkSupport::DatumPoint::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x2067, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6422)
inline IDispatchPtr TGFrameworkSupport::DatumPoint::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2068, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6423)
inline long TGFrameworkSupport::DatumPoint::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2069, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6424)
inline long TGFrameworkSupport::DatumPoint::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x206b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6425)
inline _bstr_t TGFrameworkSupport::DatumPoint::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x206c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6426)
inline IDispatchPtr TGFrameworkSupport::DatumPoint::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x206d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6427)
inline HRESULT TGFrameworkSupport::DatumPoint::Copy ( ) {
    return _com_dispatch_method(this, 0x6001200a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6428)
inline HRESULT TGFrameworkSupport::DatumPoint::Cut ( ) {
    return _com_dispatch_method(this, 0x6001200b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6429)
inline HRESULT TGFrameworkSupport::DatumPoint::Delete ( ) {
    return _com_dispatch_method(this, 0x6001200c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6430)
inline HRESULT TGFrameworkSupport::DatumPoint::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    return _com_dispatch_method(this, 0x6001200d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", XFrom, YFrom, XTo, YTo);
}

#pragma implementation_key(6431)
inline HRESULT TGFrameworkSupport::DatumPoint::Scale ( double Factor ) {
    return _com_dispatch_method(this, 0x6001200e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Factor);
}

#pragma implementation_key(6432)
inline HRESULT TGFrameworkSupport::DatumPoint::Rotate ( double Angle, double x, double y ) {
    return _com_dispatch_method(this, 0x6001200f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", Angle, x, y);
}

#pragma implementation_key(6433)
inline HRESULT TGFrameworkSupport::DatumPoint::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60012011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(6434)
inline IDispatchPtr TGFrameworkSupport::DatumPoint::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60012012, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &XDistance, &YDistance);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6435)
inline IDispatchPtr TGFrameworkSupport::DatumPoint::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60012013, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x080c", x1, y1, x2, y2, &BooleanCopyFlag);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6436)
inline HRESULT TGFrameworkSupport::DatumPoint::BringToFront ( ) {
    return _com_dispatch_method(this, 0x60012014, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6437)
inline HRESULT TGFrameworkSupport::DatumPoint::BringForward ( ) {
    return _com_dispatch_method(this, 0x60012015, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6438)
inline HRESULT TGFrameworkSupport::DatumPoint::SendToBack ( ) {
    return _com_dispatch_method(this, 0x60012016, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6439)
inline HRESULT TGFrameworkSupport::DatumPoint::SendBackward ( ) {
    return _com_dispatch_method(this, 0x60012017, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6440)
inline HRESULT TGFrameworkSupport::DatumPoint::Select ( ) {
    return _com_dispatch_method(this, 0x60012018, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6441)
inline long TGFrameworkSupport::DatumPoint::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6442)
inline HRESULT TGFrameworkSupport::DatumPoint::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x6002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(6443)
inline HRESULT TGFrameworkSupport::DatumPoint::SetKeyPoint ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x6003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(6444)
inline IDispatchPtr TGFrameworkSupport::DatumPoint::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6445)
inline VARIANT_BOOL TGFrameworkSupport::DatumPoint::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(6446)
inline double TGFrameworkSupport::DatumPoint::GetTextScale ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3009, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6447)
inline void TGFrameworkSupport::DatumPoint::PutTextScale ( double _arg1 ) {
    _com_dispatch_method(this, 0x3009, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(6448)
inline void TGFrameworkSupport::DatumPoint::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x278bd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(6449)
inline _bstr_t TGFrameworkSupport::DatumPoint::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x278bd, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6450)
inline IDispatchPtr TGFrameworkSupport::DatumPoint::GetPMIPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x278be, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6451)
inline double TGFrameworkSupport::DatumPoint::GetPMITrackDistance ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x278bf, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6452)
inline void TGFrameworkSupport::DatumPoint::PutPMITrackDistance ( double _arg1 ) {
    _com_dispatch_method(this, 0x278bf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(6453)
inline void TGFrameworkSupport::DatumPoint::PutHidePMI ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x278c0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(6454)
inline VARIANT_BOOL TGFrameworkSupport::DatumPoint::GetHidePMI ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x278c0, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6455)
inline TGFrameworkSupport::DisplayDataPtr TGFrameworkSupport::DatumPoint::GetDisplayData ( ) {
    struct DisplayData * _result = 0;
    _com_dispatch_method(this, 0x278c1, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return DisplayDataPtr(_result, false);
}

#pragma implementation_key(6456)
inline HRESULT TGFrameworkSupport::DatumPoint::SetRectangularDatumPointWidthAndHeight ( double dWidth, double dHeight ) {
    return _com_dispatch_method(this, 0x278c2, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", dWidth, dHeight);
}

#pragma implementation_key(6457)
inline HRESULT TGFrameworkSupport::DatumPoint::GetRectangularDatumPointWidthAndHeight ( double * pdWidth, double * pdHeight ) {
    return _com_dispatch_method(this, 0x278c3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", pdWidth, pdHeight);
}

#pragma implementation_key(6458)
inline HRESULT TGFrameworkSupport::DatumPoint::PromoteToCurrentVersion ( ) {
    return _com_dispatch_method(this, 0x278c4, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6459)
inline void TGFrameworkSupport::DatumPoint::PutPMIName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x278c5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(6460)
inline _bstr_t TGFrameworkSupport::DatumPoint::GetPMIName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x278c5, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6461)
inline HRESULT TGFrameworkSupport::DatumPoint::TransformToModelCoordinates ( double InputX, double InputY, double InputZ, double * ModelX, double * ModelY, double * ModelZ ) {
    return _com_dispatch_method(this, 0x278c6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x4005\x4005\x4005", InputX, InputY, InputZ, ModelX, ModelY, ModelZ);
}

#pragma implementation_key(6462)
inline HRESULT TGFrameworkSupport::DatumPoint::GetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    return _com_dispatch_method(this, 0x278c8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009", ReferencedGeometries);
}

#pragma implementation_key(6463)
inline HRESULT TGFrameworkSupport::DatumPoint::SetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    return _com_dispatch_method(this, 0x278c7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009", ReferencedGeometries);
}

//
// interface _IDatumPointsAuto wrapper method implementations
//

#pragma implementation_key(6464)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IDatumPointsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(6465)
inline long TGFrameworkSupport::_IDatumPointsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6466)
inline IDispatchPtr TGFrameworkSupport::_IDatumPointsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6467)
inline TGFrameworkSupport::DatumPointPtr TGFrameworkSupport::_IDatumPointsAuto::Item ( const _variant_t & Index ) {
    struct DatumPoint * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DatumPointPtr(_result, false);
}

#pragma implementation_key(6468)
inline IUnknownPtr TGFrameworkSupport::_IDatumPointsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(6469)
inline void TGFrameworkSupport::_IDatumPointsAuto::PutPlane ( IDispatch * Plane ) {
    HRESULT _hr = put_Plane(Plane);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6470)
inline IDispatchPtr TGFrameworkSupport::_IDatumPointsAuto::GetPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Plane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6471)
inline void TGFrameworkSupport::_IDatumPointsAuto::PutStyle ( struct DimensionStyle * Style ) {
    HRESULT _hr = put_Style(Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6472)
inline TGFrameworkSupport::DimensionStylePtr TGFrameworkSupport::_IDatumPointsAuto::GetStyle ( ) {
    struct DimensionStyle * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionStylePtr(_result, false);
}

#pragma implementation_key(6473)
inline void TGFrameworkSupport::_IDatumPointsAuto::PutAxis ( IDispatch * Axis ) {
    HRESULT _hr = put_Axis(Axis);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6474)
inline IDispatchPtr TGFrameworkSupport::_IDatumPointsAuto::GetAxis ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Axis(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6475)
inline TGFrameworkSupport::DatumPointPtr TGFrameworkSupport::_IDatumPointsAuto::Add ( double x1, double y1, double z1 ) {
    struct DatumPoint * _result = 0;
    HRESULT _hr = raw_Add(x1, y1, z1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DatumPointPtr(_result, false);
}

#pragma implementation_key(6476)
inline TGFrameworkSupport::DatumPointPtr TGFrameworkSupport::_IDatumPointsAuto::AddByElement ( IDispatch * TerminatorObject, double x1, double y1, double z1, VARIANT_BOOL keyPoint1 ) {
    struct DatumPoint * _result = 0;
    HRESULT _hr = raw_AddByElement(TerminatorObject, x1, y1, z1, keyPoint1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DatumPointPtr(_result, false);
}

#pragma implementation_key(6477)
inline HRESULT TGFrameworkSupport::_IDatumPointsAuto::ClearPlane ( ) {
    HRESULT _hr = raw_ClearPlane();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6478)
inline HRESULT TGFrameworkSupport::_IDatumPointsAuto::ClearStyle ( ) {
    HRESULT _hr = raw_ClearStyle();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6479)
inline TGFrameworkSupport::AnnotInitDataPtr TGFrameworkSupport::_IDatumPointsAuto::GetAnnotInitData ( ) {
    struct AnnotInitData * _result = 0;
    HRESULT _hr = get_AnnotInitData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AnnotInitDataPtr(_result, false);
}

#pragma implementation_key(6480)
inline TGFrameworkSupport::DatumPointPtr TGFrameworkSupport::_IDatumPointsAuto::AddDatumPoint ( struct AnnotInitData * AnnotInitData ) {
    struct DatumPoint * _result = 0;
    HRESULT _hr = raw_AddDatumPoint(AnnotInitData, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DatumPointPtr(_result, false);
}

//
// interface _IDatumPointAuto wrapper method implementations
//

#pragma implementation_key(6481)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::_IDatumPointAuto::GetStyle ( ) {
    struct DimStyle * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimStylePtr(_result, false);
}

#pragma implementation_key(6482)
inline IDispatchPtr TGFrameworkSupport::_IDatumPointAuto::GetPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Plane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6483)
inline double TGFrameworkSupport::_IDatumPointAuto::GetAreaSize ( ) {
    double _result = 0;
    HRESULT _hr = get_AreaSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6484)
inline void TGFrameworkSupport::_IDatumPointAuto::PutAreaSize ( double Size ) {
    HRESULT _hr = put_AreaSize(Size);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6485)
inline enum TGFrameworkSupport::DimDatumPointTypeConstants TGFrameworkSupport::_IDatumPointAuto::GetPointType ( ) {
    enum DimDatumPointTypeConstants _result;
    HRESULT _hr = get_PointType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6486)
inline void TGFrameworkSupport::_IDatumPointAuto::PutPointType ( enum DimDatumPointTypeConstants Size ) {
    HRESULT _hr = put_PointType(Size);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6487)
inline HRESULT TGFrameworkSupport::_IDatumPointAuto::SetElement ( IDispatch * CenterObj, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    HRESULT _hr = raw_SetElement(CenterObj, x, y, z, keyPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6488)
inline HRESULT TGFrameworkSupport::_IDatumPointAuto::GetElement ( IDispatch * * CenterObj, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    HRESULT _hr = raw_GetElement(CenterObj, x, y, z, keyPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6489)
inline HRESULT TGFrameworkSupport::_IDatumPointAuto::SetCenter ( double x, double y, double z ) {
    HRESULT _hr = raw_SetCenter(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6490)
inline HRESULT TGFrameworkSupport::_IDatumPointAuto::GetCenter ( double * x, double * y, double * z ) {
    HRESULT _hr = raw_GetCenter(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6491)
inline HRESULT TGFrameworkSupport::_IDatumPointAuto::SetFreeSpacePoint ( double x, double y, double z ) {
    HRESULT _hr = raw_SetFreeSpacePoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6492)
inline HRESULT TGFrameworkSupport::_IDatumPointAuto::GetFreeSpacePoint ( double * x, double * y, double * z ) {
    HRESULT _hr = raw_GetFreeSpacePoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6493)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IDatumPointAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(6494)
inline long TGFrameworkSupport::_IDatumPointAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6495)
inline _bstr_t TGFrameworkSupport::_IDatumPointAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6496)
inline IDispatchPtr TGFrameworkSupport::_IDatumPointAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6497)
inline long TGFrameworkSupport::_IDatumPointAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6498)
inline long TGFrameworkSupport::_IDatumPointAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6499)
inline _bstr_t TGFrameworkSupport::_IDatumPointAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6500)
inline IDispatchPtr TGFrameworkSupport::_IDatumPointAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6501)
inline HRESULT TGFrameworkSupport::_IDatumPointAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6502)
inline HRESULT TGFrameworkSupport::_IDatumPointAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6503)
inline HRESULT TGFrameworkSupport::_IDatumPointAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6504)
inline HRESULT TGFrameworkSupport::_IDatumPointAuto::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    HRESULT _hr = raw_Move(XFrom, YFrom, XTo, YTo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6505)
inline HRESULT TGFrameworkSupport::_IDatumPointAuto::Scale ( double Factor ) {
    HRESULT _hr = raw_Scale(Factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6506)
inline HRESULT TGFrameworkSupport::_IDatumPointAuto::Rotate ( double Angle, double x, double y ) {
    HRESULT _hr = raw_Rotate(Angle, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6507)
inline HRESULT TGFrameworkSupport::_IDatumPointAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6508)
inline IDispatchPtr TGFrameworkSupport::_IDatumPointAuto::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Duplicate(XDistance, YDistance, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6509)
inline IDispatchPtr TGFrameworkSupport::_IDatumPointAuto::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Mirror(x1, y1, x2, y2, BooleanCopyFlag, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6510)
inline HRESULT TGFrameworkSupport::_IDatumPointAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6511)
inline HRESULT TGFrameworkSupport::_IDatumPointAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6512)
inline HRESULT TGFrameworkSupport::_IDatumPointAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6513)
inline HRESULT TGFrameworkSupport::_IDatumPointAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6514)
inline HRESULT TGFrameworkSupport::_IDatumPointAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6515)
inline long TGFrameworkSupport::_IDatumPointAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6516)
inline HRESULT TGFrameworkSupport::_IDatumPointAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6517)
inline HRESULT TGFrameworkSupport::_IDatumPointAuto::SetKeyPoint ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetKeyPoint(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6518)
inline IDispatchPtr TGFrameworkSupport::_IDatumPointAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6519)
inline VARIANT_BOOL TGFrameworkSupport::_IDatumPointAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6520)
inline double TGFrameworkSupport::_IDatumPointAuto::GetTextScale ( ) {
    double _result = 0;
    HRESULT _hr = get_TextScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6521)
inline void TGFrameworkSupport::_IDatumPointAuto::PutTextScale ( double pdAngle ) {
    HRESULT _hr = put_TextScale(pdAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6522)
inline void TGFrameworkSupport::_IDatumPointAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6523)
inline _bstr_t TGFrameworkSupport::_IDatumPointAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6524)
inline IDispatchPtr TGFrameworkSupport::_IDatumPointAuto::GetPMIPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_PMIPlane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6525)
inline double TGFrameworkSupport::_IDatumPointAuto::GetPMITrackDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_PMITrackDistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6526)
inline void TGFrameworkSupport::_IDatumPointAuto::PutPMITrackDistance ( double pdPMITrackDistance ) {
    HRESULT _hr = put_PMITrackDistance(pdPMITrackDistance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6527)
inline void TGFrameworkSupport::_IDatumPointAuto::PutHidePMI ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_HidePMI(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6528)
inline VARIANT_BOOL TGFrameworkSupport::_IDatumPointAuto::GetHidePMI ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HidePMI(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6529)
inline TGFrameworkSupport::DisplayDataPtr TGFrameworkSupport::_IDatumPointAuto::GetDisplayData ( ) {
    struct DisplayData * _result = 0;
    HRESULT _hr = raw_GetDisplayData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DisplayDataPtr(_result, false);
}

#pragma implementation_key(6530)
inline HRESULT TGFrameworkSupport::_IDatumPointAuto::SetRectangularDatumPointWidthAndHeight ( double dWidth, double dHeight ) {
    HRESULT _hr = raw_SetRectangularDatumPointWidthAndHeight(dWidth, dHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6531)
inline HRESULT TGFrameworkSupport::_IDatumPointAuto::GetRectangularDatumPointWidthAndHeight ( double * pdWidth, double * pdHeight ) {
    HRESULT _hr = raw_GetRectangularDatumPointWidthAndHeight(pdWidth, pdHeight);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6532)
inline HRESULT TGFrameworkSupport::_IDatumPointAuto::PromoteToCurrentVersion ( ) {
    HRESULT _hr = raw_PromoteToCurrentVersion();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6533)
inline void TGFrameworkSupport::_IDatumPointAuto::PutPMIName ( _bstr_t Text ) {
    HRESULT _hr = put_PMIName(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6534)
inline _bstr_t TGFrameworkSupport::_IDatumPointAuto::GetPMIName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PMIName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6535)
inline HRESULT TGFrameworkSupport::_IDatumPointAuto::TransformToModelCoordinates ( double InputX, double InputY, double InputZ, double * ModelX, double * ModelY, double * ModelZ ) {
    HRESULT _hr = raw_TransformToModelCoordinates(InputX, InputY, InputZ, ModelX, ModelY, ModelZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6536)
inline HRESULT TGFrameworkSupport::_IDatumPointAuto::GetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    HRESULT _hr = raw_GetReferencedGeometry(ReferencedGeometries);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6537)
inline HRESULT TGFrameworkSupport::_IDatumPointAuto::SetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    HRESULT _hr = raw_SetReferencedGeometry(ReferencedGeometries);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface CornerAnnotations wrapper method implementations
//

#pragma implementation_key(6538)
inline TGFramework::ApplicationPtr TGFrameworkSupport::CornerAnnotations::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(6539)
inline long TGFrameworkSupport::CornerAnnotations::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6540)
inline IDispatchPtr TGFrameworkSupport::CornerAnnotations::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6541)
inline TGFrameworkSupport::CornerAnnotationPtr TGFrameworkSupport::CornerAnnotations::Item ( const _variant_t & Index ) {
    struct CornerAnnotation * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return CornerAnnotationPtr(_result, false);
}

#pragma implementation_key(6542)
inline void TGFrameworkSupport::CornerAnnotations::PutPlane ( IDispatch * _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(6543)
inline IDispatchPtr TGFrameworkSupport::CornerAnnotations::GetPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6544)
inline void TGFrameworkSupport::CornerAnnotations::PutStyle ( struct DimensionStyle * _arg1 ) {
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(6545)
inline TGFrameworkSupport::DimensionStylePtr TGFrameworkSupport::CornerAnnotations::GetStyle ( ) {
    struct DimensionStyle * _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DimensionStylePtr(_result, false);
}

#pragma implementation_key(6546)
inline TGFrameworkSupport::CornerAnnotationPtr TGFrameworkSupport::CornerAnnotations::Add ( double x1, double y1, double z1 ) {
    struct CornerAnnotation * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005", x1, y1, z1);
    return CornerAnnotationPtr(_result, false);
}

#pragma implementation_key(6547)
inline TGFrameworkSupport::CornerAnnotationPtr TGFrameworkSupport::CornerAnnotations::AddByTerminator ( IDispatch * TerminatorObject, double x1, double y1, double z1, VARIANT_BOOL keyPoint1 ) {
    struct CornerAnnotation * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x000b", TerminatorObject, x1, y1, z1, keyPoint1);
    return CornerAnnotationPtr(_result, false);
}

#pragma implementation_key(6548)
inline HRESULT TGFrameworkSupport::CornerAnnotations::ClearPlane ( ) {
    return _com_dispatch_method(this, 0x78, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6549)
inline HRESULT TGFrameworkSupport::CornerAnnotations::ClearStyle ( ) {
    return _com_dispatch_method(this, 0x79, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6550)
inline TGFrameworkSupport::AnnotInitDataPtr TGFrameworkSupport::CornerAnnotations::GetAnnotInitData ( ) {
    struct AnnotInitData * _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AnnotInitDataPtr(_result, false);
}

#pragma implementation_key(6551)
inline TGFrameworkSupport::CornerAnnotationPtr TGFrameworkSupport::CornerAnnotations::AddCornerAnnotation ( struct AnnotInitData * AnnotInitData ) {
    struct CornerAnnotation * _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", AnnotInitData);
    return CornerAnnotationPtr(_result, false);
}

//
// dispinterface CornerAnnotation wrapper method implementations
//

#pragma implementation_key(6552)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::CornerAnnotation::GetStyle ( ) {
    struct DimStyle * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DimStylePtr(_result, false);
}

#pragma implementation_key(6553)
inline HRESULT TGFrameworkSupport::CornerAnnotation::SetTerminator ( IDispatch * TerminatorObj, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    return _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0005\x0005\x0005\x000b", TerminatorObj, x, y, z, keyPoint);
}

#pragma implementation_key(6554)
inline HRESULT TGFrameworkSupport::CornerAnnotation::GetTerminator ( IDispatch * * TerminatorObj, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    return _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4005\x4005\x4005\x400b", TerminatorObj, x, y, z, keyPoint);
}

#pragma implementation_key(6555)
inline HRESULT TGFrameworkSupport::CornerAnnotation::SetFreeSpacePoint ( double x, double y, double z ) {
    return _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", x, y, z);
}

#pragma implementation_key(6556)
inline HRESULT TGFrameworkSupport::CornerAnnotation::GetFreeSpacePoint ( double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005", x, y, z);
}

#pragma implementation_key(6557)
inline IDispatchPtr TGFrameworkSupport::CornerAnnotation::GetPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6558)
inline TGFramework::ApplicationPtr TGFrameworkSupport::CornerAnnotation::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(6559)
inline long TGFrameworkSupport::CornerAnnotation::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1066, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6560)
inline _bstr_t TGFrameworkSupport::CornerAnnotation::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1067, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6561)
inline IDispatchPtr TGFrameworkSupport::CornerAnnotation::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1068, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6562)
inline long TGFrameworkSupport::CornerAnnotation::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1069, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6563)
inline long TGFrameworkSupport::CornerAnnotation::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x106b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6564)
inline _bstr_t TGFrameworkSupport::CornerAnnotation::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x106c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6565)
inline IDispatchPtr TGFrameworkSupport::CornerAnnotation::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x106d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6566)
inline HRESULT TGFrameworkSupport::CornerAnnotation::Copy ( ) {
    return _com_dispatch_method(this, 0x6001100a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6567)
inline HRESULT TGFrameworkSupport::CornerAnnotation::Cut ( ) {
    return _com_dispatch_method(this, 0x6001100b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6568)
inline HRESULT TGFrameworkSupport::CornerAnnotation::Delete ( ) {
    return _com_dispatch_method(this, 0x6001100c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6569)
inline HRESULT TGFrameworkSupport::CornerAnnotation::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    return _com_dispatch_method(this, 0x6001100d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", XFrom, YFrom, XTo, YTo);
}

#pragma implementation_key(6570)
inline HRESULT TGFrameworkSupport::CornerAnnotation::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60011011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(6571)
inline IDispatchPtr TGFrameworkSupport::CornerAnnotation::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60011012, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &XDistance, &YDistance);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6572)
inline HRESULT TGFrameworkSupport::CornerAnnotation::BringToFront ( ) {
    return _com_dispatch_method(this, 0x60011014, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6573)
inline HRESULT TGFrameworkSupport::CornerAnnotation::BringForward ( ) {
    return _com_dispatch_method(this, 0x60011015, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6574)
inline HRESULT TGFrameworkSupport::CornerAnnotation::SendToBack ( ) {
    return _com_dispatch_method(this, 0x60011016, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6575)
inline HRESULT TGFrameworkSupport::CornerAnnotation::SendBackward ( ) {
    return _com_dispatch_method(this, 0x60011017, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6576)
inline HRESULT TGFrameworkSupport::CornerAnnotation::Select ( ) {
    return _com_dispatch_method(this, 0x60011018, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6577)
inline double TGFrameworkSupport::CornerAnnotation::GetBreakLineDistance ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3004, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6578)
inline void TGFrameworkSupport::CornerAnnotation::PutBreakLineDistance ( double _arg1 ) {
    _com_dispatch_method(this, 0x3004, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(6579)
inline VARIANT_BOOL TGFrameworkSupport::CornerAnnotation::GetBreakLine ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3005, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6580)
inline void TGFrameworkSupport::CornerAnnotation::PutBreakLine ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3005, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(6581)
inline VARIANT_BOOL TGFrameworkSupport::CornerAnnotation::GetBreakLineDirection ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3006, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6582)
inline void TGFrameworkSupport::CornerAnnotation::PutBreakLineDirection ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3006, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(6583)
inline VARIANT_BOOL TGFrameworkSupport::CornerAnnotation::GetLeader ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3007, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6584)
inline void TGFrameworkSupport::CornerAnnotation::PutLeader ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x3007, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(6585)
inline long TGFrameworkSupport::CornerAnnotation::GetVertexCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3003, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6586)
inline HRESULT TGFrameworkSupport::CornerAnnotation::GetVertices ( long * VertexCount, SAFEARRAY * * Vertices ) {
    return _com_dispatch_method(this, 0x60013009, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6005", VertexCount, Vertices);
}

#pragma implementation_key(6587)
inline HRESULT TGFrameworkSupport::CornerAnnotation::SetVertices ( long VertexCount, SAFEARRAY * * Vertices ) {
    return _com_dispatch_method(this, 0x6001300a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6005", VertexCount, Vertices);
}

#pragma implementation_key(6588)
inline HRESULT TGFrameworkSupport::CornerAnnotation::GetVertex ( long Index, double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0x6001300b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005", Index, x, y, z);
}

#pragma implementation_key(6589)
inline HRESULT TGFrameworkSupport::CornerAnnotation::SetVertex ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x6001300c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(6590)
inline HRESULT TGFrameworkSupport::CornerAnnotation::InsertVertex ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x6001300d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(6591)
inline HRESULT TGFrameworkSupport::CornerAnnotation::AddVertex ( double x, double y, double z ) {
    return _com_dispatch_method(this, 0x6001300e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", x, y, z);
}

#pragma implementation_key(6592)
inline HRESULT TGFrameworkSupport::CornerAnnotation::RemoveVertex ( long Index ) {
    return _com_dispatch_method(this, 0x6001300f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Index);
}

#pragma implementation_key(6593)
inline long TGFrameworkSupport::CornerAnnotation::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6594)
inline HRESULT TGFrameworkSupport::CornerAnnotation::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x4002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(6595)
inline HRESULT TGFrameworkSupport::CornerAnnotation::SetKeyPoint ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x4003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(6596)
inline IDispatchPtr TGFrameworkSupport::CornerAnnotation::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6597)
inline VARIANT_BOOL TGFrameworkSupport::CornerAnnotation::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(6598)
inline double TGFrameworkSupport::CornerAnnotation::GetTextScale ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3009, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6599)
inline void TGFrameworkSupport::CornerAnnotation::PutTextScale ( double _arg1 ) {
    _com_dispatch_method(this, 0x3009, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(6600)
inline void TGFrameworkSupport::CornerAnnotation::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x278be, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(6601)
inline _bstr_t TGFrameworkSupport::CornerAnnotation::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x278be, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6602)
inline IDispatchPtr TGFrameworkSupport::CornerAnnotation::GetPMIPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x278bf, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6603)
inline double TGFrameworkSupport::CornerAnnotation::GetPMITrackDistance ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x278c0, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6604)
inline void TGFrameworkSupport::CornerAnnotation::PutPMITrackDistance ( double _arg1 ) {
    _com_dispatch_method(this, 0x278c0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(6605)
inline void TGFrameworkSupport::CornerAnnotation::PutUpperToleranceForClassicSymbol ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x278c1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(6606)
inline _bstr_t TGFrameworkSupport::CornerAnnotation::GetUpperToleranceForClassicSymbol ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x278c1, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6607)
inline void TGFrameworkSupport::CornerAnnotation::PutLowerToleranceForClassicSymbol ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x278c2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(6608)
inline _bstr_t TGFrameworkSupport::CornerAnnotation::GetLowerToleranceForClassicSymbol ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x278c2, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6609)
inline void TGFrameworkSupport::CornerAnnotation::PutUpperToleranceForEnhancedSymbol ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x278c3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(6610)
inline _bstr_t TGFrameworkSupport::CornerAnnotation::GetUpperToleranceForEnhancedSymbol ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x278c3, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6611)
inline void TGFrameworkSupport::CornerAnnotation::PutLowerToleranceForEnhancedSymbol ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x278c4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(6612)
inline _bstr_t TGFrameworkSupport::CornerAnnotation::GetLowerToleranceForEnhancedSymbol ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x278c4, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6613)
inline void TGFrameworkSupport::CornerAnnotation::PutDirection1Tolerance ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x278c5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(6614)
inline _bstr_t TGFrameworkSupport::CornerAnnotation::GetDirection1Tolerance ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x278c5, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6615)
inline void TGFrameworkSupport::CornerAnnotation::PutDirection2Tolerance ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x278c6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(6616)
inline _bstr_t TGFrameworkSupport::CornerAnnotation::GetDirection2Tolerance ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x278c6, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6617)
inline void TGFrameworkSupport::CornerAnnotation::PutAllAround ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x278c7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(6618)
inline VARIANT_BOOL TGFrameworkSupport::CornerAnnotation::GetAllAround ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x278c7, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6619)
inline void TGFrameworkSupport::CornerAnnotation::PutNoTextOnSymbol ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x278c8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(6620)
inline VARIANT_BOOL TGFrameworkSupport::CornerAnnotation::GetNoTextOnSymbol ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x278c8, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6621)
inline void TGFrameworkSupport::CornerAnnotation::PutUseISODIN2000CornerAnnot ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x278c9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(6622)
inline VARIANT_BOOL TGFrameworkSupport::CornerAnnotation::GetUseISODIN2000CornerAnnot ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x278c9, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6623)
inline void TGFrameworkSupport::CornerAnnotation::PutHidePMI ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x278ca, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(6624)
inline VARIANT_BOOL TGFrameworkSupport::CornerAnnotation::GetHidePMI ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x278ca, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6625)
inline TGFrameworkSupport::DisplayDataPtr TGFrameworkSupport::CornerAnnotation::GetDisplayData ( ) {
    struct DisplayData * _result = 0;
    _com_dispatch_method(this, 0x278cb, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return DisplayDataPtr(_result, false);
}

#pragma implementation_key(6626)
inline HRESULT TGFrameworkSupport::CornerAnnotation::PromoteToCurrentVersion ( ) {
    return _com_dispatch_method(this, 0x278cc, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6627)
inline HRESULT TGFrameworkSupport::CornerAnnotation::SetAlignmentShape ( IDispatch * AlignmentShapeObj, double x, double y ) {
    return _com_dispatch_method(this, 0x278cd, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0005\x0005", AlignmentShapeObj, x, y);
}

#pragma implementation_key(6628)
inline HRESULT TGFrameworkSupport::CornerAnnotation::GetAlignmentShape ( IDispatch * * AlignmentShapeObj, double * x, double * y ) {
    return _com_dispatch_method(this, 0x278ce, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4005\x4005", AlignmentShapeObj, x, y);
}

#pragma implementation_key(6629)
inline void TGFrameworkSupport::CornerAnnotation::PutPMIName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x278cf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(6630)
inline _bstr_t TGFrameworkSupport::CornerAnnotation::GetPMIName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x278cf, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6631)
inline HRESULT TGFrameworkSupport::CornerAnnotation::TransformToModelCoordinates ( double InputX, double InputY, double InputZ, double * ModelX, double * ModelY, double * ModelZ ) {
    return _com_dispatch_method(this, 0x278d0, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x4005\x4005\x4005", InputX, InputY, InputZ, ModelX, ModelY, ModelZ);
}

#pragma implementation_key(6632)
inline VARIANT_BOOL TGFrameworkSupport::CornerAnnotation::GetIsTerminatorAttachedToEntity ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x278d1, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6633)
inline HRESULT TGFrameworkSupport::CornerAnnotation::GetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    return _com_dispatch_method(this, 0x278d3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009", ReferencedGeometries);
}

#pragma implementation_key(6634)
inline HRESULT TGFrameworkSupport::CornerAnnotation::SetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    return _com_dispatch_method(this, 0x278d2, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009", ReferencedGeometries);
}

//
// interface _ICornerAnnotationsAuto wrapper method implementations
//

#pragma implementation_key(6635)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_ICornerAnnotationsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(6636)
inline long TGFrameworkSupport::_ICornerAnnotationsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6637)
inline IDispatchPtr TGFrameworkSupport::_ICornerAnnotationsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6638)
inline TGFrameworkSupport::CornerAnnotationPtr TGFrameworkSupport::_ICornerAnnotationsAuto::Item ( const _variant_t & Index ) {
    struct CornerAnnotation * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CornerAnnotationPtr(_result, false);
}

#pragma implementation_key(6639)
inline IUnknownPtr TGFrameworkSupport::_ICornerAnnotationsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(6640)
inline void TGFrameworkSupport::_ICornerAnnotationsAuto::PutPlane ( IDispatch * Plane ) {
    HRESULT _hr = put_Plane(Plane);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6641)
inline IDispatchPtr TGFrameworkSupport::_ICornerAnnotationsAuto::GetPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Plane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6642)
inline void TGFrameworkSupport::_ICornerAnnotationsAuto::PutStyle ( struct DimensionStyle * Style ) {
    HRESULT _hr = put_Style(Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6643)
inline TGFrameworkSupport::DimensionStylePtr TGFrameworkSupport::_ICornerAnnotationsAuto::GetStyle ( ) {
    struct DimensionStyle * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionStylePtr(_result, false);
}

#pragma implementation_key(6644)
inline TGFrameworkSupport::CornerAnnotationPtr TGFrameworkSupport::_ICornerAnnotationsAuto::Add ( double x1, double y1, double z1 ) {
    struct CornerAnnotation * _result = 0;
    HRESULT _hr = raw_Add(x1, y1, z1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CornerAnnotationPtr(_result, false);
}

#pragma implementation_key(6645)
inline TGFrameworkSupport::CornerAnnotationPtr TGFrameworkSupport::_ICornerAnnotationsAuto::AddByTerminator ( IDispatch * TerminatorObject, double x1, double y1, double z1, VARIANT_BOOL keyPoint1 ) {
    struct CornerAnnotation * _result = 0;
    HRESULT _hr = raw_AddByTerminator(TerminatorObject, x1, y1, z1, keyPoint1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CornerAnnotationPtr(_result, false);
}

#pragma implementation_key(6646)
inline HRESULT TGFrameworkSupport::_ICornerAnnotationsAuto::ClearPlane ( ) {
    HRESULT _hr = raw_ClearPlane();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6647)
inline HRESULT TGFrameworkSupport::_ICornerAnnotationsAuto::ClearStyle ( ) {
    HRESULT _hr = raw_ClearStyle();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6648)
inline TGFrameworkSupport::AnnotInitDataPtr TGFrameworkSupport::_ICornerAnnotationsAuto::GetAnnotInitData ( ) {
    struct AnnotInitData * _result = 0;
    HRESULT _hr = get_AnnotInitData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AnnotInitDataPtr(_result, false);
}

#pragma implementation_key(6649)
inline TGFrameworkSupport::CornerAnnotationPtr TGFrameworkSupport::_ICornerAnnotationsAuto::AddCornerAnnotation ( struct AnnotInitData * AnnotInitData ) {
    struct CornerAnnotation * _result = 0;
    HRESULT _hr = raw_AddCornerAnnotation(AnnotInitData, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CornerAnnotationPtr(_result, false);
}

//
// interface _ICornerAnnotationAuto wrapper method implementations
//

#pragma implementation_key(6650)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::_ICornerAnnotationAuto::GetStyle ( ) {
    struct DimStyle * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimStylePtr(_result, false);
}

#pragma implementation_key(6651)
inline HRESULT TGFrameworkSupport::_ICornerAnnotationAuto::SetTerminator ( IDispatch * TerminatorObj, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    HRESULT _hr = raw_SetTerminator(TerminatorObj, x, y, z, keyPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6652)
inline HRESULT TGFrameworkSupport::_ICornerAnnotationAuto::GetTerminator ( IDispatch * * TerminatorObj, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    HRESULT _hr = raw_GetTerminator(TerminatorObj, x, y, z, keyPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6653)
inline HRESULT TGFrameworkSupport::_ICornerAnnotationAuto::SetFreeSpacePoint ( double x, double y, double z ) {
    HRESULT _hr = raw_SetFreeSpacePoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6654)
inline HRESULT TGFrameworkSupport::_ICornerAnnotationAuto::GetFreeSpacePoint ( double * x, double * y, double * z ) {
    HRESULT _hr = raw_GetFreeSpacePoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6655)
inline IDispatchPtr TGFrameworkSupport::_ICornerAnnotationAuto::GetPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Plane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6656)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_ICornerAnnotationAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(6657)
inline long TGFrameworkSupport::_ICornerAnnotationAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6658)
inline _bstr_t TGFrameworkSupport::_ICornerAnnotationAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6659)
inline IDispatchPtr TGFrameworkSupport::_ICornerAnnotationAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6660)
inline long TGFrameworkSupport::_ICornerAnnotationAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6661)
inline long TGFrameworkSupport::_ICornerAnnotationAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6662)
inline _bstr_t TGFrameworkSupport::_ICornerAnnotationAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6663)
inline IDispatchPtr TGFrameworkSupport::_ICornerAnnotationAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6664)
inline HRESULT TGFrameworkSupport::_ICornerAnnotationAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6665)
inline HRESULT TGFrameworkSupport::_ICornerAnnotationAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6666)
inline HRESULT TGFrameworkSupport::_ICornerAnnotationAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6667)
inline HRESULT TGFrameworkSupport::_ICornerAnnotationAuto::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    HRESULT _hr = raw_Move(XFrom, YFrom, XTo, YTo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6668)
inline HRESULT TGFrameworkSupport::_ICornerAnnotationAuto::Scale ( double Factor ) {
    HRESULT _hr = raw_Scale(Factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6669)
inline HRESULT TGFrameworkSupport::_ICornerAnnotationAuto::Rotate ( double Angle, double x, double y ) {
    HRESULT _hr = raw_Rotate(Angle, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6670)
inline HRESULT TGFrameworkSupport::_ICornerAnnotationAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6671)
inline IDispatchPtr TGFrameworkSupport::_ICornerAnnotationAuto::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Duplicate(XDistance, YDistance, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6672)
inline IDispatchPtr TGFrameworkSupport::_ICornerAnnotationAuto::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Mirror(x1, y1, x2, y2, BooleanCopyFlag, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6673)
inline HRESULT TGFrameworkSupport::_ICornerAnnotationAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6674)
inline HRESULT TGFrameworkSupport::_ICornerAnnotationAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6675)
inline HRESULT TGFrameworkSupport::_ICornerAnnotationAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6676)
inline HRESULT TGFrameworkSupport::_ICornerAnnotationAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6677)
inline HRESULT TGFrameworkSupport::_ICornerAnnotationAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6678)
inline double TGFrameworkSupport::_ICornerAnnotationAuto::GetBreakLineDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_BreakLineDistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6679)
inline void TGFrameworkSupport::_ICornerAnnotationAuto::PutBreakLineDistance ( double Distance ) {
    HRESULT _hr = put_BreakLineDistance(Distance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6680)
inline VARIANT_BOOL TGFrameworkSupport::_ICornerAnnotationAuto::GetBreakLine ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BreakLine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6681)
inline void TGFrameworkSupport::_ICornerAnnotationAuto::PutBreakLine ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_BreakLine(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6682)
inline VARIANT_BOOL TGFrameworkSupport::_ICornerAnnotationAuto::GetBreakLineDirection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BreakLineDirection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6683)
inline void TGFrameworkSupport::_ICornerAnnotationAuto::PutBreakLineDirection ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_BreakLineDirection(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6684)
inline VARIANT_BOOL TGFrameworkSupport::_ICornerAnnotationAuto::GetLeader ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Leader(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6685)
inline void TGFrameworkSupport::_ICornerAnnotationAuto::PutLeader ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_Leader(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6686)
inline long TGFrameworkSupport::_ICornerAnnotationAuto::GetVertexCount ( ) {
    long _result = 0;
    HRESULT _hr = get_VertexCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6687)
inline HRESULT TGFrameworkSupport::_ICornerAnnotationAuto::GetVertices ( long * VertexCount, SAFEARRAY * * Vertices ) {
    HRESULT _hr = raw_GetVertices(VertexCount, Vertices);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6688)
inline HRESULT TGFrameworkSupport::_ICornerAnnotationAuto::SetVertices ( long VertexCount, SAFEARRAY * * Vertices ) {
    HRESULT _hr = raw_SetVertices(VertexCount, Vertices);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6689)
inline HRESULT TGFrameworkSupport::_ICornerAnnotationAuto::GetVertex ( long Index, double * x, double * y, double * z ) {
    HRESULT _hr = raw_GetVertex(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6690)
inline HRESULT TGFrameworkSupport::_ICornerAnnotationAuto::SetVertex ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetVertex(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6691)
inline HRESULT TGFrameworkSupport::_ICornerAnnotationAuto::InsertVertex ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_InsertVertex(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6692)
inline HRESULT TGFrameworkSupport::_ICornerAnnotationAuto::AddVertex ( double x, double y, double z ) {
    HRESULT _hr = raw_AddVertex(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6693)
inline HRESULT TGFrameworkSupport::_ICornerAnnotationAuto::RemoveVertex ( long Index ) {
    HRESULT _hr = raw_RemoveVertex(Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6694)
inline long TGFrameworkSupport::_ICornerAnnotationAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6695)
inline HRESULT TGFrameworkSupport::_ICornerAnnotationAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6696)
inline HRESULT TGFrameworkSupport::_ICornerAnnotationAuto::SetKeyPoint ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetKeyPoint(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6697)
inline IDispatchPtr TGFrameworkSupport::_ICornerAnnotationAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6698)
inline VARIANT_BOOL TGFrameworkSupport::_ICornerAnnotationAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6699)
inline double TGFrameworkSupport::_ICornerAnnotationAuto::GetTextScale ( ) {
    double _result = 0;
    HRESULT _hr = get_TextScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6700)
inline void TGFrameworkSupport::_ICornerAnnotationAuto::PutTextScale ( double pdAngle ) {
    HRESULT _hr = put_TextScale(pdAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6701)
inline void TGFrameworkSupport::_ICornerAnnotationAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6702)
inline _bstr_t TGFrameworkSupport::_ICornerAnnotationAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6703)
inline IDispatchPtr TGFrameworkSupport::_ICornerAnnotationAuto::GetPMIPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_PMIPlane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6704)
inline double TGFrameworkSupport::_ICornerAnnotationAuto::GetPMITrackDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_PMITrackDistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6705)
inline void TGFrameworkSupport::_ICornerAnnotationAuto::PutPMITrackDistance ( double pdPMITrackDistance ) {
    HRESULT _hr = put_PMITrackDistance(pdPMITrackDistance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6706)
inline void TGFrameworkSupport::_ICornerAnnotationAuto::PutUpperToleranceForClassicSymbol ( _bstr_t Text ) {
    HRESULT _hr = put_UpperToleranceForClassicSymbol(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6707)
inline _bstr_t TGFrameworkSupport::_ICornerAnnotationAuto::GetUpperToleranceForClassicSymbol ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_UpperToleranceForClassicSymbol(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6708)
inline void TGFrameworkSupport::_ICornerAnnotationAuto::PutLowerToleranceForClassicSymbol ( _bstr_t Text ) {
    HRESULT _hr = put_LowerToleranceForClassicSymbol(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6709)
inline _bstr_t TGFrameworkSupport::_ICornerAnnotationAuto::GetLowerToleranceForClassicSymbol ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LowerToleranceForClassicSymbol(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6710)
inline void TGFrameworkSupport::_ICornerAnnotationAuto::PutUpperToleranceForEnhancedSymbol ( _bstr_t Text ) {
    HRESULT _hr = put_UpperToleranceForEnhancedSymbol(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6711)
inline _bstr_t TGFrameworkSupport::_ICornerAnnotationAuto::GetUpperToleranceForEnhancedSymbol ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_UpperToleranceForEnhancedSymbol(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6712)
inline void TGFrameworkSupport::_ICornerAnnotationAuto::PutLowerToleranceForEnhancedSymbol ( _bstr_t Text ) {
    HRESULT _hr = put_LowerToleranceForEnhancedSymbol(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6713)
inline _bstr_t TGFrameworkSupport::_ICornerAnnotationAuto::GetLowerToleranceForEnhancedSymbol ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LowerToleranceForEnhancedSymbol(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6714)
inline void TGFrameworkSupport::_ICornerAnnotationAuto::PutDirection1Tolerance ( _bstr_t Text ) {
    HRESULT _hr = put_Direction1Tolerance(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6715)
inline _bstr_t TGFrameworkSupport::_ICornerAnnotationAuto::GetDirection1Tolerance ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Direction1Tolerance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6716)
inline void TGFrameworkSupport::_ICornerAnnotationAuto::PutDirection2Tolerance ( _bstr_t Text ) {
    HRESULT _hr = put_Direction2Tolerance(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6717)
inline _bstr_t TGFrameworkSupport::_ICornerAnnotationAuto::GetDirection2Tolerance ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Direction2Tolerance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6718)
inline void TGFrameworkSupport::_ICornerAnnotationAuto::PutAllAround ( VARIANT_BOOL pbAllAround ) {
    HRESULT _hr = put_AllAround(pbAllAround);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6719)
inline VARIANT_BOOL TGFrameworkSupport::_ICornerAnnotationAuto::GetAllAround ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AllAround(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6720)
inline void TGFrameworkSupport::_ICornerAnnotationAuto::PutNoTextOnSymbol ( VARIANT_BOOL pbNoTextOnSymbol ) {
    HRESULT _hr = put_NoTextOnSymbol(pbNoTextOnSymbol);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6721)
inline VARIANT_BOOL TGFrameworkSupport::_ICornerAnnotationAuto::GetNoTextOnSymbol ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_NoTextOnSymbol(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6722)
inline void TGFrameworkSupport::_ICornerAnnotationAuto::PutUseISODIN2000CornerAnnot ( VARIANT_BOOL pbUseISODIN2000CornerAnnot ) {
    HRESULT _hr = put_UseISODIN2000CornerAnnot(pbUseISODIN2000CornerAnnot);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6723)
inline VARIANT_BOOL TGFrameworkSupport::_ICornerAnnotationAuto::GetUseISODIN2000CornerAnnot ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_UseISODIN2000CornerAnnot(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6724)
inline void TGFrameworkSupport::_ICornerAnnotationAuto::PutHidePMI ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_HidePMI(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6725)
inline VARIANT_BOOL TGFrameworkSupport::_ICornerAnnotationAuto::GetHidePMI ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HidePMI(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6726)
inline TGFrameworkSupport::DisplayDataPtr TGFrameworkSupport::_ICornerAnnotationAuto::GetDisplayData ( ) {
    struct DisplayData * _result = 0;
    HRESULT _hr = raw_GetDisplayData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DisplayDataPtr(_result, false);
}

#pragma implementation_key(6727)
inline HRESULT TGFrameworkSupport::_ICornerAnnotationAuto::PromoteToCurrentVersion ( ) {
    HRESULT _hr = raw_PromoteToCurrentVersion();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6728)
inline HRESULT TGFrameworkSupport::_ICornerAnnotationAuto::SetAlignmentShape ( IDispatch * AlignmentShapeObj, double x, double y ) {
    HRESULT _hr = raw_SetAlignmentShape(AlignmentShapeObj, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6729)
inline HRESULT TGFrameworkSupport::_ICornerAnnotationAuto::GetAlignmentShape ( IDispatch * * AlignmentShapeObj, double * x, double * y ) {
    HRESULT _hr = raw_GetAlignmentShape(AlignmentShapeObj, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6730)
inline void TGFrameworkSupport::_ICornerAnnotationAuto::PutPMIName ( _bstr_t Text ) {
    HRESULT _hr = put_PMIName(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6731)
inline _bstr_t TGFrameworkSupport::_ICornerAnnotationAuto::GetPMIName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PMIName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6732)
inline HRESULT TGFrameworkSupport::_ICornerAnnotationAuto::TransformToModelCoordinates ( double InputX, double InputY, double InputZ, double * ModelX, double * ModelY, double * ModelZ ) {
    HRESULT _hr = raw_TransformToModelCoordinates(InputX, InputY, InputZ, ModelX, ModelY, ModelZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6733)
inline VARIANT_BOOL TGFrameworkSupport::_ICornerAnnotationAuto::GetIsTerminatorAttachedToEntity ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsTerminatorAttachedToEntity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6734)
inline HRESULT TGFrameworkSupport::_ICornerAnnotationAuto::GetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    HRESULT _hr = raw_GetReferencedGeometry(ReferencedGeometries);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6735)
inline HRESULT TGFrameworkSupport::_ICornerAnnotationAuto::SetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    HRESULT _hr = raw_SetReferencedGeometry(ReferencedGeometries);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface BoltHoleCircles wrapper method implementations
//

#pragma implementation_key(6736)
inline TGFramework::ApplicationPtr TGFrameworkSupport::BoltHoleCircles::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(6737)
inline long TGFrameworkSupport::BoltHoleCircles::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6738)
inline IDispatchPtr TGFrameworkSupport::BoltHoleCircles::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6739)
inline TGFrameworkSupport::BoltHoleCirclePtr TGFrameworkSupport::BoltHoleCircles::Item ( const _variant_t & Index ) {
    struct BoltHoleCircle * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return BoltHoleCirclePtr(_result, false);
}

#pragma implementation_key(6740)
inline TGFrameworkSupport::BoltHoleCirclePtr TGFrameworkSupport::BoltHoleCircles::AddBoltHoleCircleBy3Points ( IDispatch * Object1, long Object1_Keypoint_Index, IDispatch * Object2, long Object2_Keypoint_Index, IDispatch * Object3, long Object3_Keypoint_Index ) {
    struct BoltHoleCircle * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0003\x0009\x0003\x0009\x0003", Object1, Object1_Keypoint_Index, Object2, Object2_Keypoint_Index, Object3, Object3_Keypoint_Index);
    return BoltHoleCirclePtr(_result, false);
}

#pragma implementation_key(6741)
inline TGFrameworkSupport::BoltHoleCirclePtr TGFrameworkSupport::BoltHoleCircles::AddBoltHoleCircleByCenterAndRadius ( IDispatch * CenterObject, long CenterObject_KeyPointIndex, IDispatch * RadiusObject, long RadiusObject_KeypointIndex ) {
    struct BoltHoleCircle * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0003\x0009\x0003", CenterObject, CenterObject_KeyPointIndex, RadiusObject, RadiusObject_KeypointIndex);
    return BoltHoleCirclePtr(_result, false);
}

#pragma implementation_key(6742)
inline TGFrameworkSupport::BoltHoleCirclePtr TGFrameworkSupport::BoltHoleCircles::AddBoltHoleCircleBy2Points ( IDispatch * Object1, long Object1_KeyPointIndex, IDispatch * Object2, long Object2_KeypointIndex ) {
    struct BoltHoleCircle * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0003\x0009\x0003", Object1, Object1_KeyPointIndex, Object2, Object2_KeypointIndex);
    return BoltHoleCirclePtr(_result, false);
}

#pragma implementation_key(6743)
inline TGFrameworkSupport::AnnotInitDataPtr TGFrameworkSupport::BoltHoleCircles::GetAnnotInitData ( ) {
    struct AnnotInitData * _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AnnotInitDataPtr(_result, false);
}

#pragma implementation_key(6744)
inline TGFrameworkSupport::BoltHoleCirclePtr TGFrameworkSupport::BoltHoleCircles::AddBoltHoleCircle ( struct AnnotInitData * AnnotInitData, long bIsByCenterRadius ) {
    struct BoltHoleCircle * _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0003", AnnotInitData, bIsByCenterRadius);
    return BoltHoleCirclePtr(_result, false);
}

//
// dispinterface BoltHoleCircle wrapper method implementations
//

#pragma implementation_key(6745)
inline TGFramework::ApplicationPtr TGFrameworkSupport::BoltHoleCircle::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x2065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(6746)
inline long TGFrameworkSupport::BoltHoleCircle::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2066, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6747)
inline _bstr_t TGFrameworkSupport::BoltHoleCircle::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x2067, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6748)
inline IDispatchPtr TGFrameworkSupport::BoltHoleCircle::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2068, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6749)
inline long TGFrameworkSupport::BoltHoleCircle::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2069, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6750)
inline long TGFrameworkSupport::BoltHoleCircle::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x206b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6751)
inline _bstr_t TGFrameworkSupport::BoltHoleCircle::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x206c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6752)
inline IDispatchPtr TGFrameworkSupport::BoltHoleCircle::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x206d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6753)
inline HRESULT TGFrameworkSupport::BoltHoleCircle::Copy ( ) {
    return _com_dispatch_method(this, 0x6001200a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6754)
inline HRESULT TGFrameworkSupport::BoltHoleCircle::Cut ( ) {
    return _com_dispatch_method(this, 0x6001200b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6755)
inline HRESULT TGFrameworkSupport::BoltHoleCircle::Delete ( ) {
    return _com_dispatch_method(this, 0x6001200c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6756)
inline HRESULT TGFrameworkSupport::BoltHoleCircle::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60012011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(6757)
inline HRESULT TGFrameworkSupport::BoltHoleCircle::BringToFront ( ) {
    return _com_dispatch_method(this, 0x60012014, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6758)
inline HRESULT TGFrameworkSupport::BoltHoleCircle::BringForward ( ) {
    return _com_dispatch_method(this, 0x60012015, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6759)
inline HRESULT TGFrameworkSupport::BoltHoleCircle::SendToBack ( ) {
    return _com_dispatch_method(this, 0x60012016, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6760)
inline HRESULT TGFrameworkSupport::BoltHoleCircle::SendBackward ( ) {
    return _com_dispatch_method(this, 0x60012017, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6761)
inline HRESULT TGFrameworkSupport::BoltHoleCircle::Select ( ) {
    return _com_dispatch_method(this, 0x60012018, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6762)
inline double TGFrameworkSupport::BoltHoleCircle::GetTextScale ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3009, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6763)
inline void TGFrameworkSupport::BoltHoleCircle::PutTextScale ( double _arg1 ) {
    _com_dispatch_method(this, 0x3009, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(6764)
inline long TGFrameworkSupport::BoltHoleCircle::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6765)
inline HRESULT TGFrameworkSupport::BoltHoleCircle::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, enum HandleType * HandleType ) {
    return _com_dispatch_method(this, 0x6002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(6766)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::BoltHoleCircle::GetStyle ( ) {
    struct DimStyle * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DimStylePtr(_result, false);
}

#pragma implementation_key(6767)
inline VARIANT_BOOL TGFrameworkSupport::BoltHoleCircle::GetIsDefinedBy3Points ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6768)
inline HRESULT TGFrameworkSupport::BoltHoleCircle::AddMember ( IDispatch * Object, long Object_Keypoint_Index ) {
    return _com_dispatch_method(this, 0x206f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0003", Object, Object_Keypoint_Index);
}

#pragma implementation_key(6769)
inline HRESULT TGFrameworkSupport::BoltHoleCircle::RemoveMember ( IDispatch * Object, const _variant_t & Object_Keypoint_Index ) {
    return _com_dispatch_method(this, 0x2070, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x080c", Object, &Object_Keypoint_Index);
}

#pragma implementation_key(6770)
inline HRESULT TGFrameworkSupport::BoltHoleCircle::Circle2d ( double * BHC_Circle2d_center_x, double * BHC_Circle2d_center_y, double * BHC_Circle2d_radius ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005", BHC_Circle2d_center_x, BHC_Circle2d_center_y, BHC_Circle2d_radius);
}

#pragma implementation_key(6771)
inline VARIANT_BOOL TGFrameworkSupport::BoltHoleCircle::GetIsAcceptableConnectElementOrMember ( IDispatch * Object ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0009", Object);
    return _result;
}

#pragma implementation_key(6772)
inline HRESULT TGFrameworkSupport::BoltHoleCircle::GetConnectElements3Objects ( IDispatch * * Object1, int * Object1_Keypoint_Index, IDispatch * * Object2, int * Object2_Keypoint_Index, IDispatch * * Object3, int * Object3_Keypoint_Index ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4003\x4009\x4003\x4009\x4003", Object1, Object1_Keypoint_Index, Object2, Object2_Keypoint_Index, Object3, Object3_Keypoint_Index);
}

#pragma implementation_key(6773)
inline HRESULT TGFrameworkSupport::BoltHoleCircle::GetConnectElementsCenterRadius ( IDispatch * * CenterObject, int * CenterObject_Keypoint_Index, IDispatch * * RadiusObject, int * RadiusObject_Keypoint_Index ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4003\x4009\x4003", CenterObject, CenterObject_Keypoint_Index, RadiusObject, RadiusObject_Keypoint_Index);
}

#pragma implementation_key(6774)
inline VARIANT_BOOL TGFrameworkSupport::BoltHoleCircle::GetIsMember ( IDispatch * Object, const _variant_t & Object_Keypoint_Index ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0009\x080c", Object, &Object_Keypoint_Index);
    return _result;
}

#pragma implementation_key(6775)
inline IUnknownPtr TGFrameworkSupport::BoltHoleCircle::Item ( const _variant_t & Index ) {
    IUnknown * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_UNKNOWN, (void*)&_result, 
        L"\x000c", &Index);
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(6776)
inline long TGFrameworkSupport::BoltHoleCircle::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2071, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6777)
inline void TGFrameworkSupport::BoltHoleCircle::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1076, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(6778)
inline _bstr_t TGFrameworkSupport::BoltHoleCircle::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1076, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6779)
inline VARIANT_BOOL TGFrameworkSupport::BoltHoleCircle::GetIsDefinedBy2Points ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1077, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6780)
inline HRESULT TGFrameworkSupport::BoltHoleCircle::GetTrimArcEndPoints ( double * x1, double * y1, double * z1, double * x2, double * y2, double * z2 ) {
    return _com_dispatch_method(this, 0x1078, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005", x1, y1, z1, x2, y2, z2);
}

#pragma implementation_key(6781)
inline HRESULT TGFrameworkSupport::BoltHoleCircle::SetTrimArcEndPoints ( double x1, double y1, double z1, double x2, double y2, double z2 ) {
    return _com_dispatch_method(this, 0x1079, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005", x1, y1, z1, x2, y2, z2);
}

#pragma implementation_key(6782)
inline void TGFrameworkSupport::BoltHoleCircle::PutPMIName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x107a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(6783)
inline _bstr_t TGFrameworkSupport::BoltHoleCircle::GetPMIName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x107a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6784)
inline void TGFrameworkSupport::BoltHoleCircle::PutHidePMI ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x107b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(6785)
inline VARIANT_BOOL TGFrameworkSupport::BoltHoleCircle::GetHidePMI ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x107b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6786)
inline IDispatchPtr TGFrameworkSupport::BoltHoleCircle::GetPMIPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x107c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// interface _IBoltHoleCirclesAuto wrapper method implementations
//

#pragma implementation_key(6787)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IBoltHoleCirclesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(6788)
inline long TGFrameworkSupport::_IBoltHoleCirclesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6789)
inline IDispatchPtr TGFrameworkSupport::_IBoltHoleCirclesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6790)
inline TGFrameworkSupport::BoltHoleCirclePtr TGFrameworkSupport::_IBoltHoleCirclesAuto::Item ( const _variant_t & Index ) {
    struct BoltHoleCircle * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BoltHoleCirclePtr(_result, false);
}

#pragma implementation_key(6791)
inline IUnknownPtr TGFrameworkSupport::_IBoltHoleCirclesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(6792)
inline TGFrameworkSupport::BoltHoleCirclePtr TGFrameworkSupport::_IBoltHoleCirclesAuto::AddBoltHoleCircleBy3Points ( IDispatch * Object1, long Object1_Keypoint_Index, IDispatch * Object2, long Object2_Keypoint_Index, IDispatch * Object3, long Object3_Keypoint_Index ) {
    struct BoltHoleCircle * _result = 0;
    HRESULT _hr = raw_AddBoltHoleCircleBy3Points(Object1, Object1_Keypoint_Index, Object2, Object2_Keypoint_Index, Object3, Object3_Keypoint_Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BoltHoleCirclePtr(_result, false);
}

#pragma implementation_key(6793)
inline TGFrameworkSupport::BoltHoleCirclePtr TGFrameworkSupport::_IBoltHoleCirclesAuto::AddBoltHoleCircleByCenterAndRadius ( IDispatch * CenterObject, long CenterObject_KeyPointIndex, IDispatch * RadiusObject, long RadiusObject_KeypointIndex ) {
    struct BoltHoleCircle * _result = 0;
    HRESULT _hr = raw_AddBoltHoleCircleByCenterAndRadius(CenterObject, CenterObject_KeyPointIndex, RadiusObject, RadiusObject_KeypointIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BoltHoleCirclePtr(_result, false);
}

#pragma implementation_key(6794)
inline TGFrameworkSupport::BoltHoleCirclePtr TGFrameworkSupport::_IBoltHoleCirclesAuto::AddBoltHoleCircleBy2Points ( IDispatch * Object1, long Object1_KeyPointIndex, IDispatch * Object2, long Object2_KeypointIndex ) {
    struct BoltHoleCircle * _result = 0;
    HRESULT _hr = raw_AddBoltHoleCircleBy2Points(Object1, Object1_KeyPointIndex, Object2, Object2_KeypointIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BoltHoleCirclePtr(_result, false);
}

#pragma implementation_key(6795)
inline TGFrameworkSupport::AnnotInitDataPtr TGFrameworkSupport::_IBoltHoleCirclesAuto::GetAnnotInitData ( ) {
    struct AnnotInitData * _result = 0;
    HRESULT _hr = get_AnnotInitData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AnnotInitDataPtr(_result, false);
}

#pragma implementation_key(6796)
inline TGFrameworkSupport::BoltHoleCirclePtr TGFrameworkSupport::_IBoltHoleCirclesAuto::AddBoltHoleCircle ( struct AnnotInitData * AnnotInitData, long bIsByCenterRadius ) {
    struct BoltHoleCircle * _result = 0;
    HRESULT _hr = raw_AddBoltHoleCircle(AnnotInitData, bIsByCenterRadius, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BoltHoleCirclePtr(_result, false);
}

//
// interface _IBoltHoleCircleAuto wrapper method implementations
//

#pragma implementation_key(6797)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IBoltHoleCircleAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(6798)
inline long TGFrameworkSupport::_IBoltHoleCircleAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6799)
inline _bstr_t TGFrameworkSupport::_IBoltHoleCircleAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6800)
inline IDispatchPtr TGFrameworkSupport::_IBoltHoleCircleAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6801)
inline long TGFrameworkSupport::_IBoltHoleCircleAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6802)
inline long TGFrameworkSupport::_IBoltHoleCircleAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6803)
inline _bstr_t TGFrameworkSupport::_IBoltHoleCircleAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6804)
inline IDispatchPtr TGFrameworkSupport::_IBoltHoleCircleAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6805)
inline HRESULT TGFrameworkSupport::_IBoltHoleCircleAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6806)
inline HRESULT TGFrameworkSupport::_IBoltHoleCircleAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6807)
inline HRESULT TGFrameworkSupport::_IBoltHoleCircleAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6808)
inline HRESULT TGFrameworkSupport::_IBoltHoleCircleAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6809)
inline HRESULT TGFrameworkSupport::_IBoltHoleCircleAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6810)
inline HRESULT TGFrameworkSupport::_IBoltHoleCircleAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6811)
inline HRESULT TGFrameworkSupport::_IBoltHoleCircleAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6812)
inline HRESULT TGFrameworkSupport::_IBoltHoleCircleAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6813)
inline HRESULT TGFrameworkSupport::_IBoltHoleCircleAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6814)
inline double TGFrameworkSupport::_IBoltHoleCircleAuto::GetTextScale ( ) {
    double _result = 0;
    HRESULT _hr = get_TextScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6815)
inline void TGFrameworkSupport::_IBoltHoleCircleAuto::PutTextScale ( double pdAngle ) {
    HRESULT _hr = put_TextScale(pdAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6816)
inline long TGFrameworkSupport::_IBoltHoleCircleAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6817)
inline HRESULT TGFrameworkSupport::_IBoltHoleCircleAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, enum HandleType * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6818)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::_IBoltHoleCircleAuto::GetStyle ( ) {
    struct DimStyle * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimStylePtr(_result, false);
}

#pragma implementation_key(6819)
inline VARIANT_BOOL TGFrameworkSupport::_IBoltHoleCircleAuto::GetIsDefinedBy3Points ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsDefinedBy3Points(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6820)
inline HRESULT TGFrameworkSupport::_IBoltHoleCircleAuto::AddMember ( IDispatch * Object, long Object_Keypoint_Index ) {
    HRESULT _hr = raw_AddMember(Object, Object_Keypoint_Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6821)
inline HRESULT TGFrameworkSupport::_IBoltHoleCircleAuto::RemoveMember ( IDispatch * Object, const _variant_t & Object_Keypoint_Index ) {
    HRESULT _hr = raw_RemoveMember(Object, Object_Keypoint_Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6822)
inline HRESULT TGFrameworkSupport::_IBoltHoleCircleAuto::Circle2d ( double * BHC_Circle2d_center_x, double * BHC_Circle2d_center_y, double * BHC_Circle2d_radius ) {
    HRESULT _hr = raw_Circle2d(BHC_Circle2d_center_x, BHC_Circle2d_center_y, BHC_Circle2d_radius);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6823)
inline VARIANT_BOOL TGFrameworkSupport::_IBoltHoleCircleAuto::GetIsAcceptableConnectElementOrMember ( IDispatch * Object ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAcceptableConnectElementOrMember(Object, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6824)
inline HRESULT TGFrameworkSupport::_IBoltHoleCircleAuto::GetConnectElements3Objects ( IDispatch * * Object1, int * Object1_Keypoint_Index, IDispatch * * Object2, int * Object2_Keypoint_Index, IDispatch * * Object3, int * Object3_Keypoint_Index ) {
    HRESULT _hr = raw_GetConnectElements3Objects(Object1, Object1_Keypoint_Index, Object2, Object2_Keypoint_Index, Object3, Object3_Keypoint_Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6825)
inline HRESULT TGFrameworkSupport::_IBoltHoleCircleAuto::GetConnectElementsCenterRadius ( IDispatch * * CenterObject, int * CenterObject_Keypoint_Index, IDispatch * * RadiusObject, int * RadiusObject_Keypoint_Index ) {
    HRESULT _hr = raw_GetConnectElementsCenterRadius(CenterObject, CenterObject_Keypoint_Index, RadiusObject, RadiusObject_Keypoint_Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6826)
inline VARIANT_BOOL TGFrameworkSupport::_IBoltHoleCircleAuto::GetIsMember ( IDispatch * Object, const _variant_t & Object_Keypoint_Index ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsMember(Object, Object_Keypoint_Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6827)
inline IUnknownPtr TGFrameworkSupport::_IBoltHoleCircleAuto::Item ( const _variant_t & Index ) {
    IUnknown * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(6828)
inline IUnknownPtr TGFrameworkSupport::_IBoltHoleCircleAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(6829)
inline long TGFrameworkSupport::_IBoltHoleCircleAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6830)
inline void TGFrameworkSupport::_IBoltHoleCircleAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6831)
inline _bstr_t TGFrameworkSupport::_IBoltHoleCircleAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6832)
inline VARIANT_BOOL TGFrameworkSupport::_IBoltHoleCircleAuto::GetIsDefinedBy2Points ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsDefinedBy2Points(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6833)
inline HRESULT TGFrameworkSupport::_IBoltHoleCircleAuto::GetTrimArcEndPoints ( double * x1, double * y1, double * z1, double * x2, double * y2, double * z2 ) {
    HRESULT _hr = raw_GetTrimArcEndPoints(x1, y1, z1, x2, y2, z2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6834)
inline HRESULT TGFrameworkSupport::_IBoltHoleCircleAuto::SetTrimArcEndPoints ( double x1, double y1, double z1, double x2, double y2, double z2 ) {
    HRESULT _hr = raw_SetTrimArcEndPoints(x1, y1, z1, x2, y2, z2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6835)
inline void TGFrameworkSupport::_IBoltHoleCircleAuto::PutPMIName ( _bstr_t Text ) {
    HRESULT _hr = put_PMIName(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6836)
inline _bstr_t TGFrameworkSupport::_IBoltHoleCircleAuto::GetPMIName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PMIName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6837)
inline void TGFrameworkSupport::_IBoltHoleCircleAuto::PutHidePMI ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_HidePMI(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6838)
inline VARIANT_BOOL TGFrameworkSupport::_IBoltHoleCircleAuto::GetHidePMI ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HidePMI(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6839)
inline IDispatchPtr TGFrameworkSupport::_IBoltHoleCircleAuto::GetPMIPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_PMIPlane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// dispinterface Connectors wrapper method implementations
//

#pragma implementation_key(6840)
inline TGFramework::ApplicationPtr TGFrameworkSupport::Connectors::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(6841)
inline long TGFrameworkSupport::Connectors::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6842)
inline IDispatchPtr TGFrameworkSupport::Connectors::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6843)
inline TGFrameworkSupport::ConnectorPtr TGFrameworkSupport::Connectors::Item ( const _variant_t & Index ) {
    struct Connector * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return ConnectorPtr(_result, false);
}

#pragma implementation_key(6844)
inline TGFrameworkSupport::ConnectorPtr TGFrameworkSupport::Connectors::AddConnectorByType ( IDispatch * Object1, double x1, double y1, double z1, long Object1_Keypoint_Index, IDispatch * Object2, double x2, double y2, double z2, long Object2_Keypoint_Index, enum ConnectorTypeConstants ConnectorType ) {
    struct Connector * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x0003\x0009\x0005\x0005\x0005\x0003\x0003", Object1, x1, y1, z1, Object1_Keypoint_Index, Object2, x2, y2, z2, Object2_Keypoint_Index, ConnectorType);
    return ConnectorPtr(_result, false);
}

#pragma implementation_key(6845)
inline TGFrameworkSupport::ConnectorPtr TGFrameworkSupport::Connectors::AddFreeSpaceConnectorByType ( double x1, double y1, double z1, double x2, double y2, double z2, enum ConnectorTypeConstants ConnectorType ) {
    struct Connector * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005\x0003", x1, y1, z1, x2, y2, z2, ConnectorType);
    return ConnectorPtr(_result, false);
}

//
// dispinterface Connector wrapper method implementations
//

#pragma implementation_key(6846)
inline TGFramework::ApplicationPtr TGFrameworkSupport::Connector::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x2065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(6847)
inline long TGFrameworkSupport::Connector::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2066, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6848)
inline _bstr_t TGFrameworkSupport::Connector::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x2067, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6849)
inline IDispatchPtr TGFrameworkSupport::Connector::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2068, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6850)
inline long TGFrameworkSupport::Connector::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2069, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6851)
inline long TGFrameworkSupport::Connector::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x206b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6852)
inline _bstr_t TGFrameworkSupport::Connector::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x206c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6853)
inline IDispatchPtr TGFrameworkSupport::Connector::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x206d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6854)
inline HRESULT TGFrameworkSupport::Connector::Copy ( ) {
    return _com_dispatch_method(this, 0x6001200a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6855)
inline HRESULT TGFrameworkSupport::Connector::Cut ( ) {
    return _com_dispatch_method(this, 0x6001200b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6856)
inline HRESULT TGFrameworkSupport::Connector::Delete ( ) {
    return _com_dispatch_method(this, 0x6001200c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6857)
inline HRESULT TGFrameworkSupport::Connector::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60012011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(6858)
inline HRESULT TGFrameworkSupport::Connector::BringToFront ( ) {
    return _com_dispatch_method(this, 0x60012014, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6859)
inline HRESULT TGFrameworkSupport::Connector::BringForward ( ) {
    return _com_dispatch_method(this, 0x60012015, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6860)
inline HRESULT TGFrameworkSupport::Connector::SendToBack ( ) {
    return _com_dispatch_method(this, 0x60012016, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6861)
inline HRESULT TGFrameworkSupport::Connector::SendBackward ( ) {
    return _com_dispatch_method(this, 0x60012017, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6862)
inline HRESULT TGFrameworkSupport::Connector::Select ( ) {
    return _com_dispatch_method(this, 0x60012018, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6863)
inline long TGFrameworkSupport::Connector::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6864)
inline HRESULT TGFrameworkSupport::Connector::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, enum HandleType * HandleType ) {
    return _com_dispatch_method(this, 0x6002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(6865)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::Connector::GetStyle ( ) {
    struct DimStyle * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DimStylePtr(_result, false);
}

#pragma implementation_key(6866)
inline HRESULT TGFrameworkSupport::Connector::GetConnectorType ( enum ConnectorTypeConstants * ConnectorType ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003", ConnectorType);
}

#pragma implementation_key(6867)
inline HRESULT TGFrameworkSupport::Connector::SetConnectorType ( enum ConnectorTypeConstants ConnectorType ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", ConnectorType);
}

#pragma implementation_key(6868)
inline HRESULT TGFrameworkSupport::Connector::GetStartElement ( IDispatch * * StartObj, double * x, double * y, double * z, int * StartKeyPointIndex ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4005\x4005\x4005\x4003", StartObj, x, y, z, StartKeyPointIndex);
}

#pragma implementation_key(6869)
inline HRESULT TGFrameworkSupport::Connector::SetStartElement ( IDispatch * StartObj, double x, double y, double z, int StartKeyPointIndex ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0005\x0005\x0005\x0003", StartObj, x, y, z, StartKeyPointIndex);
}

#pragma implementation_key(6870)
inline HRESULT TGFrameworkSupport::Connector::GetEndElement ( IDispatch * * EndObj, double * x, double * y, double * z, int * EndKeyPointIndex ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4005\x4005\x4005\x4003", EndObj, x, y, z, EndKeyPointIndex);
}

#pragma implementation_key(6871)
inline HRESULT TGFrameworkSupport::Connector::SetEndElement ( IDispatch * EndObj, double x, double y, double z, int EndKeyPointIndex ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0005\x0005\x0005\x0003", EndObj, x, y, z, EndKeyPointIndex);
}

#pragma implementation_key(6872)
inline HRESULT TGFrameworkSupport::Connector::GetCenterElement ( IDispatch * * CenterObj, double * x, double * y, double * z, int * CenterKeyPointIndex ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4005\x4005\x4005\x4003", CenterObj, x, y, z, CenterKeyPointIndex);
}

#pragma implementation_key(6873)
inline HRESULT TGFrameworkSupport::Connector::SetCenterElement ( IDispatch * CenterObj, double x, double y, double z, int CenterKeyPointIndex ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0005\x0005\x0005\x0003", CenterObj, x, y, z, CenterKeyPointIndex);
}

#pragma implementation_key(6874)
inline HRESULT TGFrameworkSupport::Connector::GetStartPoint ( double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005", x, y, z);
}

#pragma implementation_key(6875)
inline HRESULT TGFrameworkSupport::Connector::SetStartPoint ( double x, double y, double z ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", x, y, z);
}

#pragma implementation_key(6876)
inline HRESULT TGFrameworkSupport::Connector::GetEndPoint ( double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005", x, y, z);
}

#pragma implementation_key(6877)
inline HRESULT TGFrameworkSupport::Connector::SetEndPoint ( double x, double y, double z ) {
    return _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", x, y, z);
}

#pragma implementation_key(6878)
inline HRESULT TGFrameworkSupport::Connector::GetStartTerminatorType ( enum DimTermTypeConstants * StartTermType ) {
    return _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003", StartTermType);
}

#pragma implementation_key(6879)
inline HRESULT TGFrameworkSupport::Connector::SetStartTerminatorType ( enum DimTermTypeConstants StartTermType ) {
    return _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", StartTermType);
}

#pragma implementation_key(6880)
inline HRESULT TGFrameworkSupport::Connector::GetEndTerminatorType ( enum DimTermTypeConstants * EndTermType ) {
    return _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003", EndTermType);
}

#pragma implementation_key(6881)
inline HRESULT TGFrameworkSupport::Connector::SetEndTerminatorType ( enum DimTermTypeConstants EndTermType ) {
    return _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", EndTermType);
}

#pragma implementation_key(6882)
inline HRESULT TGFrameworkSupport::Connector::GetFlipState ( VARIANT_BOOL * FlipState ) {
    return _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b", FlipState);
}

#pragma implementation_key(6883)
inline HRESULT TGFrameworkSupport::Connector::SetFlipState ( VARIANT_BOOL FlipState ) {
    return _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b", FlipState);
}

#pragma implementation_key(6884)
inline HRESULT TGFrameworkSupport::Connector::GetJumpRadius ( double * JumpRadius ) {
    return _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005", JumpRadius);
}

#pragma implementation_key(6885)
inline HRESULT TGFrameworkSupport::Connector::SetJumpRadius ( double JumpRadius ) {
    return _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", JumpRadius);
}

#pragma implementation_key(6886)
inline double TGFrameworkSupport::Connector::GetTextScale ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3009, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6887)
inline void TGFrameworkSupport::Connector::PutTextScale ( double _arg1 ) {
    _com_dispatch_method(this, 0x3009, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(6888)
inline void TGFrameworkSupport::Connector::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(6889)
inline _bstr_t TGFrameworkSupport::Connector::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6890)
inline HRESULT TGFrameworkSupport::Connector::PromoteToCurrentVersion ( ) {
    return _com_dispatch_method(this, 0x18, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6891)
inline IDispatchPtr TGFrameworkSupport::Connector::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6892)
inline VARIANT_BOOL TGFrameworkSupport::Connector::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _IConnectorsAuto wrapper method implementations
//

#pragma implementation_key(6893)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IConnectorsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(6894)
inline long TGFrameworkSupport::_IConnectorsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6895)
inline IDispatchPtr TGFrameworkSupport::_IConnectorsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6896)
inline TGFrameworkSupport::ConnectorPtr TGFrameworkSupport::_IConnectorsAuto::Item ( const _variant_t & Index ) {
    struct Connector * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ConnectorPtr(_result, false);
}

#pragma implementation_key(6897)
inline IUnknownPtr TGFrameworkSupport::_IConnectorsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(6898)
inline TGFrameworkSupport::ConnectorPtr TGFrameworkSupport::_IConnectorsAuto::AddConnectorByType ( IDispatch * Object1, double x1, double y1, double z1, long Object1_Keypoint_Index, IDispatch * Object2, double x2, double y2, double z2, long Object2_Keypoint_Index, enum ConnectorTypeConstants ConnectorType ) {
    struct Connector * _result = 0;
    HRESULT _hr = raw_AddConnectorByType(Object1, x1, y1, z1, Object1_Keypoint_Index, Object2, x2, y2, z2, Object2_Keypoint_Index, ConnectorType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ConnectorPtr(_result, false);
}

#pragma implementation_key(6899)
inline TGFrameworkSupport::ConnectorPtr TGFrameworkSupport::_IConnectorsAuto::AddFreeSpaceConnectorByType ( double x1, double y1, double z1, double x2, double y2, double z2, enum ConnectorTypeConstants ConnectorType ) {
    struct Connector * _result = 0;
    HRESULT _hr = raw_AddFreeSpaceConnectorByType(x1, y1, z1, x2, y2, z2, ConnectorType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ConnectorPtr(_result, false);
}

//
// interface _IConnectorAuto wrapper method implementations
//

#pragma implementation_key(6900)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IConnectorAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(6901)
inline long TGFrameworkSupport::_IConnectorAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6902)
inline _bstr_t TGFrameworkSupport::_IConnectorAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6903)
inline IDispatchPtr TGFrameworkSupport::_IConnectorAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6904)
inline long TGFrameworkSupport::_IConnectorAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6905)
inline long TGFrameworkSupport::_IConnectorAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6906)
inline _bstr_t TGFrameworkSupport::_IConnectorAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6907)
inline IDispatchPtr TGFrameworkSupport::_IConnectorAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6908)
inline HRESULT TGFrameworkSupport::_IConnectorAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6909)
inline HRESULT TGFrameworkSupport::_IConnectorAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6910)
inline HRESULT TGFrameworkSupport::_IConnectorAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6911)
inline HRESULT TGFrameworkSupport::_IConnectorAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6912)
inline HRESULT TGFrameworkSupport::_IConnectorAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6913)
inline HRESULT TGFrameworkSupport::_IConnectorAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6914)
inline HRESULT TGFrameworkSupport::_IConnectorAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6915)
inline HRESULT TGFrameworkSupport::_IConnectorAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6916)
inline HRESULT TGFrameworkSupport::_IConnectorAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6917)
inline long TGFrameworkSupport::_IConnectorAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6918)
inline HRESULT TGFrameworkSupport::_IConnectorAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, enum HandleType * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6919)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::_IConnectorAuto::GetStyle ( ) {
    struct DimStyle * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimStylePtr(_result, false);
}

#pragma implementation_key(6920)
inline HRESULT TGFrameworkSupport::_IConnectorAuto::GetConnectorType ( enum ConnectorTypeConstants * ConnectorType ) {
    HRESULT _hr = raw_GetConnectorType(ConnectorType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6921)
inline HRESULT TGFrameworkSupport::_IConnectorAuto::SetConnectorType ( enum ConnectorTypeConstants ConnectorType ) {
    HRESULT _hr = raw_SetConnectorType(ConnectorType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6922)
inline HRESULT TGFrameworkSupport::_IConnectorAuto::GetStartElement ( IDispatch * * StartObj, double * x, double * y, double * z, int * StartKeyPointIndex ) {
    HRESULT _hr = raw_GetStartElement(StartObj, x, y, z, StartKeyPointIndex);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6923)
inline HRESULT TGFrameworkSupport::_IConnectorAuto::SetStartElement ( IDispatch * StartObj, double x, double y, double z, int StartKeyPointIndex ) {
    HRESULT _hr = raw_SetStartElement(StartObj, x, y, z, StartKeyPointIndex);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6924)
inline HRESULT TGFrameworkSupport::_IConnectorAuto::GetEndElement ( IDispatch * * EndObj, double * x, double * y, double * z, int * EndKeyPointIndex ) {
    HRESULT _hr = raw_GetEndElement(EndObj, x, y, z, EndKeyPointIndex);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6925)
inline HRESULT TGFrameworkSupport::_IConnectorAuto::SetEndElement ( IDispatch * EndObj, double x, double y, double z, int EndKeyPointIndex ) {
    HRESULT _hr = raw_SetEndElement(EndObj, x, y, z, EndKeyPointIndex);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6926)
inline HRESULT TGFrameworkSupport::_IConnectorAuto::GetCenterElement ( IDispatch * * CenterObj, double * x, double * y, double * z, int * CenterKeyPointIndex ) {
    HRESULT _hr = raw_GetCenterElement(CenterObj, x, y, z, CenterKeyPointIndex);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6927)
inline HRESULT TGFrameworkSupport::_IConnectorAuto::SetCenterElement ( IDispatch * CenterObj, double x, double y, double z, int CenterKeyPointIndex ) {
    HRESULT _hr = raw_SetCenterElement(CenterObj, x, y, z, CenterKeyPointIndex);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6928)
inline HRESULT TGFrameworkSupport::_IConnectorAuto::GetStartPoint ( double * x, double * y, double * z ) {
    HRESULT _hr = raw_GetStartPoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6929)
inline HRESULT TGFrameworkSupport::_IConnectorAuto::SetStartPoint ( double x, double y, double z ) {
    HRESULT _hr = raw_SetStartPoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6930)
inline HRESULT TGFrameworkSupport::_IConnectorAuto::GetEndPoint ( double * x, double * y, double * z ) {
    HRESULT _hr = raw_GetEndPoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6931)
inline HRESULT TGFrameworkSupport::_IConnectorAuto::SetEndPoint ( double x, double y, double z ) {
    HRESULT _hr = raw_SetEndPoint(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6932)
inline HRESULT TGFrameworkSupport::_IConnectorAuto::GetStartTerminatorType ( enum DimTermTypeConstants * StartTermType ) {
    HRESULT _hr = raw_GetStartTerminatorType(StartTermType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6933)
inline HRESULT TGFrameworkSupport::_IConnectorAuto::SetStartTerminatorType ( enum DimTermTypeConstants StartTermType ) {
    HRESULT _hr = raw_SetStartTerminatorType(StartTermType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6934)
inline HRESULT TGFrameworkSupport::_IConnectorAuto::GetEndTerminatorType ( enum DimTermTypeConstants * EndTermType ) {
    HRESULT _hr = raw_GetEndTerminatorType(EndTermType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6935)
inline HRESULT TGFrameworkSupport::_IConnectorAuto::SetEndTerminatorType ( enum DimTermTypeConstants EndTermType ) {
    HRESULT _hr = raw_SetEndTerminatorType(EndTermType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6936)
inline HRESULT TGFrameworkSupport::_IConnectorAuto::GetFlipState ( VARIANT_BOOL * FlipState ) {
    HRESULT _hr = raw_GetFlipState(FlipState);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6937)
inline HRESULT TGFrameworkSupport::_IConnectorAuto::SetFlipState ( VARIANT_BOOL FlipState ) {
    HRESULT _hr = raw_SetFlipState(FlipState);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6938)
inline HRESULT TGFrameworkSupport::_IConnectorAuto::GetJumpRadius ( double * JumpRadius ) {
    HRESULT _hr = raw_GetJumpRadius(JumpRadius);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6939)
inline HRESULT TGFrameworkSupport::_IConnectorAuto::SetJumpRadius ( double JumpRadius ) {
    HRESULT _hr = raw_SetJumpRadius(JumpRadius);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6940)
inline double TGFrameworkSupport::_IConnectorAuto::GetTextScale ( ) {
    double _result = 0;
    HRESULT _hr = get_TextScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6941)
inline void TGFrameworkSupport::_IConnectorAuto::PutTextScale ( double pdAngle ) {
    HRESULT _hr = put_TextScale(pdAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6942)
inline void TGFrameworkSupport::_IConnectorAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(6943)
inline _bstr_t TGFrameworkSupport::_IConnectorAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(6944)
inline HRESULT TGFrameworkSupport::_IConnectorAuto::PromoteToCurrentVersion ( ) {
    HRESULT _hr = raw_PromoteToCurrentVersion();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(6945)
inline IDispatchPtr TGFrameworkSupport::_IConnectorAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6946)
inline VARIANT_BOOL TGFrameworkSupport::_IConnectorAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface Groups wrapper method implementations
//

#pragma implementation_key(6947)
inline TGFrameworkSupport::GroupPtr TGFrameworkSupport::Groups::Item ( const _variant_t & Index ) {
    struct Group * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return GroupPtr(_result, false);
}

#pragma implementation_key(6948)
inline TGFramework::ApplicationPtr TGFrameworkSupport::Groups::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(6949)
inline long TGFrameworkSupport::Groups::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6950)
inline IDispatchPtr TGFrameworkSupport::Groups::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6951)
inline TGFrameworkSupport::GroupPtr TGFrameworkSupport::Groups::Add ( const _variant_t & Name ) {
    struct Group * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c", &Name);
    return GroupPtr(_result, false);
}

#pragma implementation_key(6952)
inline HRESULT TGFrameworkSupport::Groups::Remove ( const _variant_t & Index ) {
    return _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000c", &Index);
}

#pragma implementation_key(6953)
inline TGFrameworkSupport::GroupPtr TGFrameworkSupport::Groups::AddEmptyGroup ( ) {
    struct Group * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return GroupPtr(_result, false);
}

//
// dispinterface Group wrapper method implementations
//

#pragma implementation_key(6954)
inline IDispatchPtr TGFrameworkSupport::Group::GetStyle ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6955)
inline HRESULT TGFrameworkSupport::Group::Ungroup ( ) {
    return _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6956)
inline HRESULT TGFrameworkSupport::Group::AddToGroup ( const _variant_t & NumObjects, const _variant_t & Objects ) {
    return _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c", &NumObjects, &Objects);
}

#pragma implementation_key(6957)
inline HRESULT TGFrameworkSupport::Group::RemoveFromGroup ( const _variant_t & NumObjects, const _variant_t & Objects ) {
    return _com_dispatch_method(this, 0x66, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c", &NumObjects, &Objects);
}

#pragma implementation_key(6958)
inline IDispatchPtr TGFrameworkSupport::Group::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6959)
inline long TGFrameworkSupport::Group::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6960)
inline long TGFrameworkSupport::Group::IsNested ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6961)
inline long TGFrameworkSupport::Group::HasNested ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6962)
inline void TGFrameworkSupport::Group::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(6963)
inline _bstr_t TGFrameworkSupport::Group::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6964)
inline TGFramework::ApplicationPtr TGFrameworkSupport::Group::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x2065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(6965)
inline long TGFrameworkSupport::Group::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2066, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6966)
inline _bstr_t TGFrameworkSupport::Group::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x2067, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6967)
inline IDispatchPtr TGFrameworkSupport::Group::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2068, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6968)
inline long TGFrameworkSupport::Group::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2069, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6969)
inline long TGFrameworkSupport::Group::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x206b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6970)
inline _bstr_t TGFrameworkSupport::Group::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x206c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6971)
inline IDispatchPtr TGFrameworkSupport::Group::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x206d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6972)
inline HRESULT TGFrameworkSupport::Group::Copy ( ) {
    return _com_dispatch_method(this, 0x6001200a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6973)
inline HRESULT TGFrameworkSupport::Group::Cut ( ) {
    return _com_dispatch_method(this, 0x6001200b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6974)
inline HRESULT TGFrameworkSupport::Group::Delete ( ) {
    return _com_dispatch_method(this, 0x6001200c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6975)
inline HRESULT TGFrameworkSupport::Group::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    return _com_dispatch_method(this, 0x6001200d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", XFrom, YFrom, XTo, YTo);
}

#pragma implementation_key(6976)
inline HRESULT TGFrameworkSupport::Group::Scale ( double Factor ) {
    return _com_dispatch_method(this, 0x6001200e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Factor);
}

#pragma implementation_key(6977)
inline HRESULT TGFrameworkSupport::Group::Rotate ( double Angle, double x, double y ) {
    return _com_dispatch_method(this, 0x6001200f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", Angle, x, y);
}

#pragma implementation_key(6978)
inline HRESULT TGFrameworkSupport::Group::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60012011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(6979)
inline IDispatchPtr TGFrameworkSupport::Group::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60012012, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &XDistance, &YDistance);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6980)
inline IDispatchPtr TGFrameworkSupport::Group::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60012013, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x080c", x1, y1, x2, y2, &BooleanCopyFlag);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(6981)
inline HRESULT TGFrameworkSupport::Group::BringToFront ( ) {
    return _com_dispatch_method(this, 0x60012014, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6982)
inline HRESULT TGFrameworkSupport::Group::BringForward ( ) {
    return _com_dispatch_method(this, 0x60012015, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6983)
inline HRESULT TGFrameworkSupport::Group::SendToBack ( ) {
    return _com_dispatch_method(this, 0x60012016, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6984)
inline HRESULT TGFrameworkSupport::Group::SendBackward ( ) {
    return _com_dispatch_method(this, 0x60012017, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6985)
inline HRESULT TGFrameworkSupport::Group::Select ( ) {
    return _com_dispatch_method(this, 0x60012018, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(6986)
inline long TGFrameworkSupport::Group::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6987)
inline HRESULT TGFrameworkSupport::Group::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x6002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(6988)
inline HRESULT TGFrameworkSupport::Group::SetKeyPoint ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x6003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(6989)
inline TGFrameworkSupport::DimensionsPtr TGFrameworkSupport::Group::GetDimensions ( ) {
    struct Dimensions * _result = 0;
    _com_dispatch_method(this, 0x2008, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DimensionsPtr(_result, false);
}

#pragma implementation_key(6990)
inline TGFrameworkSupport::LeadersPtr TGFrameworkSupport::Group::GetLeaders ( ) {
    struct Leaders * _result = 0;
    _com_dispatch_method(this, 0x2009, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return LeadersPtr(_result, false);
}

#pragma implementation_key(6991)
inline TGFrameworkSupport::BalloonsPtr TGFrameworkSupport::Group::GetBalloons ( ) {
    struct Balloons * _result = 0;
    _com_dispatch_method(this, 0x200a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return BalloonsPtr(_result, false);
}

#pragma implementation_key(6992)
inline TGFrameworkSupport::Lines2dPtr TGFrameworkSupport::Group::GetLines2d ( ) {
    struct Lines2d * _result = 0;
    _com_dispatch_method(this, 0x200b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return Lines2dPtr(_result, false);
}

#pragma implementation_key(6993)
inline TGFrameworkSupport::Circles2dPtr TGFrameworkSupport::Group::GetCircles2d ( ) {
    struct Circles2d * _result = 0;
    _com_dispatch_method(this, 0x200c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return Circles2dPtr(_result, false);
}

#pragma implementation_key(6994)
inline TGFrameworkSupport::Arcs2dPtr TGFrameworkSupport::Group::GetArcs2d ( ) {
    struct Arcs2d * _result = 0;
    _com_dispatch_method(this, 0x200d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return Arcs2dPtr(_result, false);
}

#pragma implementation_key(6995)
inline TGFrameworkSupport::Ellipses2dPtr TGFrameworkSupport::Group::GetEllipses2d ( ) {
    struct Ellipses2d * _result = 0;
    _com_dispatch_method(this, 0x200e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return Ellipses2dPtr(_result, false);
}

#pragma implementation_key(6996)
inline TGFrameworkSupport::BSplineCurves2dPtr TGFrameworkSupport::Group::GetBSplineCurves2d ( ) {
    struct BSplineCurves2d * _result = 0;
    _com_dispatch_method(this, 0x200f, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return BSplineCurves2dPtr(_result, false);
}

#pragma implementation_key(6997)
inline TGFrameworkSupport::Points2dPtr TGFrameworkSupport::Group::GetPoints2d ( ) {
    struct Points2d * _result = 0;
    _com_dispatch_method(this, 0x2010, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return Points2dPtr(_result, false);
}

#pragma implementation_key(6998)
inline TGFrameworkSupport::EllipticalArcs2dPtr TGFrameworkSupport::Group::GetEllipticalArcs2d ( ) {
    struct EllipticalArcs2d * _result = 0;
    _com_dispatch_method(this, 0x2011, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return EllipticalArcs2dPtr(_result, false);
}

#pragma implementation_key(6999)
inline TGFrameworkSupport::Curves2dPtr TGFrameworkSupport::Group::GetCurves2d ( ) {
    struct Curves2d * _result = 0;
    _com_dispatch_method(this, 0x2012, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return Curves2dPtr(_result, false);
}

#pragma implementation_key(7000)
inline TGFrameworkSupport::LineStrings2dPtr TGFrameworkSupport::Group::GetLineStrings2d ( ) {
    struct LineStrings2d * _result = 0;
    _com_dispatch_method(this, 0x2013, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return LineStrings2dPtr(_result, false);
}

#pragma implementation_key(7001)
inline TGFrameworkSupport::ComplexStrings2dPtr TGFrameworkSupport::Group::GetComplexStrings2d ( ) {
    struct ComplexStrings2d * _result = 0;
    _com_dispatch_method(this, 0x2014, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ComplexStrings2dPtr(_result, false);
}

#pragma implementation_key(7002)
inline TGFrameworkSupport::Boundaries2dPtr TGFrameworkSupport::Group::GetBoundaries2d ( ) {
    struct Boundaries2d * _result = 0;
    _com_dispatch_method(this, 0x2015, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return Boundaries2dPtr(_result, false);
}

#pragma implementation_key(7003)
inline TGFrameworkSupport::TextBoxesPtr TGFrameworkSupport::Group::GetTextBoxes ( ) {
    struct TextBoxes * _result = 0;
    _com_dispatch_method(this, 0x2016, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TextBoxesPtr(_result, false);
}

#pragma implementation_key(7004)
inline TGFrameworkSupport::TextProfilesPtr TGFrameworkSupport::Group::GetTextProfiles ( ) {
    struct TextProfiles * _result = 0;
    _com_dispatch_method(this, 0x2029, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TextProfilesPtr(_result, false);
}

#pragma implementation_key(7005)
inline TGFrameworkSupport::DatumFramesPtr TGFrameworkSupport::Group::GetDatumFrames ( ) {
    struct DatumFrames * _result = 0;
    _com_dispatch_method(this, 0x2017, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DatumFramesPtr(_result, false);
}

#pragma implementation_key(7006)
inline TGFrameworkSupport::FeatureControlFramesPtr TGFrameworkSupport::Group::GetFeatureControlFrames ( ) {
    struct FeatureControlFrames * _result = 0;
    _com_dispatch_method(this, 0x2018, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return FeatureControlFramesPtr(_result, false);
}

#pragma implementation_key(7007)
inline TGFrameworkSupport::SurfaceFinishSymbolsPtr TGFrameworkSupport::Group::GetSurfaceFinishSymbols ( ) {
    struct SurfaceFinishSymbols * _result = 0;
    _com_dispatch_method(this, 0x2019, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SurfaceFinishSymbolsPtr(_result, false);
}

#pragma implementation_key(7008)
inline TGFrameworkSupport::WeldSymbolsPtr TGFrameworkSupport::Group::GetWeldSymbols ( ) {
    struct WeldSymbols * _result = 0;
    _com_dispatch_method(this, 0x201a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return WeldSymbolsPtr(_result, false);
}

#pragma implementation_key(7009)
inline TGFrameworkSupport::CenterMarksPtr TGFrameworkSupport::Group::GetCenterMarks ( ) {
    struct CenterMarks * _result = 0;
    _com_dispatch_method(this, 0x201b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return CenterMarksPtr(_result, false);
}

#pragma implementation_key(7010)
inline TGFrameworkSupport::CenterLinesPtr TGFrameworkSupport::Group::GetCenterLines ( ) {
    struct CenterLines * _result = 0;
    _com_dispatch_method(this, 0x201c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return CenterLinesPtr(_result, false);
}

#pragma implementation_key(7011)
inline TGFrameworkSupport::DatumTargetsPtr TGFrameworkSupport::Group::GetDatumTargets ( ) {
    struct DatumTargets * _result = 0;
    _com_dispatch_method(this, 0x201d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DatumTargetsPtr(_result, false);
}

#pragma implementation_key(7012)
inline TGFrameworkSupport::PinSymbolsPtr TGFrameworkSupport::Group::GetPinSymbols ( ) {
    struct PinSymbols * _result = 0;
    _com_dispatch_method(this, 0x202c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return PinSymbolsPtr(_result, false);
}

#pragma implementation_key(7013)
inline TGFrameworkSupport::DatumPointsPtr TGFrameworkSupport::Group::GetDatumPoints ( ) {
    struct DatumPoints * _result = 0;
    _com_dispatch_method(this, 0x201e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DatumPointsPtr(_result, false);
}

#pragma implementation_key(7014)
inline TGFrameworkSupport::CornerAnnotationsPtr TGFrameworkSupport::Group::GetCornerAnnotations ( ) {
    struct CornerAnnotations * _result = 0;
    _com_dispatch_method(this, 0x2025, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return CornerAnnotationsPtr(_result, false);
}

#pragma implementation_key(7015)
inline TGFrameworkSupport::BoltHoleCirclesPtr TGFrameworkSupport::Group::GetBoltHoleCircles ( ) {
    struct BoltHoleCircles * _result = 0;
    _com_dispatch_method(this, 0x2026, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return BoltHoleCirclesPtr(_result, false);
}

#pragma implementation_key(7016)
inline TGFrameworkSupport::ConnectorsPtr TGFrameworkSupport::Group::GetConnectors ( ) {
    struct Connectors * _result = 0;
    _com_dispatch_method(this, 0x2028, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return ConnectorsPtr(_result, false);
}

#pragma implementation_key(7017)
inline IDispatchPtr TGFrameworkSupport::Group::GetSymbols ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x201f, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7018)
inline TGFrameworkSupport::GroupsPtr TGFrameworkSupport::Group::GetGroups ( ) {
    struct Groups * _result = 0;
    _com_dispatch_method(this, 0x2020, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return GroupsPtr(_result, false);
}

#pragma implementation_key(7019)
inline IDispatchPtr TGFrameworkSupport::Group::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7020)
inline VARIANT_BOOL TGFrameworkSupport::Group::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(7021)
inline void TGFrameworkSupport::Group::PutVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x2021, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(7022)
inline VARIANT_BOOL TGFrameworkSupport::Group::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2021, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7023)
inline void TGFrameworkSupport::Group::PutLocatable ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x2022, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(7024)
inline VARIANT_BOOL TGFrameworkSupport::Group::GetLocatable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2022, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7025)
inline void TGFrameworkSupport::Group::PutEditable ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x2023, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(7026)
inline VARIANT_BOOL TGFrameworkSupport::Group::GetEditable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2023, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7027)
inline void TGFrameworkSupport::Group::PutUserDefinedName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x2024, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(7028)
inline _bstr_t TGFrameworkSupport::Group::GetUserDefinedName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x2024, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7029)
inline IDispatchPtr TGFrameworkSupport::Group::GetDrawingViews ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2027, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7030)
inline enum TGFrameworkSupport::LayoutElementTypeConstants TGFrameworkSupport::Group::GetLayoutElementType ( ) {
    enum LayoutElementTypeConstants _result;
    _com_dispatch_method(this, 0x202a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

//
// interface _IGroupsAuto wrapper method implementations
//

#pragma implementation_key(7031)
inline TGFrameworkSupport::GroupPtr TGFrameworkSupport::_IGroupsAuto::Item ( const _variant_t & Index ) {
    struct Group * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return GroupPtr(_result, false);
}

#pragma implementation_key(7032)
inline IUnknownPtr TGFrameworkSupport::_IGroupsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(7033)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IGroupsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(7034)
inline long TGFrameworkSupport::_IGroupsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7035)
inline IDispatchPtr TGFrameworkSupport::_IGroupsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7036)
inline TGFrameworkSupport::GroupPtr TGFrameworkSupport::_IGroupsAuto::Add ( const _variant_t & Name ) {
    struct Group * _result = 0;
    HRESULT _hr = raw_Add(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return GroupPtr(_result, false);
}

#pragma implementation_key(7037)
inline HRESULT TGFrameworkSupport::_IGroupsAuto::Remove ( const _variant_t & Index ) {
    HRESULT _hr = raw_Remove(Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7038)
inline TGFrameworkSupport::GroupPtr TGFrameworkSupport::_IGroupsAuto::AddEmptyGroup ( ) {
    struct Group * _result = 0;
    HRESULT _hr = raw_AddEmptyGroup(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return GroupPtr(_result, false);
}

//
// interface _IGroupAuto wrapper method implementations
//

#pragma implementation_key(7039)
inline IDispatchPtr TGFrameworkSupport::_IGroupAuto::GetStyle ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7040)
inline HRESULT TGFrameworkSupport::_IGroupAuto::Ungroup ( ) {
    HRESULT _hr = raw_Ungroup();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7041)
inline HRESULT TGFrameworkSupport::_IGroupAuto::AddToGroup ( const _variant_t & NumObjects, const _variant_t & Objects ) {
    HRESULT _hr = raw_AddToGroup(NumObjects, Objects);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7042)
inline HRESULT TGFrameworkSupport::_IGroupAuto::RemoveFromGroup ( const _variant_t & NumObjects, const _variant_t & Objects ) {
    HRESULT _hr = raw_RemoveFromGroup(NumObjects, Objects);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7043)
inline IDispatchPtr TGFrameworkSupport::_IGroupAuto::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7044)
inline IUnknownPtr TGFrameworkSupport::_IGroupAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(7045)
inline long TGFrameworkSupport::_IGroupAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7046)
inline long TGFrameworkSupport::_IGroupAuto::IsNested ( ) {
    long _result = 0;
    HRESULT _hr = raw_IsNested(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7047)
inline long TGFrameworkSupport::_IGroupAuto::HasNested ( ) {
    long _result = 0;
    HRESULT _hr = raw_HasNested(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7048)
inline void TGFrameworkSupport::_IGroupAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7049)
inline _bstr_t TGFrameworkSupport::_IGroupAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7050)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IGroupAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(7051)
inline long TGFrameworkSupport::_IGroupAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7052)
inline _bstr_t TGFrameworkSupport::_IGroupAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7053)
inline IDispatchPtr TGFrameworkSupport::_IGroupAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7054)
inline long TGFrameworkSupport::_IGroupAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7055)
inline long TGFrameworkSupport::_IGroupAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7056)
inline _bstr_t TGFrameworkSupport::_IGroupAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7057)
inline IDispatchPtr TGFrameworkSupport::_IGroupAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7058)
inline HRESULT TGFrameworkSupport::_IGroupAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7059)
inline HRESULT TGFrameworkSupport::_IGroupAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7060)
inline HRESULT TGFrameworkSupport::_IGroupAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7061)
inline HRESULT TGFrameworkSupport::_IGroupAuto::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    HRESULT _hr = raw_Move(XFrom, YFrom, XTo, YTo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7062)
inline HRESULT TGFrameworkSupport::_IGroupAuto::Scale ( double Factor ) {
    HRESULT _hr = raw_Scale(Factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7063)
inline HRESULT TGFrameworkSupport::_IGroupAuto::Rotate ( double Angle, double x, double y ) {
    HRESULT _hr = raw_Rotate(Angle, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7064)
inline HRESULT TGFrameworkSupport::_IGroupAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7065)
inline IDispatchPtr TGFrameworkSupport::_IGroupAuto::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Duplicate(XDistance, YDistance, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7066)
inline IDispatchPtr TGFrameworkSupport::_IGroupAuto::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Mirror(x1, y1, x2, y2, BooleanCopyFlag, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7067)
inline HRESULT TGFrameworkSupport::_IGroupAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7068)
inline HRESULT TGFrameworkSupport::_IGroupAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7069)
inline HRESULT TGFrameworkSupport::_IGroupAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7070)
inline HRESULT TGFrameworkSupport::_IGroupAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7071)
inline HRESULT TGFrameworkSupport::_IGroupAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7072)
inline long TGFrameworkSupport::_IGroupAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7073)
inline HRESULT TGFrameworkSupport::_IGroupAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7074)
inline HRESULT TGFrameworkSupport::_IGroupAuto::SetKeyPoint ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetKeyPoint(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7075)
inline TGFrameworkSupport::DimensionsPtr TGFrameworkSupport::_IGroupAuto::GetDimensions ( ) {
    struct Dimensions * _result = 0;
    HRESULT _hr = get_Dimensions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionsPtr(_result, false);
}

#pragma implementation_key(7076)
inline TGFrameworkSupport::LeadersPtr TGFrameworkSupport::_IGroupAuto::GetLeaders ( ) {
    struct Leaders * _result = 0;
    HRESULT _hr = get_Leaders(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return LeadersPtr(_result, false);
}

#pragma implementation_key(7077)
inline TGFrameworkSupport::BalloonsPtr TGFrameworkSupport::_IGroupAuto::GetBalloons ( ) {
    struct Balloons * _result = 0;
    HRESULT _hr = get_Balloons(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BalloonsPtr(_result, false);
}

#pragma implementation_key(7078)
inline TGFrameworkSupport::Lines2dPtr TGFrameworkSupport::_IGroupAuto::GetLines2d ( ) {
    struct Lines2d * _result = 0;
    HRESULT _hr = get_Lines2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Lines2dPtr(_result, false);
}

#pragma implementation_key(7079)
inline TGFrameworkSupport::Circles2dPtr TGFrameworkSupport::_IGroupAuto::GetCircles2d ( ) {
    struct Circles2d * _result = 0;
    HRESULT _hr = get_Circles2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Circles2dPtr(_result, false);
}

#pragma implementation_key(7080)
inline TGFrameworkSupport::Arcs2dPtr TGFrameworkSupport::_IGroupAuto::GetArcs2d ( ) {
    struct Arcs2d * _result = 0;
    HRESULT _hr = get_Arcs2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Arcs2dPtr(_result, false);
}

#pragma implementation_key(7081)
inline TGFrameworkSupport::Ellipses2dPtr TGFrameworkSupport::_IGroupAuto::GetEllipses2d ( ) {
    struct Ellipses2d * _result = 0;
    HRESULT _hr = get_Ellipses2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Ellipses2dPtr(_result, false);
}

#pragma implementation_key(7082)
inline TGFrameworkSupport::BSplineCurves2dPtr TGFrameworkSupport::_IGroupAuto::GetBSplineCurves2d ( ) {
    struct BSplineCurves2d * _result = 0;
    HRESULT _hr = get_BSplineCurves2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BSplineCurves2dPtr(_result, false);
}

#pragma implementation_key(7083)
inline TGFrameworkSupport::Points2dPtr TGFrameworkSupport::_IGroupAuto::GetPoints2d ( ) {
    struct Points2d * _result = 0;
    HRESULT _hr = get_Points2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Points2dPtr(_result, false);
}

#pragma implementation_key(7084)
inline TGFrameworkSupport::EllipticalArcs2dPtr TGFrameworkSupport::_IGroupAuto::GetEllipticalArcs2d ( ) {
    struct EllipticalArcs2d * _result = 0;
    HRESULT _hr = get_EllipticalArcs2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return EllipticalArcs2dPtr(_result, false);
}

#pragma implementation_key(7085)
inline TGFrameworkSupport::Curves2dPtr TGFrameworkSupport::_IGroupAuto::GetCurves2d ( ) {
    struct Curves2d * _result = 0;
    HRESULT _hr = get_Curves2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Curves2dPtr(_result, false);
}

#pragma implementation_key(7086)
inline TGFrameworkSupport::LineStrings2dPtr TGFrameworkSupport::_IGroupAuto::GetLineStrings2d ( ) {
    struct LineStrings2d * _result = 0;
    HRESULT _hr = get_LineStrings2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return LineStrings2dPtr(_result, false);
}

#pragma implementation_key(7087)
inline TGFrameworkSupport::ComplexStrings2dPtr TGFrameworkSupport::_IGroupAuto::GetComplexStrings2d ( ) {
    struct ComplexStrings2d * _result = 0;
    HRESULT _hr = get_ComplexStrings2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ComplexStrings2dPtr(_result, false);
}

#pragma implementation_key(7088)
inline TGFrameworkSupport::Boundaries2dPtr TGFrameworkSupport::_IGroupAuto::GetBoundaries2d ( ) {
    struct Boundaries2d * _result = 0;
    HRESULT _hr = get_Boundaries2d(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Boundaries2dPtr(_result, false);
}

#pragma implementation_key(7089)
inline TGFrameworkSupport::TextBoxesPtr TGFrameworkSupport::_IGroupAuto::GetTextBoxes ( ) {
    struct TextBoxes * _result = 0;
    HRESULT _hr = get_TextBoxes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TextBoxesPtr(_result, false);
}

#pragma implementation_key(7090)
inline TGFrameworkSupport::TextProfilesPtr TGFrameworkSupport::_IGroupAuto::GetTextProfiles ( ) {
    struct TextProfiles * _result = 0;
    HRESULT _hr = get_TextProfiles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TextProfilesPtr(_result, false);
}

#pragma implementation_key(7091)
inline TGFrameworkSupport::DatumFramesPtr TGFrameworkSupport::_IGroupAuto::GetDatumFrames ( ) {
    struct DatumFrames * _result = 0;
    HRESULT _hr = get_DatumFrames(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DatumFramesPtr(_result, false);
}

#pragma implementation_key(7092)
inline TGFrameworkSupport::FeatureControlFramesPtr TGFrameworkSupport::_IGroupAuto::GetFeatureControlFrames ( ) {
    struct FeatureControlFrames * _result = 0;
    HRESULT _hr = get_FeatureControlFrames(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return FeatureControlFramesPtr(_result, false);
}

#pragma implementation_key(7093)
inline TGFrameworkSupport::SurfaceFinishSymbolsPtr TGFrameworkSupport::_IGroupAuto::GetSurfaceFinishSymbols ( ) {
    struct SurfaceFinishSymbols * _result = 0;
    HRESULT _hr = get_SurfaceFinishSymbols(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SurfaceFinishSymbolsPtr(_result, false);
}

#pragma implementation_key(7094)
inline TGFrameworkSupport::WeldSymbolsPtr TGFrameworkSupport::_IGroupAuto::GetWeldSymbols ( ) {
    struct WeldSymbols * _result = 0;
    HRESULT _hr = get_WeldSymbols(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return WeldSymbolsPtr(_result, false);
}

#pragma implementation_key(7095)
inline TGFrameworkSupport::CenterMarksPtr TGFrameworkSupport::_IGroupAuto::GetCenterMarks ( ) {
    struct CenterMarks * _result = 0;
    HRESULT _hr = get_CenterMarks(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CenterMarksPtr(_result, false);
}

#pragma implementation_key(7096)
inline TGFrameworkSupport::CenterLinesPtr TGFrameworkSupport::_IGroupAuto::GetCenterLines ( ) {
    struct CenterLines * _result = 0;
    HRESULT _hr = get_CenterLines(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CenterLinesPtr(_result, false);
}

#pragma implementation_key(7097)
inline TGFrameworkSupport::DatumTargetsPtr TGFrameworkSupport::_IGroupAuto::GetDatumTargets ( ) {
    struct DatumTargets * _result = 0;
    HRESULT _hr = get_DatumTargets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DatumTargetsPtr(_result, false);
}

#pragma implementation_key(7098)
inline TGFrameworkSupport::PinSymbolsPtr TGFrameworkSupport::_IGroupAuto::GetPinSymbols ( ) {
    struct PinSymbols * _result = 0;
    HRESULT _hr = get_PinSymbols(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PinSymbolsPtr(_result, false);
}

#pragma implementation_key(7099)
inline TGFrameworkSupport::DatumPointsPtr TGFrameworkSupport::_IGroupAuto::GetDatumPoints ( ) {
    struct DatumPoints * _result = 0;
    HRESULT _hr = get_DatumPoints(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DatumPointsPtr(_result, false);
}

#pragma implementation_key(7100)
inline TGFrameworkSupport::CornerAnnotationsPtr TGFrameworkSupport::_IGroupAuto::GetCornerAnnotations ( ) {
    struct CornerAnnotations * _result = 0;
    HRESULT _hr = get_CornerAnnotations(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CornerAnnotationsPtr(_result, false);
}

#pragma implementation_key(7101)
inline TGFrameworkSupport::BoltHoleCirclesPtr TGFrameworkSupport::_IGroupAuto::GetBoltHoleCircles ( ) {
    struct BoltHoleCircles * _result = 0;
    HRESULT _hr = get_BoltHoleCircles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return BoltHoleCirclesPtr(_result, false);
}

#pragma implementation_key(7102)
inline TGFrameworkSupport::ConnectorsPtr TGFrameworkSupport::_IGroupAuto::GetConnectors ( ) {
    struct Connectors * _result = 0;
    HRESULT _hr = get_Connectors(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ConnectorsPtr(_result, false);
}

#pragma implementation_key(7103)
inline IDispatchPtr TGFrameworkSupport::_IGroupAuto::GetSymbols ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Symbols(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7104)
inline TGFrameworkSupport::GroupsPtr TGFrameworkSupport::_IGroupAuto::GetGroups ( ) {
    struct Groups * _result = 0;
    HRESULT _hr = get_Groups(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return GroupsPtr(_result, false);
}

#pragma implementation_key(7105)
inline IDispatchPtr TGFrameworkSupport::_IGroupAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7106)
inline VARIANT_BOOL TGFrameworkSupport::_IGroupAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7107)
inline void TGFrameworkSupport::_IGroupAuto::PutVisible ( VARIANT_BOOL Visible ) {
    HRESULT _hr = put_Visible(Visible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7108)
inline VARIANT_BOOL TGFrameworkSupport::_IGroupAuto::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Visible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7109)
inline void TGFrameworkSupport::_IGroupAuto::PutLocatable ( VARIANT_BOOL Locatable ) {
    HRESULT _hr = put_Locatable(Locatable);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7110)
inline VARIANT_BOOL TGFrameworkSupport::_IGroupAuto::GetLocatable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Locatable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7111)
inline void TGFrameworkSupport::_IGroupAuto::PutEditable ( VARIANT_BOOL Editable ) {
    HRESULT _hr = put_Editable(Editable);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7112)
inline VARIANT_BOOL TGFrameworkSupport::_IGroupAuto::GetEditable ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Editable(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7113)
inline void TGFrameworkSupport::_IGroupAuto::PutUserDefinedName ( _bstr_t Name ) {
    HRESULT _hr = put_UserDefinedName(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7114)
inline _bstr_t TGFrameworkSupport::_IGroupAuto::GetUserDefinedName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_UserDefinedName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7115)
inline IDispatchPtr TGFrameworkSupport::_IGroupAuto::GetDrawingViews ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_DrawingViews(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7116)
inline enum TGFrameworkSupport::LayoutElementTypeConstants TGFrameworkSupport::_IGroupAuto::GetLayoutElementType ( ) {
    enum LayoutElementTypeConstants _result;
    HRESULT _hr = get_LayoutElementType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface _IGroupStyleAuto wrapper method implementations
//

#pragma implementation_key(7117)
inline void TGFrameworkSupport::_IGroupStyleAuto::PutLinearColor ( long Color ) {
    HRESULT _hr = put_LinearColor(Color);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7118)
inline long TGFrameworkSupport::_IGroupStyleAuto::GetLinearColor ( ) {
    long _result = 0;
    HRESULT _hr = get_LinearColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7119)
inline double TGFrameworkSupport::_IGroupStyleAuto::GetWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7120)
inline void TGFrameworkSupport::_IGroupStyleAuto::PutWidth ( double PenWidth ) {
    HRESULT _hr = put_Width(PenWidth);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7121)
inline void TGFrameworkSupport::_IGroupStyleAuto::PutUnits ( long Units ) {
    HRESULT _hr = put_Units(Units);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7122)
inline long TGFrameworkSupport::_IGroupStyleAuto::GetUnits ( ) {
    long _result = 0;
    HRESULT _hr = get_Units(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7123)
inline VARIANT_BOOL TGFrameworkSupport::_IGroupStyleAuto::GetAutoPhase ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AutoPhase(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7124)
inline void TGFrameworkSupport::_IGroupStyleAuto::PutAutoPhase ( VARIANT_BOOL AutoPhase ) {
    HRESULT _hr = put_AutoPhase(AutoPhase);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7125)
inline long TGFrameworkSupport::_IGroupStyleAuto::GetDashGapCount ( ) {
    long _result = 0;
    HRESULT _hr = get_DashGapCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7126)
inline double TGFrameworkSupport::_IGroupStyleAuto::GetDashStrokePercent ( ) {
    double _result = 0;
    HRESULT _hr = get_DashStrokePercent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7127)
inline void TGFrameworkSupport::_IGroupStyleAuto::PutDashStrokePercent ( double DashStrokePercent ) {
    HRESULT _hr = put_DashStrokePercent(DashStrokePercent);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7128)
inline void TGFrameworkSupport::_IGroupStyleAuto::PutLinearName ( _bstr_t StyleName ) {
    HRESULT _hr = put_LinearName(StyleName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7129)
inline _bstr_t TGFrameworkSupport::_IGroupStyleAuto::GetLinearName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LinearName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7130)
inline void TGFrameworkSupport::_IGroupStyleAuto::PutDashName ( _bstr_t StyleName ) {
    HRESULT _hr = put_DashName(StyleName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7131)
inline _bstr_t TGFrameworkSupport::_IGroupStyleAuto::GetDashName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DashName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7132)
inline HRESULT TGFrameworkSupport::_IGroupStyleAuto::UseActiveStyle ( long StyleType ) {
    HRESULT _hr = raw_UseActiveStyle(StyleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7133)
inline HRESULT TGFrameworkSupport::_IGroupStyleAuto::SetDashGap ( long DashCount, SAFEARRAY * * Dashes ) {
    HRESULT _hr = raw_SetDashGap(DashCount, Dashes);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7134)
inline HRESULT TGFrameworkSupport::_IGroupStyleAuto::GetDashGap ( long DashCount, SAFEARRAY * * Dashes ) {
    HRESULT _hr = raw_GetDashGap(DashCount, Dashes);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _IDimensionStylesAuto wrapper method implementations
//

#pragma implementation_key(7135)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IDimensionStylesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(7136)
inline long TGFrameworkSupport::_IDimensionStylesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7137)
inline IDispatchPtr TGFrameworkSupport::_IDimensionStylesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7138)
inline TGFrameworkSupport::DimensionStylePtr TGFrameworkSupport::_IDimensionStylesAuto::Item ( const _variant_t & Index ) {
    struct DimensionStyle * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionStylePtr(_result, false);
}

#pragma implementation_key(7139)
inline IUnknownPtr TGFrameworkSupport::_IDimensionStylesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(7140)
inline TGFrameworkSupport::DimensionStylePtr TGFrameworkSupport::_IDimensionStylesAuto::Add ( _bstr_t Name, _bstr_t Parent ) {
    struct DimensionStyle * _result = 0;
    HRESULT _hr = raw_Add(Name, Parent, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionStylePtr(_result, false);
}

#pragma implementation_key(7141)
inline HRESULT TGFrameworkSupport::_IDimensionStylesAuto::Remove ( _bstr_t Name ) {
    HRESULT _hr = raw_Remove(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7142)
inline _bstr_t TGFrameworkSupport::_IDimensionStylesAuto::GetActive ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Active(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7143)
inline void TGFrameworkSupport::_IDimensionStylesAuto::PutActive ( _bstr_t Name ) {
    HRESULT _hr = put_Active(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7144)
inline HRESULT TGFrameworkSupport::_IDimensionStylesAuto::AddEx ( _bstr_t Name, VARIANT_BOOL bOverride, IDispatch * pSourceDoc ) {
    HRESULT _hr = raw_AddEx(Name, bOverride, pSourceDoc);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7145)
inline VARIANT_BOOL TGFrameworkSupport::_IDimensionStylesAuto::IsDimStyleExists ( _bstr_t DimensionStyle ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = raw_IsDimStyleExists(DimensionStyle, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface _IFeatureControlFrameDataSetsAuto wrapper method implementations
//

#pragma implementation_key(7146)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IFeatureControlFrameDataSetsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(7147)
inline long TGFrameworkSupport::_IFeatureControlFrameDataSetsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7148)
inline IDispatchPtr TGFrameworkSupport::_IFeatureControlFrameDataSetsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7149)
inline TGFrameworkSupport::FeatureControlFrameDataSetPtr TGFrameworkSupport::_IFeatureControlFrameDataSetsAuto::Item ( const _variant_t & Index ) {
    struct FeatureControlFrameDataSet * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return FeatureControlFrameDataSetPtr(_result, false);
}

#pragma implementation_key(7150)
inline IUnknownPtr TGFrameworkSupport::_IFeatureControlFrameDataSetsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(7151)
inline TGFrameworkSupport::FeatureControlFrameDataSetPtr TGFrameworkSupport::_IFeatureControlFrameDataSetsAuto::Add ( _bstr_t Name ) {
    struct FeatureControlFrameDataSet * _result = 0;
    HRESULT _hr = raw_Add(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return FeatureControlFrameDataSetPtr(_result, false);
}

#pragma implementation_key(7152)
inline HRESULT TGFrameworkSupport::_IFeatureControlFrameDataSetsAuto::Remove ( _bstr_t Name ) {
    HRESULT _hr = raw_Remove(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _IWeldSymbolDataSetsAuto wrapper method implementations
//

#pragma implementation_key(7153)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IWeldSymbolDataSetsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(7154)
inline long TGFrameworkSupport::_IWeldSymbolDataSetsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7155)
inline IDispatchPtr TGFrameworkSupport::_IWeldSymbolDataSetsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7156)
inline TGFrameworkSupport::WeldSymbolDataSetPtr TGFrameworkSupport::_IWeldSymbolDataSetsAuto::Item ( const _variant_t & Index ) {
    struct WeldSymbolDataSet * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return WeldSymbolDataSetPtr(_result, false);
}

#pragma implementation_key(7157)
inline IUnknownPtr TGFrameworkSupport::_IWeldSymbolDataSetsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(7158)
inline TGFrameworkSupport::WeldSymbolDataSetPtr TGFrameworkSupport::_IWeldSymbolDataSetsAuto::Add ( _bstr_t Name ) {
    struct WeldSymbolDataSet * _result = 0;
    HRESULT _hr = raw_Add(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return WeldSymbolDataSetPtr(_result, false);
}

#pragma implementation_key(7159)
inline HRESULT TGFrameworkSupport::_IWeldSymbolDataSetsAuto::Remove ( _bstr_t Name ) {
    HRESULT _hr = raw_Remove(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _ISurfaceFinishSymbolDataSetsAuto wrapper method implementations
//

#pragma implementation_key(7160)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_ISurfaceFinishSymbolDataSetsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(7161)
inline long TGFrameworkSupport::_ISurfaceFinishSymbolDataSetsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7162)
inline IDispatchPtr TGFrameworkSupport::_ISurfaceFinishSymbolDataSetsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7163)
inline TGFrameworkSupport::SurfaceFinishSymbolDataSetPtr TGFrameworkSupport::_ISurfaceFinishSymbolDataSetsAuto::Item ( const _variant_t & Index ) {
    struct SurfaceFinishSymbolDataSet * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SurfaceFinishSymbolDataSetPtr(_result, false);
}

#pragma implementation_key(7164)
inline IUnknownPtr TGFrameworkSupport::_ISurfaceFinishSymbolDataSetsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(7165)
inline TGFrameworkSupport::SurfaceFinishSymbolDataSetPtr TGFrameworkSupport::_ISurfaceFinishSymbolDataSetsAuto::Add ( _bstr_t Name ) {
    struct SurfaceFinishSymbolDataSet * _result = 0;
    HRESULT _hr = raw_Add(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SurfaceFinishSymbolDataSetPtr(_result, false);
}

#pragma implementation_key(7166)
inline HRESULT TGFrameworkSupport::_ISurfaceFinishSymbolDataSetsAuto::Remove ( _bstr_t Name ) {
    HRESULT _hr = raw_Remove(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _IFrameAuto wrapper method implementations
//

#pragma implementation_key(7167)
inline enum TGFrameworkSupport::FrameShapeConstants TGFrameworkSupport::_IFrameAuto::GetShapeOption ( ) {
    enum FrameShapeConstants _result;
    HRESULT _hr = get_ShapeOption(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7168)
inline void TGFrameworkSupport::_IFrameAuto::PutShapeOption ( enum FrameShapeConstants ShapeOption ) {
    HRESULT _hr = put_ShapeOption(ShapeOption);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7169)
inline VARIANT_BOOL TGFrameworkSupport::_IFrameAuto::GetBorderPrinted ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BorderPrinted(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7170)
inline void TGFrameworkSupport::_IFrameAuto::PutBorderPrinted ( VARIANT_BOOL Printed ) {
    HRESULT _hr = put_BorderPrinted(Printed);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7171)
inline VARIANT_BOOL TGFrameworkSupport::_IFrameAuto::GetBorderVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BorderVisible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7172)
inline void TGFrameworkSupport::_IFrameAuto::PutBorderVisible ( VARIANT_BOOL Visible ) {
    HRESULT _hr = put_BorderVisible(Visible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7173)
inline double TGFrameworkSupport::_IFrameAuto::GetMargin ( ) {
    double _result = 0;
    HRESULT _hr = get_Margin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7174)
inline void TGFrameworkSupport::_IFrameAuto::PutMargin ( double Margin ) {
    HRESULT _hr = put_Margin(Margin);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7175)
inline double TGFrameworkSupport::_IFrameAuto::GetBorderWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_BorderWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7176)
inline void TGFrameworkSupport::_IFrameAuto::PutBorderWidth ( double Margin ) {
    HRESULT _hr = put_BorderWidth(Margin);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7177)
inline long TGFrameworkSupport::_IFrameAuto::GetBorderColor ( ) {
    long _result = 0;
    HRESULT _hr = get_BorderColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7178)
inline void TGFrameworkSupport::_IFrameAuto::PutBorderColor ( long Color ) {
    HRESULT _hr = put_BorderColor(Color);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7179)
inline _bstr_t TGFrameworkSupport::_IFrameAuto::GetBorderDashTypeName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BorderDashTypeName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7180)
inline void TGFrameworkSupport::_IFrameAuto::PutBorderDashTypeName ( _bstr_t Name ) {
    HRESULT _hr = put_BorderDashTypeName(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface _ISmartFrame2dDefaultsAuto wrapper method implementations
//

#pragma implementation_key(7181)
inline VARIANT_BOOL TGFrameworkSupport::_ISmartFrame2dDefaultsAuto::GetContentsVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ContentsVisible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7182)
inline void TGFrameworkSupport::_ISmartFrame2dDefaultsAuto::PutContentsVisible ( VARIANT_BOOL Visible ) {
    HRESULT _hr = put_ContentsVisible(Visible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7183)
inline double TGFrameworkSupport::_ISmartFrame2dDefaultsAuto::GetCropBottom ( ) {
    double _result = 0;
    HRESULT _hr = get_CropBottom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7184)
inline void TGFrameworkSupport::_ISmartFrame2dDefaultsAuto::PutCropBottom ( double Distance ) {
    HRESULT _hr = put_CropBottom(Distance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7185)
inline double TGFrameworkSupport::_ISmartFrame2dDefaultsAuto::GetCropLeft ( ) {
    double _result = 0;
    HRESULT _hr = get_CropLeft(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7186)
inline void TGFrameworkSupport::_ISmartFrame2dDefaultsAuto::PutCropLeft ( double Distance ) {
    HRESULT _hr = put_CropLeft(Distance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7187)
inline double TGFrameworkSupport::_ISmartFrame2dDefaultsAuto::GetCropRight ( ) {
    double _result = 0;
    HRESULT _hr = get_CropRight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7188)
inline void TGFrameworkSupport::_ISmartFrame2dDefaultsAuto::PutCropRight ( double Distance ) {
    HRESULT _hr = put_CropRight(Distance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7189)
inline double TGFrameworkSupport::_ISmartFrame2dDefaultsAuto::GetCropTop ( ) {
    double _result = 0;
    HRESULT _hr = get_CropTop(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7190)
inline void TGFrameworkSupport::_ISmartFrame2dDefaultsAuto::PutCropTop ( double Distance ) {
    HRESULT _hr = put_CropTop(Distance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7191)
inline VARIANT_BOOL TGFrameworkSupport::_ISmartFrame2dDefaultsAuto::GetIsLinkPublic ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsLinkPublic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7192)
inline void TGFrameworkSupport::_ISmartFrame2dDefaultsAuto::PutIsLinkPublic ( VARIANT_BOOL IsPublic ) {
    HRESULT _hr = put_IsLinkPublic(IsPublic);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7193)
inline VARIANT_BOOL TGFrameworkSupport::_ISmartFrame2dDefaultsAuto::GetProtectFromSelection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ProtectFromSelection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7194)
inline void TGFrameworkSupport::_ISmartFrame2dDefaultsAuto::PutProtectFromSelection ( VARIANT_BOOL Protect ) {
    HRESULT _hr = put_ProtectFromSelection(Protect);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7195)
inline double TGFrameworkSupport::_ISmartFrame2dDefaultsAuto::GetRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_Rotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7196)
inline void TGFrameworkSupport::_ISmartFrame2dDefaultsAuto::PutRotation ( double Angle ) {
    HRESULT _hr = put_Rotation(Angle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7197)
inline double TGFrameworkSupport::_ISmartFrame2dDefaultsAuto::GetScaleFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_ScaleFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7198)
inline void TGFrameworkSupport::_ISmartFrame2dDefaultsAuto::PutScaleFactor ( double Factor ) {
    HRESULT _hr = put_ScaleFactor(Factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7199)
inline enum TGFrameworkSupport::UpdateOptionConstants TGFrameworkSupport::_ISmartFrame2dDefaultsAuto::GetUpdateOption ( ) {
    enum UpdateOptionConstants _result;
    HRESULT _hr = get_UpdateOption(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7200)
inline void TGFrameworkSupport::_ISmartFrame2dDefaultsAuto::PutUpdateOption ( enum UpdateOptionConstants option ) {
    HRESULT _hr = put_UpdateOption(option);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7201)
inline HRESULT TGFrameworkSupport::_ISmartFrame2dDefaultsAuto::GetOrigin ( double * xOrigin, double * yOrigin ) {
    HRESULT _hr = raw_GetOrigin(xOrigin, yOrigin);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7202)
inline HRESULT TGFrameworkSupport::_ISmartFrame2dDefaultsAuto::SetOrigin ( double xOrigin, double yOrigin ) {
    HRESULT _hr = raw_SetOrigin(xOrigin, yOrigin);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface Frame wrapper method implementations
//

#pragma implementation_key(7203)
inline enum TGFrameworkSupport::FrameShapeConstants TGFrameworkSupport::Frame::GetShapeOption ( ) {
    enum FrameShapeConstants _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7204)
inline void TGFrameworkSupport::Frame::PutShapeOption ( enum FrameShapeConstants _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(7205)
inline VARIANT_BOOL TGFrameworkSupport::Frame::GetBorderPrinted ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7206)
inline void TGFrameworkSupport::Frame::PutBorderPrinted ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(7207)
inline VARIANT_BOOL TGFrameworkSupport::Frame::GetBorderVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7208)
inline void TGFrameworkSupport::Frame::PutBorderVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(7209)
inline double TGFrameworkSupport::Frame::GetMargin ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7210)
inline void TGFrameworkSupport::Frame::PutMargin ( double _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(7211)
inline double TGFrameworkSupport::Frame::GetBorderWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7212)
inline void TGFrameworkSupport::Frame::PutBorderWidth ( double _arg1 ) {
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(7213)
inline long TGFrameworkSupport::Frame::GetBorderColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7214)
inline void TGFrameworkSupport::Frame::PutBorderColor ( long _arg1 ) {
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(7215)
inline _bstr_t TGFrameworkSupport::Frame::GetBorderDashTypeName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7216)
inline void TGFrameworkSupport::Frame::PutBorderDashTypeName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

//
// dispinterface SmartFrame2dStyle wrapper method implementations
//

#pragma implementation_key(7217)
inline TGFramework::ApplicationPtr TGFrameworkSupport::SmartFrame2dStyle::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(7218)
inline IDispatchPtr TGFrameworkSupport::SmartFrame2dStyle::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7219)
inline long TGFrameworkSupport::SmartFrame2dStyle::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7220)
inline TGFrameworkSupport::SmartFrame2dDefaultsPtr TGFrameworkSupport::SmartFrame2dStyle::GetBehaviorDefaults ( ) {
    struct SmartFrame2dDefaults * _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SmartFrame2dDefaultsPtr(_result, false);
}

#pragma implementation_key(7221)
inline TGFrameworkSupport::FramePtr TGFrameworkSupport::SmartFrame2dStyle::GetFrameDefaults ( ) {
    struct Frame * _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return FramePtr(_result, false);
}

#pragma implementation_key(7222)
inline VARIANT_BOOL TGFrameworkSupport::SmartFrame2dStyle::GetLocateChildren ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x20, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7223)
inline void TGFrameworkSupport::SmartFrame2dStyle::PutLocateChildren ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x20, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(7224)
inline _bstr_t TGFrameworkSupport::SmartFrame2dStyle::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7225)
inline void TGFrameworkSupport::SmartFrame2dStyle::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(7226)
inline enum TGFrameworkSupport::PlacementMethodConstants TGFrameworkSupport::SmartFrame2dStyle::GetPlacement ( ) {
    enum PlacementMethodConstants _result;
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7227)
inline void TGFrameworkSupport::SmartFrame2dStyle::PutPlacement ( enum PlacementMethodConstants _arg1 ) {
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(7228)
inline VARIANT_BOOL TGFrameworkSupport::SmartFrame2dStyle::GetPrinted ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7229)
inline void TGFrameworkSupport::SmartFrame2dStyle::PutPrinted ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(7230)
inline enum TGFrameworkSupport::SizeModeConstants TGFrameworkSupport::SmartFrame2dStyle::GetSizeMode ( ) {
    enum SizeModeConstants _result;
    _com_dispatch_method(this, 0x1f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7231)
inline void TGFrameworkSupport::SmartFrame2dStyle::PutSizeMode ( enum SizeModeConstants _arg1 ) {
    _com_dispatch_method(this, 0x1f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(7232)
inline enum TGFrameworkSupport::FrameShapeConstants TGFrameworkSupport::SmartFrame2dStyle::GetShapeOption ( ) {
    enum FrameShapeConstants _result;
    _com_dispatch_method(this, 0x2005, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7233)
inline void TGFrameworkSupport::SmartFrame2dStyle::PutShapeOption ( enum FrameShapeConstants _arg1 ) {
    _com_dispatch_method(this, 0x2005, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(7234)
inline VARIANT_BOOL TGFrameworkSupport::SmartFrame2dStyle::GetBorderPrinted ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2009, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7235)
inline void TGFrameworkSupport::SmartFrame2dStyle::PutBorderPrinted ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x2009, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(7236)
inline VARIANT_BOOL TGFrameworkSupport::SmartFrame2dStyle::GetBorderVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x200b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7237)
inline void TGFrameworkSupport::SmartFrame2dStyle::PutBorderVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x200b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(7238)
inline double TGFrameworkSupport::SmartFrame2dStyle::GetMargin ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x200a, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7239)
inline void TGFrameworkSupport::SmartFrame2dStyle::PutMargin ( double _arg1 ) {
    _com_dispatch_method(this, 0x200a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(7240)
inline double TGFrameworkSupport::SmartFrame2dStyle::GetBorderWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x200d, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7241)
inline void TGFrameworkSupport::SmartFrame2dStyle::PutBorderWidth ( double _arg1 ) {
    _com_dispatch_method(this, 0x200d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(7242)
inline long TGFrameworkSupport::SmartFrame2dStyle::GetBorderColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x200c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7243)
inline void TGFrameworkSupport::SmartFrame2dStyle::PutBorderColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x200c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(7244)
inline _bstr_t TGFrameworkSupport::SmartFrame2dStyle::GetBorderDashTypeName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x200e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7245)
inline void TGFrameworkSupport::SmartFrame2dStyle::PutBorderDashTypeName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x200e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(7246)
inline VARIANT_BOOL TGFrameworkSupport::SmartFrame2dStyle::GetContentsVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4004, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7247)
inline void TGFrameworkSupport::SmartFrame2dStyle::PutContentsVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4004, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(7248)
inline double TGFrameworkSupport::SmartFrame2dStyle::GetCropBottom ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4006, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7249)
inline void TGFrameworkSupport::SmartFrame2dStyle::PutCropBottom ( double _arg1 ) {
    _com_dispatch_method(this, 0x4006, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(7250)
inline double TGFrameworkSupport::SmartFrame2dStyle::GetCropLeft ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4007, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7251)
inline void TGFrameworkSupport::SmartFrame2dStyle::PutCropLeft ( double _arg1 ) {
    _com_dispatch_method(this, 0x4007, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(7252)
inline double TGFrameworkSupport::SmartFrame2dStyle::GetCropRight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4008, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7253)
inline void TGFrameworkSupport::SmartFrame2dStyle::PutCropRight ( double _arg1 ) {
    _com_dispatch_method(this, 0x4008, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(7254)
inline double TGFrameworkSupport::SmartFrame2dStyle::GetCropTop ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4009, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7255)
inline void TGFrameworkSupport::SmartFrame2dStyle::PutCropTop ( double _arg1 ) {
    _com_dispatch_method(this, 0x4009, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(7256)
inline VARIANT_BOOL TGFrameworkSupport::SmartFrame2dStyle::GetIsLinkPublic ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x400f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7257)
inline void TGFrameworkSupport::SmartFrame2dStyle::PutIsLinkPublic ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x400f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(7258)
inline VARIANT_BOOL TGFrameworkSupport::SmartFrame2dStyle::GetProtectFromSelection ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4018, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7259)
inline void TGFrameworkSupport::SmartFrame2dStyle::PutProtectFromSelection ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4018, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(7260)
inline double TGFrameworkSupport::SmartFrame2dStyle::GetRotation ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x401b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7261)
inline void TGFrameworkSupport::SmartFrame2dStyle::PutRotation ( double _arg1 ) {
    _com_dispatch_method(this, 0x401b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(7262)
inline double TGFrameworkSupport::SmartFrame2dStyle::GetScaleFactor ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x401c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7263)
inline void TGFrameworkSupport::SmartFrame2dStyle::PutScaleFactor ( double _arg1 ) {
    _com_dispatch_method(this, 0x401c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(7264)
inline enum TGFrameworkSupport::UpdateOptionConstants TGFrameworkSupport::SmartFrame2dStyle::GetUpdateOption ( ) {
    enum UpdateOptionConstants _result;
    _com_dispatch_method(this, 0x401f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7265)
inline void TGFrameworkSupport::SmartFrame2dStyle::PutUpdateOption ( enum UpdateOptionConstants _arg1 ) {
    _com_dispatch_method(this, 0x401f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(7266)
inline HRESULT TGFrameworkSupport::SmartFrame2dStyle::GetOrigin ( double * xOrigin, double * yOrigin ) {
    return _com_dispatch_method(this, 0x4021, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", xOrigin, yOrigin);
}

#pragma implementation_key(7267)
inline HRESULT TGFrameworkSupport::SmartFrame2dStyle::SetOrigin ( double xOrigin, double yOrigin ) {
    return _com_dispatch_method(this, 0x4022, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", xOrigin, yOrigin);
}

#pragma implementation_key(7268)
inline IDispatchPtr TGFrameworkSupport::SmartFrame2dStyle::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7269)
inline VARIANT_BOOL TGFrameworkSupport::SmartFrame2dStyle::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// dispinterface SmartFrame2dDefaults wrapper method implementations
//

#pragma implementation_key(7270)
inline VARIANT_BOOL TGFrameworkSupport::SmartFrame2dDefaults::GetContentsVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7271)
inline void TGFrameworkSupport::SmartFrame2dDefaults::PutContentsVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(7272)
inline double TGFrameworkSupport::SmartFrame2dDefaults::GetCropBottom ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7273)
inline void TGFrameworkSupport::SmartFrame2dDefaults::PutCropBottom ( double _arg1 ) {
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(7274)
inline double TGFrameworkSupport::SmartFrame2dDefaults::GetCropLeft ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7275)
inline void TGFrameworkSupport::SmartFrame2dDefaults::PutCropLeft ( double _arg1 ) {
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(7276)
inline double TGFrameworkSupport::SmartFrame2dDefaults::GetCropRight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7277)
inline void TGFrameworkSupport::SmartFrame2dDefaults::PutCropRight ( double _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(7278)
inline double TGFrameworkSupport::SmartFrame2dDefaults::GetCropTop ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7279)
inline void TGFrameworkSupport::SmartFrame2dDefaults::PutCropTop ( double _arg1 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(7280)
inline VARIANT_BOOL TGFrameworkSupport::SmartFrame2dDefaults::GetIsLinkPublic ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7281)
inline void TGFrameworkSupport::SmartFrame2dDefaults::PutIsLinkPublic ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(7282)
inline VARIANT_BOOL TGFrameworkSupport::SmartFrame2dDefaults::GetProtectFromSelection ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7283)
inline void TGFrameworkSupport::SmartFrame2dDefaults::PutProtectFromSelection ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(7284)
inline double TGFrameworkSupport::SmartFrame2dDefaults::GetRotation ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7285)
inline void TGFrameworkSupport::SmartFrame2dDefaults::PutRotation ( double _arg1 ) {
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(7286)
inline double TGFrameworkSupport::SmartFrame2dDefaults::GetScaleFactor ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7287)
inline void TGFrameworkSupport::SmartFrame2dDefaults::PutScaleFactor ( double _arg1 ) {
    _com_dispatch_method(this, 0x1c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(7288)
inline enum TGFrameworkSupport::UpdateOptionConstants TGFrameworkSupport::SmartFrame2dDefaults::GetUpdateOption ( ) {
    enum UpdateOptionConstants _result;
    _com_dispatch_method(this, 0x1f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7289)
inline void TGFrameworkSupport::SmartFrame2dDefaults::PutUpdateOption ( enum UpdateOptionConstants _arg1 ) {
    _com_dispatch_method(this, 0x1f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(7290)
inline HRESULT TGFrameworkSupport::SmartFrame2dDefaults::GetOrigin ( double * xOrigin, double * yOrigin ) {
    return _com_dispatch_method(this, 0x21, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", xOrigin, yOrigin);
}

#pragma implementation_key(7291)
inline HRESULT TGFrameworkSupport::SmartFrame2dDefaults::SetOrigin ( double xOrigin, double yOrigin ) {
    return _com_dispatch_method(this, 0x22, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", xOrigin, yOrigin);
}

//
// interface _ISmartFrame2dStyleAuto wrapper method implementations
//

#pragma implementation_key(7292)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_ISmartFrame2dStyleAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(7293)
inline IDispatchPtr TGFrameworkSupport::_ISmartFrame2dStyleAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7294)
inline long TGFrameworkSupport::_ISmartFrame2dStyleAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7295)
inline TGFrameworkSupport::SmartFrame2dDefaultsPtr TGFrameworkSupport::_ISmartFrame2dStyleAuto::GetBehaviorDefaults ( ) {
    struct SmartFrame2dDefaults * _result = 0;
    HRESULT _hr = get_BehaviorDefaults(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SmartFrame2dDefaultsPtr(_result, false);
}

#pragma implementation_key(7296)
inline TGFrameworkSupport::FramePtr TGFrameworkSupport::_ISmartFrame2dStyleAuto::GetFrameDefaults ( ) {
    struct Frame * _result = 0;
    HRESULT _hr = get_FrameDefaults(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return FramePtr(_result, false);
}

#pragma implementation_key(7297)
inline VARIANT_BOOL TGFrameworkSupport::_ISmartFrame2dStyleAuto::GetLocateChildren ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_LocateChildren(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7298)
inline void TGFrameworkSupport::_ISmartFrame2dStyleAuto::PutLocateChildren ( VARIANT_BOOL Locate ) {
    HRESULT _hr = put_LocateChildren(Locate);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7299)
inline _bstr_t TGFrameworkSupport::_ISmartFrame2dStyleAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7300)
inline void TGFrameworkSupport::_ISmartFrame2dStyleAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7301)
inline enum TGFrameworkSupport::PlacementMethodConstants TGFrameworkSupport::_ISmartFrame2dStyleAuto::GetPlacement ( ) {
    enum PlacementMethodConstants _result;
    HRESULT _hr = get_Placement(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7302)
inline void TGFrameworkSupport::_ISmartFrame2dStyleAuto::PutPlacement ( enum PlacementMethodConstants option ) {
    HRESULT _hr = put_Placement(option);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7303)
inline VARIANT_BOOL TGFrameworkSupport::_ISmartFrame2dStyleAuto::GetPrinted ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Printed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7304)
inline void TGFrameworkSupport::_ISmartFrame2dStyleAuto::PutPrinted ( VARIANT_BOOL Printed ) {
    HRESULT _hr = put_Printed(Printed);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7305)
inline enum TGFrameworkSupport::SizeModeConstants TGFrameworkSupport::_ISmartFrame2dStyleAuto::GetSizeMode ( ) {
    enum SizeModeConstants _result;
    HRESULT _hr = get_SizeMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7306)
inline void TGFrameworkSupport::_ISmartFrame2dStyleAuto::PutSizeMode ( enum SizeModeConstants Mode ) {
    HRESULT _hr = put_SizeMode(Mode);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7307)
inline enum TGFrameworkSupport::FrameShapeConstants TGFrameworkSupport::_ISmartFrame2dStyleAuto::GetShapeOption ( ) {
    enum FrameShapeConstants _result;
    HRESULT _hr = get_ShapeOption(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7308)
inline void TGFrameworkSupport::_ISmartFrame2dStyleAuto::PutShapeOption ( enum FrameShapeConstants ShapeOption ) {
    HRESULT _hr = put_ShapeOption(ShapeOption);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7309)
inline VARIANT_BOOL TGFrameworkSupport::_ISmartFrame2dStyleAuto::GetBorderPrinted ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BorderPrinted(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7310)
inline void TGFrameworkSupport::_ISmartFrame2dStyleAuto::PutBorderPrinted ( VARIANT_BOOL Printed ) {
    HRESULT _hr = put_BorderPrinted(Printed);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7311)
inline VARIANT_BOOL TGFrameworkSupport::_ISmartFrame2dStyleAuto::GetBorderVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BorderVisible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7312)
inline void TGFrameworkSupport::_ISmartFrame2dStyleAuto::PutBorderVisible ( VARIANT_BOOL Visible ) {
    HRESULT _hr = put_BorderVisible(Visible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7313)
inline double TGFrameworkSupport::_ISmartFrame2dStyleAuto::GetMargin ( ) {
    double _result = 0;
    HRESULT _hr = get_Margin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7314)
inline void TGFrameworkSupport::_ISmartFrame2dStyleAuto::PutMargin ( double Margin ) {
    HRESULT _hr = put_Margin(Margin);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7315)
inline double TGFrameworkSupport::_ISmartFrame2dStyleAuto::GetBorderWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_BorderWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7316)
inline void TGFrameworkSupport::_ISmartFrame2dStyleAuto::PutBorderWidth ( double Margin ) {
    HRESULT _hr = put_BorderWidth(Margin);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7317)
inline long TGFrameworkSupport::_ISmartFrame2dStyleAuto::GetBorderColor ( ) {
    long _result = 0;
    HRESULT _hr = get_BorderColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7318)
inline void TGFrameworkSupport::_ISmartFrame2dStyleAuto::PutBorderColor ( long Color ) {
    HRESULT _hr = put_BorderColor(Color);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7319)
inline _bstr_t TGFrameworkSupport::_ISmartFrame2dStyleAuto::GetBorderDashTypeName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BorderDashTypeName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7320)
inline void TGFrameworkSupport::_ISmartFrame2dStyleAuto::PutBorderDashTypeName ( _bstr_t Name ) {
    HRESULT _hr = put_BorderDashTypeName(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7321)
inline VARIANT_BOOL TGFrameworkSupport::_ISmartFrame2dStyleAuto::GetContentsVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ContentsVisible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7322)
inline void TGFrameworkSupport::_ISmartFrame2dStyleAuto::PutContentsVisible ( VARIANT_BOOL Visible ) {
    HRESULT _hr = put_ContentsVisible(Visible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7323)
inline double TGFrameworkSupport::_ISmartFrame2dStyleAuto::GetCropBottom ( ) {
    double _result = 0;
    HRESULT _hr = get_CropBottom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7324)
inline void TGFrameworkSupport::_ISmartFrame2dStyleAuto::PutCropBottom ( double Distance ) {
    HRESULT _hr = put_CropBottom(Distance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7325)
inline double TGFrameworkSupport::_ISmartFrame2dStyleAuto::GetCropLeft ( ) {
    double _result = 0;
    HRESULT _hr = get_CropLeft(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7326)
inline void TGFrameworkSupport::_ISmartFrame2dStyleAuto::PutCropLeft ( double Distance ) {
    HRESULT _hr = put_CropLeft(Distance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7327)
inline double TGFrameworkSupport::_ISmartFrame2dStyleAuto::GetCropRight ( ) {
    double _result = 0;
    HRESULT _hr = get_CropRight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7328)
inline void TGFrameworkSupport::_ISmartFrame2dStyleAuto::PutCropRight ( double Distance ) {
    HRESULT _hr = put_CropRight(Distance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7329)
inline double TGFrameworkSupport::_ISmartFrame2dStyleAuto::GetCropTop ( ) {
    double _result = 0;
    HRESULT _hr = get_CropTop(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7330)
inline void TGFrameworkSupport::_ISmartFrame2dStyleAuto::PutCropTop ( double Distance ) {
    HRESULT _hr = put_CropTop(Distance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7331)
inline VARIANT_BOOL TGFrameworkSupport::_ISmartFrame2dStyleAuto::GetIsLinkPublic ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsLinkPublic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7332)
inline void TGFrameworkSupport::_ISmartFrame2dStyleAuto::PutIsLinkPublic ( VARIANT_BOOL IsPublic ) {
    HRESULT _hr = put_IsLinkPublic(IsPublic);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7333)
inline VARIANT_BOOL TGFrameworkSupport::_ISmartFrame2dStyleAuto::GetProtectFromSelection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ProtectFromSelection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7334)
inline void TGFrameworkSupport::_ISmartFrame2dStyleAuto::PutProtectFromSelection ( VARIANT_BOOL Protect ) {
    HRESULT _hr = put_ProtectFromSelection(Protect);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7335)
inline double TGFrameworkSupport::_ISmartFrame2dStyleAuto::GetRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_Rotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7336)
inline void TGFrameworkSupport::_ISmartFrame2dStyleAuto::PutRotation ( double Angle ) {
    HRESULT _hr = put_Rotation(Angle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7337)
inline double TGFrameworkSupport::_ISmartFrame2dStyleAuto::GetScaleFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_ScaleFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7338)
inline void TGFrameworkSupport::_ISmartFrame2dStyleAuto::PutScaleFactor ( double Factor ) {
    HRESULT _hr = put_ScaleFactor(Factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7339)
inline enum TGFrameworkSupport::UpdateOptionConstants TGFrameworkSupport::_ISmartFrame2dStyleAuto::GetUpdateOption ( ) {
    enum UpdateOptionConstants _result;
    HRESULT _hr = get_UpdateOption(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7340)
inline void TGFrameworkSupport::_ISmartFrame2dStyleAuto::PutUpdateOption ( enum UpdateOptionConstants option ) {
    HRESULT _hr = put_UpdateOption(option);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7341)
inline HRESULT TGFrameworkSupport::_ISmartFrame2dStyleAuto::GetOrigin ( double * xOrigin, double * yOrigin ) {
    HRESULT _hr = raw_GetOrigin(xOrigin, yOrigin);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7342)
inline HRESULT TGFrameworkSupport::_ISmartFrame2dStyleAuto::SetOrigin ( double xOrigin, double yOrigin ) {
    HRESULT _hr = raw_SetOrigin(xOrigin, yOrigin);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7343)
inline IDispatchPtr TGFrameworkSupport::_ISmartFrame2dStyleAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7344)
inline VARIANT_BOOL TGFrameworkSupport::_ISmartFrame2dStyleAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface _ISmartFrame2dAuto wrapper method implementations
//

#pragma implementation_key(7345)
inline TGFrameworkSupport::FramePtr TGFrameworkSupport::_ISmartFrame2dAuto::GetFrame ( ) {
    struct Frame * _result = 0;
    HRESULT _hr = get_Frame(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return FramePtr(_result, false);
}

#pragma implementation_key(7346)
inline void TGFrameworkSupport::_ISmartFrame2dAuto::PutStyle ( struct SmartFrame2dStyle * Style ) {
    HRESULT _hr = put_Style(Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7347)
inline TGFrameworkSupport::SmartFrame2dStylePtr TGFrameworkSupport::_ISmartFrame2dAuto::GetStyle ( ) {
    struct SmartFrame2dStyle * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SmartFrame2dStylePtr(_result, false);
}

#pragma implementation_key(7348)
inline void TGFrameworkSupport::_ISmartFrame2dAuto::PutContentsVisible ( VARIANT_BOOL Visible ) {
    HRESULT _hr = put_ContentsVisible(Visible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7349)
inline VARIANT_BOOL TGFrameworkSupport::_ISmartFrame2dAuto::GetContentsVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ContentsVisible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7350)
inline void TGFrameworkSupport::_ISmartFrame2dAuto::PutCropRight ( double Distance ) {
    HRESULT _hr = put_CropRight(Distance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7351)
inline double TGFrameworkSupport::_ISmartFrame2dAuto::GetCropRight ( ) {
    double _result = 0;
    HRESULT _hr = get_CropRight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7352)
inline void TGFrameworkSupport::_ISmartFrame2dAuto::PutCropTop ( double Offset ) {
    HRESULT _hr = put_CropTop(Offset);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7353)
inline double TGFrameworkSupport::_ISmartFrame2dAuto::GetCropTop ( ) {
    double _result = 0;
    HRESULT _hr = get_CropTop(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7354)
inline void TGFrameworkSupport::_ISmartFrame2dAuto::PutCropBottom ( double Distance ) {
    HRESULT _hr = put_CropBottom(Distance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7355)
inline double TGFrameworkSupport::_ISmartFrame2dAuto::GetCropBottom ( ) {
    double _result = 0;
    HRESULT _hr = get_CropBottom(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7356)
inline void TGFrameworkSupport::_ISmartFrame2dAuto::PutCropLeft ( double Distance ) {
    HRESULT _hr = put_CropLeft(Distance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7357)
inline double TGFrameworkSupport::_ISmartFrame2dAuto::GetCropLeft ( ) {
    double _result = 0;
    HRESULT _hr = get_CropLeft(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7358)
inline void TGFrameworkSupport::_ISmartFrame2dAuto::PutDescription ( _bstr_t Description ) {
    HRESULT _hr = put_Description(Description);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7359)
inline _bstr_t TGFrameworkSupport::_ISmartFrame2dAuto::GetDescription ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Description(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7360)
inline void TGFrameworkSupport::_ISmartFrame2dAuto::PutDisplayType ( enum DisplayTypeConstants Type ) {
    HRESULT _hr = put_DisplayType(Type);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7361)
inline enum TGFrameworkSupport::DisplayTypeConstants TGFrameworkSupport::_ISmartFrame2dAuto::GetDisplayType ( ) {
    enum DisplayTypeConstants _result;
    HRESULT _hr = get_DisplayType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7362)
inline VARIANT_BOOL TGFrameworkSupport::_ISmartFrame2dAuto::GetIsLink ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsLink(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7363)
inline void TGFrameworkSupport::_ISmartFrame2dAuto::PutIsLinkPublic ( VARIANT_BOOL LinkPublic ) {
    HRESULT _hr = put_IsLinkPublic(LinkPublic);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7364)
inline VARIANT_BOOL TGFrameworkSupport::_ISmartFrame2dAuto::GetIsLinkPublic ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsLinkPublic(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7365)
inline _bstr_t TGFrameworkSupport::_ISmartFrame2dAuto::GetObjectType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ObjectType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7366)
inline long TGFrameworkSupport::_ISmartFrame2dAuto::GetObjectVerbsCount ( ) {
    long _result = 0;
    HRESULT _hr = get_ObjectVerbsCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7367)
inline void TGFrameworkSupport::_ISmartFrame2dAuto::PutProtectFromSelection ( VARIANT_BOOL Protect ) {
    HRESULT _hr = put_ProtectFromSelection(Protect);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7368)
inline VARIANT_BOOL TGFrameworkSupport::_ISmartFrame2dAuto::GetProtectFromSelection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ProtectFromSelection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7369)
inline void TGFrameworkSupport::_ISmartFrame2dAuto::PutRotationAngle ( double Angle ) {
    HRESULT _hr = put_RotationAngle(Angle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7370)
inline double TGFrameworkSupport::_ISmartFrame2dAuto::GetRotationAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_RotationAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7371)
inline void TGFrameworkSupport::_ISmartFrame2dAuto::PutScaleFactor ( double ScaleFactor ) {
    HRESULT _hr = put_ScaleFactor(ScaleFactor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7372)
inline double TGFrameworkSupport::_ISmartFrame2dAuto::GetScaleFactor ( ) {
    double _result = 0;
    HRESULT _hr = get_ScaleFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7373)
inline IDispatchPtr TGFrameworkSupport::_ISmartFrame2dAuto::GetObject ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Object(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7374)
inline void TGFrameworkSupport::_ISmartFrame2dAuto::PutAutomaticLinkUpdate ( VARIANT_BOOL Automatic ) {
    HRESULT _hr = put_AutomaticLinkUpdate(Automatic);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7375)
inline VARIANT_BOOL TGFrameworkSupport::_ISmartFrame2dAuto::GetAutomaticLinkUpdate ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_AutomaticLinkUpdate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7376)
inline _bstr_t TGFrameworkSupport::_ISmartFrame2dAuto::LinkMoniker ( const _variant_t & WantDisplayableVersion ) {
    BSTR _result = 0;
    HRESULT _hr = raw_LinkMoniker(WantDisplayableVersion, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7377)
inline _bstr_t TGFrameworkSupport::_ISmartFrame2dAuto::ObjectVerbs ( const _variant_t & Index ) {
    BSTR _result = 0;
    HRESULT _hr = raw_ObjectVerbs(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7378)
inline HRESULT TGFrameworkSupport::_ISmartFrame2dAuto::GetOrigin ( double * x, double * y ) {
    HRESULT _hr = raw_GetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7379)
inline HRESULT TGFrameworkSupport::_ISmartFrame2dAuto::SetOrigin ( double x, double y ) {
    HRESULT _hr = raw_SetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7380)
inline HRESULT TGFrameworkSupport::_ISmartFrame2dAuto::ChangeCrop ( double top, double bottom, double left, double right ) {
    HRESULT _hr = raw_ChangeCrop(top, bottom, left, right);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7381)
inline HRESULT TGFrameworkSupport::_ISmartFrame2dAuto::CreateLink ( const _variant_t & SourceDoc, const _variant_t & SourceItem ) {
    HRESULT _hr = raw_CreateLink(SourceDoc, SourceItem);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7382)
inline HRESULT TGFrameworkSupport::_ISmartFrame2dAuto::CreateEmbed ( const _variant_t & SourceDoc, const _variant_t & ObjectType ) {
    HRESULT _hr = raw_CreateEmbed(SourceDoc, ObjectType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7383)
inline HRESULT TGFrameworkSupport::_ISmartFrame2dAuto::DoVerb ( const _variant_t & DoVerb ) {
    HRESULT _hr = raw_DoVerb(DoVerb);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7384)
inline HRESULT TGFrameworkSupport::_ISmartFrame2dAuto::Fit ( ) {
    HRESULT _hr = raw_Fit();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7385)
inline HRESULT TGFrameworkSupport::_ISmartFrame2dAuto::Update ( ) {
    HRESULT _hr = raw_Update();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7386)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_ISmartFrame2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(7387)
inline long TGFrameworkSupport::_ISmartFrame2dAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7388)
inline _bstr_t TGFrameworkSupport::_ISmartFrame2dAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7389)
inline IDispatchPtr TGFrameworkSupport::_ISmartFrame2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7390)
inline long TGFrameworkSupport::_ISmartFrame2dAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7391)
inline long TGFrameworkSupport::_ISmartFrame2dAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7392)
inline _bstr_t TGFrameworkSupport::_ISmartFrame2dAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7393)
inline IDispatchPtr TGFrameworkSupport::_ISmartFrame2dAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7394)
inline HRESULT TGFrameworkSupport::_ISmartFrame2dAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7395)
inline HRESULT TGFrameworkSupport::_ISmartFrame2dAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7396)
inline HRESULT TGFrameworkSupport::_ISmartFrame2dAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7397)
inline HRESULT TGFrameworkSupport::_ISmartFrame2dAuto::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    HRESULT _hr = raw_Move(XFrom, YFrom, XTo, YTo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7398)
inline HRESULT TGFrameworkSupport::_ISmartFrame2dAuto::Scale ( double Factor ) {
    HRESULT _hr = raw_Scale(Factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7399)
inline HRESULT TGFrameworkSupport::_ISmartFrame2dAuto::Rotate ( double Angle, double x, double y ) {
    HRESULT _hr = raw_Rotate(Angle, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7400)
inline HRESULT TGFrameworkSupport::_ISmartFrame2dAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7401)
inline IDispatchPtr TGFrameworkSupport::_ISmartFrame2dAuto::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Duplicate(XDistance, YDistance, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7402)
inline IDispatchPtr TGFrameworkSupport::_ISmartFrame2dAuto::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Mirror(x1, y1, x2, y2, BooleanCopyFlag, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7403)
inline HRESULT TGFrameworkSupport::_ISmartFrame2dAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7404)
inline HRESULT TGFrameworkSupport::_ISmartFrame2dAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7405)
inline HRESULT TGFrameworkSupport::_ISmartFrame2dAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7406)
inline HRESULT TGFrameworkSupport::_ISmartFrame2dAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7407)
inline HRESULT TGFrameworkSupport::_ISmartFrame2dAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7408)
inline enum TGFrameworkSupport::FrameShapeConstants TGFrameworkSupport::_ISmartFrame2dAuto::GetShapeOption ( ) {
    enum FrameShapeConstants _result;
    HRESULT _hr = get_ShapeOption(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7409)
inline void TGFrameworkSupport::_ISmartFrame2dAuto::PutShapeOption ( enum FrameShapeConstants ShapeOption ) {
    HRESULT _hr = put_ShapeOption(ShapeOption);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7410)
inline VARIANT_BOOL TGFrameworkSupport::_ISmartFrame2dAuto::GetBorderPrinted ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BorderPrinted(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7411)
inline void TGFrameworkSupport::_ISmartFrame2dAuto::PutBorderPrinted ( VARIANT_BOOL Printed ) {
    HRESULT _hr = put_BorderPrinted(Printed);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7412)
inline VARIANT_BOOL TGFrameworkSupport::_ISmartFrame2dAuto::GetBorderVisible ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BorderVisible(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7413)
inline void TGFrameworkSupport::_ISmartFrame2dAuto::PutBorderVisible ( VARIANT_BOOL Visible ) {
    HRESULT _hr = put_BorderVisible(Visible);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7414)
inline double TGFrameworkSupport::_ISmartFrame2dAuto::GetMargin ( ) {
    double _result = 0;
    HRESULT _hr = get_Margin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7415)
inline void TGFrameworkSupport::_ISmartFrame2dAuto::PutMargin ( double Margin ) {
    HRESULT _hr = put_Margin(Margin);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7416)
inline double TGFrameworkSupport::_ISmartFrame2dAuto::GetBorderWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_BorderWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7417)
inline void TGFrameworkSupport::_ISmartFrame2dAuto::PutBorderWidth ( double Margin ) {
    HRESULT _hr = put_BorderWidth(Margin);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7418)
inline long TGFrameworkSupport::_ISmartFrame2dAuto::GetBorderColor ( ) {
    long _result = 0;
    HRESULT _hr = get_BorderColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7419)
inline void TGFrameworkSupport::_ISmartFrame2dAuto::PutBorderColor ( long Color ) {
    HRESULT _hr = put_BorderColor(Color);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7420)
inline _bstr_t TGFrameworkSupport::_ISmartFrame2dAuto::GetBorderDashTypeName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BorderDashTypeName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7421)
inline void TGFrameworkSupport::_ISmartFrame2dAuto::PutBorderDashTypeName ( _bstr_t Name ) {
    HRESULT _hr = put_BorderDashTypeName(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7422)
inline long TGFrameworkSupport::_ISmartFrame2dAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7423)
inline HRESULT TGFrameworkSupport::_ISmartFrame2dAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7424)
inline HRESULT TGFrameworkSupport::_ISmartFrame2dAuto::SetKeyPoint ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetKeyPoint(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7425)
inline IDispatchPtr TGFrameworkSupport::_ISmartFrame2dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7426)
inline VARIANT_BOOL TGFrameworkSupport::_ISmartFrame2dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7427)
inline void TGFrameworkSupport::_ISmartFrame2dAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7428)
inline _bstr_t TGFrameworkSupport::_ISmartFrame2dAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

//
// dispinterface SmartFrame2d wrapper method implementations
//

#pragma implementation_key(7429)
inline TGFrameworkSupport::FramePtr TGFrameworkSupport::SmartFrame2d::GetFrame ( ) {
    struct Frame * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return FramePtr(_result, false);
}

#pragma implementation_key(7430)
inline void TGFrameworkSupport::SmartFrame2d::PutStyle ( struct SmartFrame2dStyle * _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(7431)
inline TGFrameworkSupport::SmartFrame2dStylePtr TGFrameworkSupport::SmartFrame2d::GetStyle ( ) {
    struct SmartFrame2dStyle * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return SmartFrame2dStylePtr(_result, false);
}

#pragma implementation_key(7432)
inline void TGFrameworkSupport::SmartFrame2d::PutContentsVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(7433)
inline VARIANT_BOOL TGFrameworkSupport::SmartFrame2d::GetContentsVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7434)
inline void TGFrameworkSupport::SmartFrame2d::PutCropRight ( double _arg1 ) {
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(7435)
inline double TGFrameworkSupport::SmartFrame2d::GetCropRight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7436)
inline void TGFrameworkSupport::SmartFrame2d::PutCropTop ( double _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(7437)
inline double TGFrameworkSupport::SmartFrame2d::GetCropTop ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7438)
inline void TGFrameworkSupport::SmartFrame2d::PutCropBottom ( double _arg1 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(7439)
inline double TGFrameworkSupport::SmartFrame2d::GetCropBottom ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7440)
inline void TGFrameworkSupport::SmartFrame2d::PutCropLeft ( double _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(7441)
inline double TGFrameworkSupport::SmartFrame2d::GetCropLeft ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7442)
inline void TGFrameworkSupport::SmartFrame2d::PutDescription ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(7443)
inline _bstr_t TGFrameworkSupport::SmartFrame2d::GetDescription ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7444)
inline void TGFrameworkSupport::SmartFrame2d::PutDisplayType ( enum DisplayTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(7445)
inline enum TGFrameworkSupport::DisplayTypeConstants TGFrameworkSupport::SmartFrame2d::GetDisplayType ( ) {
    enum DisplayTypeConstants _result;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7446)
inline VARIANT_BOOL TGFrameworkSupport::SmartFrame2d::GetIsLink ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7447)
inline void TGFrameworkSupport::SmartFrame2d::PutIsLinkPublic ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(7448)
inline VARIANT_BOOL TGFrameworkSupport::SmartFrame2d::GetIsLinkPublic ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7449)
inline _bstr_t TGFrameworkSupport::SmartFrame2d::GetObjectType ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7450)
inline long TGFrameworkSupport::SmartFrame2d::GetObjectVerbsCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7451)
inline void TGFrameworkSupport::SmartFrame2d::PutProtectFromSelection ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(7452)
inline VARIANT_BOOL TGFrameworkSupport::SmartFrame2d::GetProtectFromSelection ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7453)
inline void TGFrameworkSupport::SmartFrame2d::PutRotationAngle ( double _arg1 ) {
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(7454)
inline double TGFrameworkSupport::SmartFrame2d::GetRotationAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7455)
inline void TGFrameworkSupport::SmartFrame2d::PutScaleFactor ( double _arg1 ) {
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(7456)
inline double TGFrameworkSupport::SmartFrame2d::GetScaleFactor ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7457)
inline IDispatchPtr TGFrameworkSupport::SmartFrame2d::GetObject ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7458)
inline void TGFrameworkSupport::SmartFrame2d::PutAutomaticLinkUpdate ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(7459)
inline VARIANT_BOOL TGFrameworkSupport::SmartFrame2d::GetAutomaticLinkUpdate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7460)
inline _bstr_t TGFrameworkSupport::SmartFrame2d::LinkMoniker ( const _variant_t & WantDisplayableVersion ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x080c", &WantDisplayableVersion);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7461)
inline _bstr_t TGFrameworkSupport::SmartFrame2d::ObjectVerbs ( const _variant_t & Index ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x080c", &Index);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7462)
inline HRESULT TGFrameworkSupport::SmartFrame2d::GetOrigin ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x67, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(7463)
inline HRESULT TGFrameworkSupport::SmartFrame2d::SetOrigin ( double x, double y ) {
    return _com_dispatch_method(this, 0x68, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(7464)
inline HRESULT TGFrameworkSupport::SmartFrame2d::ChangeCrop ( double top, double bottom, double left, double right ) {
    return _com_dispatch_method(this, 0x6e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", top, bottom, left, right);
}

#pragma implementation_key(7465)
inline HRESULT TGFrameworkSupport::SmartFrame2d::CreateLink ( const _variant_t & SourceDoc, const _variant_t & SourceItem ) {
    return _com_dispatch_method(this, 0x71, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c", &SourceDoc, &SourceItem);
}

#pragma implementation_key(7466)
inline HRESULT TGFrameworkSupport::SmartFrame2d::CreateEmbed ( const _variant_t & SourceDoc, const _variant_t & ObjectType ) {
    return _com_dispatch_method(this, 0x70, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c\x080c", &SourceDoc, &ObjectType);
}

#pragma implementation_key(7467)
inline HRESULT TGFrameworkSupport::SmartFrame2d::DoVerb ( const _variant_t & DoVerb ) {
    return _com_dispatch_method(this, 0x74, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &DoVerb);
}

#pragma implementation_key(7468)
inline HRESULT TGFrameworkSupport::SmartFrame2d::Fit ( ) {
    return _com_dispatch_method(this, 0x77, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(7469)
inline HRESULT TGFrameworkSupport::SmartFrame2d::Update ( ) {
    return _com_dispatch_method(this, 0x7b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(7470)
inline TGFramework::ApplicationPtr TGFrameworkSupport::SmartFrame2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x2065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(7471)
inline long TGFrameworkSupport::SmartFrame2d::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2066, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7472)
inline _bstr_t TGFrameworkSupport::SmartFrame2d::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x2067, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7473)
inline IDispatchPtr TGFrameworkSupport::SmartFrame2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2068, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7474)
inline long TGFrameworkSupport::SmartFrame2d::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2069, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7475)
inline long TGFrameworkSupport::SmartFrame2d::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x206b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7476)
inline _bstr_t TGFrameworkSupport::SmartFrame2d::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x206c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7477)
inline IDispatchPtr TGFrameworkSupport::SmartFrame2d::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x206d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7478)
inline HRESULT TGFrameworkSupport::SmartFrame2d::Copy ( ) {
    return _com_dispatch_method(this, 0x6001200a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(7479)
inline HRESULT TGFrameworkSupport::SmartFrame2d::Cut ( ) {
    return _com_dispatch_method(this, 0x6001200b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(7480)
inline HRESULT TGFrameworkSupport::SmartFrame2d::Delete ( ) {
    return _com_dispatch_method(this, 0x6001200c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(7481)
inline HRESULT TGFrameworkSupport::SmartFrame2d::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    return _com_dispatch_method(this, 0x6001200d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", XFrom, YFrom, XTo, YTo);
}

#pragma implementation_key(7482)
inline HRESULT TGFrameworkSupport::SmartFrame2d::Scale ( double Factor ) {
    return _com_dispatch_method(this, 0x6001200e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Factor);
}

#pragma implementation_key(7483)
inline HRESULT TGFrameworkSupport::SmartFrame2d::Rotate ( double Angle, double x, double y ) {
    return _com_dispatch_method(this, 0x6001200f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", Angle, x, y);
}

#pragma implementation_key(7484)
inline HRESULT TGFrameworkSupport::SmartFrame2d::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60012011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(7485)
inline IDispatchPtr TGFrameworkSupport::SmartFrame2d::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60012012, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &XDistance, &YDistance);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7486)
inline IDispatchPtr TGFrameworkSupport::SmartFrame2d::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x60012013, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x080c", x1, y1, x2, y2, &BooleanCopyFlag);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7487)
inline HRESULT TGFrameworkSupport::SmartFrame2d::BringToFront ( ) {
    return _com_dispatch_method(this, 0x60012014, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(7488)
inline HRESULT TGFrameworkSupport::SmartFrame2d::BringForward ( ) {
    return _com_dispatch_method(this, 0x60012015, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(7489)
inline HRESULT TGFrameworkSupport::SmartFrame2d::SendToBack ( ) {
    return _com_dispatch_method(this, 0x60012016, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(7490)
inline HRESULT TGFrameworkSupport::SmartFrame2d::SendBackward ( ) {
    return _com_dispatch_method(this, 0x60012017, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(7491)
inline HRESULT TGFrameworkSupport::SmartFrame2d::Select ( ) {
    return _com_dispatch_method(this, 0x60012018, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(7492)
inline enum TGFrameworkSupport::FrameShapeConstants TGFrameworkSupport::SmartFrame2d::GetShapeOption ( ) {
    enum FrameShapeConstants _result;
    _com_dispatch_method(this, 0x4005, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7493)
inline void TGFrameworkSupport::SmartFrame2d::PutShapeOption ( enum FrameShapeConstants _arg1 ) {
    _com_dispatch_method(this, 0x4005, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(7494)
inline VARIANT_BOOL TGFrameworkSupport::SmartFrame2d::GetBorderPrinted ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4009, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7495)
inline void TGFrameworkSupport::SmartFrame2d::PutBorderPrinted ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4009, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(7496)
inline VARIANT_BOOL TGFrameworkSupport::SmartFrame2d::GetBorderVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x400b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7497)
inline void TGFrameworkSupport::SmartFrame2d::PutBorderVisible ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x400b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(7498)
inline double TGFrameworkSupport::SmartFrame2d::GetMargin ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x400a, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7499)
inline void TGFrameworkSupport::SmartFrame2d::PutMargin ( double _arg1 ) {
    _com_dispatch_method(this, 0x400a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(7500)
inline double TGFrameworkSupport::SmartFrame2d::GetBorderWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x400d, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7501)
inline void TGFrameworkSupport::SmartFrame2d::PutBorderWidth ( double _arg1 ) {
    _com_dispatch_method(this, 0x400d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(7502)
inline long TGFrameworkSupport::SmartFrame2d::GetBorderColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x400c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7503)
inline void TGFrameworkSupport::SmartFrame2d::PutBorderColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x400c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(7504)
inline _bstr_t TGFrameworkSupport::SmartFrame2d::GetBorderDashTypeName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x400e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7505)
inline void TGFrameworkSupport::SmartFrame2d::PutBorderDashTypeName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x400e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(7506)
inline long TGFrameworkSupport::SmartFrame2d::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6001, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7507)
inline HRESULT TGFrameworkSupport::SmartFrame2d::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x6002, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(7508)
inline HRESULT TGFrameworkSupport::SmartFrame2d::SetKeyPoint ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x6003, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(7509)
inline IDispatchPtr TGFrameworkSupport::SmartFrame2d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7510)
inline VARIANT_BOOL TGFrameworkSupport::SmartFrame2d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(7511)
inline void TGFrameworkSupport::SmartFrame2d::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(7512)
inline _bstr_t TGFrameworkSupport::SmartFrame2d::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

//
// interface _ISmartFrames2dAuto wrapper method implementations
//

#pragma implementation_key(7513)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_ISmartFrames2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(7514)
inline long TGFrameworkSupport::_ISmartFrames2dAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7515)
inline IDispatchPtr TGFrameworkSupport::_ISmartFrames2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7516)
inline TGFrameworkSupport::SmartFrame2dPtr TGFrameworkSupport::_ISmartFrames2dAuto::Item ( const _variant_t & Index ) {
    struct SmartFrame2d * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SmartFrame2dPtr(_result, false);
}

#pragma implementation_key(7517)
inline IUnknownPtr TGFrameworkSupport::_ISmartFrames2dAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(7518)
inline TGFrameworkSupport::SmartFrame2dPtr TGFrameworkSupport::_ISmartFrames2dAuto::AddBy2Points ( _bstr_t StyleName, double x1, double y1, double x2, double y2 ) {
    struct SmartFrame2d * _result = 0;
    HRESULT _hr = raw_AddBy2Points(StyleName, x1, y1, x2, y2, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SmartFrame2dPtr(_result, false);
}

#pragma implementation_key(7519)
inline TGFrameworkSupport::SmartFrame2dPtr TGFrameworkSupport::_ISmartFrames2dAuto::AddByOrigin ( _bstr_t StyleName, double x1, double y1, double top, double bottom, double left, double right ) {
    struct SmartFrame2d * _result = 0;
    HRESULT _hr = raw_AddByOrigin(StyleName, x1, y1, top, bottom, left, right, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SmartFrame2dPtr(_result, false);
}

//
// interface _ISmartFrame2dStylesAuto wrapper method implementations
//

#pragma implementation_key(7520)
inline TGFrameworkSupport::SmartFrame2dStylePtr TGFrameworkSupport::_ISmartFrame2dStylesAuto::Item ( const _variant_t & Index ) {
    struct SmartFrame2dStyle * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SmartFrame2dStylePtr(_result, false);
}

#pragma implementation_key(7521)
inline IUnknownPtr TGFrameworkSupport::_ISmartFrame2dStylesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(7522)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_ISmartFrame2dStylesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(7523)
inline IDispatchPtr TGFrameworkSupport::_ISmartFrame2dStylesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7524)
inline long TGFrameworkSupport::_ISmartFrame2dStylesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7525)
inline long TGFrameworkSupport::_ISmartFrame2dStylesAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7526)
inline TGFrameworkSupport::SmartFrame2dStylePtr TGFrameworkSupport::_ISmartFrame2dStylesAuto::Add ( _bstr_t Name, _bstr_t Parent ) {
    struct SmartFrame2dStyle * _result = 0;
    HRESULT _hr = raw_Add(Name, Parent, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return SmartFrame2dStylePtr(_result, false);
}

//
// interface _IVFSetAuto wrapper method implementations
//

#pragma implementation_key(7527)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IVFSetAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(7528)
inline IDispatchPtr TGFrameworkSupport::_IVFSetAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7529)
inline HRESULT TGFrameworkSupport::_IVFSetAuto::SetCriteria ( _bstr_t Name, long Scope, long Color, double Width, _bstr_t LINESTYLE, VARIANT_BOOL DISPLAY, VARIANT_BOOL Locate, long flagsToSet ) {
    HRESULT _hr = raw_SetCriteria(Name, Scope, Color, Width, LINESTYLE, DISPLAY, Locate, flagsToSet);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7530)
inline HRESULT TGFrameworkSupport::_IVFSetAuto::GetCriteria ( _bstr_t Name, long Scope, long * Color, double * Width, BSTR * LINESTYLE, VARIANT_BOOL * DISPLAY, VARIANT_BOOL * Locate, long flagsToSet ) {
    HRESULT _hr = raw_GetCriteria(Name, Scope, Color, Width, LINESTYLE, DISPLAY, Locate, flagsToSet);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7531)
inline HRESULT TGFrameworkSupport::_IVFSetAuto::ResetAll ( long Scope ) {
    HRESULT _hr = raw_ResetAll(Scope);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7532)
inline HRESULT TGFrameworkSupport::_IVFSetAuto::SetAll ( long Scope, long Color, double Width, _bstr_t LINESTYLE, VARIANT_BOOL DISPLAY, VARIANT_BOOL Locate, long flagsToSet ) {
    HRESULT _hr = raw_SetAll(Scope, Color, Width, LINESTYLE, DISPLAY, Locate, flagsToSet);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7533)
inline HRESULT TGFrameworkSupport::_IVFSetAuto::CheckForDefault ( VARIANT_BOOL * bSetting ) {
    HRESULT _hr = raw_CheckForDefault(bSetting);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// interface _IRectangularPattern2dAuto wrapper method implementations
//

#pragma implementation_key(7534)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IRectangularPattern2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(7535)
inline IDispatchPtr TGFrameworkSupport::_IRectangularPattern2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7536)
inline void TGFrameworkSupport::_IRectangularPattern2dAuto::PutStaggerType ( enum StaggerTypeConstants StaggerType ) {
    HRESULT _hr = put_StaggerType(StaggerType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7537)
inline enum TGFrameworkSupport::StaggerTypeConstants TGFrameworkSupport::_IRectangularPattern2dAuto::GetStaggerType ( ) {
    enum StaggerTypeConstants _result;
    HRESULT _hr = get_StaggerType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7538)
inline void TGFrameworkSupport::_IRectangularPattern2dAuto::PutStaggerOffset ( double StaggerOffset ) {
    HRESULT _hr = put_StaggerOffset(StaggerOffset);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7539)
inline double TGFrameworkSupport::_IRectangularPattern2dAuto::GetStaggerOffset ( ) {
    double _result = 0;
    HRESULT _hr = get_StaggerOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7540)
inline VARIANT_BOOL TGFrameworkSupport::_IRectangularPattern2dAuto::GetStaggerOffsetHalf ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_StaggerOffsetHalf(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7541)
inline void TGFrameworkSupport::_IRectangularPattern2dAuto::PutStaggerOffsetHalf ( VARIANT_BOOL HalfOffset ) {
    HRESULT _hr = put_StaggerOffsetHalf(HalfOffset);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7542)
inline VARIANT_BOOL TGFrameworkSupport::_IRectangularPattern2dAuto::GetStaggerIncludeLast ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_StaggerIncludeLast(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7543)
inline void TGFrameworkSupport::_IRectangularPattern2dAuto::PutStaggerIncludeLast ( VARIANT_BOOL StaggerIncludeLast ) {
    HRESULT _hr = put_StaggerIncludeLast(StaggerIncludeLast);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7544)
inline enum TGFrameworkSupport::PatternOffsetTypeConstants TGFrameworkSupport::_IRectangularPattern2dAuto::GetOffsetType ( ) {
    enum PatternOffsetTypeConstants _result;
    HRESULT _hr = get_OffsetType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7545)
inline void TGFrameworkSupport::_IRectangularPattern2dAuto::PutOffsetType ( enum PatternOffsetTypeConstants OffsetType ) {
    HRESULT _hr = put_OffsetType(OffsetType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7546)
inline double TGFrameworkSupport::_IRectangularPattern2dAuto::GetWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7547)
inline void TGFrameworkSupport::_IRectangularPattern2dAuto::PutWidth ( double Width ) {
    HRESULT _hr = put_Width(Width);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7548)
inline double TGFrameworkSupport::_IRectangularPattern2dAuto::GetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7549)
inline void TGFrameworkSupport::_IRectangularPattern2dAuto::PutHeight ( double Height ) {
    HRESULT _hr = put_Height(Height);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7550)
inline double TGFrameworkSupport::_IRectangularPattern2dAuto::GetXSpace ( ) {
    double _result = 0;
    HRESULT _hr = get_XSpace(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7551)
inline void TGFrameworkSupport::_IRectangularPattern2dAuto::PutXSpace ( double space ) {
    HRESULT _hr = put_XSpace(space);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7552)
inline double TGFrameworkSupport::_IRectangularPattern2dAuto::GetYSpace ( ) {
    double _result = 0;
    HRESULT _hr = get_YSpace(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7553)
inline void TGFrameworkSupport::_IRectangularPattern2dAuto::PutYSpace ( double space ) {
    HRESULT _hr = put_YSpace(space);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7554)
inline long TGFrameworkSupport::_IRectangularPattern2dAuto::GetXCount ( ) {
    long _result = 0;
    HRESULT _hr = get_XCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7555)
inline void TGFrameworkSupport::_IRectangularPattern2dAuto::PutXCount ( long XCount ) {
    HRESULT _hr = put_XCount(XCount);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7556)
inline long TGFrameworkSupport::_IRectangularPattern2dAuto::GetYCount ( ) {
    long _result = 0;
    HRESULT _hr = get_YCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7557)
inline void TGFrameworkSupport::_IRectangularPattern2dAuto::PutYCount ( long YCount ) {
    HRESULT _hr = put_YCount(YCount);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7558)
inline long TGFrameworkSupport::_IRectangularPattern2dAuto::GetReferenceOccurrence ( ) {
    long _result = 0;
    HRESULT _hr = get_ReferenceOccurrence(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7559)
inline void TGFrameworkSupport::_IRectangularPattern2dAuto::PutReferenceOccurrence ( long RefOccurrence ) {
    HRESULT _hr = put_ReferenceOccurrence(RefOccurrence);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7560)
inline VARIANT_BOOL TGFrameworkSupport::_IRectangularPattern2dAuto::GetSuppressed ( long Occurrence ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Suppressed(Occurrence, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7561)
inline void TGFrameworkSupport::_IRectangularPattern2dAuto::PutSuppressed ( long Occurrence, VARIANT_BOOL IsSuppressed ) {
    HRESULT _hr = put_Suppressed(Occurrence, IsSuppressed);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7562)
inline HRESULT TGFrameworkSupport::_IRectangularPattern2dAuto::GetGeometry ( struct Line2d * * Line1, struct Line2d * * Line2, struct Line2d * * Line3, struct Line2d * * Line4 ) {
    HRESULT _hr = raw_GetGeometry(Line1, Line2, Line3, Line4);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7563)
inline void TGFrameworkSupport::_IRectangularPattern2dAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7564)
inline _bstr_t TGFrameworkSupport::_IRectangularPattern2dAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7565)
inline long TGFrameworkSupport::_IRectangularPattern2dAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7566)
inline SAFEARRAY * TGFrameworkSupport::_IRectangularPattern2dAuto::GetParentGeometries ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetParentGeometries(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface RectangularPattern2d wrapper method implementations
//

#pragma implementation_key(7567)
inline TGFramework::ApplicationPtr TGFrameworkSupport::RectangularPattern2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(7568)
inline IDispatchPtr TGFrameworkSupport::RectangularPattern2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7569)
inline void TGFrameworkSupport::RectangularPattern2d::PutStaggerType ( enum StaggerTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(7570)
inline enum TGFrameworkSupport::StaggerTypeConstants TGFrameworkSupport::RectangularPattern2d::GetStaggerType ( ) {
    enum StaggerTypeConstants _result;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7571)
inline void TGFrameworkSupport::RectangularPattern2d::PutStaggerOffset ( double _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(7572)
inline double TGFrameworkSupport::RectangularPattern2d::GetStaggerOffset ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7573)
inline VARIANT_BOOL TGFrameworkSupport::RectangularPattern2d::GetStaggerOffsetHalf ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7574)
inline void TGFrameworkSupport::RectangularPattern2d::PutStaggerOffsetHalf ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(7575)
inline VARIANT_BOOL TGFrameworkSupport::RectangularPattern2d::GetStaggerIncludeLast ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7576)
inline void TGFrameworkSupport::RectangularPattern2d::PutStaggerIncludeLast ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(7577)
inline enum TGFrameworkSupport::PatternOffsetTypeConstants TGFrameworkSupport::RectangularPattern2d::GetOffsetType ( ) {
    enum PatternOffsetTypeConstants _result;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7578)
inline void TGFrameworkSupport::RectangularPattern2d::PutOffsetType ( enum PatternOffsetTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(7579)
inline double TGFrameworkSupport::RectangularPattern2d::GetWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7580)
inline void TGFrameworkSupport::RectangularPattern2d::PutWidth ( double _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(7581)
inline double TGFrameworkSupport::RectangularPattern2d::GetHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7582)
inline void TGFrameworkSupport::RectangularPattern2d::PutHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(7583)
inline double TGFrameworkSupport::RectangularPattern2d::GetXSpace ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7584)
inline void TGFrameworkSupport::RectangularPattern2d::PutXSpace ( double _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(7585)
inline double TGFrameworkSupport::RectangularPattern2d::GetYSpace ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7586)
inline void TGFrameworkSupport::RectangularPattern2d::PutYSpace ( double _arg1 ) {
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(7587)
inline long TGFrameworkSupport::RectangularPattern2d::GetXCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7588)
inline void TGFrameworkSupport::RectangularPattern2d::PutXCount ( long _arg1 ) {
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(7589)
inline long TGFrameworkSupport::RectangularPattern2d::GetYCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7590)
inline void TGFrameworkSupport::RectangularPattern2d::PutYCount ( long _arg1 ) {
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(7591)
inline long TGFrameworkSupport::RectangularPattern2d::GetReferenceOccurrence ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7592)
inline void TGFrameworkSupport::RectangularPattern2d::PutReferenceOccurrence ( long _arg1 ) {
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(7593)
inline VARIANT_BOOL TGFrameworkSupport::RectangularPattern2d::GetSuppressed ( long Occurrence ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", Occurrence);
    return _result;
}

#pragma implementation_key(7594)
inline void TGFrameworkSupport::RectangularPattern2d::PutSuppressed ( long Occurrence, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", Occurrence, _arg2);
}

#pragma implementation_key(7595)
inline HRESULT TGFrameworkSupport::RectangularPattern2d::GetGeometry ( struct Line2d * * Line1, struct Line2d * * Line2, struct Line2d * * Line3, struct Line2d * * Line4 ) {
    return _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4009\x4009\x4009", Line1, Line2, Line3, Line4);
}

#pragma implementation_key(7596)
inline void TGFrameworkSupport::RectangularPattern2d::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(7597)
inline _bstr_t TGFrameworkSupport::RectangularPattern2d::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7598)
inline long TGFrameworkSupport::RectangularPattern2d::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7599)
inline SAFEARRAY * TGFrameworkSupport::RectangularPattern2d::GetParentGeometries ( ) {
    SAFEARRAY * _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_ARRAY|VT_DISPATCH, (void*)&_result, NULL);
    return _result;
}

//
// interface _IRectangularPatterns2dAuto wrapper method implementations
//

#pragma implementation_key(7600)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IRectangularPatterns2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(7601)
inline IDispatchPtr TGFrameworkSupport::_IRectangularPatterns2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7602)
inline long TGFrameworkSupport::_IRectangularPatterns2dAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7603)
inline IUnknownPtr TGFrameworkSupport::_IRectangularPatterns2dAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(7604)
inline TGFrameworkSupport::RectangularPattern2dPtr TGFrameworkSupport::_IRectangularPatterns2dAuto::Item ( const _variant_t & Index ) {
    struct RectangularPattern2d * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return RectangularPattern2dPtr(_result, false);
}

#pragma implementation_key(7605)
inline TGFrameworkSupport::RectangularPattern2dPtr TGFrameworkSupport::_IRectangularPatterns2dAuto::Add ( double OriginX, double OriginY, double Width, double Height, double Angle, enum PatternOffsetTypeConstants OffsetType, long XCount, long YCount, double XSpace, double YSpace, const _variant_t & StaggerType, const _variant_t & StaggerOffset, const _variant_t & StaggerOffsetHalf, const _variant_t & StaggerIncludeLast ) {
    struct RectangularPattern2d * _result = 0;
    HRESULT _hr = raw_Add(OriginX, OriginY, Width, Height, Angle, OffsetType, XCount, YCount, XSpace, YSpace, StaggerType, StaggerOffset, StaggerOffsetHalf, StaggerIncludeLast, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return RectangularPattern2dPtr(_result, false);
}

#pragma implementation_key(7606)
inline TGFrameworkSupport::RectangularPattern2dPtr TGFrameworkSupport::_IRectangularPatterns2dAuto::AddEx ( SAFEARRAY * * GeomArray, long NumOfElements, double OriginX, double OriginY, double Width, double Height, double Angle, enum PatternOffsetTypeConstants OffsetType, long XCount, long YCount, double XSpace, double YSpace, const _variant_t & StaggerType, const _variant_t & StaggerOffset, const _variant_t & StaggerOffsetHalf, const _variant_t & StaggerIncludeLast ) {
    struct RectangularPattern2d * _result = 0;
    HRESULT _hr = raw_AddEx(GeomArray, NumOfElements, OriginX, OriginY, Width, Height, Angle, OffsetType, XCount, YCount, XSpace, YSpace, StaggerType, StaggerOffset, StaggerOffsetHalf, StaggerIncludeLast, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return RectangularPattern2dPtr(_result, false);
}

//
// interface _ICircularPattern2dAuto wrapper method implementations
//

#pragma implementation_key(7607)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_ICircularPattern2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(7608)
inline IDispatchPtr TGFrameworkSupport::_ICircularPattern2dAuto::GetGeometry ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_GetGeometry(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7609)
inline enum TGFramework::ObjectType TGFrameworkSupport::_ICircularPattern2dAuto::GetGeometryType ( ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = get_GeometryType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7610)
inline enum TGFrameworkSupport::PatternOffsetTypeConstants TGFrameworkSupport::_ICircularPattern2dAuto::GetOffsetType ( ) {
    enum PatternOffsetTypeConstants _result;
    HRESULT _hr = get_OffsetType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7611)
inline void TGFrameworkSupport::_ICircularPattern2dAuto::PutOffsetType ( enum PatternOffsetTypeConstants OffsetType ) {
    HRESULT _hr = put_OffsetType(OffsetType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7612)
inline long TGFrameworkSupport::_ICircularPattern2dAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7613)
inline void TGFrameworkSupport::_ICircularPattern2dAuto::PutCount ( long Count ) {
    HRESULT _hr = put_Count(Count);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7614)
inline double TGFrameworkSupport::_ICircularPattern2dAuto::GetAngularSpacing ( ) {
    double _result = 0;
    HRESULT _hr = get_AngularSpacing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7615)
inline void TGFrameworkSupport::_ICircularPattern2dAuto::PutAngularSpacing ( double AngularSpacing ) {
    HRESULT _hr = put_AngularSpacing(AngularSpacing);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7616)
inline long TGFrameworkSupport::_ICircularPattern2dAuto::GetReferenceOccurrence ( ) {
    long _result = 0;
    HRESULT _hr = get_ReferenceOccurrence(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7617)
inline void TGFrameworkSupport::_ICircularPattern2dAuto::PutReferenceOccurrence ( long RefOccurrence ) {
    HRESULT _hr = put_ReferenceOccurrence(RefOccurrence);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7618)
inline VARIANT_BOOL TGFrameworkSupport::_ICircularPattern2dAuto::GetSuppressed ( long Occurrence ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Suppressed(Occurrence, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7619)
inline void TGFrameworkSupport::_ICircularPattern2dAuto::PutSuppressed ( long Occurrence, VARIANT_BOOL IsSuppressed ) {
    HRESULT _hr = put_Suppressed(Occurrence, IsSuppressed);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7620)
inline IDispatchPtr TGFrameworkSupport::_ICircularPattern2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7621)
inline void TGFrameworkSupport::_ICircularPattern2dAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7622)
inline _bstr_t TGFrameworkSupport::_ICircularPattern2dAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7623)
inline long TGFrameworkSupport::_ICircularPattern2dAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7624)
inline SAFEARRAY * TGFrameworkSupport::_ICircularPattern2dAuto::GetParentGeometries ( ) {
    SAFEARRAY * _result = 0;
    HRESULT _hr = raw_GetParentGeometries(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface CircularPattern2d wrapper method implementations
//

#pragma implementation_key(7625)
inline TGFramework::ApplicationPtr TGFrameworkSupport::CircularPattern2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(7626)
inline IDispatchPtr TGFrameworkSupport::CircularPattern2d::GetGeometry ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7627)
inline enum TGFramework::ObjectType TGFrameworkSupport::CircularPattern2d::GetGeometryType ( ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7628)
inline enum TGFrameworkSupport::PatternOffsetTypeConstants TGFrameworkSupport::CircularPattern2d::GetOffsetType ( ) {
    enum PatternOffsetTypeConstants _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7629)
inline void TGFrameworkSupport::CircularPattern2d::PutOffsetType ( enum PatternOffsetTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(7630)
inline long TGFrameworkSupport::CircularPattern2d::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7631)
inline void TGFrameworkSupport::CircularPattern2d::PutCount ( long _arg1 ) {
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(7632)
inline double TGFrameworkSupport::CircularPattern2d::GetAngularSpacing ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7633)
inline void TGFrameworkSupport::CircularPattern2d::PutAngularSpacing ( double _arg1 ) {
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(7634)
inline long TGFrameworkSupport::CircularPattern2d::GetReferenceOccurrence ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7635)
inline void TGFrameworkSupport::CircularPattern2d::PutReferenceOccurrence ( long _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(7636)
inline VARIANT_BOOL TGFrameworkSupport::CircularPattern2d::GetSuppressed ( long Occurrence ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", Occurrence);
    return _result;
}

#pragma implementation_key(7637)
inline void TGFrameworkSupport::CircularPattern2d::PutSuppressed ( long Occurrence, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", Occurrence, _arg2);
}

#pragma implementation_key(7638)
inline IDispatchPtr TGFrameworkSupport::CircularPattern2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7639)
inline void TGFrameworkSupport::CircularPattern2d::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(7640)
inline _bstr_t TGFrameworkSupport::CircularPattern2d::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7641)
inline long TGFrameworkSupport::CircularPattern2d::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7642)
inline SAFEARRAY * TGFrameworkSupport::CircularPattern2d::GetParentGeometries ( ) {
    SAFEARRAY * _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_ARRAY|VT_DISPATCH, (void*)&_result, NULL);
    return _result;
}

//
// interface _ICircularPatterns2dAuto wrapper method implementations
//

#pragma implementation_key(7643)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_ICircularPatterns2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(7644)
inline IDispatchPtr TGFrameworkSupport::_ICircularPatterns2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7645)
inline long TGFrameworkSupport::_ICircularPatterns2dAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7646)
inline IUnknownPtr TGFrameworkSupport::_ICircularPatterns2dAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(7647)
inline TGFrameworkSupport::CircularPattern2dPtr TGFrameworkSupport::_ICircularPatterns2dAuto::Item ( const _variant_t & Index ) {
    struct CircularPattern2d * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CircularPattern2dPtr(_result, false);
}

#pragma implementation_key(7648)
inline TGFrameworkSupport::CircularPattern2dPtr TGFrameworkSupport::_ICircularPatterns2dAuto::AddByCircle ( double CenterX, double CenterY, double StartX, double StartY, enum Geom2dOrientationConstants Orientation, enum PatternOffsetTypeConstants OffsetType, long Count, double AngularSpacing ) {
    struct CircularPattern2d * _result = 0;
    HRESULT _hr = raw_AddByCircle(CenterX, CenterY, StartX, StartY, Orientation, OffsetType, Count, AngularSpacing, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CircularPattern2dPtr(_result, false);
}

#pragma implementation_key(7649)
inline TGFrameworkSupport::CircularPattern2dPtr TGFrameworkSupport::_ICircularPatterns2dAuto::AddByArc ( double CenterX, double CenterY, double StartX, double StartY, double SweepAngle, enum Geom2dOrientationConstants Orientation, enum PatternOffsetTypeConstants OffsetType, long Count, double AngularSpacing ) {
    struct CircularPattern2d * _result = 0;
    HRESULT _hr = raw_AddByArc(CenterX, CenterY, StartX, StartY, SweepAngle, Orientation, OffsetType, Count, AngularSpacing, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CircularPattern2dPtr(_result, false);
}

#pragma implementation_key(7650)
inline TGFrameworkSupport::CircularPattern2dPtr TGFrameworkSupport::_ICircularPatterns2dAuto::AddByCircleEx ( SAFEARRAY * * GeomArray, long NumOfElements, double CenterX, double CenterY, double StartX, double StartY, enum Geom2dOrientationConstants Orientation, enum PatternOffsetTypeConstants OffsetType, long Count, double AngularSpacing ) {
    struct CircularPattern2d * _result = 0;
    HRESULT _hr = raw_AddByCircleEx(GeomArray, NumOfElements, CenterX, CenterY, StartX, StartY, Orientation, OffsetType, Count, AngularSpacing, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CircularPattern2dPtr(_result, false);
}

#pragma implementation_key(7651)
inline TGFrameworkSupport::CircularPattern2dPtr TGFrameworkSupport::_ICircularPatterns2dAuto::AddByArcEx ( SAFEARRAY * * GeomArray, long NumOfElements, double CenterX, double CenterY, double StartX, double StartY, double SweepAngle, enum Geom2dOrientationConstants Orientation, enum PatternOffsetTypeConstants OffsetType, long Count, double AngularSpacing ) {
    struct CircularPattern2d * _result = 0;
    HRESULT _hr = raw_AddByArcEx(GeomArray, NumOfElements, CenterX, CenterY, StartX, StartY, SweepAngle, Orientation, OffsetType, Count, AngularSpacing, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return CircularPattern2dPtr(_result, false);
}

//
// interface _IImage2dAuto wrapper method implementations
//

#pragma implementation_key(7652)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IImage2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(7653)
inline IDispatchPtr TGFrameworkSupport::_IImage2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7654)
inline void TGFrameworkSupport::_IImage2dAuto::PutLockAspectRatio ( VARIANT_BOOL Lock ) {
    HRESULT _hr = put_LockAspectRatio(Lock);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7655)
inline VARIANT_BOOL TGFrameworkSupport::_IImage2dAuto::GetLockAspectRatio ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_LockAspectRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7656)
inline void TGFrameworkSupport::_IImage2dAuto::PutResetAspectRatio ( VARIANT_BOOL Reset ) {
    HRESULT _hr = put_ResetAspectRatio(Reset);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7657)
inline VARIANT_BOOL TGFrameworkSupport::_IImage2dAuto::GetResetAspectRatio ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ResetAspectRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7658)
inline VARIANT_BOOL TGFrameworkSupport::_IImage2dAuto::GetFlipHorizontal ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_FlipHorizontal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7659)
inline void TGFrameworkSupport::_IImage2dAuto::PutFlipHorizontal ( VARIANT_BOOL FlipHorizontal ) {
    HRESULT _hr = put_FlipHorizontal(FlipHorizontal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7660)
inline VARIANT_BOOL TGFrameworkSupport::_IImage2dAuto::GetFlipVertical ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_FlipVertical(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7661)
inline void TGFrameworkSupport::_IImage2dAuto::PutFlipVertical ( VARIANT_BOOL FlipVertical ) {
    HRESULT _hr = put_FlipVertical(FlipVertical);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7662)
inline VARIANT_BOOL TGFrameworkSupport::_IImage2dAuto::GetShowBorder ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowBorder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7663)
inline void TGFrameworkSupport::_IImage2dAuto::PutShowBorder ( VARIANT_BOOL ShowBorder ) {
    HRESULT _hr = put_ShowBorder(ShowBorder);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7664)
inline void TGFrameworkSupport::_IImage2dAuto::PutBorderColor ( long BorderColor ) {
    HRESULT _hr = put_BorderColor(BorderColor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7665)
inline long TGFrameworkSupport::_IImage2dAuto::GetBorderColor ( ) {
    long _result = 0;
    HRESULT _hr = get_BorderColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7666)
inline void TGFrameworkSupport::_IImage2dAuto::PutBorderWidth ( double BorderColor ) {
    HRESULT _hr = put_BorderWidth(BorderColor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7667)
inline double TGFrameworkSupport::_IImage2dAuto::GetBorderWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_BorderWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7668)
inline void TGFrameworkSupport::_IImage2dAuto::PutBorderStyleName ( _bstr_t Name ) {
    HRESULT _hr = put_BorderStyleName(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7669)
inline _bstr_t TGFrameworkSupport::_IImage2dAuto::GetBorderStyleName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BorderStyleName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7670)
inline void TGFrameworkSupport::_IImage2dAuto::PutBorderTypeName ( _bstr_t Name ) {
    HRESULT _hr = put_BorderTypeName(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7671)
inline _bstr_t TGFrameworkSupport::_IImage2dAuto::GetBorderTypeName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BorderTypeName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7672)
inline double TGFrameworkSupport::_IImage2dAuto::GetWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7673)
inline void TGFrameworkSupport::_IImage2dAuto::PutWidth ( double Width ) {
    HRESULT _hr = put_Width(Width);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7674)
inline double TGFrameworkSupport::_IImage2dAuto::GetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7675)
inline void TGFrameworkSupport::_IImage2dAuto::PutHeight ( double Height ) {
    HRESULT _hr = put_Height(Height);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7676)
inline double TGFrameworkSupport::_IImage2dAuto::GetAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_Angle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7677)
inline void TGFrameworkSupport::_IImage2dAuto::PutAngle ( double Angle ) {
    HRESULT _hr = put_Angle(Angle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7678)
inline HRESULT TGFrameworkSupport::_IImage2dAuto::GetOrigin ( double * x, double * y ) {
    HRESULT _hr = raw_GetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7679)
inline HRESULT TGFrameworkSupport::_IImage2dAuto::SetOrigin ( double x, double y ) {
    HRESULT _hr = raw_SetOrigin(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7680)
inline int TGFrameworkSupport::_IImage2dAuto::GetOpacity ( ) {
    int _result = 0;
    HRESULT _hr = get_Opacity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7681)
inline void TGFrameworkSupport::_IImage2dAuto::PutOpacity ( int pnOpacity ) {
    HRESULT _hr = put_Opacity(pnOpacity);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7682)
inline HRESULT TGFrameworkSupport::_IImage2dAuto::GetTransparentColor ( float * pfRed, float * pfGreen, float * pfBlue ) {
    HRESULT _hr = raw_GetTransparentColor(pfRed, pfGreen, pfBlue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7683)
inline HRESULT TGFrameworkSupport::_IImage2dAuto::SetTransparentColor ( float fRed, float fGreen, float fBlue ) {
    HRESULT _hr = raw_SetTransparentColor(fRed, fGreen, fBlue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7684)
inline VARIANT_BOOL TGFrameworkSupport::_IImage2dAuto::GetIsLink ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsLink(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7685)
inline HRESULT TGFrameworkSupport::_IImage2dAuto::Update ( ) {
    HRESULT _hr = raw_Update();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7686)
inline HRESULT TGFrameworkSupport::_IImage2dAuto::DoVerb ( const _variant_t & DoVerb ) {
    HRESULT _hr = raw_DoVerb(DoVerb);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7687)
inline IDispatchPtr TGFrameworkSupport::_IImage2dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7688)
inline VARIANT_BOOL TGFrameworkSupport::_IImage2dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7689)
inline void TGFrameworkSupport::_IImage2dAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7690)
inline _bstr_t TGFrameworkSupport::_IImage2dAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7691)
inline long TGFrameworkSupport::_IImage2dAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7692)
inline HRESULT TGFrameworkSupport::_IImage2dAuto::SaveImageAs ( _bstr_t FilePath ) {
    HRESULT _hr = raw_SaveImageAs(FilePath);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7693)
inline _bstr_t TGFrameworkSupport::_IImage2dAuto::GetImageFileName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ImageFileName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7694)
inline VARIANT_BOOL TGFrameworkSupport::_IImage2dAuto::GetDecal ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Decal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface Image2d wrapper method implementations
//

#pragma implementation_key(7695)
inline TGFramework::ApplicationPtr TGFrameworkSupport::Image2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(7696)
inline IDispatchPtr TGFrameworkSupport::Image2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7697)
inline void TGFrameworkSupport::Image2d::PutLockAspectRatio ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(7698)
inline VARIANT_BOOL TGFrameworkSupport::Image2d::GetLockAspectRatio ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7699)
inline void TGFrameworkSupport::Image2d::PutResetAspectRatio ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(7700)
inline VARIANT_BOOL TGFrameworkSupport::Image2d::GetResetAspectRatio ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7701)
inline VARIANT_BOOL TGFrameworkSupport::Image2d::GetFlipHorizontal ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7702)
inline void TGFrameworkSupport::Image2d::PutFlipHorizontal ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(7703)
inline VARIANT_BOOL TGFrameworkSupport::Image2d::GetFlipVertical ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7704)
inline void TGFrameworkSupport::Image2d::PutFlipVertical ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(7705)
inline VARIANT_BOOL TGFrameworkSupport::Image2d::GetShowBorder ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7706)
inline void TGFrameworkSupport::Image2d::PutShowBorder ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(7707)
inline void TGFrameworkSupport::Image2d::PutBorderColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(7708)
inline long TGFrameworkSupport::Image2d::GetBorderColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7709)
inline void TGFrameworkSupport::Image2d::PutBorderWidth ( double _arg1 ) {
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(7710)
inline double TGFrameworkSupport::Image2d::GetBorderWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7711)
inline void TGFrameworkSupport::Image2d::PutBorderStyleName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(7712)
inline _bstr_t TGFrameworkSupport::Image2d::GetBorderStyleName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7713)
inline void TGFrameworkSupport::Image2d::PutBorderTypeName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(7714)
inline _bstr_t TGFrameworkSupport::Image2d::GetBorderTypeName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7715)
inline double TGFrameworkSupport::Image2d::GetWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7716)
inline void TGFrameworkSupport::Image2d::PutWidth ( double _arg1 ) {
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(7717)
inline double TGFrameworkSupport::Image2d::GetHeight ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7718)
inline void TGFrameworkSupport::Image2d::PutHeight ( double _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(7719)
inline double TGFrameworkSupport::Image2d::GetAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7720)
inline void TGFrameworkSupport::Image2d::PutAngle ( double _arg1 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(7721)
inline HRESULT TGFrameworkSupport::Image2d::GetOrigin ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(7722)
inline HRESULT TGFrameworkSupport::Image2d::SetOrigin ( double x, double y ) {
    return _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(7723)
inline int TGFrameworkSupport::Image2d::GetOpacity ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7724)
inline void TGFrameworkSupport::Image2d::PutOpacity ( int _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(7725)
inline HRESULT TGFrameworkSupport::Image2d::GetTransparentColor ( float * pfRed, float * pfGreen, float * pfBlue ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4004\x4004\x4004", pfRed, pfGreen, pfBlue);
}

#pragma implementation_key(7726)
inline HRESULT TGFrameworkSupport::Image2d::SetTransparentColor ( float fRed, float fGreen, float fBlue ) {
    return _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0004\x0004\x0004", fRed, fGreen, fBlue);
}

#pragma implementation_key(7727)
inline VARIANT_BOOL TGFrameworkSupport::Image2d::GetIsLink ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7728)
inline HRESULT TGFrameworkSupport::Image2d::Update ( ) {
    return _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(7729)
inline HRESULT TGFrameworkSupport::Image2d::DoVerb ( const _variant_t & DoVerb ) {
    return _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x080c", &DoVerb);
}

#pragma implementation_key(7730)
inline IDispatchPtr TGFrameworkSupport::Image2d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7731)
inline VARIANT_BOOL TGFrameworkSupport::Image2d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(7732)
inline void TGFrameworkSupport::Image2d::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(7733)
inline _bstr_t TGFrameworkSupport::Image2d::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7734)
inline long TGFrameworkSupport::Image2d::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7735)
inline HRESULT TGFrameworkSupport::Image2d::SaveImageAs ( _bstr_t FilePath ) {
    return _com_dispatch_method(this, 0x19, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)FilePath);
}

#pragma implementation_key(7736)
inline _bstr_t TGFrameworkSupport::Image2d::GetImageFileName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7737)
inline VARIANT_BOOL TGFrameworkSupport::Image2d::GetDecal ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// interface _IImages2dAuto wrapper method implementations
//

#pragma implementation_key(7738)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IImages2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(7739)
inline IDispatchPtr TGFrameworkSupport::_IImages2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7740)
inline long TGFrameworkSupport::_IImages2dAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7741)
inline IUnknownPtr TGFrameworkSupport::_IImages2dAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(7742)
inline TGFrameworkSupport::Image2dPtr TGFrameworkSupport::_IImages2dAuto::Item ( const _variant_t & Index ) {
    struct Image2d * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Image2dPtr(_result, false);
}

#pragma implementation_key(7743)
inline TGFrameworkSupport::Image2dPtr TGFrameworkSupport::_IImages2dAuto::AddImage ( VARIANT_BOOL blink, _bstr_t ImageDocumentName ) {
    struct Image2d * _result = 0;
    HRESULT _hr = raw_AddImage(blink, ImageDocumentName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Image2dPtr(_result, false);
}

#pragma implementation_key(7744)
inline TGFrameworkSupport::Image2dPtr TGFrameworkSupport::_IImages2dAuto::AddDecalImage ( VARIANT_BOOL Link, _bstr_t ImageDocumentName ) {
    struct Image2d * _result = 0;
    HRESULT _hr = raw_AddDecalImage(Link, ImageDocumentName, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Image2dPtr(_result, false);
}

//
// interface _IComponentImage2dAuto wrapper method implementations
//

#pragma implementation_key(7745)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IComponentImage2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(7746)
inline IDispatchPtr TGFrameworkSupport::_IComponentImage2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7747)
inline IDispatchPtr TGFrameworkSupport::_IComponentImage2dAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7748)
inline VARIANT_BOOL TGFrameworkSupport::_IComponentImage2dAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7749)
inline TGFrameworkSupport::GeometryStyle2dPtr TGFrameworkSupport::_IComponentImage2dAuto::GetStyle ( ) {
    struct GeometryStyle2d * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return GeometryStyle2dPtr(_result, false);
}

#pragma implementation_key(7750)
inline void TGFrameworkSupport::_IComponentImage2dAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7751)
inline _bstr_t TGFrameworkSupport::_IComponentImage2dAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7752)
inline long TGFrameworkSupport::_IComponentImage2dAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7753)
inline HRESULT TGFrameworkSupport::_IComponentImage2dAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface ComponentImage2d wrapper method implementations
//

#pragma implementation_key(7754)
inline TGFramework::ApplicationPtr TGFrameworkSupport::ComponentImage2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(7755)
inline IDispatchPtr TGFrameworkSupport::ComponentImage2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7756)
inline IDispatchPtr TGFrameworkSupport::ComponentImage2d::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7757)
inline VARIANT_BOOL TGFrameworkSupport::ComponentImage2d::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(7758)
inline TGFrameworkSupport::GeometryStyle2dPtr TGFrameworkSupport::ComponentImage2d::GetStyle ( ) {
    struct GeometryStyle2d * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return GeometryStyle2dPtr(_result, false);
}

#pragma implementation_key(7759)
inline void TGFrameworkSupport::ComponentImage2d::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(7760)
inline _bstr_t TGFrameworkSupport::ComponentImage2d::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7761)
inline long TGFrameworkSupport::ComponentImage2d::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7762)
inline HRESULT TGFrameworkSupport::ComponentImage2d::Delete ( ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//
// interface _IComponentImages2dAuto wrapper method implementations
//

#pragma implementation_key(7763)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IComponentImages2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(7764)
inline IDispatchPtr TGFrameworkSupport::_IComponentImages2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7765)
inline long TGFrameworkSupport::_IComponentImages2dAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7766)
inline IUnknownPtr TGFrameworkSupport::_IComponentImages2dAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(7767)
inline TGFrameworkSupport::ComponentImage2dPtr TGFrameworkSupport::_IComponentImages2dAuto::Item ( const _variant_t & Index ) {
    struct ComponentImage2d * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ComponentImage2dPtr(_result, false);
}

#pragma implementation_key(7768)
inline TGFrameworkSupport::ComponentImage2dPtr TGFrameworkSupport::_IComponentImages2dAuto::AddComponentImage ( enum ComponentImageCreationModeConstants CreationMode, const _variant_t & NumElements, const _variant_t & Elements ) {
    struct ComponentImage2d * _result = 0;
    HRESULT _hr = raw_AddComponentImage(CreationMode, NumElements, Elements, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return ComponentImage2dPtr(_result, false);
}

//
// interface _IAreaPropertiesAuto wrapper method implementations
//

#pragma implementation_key(7769)
inline TGFramework::FillStylePtr TGFrameworkSupport::_IAreaPropertiesAuto::GetAreaFillStyle ( ) {
    struct TGFramework::FillStyle * _result = 0;
    HRESULT _hr = get_AreaFillStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::FillStylePtr(_result, false);
}

#pragma implementation_key(7770)
inline void TGFrameworkSupport::_IAreaPropertiesAuto::PutAreaFillStyle ( struct TGFramework::FillStyle * Style ) {
    HRESULT _hr = put_AreaFillStyle(Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7771)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::_IAreaPropertiesAuto::GetAxesStyle ( ) {
    struct DimStyle * _result = 0;
    HRESULT _hr = get_AxesStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimStylePtr(_result, false);
}

#pragma implementation_key(7772)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::_IAreaPropertiesAuto::GetAxesLabelStyle ( ) {
    struct DimStyle * _result = 0;
    HRESULT _hr = get_AxesLabelStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimStylePtr(_result, false);
}

#pragma implementation_key(7773)
inline _bstr_t TGFrameworkSupport::_IAreaPropertiesAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7774)
inline void TGFrameworkSupport::_IAreaPropertiesAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7775)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IAreaPropertiesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(7776)
inline long TGFrameworkSupport::_IAreaPropertiesAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7777)
inline _bstr_t TGFrameworkSupport::_IAreaPropertiesAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7778)
inline IDispatchPtr TGFrameworkSupport::_IAreaPropertiesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7779)
inline long TGFrameworkSupport::_IAreaPropertiesAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7780)
inline _bstr_t TGFrameworkSupport::_IAreaPropertiesAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7781)
inline IDispatchPtr TGFrameworkSupport::_IAreaPropertiesAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7782)
inline HRESULT TGFrameworkSupport::_IAreaPropertiesAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7783)
inline HRESULT TGFrameworkSupport::_IAreaPropertiesAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7784)
inline HRESULT TGFrameworkSupport::_IAreaPropertiesAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7785)
inline HRESULT TGFrameworkSupport::_IAreaPropertiesAuto::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    HRESULT _hr = raw_Move(XFrom, YFrom, XTo, YTo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7786)
inline HRESULT TGFrameworkSupport::_IAreaPropertiesAuto::Scale ( double Factor ) {
    HRESULT _hr = raw_Scale(Factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7787)
inline HRESULT TGFrameworkSupport::_IAreaPropertiesAuto::Rotate ( double Angle, double x, double y ) {
    HRESULT _hr = raw_Rotate(Angle, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7788)
inline HRESULT TGFrameworkSupport::_IAreaPropertiesAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7789)
inline IDispatchPtr TGFrameworkSupport::_IAreaPropertiesAuto::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Duplicate(XDistance, YDistance, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7790)
inline IDispatchPtr TGFrameworkSupport::_IAreaPropertiesAuto::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Mirror(x1, y1, x2, y2, BooleanCopyFlag, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7791)
inline HRESULT TGFrameworkSupport::_IAreaPropertiesAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7792)
inline HRESULT TGFrameworkSupport::_IAreaPropertiesAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7793)
inline HRESULT TGFrameworkSupport::_IAreaPropertiesAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7794)
inline HRESULT TGFrameworkSupport::_IAreaPropertiesAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7795)
inline HRESULT TGFrameworkSupport::_IAreaPropertiesAuto::GetAreaProperties ( double * dArea, double * dAreaCenterX, double * dAreaCenterY, double * dMIX, double * dMIY, double * dMIXY, double * dPrincipalMIX, double * dPrincipalMIY, double * dAngleOfOrientation, double * dPrincipalXX, double * dPrincipalXY, double * dPrincipalYX, double * dPrincipalYY, double * dPerimeter ) {
    HRESULT _hr = raw_GetAreaProperties(dArea, dAreaCenterX, dAreaCenterY, dMIX, dMIY, dMIXY, dPrincipalMIX, dPrincipalMIY, dAngleOfOrientation, dPrincipalXX, dPrincipalXY, dPrincipalYX, dPrincipalYY, dPerimeter);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7796)
inline HRESULT TGFrameworkSupport::_IAreaPropertiesAuto::SetAxesLength ( VARIANT_BOOL bPrincipalAxes, double dLength ) {
    HRESULT _hr = raw_SetAxesLength(bPrincipalAxes, dLength);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7797)
inline HRESULT TGFrameworkSupport::_IAreaPropertiesAuto::ShowAxes ( VARIANT_BOOL bPrincipalAxes, VARIANT_BOOL bShow ) {
    HRESULT _hr = raw_ShowAxes(bPrincipalAxes, bShow);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7798)
inline HRESULT TGFrameworkSupport::_IAreaPropertiesAuto::AddBoundaries ( long ParentBoundariesCount, SAFEARRAY * * ParentBoundaries, double xFloodPoint, double yFloodPoint ) {
    HRESULT _hr = raw_AddBoundaries(ParentBoundariesCount, ParentBoundaries, xFloodPoint, yFloodPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7799)
inline HRESULT TGFrameworkSupport::_IAreaPropertiesAuto::SetAxesLabels ( _bstr_t ModelXAxesLabel, _bstr_t ModelYAxesLabel, _bstr_t PrincipalXAxesLabel, _bstr_t PrincipalYAxesLabel ) {
    HRESULT _hr = raw_SetAxesLabels(ModelXAxesLabel, ModelYAxesLabel, PrincipalXAxesLabel, PrincipalYAxesLabel);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface AreaProperties wrapper method implementations
//

#pragma implementation_key(7800)
inline TGFramework::FillStylePtr TGFrameworkSupport::AreaProperties::GetAreaFillStyle ( ) {
    struct TGFramework::FillStyle * _result = 0;
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::FillStylePtr(_result, false);
}

#pragma implementation_key(7801)
inline void TGFrameworkSupport::AreaProperties::PutAreaFillStyle ( struct TGFramework::FillStyle * _arg1 ) {
    _com_dispatch_method(this, 0x65, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(7802)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::AreaProperties::GetAxesStyle ( ) {
    struct DimStyle * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DimStylePtr(_result, false);
}

#pragma implementation_key(7803)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::AreaProperties::GetAxesLabelStyle ( ) {
    struct DimStyle * _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DimStylePtr(_result, false);
}

#pragma implementation_key(7804)
inline _bstr_t TGFrameworkSupport::AreaProperties::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7805)
inline void TGFrameworkSupport::AreaProperties::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x68, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(7806)
inline TGFramework::ApplicationPtr TGFrameworkSupport::AreaProperties::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(7807)
inline long TGFrameworkSupport::AreaProperties::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7808)
inline _bstr_t TGFrameworkSupport::AreaProperties::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7809)
inline IDispatchPtr TGFrameworkSupport::AreaProperties::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7810)
inline long TGFrameworkSupport::AreaProperties::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7811)
inline _bstr_t TGFrameworkSupport::AreaProperties::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7812)
inline IDispatchPtr TGFrameworkSupport::AreaProperties::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x6d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7813)
inline HRESULT TGFrameworkSupport::AreaProperties::Copy ( ) {
    return _com_dispatch_method(this, 0x6e, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(7814)
inline HRESULT TGFrameworkSupport::AreaProperties::Cut ( ) {
    return _com_dispatch_method(this, 0x6f, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(7815)
inline HRESULT TGFrameworkSupport::AreaProperties::Delete ( ) {
    return _com_dispatch_method(this, 0x70, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(7816)
inline HRESULT TGFrameworkSupport::AreaProperties::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    return _com_dispatch_method(this, 0x71, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", XFrom, YFrom, XTo, YTo);
}

#pragma implementation_key(7817)
inline HRESULT TGFrameworkSupport::AreaProperties::Scale ( double Factor ) {
    return _com_dispatch_method(this, 0x72, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Factor);
}

#pragma implementation_key(7818)
inline HRESULT TGFrameworkSupport::AreaProperties::Rotate ( double Angle, double x, double y ) {
    return _com_dispatch_method(this, 0x73, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", Angle, x, y);
}

#pragma implementation_key(7819)
inline HRESULT TGFrameworkSupport::AreaProperties::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x74, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(7820)
inline IDispatchPtr TGFrameworkSupport::AreaProperties::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &XDistance, &YDistance);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7821)
inline IDispatchPtr TGFrameworkSupport::AreaProperties::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x76, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x080c", x1, y1, x2, y2, &BooleanCopyFlag);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7822)
inline HRESULT TGFrameworkSupport::AreaProperties::BringToFront ( ) {
    return _com_dispatch_method(this, 0x77, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(7823)
inline HRESULT TGFrameworkSupport::AreaProperties::BringForward ( ) {
    return _com_dispatch_method(this, 0x78, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(7824)
inline HRESULT TGFrameworkSupport::AreaProperties::SendToBack ( ) {
    return _com_dispatch_method(this, 0x79, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(7825)
inline HRESULT TGFrameworkSupport::AreaProperties::SendBackward ( ) {
    return _com_dispatch_method(this, 0x7a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(7826)
inline HRESULT TGFrameworkSupport::AreaProperties::GetAreaProperties ( double * dArea, double * dAreaCenterX, double * dAreaCenterY, double * dMIX, double * dMIY, double * dMIXY, double * dPrincipalMIX, double * dPrincipalMIY, double * dAngleOfOrientation, double * dPrincipalXX, double * dPrincipalXY, double * dPrincipalYX, double * dPrincipalYY, double * dPerimeter ) {
    return _com_dispatch_method(this, 0x7b, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005", dArea, dAreaCenterX, dAreaCenterY, dMIX, dMIY, dMIXY, dPrincipalMIX, dPrincipalMIY, dAngleOfOrientation, dPrincipalXX, dPrincipalXY, dPrincipalYX, dPrincipalYY, dPerimeter);
}

#pragma implementation_key(7827)
inline HRESULT TGFrameworkSupport::AreaProperties::SetAxesLength ( VARIANT_BOOL bPrincipalAxes, double dLength ) {
    return _com_dispatch_method(this, 0x7c, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b\x0005", bPrincipalAxes, dLength);
}

#pragma implementation_key(7828)
inline HRESULT TGFrameworkSupport::AreaProperties::ShowAxes ( VARIANT_BOOL bPrincipalAxes, VARIANT_BOOL bShow ) {
    return _com_dispatch_method(this, 0x7d, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000b\x000b", bPrincipalAxes, bShow);
}

#pragma implementation_key(7829)
inline HRESULT TGFrameworkSupport::AreaProperties::AddBoundaries ( long ParentBoundariesCount, SAFEARRAY * * ParentBoundaries, double xFloodPoint, double yFloodPoint ) {
    return _com_dispatch_method(this, 0x7e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6009\x0005\x0005", ParentBoundariesCount, ParentBoundaries, xFloodPoint, yFloodPoint);
}

#pragma implementation_key(7830)
inline HRESULT TGFrameworkSupport::AreaProperties::SetAxesLabels ( _bstr_t ModelXAxesLabel, _bstr_t ModelYAxesLabel, _bstr_t PrincipalXAxesLabel, _bstr_t PrincipalYAxesLabel ) {
    return _com_dispatch_method(this, 0x7f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0008\x0008\x0008", (BSTR)ModelXAxesLabel, (BSTR)ModelYAxesLabel, (BSTR)PrincipalXAxesLabel, (BSTR)PrincipalYAxesLabel);
}

//
// interface _IAreaPropertiesCollectionAuto wrapper method implementations
//

#pragma implementation_key(7831)
inline TGFrameworkSupport::AreaPropertiesPtr TGFrameworkSupport::_IAreaPropertiesCollectionAuto::Item ( const _variant_t & Index ) {
    struct AreaProperties * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AreaPropertiesPtr(_result, false);
}

#pragma implementation_key(7832)
inline IUnknownPtr TGFrameworkSupport::_IAreaPropertiesCollectionAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(7833)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IAreaPropertiesCollectionAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(7834)
inline long TGFrameworkSupport::_IAreaPropertiesCollectionAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7835)
inline IDispatchPtr TGFrameworkSupport::_IAreaPropertiesCollectionAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7836)
inline TGFrameworkSupport::AreaPropertiesPtr TGFrameworkSupport::_IAreaPropertiesCollectionAuto::Add ( long ParentBoundariesCount, SAFEARRAY * * ParentBoundaries, double xFloodPoint, double yFloodPoint ) {
    struct AreaProperties * _result = 0;
    HRESULT _hr = raw_Add(ParentBoundariesCount, ParentBoundaries, xFloodPoint, yFloodPoint, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AreaPropertiesPtr(_result, false);
}

//
// interface _IPMIAuto wrapper method implementations
//

#pragma implementation_key(7837)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IPMIAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(7838)
inline IDispatchPtr TGFrameworkSupport::_IPMIAuto::GetDimensions ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Dimensions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7839)
inline IDispatchPtr TGFrameworkSupport::_IPMIAuto::GetBalloons ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Balloons(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7840)
inline IDispatchPtr TGFrameworkSupport::_IPMIAuto::GetCornerAnnotations ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_CornerAnnotations(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7841)
inline IDispatchPtr TGFrameworkSupport::_IPMIAuto::GetDatumFrames ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_DatumFrames(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7842)
inline IDispatchPtr TGFrameworkSupport::_IPMIAuto::GetDatumPoints ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_DatumPoints(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7843)
inline IDispatchPtr TGFrameworkSupport::_IPMIAuto::GetDatumTargets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_DatumTargets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7844)
inline IDispatchPtr TGFrameworkSupport::_IPMIAuto::GetPinSymbols ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_PinSymbols(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7845)
inline IDispatchPtr TGFrameworkSupport::_IPMIAuto::GetFeatureControlFrames ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_FeatureControlFrames(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7846)
inline IDispatchPtr TGFrameworkSupport::_IPMIAuto::GetLeaders ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Leaders(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7847)
inline IDispatchPtr TGFrameworkSupport::_IPMIAuto::GetSurfaceFinishSymbols ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_SurfaceFinishSymbols(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7848)
inline IDispatchPtr TGFrameworkSupport::_IPMIAuto::GetWeldSymbols ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_WeldSymbols(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7849)
inline IDispatchPtr TGFrameworkSupport::_IPMIAuto::GetGostWeldSymbols ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_GostWeldSymbols(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7850)
inline IDispatchPtr TGFrameworkSupport::_IPMIAuto::GetSymbolicPMIGroup ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_SymbolicPMIGroup(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7851)
inline IDispatchPtr TGFrameworkSupport::_IPMIAuto::GetPMIModelViews ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_PMIModelViews(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7852)
inline IDispatchPtr TGFrameworkSupport::_IPMIAuto::GetCenterMarks ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_CenterMarks(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7853)
inline IDispatchPtr TGFrameworkSupport::_IPMIAuto::GetCenterLines ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_CenterLines(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7854)
inline IDispatchPtr TGFrameworkSupport::_IPMIAuto::GetBoltHoleCircles ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_BoltHoleCircles(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7855)
inline void TGFrameworkSupport::_IPMIAuto::PutAxis ( IDispatch * Axis ) {
    HRESULT _hr = put_Axis(Axis);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7856)
inline IDispatchPtr TGFrameworkSupport::_IPMIAuto::GetAxis ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Axis(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7857)
inline HRESULT TGFrameworkSupport::_IPMIAuto::ClearAxis ( ) {
    HRESULT _hr = raw_ClearAxis();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7858)
inline void TGFrameworkSupport::_IPMIAuto::PutActivePlane ( IDispatch * Plane ) {
    HRESULT _hr = put_ActivePlane(Plane);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7859)
inline IDispatchPtr TGFrameworkSupport::_IPMIAuto::GetActivePlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_ActivePlane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7860)
inline HRESULT TGFrameworkSupport::_IPMIAuto::ClearActivePlane ( ) {
    HRESULT _hr = raw_ClearActivePlane();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7861)
inline void TGFrameworkSupport::_IPMIAuto::PutShowDimensions ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_ShowDimensions(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7862)
inline VARIANT_BOOL TGFrameworkSupport::_IPMIAuto::GetShowDimensions ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowDimensions(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7863)
inline void TGFrameworkSupport::_IPMIAuto::PutShowAnnotations ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_ShowAnnotations(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7864)
inline VARIANT_BOOL TGFrameworkSupport::_IPMIAuto::GetShowAnnotations ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowAnnotations(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7865)
inline void TGFrameworkSupport::_IPMIAuto::PutShow ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_Show(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7866)
inline VARIANT_BOOL TGFrameworkSupport::_IPMIAuto::GetShow ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Show(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7867)
inline void TGFrameworkSupport::_IPMIAuto::PutPMIPixelMode ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_PMIPixelMode(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7868)
inline VARIANT_BOOL TGFrameworkSupport::_IPMIAuto::GetPMIPixelMode ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_PMIPixelMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7869)
inline void TGFrameworkSupport::_IPMIAuto::PutPMIPixelSize ( int Value ) {
    HRESULT _hr = put_PMIPixelSize(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7870)
inline int TGFrameworkSupport::_IPMIAuto::GetPMIPixelSize ( ) {
    int _result = 0;
    HRESULT _hr = get_PMIPixelSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7871)
inline IDispatchPtr TGFrameworkSupport::_IPMIAuto::GetTextBoxes ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_TextBoxes(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

//
// interface _IGostWeldSymbolAuto wrapper method implementations
//

#pragma implementation_key(7872)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::_IGostWeldSymbolAuto::GetStyle ( ) {
    struct DimStyle * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimStylePtr(_result, false);
}

#pragma implementation_key(7873)
inline HRESULT TGFrameworkSupport::_IGostWeldSymbolAuto::SetTerminator ( IDispatch * TerminatorObj, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    HRESULT _hr = raw_SetTerminator(TerminatorObj, x, y, z, keyPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7874)
inline HRESULT TGFrameworkSupport::_IGostWeldSymbolAuto::GetTerminator ( IDispatch * * TerminatorObj, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    HRESULT _hr = raw_GetTerminator(TerminatorObj, x, y, z, keyPoint);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7875)
inline IDispatchPtr TGFrameworkSupport::_IGostWeldSymbolAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7876)
inline VARIANT_BOOL TGFrameworkSupport::_IGostWeldSymbolAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7877)
inline IDispatchPtr TGFrameworkSupport::_IGostWeldSymbolAuto::GetPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Plane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7878)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IGostWeldSymbolAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(7879)
inline long TGFrameworkSupport::_IGostWeldSymbolAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7880)
inline _bstr_t TGFrameworkSupport::_IGostWeldSymbolAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7881)
inline IDispatchPtr TGFrameworkSupport::_IGostWeldSymbolAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7882)
inline long TGFrameworkSupport::_IGostWeldSymbolAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7883)
inline long TGFrameworkSupport::_IGostWeldSymbolAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7884)
inline _bstr_t TGFrameworkSupport::_IGostWeldSymbolAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7885)
inline IDispatchPtr TGFrameworkSupport::_IGostWeldSymbolAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7886)
inline HRESULT TGFrameworkSupport::_IGostWeldSymbolAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7887)
inline HRESULT TGFrameworkSupport::_IGostWeldSymbolAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7888)
inline HRESULT TGFrameworkSupport::_IGostWeldSymbolAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7889)
inline HRESULT TGFrameworkSupport::_IGostWeldSymbolAuto::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    HRESULT _hr = raw_Move(XFrom, YFrom, XTo, YTo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7890)
inline HRESULT TGFrameworkSupport::_IGostWeldSymbolAuto::Scale ( double Factor ) {
    HRESULT _hr = raw_Scale(Factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7891)
inline HRESULT TGFrameworkSupport::_IGostWeldSymbolAuto::Rotate ( double Angle, double x, double y ) {
    HRESULT _hr = raw_Rotate(Angle, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7892)
inline HRESULT TGFrameworkSupport::_IGostWeldSymbolAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7893)
inline IDispatchPtr TGFrameworkSupport::_IGostWeldSymbolAuto::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Duplicate(XDistance, YDistance, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7894)
inline IDispatchPtr TGFrameworkSupport::_IGostWeldSymbolAuto::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Mirror(x1, y1, x2, y2, BooleanCopyFlag, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7895)
inline HRESULT TGFrameworkSupport::_IGostWeldSymbolAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7896)
inline HRESULT TGFrameworkSupport::_IGostWeldSymbolAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7897)
inline HRESULT TGFrameworkSupport::_IGostWeldSymbolAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7898)
inline HRESULT TGFrameworkSupport::_IGostWeldSymbolAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7899)
inline HRESULT TGFrameworkSupport::_IGostWeldSymbolAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7900)
inline double TGFrameworkSupport::_IGostWeldSymbolAuto::GetBreakLineDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_BreakLineDistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7901)
inline void TGFrameworkSupport::_IGostWeldSymbolAuto::PutBreakLineDistance ( double Distance ) {
    HRESULT _hr = put_BreakLineDistance(Distance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7902)
inline VARIANT_BOOL TGFrameworkSupport::_IGostWeldSymbolAuto::GetBreakLine ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BreakLine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7903)
inline void TGFrameworkSupport::_IGostWeldSymbolAuto::PutBreakLine ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_BreakLine(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7904)
inline VARIANT_BOOL TGFrameworkSupport::_IGostWeldSymbolAuto::GetBreakLineDirection ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_BreakLineDirection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7905)
inline void TGFrameworkSupport::_IGostWeldSymbolAuto::PutBreakLineDirection ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_BreakLineDirection(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7906)
inline VARIANT_BOOL TGFrameworkSupport::_IGostWeldSymbolAuto::GetLeader ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_Leader(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7907)
inline void TGFrameworkSupport::_IGostWeldSymbolAuto::PutLeader ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_Leader(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7908)
inline long TGFrameworkSupport::_IGostWeldSymbolAuto::GetVertexCount ( ) {
    long _result = 0;
    HRESULT _hr = get_VertexCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7909)
inline HRESULT TGFrameworkSupport::_IGostWeldSymbolAuto::GetVertices ( long * VertexCount, SAFEARRAY * * Vertices ) {
    HRESULT _hr = raw_GetVertices(VertexCount, Vertices);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7910)
inline HRESULT TGFrameworkSupport::_IGostWeldSymbolAuto::SetVertices ( long VertexCount, SAFEARRAY * * Vertices ) {
    HRESULT _hr = raw_SetVertices(VertexCount, Vertices);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7911)
inline HRESULT TGFrameworkSupport::_IGostWeldSymbolAuto::GetVertex ( long Index, double * x, double * y, double * z ) {
    HRESULT _hr = raw_GetVertex(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7912)
inline HRESULT TGFrameworkSupport::_IGostWeldSymbolAuto::SetVertex ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetVertex(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7913)
inline HRESULT TGFrameworkSupport::_IGostWeldSymbolAuto::InsertVertex ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_InsertVertex(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7914)
inline HRESULT TGFrameworkSupport::_IGostWeldSymbolAuto::AddVertex ( double x, double y, double z ) {
    HRESULT _hr = raw_AddVertex(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7915)
inline HRESULT TGFrameworkSupport::_IGostWeldSymbolAuto::RemoveVertex ( long Index ) {
    HRESULT _hr = raw_RemoveVertex(Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7916)
inline long TGFrameworkSupport::_IGostWeldSymbolAuto::GetKeyPointCount ( ) {
    long _result = 0;
    HRESULT _hr = get_KeyPointCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7917)
inline HRESULT TGFrameworkSupport::_IGostWeldSymbolAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7918)
inline HRESULT TGFrameworkSupport::_IGostWeldSymbolAuto::SetKeyPoint ( long Index, double x, double y, double z ) {
    HRESULT _hr = raw_SetKeyPoint(Index, x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7919)
inline double TGFrameworkSupport::_IGostWeldSymbolAuto::GetRotationAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_RotationAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7920)
inline void TGFrameworkSupport::_IGostWeldSymbolAuto::PutRotationAngle ( double pdAngle ) {
    HRESULT _hr = put_RotationAngle(pdAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7921)
inline VARIANT_BOOL TGFrameworkSupport::_IGostWeldSymbolAuto::GetWeldInField ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WeldInField(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7922)
inline void TGFrameworkSupport::_IGostWeldSymbolAuto::PutWeldInField ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_WeldInField(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7923)
inline VARIANT_BOOL TGFrameworkSupport::_IGostWeldSymbolAuto::GetWeldAllAround ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_WeldAllAround(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7924)
inline void TGFrameworkSupport::_IGostWeldSymbolAuto::PutWeldAllAround ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_WeldAllAround(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7925)
inline double TGFrameworkSupport::_IGostWeldSymbolAuto::GetTextScale ( ) {
    double _result = 0;
    HRESULT _hr = get_TextScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7926)
inline void TGFrameworkSupport::_IGostWeldSymbolAuto::PutTextScale ( double pdAngle ) {
    HRESULT _hr = put_TextScale(pdAngle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7927)
inline void TGFrameworkSupport::_IGostWeldSymbolAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7928)
inline _bstr_t TGFrameworkSupport::_IGostWeldSymbolAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7929)
inline IDispatchPtr TGFrameworkSupport::_IGostWeldSymbolAuto::GetPMIPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_PMIPlane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7930)
inline double TGFrameworkSupport::_IGostWeldSymbolAuto::GetPMITrackDistance ( ) {
    double _result = 0;
    HRESULT _hr = get_PMITrackDistance(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7931)
inline void TGFrameworkSupport::_IGostWeldSymbolAuto::PutPMITrackDistance ( double pdPMITrackDistance ) {
    HRESULT _hr = put_PMITrackDistance(pdPMITrackDistance);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7932)
inline void TGFrameworkSupport::_IGostWeldSymbolAuto::PutAboveBreakLineText ( _bstr_t Text ) {
    HRESULT _hr = put_AboveBreakLineText(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7933)
inline _bstr_t TGFrameworkSupport::_IGostWeldSymbolAuto::GetAboveBreakLineText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AboveBreakLineText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7934)
inline void TGFrameworkSupport::_IGostWeldSymbolAuto::PutBelowBreakLineText ( _bstr_t Text ) {
    HRESULT _hr = put_BelowBreakLineText(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7935)
inline _bstr_t TGFrameworkSupport::_IGostWeldSymbolAuto::GetBelowBreakLineText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BelowBreakLineText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7936)
inline void TGFrameworkSupport::_IGostWeldSymbolAuto::PutAboveLeaderLineText ( _bstr_t Text ) {
    HRESULT _hr = put_AboveLeaderLineText(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7937)
inline _bstr_t TGFrameworkSupport::_IGostWeldSymbolAuto::GetAboveLeaderLineText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AboveLeaderLineText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7938)
inline void TGFrameworkSupport::_IGostWeldSymbolAuto::PutBelowLeaderLineText ( _bstr_t Text ) {
    HRESULT _hr = put_BelowLeaderLineText(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7939)
inline _bstr_t TGFrameworkSupport::_IGostWeldSymbolAuto::GetBelowLeaderLineText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BelowLeaderLineText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7940)
inline VARIANT_BOOL TGFrameworkSupport::_IGostWeldSymbolAuto::GetPermanentJoint ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_PermanentJoint(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7941)
inline void TGFrameworkSupport::_IGostWeldSymbolAuto::PutPermanentJoint ( VARIANT_BOOL Flag ) {
    HRESULT _hr = put_PermanentJoint(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7942)
inline void TGFrameworkSupport::_IGostWeldSymbolAuto::PutPermanentJointType ( enum DimGostWeldPermanentJointTypeConstants pVal ) {
    HRESULT _hr = put_PermanentJointType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7943)
inline enum TGFrameworkSupport::DimGostWeldPermanentJointTypeConstants TGFrameworkSupport::_IGostWeldSymbolAuto::GetPermanentJointType ( ) {
    enum DimGostWeldPermanentJointTypeConstants _result;
    HRESULT _hr = get_PermanentJointType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7944)
inline void TGFrameworkSupport::_IGostWeldSymbolAuto::PutTerminatorSideType ( enum DimGostWeldTerminatorTypeConstants pVal ) {
    HRESULT _hr = put_TerminatorSideType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7945)
inline enum TGFrameworkSupport::DimGostWeldTerminatorTypeConstants TGFrameworkSupport::_IGostWeldSymbolAuto::GetTerminatorSideType ( ) {
    enum DimGostWeldTerminatorTypeConstants _result;
    HRESULT _hr = get_TerminatorSideType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7946)
inline void TGFrameworkSupport::_IGostWeldSymbolAuto::PutHidePMI ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_HidePMI(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7947)
inline VARIANT_BOOL TGFrameworkSupport::_IGostWeldSymbolAuto::GetHidePMI ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HidePMI(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7948)
inline TGFrameworkSupport::DisplayDataPtr TGFrameworkSupport::_IGostWeldSymbolAuto::GetDisplayData ( ) {
    struct DisplayData * _result = 0;
    HRESULT _hr = raw_GetDisplayData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DisplayDataPtr(_result, false);
}

#pragma implementation_key(7949)
inline HRESULT TGFrameworkSupport::_IGostWeldSymbolAuto::PromoteToCurrentVersion ( ) {
    HRESULT _hr = raw_PromoteToCurrentVersion();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7950)
inline void TGFrameworkSupport::_IGostWeldSymbolAuto::PutPMIName ( _bstr_t Text ) {
    HRESULT _hr = put_PMIName(Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7951)
inline _bstr_t TGFrameworkSupport::_IGostWeldSymbolAuto::GetPMIName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PMIName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(7952)
inline void TGFrameworkSupport::_IGostWeldSymbolAuto::PutWeldInFieldFlagDirection ( enum WeldSymbolFlagDirectionConstants Flag ) {
    HRESULT _hr = put_WeldInFieldFlagDirection(Flag);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7953)
inline enum TGFrameworkSupport::WeldSymbolFlagDirectionConstants TGFrameworkSupport::_IGostWeldSymbolAuto::GetWeldInFieldFlagDirection ( ) {
    enum WeldSymbolFlagDirectionConstants _result;
    HRESULT _hr = get_WeldInFieldFlagDirection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7954)
inline HRESULT TGFrameworkSupport::_IGostWeldSymbolAuto::TransformToModelCoordinates ( double InputX, double InputY, double InputZ, double * ModelX, double * ModelY, double * ModelZ ) {
    HRESULT _hr = raw_TransformToModelCoordinates(InputX, InputY, InputZ, ModelX, ModelY, ModelZ);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7955)
inline VARIANT_BOOL TGFrameworkSupport::_IGostWeldSymbolAuto::GetIsTerminatorAttachedToEntity ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsTerminatorAttachedToEntity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(7956)
inline HRESULT TGFrameworkSupport::_IGostWeldSymbolAuto::GetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    HRESULT _hr = raw_GetReferencedGeometry(ReferencedGeometries);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7957)
inline HRESULT TGFrameworkSupport::_IGostWeldSymbolAuto::SetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    HRESULT _hr = raw_SetReferencedGeometry(ReferencedGeometries);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(7958)
inline HRESULT TGFrameworkSupport::_IGostWeldSymbolAuto::GetReferencedObjectInfo ( SAFEARRAY * * ReferencedObjects, SAFEARRAY * * ReferencedObjectTypes ) {
    HRESULT _hr = raw_GetReferencedObjectInfo(ReferencedObjects, ReferencedObjectTypes);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface GostWeldSymbol wrapper method implementations
//

#pragma implementation_key(7959)
inline TGFrameworkSupport::DimStylePtr TGFrameworkSupport::GostWeldSymbol::GetStyle ( ) {
    struct DimStyle * _result = 0;
    _com_dispatch_method(this, 0x278ca, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DimStylePtr(_result, false);
}

#pragma implementation_key(7960)
inline HRESULT TGFrameworkSupport::GostWeldSymbol::SetTerminator ( IDispatch * TerminatorObj, double x, double y, double z, VARIANT_BOOL keyPoint ) {
    return _com_dispatch_method(this, 0x278cb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0009\x0005\x0005\x0005\x000b", TerminatorObj, x, y, z, keyPoint);
}

#pragma implementation_key(7961)
inline HRESULT TGFrameworkSupport::GostWeldSymbol::GetTerminator ( IDispatch * * TerminatorObj, double * x, double * y, double * z, VARIANT_BOOL * keyPoint ) {
    return _com_dispatch_method(this, 0x278cc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4005\x4005\x4005\x400b", TerminatorObj, x, y, z, keyPoint);
}

#pragma implementation_key(7962)
inline IDispatchPtr TGFrameworkSupport::GostWeldSymbol::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7963)
inline VARIANT_BOOL TGFrameworkSupport::GostWeldSymbol::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(7964)
inline IDispatchPtr TGFrameworkSupport::GostWeldSymbol::GetPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x278cd, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7965)
inline TGFramework::ApplicationPtr TGFrameworkSupport::GostWeldSymbol::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x278ce, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(7966)
inline long TGFrameworkSupport::GostWeldSymbol::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x278cf, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7967)
inline _bstr_t TGFrameworkSupport::GostWeldSymbol::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x278d0, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7968)
inline IDispatchPtr TGFrameworkSupport::GostWeldSymbol::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x278d1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7969)
inline long TGFrameworkSupport::GostWeldSymbol::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x278d2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7970)
inline long TGFrameworkSupport::GostWeldSymbol::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x278d3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7971)
inline _bstr_t TGFrameworkSupport::GostWeldSymbol::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x278d4, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7972)
inline IDispatchPtr TGFrameworkSupport::GostWeldSymbol::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x278d5, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7973)
inline HRESULT TGFrameworkSupport::GostWeldSymbol::Copy ( ) {
    return _com_dispatch_method(this, 0x278d6, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(7974)
inline HRESULT TGFrameworkSupport::GostWeldSymbol::Cut ( ) {
    return _com_dispatch_method(this, 0x278d7, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(7975)
inline HRESULT TGFrameworkSupport::GostWeldSymbol::Delete ( ) {
    return _com_dispatch_method(this, 0x278d8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(7976)
inline HRESULT TGFrameworkSupport::GostWeldSymbol::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    return _com_dispatch_method(this, 0x278d9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", XFrom, YFrom, XTo, YTo);
}

#pragma implementation_key(7977)
inline HRESULT TGFrameworkSupport::GostWeldSymbol::Scale ( double Factor ) {
    return _com_dispatch_method(this, 0x278da, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Factor);
}

#pragma implementation_key(7978)
inline HRESULT TGFrameworkSupport::GostWeldSymbol::Rotate ( double Angle, double x, double y ) {
    return _com_dispatch_method(this, 0x278db, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", Angle, x, y);
}

#pragma implementation_key(7979)
inline HRESULT TGFrameworkSupport::GostWeldSymbol::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x278dc, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(7980)
inline IDispatchPtr TGFrameworkSupport::GostWeldSymbol::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x278dd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &XDistance, &YDistance);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7981)
inline IDispatchPtr TGFrameworkSupport::GostWeldSymbol::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x278de, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x080c", x1, y1, x2, y2, &BooleanCopyFlag);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(7982)
inline HRESULT TGFrameworkSupport::GostWeldSymbol::BringToFront ( ) {
    return _com_dispatch_method(this, 0x278df, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(7983)
inline HRESULT TGFrameworkSupport::GostWeldSymbol::BringForward ( ) {
    return _com_dispatch_method(this, 0x278e0, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(7984)
inline HRESULT TGFrameworkSupport::GostWeldSymbol::SendToBack ( ) {
    return _com_dispatch_method(this, 0x278e1, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(7985)
inline HRESULT TGFrameworkSupport::GostWeldSymbol::SendBackward ( ) {
    return _com_dispatch_method(this, 0x278e2, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(7986)
inline HRESULT TGFrameworkSupport::GostWeldSymbol::Select ( ) {
    return _com_dispatch_method(this, 0x278e3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(7987)
inline double TGFrameworkSupport::GostWeldSymbol::GetBreakLineDistance ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x278e4, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7988)
inline void TGFrameworkSupport::GostWeldSymbol::PutBreakLineDistance ( double _arg1 ) {
    _com_dispatch_method(this, 0x278e4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(7989)
inline VARIANT_BOOL TGFrameworkSupport::GostWeldSymbol::GetBreakLine ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x278e5, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7990)
inline void TGFrameworkSupport::GostWeldSymbol::PutBreakLine ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x278e5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(7991)
inline VARIANT_BOOL TGFrameworkSupport::GostWeldSymbol::GetBreakLineDirection ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x278e6, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7992)
inline void TGFrameworkSupport::GostWeldSymbol::PutBreakLineDirection ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x278e6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(7993)
inline VARIANT_BOOL TGFrameworkSupport::GostWeldSymbol::GetLeader ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x278e7, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7994)
inline void TGFrameworkSupport::GostWeldSymbol::PutLeader ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x278e7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(7995)
inline long TGFrameworkSupport::GostWeldSymbol::GetVertexCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x278e8, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7996)
inline HRESULT TGFrameworkSupport::GostWeldSymbol::GetVertices ( long * VertexCount, SAFEARRAY * * Vertices ) {
    return _com_dispatch_method(this, 0x278e9, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4003\x6005", VertexCount, Vertices);
}

#pragma implementation_key(7997)
inline HRESULT TGFrameworkSupport::GostWeldSymbol::SetVertices ( long VertexCount, SAFEARRAY * * Vertices ) {
    return _com_dispatch_method(this, 0x278ea, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6005", VertexCount, Vertices);
}

#pragma implementation_key(7998)
inline HRESULT TGFrameworkSupport::GostWeldSymbol::GetVertex ( long Index, double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0x278eb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005", Index, x, y, z);
}

#pragma implementation_key(7999)
inline HRESULT TGFrameworkSupport::GostWeldSymbol::SetVertex ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x278ec, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(8000)
inline HRESULT TGFrameworkSupport::GostWeldSymbol::InsertVertex ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x278ed, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(8001)
inline HRESULT TGFrameworkSupport::GostWeldSymbol::AddVertex ( double x, double y, double z ) {
    return _com_dispatch_method(this, 0x278ee, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", x, y, z);
}

#pragma implementation_key(8002)
inline HRESULT TGFrameworkSupport::GostWeldSymbol::RemoveVertex ( long Index ) {
    return _com_dispatch_method(this, 0x278ef, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Index);
}

#pragma implementation_key(8003)
inline long TGFrameworkSupport::GostWeldSymbol::GetKeyPointCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x278f0, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8004)
inline HRESULT TGFrameworkSupport::GostWeldSymbol::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x278f1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(8005)
inline HRESULT TGFrameworkSupport::GostWeldSymbol::SetKeyPoint ( long Index, double x, double y, double z ) {
    return _com_dispatch_method(this, 0x278f2, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005\x0005", Index, x, y, z);
}

#pragma implementation_key(8006)
inline double TGFrameworkSupport::GostWeldSymbol::GetRotationAngle ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x278f3, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8007)
inline void TGFrameworkSupport::GostWeldSymbol::PutRotationAngle ( double _arg1 ) {
    _com_dispatch_method(this, 0x278f3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(8008)
inline VARIANT_BOOL TGFrameworkSupport::GostWeldSymbol::GetWeldInField ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x278f4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8009)
inline void TGFrameworkSupport::GostWeldSymbol::PutWeldInField ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x278f4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(8010)
inline VARIANT_BOOL TGFrameworkSupport::GostWeldSymbol::GetWeldAllAround ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x278f5, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8011)
inline void TGFrameworkSupport::GostWeldSymbol::PutWeldAllAround ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x278f5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(8012)
inline double TGFrameworkSupport::GostWeldSymbol::GetTextScale ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x278f6, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8013)
inline void TGFrameworkSupport::GostWeldSymbol::PutTextScale ( double _arg1 ) {
    _com_dispatch_method(this, 0x278f6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(8014)
inline void TGFrameworkSupport::GostWeldSymbol::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x278f7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(8015)
inline _bstr_t TGFrameworkSupport::GostWeldSymbol::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x278f7, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8016)
inline IDispatchPtr TGFrameworkSupport::GostWeldSymbol::GetPMIPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x278f8, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8017)
inline double TGFrameworkSupport::GostWeldSymbol::GetPMITrackDistance ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x278f9, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8018)
inline void TGFrameworkSupport::GostWeldSymbol::PutPMITrackDistance ( double _arg1 ) {
    _com_dispatch_method(this, 0x278f9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(8019)
inline void TGFrameworkSupport::GostWeldSymbol::PutAboveBreakLineText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x278fa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(8020)
inline _bstr_t TGFrameworkSupport::GostWeldSymbol::GetAboveBreakLineText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x278fa, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8021)
inline void TGFrameworkSupport::GostWeldSymbol::PutBelowBreakLineText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x278fb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(8022)
inline _bstr_t TGFrameworkSupport::GostWeldSymbol::GetBelowBreakLineText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x278fb, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8023)
inline void TGFrameworkSupport::GostWeldSymbol::PutAboveLeaderLineText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x278fc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(8024)
inline _bstr_t TGFrameworkSupport::GostWeldSymbol::GetAboveLeaderLineText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x278fc, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8025)
inline void TGFrameworkSupport::GostWeldSymbol::PutBelowLeaderLineText ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x278fd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(8026)
inline _bstr_t TGFrameworkSupport::GostWeldSymbol::GetBelowLeaderLineText ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x278fd, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8027)
inline VARIANT_BOOL TGFrameworkSupport::GostWeldSymbol::GetPermanentJoint ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x278fe, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8028)
inline void TGFrameworkSupport::GostWeldSymbol::PutPermanentJoint ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x278fe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(8029)
inline void TGFrameworkSupport::GostWeldSymbol::PutPermanentJointType ( enum DimGostWeldPermanentJointTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x278ff, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(8030)
inline enum TGFrameworkSupport::DimGostWeldPermanentJointTypeConstants TGFrameworkSupport::GostWeldSymbol::GetPermanentJointType ( ) {
    enum DimGostWeldPermanentJointTypeConstants _result;
    _com_dispatch_method(this, 0x278ff, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8031)
inline void TGFrameworkSupport::GostWeldSymbol::PutTerminatorSideType ( enum DimGostWeldTerminatorTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x27900, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(8032)
inline enum TGFrameworkSupport::DimGostWeldTerminatorTypeConstants TGFrameworkSupport::GostWeldSymbol::GetTerminatorSideType ( ) {
    enum DimGostWeldTerminatorTypeConstants _result;
    _com_dispatch_method(this, 0x27900, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8033)
inline void TGFrameworkSupport::GostWeldSymbol::PutHidePMI ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x27901, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(8034)
inline VARIANT_BOOL TGFrameworkSupport::GostWeldSymbol::GetHidePMI ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x27901, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8035)
inline TGFrameworkSupport::DisplayDataPtr TGFrameworkSupport::GostWeldSymbol::GetDisplayData ( ) {
    struct DisplayData * _result = 0;
    _com_dispatch_method(this, 0x2790a, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return DisplayDataPtr(_result, false);
}

#pragma implementation_key(8036)
inline HRESULT TGFrameworkSupport::GostWeldSymbol::PromoteToCurrentVersion ( ) {
    return _com_dispatch_method(this, 0x2790b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(8037)
inline void TGFrameworkSupport::GostWeldSymbol::PutPMIName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x2790c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(8038)
inline _bstr_t TGFrameworkSupport::GostWeldSymbol::GetPMIName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x2790c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8039)
inline void TGFrameworkSupport::GostWeldSymbol::PutWeldInFieldFlagDirection ( enum WeldSymbolFlagDirectionConstants _arg1 ) {
    _com_dispatch_method(this, 0x2790d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(8040)
inline enum TGFrameworkSupport::WeldSymbolFlagDirectionConstants TGFrameworkSupport::GostWeldSymbol::GetWeldInFieldFlagDirection ( ) {
    enum WeldSymbolFlagDirectionConstants _result;
    _com_dispatch_method(this, 0x2790d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8041)
inline HRESULT TGFrameworkSupport::GostWeldSymbol::TransformToModelCoordinates ( double InputX, double InputY, double InputZ, double * ModelX, double * ModelY, double * ModelZ ) {
    return _com_dispatch_method(this, 0x2790e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x4005\x4005\x4005", InputX, InputY, InputZ, ModelX, ModelY, ModelZ);
}

#pragma implementation_key(8042)
inline VARIANT_BOOL TGFrameworkSupport::GostWeldSymbol::GetIsTerminatorAttachedToEntity ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2790f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8043)
inline HRESULT TGFrameworkSupport::GostWeldSymbol::GetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    return _com_dispatch_method(this, 0x27911, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009", ReferencedGeometries);
}

#pragma implementation_key(8044)
inline HRESULT TGFrameworkSupport::GostWeldSymbol::SetReferencedGeometry ( SAFEARRAY * * ReferencedGeometries ) {
    return _com_dispatch_method(this, 0x27910, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009", ReferencedGeometries);
}

#pragma implementation_key(8045)
inline HRESULT TGFrameworkSupport::GostWeldSymbol::GetReferencedObjectInfo ( SAFEARRAY * * ReferencedObjects, SAFEARRAY * * ReferencedObjectTypes ) {
    return _com_dispatch_method(this, 0x27912, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009\x6003", ReferencedObjects, ReferencedObjectTypes);
}

//
// interface _IGostWeldSymbolsAuto wrapper method implementations
//

#pragma implementation_key(8046)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IGostWeldSymbolsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(8047)
inline long TGFrameworkSupport::_IGostWeldSymbolsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8048)
inline IDispatchPtr TGFrameworkSupport::_IGostWeldSymbolsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8049)
inline TGFrameworkSupport::GostWeldSymbolPtr TGFrameworkSupport::_IGostWeldSymbolsAuto::Item ( const _variant_t & Index ) {
    struct GostWeldSymbol * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return GostWeldSymbolPtr(_result, false);
}

#pragma implementation_key(8050)
inline IUnknownPtr TGFrameworkSupport::_IGostWeldSymbolsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(8051)
inline void TGFrameworkSupport::_IGostWeldSymbolsAuto::PutPlane ( IDispatch * Plane ) {
    HRESULT _hr = put_Plane(Plane);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8052)
inline IDispatchPtr TGFrameworkSupport::_IGostWeldSymbolsAuto::GetPlane ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Plane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8053)
inline void TGFrameworkSupport::_IGostWeldSymbolsAuto::PutStyle ( struct DimensionStyle * Style ) {
    HRESULT _hr = put_Style(Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8054)
inline TGFrameworkSupport::DimensionStylePtr TGFrameworkSupport::_IGostWeldSymbolsAuto::GetStyle ( ) {
    struct DimensionStyle * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionStylePtr(_result, false);
}

#pragma implementation_key(8055)
inline TGFrameworkSupport::GostWeldSymbolPtr TGFrameworkSupport::_IGostWeldSymbolsAuto::AddByTerminator ( IDispatch * TerminatorObject, double x1, double y1, double z1, VARIANT_BOOL keyPoint1 ) {
    struct GostWeldSymbol * _result = 0;
    HRESULT _hr = raw_AddByTerminator(TerminatorObject, x1, y1, z1, keyPoint1, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return GostWeldSymbolPtr(_result, false);
}

#pragma implementation_key(8056)
inline HRESULT TGFrameworkSupport::_IGostWeldSymbolsAuto::ClearPlane ( ) {
    HRESULT _hr = raw_ClearPlane();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8057)
inline HRESULT TGFrameworkSupport::_IGostWeldSymbolsAuto::ClearStyle ( ) {
    HRESULT _hr = raw_ClearStyle();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8058)
inline TGFrameworkSupport::AnnotInitDataPtr TGFrameworkSupport::_IGostWeldSymbolsAuto::GetAnnotInitData ( ) {
    struct AnnotInitData * _result = 0;
    HRESULT _hr = get_AnnotInitData(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AnnotInitDataPtr(_result, false);
}

#pragma implementation_key(8059)
inline TGFrameworkSupport::GostWeldSymbolPtr TGFrameworkSupport::_IGostWeldSymbolsAuto::AddGostWeldSymbol ( struct AnnotInitData * AnnotInitData ) {
    struct GostWeldSymbol * _result = 0;
    HRESULT _hr = raw_AddGostWeldSymbol(AnnotInitData, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return GostWeldSymbolPtr(_result, false);
}

//
// interface _ISymbolicPMIAuto wrapper method implementations
//

#pragma implementation_key(8060)
inline IDispatchPtr TGFrameworkSupport::_ISymbolicPMIAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8061)
inline VARIANT_BOOL TGFrameworkSupport::_ISymbolicPMIAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8062)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_ISymbolicPMIAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(8063)
inline long TGFrameworkSupport::_ISymbolicPMIAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8064)
inline _bstr_t TGFrameworkSupport::_ISymbolicPMIAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8065)
inline IDispatchPtr TGFrameworkSupport::_ISymbolicPMIAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8066)
inline long TGFrameworkSupport::_ISymbolicPMIAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8067)
inline _bstr_t TGFrameworkSupport::_ISymbolicPMIAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8068)
inline IDispatchPtr TGFrameworkSupport::_ISymbolicPMIAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8069)
inline HRESULT TGFrameworkSupport::_ISymbolicPMIAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8070)
inline HRESULT TGFrameworkSupport::_ISymbolicPMIAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8071)
inline HRESULT TGFrameworkSupport::_ISymbolicPMIAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8072)
inline void TGFrameworkSupport::_ISymbolicPMIAuto::PutHidePMI ( VARIANT_BOOL Value ) {
    HRESULT _hr = put_HidePMI(Value);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8073)
inline VARIANT_BOOL TGFrameworkSupport::_ISymbolicPMIAuto::GetHidePMI ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_HidePMI(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// interface _ISymbolicPMIGroupAuto wrapper method implementations
//

#pragma implementation_key(8074)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_ISymbolicPMIGroupAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(8075)
inline long TGFrameworkSupport::_ISymbolicPMIGroupAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8076)
inline IDispatchPtr TGFrameworkSupport::_ISymbolicPMIGroupAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8077)
inline IDispatchPtr TGFrameworkSupport::_ISymbolicPMIGroupAuto::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8078)
inline IUnknownPtr TGFrameworkSupport::_ISymbolicPMIGroupAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

//
// dispinterface Relations2d wrapper method implementations
//

#pragma implementation_key(8079)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::Relations2d::Item ( const _variant_t & Index ) {
    struct Relation2d * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(8080)
inline long TGFrameworkSupport::Relations2d::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8081)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::Relations2d::AddHorizontalAlign ( IDispatch * Object1, long Index1, IDispatch * Object2, long Index2, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    _com_dispatch_method(this, 0x2c4, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0003\x0009\x0003\x080c", Object1, Index1, Object2, Index2, &guaranteed_ok);
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(8082)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::Relations2d::AddVerticalAlign ( IDispatch * Object1, long Index1, IDispatch * Object2, long Index2, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    _com_dispatch_method(this, 0x2c5, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0003\x0009\x0003\x080c", Object1, Index1, Object2, Index2, &guaranteed_ok);
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(8083)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::Relations2d::AddConcentric ( IDispatch * Object1, IDispatch * Object2, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    _com_dispatch_method(this, 0x2c6, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009\x080c", Object1, Object2, &guaranteed_ok);
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(8084)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::Relations2d::AddFix ( IDispatch * Object, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    _com_dispatch_method(this, 0x2c7, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x080c", Object, &guaranteed_ok);
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(8085)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::Relations2d::AddKeypointFix ( IDispatch * Object, long Index, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    _com_dispatch_method(this, 0x2df, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0003\x080c", Object, Index, &guaranteed_ok);
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(8086)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::Relations2d::AddHorizontal ( IDispatch * Object, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    _com_dispatch_method(this, 0x2c8, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x080c", Object, &guaranteed_ok);
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(8087)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::Relations2d::AddVertical ( IDispatch * Object, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    _com_dispatch_method(this, 0x2c9, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x080c", Object, &guaranteed_ok);
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(8088)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::Relations2d::AddParallel ( IDispatch * Object1, IDispatch * Object2, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    _com_dispatch_method(this, 0x2ca, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009\x080c", Object1, Object2, &guaranteed_ok);
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(8089)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::Relations2d::AddPerpendicular ( IDispatch * Object1, IDispatch * Object2, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    _com_dispatch_method(this, 0x2cb, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009\x080c", Object1, Object2, &guaranteed_ok);
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(8090)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::Relations2d::AddTangent ( IDispatch * Object1, IDispatch * Object2, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    _com_dispatch_method(this, 0x2cc, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009\x080c", Object1, Object2, &guaranteed_ok);
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(8091)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::Relations2d::AddEqualDirection ( IDispatch * Object1, long Index1, IDispatch * Object2, long Index2, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    _com_dispatch_method(this, 0x2db, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0003\x0009\x0003\x080c", Object1, Index1, Object2, Index2, &guaranteed_ok);
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(8092)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::Relations2d::AddTangentEqualCurvature ( IDispatch * Object1, long Index1, IDispatch * Object2, long Index2, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    _com_dispatch_method(this, 0x2dc, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0003\x0009\x0003\x080c", Object1, Index1, Object2, Index2, &guaranteed_ok);
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(8093)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::Relations2d::AddEqualDirectionEqualCurvature ( IDispatch * Object1, long Index1, IDispatch * Object2, long Index2, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    _com_dispatch_method(this, 0x2dd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0003\x0009\x0003\x080c", Object1, Index1, Object2, Index2, &guaranteed_ok);
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(8094)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::Relations2d::AddTangentBetweenCompoundCurves ( long NumberElements1, SAFEARRAY * * Elements1, long NumberElements2, SAFEARRAY * * Elements2, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    _com_dispatch_method(this, 0x2da, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x6009\x0003\x6009\x080c", NumberElements1, Elements1, NumberElements2, Elements2, &guaranteed_ok);
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(8095)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::Relations2d::AddIntersection ( IDispatch * Object1, long Index, IDispatch * Object2, IDispatch * Object3, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    _com_dispatch_method(this, 0x2cd, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0003\x0009\x0009\x080c", Object1, Index, Object2, Object3, &guaranteed_ok);
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(8096)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::Relations2d::AddPointOn ( IDispatch * Object1, long Index, IDispatch * Object2, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    _com_dispatch_method(this, 0x2ce, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0003\x0009\x080c", Object1, Index, Object2, &guaranteed_ok);
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(8097)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::Relations2d::AddPointOnCompoundCurve ( IDispatch * Object1, long Index, long NumberElements, SAFEARRAY * * Elements, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    _com_dispatch_method(this, 0x2d9, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0003\x0003\x6009\x080c", Object1, Index, NumberElements, Elements, &guaranteed_ok);
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(8098)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::Relations2d::AddKeypoint ( IDispatch * Object1, long Index1, IDispatch * Object2, long Index2, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    _com_dispatch_method(this, 0x2cf, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0003\x0009\x0003\x080c", Object1, Index1, Object2, Index2, &guaranteed_ok);
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(8099)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::Relations2d::AddSymmetric ( IDispatch * pLine, IDispatch * Object2, IDispatch * Object3, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    _com_dispatch_method(this, 0x2d0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009\x0009\x080c", pLine, Object2, Object3, &guaranteed_ok);
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(8100)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::Relations2d::AddEqual ( IDispatch * Object1, IDispatch * Object2, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    _com_dispatch_method(this, 0x2d1, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009\x080c", Object1, Object2, &guaranteed_ok);
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(8101)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::Relations2d::AddSet ( long NumberElements, SAFEARRAY * * Elements ) {
    struct Relation2d * _result = 0;
    _com_dispatch_method(this, 0x2d2, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x6009", NumberElements, Elements);
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(8102)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::Relations2d::AddColinear ( IDispatch * Object1, IDispatch * Object2, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    _com_dispatch_method(this, 0x2d3, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009\x080c", Object1, Object2, &guaranteed_ok);
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(8103)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::Relations2d::AddFillet ( IDispatch * Object1, long Index1, IDispatch * Arc, long arc_index, IDispatch * Object2, long Index2, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    _com_dispatch_method(this, 0x2d6, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0003\x0009\x0003\x0009\x0003\x080c", Object1, Index1, Arc, arc_index, Object2, Index2, &guaranteed_ok);
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(8104)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::Relations2d::AddLink ( IDispatch * Object1, IDispatch * Object2, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    _com_dispatch_method(this, 0x2d8, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0009\x080c", Object1, Object2, &guaranteed_ok);
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(8105)
inline TGFrameworkSupport::Relation2dPtr TGFrameworkSupport::Relations2d::AddChamfer ( IDispatch * Object1, long Index1, IDispatch * Line, long line_index, IDispatch * Object2, long Index2, const _variant_t & guaranteed_ok ) {
    struct Relation2d * _result = 0;
    _com_dispatch_method(this, 0x2d7, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0003\x0009\x0003\x0009\x0003\x080c", Object1, Index1, Line, line_index, Object2, Index2, &guaranteed_ok);
    return Relation2dPtr(_result, false);
}

#pragma implementation_key(8106)
inline HRESULT TGFrameworkSupport::Relations2d::AddAutoConstraints ( double dist_tol, double angle_tol, long NumElements, SAFEARRAY * * Elements, long NumCnstrTypes, SAFEARRAY * * CnstrTypes, long * NumCnstrs, SAFEARRAY * * Cnstrs, const _variant_t & varXOriginUnk, const _variant_t & varYOriginUnk, const _variant_t & Xdim_pos_x, const _variant_t & Xdim_pos_y, const _variant_t & Ydim_pos_x, const _variant_t & Ydim_pos_y, const _variant_t & DimPlacementOptions, const _variant_t & LinearDimOptions, VARIANT_BOOL PlaceRadiusDimOnCircle, VARIANT_BOOL PlaceRadiusDimOnArc, VARIANT_BOOL PlaceDistanceDimFromCircleCenter ) {
    return _com_dispatch_method(this, 0x2de, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0003\x6009\x0003\x6003\x4003\x6009\x000c\x000c\x000c\x000c\x000c\x000c\x000c\x000c\x000b\x000b\x000b", dist_tol, angle_tol, NumElements, Elements, NumCnstrTypes, CnstrTypes, NumCnstrs, Cnstrs, &varXOriginUnk, &varYOriginUnk, &Xdim_pos_x, &Xdim_pos_y, &Ydim_pos_x, &Ydim_pos_y, &DimPlacementOptions, &LinearDimOptions, PlaceRadiusDimOnCircle, PlaceRadiusDimOnArc, PlaceDistanceDimFromCircleCenter);
}

//
// dispinterface BackDrop wrapper method implementations
//

#pragma implementation_key(8107)
inline long TGFrameworkSupport::BackDrop::GetMarginColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8108)
inline void TGFrameworkSupport::BackDrop::PutMarginColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(8109)
inline void TGFrameworkSupport::BackDrop::PutMarginDisplay ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(8110)
inline VARIANT_BOOL TGFrameworkSupport::BackDrop::GetMarginDisplay ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8111)
inline long TGFrameworkSupport::BackDrop::GetGridColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8112)
inline void TGFrameworkSupport::BackDrop::PutGridColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(8113)
inline enum TGFrameworkSupport::GridTypeConstants TGFrameworkSupport::BackDrop::GetGridType ( ) {
    enum GridTypeConstants _result;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8114)
inline void TGFrameworkSupport::BackDrop::PutGridType ( enum GridTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(8115)
inline void TGFrameworkSupport::BackDrop::PutDynamicGridSpacing ( enum DynamicGridSpacingConstants _arg1 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(8116)
inline enum TGFrameworkSupport::DynamicGridSpacingConstants TGFrameworkSupport::BackDrop::GetDynamicGridSpacing ( ) {
    enum DynamicGridSpacingConstants _result;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8117)
inline double TGFrameworkSupport::BackDrop::GetStaticGridSpacing ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8118)
inline void TGFrameworkSupport::BackDrop::PutStaticGridSpacing ( double _arg1 ) {
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(8119)
inline VARIANT_BOOL TGFrameworkSupport::BackDrop::GetGridDisplay ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8120)
inline void TGFrameworkSupport::BackDrop::PutGridDisplay ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(8121)
inline void TGFrameworkSupport::BackDrop::PutUseCustomSheetColor ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(8122)
inline VARIANT_BOOL TGFrameworkSupport::BackDrop::GetUseCustomSheetColor ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8123)
inline long TGFrameworkSupport::BackDrop::GetCustomSheetColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8124)
inline void TGFrameworkSupport::BackDrop::PutCustomSheetColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(8125)
inline IDispatchPtr TGFrameworkSupport::BackDrop::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8126)
inline VARIANT_BOOL TGFrameworkSupport::BackDrop::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// dispinterface GroupStyle wrapper method implementations
//

#pragma implementation_key(8127)
inline void TGFrameworkSupport::GroupStyle::PutLinearColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(8128)
inline long TGFrameworkSupport::GroupStyle::GetLinearColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8129)
inline double TGFrameworkSupport::GroupStyle::GetWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8130)
inline void TGFrameworkSupport::GroupStyle::PutWidth ( double _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(8131)
inline void TGFrameworkSupport::GroupStyle::PutUnits ( long _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(8132)
inline long TGFrameworkSupport::GroupStyle::GetUnits ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8133)
inline VARIANT_BOOL TGFrameworkSupport::GroupStyle::GetAutoPhase ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8134)
inline void TGFrameworkSupport::GroupStyle::PutAutoPhase ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(8135)
inline long TGFrameworkSupport::GroupStyle::GetDashGapCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8136)
inline double TGFrameworkSupport::GroupStyle::GetDashStrokePercent ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8137)
inline void TGFrameworkSupport::GroupStyle::PutDashStrokePercent ( double _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(8138)
inline void TGFrameworkSupport::GroupStyle::PutLinearName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(8139)
inline _bstr_t TGFrameworkSupport::GroupStyle::GetLinearName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8140)
inline void TGFrameworkSupport::GroupStyle::PutDashName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(8141)
inline _bstr_t TGFrameworkSupport::GroupStyle::GetDashName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8142)
inline HRESULT TGFrameworkSupport::GroupStyle::UseActiveStyle ( long StyleType ) {
    return _com_dispatch_method(this, 0x6001000f, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", StyleType);
}

#pragma implementation_key(8143)
inline HRESULT TGFrameworkSupport::GroupStyle::SetDashGap ( long DashCount, SAFEARRAY * * Dashes ) {
    return _com_dispatch_method(this, 0x60010010, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6005", DashCount, Dashes);
}

#pragma implementation_key(8144)
inline HRESULT TGFrameworkSupport::GroupStyle::GetDashGap ( long DashCount, SAFEARRAY * * Dashes ) {
    return _com_dispatch_method(this, 0x60010011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x6005", DashCount, Dashes);
}

//
// dispinterface DimensionStyles wrapper method implementations
//

#pragma implementation_key(8145)
inline TGFramework::ApplicationPtr TGFrameworkSupport::DimensionStyles::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(8146)
inline long TGFrameworkSupport::DimensionStyles::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8147)
inline IDispatchPtr TGFrameworkSupport::DimensionStyles::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8148)
inline TGFrameworkSupport::DimensionStylePtr TGFrameworkSupport::DimensionStyles::Item ( const _variant_t & Index ) {
    struct DimensionStyle * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return DimensionStylePtr(_result, false);
}

#pragma implementation_key(8149)
inline TGFrameworkSupport::DimensionStylePtr TGFrameworkSupport::DimensionStyles::Add ( _bstr_t Name, _bstr_t Parent ) {
    struct DimensionStyle * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)Parent);
    return DimensionStylePtr(_result, false);
}

#pragma implementation_key(8150)
inline HRESULT TGFrameworkSupport::DimensionStyles::Remove ( _bstr_t Name ) {
    return _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Name);
}

#pragma implementation_key(8151)
inline _bstr_t TGFrameworkSupport::DimensionStyles::GetActive ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8152)
inline void TGFrameworkSupport::DimensionStyles::PutActive ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(8153)
inline HRESULT TGFrameworkSupport::DimensionStyles::AddEx ( _bstr_t Name, VARIANT_BOOL bOverride, IDispatch * pSourceDoc ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x000b\x0009", (BSTR)Name, bOverride, pSourceDoc);
}

#pragma implementation_key(8154)
inline VARIANT_BOOL TGFrameworkSupport::DimensionStyles::IsDimStyleExists ( _bstr_t DimensionStyle ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)DimensionStyle);
    return _result;
}

//
// dispinterface DrawingViewStyle wrapper method implementations
//

#pragma implementation_key(8155)
inline void TGFrameworkSupport::DrawingViewStyle::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(8156)
inline _bstr_t TGFrameworkSupport::DrawingViewStyle::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8157)
inline _bstr_t TGFrameworkSupport::DrawingViewStyle::GetDescription ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8158)
inline void TGFrameworkSupport::DrawingViewStyle::PutDimensionStyle ( struct DimensionStyle * _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(8159)
inline TGFrameworkSupport::DimensionStylePtr TGFrameworkSupport::DrawingViewStyle::GetDimensionStyle ( ) {
    struct DimensionStyle * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DimensionStylePtr(_result, false);
}

#pragma implementation_key(8160)
inline void TGFrameworkSupport::DrawingViewStyle::PutCodeASSuffix ( enum DrawingViewCaptionTypeConstants dvtype, _bstr_t _arg2 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0008", dvtype, (BSTR)_arg2);
}

#pragma implementation_key(8161)
inline _bstr_t TGFrameworkSupport::DrawingViewStyle::GetCodeASSuffix ( enum DrawingViewCaptionTypeConstants dvtype ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x0003", dvtype);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8162)
inline void TGFrameworkSupport::DrawingViewStyle::PutShowCodeASSuffix ( enum DrawingViewCaptionTypeConstants dvtype, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", dvtype, _arg2);
}

#pragma implementation_key(8163)
inline VARIANT_BOOL TGFrameworkSupport::DrawingViewStyle::GetShowCodeASSuffix ( enum DrawingViewCaptionTypeConstants dvtype ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", dvtype);
    return _result;
}

#pragma implementation_key(8164)
inline void TGFrameworkSupport::DrawingViewStyle::PutCodeLNAnnotationSheetNumber ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(8165)
inline _bstr_t TGFrameworkSupport::DrawingViewStyle::GetCodeLNAnnotationSheetNumber ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8166)
inline void TGFrameworkSupport::DrawingViewStyle::PutShowCodeLNAnnotationSheetNumber ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(8167)
inline VARIANT_BOOL TGFrameworkSupport::DrawingViewStyle::GetShowCodeLNAnnotationSheetNumber ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8168)
inline void TGFrameworkSupport::DrawingViewStyle::PutCodeVSViewScale ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(8169)
inline _bstr_t TGFrameworkSupport::DrawingViewStyle::GetCodeVSViewScale ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8170)
inline void TGFrameworkSupport::DrawingViewStyle::PutShowCodeVSViewScale ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(8171)
inline VARIANT_BOOL TGFrameworkSupport::DrawingViewStyle::GetShowCodeVSViewScale ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8172)
inline void TGFrameworkSupport::DrawingViewStyle::PutCodeVNViewSheetNumber ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(8173)
inline _bstr_t TGFrameworkSupport::DrawingViewStyle::GetCodeVNViewSheetNumber ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8174)
inline void TGFrameworkSupport::DrawingViewStyle::PutShowCodeVNViewSheetNumber ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(8175)
inline VARIANT_BOOL TGFrameworkSupport::DrawingViewStyle::GetShowCodeVNViewSheetNumber ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8176)
inline void TGFrameworkSupport::DrawingViewStyle::PutCodeVRViewRotationAngle ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(8177)
inline _bstr_t TGFrameworkSupport::DrawingViewStyle::GetCodeVRViewRotationAngle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8178)
inline void TGFrameworkSupport::DrawingViewStyle::PutShowCodeVRViewRotationAngle ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(8179)
inline VARIANT_BOOL TGFrameworkSupport::DrawingViewStyle::GetShowCodeVRViewRotationAngle ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8180)
inline void TGFrameworkSupport::DrawingViewStyle::PutCaptionPrimary ( enum DrawingViewCaptionTypeConstants dvtype, _bstr_t _arg2 ) {
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0008", dvtype, (BSTR)_arg2);
}

#pragma implementation_key(8181)
inline _bstr_t TGFrameworkSupport::DrawingViewStyle::GetCaptionPrimary ( enum DrawingViewCaptionTypeConstants dvtype ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x0003", dvtype);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8182)
inline void TGFrameworkSupport::DrawingViewStyle::PutCaptionSecondary ( enum DrawingViewCaptionTypeConstants dvtype, _bstr_t _arg2 ) {
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0008", dvtype, (BSTR)_arg2);
}

#pragma implementation_key(8183)
inline _bstr_t TGFrameworkSupport::DrawingViewStyle::GetCaptionSecondary ( enum DrawingViewCaptionTypeConstants dvtype ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x0003", dvtype);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8184)
inline void TGFrameworkSupport::DrawingViewStyle::PutShowPrimaryCaption ( enum DrawingViewCaptionTypeConstants dvtype, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", dvtype, _arg2);
}

#pragma implementation_key(8185)
inline VARIANT_BOOL TGFrameworkSupport::DrawingViewStyle::GetShowPrimaryCaption ( enum DrawingViewCaptionTypeConstants dvtype ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", dvtype);
    return _result;
}

#pragma implementation_key(8186)
inline void TGFrameworkSupport::DrawingViewStyle::PutShowSecondaryCaption ( enum DrawingViewCaptionTypeConstants dvtype, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", dvtype, _arg2);
}

#pragma implementation_key(8187)
inline VARIANT_BOOL TGFrameworkSupport::DrawingViewStyle::GetShowSecondaryCaption ( enum DrawingViewCaptionTypeConstants dvtype ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", dvtype);
    return _result;
}

#pragma implementation_key(8188)
inline void TGFrameworkSupport::DrawingViewStyle::PutCaptionAnnotation ( enum DrawingViewAnnotationTypeConstants dvtype, _bstr_t _arg2 ) {
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0008", dvtype, (BSTR)_arg2);
}

#pragma implementation_key(8189)
inline _bstr_t TGFrameworkSupport::DrawingViewStyle::GetCaptionAnnotation ( enum DrawingViewAnnotationTypeConstants dvtype ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x0003", dvtype);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8190)
inline void TGFrameworkSupport::DrawingViewStyle::PutShowAnnotationCaption ( enum DrawingViewAnnotationTypeConstants dvtype, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", dvtype, _arg2);
}

#pragma implementation_key(8191)
inline VARIANT_BOOL TGFrameworkSupport::DrawingViewStyle::GetShowAnnotationCaption ( enum DrawingViewAnnotationTypeConstants dvtype ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", dvtype);
    return _result;
}

#pragma implementation_key(8192)
inline void TGFrameworkSupport::DrawingViewStyle::PutPrimaryCaptionFont ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(8193)
inline _bstr_t TGFrameworkSupport::DrawingViewStyle::GetPrimaryCaptionFont ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8194)
inline void TGFrameworkSupport::DrawingViewStyle::PutPrimaryCaptionFontStyle ( enum DimTextFontStyleConstants _arg1 ) {
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(8195)
inline enum TGFrameworkSupport::DimTextFontStyleConstants TGFrameworkSupport::DrawingViewStyle::GetPrimaryCaptionFontStyle ( ) {
    enum DimTextFontStyleConstants _result;
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8196)
inline void TGFrameworkSupport::DrawingViewStyle::PutPrimaryCaptionColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(8197)
inline long TGFrameworkSupport::DrawingViewStyle::GetPrimaryCaptionColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8198)
inline void TGFrameworkSupport::DrawingViewStyle::PutPrimaryCaptionTextSize ( double _arg1 ) {
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(8199)
inline double TGFrameworkSupport::DrawingViewStyle::GetPrimaryCaptionTextSize ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8200)
inline void TGFrameworkSupport::DrawingViewStyle::PutPrimaryCaptionTextAutoFillBackground ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(8201)
inline VARIANT_BOOL TGFrameworkSupport::DrawingViewStyle::GetPrimaryCaptionTextAutoFillBackground ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8202)
inline void TGFrameworkSupport::DrawingViewStyle::PutPrimaryCaptionTextAlignment ( enum DrawingViewCaptionTextAlignment _arg1 ) {
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(8203)
inline enum TGFrameworkSupport::DrawingViewCaptionTextAlignment TGFrameworkSupport::DrawingViewStyle::GetPrimaryCaptionTextAlignment ( ) {
    enum DrawingViewCaptionTextAlignment _result;
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8204)
inline void TGFrameworkSupport::DrawingViewStyle::PutSecondaryCaptionFont ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(8205)
inline _bstr_t TGFrameworkSupport::DrawingViewStyle::GetSecondaryCaptionFont ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8206)
inline void TGFrameworkSupport::DrawingViewStyle::PutSecondaryCaptionFontStyle ( enum DimTextFontStyleConstants _arg1 ) {
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(8207)
inline enum TGFrameworkSupport::DimTextFontStyleConstants TGFrameworkSupport::DrawingViewStyle::GetSecondaryCaptionFontStyle ( ) {
    enum DimTextFontStyleConstants _result;
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8208)
inline void TGFrameworkSupport::DrawingViewStyle::PutSecondaryCaptionColor ( long _arg1 ) {
    _com_dispatch_method(this, 0x1c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(8209)
inline long TGFrameworkSupport::DrawingViewStyle::GetSecondaryCaptionColor ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8210)
inline void TGFrameworkSupport::DrawingViewStyle::PutSecondaryCaptionTextSize ( double _arg1 ) {
    _com_dispatch_method(this, 0x1d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(8211)
inline double TGFrameworkSupport::DrawingViewStyle::GetSecondaryCaptionTextSize ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x1d, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8212)
inline void TGFrameworkSupport::DrawingViewStyle::PutSecondaryCaptionTextAutoFillBackground ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(8213)
inline VARIANT_BOOL TGFrameworkSupport::DrawingViewStyle::GetSecondaryCaptionTextAutoFillBackground ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8214)
inline void TGFrameworkSupport::DrawingViewStyle::PutSecondaryCaptionTextAlignment ( enum DrawingViewCaptionTextAlignment _arg1 ) {
    _com_dispatch_method(this, 0x1f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(8215)
inline enum TGFrameworkSupport::DrawingViewCaptionTextAlignment TGFrameworkSupport::DrawingViewStyle::GetSecondaryCaptionTextAlignment ( ) {
    enum DrawingViewCaptionTextAlignment _result;
    _com_dispatch_method(this, 0x1f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8216)
inline void TGFrameworkSupport::DrawingViewStyle::PutShowPrimarySecondayCaptionSeparator ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x20, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(8217)
inline VARIANT_BOOL TGFrameworkSupport::DrawingViewStyle::GetShowPrimarySecondayCaptionSeparator ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x20, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8218)
inline void TGFrameworkSupport::DrawingViewStyle::PutViewCaptionLocation ( enum DimViewCaptionLocationConstants _arg1 ) {
    _com_dispatch_method(this, 0x21, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(8219)
inline enum TGFrameworkSupport::DimViewCaptionLocationConstants TGFrameworkSupport::DrawingViewStyle::GetViewCaptionLocation ( ) {
    enum DimViewCaptionLocationConstants _result;
    _com_dispatch_method(this, 0x21, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8220)
inline void TGFrameworkSupport::DrawingViewStyle::PutCPLCaptionLocation ( enum DimViewCPLCaptionLocationConstants _arg1 ) {
    _com_dispatch_method(this, 0x22, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(8221)
inline enum TGFrameworkSupport::DimViewCPLCaptionLocationConstants TGFrameworkSupport::DrawingViewStyle::GetCPLCaptionLocation ( ) {
    enum DimViewCPLCaptionLocationConstants _result;
    _com_dispatch_method(this, 0x22, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8222)
inline void TGFrameworkSupport::DrawingViewStyle::PutVPLCaptionAtEnd ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x23, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(8223)
inline VARIANT_BOOL TGFrameworkSupport::DrawingViewStyle::GetVPLCaptionAtEnd ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x23, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8224)
inline void TGFrameworkSupport::DrawingViewStyle::PutViewSheetNumberLocation ( enum DrawingViewStyleSheetNumberLocationConstants _arg1 ) {
    _com_dispatch_method(this, 0x24, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(8225)
inline enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants TGFrameworkSupport::DrawingViewStyle::GetViewSheetNumberLocation ( ) {
    enum DrawingViewStyleSheetNumberLocationConstants _result;
    _com_dispatch_method(this, 0x24, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8226)
inline void TGFrameworkSupport::DrawingViewStyle::PutViewBorderLineType ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x25, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(8227)
inline _bstr_t TGFrameworkSupport::DrawingViewStyle::GetViewBorderLineType ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x25, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8228)
inline void TGFrameworkSupport::DrawingViewStyle::PutViewBorderLineWidth ( double _arg1 ) {
    _com_dispatch_method(this, 0x26, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(8229)
inline double TGFrameworkSupport::DrawingViewStyle::GetViewBorderLineWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x26, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8230)
inline void TGFrameworkSupport::DrawingViewStyle::PutViewAnnotationLineType ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x27, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(8231)
inline _bstr_t TGFrameworkSupport::DrawingViewStyle::GetViewAnnotationLineType ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x27, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8232)
inline void TGFrameworkSupport::DrawingViewStyle::PutViewAnnotationLineWidth ( double _arg1 ) {
    _com_dispatch_method(this, 0x28, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(8233)
inline double TGFrameworkSupport::DrawingViewStyle::GetViewAnnotationLineWidth ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x28, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8234)
inline void TGFrameworkSupport::DrawingViewStyle::PutTerminatorDisplay ( enum DimTermDisplayTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x29, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(8235)
inline enum TGFrameworkSupport::DimTermDisplayTypeConstants TGFrameworkSupport::DrawingViewStyle::GetTerminatorDisplay ( ) {
    enum DimTermDisplayTypeConstants _result;
    _com_dispatch_method(this, 0x29, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8236)
inline void TGFrameworkSupport::DrawingViewStyle::PutTerminatorType ( enum DimTermTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x2a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(8237)
inline enum TGFrameworkSupport::DimTermTypeConstants TGFrameworkSupport::DrawingViewStyle::GetTerminatorType ( ) {
    enum DimTermTypeConstants _result;
    _com_dispatch_method(this, 0x2a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8238)
inline void TGFrameworkSupport::DrawingViewStyle::PutTerminatorSize ( double _arg1 ) {
    _com_dispatch_method(this, 0x2b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(8239)
inline double TGFrameworkSupport::DrawingViewStyle::GetTerminatorSize ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x2b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8240)
inline void TGFrameworkSupport::DrawingViewStyle::PutThinTerminatorLines ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x2c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(8241)
inline VARIANT_BOOL TGFrameworkSupport::DrawingViewStyle::GetThinTerminatorLines ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x2c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8242)
inline void TGFrameworkSupport::DrawingViewStyle::PutCuttingPlaneLineDisplay ( enum DimViewCuttingPlaneDisplayTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x2d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(8243)
inline enum TGFrameworkSupport::DimViewCuttingPlaneDisplayTypeConstants TGFrameworkSupport::DrawingViewStyle::GetCuttingPlaneLineDisplay ( ) {
    enum DimViewCuttingPlaneDisplayTypeConstants _result;
    _com_dispatch_method(this, 0x2d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8244)
inline void TGFrameworkSupport::DrawingViewStyle::PutCuttingPlaneLineDisplayStyle ( enum CuttingPlaneLineDisplayStyleConstants _arg1 ) {
    _com_dispatch_method(this, 0x2e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(8245)
inline enum TGFrameworkSupport::CuttingPlaneLineDisplayStyleConstants TGFrameworkSupport::DrawingViewStyle::GetCuttingPlaneLineDisplayStyle ( ) {
    enum CuttingPlaneLineDisplayStyleConstants _result;
    _com_dispatch_method(this, 0x2e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8246)
inline void TGFrameworkSupport::DrawingViewStyle::PutThickLineLengthRatio ( double _arg1 ) {
    _com_dispatch_method(this, 0x2f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(8247)
inline double TGFrameworkSupport::DrawingViewStyle::GetThickLineLengthRatio ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x2f, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8248)
inline void TGFrameworkSupport::DrawingViewStyle::PutCuttingPlaneLineArrowOffset ( double _arg1 ) {
    _com_dispatch_method(this, 0x30, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(8249)
inline double TGFrameworkSupport::DrawingViewStyle::GetCuttingPlaneLineArrowOffset ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x30, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8250)
inline void TGFrameworkSupport::DrawingViewStyle::PutViewPlaneLineDisplay ( enum DimViewPlaneDisplayTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0x31, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(8251)
inline enum TGFrameworkSupport::DimViewPlaneDisplayTypeConstants TGFrameworkSupport::DrawingViewStyle::GetViewPlaneLineDisplay ( ) {
    enum DimViewPlaneDisplayTypeConstants _result;
    _com_dispatch_method(this, 0x31, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8252)
inline void TGFrameworkSupport::DrawingViewStyle::PutParent ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x32, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(8253)
inline _bstr_t TGFrameworkSupport::DrawingViewStyle::GetParent ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x32, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8254)
inline IDispatchPtr TGFrameworkSupport::DrawingViewStyle::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8255)
inline VARIANT_BOOL TGFrameworkSupport::DrawingViewStyle::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _IDrawingViewStyleAuto wrapper method implementations
//

#pragma implementation_key(8256)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8257)
inline _bstr_t TGFrameworkSupport::_IDrawingViewStyleAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8258)
inline _bstr_t TGFrameworkSupport::_IDrawingViewStyleAuto::GetDescription ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Description(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8259)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutDimensionStyle ( struct DimensionStyle * ppObj ) {
    HRESULT _hr = put_DimensionStyle(ppObj);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8260)
inline TGFrameworkSupport::DimensionStylePtr TGFrameworkSupport::_IDrawingViewStyleAuto::GetDimensionStyle ( ) {
    struct DimensionStyle * _result = 0;
    HRESULT _hr = get_DimensionStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionStylePtr(_result, false);
}

#pragma implementation_key(8261)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutCodeASSuffix ( enum DrawingViewCaptionTypeConstants dvtype, _bstr_t caption ) {
    HRESULT _hr = put_CodeASSuffix(dvtype, caption);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8262)
inline _bstr_t TGFrameworkSupport::_IDrawingViewStyleAuto::GetCodeASSuffix ( enum DrawingViewCaptionTypeConstants dvtype ) {
    BSTR _result = 0;
    HRESULT _hr = get_CodeASSuffix(dvtype, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8263)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutShowCodeASSuffix ( enum DrawingViewCaptionTypeConstants dvtype, VARIANT_BOOL Show ) {
    HRESULT _hr = put_ShowCodeASSuffix(dvtype, Show);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8264)
inline VARIANT_BOOL TGFrameworkSupport::_IDrawingViewStyleAuto::GetShowCodeASSuffix ( enum DrawingViewCaptionTypeConstants dvtype ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowCodeASSuffix(dvtype, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8265)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutCodeLNAnnotationSheetNumber ( _bstr_t caption ) {
    HRESULT _hr = put_CodeLNAnnotationSheetNumber(caption);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8266)
inline _bstr_t TGFrameworkSupport::_IDrawingViewStyleAuto::GetCodeLNAnnotationSheetNumber ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CodeLNAnnotationSheetNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8267)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutShowCodeLNAnnotationSheetNumber ( VARIANT_BOOL Show ) {
    HRESULT _hr = put_ShowCodeLNAnnotationSheetNumber(Show);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8268)
inline VARIANT_BOOL TGFrameworkSupport::_IDrawingViewStyleAuto::GetShowCodeLNAnnotationSheetNumber ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowCodeLNAnnotationSheetNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8269)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutCodeVSViewScale ( _bstr_t caption ) {
    HRESULT _hr = put_CodeVSViewScale(caption);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8270)
inline _bstr_t TGFrameworkSupport::_IDrawingViewStyleAuto::GetCodeVSViewScale ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CodeVSViewScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8271)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutShowCodeVSViewScale ( VARIANT_BOOL Show ) {
    HRESULT _hr = put_ShowCodeVSViewScale(Show);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8272)
inline VARIANT_BOOL TGFrameworkSupport::_IDrawingViewStyleAuto::GetShowCodeVSViewScale ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowCodeVSViewScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8273)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutCodeVNViewSheetNumber ( _bstr_t caption ) {
    HRESULT _hr = put_CodeVNViewSheetNumber(caption);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8274)
inline _bstr_t TGFrameworkSupport::_IDrawingViewStyleAuto::GetCodeVNViewSheetNumber ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CodeVNViewSheetNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8275)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutShowCodeVNViewSheetNumber ( VARIANT_BOOL Show ) {
    HRESULT _hr = put_ShowCodeVNViewSheetNumber(Show);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8276)
inline VARIANT_BOOL TGFrameworkSupport::_IDrawingViewStyleAuto::GetShowCodeVNViewSheetNumber ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowCodeVNViewSheetNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8277)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutCodeVRViewRotationAngle ( _bstr_t caption ) {
    HRESULT _hr = put_CodeVRViewRotationAngle(caption);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8278)
inline _bstr_t TGFrameworkSupport::_IDrawingViewStyleAuto::GetCodeVRViewRotationAngle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CodeVRViewRotationAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8279)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutShowCodeVRViewRotationAngle ( VARIANT_BOOL Show ) {
    HRESULT _hr = put_ShowCodeVRViewRotationAngle(Show);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8280)
inline VARIANT_BOOL TGFrameworkSupport::_IDrawingViewStyleAuto::GetShowCodeVRViewRotationAngle ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowCodeVRViewRotationAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8281)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutCaptionPrimary ( enum DrawingViewCaptionTypeConstants dvtype, _bstr_t caption ) {
    HRESULT _hr = put_CaptionPrimary(dvtype, caption);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8282)
inline _bstr_t TGFrameworkSupport::_IDrawingViewStyleAuto::GetCaptionPrimary ( enum DrawingViewCaptionTypeConstants dvtype ) {
    BSTR _result = 0;
    HRESULT _hr = get_CaptionPrimary(dvtype, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8283)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutCaptionSecondary ( enum DrawingViewCaptionTypeConstants dvtype, _bstr_t caption ) {
    HRESULT _hr = put_CaptionSecondary(dvtype, caption);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8284)
inline _bstr_t TGFrameworkSupport::_IDrawingViewStyleAuto::GetCaptionSecondary ( enum DrawingViewCaptionTypeConstants dvtype ) {
    BSTR _result = 0;
    HRESULT _hr = get_CaptionSecondary(dvtype, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8285)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutShowPrimaryCaption ( enum DrawingViewCaptionTypeConstants dvtype, VARIANT_BOOL Show ) {
    HRESULT _hr = put_ShowPrimaryCaption(dvtype, Show);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8286)
inline VARIANT_BOOL TGFrameworkSupport::_IDrawingViewStyleAuto::GetShowPrimaryCaption ( enum DrawingViewCaptionTypeConstants dvtype ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowPrimaryCaption(dvtype, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8287)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutShowSecondaryCaption ( enum DrawingViewCaptionTypeConstants dvtype, VARIANT_BOOL Show ) {
    HRESULT _hr = put_ShowSecondaryCaption(dvtype, Show);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8288)
inline VARIANT_BOOL TGFrameworkSupport::_IDrawingViewStyleAuto::GetShowSecondaryCaption ( enum DrawingViewCaptionTypeConstants dvtype ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowSecondaryCaption(dvtype, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8289)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutCaptionAnnotation ( enum DrawingViewAnnotationTypeConstants dvtype, _bstr_t caption ) {
    HRESULT _hr = put_CaptionAnnotation(dvtype, caption);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8290)
inline _bstr_t TGFrameworkSupport::_IDrawingViewStyleAuto::GetCaptionAnnotation ( enum DrawingViewAnnotationTypeConstants dvtype ) {
    BSTR _result = 0;
    HRESULT _hr = get_CaptionAnnotation(dvtype, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8291)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutShowAnnotationCaption ( enum DrawingViewAnnotationTypeConstants dvtype, VARIANT_BOOL Show ) {
    HRESULT _hr = put_ShowAnnotationCaption(dvtype, Show);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8292)
inline VARIANT_BOOL TGFrameworkSupport::_IDrawingViewStyleAuto::GetShowAnnotationCaption ( enum DrawingViewAnnotationTypeConstants dvtype ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowAnnotationCaption(dvtype, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8293)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutPrimaryCaptionFont ( _bstr_t FontName ) {
    HRESULT _hr = put_PrimaryCaptionFont(FontName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8294)
inline _bstr_t TGFrameworkSupport::_IDrawingViewStyleAuto::GetPrimaryCaptionFont ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PrimaryCaptionFont(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8295)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutPrimaryCaptionFontStyle ( enum DimTextFontStyleConstants val ) {
    HRESULT _hr = put_PrimaryCaptionFontStyle(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8296)
inline enum TGFrameworkSupport::DimTextFontStyleConstants TGFrameworkSupport::_IDrawingViewStyleAuto::GetPrimaryCaptionFontStyle ( ) {
    enum DimTextFontStyleConstants _result;
    HRESULT _hr = get_PrimaryCaptionFontStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8297)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutPrimaryCaptionColor ( long val ) {
    HRESULT _hr = put_PrimaryCaptionColor(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8298)
inline long TGFrameworkSupport::_IDrawingViewStyleAuto::GetPrimaryCaptionColor ( ) {
    long _result = 0;
    HRESULT _hr = get_PrimaryCaptionColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8299)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutPrimaryCaptionTextSize ( double val ) {
    HRESULT _hr = put_PrimaryCaptionTextSize(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8300)
inline double TGFrameworkSupport::_IDrawingViewStyleAuto::GetPrimaryCaptionTextSize ( ) {
    double _result = 0;
    HRESULT _hr = get_PrimaryCaptionTextSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8301)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutPrimaryCaptionTextAutoFillBackground ( VARIANT_BOOL val ) {
    HRESULT _hr = put_PrimaryCaptionTextAutoFillBackground(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8302)
inline VARIANT_BOOL TGFrameworkSupport::_IDrawingViewStyleAuto::GetPrimaryCaptionTextAutoFillBackground ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_PrimaryCaptionTextAutoFillBackground(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8303)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutPrimaryCaptionTextAlignment ( enum DrawingViewCaptionTextAlignment val ) {
    HRESULT _hr = put_PrimaryCaptionTextAlignment(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8304)
inline enum TGFrameworkSupport::DrawingViewCaptionTextAlignment TGFrameworkSupport::_IDrawingViewStyleAuto::GetPrimaryCaptionTextAlignment ( ) {
    enum DrawingViewCaptionTextAlignment _result;
    HRESULT _hr = get_PrimaryCaptionTextAlignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8305)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutSecondaryCaptionFont ( _bstr_t FontName ) {
    HRESULT _hr = put_SecondaryCaptionFont(FontName);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8306)
inline _bstr_t TGFrameworkSupport::_IDrawingViewStyleAuto::GetSecondaryCaptionFont ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SecondaryCaptionFont(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8307)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutSecondaryCaptionFontStyle ( enum DimTextFontStyleConstants val ) {
    HRESULT _hr = put_SecondaryCaptionFontStyle(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8308)
inline enum TGFrameworkSupport::DimTextFontStyleConstants TGFrameworkSupport::_IDrawingViewStyleAuto::GetSecondaryCaptionFontStyle ( ) {
    enum DimTextFontStyleConstants _result;
    HRESULT _hr = get_SecondaryCaptionFontStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8309)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutSecondaryCaptionColor ( long val ) {
    HRESULT _hr = put_SecondaryCaptionColor(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8310)
inline long TGFrameworkSupport::_IDrawingViewStyleAuto::GetSecondaryCaptionColor ( ) {
    long _result = 0;
    HRESULT _hr = get_SecondaryCaptionColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8311)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutSecondaryCaptionTextSize ( double val ) {
    HRESULT _hr = put_SecondaryCaptionTextSize(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8312)
inline double TGFrameworkSupport::_IDrawingViewStyleAuto::GetSecondaryCaptionTextSize ( ) {
    double _result = 0;
    HRESULT _hr = get_SecondaryCaptionTextSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8313)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutSecondaryCaptionTextAutoFillBackground ( VARIANT_BOOL val ) {
    HRESULT _hr = put_SecondaryCaptionTextAutoFillBackground(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8314)
inline VARIANT_BOOL TGFrameworkSupport::_IDrawingViewStyleAuto::GetSecondaryCaptionTextAutoFillBackground ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_SecondaryCaptionTextAutoFillBackground(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8315)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutSecondaryCaptionTextAlignment ( enum DrawingViewCaptionTextAlignment val ) {
    HRESULT _hr = put_SecondaryCaptionTextAlignment(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8316)
inline enum TGFrameworkSupport::DrawingViewCaptionTextAlignment TGFrameworkSupport::_IDrawingViewStyleAuto::GetSecondaryCaptionTextAlignment ( ) {
    enum DrawingViewCaptionTextAlignment _result;
    HRESULT _hr = get_SecondaryCaptionTextAlignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8317)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutShowPrimarySecondayCaptionSeparator ( VARIANT_BOOL val ) {
    HRESULT _hr = put_ShowPrimarySecondayCaptionSeparator(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8318)
inline VARIANT_BOOL TGFrameworkSupport::_IDrawingViewStyleAuto::GetShowPrimarySecondayCaptionSeparator ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ShowPrimarySecondayCaptionSeparator(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8319)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutViewCaptionLocation ( enum DimViewCaptionLocationConstants val ) {
    HRESULT _hr = put_ViewCaptionLocation(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8320)
inline enum TGFrameworkSupport::DimViewCaptionLocationConstants TGFrameworkSupport::_IDrawingViewStyleAuto::GetViewCaptionLocation ( ) {
    enum DimViewCaptionLocationConstants _result;
    HRESULT _hr = get_ViewCaptionLocation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8321)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutCPLCaptionLocation ( enum DimViewCPLCaptionLocationConstants val ) {
    HRESULT _hr = put_CPLCaptionLocation(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8322)
inline enum TGFrameworkSupport::DimViewCPLCaptionLocationConstants TGFrameworkSupport::_IDrawingViewStyleAuto::GetCPLCaptionLocation ( ) {
    enum DimViewCPLCaptionLocationConstants _result;
    HRESULT _hr = get_CPLCaptionLocation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8323)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutVPLCaptionAtEnd ( VARIANT_BOOL val ) {
    HRESULT _hr = put_VPLCaptionAtEnd(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8324)
inline VARIANT_BOOL TGFrameworkSupport::_IDrawingViewStyleAuto::GetVPLCaptionAtEnd ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_VPLCaptionAtEnd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8325)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutViewSheetNumberLocation ( enum DrawingViewStyleSheetNumberLocationConstants val ) {
    HRESULT _hr = put_ViewSheetNumberLocation(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8326)
inline enum TGFrameworkSupport::DrawingViewStyleSheetNumberLocationConstants TGFrameworkSupport::_IDrawingViewStyleAuto::GetViewSheetNumberLocation ( ) {
    enum DrawingViewStyleSheetNumberLocationConstants _result;
    HRESULT _hr = get_ViewSheetNumberLocation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8327)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutViewBorderLineType ( _bstr_t val ) {
    HRESULT _hr = put_ViewBorderLineType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8328)
inline _bstr_t TGFrameworkSupport::_IDrawingViewStyleAuto::GetViewBorderLineType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ViewBorderLineType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8329)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutViewBorderLineWidth ( double val ) {
    HRESULT _hr = put_ViewBorderLineWidth(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8330)
inline double TGFrameworkSupport::_IDrawingViewStyleAuto::GetViewBorderLineWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_ViewBorderLineWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8331)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutViewAnnotationLineType ( _bstr_t val ) {
    HRESULT _hr = put_ViewAnnotationLineType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8332)
inline _bstr_t TGFrameworkSupport::_IDrawingViewStyleAuto::GetViewAnnotationLineType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ViewAnnotationLineType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8333)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutViewAnnotationLineWidth ( double val ) {
    HRESULT _hr = put_ViewAnnotationLineWidth(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8334)
inline double TGFrameworkSupport::_IDrawingViewStyleAuto::GetViewAnnotationLineWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_ViewAnnotationLineWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8335)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutTerminatorDisplay ( enum DimTermDisplayTypeConstants val ) {
    HRESULT _hr = put_TerminatorDisplay(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8336)
inline enum TGFrameworkSupport::DimTermDisplayTypeConstants TGFrameworkSupport::_IDrawingViewStyleAuto::GetTerminatorDisplay ( ) {
    enum DimTermDisplayTypeConstants _result;
    HRESULT _hr = get_TerminatorDisplay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8337)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutTerminatorType ( enum DimTermTypeConstants val ) {
    HRESULT _hr = put_TerminatorType(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8338)
inline enum TGFrameworkSupport::DimTermTypeConstants TGFrameworkSupport::_IDrawingViewStyleAuto::GetTerminatorType ( ) {
    enum DimTermTypeConstants _result;
    HRESULT _hr = get_TerminatorType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8339)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutTerminatorSize ( double val ) {
    HRESULT _hr = put_TerminatorSize(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8340)
inline double TGFrameworkSupport::_IDrawingViewStyleAuto::GetTerminatorSize ( ) {
    double _result = 0;
    HRESULT _hr = get_TerminatorSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8341)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutThinTerminatorLines ( VARIANT_BOOL val ) {
    HRESULT _hr = put_ThinTerminatorLines(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8342)
inline VARIANT_BOOL TGFrameworkSupport::_IDrawingViewStyleAuto::GetThinTerminatorLines ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_ThinTerminatorLines(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8343)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutCuttingPlaneLineDisplay ( enum DimViewCuttingPlaneDisplayTypeConstants val ) {
    HRESULT _hr = put_CuttingPlaneLineDisplay(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8344)
inline enum TGFrameworkSupport::DimViewCuttingPlaneDisplayTypeConstants TGFrameworkSupport::_IDrawingViewStyleAuto::GetCuttingPlaneLineDisplay ( ) {
    enum DimViewCuttingPlaneDisplayTypeConstants _result;
    HRESULT _hr = get_CuttingPlaneLineDisplay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8345)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutCuttingPlaneLineDisplayStyle ( enum CuttingPlaneLineDisplayStyleConstants val ) {
    HRESULT _hr = put_CuttingPlaneLineDisplayStyle(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8346)
inline enum TGFrameworkSupport::CuttingPlaneLineDisplayStyleConstants TGFrameworkSupport::_IDrawingViewStyleAuto::GetCuttingPlaneLineDisplayStyle ( ) {
    enum CuttingPlaneLineDisplayStyleConstants _result;
    HRESULT _hr = get_CuttingPlaneLineDisplayStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8347)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutThickLineLengthRatio ( double val ) {
    HRESULT _hr = put_ThickLineLengthRatio(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8348)
inline double TGFrameworkSupport::_IDrawingViewStyleAuto::GetThickLineLengthRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_ThickLineLengthRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8349)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutCuttingPlaneLineArrowOffset ( double val ) {
    HRESULT _hr = put_CuttingPlaneLineArrowOffset(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8350)
inline double TGFrameworkSupport::_IDrawingViewStyleAuto::GetCuttingPlaneLineArrowOffset ( ) {
    double _result = 0;
    HRESULT _hr = get_CuttingPlaneLineArrowOffset(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8351)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutViewPlaneLineDisplay ( enum DimViewPlaneDisplayTypeConstants val ) {
    HRESULT _hr = put_ViewPlaneLineDisplay(val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8352)
inline enum TGFrameworkSupport::DimViewPlaneDisplayTypeConstants TGFrameworkSupport::_IDrawingViewStyleAuto::GetViewPlaneLineDisplay ( ) {
    enum DimViewPlaneDisplayTypeConstants _result;
    HRESULT _hr = get_ViewPlaneLineDisplay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8353)
inline void TGFrameworkSupport::_IDrawingViewStyleAuto::PutParent ( _bstr_t Parent ) {
    HRESULT _hr = put_Parent(Parent);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8354)
inline _bstr_t TGFrameworkSupport::_IDrawingViewStyleAuto::GetParent ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8355)
inline IDispatchPtr TGFrameworkSupport::_IDrawingViewStyleAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8356)
inline VARIANT_BOOL TGFrameworkSupport::_IDrawingViewStyleAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface DrawingViewStyles wrapper method implementations
//

#pragma implementation_key(8357)
inline _bstr_t TGFrameworkSupport::DrawingViewStyles::GetActive ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8358)
inline void TGFrameworkSupport::DrawingViewStyles::PutActive ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(8359)
inline TGFrameworkSupport::DrawingViewStylePtr TGFrameworkSupport::DrawingViewStyles::Add ( _bstr_t Name, _bstr_t Parent ) {
    struct DrawingViewStyle * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)Parent);
    return DrawingViewStylePtr(_result, false);
}

#pragma implementation_key(8360)
inline TGFramework::ApplicationPtr TGFrameworkSupport::DrawingViewStyles::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(8361)
inline long TGFrameworkSupport::DrawingViewStyles::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8362)
inline IDispatchPtr TGFrameworkSupport::DrawingViewStyles::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8363)
inline TGFrameworkSupport::DrawingViewStylePtr TGFrameworkSupport::DrawingViewStyles::Item ( const _variant_t & Index ) {
    struct DrawingViewStyle * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return DrawingViewStylePtr(_result, false);
}

#pragma implementation_key(8364)
inline HRESULT TGFrameworkSupport::DrawingViewStyles::Remove ( _bstr_t Name ) {
    return _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Name);
}

//
// interface _IDrawingViewStylesAuto wrapper method implementations
//

#pragma implementation_key(8365)
inline _bstr_t TGFrameworkSupport::_IDrawingViewStylesAuto::GetActive ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Active(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8366)
inline void TGFrameworkSupport::_IDrawingViewStylesAuto::PutActive ( _bstr_t Name ) {
    HRESULT _hr = put_Active(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8367)
inline TGFrameworkSupport::DrawingViewStylePtr TGFrameworkSupport::_IDrawingViewStylesAuto::Add ( _bstr_t Name, _bstr_t Parent ) {
    struct DrawingViewStyle * _result = 0;
    HRESULT _hr = raw_Add(Name, Parent, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewStylePtr(_result, false);
}

#pragma implementation_key(8368)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IDrawingViewStylesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(8369)
inline long TGFrameworkSupport::_IDrawingViewStylesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8370)
inline IDispatchPtr TGFrameworkSupport::_IDrawingViewStylesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8371)
inline TGFrameworkSupport::DrawingViewStylePtr TGFrameworkSupport::_IDrawingViewStylesAuto::Item ( const _variant_t & Index ) {
    struct DrawingViewStyle * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DrawingViewStylePtr(_result, false);
}

#pragma implementation_key(8372)
inline HRESULT TGFrameworkSupport::_IDrawingViewStylesAuto::Remove ( _bstr_t Name ) {
    HRESULT _hr = raw_Remove(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8373)
inline IUnknownPtr TGFrameworkSupport::_IDrawingViewStylesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

//
// dispinterface FeatureControlFrameDataSets wrapper method implementations
//

#pragma implementation_key(8374)
inline TGFramework::ApplicationPtr TGFrameworkSupport::FeatureControlFrameDataSets::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(8375)
inline long TGFrameworkSupport::FeatureControlFrameDataSets::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8376)
inline IDispatchPtr TGFrameworkSupport::FeatureControlFrameDataSets::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8377)
inline TGFrameworkSupport::FeatureControlFrameDataSetPtr TGFrameworkSupport::FeatureControlFrameDataSets::Item ( const _variant_t & Index ) {
    struct FeatureControlFrameDataSet * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return FeatureControlFrameDataSetPtr(_result, false);
}

#pragma implementation_key(8378)
inline TGFrameworkSupport::FeatureControlFrameDataSetPtr TGFrameworkSupport::FeatureControlFrameDataSets::Add ( _bstr_t Name ) {
    struct FeatureControlFrameDataSet * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return FeatureControlFrameDataSetPtr(_result, false);
}

#pragma implementation_key(8379)
inline HRESULT TGFrameworkSupport::FeatureControlFrameDataSets::Remove ( _bstr_t Name ) {
    return _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Name);
}

//
// dispinterface WeldSymbolDataSets wrapper method implementations
//

#pragma implementation_key(8380)
inline TGFramework::ApplicationPtr TGFrameworkSupport::WeldSymbolDataSets::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(8381)
inline long TGFrameworkSupport::WeldSymbolDataSets::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8382)
inline IDispatchPtr TGFrameworkSupport::WeldSymbolDataSets::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8383)
inline TGFrameworkSupport::WeldSymbolDataSetPtr TGFrameworkSupport::WeldSymbolDataSets::Item ( const _variant_t & Index ) {
    struct WeldSymbolDataSet * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return WeldSymbolDataSetPtr(_result, false);
}

#pragma implementation_key(8384)
inline TGFrameworkSupport::WeldSymbolDataSetPtr TGFrameworkSupport::WeldSymbolDataSets::Add ( _bstr_t Name ) {
    struct WeldSymbolDataSet * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return WeldSymbolDataSetPtr(_result, false);
}

#pragma implementation_key(8385)
inline HRESULT TGFrameworkSupport::WeldSymbolDataSets::Remove ( _bstr_t Name ) {
    return _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Name);
}

//
// dispinterface SurfaceFinishSymbolDataSets wrapper method implementations
//

#pragma implementation_key(8386)
inline TGFramework::ApplicationPtr TGFrameworkSupport::SurfaceFinishSymbolDataSets::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(8387)
inline long TGFrameworkSupport::SurfaceFinishSymbolDataSets::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8388)
inline IDispatchPtr TGFrameworkSupport::SurfaceFinishSymbolDataSets::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8389)
inline TGFrameworkSupport::SurfaceFinishSymbolDataSetPtr TGFrameworkSupport::SurfaceFinishSymbolDataSets::Item ( const _variant_t & Index ) {
    struct SurfaceFinishSymbolDataSet * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return SurfaceFinishSymbolDataSetPtr(_result, false);
}

#pragma implementation_key(8390)
inline TGFrameworkSupport::SurfaceFinishSymbolDataSetPtr TGFrameworkSupport::SurfaceFinishSymbolDataSets::Add ( _bstr_t Name ) {
    struct SurfaceFinishSymbolDataSet * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return SurfaceFinishSymbolDataSetPtr(_result, false);
}

#pragma implementation_key(8391)
inline HRESULT TGFrameworkSupport::SurfaceFinishSymbolDataSets::Remove ( _bstr_t Name ) {
    return _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Name);
}

//
// dispinterface SmartFrames2d wrapper method implementations
//

#pragma implementation_key(8392)
inline TGFramework::ApplicationPtr TGFrameworkSupport::SmartFrames2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(8393)
inline long TGFrameworkSupport::SmartFrames2d::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8394)
inline IDispatchPtr TGFrameworkSupport::SmartFrames2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8395)
inline TGFrameworkSupport::SmartFrame2dPtr TGFrameworkSupport::SmartFrames2d::Item ( const _variant_t & Index ) {
    struct SmartFrame2d * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return SmartFrame2dPtr(_result, false);
}

#pragma implementation_key(8396)
inline TGFrameworkSupport::SmartFrame2dPtr TGFrameworkSupport::SmartFrames2d::AddBy2Points ( _bstr_t StyleName, double x1, double y1, double x2, double y2 ) {
    struct SmartFrame2d * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0005\x0005\x0005\x0005", (BSTR)StyleName, x1, y1, x2, y2);
    return SmartFrame2dPtr(_result, false);
}

#pragma implementation_key(8397)
inline TGFrameworkSupport::SmartFrame2dPtr TGFrameworkSupport::SmartFrames2d::AddByOrigin ( _bstr_t StyleName, double x1, double y1, double top, double bottom, double left, double right ) {
    struct SmartFrame2d * _result = 0;
    _com_dispatch_method(this, 0x67, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0005\x0005\x0005\x0005\x0005\x0005", (BSTR)StyleName, x1, y1, top, bottom, left, right);
    return SmartFrame2dPtr(_result, false);
}

//
// dispinterface SmartFrame2dStyles wrapper method implementations
//

#pragma implementation_key(8398)
inline TGFrameworkSupport::SmartFrame2dStylePtr TGFrameworkSupport::SmartFrame2dStyles::Item ( const _variant_t & Index ) {
    struct SmartFrame2dStyle * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return SmartFrame2dStylePtr(_result, false);
}

#pragma implementation_key(8399)
inline TGFramework::ApplicationPtr TGFrameworkSupport::SmartFrame2dStyles::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(8400)
inline IDispatchPtr TGFrameworkSupport::SmartFrame2dStyles::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8401)
inline long TGFrameworkSupport::SmartFrame2dStyles::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8402)
inline long TGFrameworkSupport::SmartFrame2dStyles::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8403)
inline TGFrameworkSupport::SmartFrame2dStylePtr TGFrameworkSupport::SmartFrame2dStyles::Add ( _bstr_t Name, _bstr_t Parent ) {
    struct SmartFrame2dStyle * _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)Parent);
    return SmartFrame2dStylePtr(_result, false);
}

//
// dispinterface VFSet wrapper method implementations
//

#pragma implementation_key(8404)
inline TGFramework::ApplicationPtr TGFrameworkSupport::VFSet::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(8405)
inline IDispatchPtr TGFrameworkSupport::VFSet::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8406)
inline HRESULT TGFrameworkSupport::VFSet::SetCriteria ( _bstr_t Name, long Scope, long Color, double Width, _bstr_t LINESTYLE, VARIANT_BOOL DISPLAY, VARIANT_BOOL Locate, long flagsToSet ) {
    return _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0003\x0003\x0005\x0008\x000b\x000b\x0003", (BSTR)Name, Scope, Color, Width, (BSTR)LINESTYLE, DISPLAY, Locate, flagsToSet);
}

#pragma implementation_key(8407)
inline HRESULT TGFrameworkSupport::VFSet::GetCriteria ( _bstr_t Name, long Scope, long * Color, double * Width, BSTR * LINESTYLE, VARIANT_BOOL * DISPLAY, VARIANT_BOOL * Locate, long flagsToSet ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008\x0003\x4003\x4005\x4008\x400b\x400b\x0003", (BSTR)Name, Scope, Color, Width, LINESTYLE, DISPLAY, Locate, flagsToSet);
}

#pragma implementation_key(8408)
inline HRESULT TGFrameworkSupport::VFSet::ResetAll ( long Scope ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Scope);
}

#pragma implementation_key(8409)
inline HRESULT TGFrameworkSupport::VFSet::SetAll ( long Scope, long Color, double Width, _bstr_t LINESTYLE, VARIANT_BOOL DISPLAY, VARIANT_BOOL Locate, long flagsToSet ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0005\x0008\x000b\x000b\x0003", Scope, Color, Width, (BSTR)LINESTYLE, DISPLAY, Locate, flagsToSet);
}

#pragma implementation_key(8410)
inline HRESULT TGFrameworkSupport::VFSet::CheckForDefault ( VARIANT_BOOL * bSetting ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x400b", bSetting);
}

//
// dispinterface AnnotAlignmentShape wrapper method implementations
//

#pragma implementation_key(8411)
inline TGFramework::ApplicationPtr TGFrameworkSupport::AnnotAlignmentShape::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x2065, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(8412)
inline long TGFrameworkSupport::AnnotAlignmentShape::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2066, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8413)
inline _bstr_t TGFrameworkSupport::AnnotAlignmentShape::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x2067, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8414)
inline IDispatchPtr TGFrameworkSupport::AnnotAlignmentShape::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2068, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8415)
inline long TGFrameworkSupport::AnnotAlignmentShape::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2069, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8416)
inline long TGFrameworkSupport::AnnotAlignmentShape::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x206b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8417)
inline _bstr_t TGFrameworkSupport::AnnotAlignmentShape::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x206c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8418)
inline IDispatchPtr TGFrameworkSupport::AnnotAlignmentShape::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x206d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8419)
inline HRESULT TGFrameworkSupport::AnnotAlignmentShape::Copy ( ) {
    return _com_dispatch_method(this, 0x6001200a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(8420)
inline HRESULT TGFrameworkSupport::AnnotAlignmentShape::Cut ( ) {
    return _com_dispatch_method(this, 0x6001200b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(8421)
inline HRESULT TGFrameworkSupport::AnnotAlignmentShape::Delete ( ) {
    return _com_dispatch_method(this, 0x6001200c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(8422)
inline HRESULT TGFrameworkSupport::AnnotAlignmentShape::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x60012011, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(8423)
inline HRESULT TGFrameworkSupport::AnnotAlignmentShape::BringToFront ( ) {
    return _com_dispatch_method(this, 0x60012014, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(8424)
inline HRESULT TGFrameworkSupport::AnnotAlignmentShape::BringForward ( ) {
    return _com_dispatch_method(this, 0x60012015, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(8425)
inline HRESULT TGFrameworkSupport::AnnotAlignmentShape::SendToBack ( ) {
    return _com_dispatch_method(this, 0x60012016, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(8426)
inline HRESULT TGFrameworkSupport::AnnotAlignmentShape::SendBackward ( ) {
    return _com_dispatch_method(this, 0x60012017, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(8427)
inline HRESULT TGFrameworkSupport::AnnotAlignmentShape::Select ( ) {
    return _com_dispatch_method(this, 0x60012018, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(8428)
inline long TGFrameworkSupport::AnnotAlignmentShape::GetClosedAlignmentShape ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8429)
inline long TGFrameworkSupport::AnnotAlignmentShape::GetUniformSpacing ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8430)
inline void TGFrameworkSupport::AnnotAlignmentShape::PutUniformSpacing ( long _arg1 ) {
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(8431)
inline long TGFrameworkSupport::AnnotAlignmentShape::GetMinimumSpacing ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8432)
inline void TGFrameworkSupport::AnnotAlignmentShape::PutMinimumSpacing ( long _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(8433)
inline double TGFrameworkSupport::AnnotAlignmentShape::GetMinimumSpacingValue ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8434)
inline void TGFrameworkSupport::AnnotAlignmentShape::PutMinimumSpacingValue ( double _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(8435)
inline HRESULT TGFrameworkSupport::AnnotAlignmentShape::GetGeometry ( SAFEARRAY * * ppPointsX, SAFEARRAY * * ppPointsY ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6005\x6005", ppPointsX, ppPointsY);
}

#pragma implementation_key(8436)
inline int TGFrameworkSupport::AnnotAlignmentShape::GetVertexCount ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8437)
inline HRESULT TGFrameworkSupport::AnnotAlignmentShape::InsertVertex ( double PointsX, double PointsY ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", PointsX, PointsY);
}

#pragma implementation_key(8438)
inline HRESULT TGFrameworkSupport::AnnotAlignmentShape::RemoveVertex ( int nIndex ) {
    return _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", nIndex);
}

#pragma implementation_key(8439)
inline HRESULT TGFrameworkSupport::AnnotAlignmentShape::ModifyVertex ( int nIndex, double dNexX, double dNewY ) {
    return _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0005\x0005", nIndex, dNexX, dNewY);
}

#pragma implementation_key(8440)
inline IDispatchPtr TGFrameworkSupport::AnnotAlignmentShape::GetDrawingView ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8441)
inline void TGFrameworkSupport::AnnotAlignmentShape::PutDrawingView ( IDispatch * _arg1 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(8442)
inline enum TGFrameworkSupport::DimItemNumDirConstants TGFrameworkSupport::AnnotAlignmentShape::GetItemNumberDirection ( ) {
    enum DimItemNumDirConstants _result;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8443)
inline void TGFrameworkSupport::AnnotAlignmentShape::PutItemNumberDirection ( enum DimItemNumDirConstants _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(8444)
inline IDispatchPtr TGFrameworkSupport::AnnotAlignmentShape::GetFirstBalloon ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8445)
inline void TGFrameworkSupport::AnnotAlignmentShape::PutFirstBalloon ( IDispatch * _arg1 ) {
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

//
// interface _IAnnotAlignmentShapeAuto wrapper method implementations
//

#pragma implementation_key(8446)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IAnnotAlignmentShapeAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(8447)
inline long TGFrameworkSupport::_IAnnotAlignmentShapeAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8448)
inline _bstr_t TGFrameworkSupport::_IAnnotAlignmentShapeAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8449)
inline IDispatchPtr TGFrameworkSupport::_IAnnotAlignmentShapeAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8450)
inline long TGFrameworkSupport::_IAnnotAlignmentShapeAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8451)
inline long TGFrameworkSupport::_IAnnotAlignmentShapeAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8452)
inline _bstr_t TGFrameworkSupport::_IAnnotAlignmentShapeAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8453)
inline IDispatchPtr TGFrameworkSupport::_IAnnotAlignmentShapeAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8454)
inline HRESULT TGFrameworkSupport::_IAnnotAlignmentShapeAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8455)
inline HRESULT TGFrameworkSupport::_IAnnotAlignmentShapeAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8456)
inline HRESULT TGFrameworkSupport::_IAnnotAlignmentShapeAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8457)
inline HRESULT TGFrameworkSupport::_IAnnotAlignmentShapeAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8458)
inline HRESULT TGFrameworkSupport::_IAnnotAlignmentShapeAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8459)
inline HRESULT TGFrameworkSupport::_IAnnotAlignmentShapeAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8460)
inline HRESULT TGFrameworkSupport::_IAnnotAlignmentShapeAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8461)
inline HRESULT TGFrameworkSupport::_IAnnotAlignmentShapeAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8462)
inline HRESULT TGFrameworkSupport::_IAnnotAlignmentShapeAuto::Select ( ) {
    HRESULT _hr = raw_Select();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8463)
inline long TGFrameworkSupport::_IAnnotAlignmentShapeAuto::GetClosedAlignmentShape ( ) {
    long _result = 0;
    HRESULT _hr = get_ClosedAlignmentShape(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8464)
inline long TGFrameworkSupport::_IAnnotAlignmentShapeAuto::GetUniformSpacing ( ) {
    long _result = 0;
    HRESULT _hr = get_UniformSpacing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8465)
inline void TGFrameworkSupport::_IAnnotAlignmentShapeAuto::PutUniformSpacing ( long bIsUniformSpacing ) {
    HRESULT _hr = put_UniformSpacing(bIsUniformSpacing);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8466)
inline long TGFrameworkSupport::_IAnnotAlignmentShapeAuto::GetMinimumSpacing ( ) {
    long _result = 0;
    HRESULT _hr = get_MinimumSpacing(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8467)
inline void TGFrameworkSupport::_IAnnotAlignmentShapeAuto::PutMinimumSpacing ( long pbIsMiniumSpacing ) {
    HRESULT _hr = put_MinimumSpacing(pbIsMiniumSpacing);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8468)
inline double TGFrameworkSupport::_IAnnotAlignmentShapeAuto::GetMinimumSpacingValue ( ) {
    double _result = 0;
    HRESULT _hr = get_MinimumSpacingValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8469)
inline void TGFrameworkSupport::_IAnnotAlignmentShapeAuto::PutMinimumSpacingValue ( double pdMiniumSpacing ) {
    HRESULT _hr = put_MinimumSpacingValue(pdMiniumSpacing);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8470)
inline HRESULT TGFrameworkSupport::_IAnnotAlignmentShapeAuto::GetGeometry ( SAFEARRAY * * ppPointsX, SAFEARRAY * * ppPointsY ) {
    HRESULT _hr = raw_GetGeometry(ppPointsX, ppPointsY);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8471)
inline int TGFrameworkSupport::_IAnnotAlignmentShapeAuto::GetVertexCount ( ) {
    int _result = 0;
    HRESULT _hr = get_VertexCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8472)
inline HRESULT TGFrameworkSupport::_IAnnotAlignmentShapeAuto::InsertVertex ( double PointsX, double PointsY ) {
    HRESULT _hr = raw_InsertVertex(PointsX, PointsY);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8473)
inline HRESULT TGFrameworkSupport::_IAnnotAlignmentShapeAuto::RemoveVertex ( int nIndex ) {
    HRESULT _hr = raw_RemoveVertex(nIndex);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8474)
inline HRESULT TGFrameworkSupport::_IAnnotAlignmentShapeAuto::ModifyVertex ( int nIndex, double dNexX, double dNewY ) {
    HRESULT _hr = raw_ModifyVertex(nIndex, dNexX, dNewY);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8475)
inline IDispatchPtr TGFrameworkSupport::_IAnnotAlignmentShapeAuto::GetDrawingView ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_DrawingView(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8476)
inline void TGFrameworkSupport::_IAnnotAlignmentShapeAuto::PutDrawingView ( IDispatch * ppDrawingView ) {
    HRESULT _hr = put_DrawingView(ppDrawingView);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8477)
inline enum TGFrameworkSupport::DimItemNumDirConstants TGFrameworkSupport::_IAnnotAlignmentShapeAuto::GetItemNumberDirection ( ) {
    enum DimItemNumDirConstants _result;
    HRESULT _hr = get_ItemNumberDirection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8478)
inline void TGFrameworkSupport::_IAnnotAlignmentShapeAuto::PutItemNumberDirection ( enum DimItemNumDirConstants pnItemNumberDirection ) {
    HRESULT _hr = put_ItemNumberDirection(pnItemNumberDirection);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8479)
inline IDispatchPtr TGFrameworkSupport::_IAnnotAlignmentShapeAuto::GetFirstBalloon ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_FirstBalloon(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8480)
inline void TGFrameworkSupport::_IAnnotAlignmentShapeAuto::PutFirstBalloon ( IDispatch * ppFirstBalloon ) {
    HRESULT _hr = put_FirstBalloon(ppFirstBalloon);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// dispinterface AnnotAlignmentShapes wrapper method implementations
//

#pragma implementation_key(8481)
inline TGFramework::ApplicationPtr TGFrameworkSupport::AnnotAlignmentShapes::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(8482)
inline long TGFrameworkSupport::AnnotAlignmentShapes::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8483)
inline IDispatchPtr TGFrameworkSupport::AnnotAlignmentShapes::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8484)
inline TGFrameworkSupport::AnnotAlignmentShapePtr TGFrameworkSupport::AnnotAlignmentShapes::Item ( const _variant_t & Index ) {
    struct AnnotAlignmentShape * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AnnotAlignmentShapePtr(_result, false);
}

#pragma implementation_key(8485)
inline TGFrameworkSupport::AnnotAlignmentShapePtr TGFrameworkSupport::AnnotAlignmentShapes::AddAnnotAlignmentShape ( SAFEARRAY * * ppPointsX, SAFEARRAY * * ppPointsY ) {
    struct AnnotAlignmentShape * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x6005\x6005", ppPointsX, ppPointsY);
    return AnnotAlignmentShapePtr(_result, false);
}

//
// interface _IAnnotAlignmentShapesAuto wrapper method implementations
//

#pragma implementation_key(8486)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IAnnotAlignmentShapesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(8487)
inline long TGFrameworkSupport::_IAnnotAlignmentShapesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8488)
inline IDispatchPtr TGFrameworkSupport::_IAnnotAlignmentShapesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8489)
inline TGFrameworkSupport::AnnotAlignmentShapePtr TGFrameworkSupport::_IAnnotAlignmentShapesAuto::Item ( const _variant_t & Index ) {
    struct AnnotAlignmentShape * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AnnotAlignmentShapePtr(_result, false);
}

#pragma implementation_key(8490)
inline IUnknownPtr TGFrameworkSupport::_IAnnotAlignmentShapesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(8491)
inline TGFrameworkSupport::AnnotAlignmentShapePtr TGFrameworkSupport::_IAnnotAlignmentShapesAuto::AddAnnotAlignmentShape ( SAFEARRAY * * ppPointsX, SAFEARRAY * * ppPointsY ) {
    struct AnnotAlignmentShape * _result = 0;
    HRESULT _hr = raw_AddAnnotAlignmentShape(ppPointsX, ppPointsY, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return AnnotAlignmentShapePtr(_result, false);
}

//
// dispinterface TechnicalRequirement wrapper method implementations
//

#pragma implementation_key(8492)
inline TGFramework::ApplicationPtr TGFrameworkSupport::TechnicalRequirement::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(8493)
inline long TGFrameworkSupport::TechnicalRequirement::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8494)
inline IDispatchPtr TGFrameworkSupport::TechnicalRequirement::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8495)
inline HRESULT TGFrameworkSupport::TechnicalRequirement::Delete ( ) {
    return _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(8496)
inline HRESULT TGFrameworkSupport::TechnicalRequirement::GetOrigin ( double * x, double * y, double * z ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005", x, y, z);
}

#pragma implementation_key(8497)
inline HRESULT TGFrameworkSupport::TechnicalRequirement::SetOrigin ( double x, double y, double z ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", x, y, z);
}

#pragma implementation_key(8498)
inline _variant_t TGFrameworkSupport::TechnicalRequirement::GetDisplayedDetails ( ) {
    VARIANT _result;
    VariantInit(&_result);
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_VARIANT, (void*)&_result, NULL);
    return _variant_t(_result, false);
}

#pragma implementation_key(8499)
inline _bstr_t TGFrameworkSupport::TechnicalRequirement::GetDisplayedTitle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8500)
inline enum TGFrameworkSupport::TextNumberFormatConstants TGFrameworkSupport::TechnicalRequirement::GetNumberingFormat ( ) {
    enum TextNumberFormatConstants _result;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8501)
inline void TGFrameworkSupport::TechnicalRequirement::PutNumberingFormat ( enum TextNumberFormatConstants _arg1 ) {
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(8502)
inline enum TGFrameworkSupport::TextNumberTypeConstants TGFrameworkSupport::TechnicalRequirement::GetNumberType ( ) {
    enum TextNumberTypeConstants _result;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8503)
inline void TGFrameworkSupport::TechnicalRequirement::PutNumberType ( enum TextNumberTypeConstants _arg1 ) {
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(8504)
inline HRESULT TGFrameworkSupport::TechnicalRequirement::GetReferencedObjectInfo ( SAFEARRAY * * ReferencedObjects, SAFEARRAY * * ReferencedObjectTypes ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x6009\x6003", ReferencedObjects, ReferencedObjectTypes);
}

//
// interface _ITechnicalRequirementAuto wrapper method implementations
//

#pragma implementation_key(8505)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_ITechnicalRequirementAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(8506)
inline long TGFrameworkSupport::_ITechnicalRequirementAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8507)
inline IDispatchPtr TGFrameworkSupport::_ITechnicalRequirementAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8508)
inline HRESULT TGFrameworkSupport::_ITechnicalRequirementAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8509)
inline HRESULT TGFrameworkSupport::_ITechnicalRequirementAuto::GetOrigin ( double * x, double * y, double * z ) {
    HRESULT _hr = raw_GetOrigin(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8510)
inline HRESULT TGFrameworkSupport::_ITechnicalRequirementAuto::SetOrigin ( double x, double y, double z ) {
    HRESULT _hr = raw_SetOrigin(x, y, z);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8511)
inline _variant_t TGFrameworkSupport::_ITechnicalRequirementAuto::GetDisplayedDetails ( ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = raw_GetDisplayedDetails(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(8512)
inline _bstr_t TGFrameworkSupport::_ITechnicalRequirementAuto::GetDisplayedTitle ( ) {
    BSTR _result = 0;
    HRESULT _hr = raw_GetDisplayedTitle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8513)
inline enum TGFrameworkSupport::TextNumberFormatConstants TGFrameworkSupport::_ITechnicalRequirementAuto::GetNumberingFormat ( ) {
    enum TextNumberFormatConstants _result;
    HRESULT _hr = get_NumberingFormat(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8514)
inline void TGFrameworkSupport::_ITechnicalRequirementAuto::PutNumberingFormat ( enum TextNumberFormatConstants numberFormat ) {
    HRESULT _hr = put_NumberingFormat(numberFormat);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8515)
inline enum TGFrameworkSupport::TextNumberTypeConstants TGFrameworkSupport::_ITechnicalRequirementAuto::GetNumberType ( ) {
    enum TextNumberTypeConstants _result;
    HRESULT _hr = get_NumberType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8516)
inline void TGFrameworkSupport::_ITechnicalRequirementAuto::PutNumberType ( enum TextNumberTypeConstants NumberType ) {
    HRESULT _hr = put_NumberType(NumberType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8517)
inline HRESULT TGFrameworkSupport::_ITechnicalRequirementAuto::GetReferencedObjectInfo ( SAFEARRAY * * ReferencedObjects, SAFEARRAY * * ReferencedObjectTypes ) {
    HRESULT _hr = raw_GetReferencedObjectInfo(ReferencedObjects, ReferencedObjectTypes);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

//
// dispinterface TechnicalRequirements wrapper method implementations
//

#pragma implementation_key(8518)
inline IDispatchPtr TGFrameworkSupport::TechnicalRequirements::GetApplication ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8519)
inline long TGFrameworkSupport::TechnicalRequirements::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8520)
inline IDispatchPtr TGFrameworkSupport::TechnicalRequirements::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8521)
inline TGFrameworkSupport::TechnicalRequirementPtr TGFrameworkSupport::TechnicalRequirements::Item ( const _variant_t & Index ) {
    struct TechnicalRequirement * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return TechnicalRequirementPtr(_result, false);
}

#pragma implementation_key(8522)
inline TGFrameworkSupport::TechnicalRequirementPtr TGFrameworkSupport::TechnicalRequirements::Add ( double x1, double y1, double z1, const _variant_t & techDetails, enum TextNumberTypeConstants NumberType, enum TextNumberFormatConstants numberFormat, _bstr_t title ) {
    struct TechnicalRequirement * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x000c\x0003\x0003\x0008", x1, y1, z1, &techDetails, NumberType, numberFormat, (BSTR)title);
    return TechnicalRequirementPtr(_result, false);
}

//
// interface _ITechnicalRequirementsAuto wrapper method implementations
//

#pragma implementation_key(8523)
inline IDispatchPtr TGFrameworkSupport::_ITechnicalRequirementsAuto::GetApplication ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8524)
inline long TGFrameworkSupport::_ITechnicalRequirementsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8525)
inline IDispatchPtr TGFrameworkSupport::_ITechnicalRequirementsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8526)
inline TGFrameworkSupport::TechnicalRequirementPtr TGFrameworkSupport::_ITechnicalRequirementsAuto::Item ( const _variant_t & Index ) {
    struct TechnicalRequirement * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TechnicalRequirementPtr(_result, false);
}

#pragma implementation_key(8527)
inline IUnknownPtr TGFrameworkSupport::_ITechnicalRequirementsAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(8528)
inline TGFrameworkSupport::TechnicalRequirementPtr TGFrameworkSupport::_ITechnicalRequirementsAuto::Add ( double x1, double y1, double z1, const _variant_t & techDetails, enum TextNumberTypeConstants NumberType, enum TextNumberFormatConstants numberFormat, _bstr_t title ) {
    struct TechnicalRequirement * _result = 0;
    HRESULT _hr = raw_Add(x1, y1, z1, techDetails, NumberType, numberFormat, title, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TechnicalRequirementPtr(_result, false);
}

//
// dispinterface PMIModelViews wrapper method implementations
//

#pragma implementation_key(8529)
inline TGFramework::ApplicationPtr TGFrameworkSupport::PMIModelViews::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x6022, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(8530)
inline long TGFrameworkSupport::PMIModelViews::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6023, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8531)
inline IDispatchPtr TGFrameworkSupport::PMIModelViews::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x6024, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8532)
inline TGFrameworkSupport::PMIModelViewPtr TGFrameworkSupport::PMIModelViews::Item ( const _variant_t & Index ) {
    struct PMIModelView * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return PMIModelViewPtr(_result, false);
}

#pragma implementation_key(8533)
inline TGFrameworkSupport::PMIModelViewPtr TGFrameworkSupport::PMIModelViews::Add ( _bstr_t Text, enum PMIRenderModeConstants RenderMode ) {
    struct PMIModelView * _result = 0;
    _com_dispatch_method(this, 0x6025, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0003", (BSTR)Text, RenderMode);
    return PMIModelViewPtr(_result, false);
}

#pragma implementation_key(8534)
inline TGFrameworkSupport::PMIModelViewPtr TGFrameworkSupport::PMIModelViews::AddByStandardViewOrientation ( enum PMIModelViewStandardOrientationConstants ViewOrientation, enum PMIRenderModeConstants RenderMode, long bReplaceExistingModelView ) {
    struct PMIModelView * _result = 0;
    _com_dispatch_method(this, 0x606d, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0003\x0003", ViewOrientation, RenderMode, bReplaceExistingModelView);
    return PMIModelViewPtr(_result, false);
}

//
// dispinterface PMIModelView wrapper method implementations
//

#pragma implementation_key(8535)
inline _bstr_t TGFrameworkSupport::PMIModelView::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6026, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8536)
inline void TGFrameworkSupport::PMIModelView::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x6026, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(8537)
inline enum TGFrameworkSupport::PMIRenderModeConstants TGFrameworkSupport::PMIModelView::GetRenderMode ( ) {
    enum PMIRenderModeConstants _result;
    _com_dispatch_method(this, 0x6027, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8538)
inline void TGFrameworkSupport::PMIModelView::PutRenderMode ( enum PMIRenderModeConstants _arg1 ) {
    _com_dispatch_method(this, 0x6027, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(8539)
inline enum TGFramework::PMISectionDisplayModeConstants TGFrameworkSupport::PMIModelView::GetSectionDisplayMode ( ) {
    enum TGFramework::PMISectionDisplayModeConstants _result;
    _com_dispatch_method(this, 0x6028, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8540)
inline void TGFrameworkSupport::PMIModelView::PutSectionDisplayMode ( enum TGFramework::PMISectionDisplayModeConstants _arg1 ) {
    _com_dispatch_method(this, 0x6028, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(8541)
inline long TGFrameworkSupport::PMIModelView::GetShowCuttingPlane ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6029, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8542)
inline void TGFrameworkSupport::PMIModelView::PutShowCuttingPlane ( long _arg1 ) {
    _com_dispatch_method(this, 0x6029, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(8543)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::PMIModelView::GetDimensionItem ( const _variant_t & Index ) {
    struct Dimension * _result = 0;
    _com_dispatch_method(this, 0x602a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return DimensionPtr(_result, false);
}

#pragma implementation_key(8544)
inline IDispatchPtr TGFrameworkSupport::PMIModelView::GetAnnotationItem ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x602b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8545)
inline TGFramework::SectionViewPtr TGFrameworkSupport::PMIModelView::GetSectionItem ( const _variant_t & Index ) {
    struct TGFramework::SectionView * _result = 0;
    _com_dispatch_method(this, 0x602c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return TGFramework::SectionViewPtr(_result, false);
}

#pragma implementation_key(8546)
inline long TGFrameworkSupport::PMIModelView::GetDimensionCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x602d, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8547)
inline long TGFrameworkSupport::PMIModelView::GetAnnotationCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x602e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8548)
inline long TGFrameworkSupport::PMIModelView::GetSectionCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x602f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8549)
inline HRESULT TGFrameworkSupport::PMIModelView::SetShowHidePMISections ( long bShowPMISections ) {
    return _com_dispatch_method(this, 0x6030, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", bShowPMISections);
}

#pragma implementation_key(8550)
inline HRESULT TGFrameworkSupport::PMIModelView::SetShowHideDimensions ( long bShowDimensions ) {
    return _com_dispatch_method(this, 0x6031, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", bShowDimensions);
}

#pragma implementation_key(8551)
inline HRESULT TGFrameworkSupport::PMIModelView::SetShowHideAnnotations ( long bShowAnnotations ) {
    return _com_dispatch_method(this, 0x6032, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", bShowAnnotations);
}

#pragma implementation_key(8552)
inline HRESULT TGFrameworkSupport::PMIModelView::AddDimAnnotOrSectionToView ( IUnknown * DimAnnotOrSection ) {
    return _com_dispatch_method(this, 0x6033, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000d", DimAnnotOrSection);
}

#pragma implementation_key(8553)
inline HRESULT TGFrameworkSupport::PMIModelView::RemoveDimAnnotOrSectionFromView ( IUnknown * DimAnnotOrSection ) {
    return _com_dispatch_method(this, 0x6034, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000d", DimAnnotOrSection);
}

#pragma implementation_key(8554)
inline HRESULT TGFrameworkSupport::PMIModelView::Delete ( ) {
    return _com_dispatch_method(this, 0x6038, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(8555)
inline HRESULT TGFrameworkSupport::PMIModelView::Apply ( ) {
    return _com_dispatch_method(this, 0x6035, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(8556)
inline HRESULT TGFrameworkSupport::PMIModelView::SetViewOrientationToCurrentView ( ) {
    return _com_dispatch_method(this, 0x6036, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(8557)
inline enum TGFramework::ObjectType TGFrameworkSupport::PMIModelView::AnnotationItemType ( const _variant_t & Index ) {
    enum TGFramework::ObjectType _result;
    _com_dispatch_method(this, 0x6037, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c", &Index);
    return _result;
}

#pragma implementation_key(8558)
inline HRESULT TGFrameworkSupport::PMIModelView::SetShowHideComponentsToCurrentView ( IUnknown * ComponentUnknown, long bShow ) {
    return _com_dispatch_method(this, 0x6039, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x000d\x0003", ComponentUnknown, bShow);
}

#pragma implementation_key(8559)
inline HRESULT TGFrameworkSupport::PMIModelView::Update ( ) {
    return _com_dispatch_method(this, 0x606c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(8560)
inline VARIANT_BOOL TGFrameworkSupport::PMIModelView::GetIncludeIn3dPdfPublish ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x606b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8561)
inline void TGFrameworkSupport::PMIModelView::PutIncludeIn3dPdfPublish ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x606b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

//
// interface _IPMIModelViewAuto wrapper method implementations
//

#pragma implementation_key(8562)
inline _bstr_t TGFrameworkSupport::_IPMIModelViewAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8563)
inline void TGFrameworkSupport::_IPMIModelViewAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8564)
inline enum TGFrameworkSupport::PMIRenderModeConstants TGFrameworkSupport::_IPMIModelViewAuto::GetRenderMode ( ) {
    enum PMIRenderModeConstants _result;
    HRESULT _hr = get_RenderMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8565)
inline void TGFrameworkSupport::_IPMIModelViewAuto::PutRenderMode ( enum PMIRenderModeConstants RenderMode ) {
    HRESULT _hr = put_RenderMode(RenderMode);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8566)
inline enum TGFramework::PMISectionDisplayModeConstants TGFrameworkSupport::_IPMIModelViewAuto::GetSectionDisplayMode ( ) {
    enum TGFramework::PMISectionDisplayModeConstants _result;
    HRESULT _hr = get_SectionDisplayMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8567)
inline void TGFrameworkSupport::_IPMIModelViewAuto::PutSectionDisplayMode ( enum TGFramework::PMISectionDisplayModeConstants SectionDisplayMode ) {
    HRESULT _hr = put_SectionDisplayMode(SectionDisplayMode);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8568)
inline long TGFrameworkSupport::_IPMIModelViewAuto::GetShowCuttingPlane ( ) {
    long _result = 0;
    HRESULT _hr = get_ShowCuttingPlane(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8569)
inline void TGFrameworkSupport::_IPMIModelViewAuto::PutShowCuttingPlane ( long pbShowCuttingPlane ) {
    HRESULT _hr = put_ShowCuttingPlane(pbShowCuttingPlane);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8570)
inline TGFrameworkSupport::DimensionPtr TGFrameworkSupport::_IPMIModelViewAuto::GetDimensionItem ( const _variant_t & Index ) {
    struct Dimension * _result = 0;
    HRESULT _hr = get_DimensionItem(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return DimensionPtr(_result, false);
}

#pragma implementation_key(8571)
inline IDispatchPtr TGFrameworkSupport::_IPMIModelViewAuto::GetAnnotationItem ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AnnotationItem(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8572)
inline TGFramework::SectionViewPtr TGFrameworkSupport::_IPMIModelViewAuto::GetSectionItem ( const _variant_t & Index ) {
    struct TGFramework::SectionView * _result = 0;
    HRESULT _hr = get_SectionItem(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::SectionViewPtr(_result, false);
}

#pragma implementation_key(8573)
inline long TGFrameworkSupport::_IPMIModelViewAuto::GetDimensionCount ( ) {
    long _result = 0;
    HRESULT _hr = get_DimensionCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8574)
inline long TGFrameworkSupport::_IPMIModelViewAuto::GetAnnotationCount ( ) {
    long _result = 0;
    HRESULT _hr = get_AnnotationCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8575)
inline long TGFrameworkSupport::_IPMIModelViewAuto::GetSectionCount ( ) {
    long _result = 0;
    HRESULT _hr = get_SectionCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8576)
inline HRESULT TGFrameworkSupport::_IPMIModelViewAuto::SetShowHidePMISections ( long bShowPMISections ) {
    HRESULT _hr = raw_SetShowHidePMISections(bShowPMISections);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8577)
inline HRESULT TGFrameworkSupport::_IPMIModelViewAuto::SetShowHideDimensions ( long bShowDimensions ) {
    HRESULT _hr = raw_SetShowHideDimensions(bShowDimensions);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8578)
inline HRESULT TGFrameworkSupport::_IPMIModelViewAuto::SetShowHideAnnotations ( long bShowAnnotations ) {
    HRESULT _hr = raw_SetShowHideAnnotations(bShowAnnotations);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8579)
inline HRESULT TGFrameworkSupport::_IPMIModelViewAuto::AddDimAnnotOrSectionToView ( IUnknown * DimAnnotOrSection ) {
    HRESULT _hr = raw_AddDimAnnotOrSectionToView(DimAnnotOrSection);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8580)
inline HRESULT TGFrameworkSupport::_IPMIModelViewAuto::RemoveDimAnnotOrSectionFromView ( IUnknown * DimAnnotOrSection ) {
    HRESULT _hr = raw_RemoveDimAnnotOrSectionFromView(DimAnnotOrSection);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8581)
inline HRESULT TGFrameworkSupport::_IPMIModelViewAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8582)
inline HRESULT TGFrameworkSupport::_IPMIModelViewAuto::Apply ( ) {
    HRESULT _hr = raw_Apply();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8583)
inline HRESULT TGFrameworkSupport::_IPMIModelViewAuto::SetViewOrientationToCurrentView ( ) {
    HRESULT _hr = raw_SetViewOrientationToCurrentView();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8584)
inline enum TGFramework::ObjectType TGFrameworkSupport::_IPMIModelViewAuto::AnnotationItemType ( const _variant_t & Index ) {
    enum TGFramework::ObjectType _result;
    HRESULT _hr = raw_AnnotationItemType(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8585)
inline HRESULT TGFrameworkSupport::_IPMIModelViewAuto::SetShowHideComponentsToCurrentView ( IUnknown * ComponentUnknown, long bShow ) {
    HRESULT _hr = raw_SetShowHideComponentsToCurrentView(ComponentUnknown, bShow);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8586)
inline HRESULT TGFrameworkSupport::_IPMIModelViewAuto::Update ( ) {
    HRESULT _hr = raw_Update();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8587)
inline VARIANT_BOOL TGFrameworkSupport::_IPMIModelViewAuto::GetIncludeIn3dPdfPublish ( ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IncludeIn3dPdfPublish(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8588)
inline void TGFrameworkSupport::_IPMIModelViewAuto::PutIncludeIn3dPdfPublish ( VARIANT_BOOL IncludeInPublish ) {
    HRESULT _hr = put_IncludeIn3dPdfPublish(IncludeInPublish);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface _IPMIModelViewsAuto wrapper method implementations
//

#pragma implementation_key(8589)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IPMIModelViewsAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(8590)
inline long TGFrameworkSupport::_IPMIModelViewsAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8591)
inline IDispatchPtr TGFrameworkSupport::_IPMIModelViewsAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8592)
inline TGFrameworkSupport::PMIModelViewPtr TGFrameworkSupport::_IPMIModelViewsAuto::Item ( const _variant_t & Index ) {
    struct PMIModelView * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PMIModelViewPtr(_result, false);
}

#pragma implementation_key(8593)
inline TGFrameworkSupport::PMIModelViewPtr TGFrameworkSupport::_IPMIModelViewsAuto::Add ( _bstr_t Text, enum PMIRenderModeConstants RenderMode ) {
    struct PMIModelView * _result = 0;
    HRESULT _hr = raw_Add(Text, RenderMode, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PMIModelViewPtr(_result, false);
}

#pragma implementation_key(8594)
inline TGFrameworkSupport::PMIModelViewPtr TGFrameworkSupport::_IPMIModelViewsAuto::AddByStandardViewOrientation ( enum PMIModelViewStandardOrientationConstants ViewOrientation, enum PMIRenderModeConstants RenderMode, long bReplaceExistingModelView ) {
    struct PMIModelView * _result = 0;
    HRESULT _hr = raw_AddByStandardViewOrientation(ViewOrientation, RenderMode, bReplaceExistingModelView, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return PMIModelViewPtr(_result, false);
}

//
// dispinterface RectangularPatterns2d wrapper method implementations
//

#pragma implementation_key(8595)
inline TGFramework::ApplicationPtr TGFrameworkSupport::RectangularPatterns2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(8596)
inline IDispatchPtr TGFrameworkSupport::RectangularPatterns2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8597)
inline long TGFrameworkSupport::RectangularPatterns2d::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8598)
inline TGFrameworkSupport::RectangularPattern2dPtr TGFrameworkSupport::RectangularPatterns2d::Item ( const _variant_t & Index ) {
    struct RectangularPattern2d * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return RectangularPattern2dPtr(_result, false);
}

#pragma implementation_key(8599)
inline TGFrameworkSupport::RectangularPattern2dPtr TGFrameworkSupport::RectangularPatterns2d::Add ( double OriginX, double OriginY, double Width, double Height, double Angle, enum PatternOffsetTypeConstants OffsetType, long XCount, long YCount, double XSpace, double YSpace, const _variant_t & StaggerType, const _variant_t & StaggerOffset, const _variant_t & StaggerOffsetHalf, const _variant_t & StaggerIncludeLast ) {
    struct RectangularPattern2d * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0003\x0003\x0003\x0005\x0005\x080c\x080c\x080c\x080c", OriginX, OriginY, Width, Height, Angle, OffsetType, XCount, YCount, XSpace, YSpace, &StaggerType, &StaggerOffset, &StaggerOffsetHalf, &StaggerIncludeLast);
    return RectangularPattern2dPtr(_result, false);
}

#pragma implementation_key(8600)
inline TGFrameworkSupport::RectangularPattern2dPtr TGFrameworkSupport::RectangularPatterns2d::AddEx ( SAFEARRAY * * GeomArray, long NumOfElements, double OriginX, double OriginY, double Width, double Height, double Angle, enum PatternOffsetTypeConstants OffsetType, long XCount, long YCount, double XSpace, double YSpace, const _variant_t & StaggerType, const _variant_t & StaggerOffset, const _variant_t & StaggerOffsetHalf, const _variant_t & StaggerIncludeLast ) {
    struct RectangularPattern2d * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x600c\x0003\x0005\x0005\x0005\x0005\x0005\x0003\x0003\x0003\x0005\x0005\x080c\x080c\x080c\x080c", GeomArray, NumOfElements, OriginX, OriginY, Width, Height, Angle, OffsetType, XCount, YCount, XSpace, YSpace, &StaggerType, &StaggerOffset, &StaggerOffsetHalf, &StaggerIncludeLast);
    return RectangularPattern2dPtr(_result, false);
}

//
// dispinterface CircularPatterns2d wrapper method implementations
//

#pragma implementation_key(8601)
inline TGFramework::ApplicationPtr TGFrameworkSupport::CircularPatterns2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(8602)
inline IDispatchPtr TGFrameworkSupport::CircularPatterns2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8603)
inline long TGFrameworkSupport::CircularPatterns2d::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8604)
inline TGFrameworkSupport::CircularPattern2dPtr TGFrameworkSupport::CircularPatterns2d::Item ( const _variant_t & Index ) {
    struct CircularPattern2d * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return CircularPattern2dPtr(_result, false);
}

#pragma implementation_key(8605)
inline TGFrameworkSupport::CircularPattern2dPtr TGFrameworkSupport::CircularPatterns2d::AddByCircle ( double CenterX, double CenterY, double StartX, double StartY, enum Geom2dOrientationConstants Orientation, enum PatternOffsetTypeConstants OffsetType, long Count, double AngularSpacing ) {
    struct CircularPattern2d * _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0003\x0003\x0003\x0005", CenterX, CenterY, StartX, StartY, Orientation, OffsetType, Count, AngularSpacing);
    return CircularPattern2dPtr(_result, false);
}

#pragma implementation_key(8606)
inline TGFrameworkSupport::CircularPattern2dPtr TGFrameworkSupport::CircularPatterns2d::AddByArc ( double CenterX, double CenterY, double StartX, double StartY, double SweepAngle, enum Geom2dOrientationConstants Orientation, enum PatternOffsetTypeConstants OffsetType, long Count, double AngularSpacing ) {
    struct CircularPattern2d * _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0003\x0003\x0003\x0005", CenterX, CenterY, StartX, StartY, SweepAngle, Orientation, OffsetType, Count, AngularSpacing);
    return CircularPattern2dPtr(_result, false);
}

#pragma implementation_key(8607)
inline TGFrameworkSupport::CircularPattern2dPtr TGFrameworkSupport::CircularPatterns2d::AddByCircleEx ( SAFEARRAY * * GeomArray, long NumOfElements, double CenterX, double CenterY, double StartX, double StartY, enum Geom2dOrientationConstants Orientation, enum PatternOffsetTypeConstants OffsetType, long Count, double AngularSpacing ) {
    struct CircularPattern2d * _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x600c\x0003\x0005\x0005\x0005\x0005\x0003\x0003\x0003\x0005", GeomArray, NumOfElements, CenterX, CenterY, StartX, StartY, Orientation, OffsetType, Count, AngularSpacing);
    return CircularPattern2dPtr(_result, false);
}

#pragma implementation_key(8608)
inline TGFrameworkSupport::CircularPattern2dPtr TGFrameworkSupport::CircularPatterns2d::AddByArcEx ( SAFEARRAY * * GeomArray, long NumOfElements, double CenterX, double CenterY, double StartX, double StartY, double SweepAngle, enum Geom2dOrientationConstants Orientation, enum PatternOffsetTypeConstants OffsetType, long Count, double AngularSpacing ) {
    struct CircularPattern2d * _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x600c\x0003\x0005\x0005\x0005\x0005\x0005\x0003\x0003\x0003\x0005", GeomArray, NumOfElements, CenterX, CenterY, StartX, StartY, SweepAngle, Orientation, OffsetType, Count, AngularSpacing);
    return CircularPattern2dPtr(_result, false);
}

//
// dispinterface Images2d wrapper method implementations
//

#pragma implementation_key(8609)
inline TGFramework::ApplicationPtr TGFrameworkSupport::Images2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(8610)
inline IDispatchPtr TGFrameworkSupport::Images2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8611)
inline long TGFrameworkSupport::Images2d::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8612)
inline TGFrameworkSupport::Image2dPtr TGFrameworkSupport::Images2d::Item ( const _variant_t & Index ) {
    struct Image2d * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return Image2dPtr(_result, false);
}

#pragma implementation_key(8613)
inline TGFrameworkSupport::Image2dPtr TGFrameworkSupport::Images2d::AddImage ( VARIANT_BOOL blink, _bstr_t ImageDocumentName ) {
    struct Image2d * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000b\x0008", blink, (BSTR)ImageDocumentName);
    return Image2dPtr(_result, false);
}

#pragma implementation_key(8614)
inline TGFrameworkSupport::Image2dPtr TGFrameworkSupport::Images2d::AddDecalImage ( VARIANT_BOOL Link, _bstr_t ImageDocumentName ) {
    struct Image2d * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000b\x0008", Link, (BSTR)ImageDocumentName);
    return Image2dPtr(_result, false);
}

//
// dispinterface ComponentImages2d wrapper method implementations
//

#pragma implementation_key(8615)
inline TGFramework::ApplicationPtr TGFrameworkSupport::ComponentImages2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(8616)
inline IDispatchPtr TGFrameworkSupport::ComponentImages2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8617)
inline long TGFrameworkSupport::ComponentImages2d::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8618)
inline TGFrameworkSupport::ComponentImage2dPtr TGFrameworkSupport::ComponentImages2d::Item ( const _variant_t & Index ) {
    struct ComponentImage2d * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return ComponentImage2dPtr(_result, false);
}

#pragma implementation_key(8619)
inline TGFrameworkSupport::ComponentImage2dPtr TGFrameworkSupport::ComponentImages2d::AddComponentImage ( enum ComponentImageCreationModeConstants CreationMode, const _variant_t & NumElements, const _variant_t & Elements ) {
    struct ComponentImage2d * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x080c\x080c", CreationMode, &NumElements, &Elements);
    return ComponentImage2dPtr(_result, false);
}

//
// dispinterface AreaPropertiesCollection wrapper method implementations
//

#pragma implementation_key(8620)
inline TGFrameworkSupport::AreaPropertiesPtr TGFrameworkSupport::AreaPropertiesCollection::Item ( const _variant_t & Index ) {
    struct AreaProperties * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return AreaPropertiesPtr(_result, false);
}

#pragma implementation_key(8621)
inline TGFramework::ApplicationPtr TGFrameworkSupport::AreaPropertiesCollection::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(8622)
inline long TGFrameworkSupport::AreaPropertiesCollection::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8623)
inline IDispatchPtr TGFrameworkSupport::AreaPropertiesCollection::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8624)
inline TGFrameworkSupport::AreaPropertiesPtr TGFrameworkSupport::AreaPropertiesCollection::Add ( long ParentBoundariesCount, SAFEARRAY * * ParentBoundaries, double xFloodPoint, double yFloodPoint ) {
    struct AreaProperties * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x6009\x0005\x0005", ParentBoundariesCount, ParentBoundaries, xFloodPoint, yFloodPoint);
    return AreaPropertiesPtr(_result, false);
}

//
// dispinterface PMI wrapper method implementations
//

#pragma implementation_key(8625)
inline TGFramework::ApplicationPtr TGFrameworkSupport::PMI::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(8626)
inline IDispatchPtr TGFrameworkSupport::PMI::GetDimensions ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8627)
inline IDispatchPtr TGFrameworkSupport::PMI::GetBalloons ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8628)
inline IDispatchPtr TGFrameworkSupport::PMI::GetCornerAnnotations ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8629)
inline IDispatchPtr TGFrameworkSupport::PMI::GetDatumFrames ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8630)
inline IDispatchPtr TGFrameworkSupport::PMI::GetDatumPoints ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8631)
inline IDispatchPtr TGFrameworkSupport::PMI::GetDatumTargets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8632)
inline IDispatchPtr TGFrameworkSupport::PMI::GetPinSymbols ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8633)
inline IDispatchPtr TGFrameworkSupport::PMI::GetFeatureControlFrames ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8634)
inline IDispatchPtr TGFrameworkSupport::PMI::GetLeaders ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8635)
inline IDispatchPtr TGFrameworkSupport::PMI::GetSurfaceFinishSymbols ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8636)
inline IDispatchPtr TGFrameworkSupport::PMI::GetWeldSymbols ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8637)
inline IDispatchPtr TGFrameworkSupport::PMI::GetGostWeldSymbols ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8638)
inline IDispatchPtr TGFrameworkSupport::PMI::GetSymbolicPMIGroup ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8639)
inline IDispatchPtr TGFrameworkSupport::PMI::GetPMIModelViews ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8640)
inline IDispatchPtr TGFrameworkSupport::PMI::GetCenterMarks ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8641)
inline IDispatchPtr TGFrameworkSupport::PMI::GetCenterLines ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8642)
inline IDispatchPtr TGFrameworkSupport::PMI::GetBoltHoleCircles ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8643)
inline void TGFrameworkSupport::PMI::PutAxis ( IDispatch * _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(8644)
inline IDispatchPtr TGFrameworkSupport::PMI::GetAxis ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8645)
inline HRESULT TGFrameworkSupport::PMI::ClearAxis ( ) {
    return _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(8646)
inline void TGFrameworkSupport::PMI::PutActivePlane ( IDispatch * _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(8647)
inline IDispatchPtr TGFrameworkSupport::PMI::GetActivePlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8648)
inline HRESULT TGFrameworkSupport::PMI::ClearActivePlane ( ) {
    return _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(8649)
inline void TGFrameworkSupport::PMI::PutShowDimensions ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(8650)
inline VARIANT_BOOL TGFrameworkSupport::PMI::GetShowDimensions ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8651)
inline void TGFrameworkSupport::PMI::PutShowAnnotations ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(8652)
inline VARIANT_BOOL TGFrameworkSupport::PMI::GetShowAnnotations ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8653)
inline void TGFrameworkSupport::PMI::PutShow ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(8654)
inline VARIANT_BOOL TGFrameworkSupport::PMI::GetShow ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8655)
inline void TGFrameworkSupport::PMI::PutPMIPixelMode ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(8656)
inline VARIANT_BOOL TGFrameworkSupport::PMI::GetPMIPixelMode ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8657)
inline void TGFrameworkSupport::PMI::PutPMIPixelSize ( int _arg1 ) {
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003", _arg1);
}

#pragma implementation_key(8658)
inline int TGFrameworkSupport::PMI::GetPMIPixelSize ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x19, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8659)
inline IDispatchPtr TGFrameworkSupport::PMI::GetTextBoxes ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

//
// dispinterface SymbolicPMI wrapper method implementations
//

#pragma implementation_key(8660)
inline IDispatchPtr TGFrameworkSupport::SymbolicPMI::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8661)
inline VARIANT_BOOL TGFrameworkSupport::SymbolicPMI::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(8662)
inline TGFramework::ApplicationPtr TGFrameworkSupport::SymbolicPMI::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(8663)
inline long TGFrameworkSupport::SymbolicPMI::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8664)
inline _bstr_t TGFrameworkSupport::SymbolicPMI::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8665)
inline IDispatchPtr TGFrameworkSupport::SymbolicPMI::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8666)
inline long TGFrameworkSupport::SymbolicPMI::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8667)
inline _bstr_t TGFrameworkSupport::SymbolicPMI::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8668)
inline IDispatchPtr TGFrameworkSupport::SymbolicPMI::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8669)
inline HRESULT TGFrameworkSupport::SymbolicPMI::Delete ( ) {
    return _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(8670)
inline HRESULT TGFrameworkSupport::SymbolicPMI::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(8671)
inline HRESULT TGFrameworkSupport::SymbolicPMI::Select ( ) {
    return _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(8672)
inline void TGFrameworkSupport::SymbolicPMI::PutHidePMI ( VARIANT_BOOL _arg1 ) {
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x000b", _arg1);
}

#pragma implementation_key(8673)
inline VARIANT_BOOL TGFrameworkSupport::SymbolicPMI::GetHidePMI ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface SymbolicPMIGroup wrapper method implementations
//

#pragma implementation_key(8674)
inline TGFramework::ApplicationPtr TGFrameworkSupport::SymbolicPMIGroup::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(8675)
inline long TGFrameworkSupport::SymbolicPMIGroup::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8676)
inline IDispatchPtr TGFrameworkSupport::SymbolicPMIGroup::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8677)
inline IDispatchPtr TGFrameworkSupport::SymbolicPMIGroup::Item ( const _variant_t & Index ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return IDispatchPtr(_result, false);
}

//
// dispinterface GostWeldSymbols wrapper method implementations
//

#pragma implementation_key(8678)
inline TGFramework::ApplicationPtr TGFrameworkSupport::GostWeldSymbols::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x27902, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(8679)
inline long TGFrameworkSupport::GostWeldSymbols::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x27903, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8680)
inline IDispatchPtr TGFrameworkSupport::GostWeldSymbols::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x27905, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8681)
inline TGFrameworkSupport::GostWeldSymbolPtr TGFrameworkSupport::GostWeldSymbols::Item ( const _variant_t & Index ) {
    struct GostWeldSymbol * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return GostWeldSymbolPtr(_result, false);
}

#pragma implementation_key(8682)
inline void TGFrameworkSupport::GostWeldSymbols::PutPlane ( IDispatch * _arg1 ) {
    _com_dispatch_method(this, 0x27906, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(8683)
inline IDispatchPtr TGFrameworkSupport::GostWeldSymbols::GetPlane ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x27906, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8684)
inline void TGFrameworkSupport::GostWeldSymbols::PutStyle ( struct DimensionStyle * _arg1 ) {
    _com_dispatch_method(this, 0x27907, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0009", _arg1);
}

#pragma implementation_key(8685)
inline TGFrameworkSupport::DimensionStylePtr TGFrameworkSupport::GostWeldSymbols::GetStyle ( ) {
    struct DimensionStyle * _result = 0;
    _com_dispatch_method(this, 0x27907, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return DimensionStylePtr(_result, false);
}

#pragma implementation_key(8686)
inline TGFrameworkSupport::GostWeldSymbolPtr TGFrameworkSupport::GostWeldSymbols::AddByTerminator ( IDispatch * TerminatorObject, double x1, double y1, double z1, VARIANT_BOOL keyPoint1 ) {
    struct GostWeldSymbol * _result = 0;
    _com_dispatch_method(this, 0x27901, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009\x0005\x0005\x0005\x000b", TerminatorObject, x1, y1, z1, keyPoint1);
    return GostWeldSymbolPtr(_result, false);
}

#pragma implementation_key(8687)
inline HRESULT TGFrameworkSupport::GostWeldSymbols::ClearPlane ( ) {
    return _com_dispatch_method(this, 0x27908, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(8688)
inline HRESULT TGFrameworkSupport::GostWeldSymbols::ClearStyle ( ) {
    return _com_dispatch_method(this, 0x27909, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(8689)
inline TGFrameworkSupport::AnnotInitDataPtr TGFrameworkSupport::GostWeldSymbols::GetAnnotInitData ( ) {
    struct AnnotInitData * _result = 0;
    _com_dispatch_method(this, 0x2790a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return AnnotInitDataPtr(_result, false);
}

#pragma implementation_key(8690)
inline TGFrameworkSupport::GostWeldSymbolPtr TGFrameworkSupport::GostWeldSymbols::AddGostWeldSymbol ( struct AnnotInitData * AnnotInitData ) {
    struct GostWeldSymbol * _result = 0;
    _com_dispatch_method(this, 0x2790b, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0009", AnnotInitData);
    return GostWeldSymbolPtr(_result, false);
}

//
// dispinterface TableStyle wrapper method implementations
//

#pragma implementation_key(8691)
inline void TGFrameworkSupport::TableStyle::PutName ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(8692)
inline _bstr_t TGFrameworkSupport::TableStyle::GetName ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8693)
inline void TGFrameworkSupport::TableStyle::PutTitleTextStyle ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(8694)
inline _bstr_t TGFrameworkSupport::TableStyle::GetTitleTextStyle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8695)
inline void TGFrameworkSupport::TableStyle::PutHeaderTextStyle ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(8696)
inline _bstr_t TGFrameworkSupport::TableStyle::GetHeaderTextStyle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8697)
inline void TGFrameworkSupport::TableStyle::PutDataTextStyle ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(8698)
inline _bstr_t TGFrameworkSupport::TableStyle::GetDataTextStyle ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8699)
inline void TGFrameworkSupport::TableStyle::PutLineColor ( enum TableStyleLineTypeConstants lineType, long _arg2 ) {
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", lineType, _arg2);
}

#pragma implementation_key(8700)
inline long TGFrameworkSupport::TableStyle::GetLineColor ( enum TableStyleLineTypeConstants lineType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", lineType);
    return _result;
}

#pragma implementation_key(8701)
inline void TGFrameworkSupport::TableStyle::PutLineDashType ( enum TableStyleLineTypeConstants lineType, _bstr_t _arg2 ) {
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0008", lineType, (BSTR)_arg2);
}

#pragma implementation_key(8702)
inline _bstr_t TGFrameworkSupport::TableStyle::GetLineDashType ( enum TableStyleLineTypeConstants lineType ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x0003", lineType);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8703)
inline void TGFrameworkSupport::TableStyle::PutLineWidth ( enum TableStyleLineTypeConstants lineType, double _arg2 ) {
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", lineType, _arg2);
}

#pragma implementation_key(8704)
inline double TGFrameworkSupport::TableStyle::GetLineWidth ( enum TableStyleLineTypeConstants lineType ) {
    double _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", lineType);
    return _result;
}

#pragma implementation_key(8705)
inline IDispatchPtr TGFrameworkSupport::TableStyle::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0xfff9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8706)
inline VARIANT_BOOL TGFrameworkSupport::TableStyle::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xfffc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// interface _ITableStyleAuto wrapper method implementations
//

#pragma implementation_key(8707)
inline void TGFrameworkSupport::_ITableStyleAuto::PutName ( _bstr_t Name ) {
    HRESULT _hr = put_Name(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8708)
inline _bstr_t TGFrameworkSupport::_ITableStyleAuto::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8709)
inline void TGFrameworkSupport::_ITableStyleAuto::PutTitleTextStyle ( _bstr_t TitleTextStyle ) {
    HRESULT _hr = put_TitleTextStyle(TitleTextStyle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8710)
inline _bstr_t TGFrameworkSupport::_ITableStyleAuto::GetTitleTextStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TitleTextStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8711)
inline void TGFrameworkSupport::_ITableStyleAuto::PutHeaderTextStyle ( _bstr_t HeaderTextStyle ) {
    HRESULT _hr = put_HeaderTextStyle(HeaderTextStyle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8712)
inline _bstr_t TGFrameworkSupport::_ITableStyleAuto::GetHeaderTextStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HeaderTextStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8713)
inline void TGFrameworkSupport::_ITableStyleAuto::PutDataTextStyle ( _bstr_t DataTextStyle ) {
    HRESULT _hr = put_DataTextStyle(DataTextStyle);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8714)
inline _bstr_t TGFrameworkSupport::_ITableStyleAuto::GetDataTextStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DataTextStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8715)
inline void TGFrameworkSupport::_ITableStyleAuto::PutLineColor ( enum TableStyleLineTypeConstants lineType, long val ) {
    HRESULT _hr = put_LineColor(lineType, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8716)
inline long TGFrameworkSupport::_ITableStyleAuto::GetLineColor ( enum TableStyleLineTypeConstants lineType ) {
    long _result = 0;
    HRESULT _hr = get_LineColor(lineType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8717)
inline void TGFrameworkSupport::_ITableStyleAuto::PutLineDashType ( enum TableStyleLineTypeConstants lineType, _bstr_t val ) {
    HRESULT _hr = put_LineDashType(lineType, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8718)
inline _bstr_t TGFrameworkSupport::_ITableStyleAuto::GetLineDashType ( enum TableStyleLineTypeConstants lineType ) {
    BSTR _result = 0;
    HRESULT _hr = get_LineDashType(lineType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8719)
inline void TGFrameworkSupport::_ITableStyleAuto::PutLineWidth ( enum TableStyleLineTypeConstants lineType, double val ) {
    HRESULT _hr = put_LineWidth(lineType, val);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8720)
inline double TGFrameworkSupport::_ITableStyleAuto::GetLineWidth ( enum TableStyleLineTypeConstants lineType ) {
    double _result = 0;
    HRESULT _hr = get_LineWidth(lineType, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8721)
inline IDispatchPtr TGFrameworkSupport::_ITableStyleAuto::GetAttributeSets ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_AttributeSets(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8722)
inline VARIANT_BOOL TGFrameworkSupport::_ITableStyleAuto::GetIsAttributeSetPresent ( _bstr_t Name ) {
    VARIANT_BOOL _result = 0;
    HRESULT _hr = get_IsAttributeSetPresent(Name, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface TableStyles wrapper method implementations
//

#pragma implementation_key(8723)
inline TGFrameworkSupport::TableStylePtr TGFrameworkSupport::TableStyles::Add ( _bstr_t Name, _bstr_t Parent ) {
    struct TableStyle * _result = 0;
    _com_dispatch_method(this, 0x64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)Parent);
    return TableStylePtr(_result, false);
}

#pragma implementation_key(8724)
inline TGFramework::ApplicationPtr TGFrameworkSupport::TableStyles::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(8725)
inline long TGFrameworkSupport::TableStyles::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8726)
inline IDispatchPtr TGFrameworkSupport::TableStyles::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8727)
inline TGFrameworkSupport::TableStylePtr TGFrameworkSupport::TableStyles::Item ( const _variant_t & Index ) {
    struct TableStyle * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return TableStylePtr(_result, false);
}

#pragma implementation_key(8728)
inline HRESULT TGFrameworkSupport::TableStyles::Remove ( _bstr_t Name ) {
    return _com_dispatch_method(this, 0x65, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)Name);
}

//
// interface _ITableStylesAuto wrapper method implementations
//

#pragma implementation_key(8729)
inline TGFrameworkSupport::TableStylePtr TGFrameworkSupport::_ITableStylesAuto::Add ( _bstr_t Name, _bstr_t Parent ) {
    struct TableStyle * _result = 0;
    HRESULT _hr = raw_Add(Name, Parent, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableStylePtr(_result, false);
}

#pragma implementation_key(8730)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_ITableStylesAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(8731)
inline long TGFrameworkSupport::_ITableStylesAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8732)
inline IDispatchPtr TGFrameworkSupport::_ITableStylesAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8733)
inline TGFrameworkSupport::TableStylePtr TGFrameworkSupport::_ITableStylesAuto::Item ( const _variant_t & Index ) {
    struct TableStyle * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TableStylePtr(_result, false);
}

#pragma implementation_key(8734)
inline HRESULT TGFrameworkSupport::_ITableStylesAuto::Remove ( _bstr_t Name ) {
    HRESULT _hr = raw_Remove(Name);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8735)
inline IUnknownPtr TGFrameworkSupport::_ITableStylesAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

//
// dispinterface Conic2d wrapper method implementations
//

#pragma implementation_key(8736)
inline TGFrameworkSupport::GeometryStyle2dPtr TGFrameworkSupport::Conic2d::GetStyle ( ) {
    struct GeometryStyle2d * _result = 0;
    _com_dispatch_method(this, 0x605f, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return GeometryStyle2dPtr(_result, false);
}

#pragma implementation_key(8737)
inline TGFrameworkSupport::Relationships2dPtr TGFrameworkSupport::Conic2d::GetRelationships ( ) {
    struct Relationships2d * _result = 0;
    _com_dispatch_method(this, 0x6054, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return Relationships2dPtr(_result, false);
}

#pragma implementation_key(8738)
inline _bstr_t TGFrameworkSupport::Conic2d::GetLayer ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x604e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8739)
inline void TGFrameworkSupport::Conic2d::PutLayer ( _bstr_t _arg1 ) {
    _com_dispatch_method(this, 0x604e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0008", (BSTR)_arg1);
}

#pragma implementation_key(8740)
inline TGFramework::ApplicationPtr TGFrameworkSupport::Conic2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x603f, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(8741)
inline long TGFrameworkSupport::Conic2d::GetIndex ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x604b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8742)
inline _bstr_t TGFrameworkSupport::Conic2d::GetName ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x6051, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x000c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8743)
inline IDispatchPtr TGFrameworkSupport::Conic2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x6052, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8744)
inline long TGFrameworkSupport::Conic2d::GetType ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6061, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8745)
inline long TGFrameworkSupport::Conic2d::GetZOrder ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6062, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8746)
inline _bstr_t TGFrameworkSupport::Conic2d::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x604c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&_result, 
        L"\x080c", &Recurse);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8747)
inline IDispatchPtr TGFrameworkSupport::Conic2d::GetDocument ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x6046, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8748)
inline HRESULT TGFrameworkSupport::Conic2d::Copy ( ) {
    return _com_dispatch_method(this, 0x6043, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(8749)
inline HRESULT TGFrameworkSupport::Conic2d::Cut ( ) {
    return _com_dispatch_method(this, 0x6044, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(8750)
inline HRESULT TGFrameworkSupport::Conic2d::Delete ( ) {
    return _com_dispatch_method(this, 0x6045, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(8751)
inline HRESULT TGFrameworkSupport::Conic2d::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    return _com_dispatch_method(this, 0x6050, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", XFrom, YFrom, XTo, YTo);
}

#pragma implementation_key(8752)
inline HRESULT TGFrameworkSupport::Conic2d::Scale ( double Factor ) {
    return _com_dispatch_method(this, 0x6059, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005", Factor);
}

#pragma implementation_key(8753)
inline HRESULT TGFrameworkSupport::Conic2d::Rotate ( double Angle, double x, double y ) {
    return _com_dispatch_method(this, 0x6058, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005", Angle, x, y);
}

#pragma implementation_key(8754)
inline IDispatchPtr TGFrameworkSupport::Conic2d::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x6047, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x080c\x080c", &XDistance, &YDistance);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8755)
inline IDispatchPtr TGFrameworkSupport::Conic2d::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x604f, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x080c", x1, y1, x2, y2, &BooleanCopyFlag);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8756)
inline HRESULT TGFrameworkSupport::Conic2d::SplitAtPoint ( double x, double y, VARIANT * OtherSplitElement ) {
    return _com_dispatch_method(this, 0x6063, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x480c", x, y, OtherSplitElement);
}

#pragma implementation_key(8757)
inline HRESULT TGFrameworkSupport::Conic2d::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    return _com_dispatch_method(this, 0x6053, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005\x4005\x4005", XMinimum, YMinimum, XMaximum, YMaximum);
}

#pragma implementation_key(8758)
inline long TGFrameworkSupport::Conic2d::GetSegmentedStyleCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x605a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8759)
inline HRESULT TGFrameworkSupport::Conic2d::AddSegmentedStyle ( double x1, double y1, double x2, double y2, IDispatch * Style ) {
    return _com_dispatch_method(this, 0x603e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005\x0009", x1, y1, x2, y2, Style);
}

#pragma implementation_key(8760)
inline HRESULT TGFrameworkSupport::Conic2d::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * Style ) {
    return _com_dispatch_method(this, 0x604a, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4005\x4009", Index, x1, y1, x2, y2, Style);
}

#pragma implementation_key(8761)
inline HRESULT TGFrameworkSupport::Conic2d::SetSegmentedStyle ( long Index, IDispatch * Style ) {
    return _com_dispatch_method(this, 0x605e, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x0009", Index, Style);
}

#pragma implementation_key(8762)
inline HRESULT TGFrameworkSupport::Conic2d::RemoveSegmentedStyle ( long Index ) {
    return _com_dispatch_method(this, 0x6057, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", Index);
}

#pragma implementation_key(8763)
inline HRESULT TGFrameworkSupport::Conic2d::RemoveAllSegmentedStyles ( ) {
    return _com_dispatch_method(this, 0x6055, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(8764)
inline HRESULT TGFrameworkSupport::Conic2d::RemoveAllSegmentedStylesBetween ( double x1, double y1, double x2, double y2 ) {
    return _com_dispatch_method(this, 0x6056, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0005\x0005", x1, y1, x2, y2);
}

#pragma implementation_key(8765)
inline HRESULT TGFrameworkSupport::Conic2d::BringToFront ( ) {
    return _com_dispatch_method(this, 0x6041, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(8766)
inline HRESULT TGFrameworkSupport::Conic2d::BringForward ( ) {
    return _com_dispatch_method(this, 0x6040, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(8767)
inline HRESULT TGFrameworkSupport::Conic2d::SendToBack ( ) {
    return _com_dispatch_method(this, 0x605c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(8768)
inline HRESULT TGFrameworkSupport::Conic2d::SendBackward ( ) {
    return _com_dispatch_method(this, 0x605b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

#pragma implementation_key(8769)
inline HRESULT TGFrameworkSupport::Conic2d::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    return _com_dispatch_method(this, 0x6049, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003", Index, x, y, z, KeypointType, HandleType);
}

#pragma implementation_key(8770)
inline HRESULT TGFrameworkSupport::Conic2d::Trim ( double x, double y, IDispatch * CutObj1, const _variant_t & CutObj2 ) {
    return _com_dispatch_method(this, 0x6060, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005\x0009\x080c", x, y, CutObj1, &CutObj2);
}

#pragma implementation_key(8771)
inline HRESULT TGFrameworkSupport::Conic2d::GetStartPoint ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x6064, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(8772)
inline HRESULT TGFrameworkSupport::Conic2d::SetStartPoint ( double x, double y ) {
    return _com_dispatch_method(this, 0x6065, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(8773)
inline HRESULT TGFrameworkSupport::Conic2d::GetEndPoint ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x6068, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(8774)
inline HRESULT TGFrameworkSupport::Conic2d::SetEndPoint ( double x, double y ) {
    return _com_dispatch_method(this, 0x6069, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(8775)
inline HRESULT TGFrameworkSupport::Conic2d::GetControlPoint ( double * x, double * y ) {
    return _com_dispatch_method(this, 0x6066, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4005\x4005", x, y);
}

#pragma implementation_key(8776)
inline HRESULT TGFrameworkSupport::Conic2d::SetControlPoint ( double x, double y ) {
    return _com_dispatch_method(this, 0x6067, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0005\x0005", x, y);
}

#pragma implementation_key(8777)
inline void TGFrameworkSupport::Conic2d::PutRhoValue ( double _arg1 ) {
    _com_dispatch_method(this, 0x606a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0005", _arg1);
}

#pragma implementation_key(8778)
inline double TGFrameworkSupport::Conic2d::GetRhoValue ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x606a, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, NULL);
    return _result;
}

//
// interface _IConic2dAuto wrapper method implementations
//

#pragma implementation_key(8779)
inline TGFrameworkSupport::GeometryStyle2dPtr TGFrameworkSupport::_IConic2dAuto::GetStyle ( ) {
    struct GeometryStyle2d * _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return GeometryStyle2dPtr(_result, false);
}

#pragma implementation_key(8780)
inline TGFrameworkSupport::Relationships2dPtr TGFrameworkSupport::_IConic2dAuto::GetRelationships ( ) {
    struct Relationships2d * _result = 0;
    HRESULT _hr = get_Relationships(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Relationships2dPtr(_result, false);
}

#pragma implementation_key(8781)
inline _bstr_t TGFrameworkSupport::_IConic2dAuto::GetLayer ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Layer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8782)
inline void TGFrameworkSupport::_IConic2dAuto::PutLayer ( _bstr_t Layer ) {
    HRESULT _hr = put_Layer(Layer);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8783)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IConic2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(8784)
inline long TGFrameworkSupport::_IConic2dAuto::GetIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_Index(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8785)
inline _bstr_t TGFrameworkSupport::_IConic2dAuto::GetName ( const _variant_t & Recurse, long Lcid ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(Recurse, Lcid, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8786)
inline IDispatchPtr TGFrameworkSupport::_IConic2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8787)
inline long TGFrameworkSupport::_IConic2dAuto::GetType ( ) {
    long _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8788)
inline long TGFrameworkSupport::_IConic2dAuto::GetZOrder ( ) {
    long _result = 0;
    HRESULT _hr = get_ZOrder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8789)
inline _bstr_t TGFrameworkSupport::_IConic2dAuto::GetKey ( const _variant_t & Recurse ) {
    BSTR _result = 0;
    HRESULT _hr = get_Key(Recurse, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8790)
inline IDispatchPtr TGFrameworkSupport::_IConic2dAuto::GetDocument ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Document(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8791)
inline HRESULT TGFrameworkSupport::_IConic2dAuto::Copy ( ) {
    HRESULT _hr = raw_Copy();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8792)
inline HRESULT TGFrameworkSupport::_IConic2dAuto::Cut ( ) {
    HRESULT _hr = raw_Cut();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8793)
inline HRESULT TGFrameworkSupport::_IConic2dAuto::Delete ( ) {
    HRESULT _hr = raw_Delete();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8794)
inline HRESULT TGFrameworkSupport::_IConic2dAuto::Move ( double XFrom, double YFrom, double XTo, double YTo ) {
    HRESULT _hr = raw_Move(XFrom, YFrom, XTo, YTo);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8795)
inline HRESULT TGFrameworkSupport::_IConic2dAuto::Scale ( double Factor ) {
    HRESULT _hr = raw_Scale(Factor);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8796)
inline HRESULT TGFrameworkSupport::_IConic2dAuto::Rotate ( double Angle, double x, double y ) {
    HRESULT _hr = raw_Rotate(Angle, x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8797)
inline IDispatchPtr TGFrameworkSupport::_IConic2dAuto::Duplicate ( const _variant_t & XDistance, const _variant_t & YDistance ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Duplicate(XDistance, YDistance, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8798)
inline IDispatchPtr TGFrameworkSupport::_IConic2dAuto::Mirror ( double x1, double y1, double x2, double y2, const _variant_t & BooleanCopyFlag ) {
    IDispatch * _result = 0;
    HRESULT _hr = raw_Mirror(x1, y1, x2, y2, BooleanCopyFlag, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8799)
inline HRESULT TGFrameworkSupport::_IConic2dAuto::SplitAtPoint ( double x, double y, VARIANT * OtherSplitElement ) {
    HRESULT _hr = raw_SplitAtPoint(x, y, OtherSplitElement);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8800)
inline HRESULT TGFrameworkSupport::_IConic2dAuto::Range ( double * XMinimum, double * YMinimum, double * XMaximum, double * YMaximum ) {
    HRESULT _hr = raw_Range(XMinimum, YMinimum, XMaximum, YMaximum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8801)
inline long TGFrameworkSupport::_IConic2dAuto::GetSegmentedStyleCount ( ) {
    long _result = 0;
    HRESULT _hr = get_SegmentedStyleCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8802)
inline HRESULT TGFrameworkSupport::_IConic2dAuto::AddSegmentedStyle ( double x1, double y1, double x2, double y2, IDispatch * Style ) {
    HRESULT _hr = raw_AddSegmentedStyle(x1, y1, x2, y2, Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8803)
inline HRESULT TGFrameworkSupport::_IConic2dAuto::GetSegmentedStyle ( long Index, double * x1, double * y1, double * x2, double * y2, IDispatch * * Style ) {
    HRESULT _hr = raw_GetSegmentedStyle(Index, x1, y1, x2, y2, Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8804)
inline HRESULT TGFrameworkSupport::_IConic2dAuto::SetSegmentedStyle ( long Index, IDispatch * Style ) {
    HRESULT _hr = raw_SetSegmentedStyle(Index, Style);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8805)
inline HRESULT TGFrameworkSupport::_IConic2dAuto::RemoveSegmentedStyle ( long Index ) {
    HRESULT _hr = raw_RemoveSegmentedStyle(Index);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8806)
inline HRESULT TGFrameworkSupport::_IConic2dAuto::RemoveAllSegmentedStyles ( ) {
    HRESULT _hr = raw_RemoveAllSegmentedStyles();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8807)
inline HRESULT TGFrameworkSupport::_IConic2dAuto::RemoveAllSegmentedStylesBetween ( double x1, double y1, double x2, double y2 ) {
    HRESULT _hr = raw_RemoveAllSegmentedStylesBetween(x1, y1, x2, y2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8808)
inline HRESULT TGFrameworkSupport::_IConic2dAuto::BringToFront ( ) {
    HRESULT _hr = raw_BringToFront();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8809)
inline HRESULT TGFrameworkSupport::_IConic2dAuto::BringForward ( ) {
    HRESULT _hr = raw_BringForward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8810)
inline HRESULT TGFrameworkSupport::_IConic2dAuto::SendToBack ( ) {
    HRESULT _hr = raw_SendToBack();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8811)
inline HRESULT TGFrameworkSupport::_IConic2dAuto::SendBackward ( ) {
    HRESULT _hr = raw_SendBackward();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8812)
inline HRESULT TGFrameworkSupport::_IConic2dAuto::GetKeyPoint ( long Index, double * x, double * y, double * z, enum TGFramework::KeyPointType * KeypointType, long * HandleType ) {
    HRESULT _hr = raw_GetKeyPoint(Index, x, y, z, KeypointType, HandleType);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8813)
inline HRESULT TGFrameworkSupport::_IConic2dAuto::Trim ( double x, double y, IDispatch * CutObj1, const _variant_t & CutObj2 ) {
    HRESULT _hr = raw_Trim(x, y, CutObj1, CutObj2);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8814)
inline HRESULT TGFrameworkSupport::_IConic2dAuto::GetStartPoint ( double * x, double * y ) {
    HRESULT _hr = raw_GetStartPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8815)
inline HRESULT TGFrameworkSupport::_IConic2dAuto::SetStartPoint ( double x, double y ) {
    HRESULT _hr = raw_SetStartPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8816)
inline HRESULT TGFrameworkSupport::_IConic2dAuto::GetEndPoint ( double * x, double * y ) {
    HRESULT _hr = raw_GetEndPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8817)
inline HRESULT TGFrameworkSupport::_IConic2dAuto::SetEndPoint ( double x, double y ) {
    HRESULT _hr = raw_SetEndPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8818)
inline HRESULT TGFrameworkSupport::_IConic2dAuto::GetControlPoint ( double * x, double * y ) {
    HRESULT _hr = raw_GetControlPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8819)
inline HRESULT TGFrameworkSupport::_IConic2dAuto::SetControlPoint ( double x, double y ) {
    HRESULT _hr = raw_SetControlPoint(x, y);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(8820)
inline void TGFrameworkSupport::_IConic2dAuto::PutRhoValue ( double RhoValue ) {
    HRESULT _hr = put_RhoValue(RhoValue);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(8821)
inline double TGFrameworkSupport::_IConic2dAuto::GetRhoValue ( ) {
    double _result = 0;
    HRESULT _hr = get_RhoValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

//
// dispinterface Conics2d wrapper method implementations
//

#pragma implementation_key(8822)
inline TGFrameworkSupport::Conic2dPtr TGFrameworkSupport::Conics2d::Item ( const _variant_t & Index ) {
    struct Conic2d * _result = 0;
    _com_dispatch_method(this, 0x0, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x000c", &Index);
    return Conic2dPtr(_result, false);
}

#pragma implementation_key(8823)
inline TGFramework::ApplicationPtr TGFrameworkSupport::Conics2d::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    _com_dispatch_method(this, 0x603a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(8824)
inline long TGFrameworkSupport::Conics2d::GetCount ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x603b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8825)
inline IDispatchPtr TGFrameworkSupport::Conics2d::GetParent ( ) {
    IDispatch * _result = 0;
    _com_dispatch_method(this, 0x603c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8826)
inline TGFrameworkSupport::Conic2dPtr TGFrameworkSupport::Conics2d::AddByThreePointsAndRhoValue ( double xStart, double yStart, double xEnd, double yEnd, double xControl, double yControl, double RhoValue ) {
    struct Conic2d * _result = 0;
    _com_dispatch_method(this, 0x603d, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005\x0005", xStart, yStart, xEnd, yEnd, xControl, yControl, RhoValue);
    return Conic2dPtr(_result, false);
}

//
// interface _IConics2dAuto wrapper method implementations
//

#pragma implementation_key(8827)
inline TGFrameworkSupport::Conic2dPtr TGFrameworkSupport::_IConics2dAuto::Item ( const _variant_t & Index ) {
    struct Conic2d * _result = 0;
    HRESULT _hr = raw_Item(Index, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Conic2dPtr(_result, false);
}

#pragma implementation_key(8828)
inline IUnknownPtr TGFrameworkSupport::_IConics2dAuto::Get_NewEnum ( ) {
    IUnknown * _result = 0;
    HRESULT _hr = get__NewEnum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IUnknownPtr(_result, false);
}

#pragma implementation_key(8829)
inline TGFramework::ApplicationPtr TGFrameworkSupport::_IConics2dAuto::GetApplication ( ) {
    struct TGFramework::Application * _result = 0;
    HRESULT _hr = get_Application(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return TGFramework::ApplicationPtr(_result, false);
}

#pragma implementation_key(8830)
inline long TGFrameworkSupport::_IConics2dAuto::GetCount ( ) {
    long _result = 0;
    HRESULT _hr = get_Count(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(8831)
inline IDispatchPtr TGFrameworkSupport::_IConics2dAuto::GetParent ( ) {
    IDispatch * _result = 0;
    HRESULT _hr = get_Parent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IDispatchPtr(_result, false);
}

#pragma implementation_key(8832)
inline TGFrameworkSupport::Conic2dPtr TGFrameworkSupport::_IConics2dAuto::AddByThreePointsAndRhoValue ( double xStart, double yStart, double xEnd, double yEnd, double xControl, double yControl, double RhoValue ) {
    struct Conic2d * _result = 0;
    HRESULT _hr = raw_AddByThreePointsAndRhoValue(xStart, yStart, xEnd, yEnd, xControl, yControl, RhoValue, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return Conic2dPtr(_result, false);
}

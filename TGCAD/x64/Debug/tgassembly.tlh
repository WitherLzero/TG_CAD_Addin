// Created by Microsoft (R) C/C++ Compiler Version 14.32.31332.0 (017d025e).
//
// D:\visualstudio\project\TGCAD\TGCAD\x64\Debug\tgassembly.tlh
//
// C++ source equivalent of type library tgassembly.tlb
// compiler-generated file - DO NOT EDIT!

//
// Cross-referenced type libraries:
//
//

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

namespace TGAssembly {

//
// Forward references and typedefs
//

struct __declspec(uuid("40c3742b-4d6e-4f28-beb6-a2b100578b29"))
/* LIBID */ __TGAssembly;
struct __declspec(uuid("95135f03-015c-11d2-be0c-080036b4d502"))
/* interface */ _IAssemblyDocumentAuto;
struct __declspec(uuid("ddae90b0-4a6f-11ce-951a-08003601be52"))
/* dispinterface */ Parts;
struct __declspec(uuid("95135f2e-015c-11d2-be0c-080036b4d502"))
/* interface */ _IPartsAuto;
struct __declspec(uuid("ad1c9c00-4a6f-11ce-951a-08003601be52"))
/* dispinterface */ Part;
struct __declspec(uuid("95135f27-015c-11d2-be0c-080036b4d502"))
/* interface */ _IPartAuto;
enum PartStatusConstants;
struct __declspec(uuid("e0046380-54c4-11ce-951a-08003601be52"))
/* dispinterface */ Relations3d;
struct __declspec(uuid("95135f37-015c-11d2-be0c-080036b4d502"))
/* interface */ _IRelations3dAuto;
struct __declspec(uuid("600251c5-e2f4-11d2-bed3-080036b4d502"))
/* dispinterface */ Occurrence;
struct __declspec(uuid("cec85b73-e2f4-11d2-bed3-080036b4d502"))
/* interface */ _IOccurrenceAuto;
enum OccurrenceStatusConstants;
struct __declspec(uuid("00c6bf00-483b-11ce-951a-08003601be52"))
/* dispinterface */ AssemblyDocument;
struct __declspec(uuid("c32a477a-8c85-11d3-9737-0060973828b5"))
/* dispinterface */ SubOccurrences;
struct __declspec(uuid("915ced00-8594-11d3-9736-0060973828b5"))
/* interface */ _ISubOccurrencesAuto;
struct __declspec(uuid("c32a477b-8c85-11d3-9737-0060973828b5"))
/* dispinterface */ SubOccurrence;
struct __declspec(uuid("915ced01-8594-11d3-9736-0060973828b5"))
/* interface */ _ISubOccurrenceAuto;
struct __declspec(uuid("6c7bd538-a2b0-11d3-8049-00c04fa15287"))
/* dispinterface */ TopologyReference;
struct __declspec(uuid("15d1e008-a2a9-11d3-8049-00c04fa15287"))
/* interface */ _ITopologyReferenceAuto;
struct __declspec(uuid("e0db57e8-57c9-44c2-8f02-bdabdd85060e"))
/* dispinterface */ AdjustablePart;
struct __declspec(uuid("b7f4a873-3307-44fb-938b-7002c9ef5f88"))
/* interface */ _IAdjustablePartAuto;
struct __declspec(uuid("56a41246-9b92-11d3-8fd4-00c04fa15548"))
/* dispinterface */ Tube;
struct __declspec(uuid("720508b1-a104-11d3-8fd8-00c04fa15548"))
/* interface */ _ITubeAuto;
enum TubeSegmentAdditionStatusConstants;
enum TubeSegmentRemovalStatusConstants;
enum TubePropertyPidConstants;
struct __declspec(uuid("a5f2ac55-105a-4dca-8f70-dbfb64251907"))
/* dispinterface */ SubassemblyBodies;
struct __declspec(uuid("d0aaadb1-94d6-466e-a57a-d8425503a9ea"))
/* interface */ _ISubassemblyBodiesAuto;
struct __declspec(uuid("ebc9fc09-0804-45a9-92ad-52f2f0ce2ca4"))
/* dispinterface */ SubassemblyBody;
struct __declspec(uuid("498717a0-21fd-468d-8521-3f0bf620d180"))
/* interface */ _ISubassemblyBodyAuto;
enum seAssemblyBodyTypeConstants;
struct __declspec(uuid("5566eaef-db58-467b-a937-94a2ab85c1b5"))
/* dispinterface */ AssemblyBody;
struct __declspec(uuid("904f220f-b259-4c34-9eca-883e50b0ce7c"))
/* interface */ _IAssemblyBodyAuto;
enum OccurrenceSectionedFacetDataConstants;
struct __declspec(uuid("7c4a9134-d124-4eee-a233-aae354844a24"))
/* dispinterface */ InternalComponent;
struct __declspec(uuid("d5726605-a2cb-4e6d-ad1c-58d0da19c7dc"))
/* interface */ _IInternalComponentAuto;
enum InternalComponentTypeConstant;
struct __declspec(uuid("7a654020-9b75-11ce-a2ab-08003601b7ad"))
/* dispinterface */ PlanarRelation3d;
struct __declspec(uuid("95135f57-015c-11d2-be0c-080036b4d502"))
/* interface */ _IPlanarRelation3dAuto;
enum Relation3dStatusConstants;
enum Relation3dDetailedStatusConstants;
struct __declspec(uuid("4e45d7a0-9b76-11ce-a2ab-08003601b7ad"))
/* dispinterface */ AxialRelation3d;
struct __declspec(uuid("95135f4e-015c-11d2-be0c-080036b4d502"))
/* interface */ _IAxialRelation3dAuto;
enum Relation3dOrientationConstants;
enum Relation3dGeometryConstants;
struct __declspec(uuid("e9f86440-187d-11d0-a236-0800364ae802"))
/* dispinterface */ PointRelation3d;
struct __declspec(uuid("95135f42-015c-11d2-be0c-080036b4d502"))
/* interface */ _IPointRelation3dAuto;
struct __declspec(uuid("cbb0bd40-a7c0-11d0-944d-0800364ae802"))
/* dispinterface */ AngularRelation3d;
struct __declspec(uuid("95135f3c-015c-11d2-be0c-080036b4d502"))
/* interface */ _IAngularRelation3dAuto;
struct __declspec(uuid("58e959db-07d0-11d3-986a-0060b0c335a5"))
/* dispinterface */ TangentRelation3d;
struct __declspec(uuid("42325571-7f8f-11d3-a45b-00500471d7ac"))
/* interface */ _ITangentRelation3dAuto;
enum Relation3dGearTypeConstants;
enum Relation3dGearRatioTypeConstants;
struct __declspec(uuid("c07abe02-c644-46d5-a122-640591786172"))
/* dispinterface */ GearRelation3d;
struct __declspec(uuid("b97ef8a2-14fe-4b2f-91da-ff2b3fe54a92"))
/* interface */ _IGearRelation3dAuto;
struct __declspec(uuid("345b0e81-661f-41e2-8b75-7170635277e1"))
/* dispinterface */ CenterPlaneRelation3d;
struct __declspec(uuid("f83be012-da6e-4d31-91da-0ef32bee5a33"))
/* interface */ _ICenterPlaneRelation3dAuto;
struct __declspec(uuid("1c8d5564-d410-4836-a81a-5498b15fe9e5"))
/* dispinterface */ RigidSetRelation3d;
struct __declspec(uuid("82c62c0c-d38c-4f1d-abae-0fbb045893e5"))
/* interface */ _IRigidSetRelation3dAuto;
struct __declspec(uuid("68c77a64-f099-4d24-9a33-e9f9540a5ad6"))
/* dispinterface */ CamFollowerRelation3d;
struct __declspec(uuid("b7d80306-9508-43fc-b5a0-450f47e2a998"))
/* interface */ _ICamFollowerRelation3dAuto;
struct __declspec(uuid("1c8d5433-d410-4836-a81a-5498b15fe9e5"))
/* dispinterface */ PathRelation3d;
struct __declspec(uuid("b7d80455-9508-43fc-b5a0-450f47e2a998"))
/* interface */ _IPathRelation3dAuto;
struct __declspec(uuid("cc8ecc61-dc84-42d8-88a8-5d8a96078f44"))
/* dispinterface */ CoordinateSystemRelation3d;
struct __declspec(uuid("af7ac7d7-4cad-4d18-b0a0-4663104712f5"))
/* interface */ _ICoordinateSystemRelation3dAuto;
enum Relation3dSlotOffsetTypeConstants;
struct __declspec(uuid("373647bf-745c-4533-b55b-bbb0236968fa"))
/* dispinterface */ SlotRelation3d;
struct __declspec(uuid("15da8f2f-15e7-4547-baf7-0d7858b38286"))
/* interface */ _ISlotRelation3dAuto_TG;
struct __declspec(uuid("01525383-c6b1-11ce-8bd2-08003601b7ad"))
/* dispinterface */ PhysicalProperties;
struct __declspec(uuid("95135f33-015c-11d2-be0c-080036b4d502"))
/* interface */ _IPhysicalPropertiesAuto;
struct __declspec(uuid("7ad88cc9-e2f4-11d2-bed3-080036b4d502"))
/* dispinterface */ Occurrences;
struct __declspec(uuid("cec85b6b-e2f4-11d2-bed3-080036b4d502"))
/* interface */ _IOccurrencesAuto;
struct __declspec(uuid("aa0c3293-667e-11d3-aed8-00500471c49e"))
/* dispinterface */ AsmRefPlanes;
struct __declspec(uuid("aa0c3291-667e-11d3-aed8-00500471c49e"))
/* interface */ _IAsmRefPlanesAuto;
struct __declspec(uuid("aa0c3292-667e-11d3-aed8-00500471c49e"))
/* dispinterface */ AsmRefPlane;
struct __declspec(uuid("aa0c3290-667e-11d3-aed8-00500471c49e"))
/* interface */ _IAsmRefPlaneAuto;
enum InterferenceStatusConstants;
struct __declspec(uuid("3c883f04-9bdf-11d3-a473-00500471d7ac"))
/* dispinterface */ Layouts;
struct __declspec(uuid("3c883f02-9bdf-11d3-a473-00500471d7ac"))
/* interface */ _ILayoutsAuto;
struct __declspec(uuid("3c883f03-9bdf-11d3-a473-00500471d7ac"))
/* dispinterface */ Layout;
struct __declspec(uuid("3c883f01-9bdf-11d3-a473-00500471d7ac"))
/* interface */ _ILayoutAuto;
struct __declspec(uuid("56a41243-9b92-11d3-8fd4-00c04fa15548"))
/* dispinterface */ LineSegments;
struct __declspec(uuid("56a41248-9b92-11d3-8fd4-00c04fa15548"))
/* interface */ _ILineSegmentsAuto;
struct __declspec(uuid("56a41244-9b92-11d3-8fd4-00c04fa15548"))
/* dispinterface */ LineSegment;
struct __declspec(uuid("56a41249-9b92-11d3-8fd4-00c04fa15548"))
/* interface */ _ILineSegmentAuto;
struct __declspec(uuid("56a41245-9b92-11d3-8fd4-00c04fa15548"))
/* dispinterface */ Segments;
struct __declspec(uuid("56a41247-9b92-11d3-8fd4-00c04fa15548"))
/* interface */ _ISegmentsAuto;
enum AssemblyGlobalConstants;
struct __declspec(uuid("cb5d5636-3be3-11d4-b991-0004ac969177"))
/* dispinterface */ ArcSegments;
struct __declspec(uuid("2158ea8a-3bdc-11d4-b991-0004ac969177"))
/* interface */ _IArcSegmentsAuto;
struct __declspec(uuid("94f30b5a-2987-11d3-9879-0060b0c335a5"))
/* dispinterface */ ArcSegment;
struct __declspec(uuid("fe02eaf4-372b-11d4-b991-0004ac969177"))
/* interface */ _IArcSegmentAuto;
struct __declspec(uuid("cdfbec64-4628-11d4-b993-0004ac969177"))
/* dispinterface */ SegmentRelations3d;
struct __declspec(uuid("c67bec6e-4169-11d4-b991-0004ac969177"))
/* interface */ _ISegmentRelations3dAuto;
enum SegmentRelation3dGeometryConstants;
enum SegmentRelation3dDirectionConstants;
struct __declspec(uuid("58e959dd-07d0-11d3-986a-0060b0c335a5"))
/* dispinterface */ SegmentDirectionRelation3d;
struct __declspec(uuid("48402b9a-4168-11d4-b991-0004ac969177"))
/* interface */ _ISegmentDirectionRelation3dAuto;
enum SegmentRelation3dStatusConstants;
enum SegmentRelation3dDistanceConstants;
struct __declspec(uuid("58e959de-07d0-11d3-986a-0060b0c335a5"))
/* dispinterface */ SegmentDistanceRelation3d;
struct __declspec(uuid("8a9b7e7c-4168-11d4-b991-0004ac969177"))
/* interface */ _ISegmentDistanceRelation3dAuto;
struct __declspec(uuid("a02dd114-7c20-11d3-a3f4-0004ac96977f"))
/* dispinterface */ SegmentRadiusRelation3d;
struct __declspec(uuid("d108b500-4168-11d4-b991-0004ac969177"))
/* interface */ _ISegmentRadiusRelation3dAuto;
struct __declspec(uuid("8f85534c-36fc-11d4-a420-0004ac96977f"))
/* dispinterface */ SegmentAngularRelation3d;
struct __declspec(uuid("eaec0f60-5e84-11d4-b798-00c04fa15510"))
/* interface */ _ISegmentAngularRelation3dAuto;
struct __declspec(uuid("58e959dc-07d0-11d3-986a-0060b0c335a5"))
/* dispinterface */ SegmentPointRelation3d;
struct __declspec(uuid("fd5182ae-4168-11d4-b991-0004ac969177"))
/* interface */ _ISegmentPointRelation3dAuto;
struct __declspec(uuid("5df5112c-3880-11d3-987e-0060b0c335a5"))
/* dispinterface */ SegmentTangentRelation3d;
struct __declspec(uuid("979eb35e-4169-11d4-b991-0004ac969177"))
/* interface */ _ISegmentTangentRelation3dAuto;
struct __declspec(uuid("dc6efc2a-52b5-11d4-b995-0004ac969177"))
/* dispinterface */ Queries;
struct __declspec(uuid("8d45e7a2-52b6-11d4-b995-0004ac969177"))
/* interface */ _IQueriesAuto;
struct __declspec(uuid("ab912984-52b5-11d4-b995-0004ac969177"))
/* dispinterface */ Query;
struct __declspec(uuid("60b7f5c2-52b6-11d4-b995-0004ac969177"))
/* interface */ _IQueryAuto;
enum QueryScopeConstants;
enum QueryPropertyConstants;
enum QueryConditionConstants;
struct __declspec(uuid("72ba62ee-89f1-4326-9676-4efcf2cf1f66"))
/* dispinterface */ AssemblyFamilyMembers;
struct __declspec(uuid("e45b8c3e-79a5-45e3-bfea-e352b8972afb"))
/* interface */ _IAssemblyFamilyMembersAuto;
struct __declspec(uuid("ff8b1ea6-f7f4-48d7-9fc8-39ee0293d8fd"))
/* dispinterface */ AssemblyFamilyMember;
struct __declspec(uuid("c4b8b7fd-804d-4498-8419-c31f38067fbf"))
/* interface */ _IAssemblyFamilyMemberAuto;
enum AssemblyFamilyMemberPropertyConstants;
enum AssemblyFamilyMemberStatusConstants;
enum AssemblyComponentTypeConstants;
enum AlternateAssemblyTypeConstants;
struct __declspec(uuid("402df72e-e673-11d4-bbd4-00c04f72e273"))
/* dispinterface */ AssemblyPatterns;
struct __declspec(uuid("402df731-e673-11d4-bbd4-00c04f72e273"))
/* interface */ _IAssemblyPatternsAuto;
struct __declspec(uuid("402df72f-e673-11d4-bbd4-00c04f72e273"))
/* dispinterface */ AssemblyPattern;
struct __declspec(uuid("402df730-e673-11d4-bbd4-00c04f72e273"))
/* interface */ _IAssemblyPatternAuto;
struct __declspec(uuid("ae397250-071d-42e9-94ab-7725140a5d98"))
/* dispinterface */ AssemblyPatternOccurrence;
struct __declspec(uuid("93b6f437-c474-41a7-986a-4a32334dbe5a"))
/* interface */ _IAssemblyPatternOccurrenceAuto;
enum AssemblyPatternTypeConstants;
enum PatternOffsetTypeConstants;
struct __declspec(uuid("62ba35e0-0e79-11d5-b9bd-0004ac969177"))
/* dispinterface */ Configurations;
struct __declspec(uuid("67b62350-0e75-11d5-b9bd-0004ac969177"))
/* interface */ _IConfigurationsAuto;
struct __declspec(uuid("7bf47882-0e78-11d5-b9bd-0004ac969177"))
/* dispinterface */ Configuration;
struct __declspec(uuid("775c11b0-0e76-11d5-b9bd-0004ac969177"))
/* interface */ _IConfigurationAuto;
enum ConfigurationTypeConstants;
struct __declspec(uuid("ef92f8c0-4439-485a-870f-4ab555ba5938"))
/* dispinterface */ WireRuns;
struct __declspec(uuid("50c71156-d9f1-4f63-88b7-a9e582b3dd58"))
/* interface */ _IWireRunsAuto;
struct __declspec(uuid("e6d8b4bc-fdff-4373-85ac-c189e3c031f9"))
/* dispinterface */ WireRun;
struct __declspec(uuid("4e7012b2-3f49-455d-bb29-2dca8a7bc94d"))
/* interface */ _IWireRunAuto;
struct __declspec(uuid("830cbd35-5f67-4f05-b0cb-b3fb7ed3764d"))
/* dispinterface */ WirePath;
struct __declspec(uuid("2bfccd10-92df-40e3-98c1-09321182840e"))
/* interface */ _IWirePathAuto;
struct __declspec(uuid("4766979b-eaf1-4b67-a9f9-97f8dd695c32"))
/* dispinterface */ WirePathSegments;
struct __declspec(uuid("9743b0a4-1918-45b6-b49e-78609cdfb1eb"))
/* interface */ _IWirePathSegmentsAuto;
struct __declspec(uuid("59c0a0e8-e6c9-47b9-b8fc-c808eec586f3"))
/* dispinterface */ AssemblyProperty;
struct __declspec(uuid("280173ab-f561-4d0c-b073-0bd5697c1995"))
/* interface */ _IAssemblyPropertyAuto;
enum WirePathConstants;
struct __declspec(uuid("88e1df18-e0ca-460b-b11f-a6b6bab4c8e1"))
/* dispinterface */ WirePathCableMembers;
struct __declspec(uuid("a0208c63-a2bf-4c93-823b-23de14d5b6a0"))
/* interface */ _IWirePathCableMembersAuto;
enum WirePathConstantsEx;
struct __declspec(uuid("e1400cd0-1dd4-4a40-a45c-2239d46c2403"))
/* dispinterface */ WireRunPaths;
struct __declspec(uuid("2e2c305b-0bea-4c53-9131-21156a651b37"))
/* interface */ _IWireRunPathsAuto;
struct __declspec(uuid("6beef21f-eee4-4445-b4fb-ae569d78e7f5"))
/* dispinterface */ WirePaths;
struct __declspec(uuid("2c829edd-6e29-4506-bd1f-631f35ce23da"))
/* interface */ _IWirePathsAuto;
struct __declspec(uuid("282cf056-a43a-453d-9c3a-dec7ce854411"))
/* dispinterface */ AssemblyProperties;
struct __declspec(uuid("cee7ac30-4fa5-4343-99d3-c9e2732eceb6"))
/* interface */ _IAssemblyPropertiesAuto;
struct __declspec(uuid("e4766118-0958-4441-896a-22a8ce1c6853"))
/* dispinterface */ DefaultCustomOccurrenceProperties;
struct __declspec(uuid("d112e397-4035-40d7-b2fd-ecce19c8859e"))
/* interface */ _IDefaultCustomOccurrencePropertiesAuto;
struct __declspec(uuid("3823602a-1748-4108-a76b-6e3f8c6ffd48"))
/* dispinterface */ CurveSegments;
struct __declspec(uuid("09e2b3d5-74de-4b31-8f3f-7c4a885f005e"))
/* interface */ _ICurveSegmentsAuto;
struct __declspec(uuid("553cadf8-5004-43e0-b22f-a592edeb9f4a"))
/* dispinterface */ CurveSegment;
struct __declspec(uuid("f650910d-27cd-4433-91de-bfef005d8262"))
/* interface */ _ICurveSegmentAuto;
enum CurveSegmentValidationConstants;
enum CurveSegmentWhichKeypointsConstants;
enum CurveSegmentPathAdditionStatusConstants;
enum CurveSegmentPathRemovalStatusConstants;
enum AssemblyReportTypeConstants;
struct __declspec(uuid("42c7cb2f-7e5f-4262-b1f7-c0fad057368d"))
/* dispinterface */ VirtualComponentOccurrences;
struct __declspec(uuid("441054dd-ffcd-4926-9750-fd5597828e6b"))
/* interface */ _IVirtualComponentOccurrencesAuto;
struct __declspec(uuid("ba37a3d7-d66a-41b7-8ccd-265f18430739"))
/* dispinterface */ VirtualComponentOccurrence;
struct __declspec(uuid("767ea5ef-e357-43bc-b7f8-cc0b933d31d5"))
/* interface */ _IVirtualComponentOccurrenceAuto;
struct __declspec(uuid("70b1de86-948a-42fe-acb9-a551429dddda"))
/* dispinterface */ VirtualComponent;
struct __declspec(uuid("8af78615-322b-4200-939e-957de506f3a5"))
/* interface */ _IVirtualComponentAuto;
enum VirtualComponentTypeConstants;
enum VirtualComponentPublishConstants;
enum VirtualComponentStatusConstants;
struct __declspec(uuid("d38d0cc0-92d3-46fe-a3f0-27831cd78946"))
/* dispinterface */ StructuralFrames;
struct __declspec(uuid("89968e01-a4b1-41e8-af77-89624125c1e1"))
/* interface */ _IStructuralFramesAuto;
struct __declspec(uuid("4baaa61f-14ef-4f61-8d70-26599f8d4328"))
/* dispinterface */ StructuralFrame;
struct __declspec(uuid("41a4f7e2-a172-491a-8777-aa4eef397c30"))
/* interface */ _IStructuralFrameAuto;
enum StructuralFrameEndConditionConstants;
enum StructuralFrameExtendTrimPositionConstants;
struct __declspec(uuid("fe6a43fd-dbc1-43df-aee0-316a8fc02a1f"))
/* dispinterface */ AssemblyFeatures;
struct __declspec(uuid("3e931595-bf76-4941-8b17-0ab243fc0412"))
/* interface */ _IAssemblyFeaturesAuto;
struct __declspec(uuid("f9bd12a7-6ac8-4bb8-ab14-9a6f00e0b6f7"))
/* dispinterface */ AssemblyFeaturesExtrudedCutouts;
struct __declspec(uuid("231c2134-d7b1-4903-b524-4c017c9b7f07"))
/* interface */ _IAssemblyFeaturesExtrudedCutoutsAuto;
struct __declspec(uuid("f9bd12a7-6ac8-4bb8-ab14-9a6f00e0b6d7"))
/* dispinterface */ AssemblyFeaturesExtrudedCutout;
struct __declspec(uuid("231c2134-d7b1-4903-b524-4c017c9b7f37"))
/* interface */ _IAssemblyFeaturesExtrudedCutoutAuto;
struct __declspec(uuid("f9bd12a7-6ac8-4bb8-ab14-9a6f00e0b6f5"))
/* dispinterface */ AssemblyFeaturesRevolvedCutouts;
struct __declspec(uuid("231c2134-d7b1-4903-b524-4c017c9b7f77"))
/* interface */ _IAssemblyFeaturesRevolvedCutoutsAuto;
struct __declspec(uuid("f9bd12a7-6ac8-4bb8-ab14-9a6f00e0b6c8"))
/* dispinterface */ AssemblyFeaturesRevolvedCutout;
struct __declspec(uuid("231c2134-d7b1-4903-b524-4c017c9b7f47"))
/* interface */ _IAssemblyFeaturesRevolvedCutoutAuto;
struct __declspec(uuid("f9bd12a7-6ac8-4bb8-ab14-9a6f00e0b6f6"))
/* dispinterface */ AssemblyFeaturesHoles;
struct __declspec(uuid("231c2134-d7b1-4903-b524-4c017c9b7f67"))
/* interface */ _IAssemblyFeaturesHolesAuto;
struct __declspec(uuid("f9bd12a7-6ac8-4bb8-ab14-9a6f00e0b6f8"))
/* dispinterface */ AssemblyFeaturesHole;
struct __declspec(uuid("231c2134-d7b1-4903-b524-4c017c9b7f57"))
/* interface */ _IAssemblyFeaturesHoleAuto;
struct __declspec(uuid("f9bd12a7-6ac8-4bb8-ab14-9a6f00e0b6f1"))
/* dispinterface */ AssemblyFeaturesMirrors;
struct __declspec(uuid("231c2134-d7b1-4903-b524-4c017c9b7f11"))
/* interface */ _IAssemblyFeaturesMirrorsAuto;
struct __declspec(uuid("f9bd12a7-6ac8-4bb8-ab14-9a6f00e0b6f3"))
/* dispinterface */ AssemblyFeaturesMirror;
struct __declspec(uuid("231c2134-d7b1-4903-b524-4c017c9b7f61"))
/* interface */ _IAssemblyFeaturesMirrorAuto;
struct __declspec(uuid("f9bd12a7-6ac8-4bb8-ab14-9a6f00e0b6f2"))
/* dispinterface */ AssemblyFeaturesPatterns;
struct __declspec(uuid("231c2134-d7b1-4903-b524-4c017c9b7f13"))
/* interface */ _IAssemblyFeaturesPatternsAuto;
struct __declspec(uuid("f9bd12a7-6ac8-4bb8-ab14-9a6f00e0b4d7"))
/* dispinterface */ AssemblyFeaturesPattern;
struct __declspec(uuid("231c2134-d7b1-4903-b524-4c017c9b7f33"))
/* interface */ _IAssemblyFeaturesPatternAuto;
struct __declspec(uuid("077d07c4-d3a5-4a21-b442-2dd3ecc56189"))
/* dispinterface */ AssemblyFilletWelds;
struct __declspec(uuid("79d13906-774a-4f6f-81d9-e6f8fb83e63b"))
/* interface */ _IAssemblyFilletWeldsAuto;
struct __declspec(uuid("8bb7a85b-5c68-4cf0-aa5d-788b790bb489"))
/* dispinterface */ AssemblyFilletWeld;
struct __declspec(uuid("e711a8bc-8c7c-45ab-86a2-57e0c12537a7"))
/* interface */ _IAssemblyFilletWeldAuto;
struct __declspec(uuid("fd41873a-0011-421a-8e69-16053e2279ab"))
/* dispinterface */ AFGrooveWelds;
struct __declspec(uuid("6ef83357-6ed9-4170-827f-33e642e993ff"))
/* interface */ _IAFGrooveWeldsAuto;
struct __declspec(uuid("bc71e8b8-1aee-484a-b642-20fda2cc7dd7"))
/* dispinterface */ AFGrooveWeld;
struct __declspec(uuid("84a69470-d23c-45b8-b398-f0de3073d6e7"))
/* interface */ _IAFGrooveWeldAuto;
struct __declspec(uuid("aa1ed4ed-767c-4b1c-9f09-52385756e192"))
/* dispinterface */ AssemblyFeaturesSweptProtrusions;
struct __declspec(uuid("4db57fd6-edc4-4525-992f-163440315a06"))
/* interface */ _IAssemblyFeaturesSweptProtrusionsAuto;
struct __declspec(uuid("e167d214-aa7a-4dca-af29-b382cd8a9af0"))
/* dispinterface */ AssemblyFeaturesSweptProtrusion;
struct __declspec(uuid("9f76f45e-dacf-4bca-a62c-99d9e3aa5579"))
/* interface */ _IAssemblyFeaturesSweptProtrusionAuto;
struct __declspec(uuid("70dbf979-0cd7-4ca7-947b-0cd45ca19ad7"))
/* dispinterface */ AssemblyStitchWelds;
struct __declspec(uuid("d96382d9-b340-4207-9946-de2ab8989137"))
/* interface */ _IAssemblyStitchWeldsAuto;
struct __declspec(uuid("4c65f6ca-774c-4fef-84a0-37d1fc24fc02"))
/* dispinterface */ AssemblyStitchWeld;
struct __declspec(uuid("613f6490-7d11-4c94-81e5-cba26ef905d2"))
/* interface */ _IAssemblyStitchWeldAuto;
struct __declspec(uuid("94696b94-15e1-4ebb-9d47-adb11109992a"))
/* dispinterface */ AssemblyThreads;
struct __declspec(uuid("c1548baa-80b9-422b-98f9-ec5c8bdf1ec0"))
/* interface */ _IAssemblyThreadsAuto;
struct __declspec(uuid("e6ef7979-44a8-4935-8c0d-b0363662170d"))
/* dispinterface */ AssemblyThread;
struct __declspec(uuid("866816f1-5f58-4b98-bbd0-44833b0044d7"))
/* interface */ _IAssemblyThreadAuto;
struct __declspec(uuid("46140580-2eb5-4a7d-a84b-259e5895f1b9"))
/* dispinterface */ AssemblyFeaturesExtrudedProtrusions;
struct __declspec(uuid("46eb0321-a0c9-468c-a016-569e2a68ac52"))
/* interface */ _IAssemblyFeaturesExtrudedProtrusionsAuto;
struct __declspec(uuid("0a6803b9-4376-4779-aad5-0738b020876b"))
/* dispinterface */ AssemblyFeaturesExtrudedProtrusion;
struct __declspec(uuid("1eb43baf-5043-41cf-baaf-d580eda53312"))
/* interface */ _IAssemblyFeaturesExtrudedProtrusionAuto;
struct __declspec(uuid("cd32e37a-471c-475c-bd78-e628dac1a79a"))
/* dispinterface */ AssemblyFeaturesRevolvedProtrusions;
struct __declspec(uuid("ba3d6a5e-cc2e-4fd0-8c53-4523856accf5"))
/* interface */ _IAssemblyFeaturesRevolvedProtrusionsAuto;
struct __declspec(uuid("376ccef1-6450-4017-bd54-7bb624fcd2c8"))
/* dispinterface */ AssemblyFeaturesRevolvedProtrusion;
struct __declspec(uuid("473db53b-e5f1-48b8-8109-1195d83c0e4e"))
/* interface */ _IAssemblyFeaturesRevolvedProtrusionAuto;
struct __declspec(uuid("d1fcaacf-a7eb-4aae-a1a9-a62b3e15061e"))
/* dispinterface */ AssemblyLabelWelds;
struct __declspec(uuid("d96383e9-b340-4207-9946-de2ab8989137"))
/* interface */ _IAssemblyLabelWeldsAuto;
struct __declspec(uuid("3c35f6ca-774c-4fef-84a0-37d1fc24fc02"))
/* dispinterface */ AssemblyLabelWeld;
struct __declspec(uuid("444f6490-7d11-4c94-81e5-cba26ef905d2"))
/* interface */ _IAssemblyLabelWeldAuto;
struct __declspec(uuid("3e218f3d-71da-4d8a-9aa7-71ec9d86571e"))
/* dispinterface */ AssemblyDrivenPartFeatures;
struct __declspec(uuid("e1b171ec-3638-4dc2-bc95-4d5073e1cb9f"))
/* interface */ _IAssemblyDrivenPartFeaturesAuto;
struct __declspec(uuid("acab90cd-5bd7-4b44-ae91-8c465ba65229"))
/* dispinterface */ AssemblyDrivenPartFeaturesExtrudedCutouts;
struct __declspec(uuid("231c2134-d7b1-4903-b524-4c017c9b7f14"))
/* interface */ _IAssemblyDrivenPartFeaturesExtrudedCutoutsAuto;
struct __declspec(uuid("acab90cd-5bd7-4b44-ae91-8c465ba65249"))
/* dispinterface */ AssemblyDrivenPartFeaturesExtrudedCutout;
struct __declspec(uuid("231c2134-d7b1-4903-b524-4c017c9b7f34"))
/* interface */ _IAssemblyDrivenPartFeaturesExtrudedCutoutAuto;
struct __declspec(uuid("acab90cd-5bd7-4b44-ae91-8c465ba65228"))
/* dispinterface */ AssemblyDrivenPartFeaturesRevolvedCutouts;
struct __declspec(uuid("231c2134-d7b1-4903-b524-4c017c9b7f15"))
/* interface */ _IAssemblyDrivenPartFeaturesRevolvedCutoutsAuto;
struct __declspec(uuid("acab90cd-5bd7-4b44-ae91-8c465ba65268"))
/* dispinterface */ AssemblyDrivenPartFeaturesRevolvedCutout;
struct __declspec(uuid("231c2134-d7b1-4903-b524-4c017c9b7f35"))
/* interface */ _IAssemblyDrivenPartFeaturesRevolvedCutoutAuto;
struct __declspec(uuid("acab90cd-5bd7-4b44-ae91-8c465ba65223"))
/* dispinterface */ AssemblyDrivenPartFeaturesHoles;
struct __declspec(uuid("231c2134-d7b1-4903-b524-4c017c9b7f16"))
/* interface */ _IAssemblyDrivenPartFeaturesHolesAuto;
struct __declspec(uuid("acab90cd-5bd7-4b44-ae91-8c465ba65273"))
/* dispinterface */ AssemblyDrivenPartFeaturesHole;
struct __declspec(uuid("231c2134-d7b1-4903-b524-4c017c9b7f36"))
/* interface */ _IAssemblyDrivenPartFeaturesHoleAuto;
struct __declspec(uuid("1ea2e5be-5771-4997-8fea-f1555447af8b"))
/* dispinterface */ AssemblyDrivenPartFeaturesTrimTubes;
struct __declspec(uuid("53789303-9a6a-481d-89fe-daa815d9c6bb"))
/* interface */ _IAssemblyDrivenPartFeaturesTrimTubesAuto;
struct __declspec(uuid("3fd4e9f0-4f0f-4eab-85d8-ff9d95e48255"))
/* dispinterface */ AssemblyDrivenPartFeaturesTrimTube;
struct __declspec(uuid("62120da9-e8cb-4b6b-a7f1-b345e7b0030f"))
/* interface */ _IAssemblyDrivenPartFeaturesTrimTubeAuto;
struct __declspec(uuid("bbe010ef-74c6-41dc-aaa0-4b5cab16e317"))
/* dispinterface */ Pipes;
struct __declspec(uuid("3ee1394c-92d5-4823-b3f6-a1a55be6e684"))
/* interface */ _IPipesAuto;
struct __declspec(uuid("e9fa6f43-8e39-44bb-b092-803de2bccde2"))
/* dispinterface */ Pipe;
struct __declspec(uuid("5296e1d3-478e-4a69-9491-2cc51e180fba"))
/* interface */ _IPipeAuto;
enum PipeFittingTypeConstants;
enum PipeFittingEndTreatmentConstants;
struct __declspec(uuid("ff5a2959-c266-4b9d-b91c-5e5b36cfa72b"))
/* dispinterface */ ComponentLayouts;
struct __declspec(uuid("0e5104f4-ab85-4ac1-a913-bdcef6e4abc6"))
/* interface */ _IComponentLayoutsAuto;
struct __declspec(uuid("79851ead-d9b4-404d-abaa-2bd78ecc3436"))
/* dispinterface */ ComponentLayout;
struct __declspec(uuid("ae4adcad-8322-43d3-bd0b-7320edeefb48"))
/* interface */ _IComponentLayoutAuto;
struct __declspec(uuid("3823602a-1748-4108-a76b-6e3f8c6ffd68"))
/* dispinterface */ Paths;
struct __declspec(uuid("09e2b3d5-74de-4b31-8f3f-7c4a885f006e"))
/* interface */ _IPathsAuto;
struct __declspec(uuid("553cadf8-5004-43e0-b22f-a592edeb9f5a"))
/* dispinterface */ Path;
struct __declspec(uuid("f650910d-27cd-4433-91de-bfef005d8271"))
/* interface */ _IPathAuto;
struct __declspec(uuid("eed72be4-1604-450c-afb0-058797320e0b"))
/* dispinterface */ Harnesses;
struct __declspec(uuid("c61724b9-e986-4091-a049-676055c848ec"))
/* interface */ _IHarnessesAuto;
struct __declspec(uuid("fe65fc82-85a6-4e05-afbe-2c3691501058"))
/* dispinterface */ Harness;
struct __declspec(uuid("cee9de92-2531-49ce-82a3-dfb3159a480f"))
/* interface */ _IHarnessAuto;
struct __declspec(uuid("09c8d54b-6720-4e2e-840c-d4628cc848c1"))
/* dispinterface */ Wires;
struct __declspec(uuid("1a643f09-1021-422b-a22e-10cbbc184848"))
/* interface */ _IWiresAuto;
struct __declspec(uuid("2e329ec8-960d-4804-ac0d-50d4b971e86c"))
/* dispinterface */ Wire;
struct __declspec(uuid("61dc3311-8170-4102-b0f6-cbcc43c21fcc"))
/* interface */ _IWireAuto;
enum HarnessTypeConstants;
struct __declspec(uuid("1ebfcf91-8560-4ae2-80e0-bf0e02784074"))
/* dispinterface */ Cables;
struct __declspec(uuid("4c042f07-af0d-4aa5-8b2b-aebef7540c7f"))
/* interface */ _ICablesAuto;
struct __declspec(uuid("d6c0379e-c428-421c-869a-3f2ac94dfb7d"))
/* dispinterface */ Cable;
struct __declspec(uuid("c187d74f-bfe0-4621-8391-3eae1ad0dbbd"))
/* interface */ _ICableAuto;
struct __declspec(uuid("9e4e11ce-71eb-482b-b8e7-f1dfaf52ca85"))
/* dispinterface */ Bundles;
struct __declspec(uuid("45a60e1d-5f32-4fc2-af5b-8685280c6014"))
/* interface */ _IBundlesAuto;
struct __declspec(uuid("0fc27e30-c5d2-41f7-aa1a-5248e6ef70d3"))
/* dispinterface */ Bundle;
struct __declspec(uuid("a92e8a24-c405-48a3-8efc-5d0a1c0ce518"))
/* interface */ _IBundleAuto;
struct __declspec(uuid("dee1d93d-7b22-4689-adb5-2f4cb0ae6f2e"))
/* dispinterface */ Splices;
struct __declspec(uuid("f9badebc-b860-4406-9557-a52f6f9292ba"))
/* interface */ _ISplicesAuto;
struct __declspec(uuid("bd16bbb7-c509-46e9-bb5c-f05cf0284849"))
/* dispinterface */ Splice;
struct __declspec(uuid("c6824c19-5a3d-402e-a4d7-4885021c1772"))
/* interface */ _ISpliceAuto;
enum HarnessSaveAsEcadStatusConstants;
enum SaveAsHarnessTopologyStatusConstants;
enum SaveAsHarnessFileFormats;
enum AssemblyBaseStylesConstants;
enum AssemblyWireHarnessReportTypeConstants;
struct __declspec(uuid("336b4674-2688-4437-8bcc-52c19e6adc91"))
/* dispinterface */ AssemblyBodies;
struct __declspec(uuid("71423bab-f25e-4321-bfe9-240bccde469e"))
/* interface */ _IAssemblyBodiesAuto;
enum AssemblyPathfinderUpdateConstants;
struct __declspec(uuid("80e737d2-e5f4-4e54-bbde-ee0c3773febb"))
/* dispinterface */ Zones;
struct __declspec(uuid("f2aa5b51-20dd-4018-a6f0-3e22d0b091b4"))
/* interface */ _IZonesAuto;
struct __declspec(uuid("8fa6bf9c-4b30-45fb-b229-6ec5dc56d627"))
/* dispinterface */ Zone;
struct __declspec(uuid("9024d2c1-ec72-45db-b82e-b57c1156e862"))
/* interface */ _IZoneAuto;
enum UpdateStructureCacheConstants;
struct __declspec(uuid("b3019a95-39d7-4259-9f64-b5fa06bb26e8"))
/* dispinterface */ FastenerSystems;
struct __declspec(uuid("3f9105cc-ad3f-4e11-a8ae-30d11a0712e4"))
/* interface */ _IFastenerSystemsAuto;
struct __declspec(uuid("91542f2e-0b05-4b1a-96b3-ee0f18fc7955"))
/* dispinterface */ FastenerSystem;
struct __declspec(uuid("5472bb30-50fb-45f5-9ffd-ab00ca34479d"))
/* interface */ _IFastenerSystemAuto;
struct __declspec(uuid("a4390fca-89ed-4321-9ce4-66c863ea9163"))
/* dispinterface */ AssemblyGroups;
struct __declspec(uuid("88850e82-39ee-439c-b966-6ac917ece611"))
/* interface */ _IAssemblyGroupsAuto;
struct __declspec(uuid("a3c25d76-c2e5-4a35-8810-4f35ab5d5f58"))
/* dispinterface */ AssemblyGroup;
struct __declspec(uuid("284c995f-1eab-4233-b8cc-03b455c98ef7"))
/* interface */ _IAssemblyGroupAuto;
enum MoveMultipleMoveTypeConstants;
enum MoveMultipleRelationshipConstants;
struct __declspec(uuid("e87200e9-06fe-4c84-96ca-bb3e7a109826"))
/* dispinterface */ ItemNumbers;
struct __declspec(uuid("ce32775c-e997-4f8e-a061-aebfef8eae67"))
/* interface */ _IItemNumbersAuto;
enum ItemNumberModeConstants;
enum ConstraintReplacementConstants;
struct __declspec(uuid("ceaff9a2-30fc-4b1e-b993-819724d0bae3"))
/* dispinterface */ AssemblyCopies;
struct __declspec(uuid("977a66aa-7a8d-4930-aaea-f4e75ac8d8b9"))
/* interface */ _IAssemblyCopiesAuto;
struct __declspec(uuid("07094198-5fe4-4622-9eaa-b1d1e4604da4"))
/* dispinterface */ AssemblyCopy;
struct __declspec(uuid("43ee6f19-f55b-4ae6-9781-3c99f652796f"))
/* interface */ _IAssemblyCopyAuto;
enum AssemblyCopyStatusConstants;
enum AssemblyCopyTypeConstants;
enum AssemblyCopyComponentConstants;
enum AssemblyCopyActionConstants;
struct __declspec(uuid("90f5847c-3129-48d5-9658-3b3d5bb164c0"))
/* dispinterface */ AssemblyMirrors;
struct __declspec(uuid("7195118a-3a57-4e57-8ba2-f83adb6fa55e"))
/* interface */ _IAssemblyMirrorsAuto;
struct __declspec(uuid("725c9151-af65-40d4-9057-aefdf08f0412"))
/* dispinterface */ AssemblyMirror;
struct __declspec(uuid("9e97e4b2-4e94-4f45-a07b-32f43cbc5a05"))
/* interface */ _IAssemblyMirrorAuto;
struct __declspec(uuid("a9f62364-e17e-49bf-bf1d-feea1b8a14d9"))
/* dispinterface */ SimplifiedAssemblies;
struct __declspec(uuid("d55dde80-57f5-407b-8688-e517b867ff47"))
/* interface */ _ISimplifiedAssembliesAuto;
struct __declspec(uuid("a4cfe769-d9f5-41f1-883e-50444ef4e60f"))
/* dispinterface */ SimplifiedAssembly;
struct __declspec(uuid("9245f921-3184-4d8d-97fa-3cd285a5e8ec"))
/* interface */ _ISimplifiedAssemblyAuto;
enum SimplifiedAssemblyMode;
enum VisibilityBasedSimplifiedAssemblyCopyType;
enum CloneComponentOptions;
enum CloneMatchTypeOptions;
struct __declspec(uuid("9c46df3c-efa7-4cd7-a32a-fd5634366917"))
/* dispinterface */ InternalComponents;
struct __declspec(uuid("85537af3-8543-4305-abbf-a126affe2d26"))
/* interface */ _IInternalComponentsAuto;
struct __declspec(uuid("e0222ce6-8bdc-4f59-8b8f-0c61b0327e11"))
/* dispinterface */ EndCaps;
struct __declspec(uuid("48b679bc-931b-4353-9833-dca42ff4ab8f"))
/* interface */ _IEndCapsAuto;
struct __declspec(uuid("cf304da2-a129-437e-8bbc-e76b146181bd"))
/* dispinterface */ EndCap;
struct __declspec(uuid("cebefdee-007f-4829-ad6f-a03bb0cecf6e"))
/* interface */ _IEndCapAuto;
enum EndCapTypeConstants;
enum EndCapTreatmentConstants;
enum DragComponentAnalysisOptionConstants;
enum DragComponentCollisionOptionConstants;
struct __declspec(uuid("2052b07c-7514-46ac-ba34-39d0d12a4cc7"))
/* dispinterface */ SuppressComponent;
struct __declspec(uuid("8c0abaef-77b5-41a8-9cd7-85d4896fb2ff"))
/* interface */ _ISuppressComponentAuto;
enum AutoExplodeSelectionTypeConstants;
enum AutoExplodeTechniqueConstants;
struct __declspec(uuid("ed61c38f-2a77-4d03-b270-7d93297cff7a"))
/* dispinterface */ AsmCADDirects;
struct __declspec(uuid("f207efdf-caa2-4918-800d-28036b279f2a"))
/* interface */ _IAsmCADDirectsAuto;
struct __declspec(uuid("c7c063a2-bedb-4a2a-9dea-09f14f9f292e"))
/* dispinterface */ AsmCADDirect;
struct __declspec(uuid("5a4a0650-b5fc-4307-af57-4cc578072bc3"))
/* interface */ _IAsmCADDirectAuto;
enum AssemblyFileOpenPartActivationOptions;
enum AssemblyFileOpenSimplificationOptions;
enum AssemblyFileOpenActivateChangedPartOptions;
struct __declspec(uuid("95135f48-015c-11d2-be0c-080036b4d502"))
/* interface */ _IGroundRelation3dAuto;
struct __declspec(uuid("6d4cc840-9b76-11ce-a2ab-08003601b7ad"))
/* dispinterface */ GroundRelation3d;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(Parts, __uuidof(Parts));
_COM_SMARTPTR_TYPEDEF(Part, __uuidof(Part));
_COM_SMARTPTR_TYPEDEF(_IPartsAuto, __uuidof(_IPartsAuto));
_COM_SMARTPTR_TYPEDEF(_IPartAuto, __uuidof(_IPartAuto));
_COM_SMARTPTR_TYPEDEF(Relations3d, __uuidof(Relations3d));
_COM_SMARTPTR_TYPEDEF(Occurrence, __uuidof(Occurrence));
_COM_SMARTPTR_TYPEDEF(AssemblyDocument, __uuidof(AssemblyDocument));
_COM_SMARTPTR_TYPEDEF(SubOccurrences, __uuidof(SubOccurrences));
_COM_SMARTPTR_TYPEDEF(SubOccurrence, __uuidof(SubOccurrence));
_COM_SMARTPTR_TYPEDEF(_ISubOccurrencesAuto, __uuidof(_ISubOccurrencesAuto));
_COM_SMARTPTR_TYPEDEF(TopologyReference, __uuidof(TopologyReference));
_COM_SMARTPTR_TYPEDEF(_ITopologyReferenceAuto, __uuidof(_ITopologyReferenceAuto));
_COM_SMARTPTR_TYPEDEF(AdjustablePart, __uuidof(AdjustablePart));
_COM_SMARTPTR_TYPEDEF(Tube, __uuidof(Tube));
_COM_SMARTPTR_TYPEDEF(_IAdjustablePartAuto, __uuidof(_IAdjustablePartAuto));
_COM_SMARTPTR_TYPEDEF(_ITubeAuto, __uuidof(_ITubeAuto));
_COM_SMARTPTR_TYPEDEF(SubassemblyBodies, __uuidof(SubassemblyBodies));
_COM_SMARTPTR_TYPEDEF(SubassemblyBody, __uuidof(SubassemblyBody));
_COM_SMARTPTR_TYPEDEF(_ISubassemblyBodiesAuto, __uuidof(_ISubassemblyBodiesAuto));
_COM_SMARTPTR_TYPEDEF(AssemblyBody, __uuidof(AssemblyBody));
_COM_SMARTPTR_TYPEDEF(_ISubassemblyBodyAuto, __uuidof(_ISubassemblyBodyAuto));
_COM_SMARTPTR_TYPEDEF(_IAssemblyBodyAuto, __uuidof(_IAssemblyBodyAuto));
_COM_SMARTPTR_TYPEDEF(InternalComponent, __uuidof(InternalComponent));
_COM_SMARTPTR_TYPEDEF(_IOccurrenceAuto, __uuidof(_IOccurrenceAuto));
_COM_SMARTPTR_TYPEDEF(_ISubOccurrenceAuto, __uuidof(_ISubOccurrenceAuto));
_COM_SMARTPTR_TYPEDEF(_IInternalComponentAuto, __uuidof(_IInternalComponentAuto));
_COM_SMARTPTR_TYPEDEF(PlanarRelation3d, __uuidof(PlanarRelation3d));
_COM_SMARTPTR_TYPEDEF(_IPlanarRelation3dAuto, __uuidof(_IPlanarRelation3dAuto));
_COM_SMARTPTR_TYPEDEF(AxialRelation3d, __uuidof(AxialRelation3d));
_COM_SMARTPTR_TYPEDEF(_IAxialRelation3dAuto, __uuidof(_IAxialRelation3dAuto));
_COM_SMARTPTR_TYPEDEF(PointRelation3d, __uuidof(PointRelation3d));
_COM_SMARTPTR_TYPEDEF(_IPointRelation3dAuto, __uuidof(_IPointRelation3dAuto));
_COM_SMARTPTR_TYPEDEF(AngularRelation3d, __uuidof(AngularRelation3d));
_COM_SMARTPTR_TYPEDEF(_IAngularRelation3dAuto, __uuidof(_IAngularRelation3dAuto));
_COM_SMARTPTR_TYPEDEF(TangentRelation3d, __uuidof(TangentRelation3d));
_COM_SMARTPTR_TYPEDEF(_ITangentRelation3dAuto, __uuidof(_ITangentRelation3dAuto));
_COM_SMARTPTR_TYPEDEF(GearRelation3d, __uuidof(GearRelation3d));
_COM_SMARTPTR_TYPEDEF(_IGearRelation3dAuto, __uuidof(_IGearRelation3dAuto));
_COM_SMARTPTR_TYPEDEF(CenterPlaneRelation3d, __uuidof(CenterPlaneRelation3d));
_COM_SMARTPTR_TYPEDEF(_ICenterPlaneRelation3dAuto, __uuidof(_ICenterPlaneRelation3dAuto));
_COM_SMARTPTR_TYPEDEF(RigidSetRelation3d, __uuidof(RigidSetRelation3d));
_COM_SMARTPTR_TYPEDEF(_IRigidSetRelation3dAuto, __uuidof(_IRigidSetRelation3dAuto));
_COM_SMARTPTR_TYPEDEF(CamFollowerRelation3d, __uuidof(CamFollowerRelation3d));
_COM_SMARTPTR_TYPEDEF(_ICamFollowerRelation3dAuto, __uuidof(_ICamFollowerRelation3dAuto));
_COM_SMARTPTR_TYPEDEF(PathRelation3d, __uuidof(PathRelation3d));
_COM_SMARTPTR_TYPEDEF(_IPathRelation3dAuto, __uuidof(_IPathRelation3dAuto));
_COM_SMARTPTR_TYPEDEF(CoordinateSystemRelation3d, __uuidof(CoordinateSystemRelation3d));
_COM_SMARTPTR_TYPEDEF(_ICoordinateSystemRelation3dAuto, __uuidof(_ICoordinateSystemRelation3dAuto));
_COM_SMARTPTR_TYPEDEF(SlotRelation3d, __uuidof(SlotRelation3d));
_COM_SMARTPTR_TYPEDEF(_IRelations3dAuto, __uuidof(_IRelations3dAuto));
_COM_SMARTPTR_TYPEDEF(_ISlotRelation3dAuto_TG, __uuidof(_ISlotRelation3dAuto_TG));
_COM_SMARTPTR_TYPEDEF(PhysicalProperties, __uuidof(PhysicalProperties));
_COM_SMARTPTR_TYPEDEF(_IPhysicalPropertiesAuto, __uuidof(_IPhysicalPropertiesAuto));
_COM_SMARTPTR_TYPEDEF(Occurrences, __uuidof(Occurrences));
_COM_SMARTPTR_TYPEDEF(_IOccurrencesAuto, __uuidof(_IOccurrencesAuto));
_COM_SMARTPTR_TYPEDEF(AsmRefPlanes, __uuidof(AsmRefPlanes));
_COM_SMARTPTR_TYPEDEF(AsmRefPlane, __uuidof(AsmRefPlane));
_COM_SMARTPTR_TYPEDEF(_IAsmRefPlanesAuto, __uuidof(_IAsmRefPlanesAuto));
_COM_SMARTPTR_TYPEDEF(_IAsmRefPlaneAuto, __uuidof(_IAsmRefPlaneAuto));
_COM_SMARTPTR_TYPEDEF(Layouts, __uuidof(Layouts));
_COM_SMARTPTR_TYPEDEF(Layout, __uuidof(Layout));
_COM_SMARTPTR_TYPEDEF(_ILayoutsAuto, __uuidof(_ILayoutsAuto));
_COM_SMARTPTR_TYPEDEF(_ILayoutAuto, __uuidof(_ILayoutAuto));
_COM_SMARTPTR_TYPEDEF(LineSegments, __uuidof(LineSegments));
_COM_SMARTPTR_TYPEDEF(LineSegment, __uuidof(LineSegment));
_COM_SMARTPTR_TYPEDEF(_ILineSegmentsAuto, __uuidof(_ILineSegmentsAuto));
_COM_SMARTPTR_TYPEDEF(_ILineSegmentAuto, __uuidof(_ILineSegmentAuto));
_COM_SMARTPTR_TYPEDEF(Segments, __uuidof(Segments));
_COM_SMARTPTR_TYPEDEF(_ISegmentsAuto, __uuidof(_ISegmentsAuto));
_COM_SMARTPTR_TYPEDEF(ArcSegments, __uuidof(ArcSegments));
_COM_SMARTPTR_TYPEDEF(ArcSegment, __uuidof(ArcSegment));
_COM_SMARTPTR_TYPEDEF(_IArcSegmentsAuto, __uuidof(_IArcSegmentsAuto));
_COM_SMARTPTR_TYPEDEF(_IArcSegmentAuto, __uuidof(_IArcSegmentAuto));
_COM_SMARTPTR_TYPEDEF(SegmentRelations3d, __uuidof(SegmentRelations3d));
_COM_SMARTPTR_TYPEDEF(SegmentDirectionRelation3d, __uuidof(SegmentDirectionRelation3d));
_COM_SMARTPTR_TYPEDEF(_ISegmentDirectionRelation3dAuto, __uuidof(_ISegmentDirectionRelation3dAuto));
_COM_SMARTPTR_TYPEDEF(SegmentDistanceRelation3d, __uuidof(SegmentDistanceRelation3d));
_COM_SMARTPTR_TYPEDEF(_ISegmentDistanceRelation3dAuto, __uuidof(_ISegmentDistanceRelation3dAuto));
_COM_SMARTPTR_TYPEDEF(SegmentRadiusRelation3d, __uuidof(SegmentRadiusRelation3d));
_COM_SMARTPTR_TYPEDEF(_ISegmentRadiusRelation3dAuto, __uuidof(_ISegmentRadiusRelation3dAuto));
_COM_SMARTPTR_TYPEDEF(SegmentAngularRelation3d, __uuidof(SegmentAngularRelation3d));
_COM_SMARTPTR_TYPEDEF(_ISegmentAngularRelation3dAuto, __uuidof(_ISegmentAngularRelation3dAuto));
_COM_SMARTPTR_TYPEDEF(SegmentPointRelation3d, __uuidof(SegmentPointRelation3d));
_COM_SMARTPTR_TYPEDEF(_ISegmentPointRelation3dAuto, __uuidof(_ISegmentPointRelation3dAuto));
_COM_SMARTPTR_TYPEDEF(SegmentTangentRelation3d, __uuidof(SegmentTangentRelation3d));
_COM_SMARTPTR_TYPEDEF(_ISegmentRelations3dAuto, __uuidof(_ISegmentRelations3dAuto));
_COM_SMARTPTR_TYPEDEF(_ISegmentTangentRelation3dAuto, __uuidof(_ISegmentTangentRelation3dAuto));
_COM_SMARTPTR_TYPEDEF(Queries, __uuidof(Queries));
_COM_SMARTPTR_TYPEDEF(Query, __uuidof(Query));
_COM_SMARTPTR_TYPEDEF(_IQueriesAuto, __uuidof(_IQueriesAuto));
_COM_SMARTPTR_TYPEDEF(_IQueryAuto, __uuidof(_IQueryAuto));
_COM_SMARTPTR_TYPEDEF(AssemblyFamilyMembers, __uuidof(AssemblyFamilyMembers));
_COM_SMARTPTR_TYPEDEF(AssemblyFamilyMember, __uuidof(AssemblyFamilyMember));
_COM_SMARTPTR_TYPEDEF(_IAssemblyFamilyMemberAuto, __uuidof(_IAssemblyFamilyMemberAuto));
_COM_SMARTPTR_TYPEDEF(_IAssemblyFamilyMembersAuto, __uuidof(_IAssemblyFamilyMembersAuto));
_COM_SMARTPTR_TYPEDEF(AssemblyPatterns, __uuidof(AssemblyPatterns));
_COM_SMARTPTR_TYPEDEF(AssemblyPattern, __uuidof(AssemblyPattern));
_COM_SMARTPTR_TYPEDEF(AssemblyPatternOccurrence, __uuidof(AssemblyPatternOccurrence));
_COM_SMARTPTR_TYPEDEF(_IAssemblyPatternOccurrenceAuto, __uuidof(_IAssemblyPatternOccurrenceAuto));
_COM_SMARTPTR_TYPEDEF(_IAssemblyPatternsAuto, __uuidof(_IAssemblyPatternsAuto));
_COM_SMARTPTR_TYPEDEF(_IAssemblyPatternAuto, __uuidof(_IAssemblyPatternAuto));
_COM_SMARTPTR_TYPEDEF(Configurations, __uuidof(Configurations));
_COM_SMARTPTR_TYPEDEF(Configuration, __uuidof(Configuration));
_COM_SMARTPTR_TYPEDEF(_IConfigurationsAuto, __uuidof(_IConfigurationsAuto));
_COM_SMARTPTR_TYPEDEF(_IConfigurationAuto, __uuidof(_IConfigurationAuto));
_COM_SMARTPTR_TYPEDEF(WireRuns, __uuidof(WireRuns));
_COM_SMARTPTR_TYPEDEF(WireRun, __uuidof(WireRun));
_COM_SMARTPTR_TYPEDEF(_IWireRunsAuto, __uuidof(_IWireRunsAuto));
_COM_SMARTPTR_TYPEDEF(WirePath, __uuidof(WirePath));
_COM_SMARTPTR_TYPEDEF(WirePathSegments, __uuidof(WirePathSegments));
_COM_SMARTPTR_TYPEDEF(_IWirePathSegmentsAuto, __uuidof(_IWirePathSegmentsAuto));
_COM_SMARTPTR_TYPEDEF(AssemblyProperty, __uuidof(AssemblyProperty));
_COM_SMARTPTR_TYPEDEF(_IAssemblyPropertyAuto, __uuidof(_IAssemblyPropertyAuto));
_COM_SMARTPTR_TYPEDEF(WirePathCableMembers, __uuidof(WirePathCableMembers));
_COM_SMARTPTR_TYPEDEF(_IWirePathCableMembersAuto, __uuidof(_IWirePathCableMembersAuto));
_COM_SMARTPTR_TYPEDEF(_IWirePathAuto, __uuidof(_IWirePathAuto));
_COM_SMARTPTR_TYPEDEF(WireRunPaths, __uuidof(WireRunPaths));
_COM_SMARTPTR_TYPEDEF(_IWireRunAuto, __uuidof(_IWireRunAuto));
_COM_SMARTPTR_TYPEDEF(_IWireRunPathsAuto, __uuidof(_IWireRunPathsAuto));
_COM_SMARTPTR_TYPEDEF(WirePaths, __uuidof(WirePaths));
_COM_SMARTPTR_TYPEDEF(_IWirePathsAuto, __uuidof(_IWirePathsAuto));
_COM_SMARTPTR_TYPEDEF(AssemblyProperties, __uuidof(AssemblyProperties));
_COM_SMARTPTR_TYPEDEF(DefaultCustomOccurrenceProperties, __uuidof(DefaultCustomOccurrenceProperties));
_COM_SMARTPTR_TYPEDEF(_IAssemblyPropertiesAuto, __uuidof(_IAssemblyPropertiesAuto));
_COM_SMARTPTR_TYPEDEF(_IDefaultCustomOccurrencePropertiesAuto, __uuidof(_IDefaultCustomOccurrencePropertiesAuto));
_COM_SMARTPTR_TYPEDEF(CurveSegments, __uuidof(CurveSegments));
_COM_SMARTPTR_TYPEDEF(CurveSegment, __uuidof(CurveSegment));
_COM_SMARTPTR_TYPEDEF(_ICurveSegmentsAuto, __uuidof(_ICurveSegmentsAuto));
_COM_SMARTPTR_TYPEDEF(_ICurveSegmentAuto, __uuidof(_ICurveSegmentAuto));
_COM_SMARTPTR_TYPEDEF(VirtualComponentOccurrences, __uuidof(VirtualComponentOccurrences));
_COM_SMARTPTR_TYPEDEF(VirtualComponentOccurrence, __uuidof(VirtualComponentOccurrence));
_COM_SMARTPTR_TYPEDEF(VirtualComponent, __uuidof(VirtualComponent));
_COM_SMARTPTR_TYPEDEF(_IVirtualComponentAuto, __uuidof(_IVirtualComponentAuto));
_COM_SMARTPTR_TYPEDEF(_IVirtualComponentOccurrenceAuto, __uuidof(_IVirtualComponentOccurrenceAuto));
_COM_SMARTPTR_TYPEDEF(_IVirtualComponentOccurrencesAuto, __uuidof(_IVirtualComponentOccurrencesAuto));
_COM_SMARTPTR_TYPEDEF(StructuralFrames, __uuidof(StructuralFrames));
_COM_SMARTPTR_TYPEDEF(StructuralFrame, __uuidof(StructuralFrame));
_COM_SMARTPTR_TYPEDEF(_IStructuralFramesAuto, __uuidof(_IStructuralFramesAuto));
_COM_SMARTPTR_TYPEDEF(_IStructuralFrameAuto, __uuidof(_IStructuralFrameAuto));
_COM_SMARTPTR_TYPEDEF(AssemblyFeatures, __uuidof(AssemblyFeatures));
_COM_SMARTPTR_TYPEDEF(AssemblyFeaturesExtrudedCutouts, __uuidof(AssemblyFeaturesExtrudedCutouts));
_COM_SMARTPTR_TYPEDEF(AssemblyFeaturesExtrudedCutout, __uuidof(AssemblyFeaturesExtrudedCutout));
_COM_SMARTPTR_TYPEDEF(_IAssemblyFeaturesExtrudedCutoutsAuto, __uuidof(_IAssemblyFeaturesExtrudedCutoutsAuto));
_COM_SMARTPTR_TYPEDEF(_IAssemblyFeaturesExtrudedCutoutAuto, __uuidof(_IAssemblyFeaturesExtrudedCutoutAuto));
_COM_SMARTPTR_TYPEDEF(AssemblyFeaturesRevolvedCutouts, __uuidof(AssemblyFeaturesRevolvedCutouts));
_COM_SMARTPTR_TYPEDEF(AssemblyFeaturesRevolvedCutout, __uuidof(AssemblyFeaturesRevolvedCutout));
_COM_SMARTPTR_TYPEDEF(_IAssemblyFeaturesRevolvedCutoutsAuto, __uuidof(_IAssemblyFeaturesRevolvedCutoutsAuto));
_COM_SMARTPTR_TYPEDEF(_IAssemblyFeaturesRevolvedCutoutAuto, __uuidof(_IAssemblyFeaturesRevolvedCutoutAuto));
_COM_SMARTPTR_TYPEDEF(AssemblyFeaturesHoles, __uuidof(AssemblyFeaturesHoles));
_COM_SMARTPTR_TYPEDEF(AssemblyFeaturesHole, __uuidof(AssemblyFeaturesHole));
_COM_SMARTPTR_TYPEDEF(_IAssemblyFeaturesHolesAuto, __uuidof(_IAssemblyFeaturesHolesAuto));
_COM_SMARTPTR_TYPEDEF(_IAssemblyFeaturesHoleAuto, __uuidof(_IAssemblyFeaturesHoleAuto));
_COM_SMARTPTR_TYPEDEF(AssemblyFeaturesMirrors, __uuidof(AssemblyFeaturesMirrors));
_COM_SMARTPTR_TYPEDEF(AssemblyFeaturesMirror, __uuidof(AssemblyFeaturesMirror));
_COM_SMARTPTR_TYPEDEF(_IAssemblyFeaturesMirrorsAuto, __uuidof(_IAssemblyFeaturesMirrorsAuto));
_COM_SMARTPTR_TYPEDEF(_IAssemblyFeaturesMirrorAuto, __uuidof(_IAssemblyFeaturesMirrorAuto));
_COM_SMARTPTR_TYPEDEF(AssemblyFeaturesPatterns, __uuidof(AssemblyFeaturesPatterns));
_COM_SMARTPTR_TYPEDEF(AssemblyFeaturesPattern, __uuidof(AssemblyFeaturesPattern));
_COM_SMARTPTR_TYPEDEF(_IAssemblyFeaturesPatternsAuto, __uuidof(_IAssemblyFeaturesPatternsAuto));
_COM_SMARTPTR_TYPEDEF(_IAssemblyFeaturesPatternAuto, __uuidof(_IAssemblyFeaturesPatternAuto));
_COM_SMARTPTR_TYPEDEF(AssemblyFilletWelds, __uuidof(AssemblyFilletWelds));
_COM_SMARTPTR_TYPEDEF(AssemblyFilletWeld, __uuidof(AssemblyFilletWeld));
_COM_SMARTPTR_TYPEDEF(_IAssemblyFilletWeldsAuto, __uuidof(_IAssemblyFilletWeldsAuto));
_COM_SMARTPTR_TYPEDEF(_IAssemblyFilletWeldAuto, __uuidof(_IAssemblyFilletWeldAuto));
_COM_SMARTPTR_TYPEDEF(AFGrooveWelds, __uuidof(AFGrooveWelds));
_COM_SMARTPTR_TYPEDEF(AFGrooveWeld, __uuidof(AFGrooveWeld));
_COM_SMARTPTR_TYPEDEF(_IAFGrooveWeldsAuto, __uuidof(_IAFGrooveWeldsAuto));
_COM_SMARTPTR_TYPEDEF(_IAFGrooveWeldAuto, __uuidof(_IAFGrooveWeldAuto));
_COM_SMARTPTR_TYPEDEF(AssemblyFeaturesSweptProtrusions, __uuidof(AssemblyFeaturesSweptProtrusions));
_COM_SMARTPTR_TYPEDEF(AssemblyFeaturesSweptProtrusion, __uuidof(AssemblyFeaturesSweptProtrusion));
_COM_SMARTPTR_TYPEDEF(_IAssemblyFeaturesSweptProtrusionsAuto, __uuidof(_IAssemblyFeaturesSweptProtrusionsAuto));
_COM_SMARTPTR_TYPEDEF(_IAssemblyFeaturesSweptProtrusionAuto, __uuidof(_IAssemblyFeaturesSweptProtrusionAuto));
_COM_SMARTPTR_TYPEDEF(AssemblyStitchWelds, __uuidof(AssemblyStitchWelds));
_COM_SMARTPTR_TYPEDEF(AssemblyStitchWeld, __uuidof(AssemblyStitchWeld));
_COM_SMARTPTR_TYPEDEF(_IAssemblyStitchWeldsAuto, __uuidof(_IAssemblyStitchWeldsAuto));
_COM_SMARTPTR_TYPEDEF(_IAssemblyStitchWeldAuto, __uuidof(_IAssemblyStitchWeldAuto));
_COM_SMARTPTR_TYPEDEF(AssemblyThreads, __uuidof(AssemblyThreads));
_COM_SMARTPTR_TYPEDEF(AssemblyThread, __uuidof(AssemblyThread));
_COM_SMARTPTR_TYPEDEF(_IAssemblyThreadsAuto, __uuidof(_IAssemblyThreadsAuto));
_COM_SMARTPTR_TYPEDEF(_IAssemblyThreadAuto, __uuidof(_IAssemblyThreadAuto));
_COM_SMARTPTR_TYPEDEF(AssemblyFeaturesExtrudedProtrusions, __uuidof(AssemblyFeaturesExtrudedProtrusions));
_COM_SMARTPTR_TYPEDEF(AssemblyFeaturesExtrudedProtrusion, __uuidof(AssemblyFeaturesExtrudedProtrusion));
_COM_SMARTPTR_TYPEDEF(_IAssemblyFeaturesExtrudedProtrusionsAuto, __uuidof(_IAssemblyFeaturesExtrudedProtrusionsAuto));
_COM_SMARTPTR_TYPEDEF(_IAssemblyFeaturesExtrudedProtrusionAuto, __uuidof(_IAssemblyFeaturesExtrudedProtrusionAuto));
_COM_SMARTPTR_TYPEDEF(AssemblyFeaturesRevolvedProtrusions, __uuidof(AssemblyFeaturesRevolvedProtrusions));
_COM_SMARTPTR_TYPEDEF(AssemblyFeaturesRevolvedProtrusion, __uuidof(AssemblyFeaturesRevolvedProtrusion));
_COM_SMARTPTR_TYPEDEF(_IAssemblyFeaturesRevolvedProtrusionsAuto, __uuidof(_IAssemblyFeaturesRevolvedProtrusionsAuto));
_COM_SMARTPTR_TYPEDEF(_IAssemblyFeaturesRevolvedProtrusionAuto, __uuidof(_IAssemblyFeaturesRevolvedProtrusionAuto));
_COM_SMARTPTR_TYPEDEF(AssemblyLabelWelds, __uuidof(AssemblyLabelWelds));
_COM_SMARTPTR_TYPEDEF(_IAssemblyFeaturesAuto, __uuidof(_IAssemblyFeaturesAuto));
_COM_SMARTPTR_TYPEDEF(AssemblyLabelWeld, __uuidof(AssemblyLabelWeld));
_COM_SMARTPTR_TYPEDEF(_IAssemblyLabelWeldsAuto, __uuidof(_IAssemblyLabelWeldsAuto));
_COM_SMARTPTR_TYPEDEF(_IAssemblyLabelWeldAuto, __uuidof(_IAssemblyLabelWeldAuto));
_COM_SMARTPTR_TYPEDEF(AssemblyDrivenPartFeatures, __uuidof(AssemblyDrivenPartFeatures));
_COM_SMARTPTR_TYPEDEF(AssemblyDrivenPartFeaturesExtrudedCutouts, __uuidof(AssemblyDrivenPartFeaturesExtrudedCutouts));
_COM_SMARTPTR_TYPEDEF(AssemblyDrivenPartFeaturesExtrudedCutout, __uuidof(AssemblyDrivenPartFeaturesExtrudedCutout));
_COM_SMARTPTR_TYPEDEF(_IAssemblyDrivenPartFeaturesExtrudedCutoutsAuto, __uuidof(_IAssemblyDrivenPartFeaturesExtrudedCutoutsAuto));
_COM_SMARTPTR_TYPEDEF(_IAssemblyDrivenPartFeaturesExtrudedCutoutAuto, __uuidof(_IAssemblyDrivenPartFeaturesExtrudedCutoutAuto));
_COM_SMARTPTR_TYPEDEF(AssemblyDrivenPartFeaturesRevolvedCutouts, __uuidof(AssemblyDrivenPartFeaturesRevolvedCutouts));
_COM_SMARTPTR_TYPEDEF(AssemblyDrivenPartFeaturesRevolvedCutout, __uuidof(AssemblyDrivenPartFeaturesRevolvedCutout));
_COM_SMARTPTR_TYPEDEF(_IAssemblyDrivenPartFeaturesRevolvedCutoutsAuto, __uuidof(_IAssemblyDrivenPartFeaturesRevolvedCutoutsAuto));
_COM_SMARTPTR_TYPEDEF(_IAssemblyDrivenPartFeaturesRevolvedCutoutAuto, __uuidof(_IAssemblyDrivenPartFeaturesRevolvedCutoutAuto));
_COM_SMARTPTR_TYPEDEF(AssemblyDrivenPartFeaturesHoles, __uuidof(AssemblyDrivenPartFeaturesHoles));
_COM_SMARTPTR_TYPEDEF(AssemblyDrivenPartFeaturesHole, __uuidof(AssemblyDrivenPartFeaturesHole));
_COM_SMARTPTR_TYPEDEF(_IAssemblyDrivenPartFeaturesHolesAuto, __uuidof(_IAssemblyDrivenPartFeaturesHolesAuto));
_COM_SMARTPTR_TYPEDEF(_IAssemblyDrivenPartFeaturesHoleAuto, __uuidof(_IAssemblyDrivenPartFeaturesHoleAuto));
_COM_SMARTPTR_TYPEDEF(AssemblyDrivenPartFeaturesTrimTubes, __uuidof(AssemblyDrivenPartFeaturesTrimTubes));
_COM_SMARTPTR_TYPEDEF(_IAssemblyDrivenPartFeaturesAuto, __uuidof(_IAssemblyDrivenPartFeaturesAuto));
_COM_SMARTPTR_TYPEDEF(AssemblyDrivenPartFeaturesTrimTube, __uuidof(AssemblyDrivenPartFeaturesTrimTube));
_COM_SMARTPTR_TYPEDEF(_IAssemblyDrivenPartFeaturesTrimTubesAuto, __uuidof(_IAssemblyDrivenPartFeaturesTrimTubesAuto));
_COM_SMARTPTR_TYPEDEF(_IAssemblyDrivenPartFeaturesTrimTubeAuto, __uuidof(_IAssemblyDrivenPartFeaturesTrimTubeAuto));
_COM_SMARTPTR_TYPEDEF(Pipes, __uuidof(Pipes));
_COM_SMARTPTR_TYPEDEF(Pipe, __uuidof(Pipe));
_COM_SMARTPTR_TYPEDEF(_IPipesAuto, __uuidof(_IPipesAuto));
_COM_SMARTPTR_TYPEDEF(_IPipeAuto, __uuidof(_IPipeAuto));
_COM_SMARTPTR_TYPEDEF(ComponentLayouts, __uuidof(ComponentLayouts));
_COM_SMARTPTR_TYPEDEF(ComponentLayout, __uuidof(ComponentLayout));
_COM_SMARTPTR_TYPEDEF(_IComponentLayoutsAuto, __uuidof(_IComponentLayoutsAuto));
_COM_SMARTPTR_TYPEDEF(_IComponentLayoutAuto, __uuidof(_IComponentLayoutAuto));
_COM_SMARTPTR_TYPEDEF(Paths, __uuidof(Paths));
_COM_SMARTPTR_TYPEDEF(Path, __uuidof(Path));
_COM_SMARTPTR_TYPEDEF(_IPathsAuto, __uuidof(_IPathsAuto));
_COM_SMARTPTR_TYPEDEF(_IPathAuto, __uuidof(_IPathAuto));
_COM_SMARTPTR_TYPEDEF(Harnesses, __uuidof(Harnesses));
_COM_SMARTPTR_TYPEDEF(Harness, __uuidof(Harness));
_COM_SMARTPTR_TYPEDEF(_IHarnessesAuto, __uuidof(_IHarnessesAuto));
_COM_SMARTPTR_TYPEDEF(Wires, __uuidof(Wires));
_COM_SMARTPTR_TYPEDEF(Wire, __uuidof(Wire));
_COM_SMARTPTR_TYPEDEF(_IWiresAuto, __uuidof(_IWiresAuto));
_COM_SMARTPTR_TYPEDEF(_IWireAuto, __uuidof(_IWireAuto));
_COM_SMARTPTR_TYPEDEF(Cables, __uuidof(Cables));
_COM_SMARTPTR_TYPEDEF(Cable, __uuidof(Cable));
_COM_SMARTPTR_TYPEDEF(_ICablesAuto, __uuidof(_ICablesAuto));
_COM_SMARTPTR_TYPEDEF(_ICableAuto, __uuidof(_ICableAuto));
_COM_SMARTPTR_TYPEDEF(Bundles, __uuidof(Bundles));
_COM_SMARTPTR_TYPEDEF(Bundle, __uuidof(Bundle));
_COM_SMARTPTR_TYPEDEF(_IBundlesAuto, __uuidof(_IBundlesAuto));
_COM_SMARTPTR_TYPEDEF(_IBundleAuto, __uuidof(_IBundleAuto));
_COM_SMARTPTR_TYPEDEF(Splices, __uuidof(Splices));
_COM_SMARTPTR_TYPEDEF(Splice, __uuidof(Splice));
_COM_SMARTPTR_TYPEDEF(_ISplicesAuto, __uuidof(_ISplicesAuto));
_COM_SMARTPTR_TYPEDEF(_ISpliceAuto, __uuidof(_ISpliceAuto));
_COM_SMARTPTR_TYPEDEF(_IHarnessAuto, __uuidof(_IHarnessAuto));
_COM_SMARTPTR_TYPEDEF(AssemblyBodies, __uuidof(AssemblyBodies));
_COM_SMARTPTR_TYPEDEF(_IAssemblyBodiesAuto, __uuidof(_IAssemblyBodiesAuto));
_COM_SMARTPTR_TYPEDEF(Zones, __uuidof(Zones));
_COM_SMARTPTR_TYPEDEF(Zone, __uuidof(Zone));
_COM_SMARTPTR_TYPEDEF(_IZonesAuto, __uuidof(_IZonesAuto));
_COM_SMARTPTR_TYPEDEF(_IZoneAuto, __uuidof(_IZoneAuto));
_COM_SMARTPTR_TYPEDEF(FastenerSystems, __uuidof(FastenerSystems));
_COM_SMARTPTR_TYPEDEF(FastenerSystem, __uuidof(FastenerSystem));
_COM_SMARTPTR_TYPEDEF(_IFastenerSystemsAuto, __uuidof(_IFastenerSystemsAuto));
_COM_SMARTPTR_TYPEDEF(_IFastenerSystemAuto, __uuidof(_IFastenerSystemAuto));
_COM_SMARTPTR_TYPEDEF(AssemblyGroups, __uuidof(AssemblyGroups));
_COM_SMARTPTR_TYPEDEF(AssemblyGroup, __uuidof(AssemblyGroup));
_COM_SMARTPTR_TYPEDEF(_IAssemblyGroupsAuto, __uuidof(_IAssemblyGroupsAuto));
_COM_SMARTPTR_TYPEDEF(_IAssemblyGroupAuto, __uuidof(_IAssemblyGroupAuto));
_COM_SMARTPTR_TYPEDEF(ItemNumbers, __uuidof(ItemNumbers));
_COM_SMARTPTR_TYPEDEF(_IItemNumbersAuto, __uuidof(_IItemNumbersAuto));
_COM_SMARTPTR_TYPEDEF(AssemblyCopies, __uuidof(AssemblyCopies));
_COM_SMARTPTR_TYPEDEF(AssemblyCopy, __uuidof(AssemblyCopy));
_COM_SMARTPTR_TYPEDEF(_IAssemblyCopiesAuto, __uuidof(_IAssemblyCopiesAuto));
_COM_SMARTPTR_TYPEDEF(_IAssemblyCopyAuto, __uuidof(_IAssemblyCopyAuto));
_COM_SMARTPTR_TYPEDEF(AssemblyMirrors, __uuidof(AssemblyMirrors));
_COM_SMARTPTR_TYPEDEF(AssemblyMirror, __uuidof(AssemblyMirror));
_COM_SMARTPTR_TYPEDEF(_IAssemblyMirrorsAuto, __uuidof(_IAssemblyMirrorsAuto));
_COM_SMARTPTR_TYPEDEF(_IAssemblyMirrorAuto, __uuidof(_IAssemblyMirrorAuto));
_COM_SMARTPTR_TYPEDEF(SimplifiedAssemblies, __uuidof(SimplifiedAssemblies));
_COM_SMARTPTR_TYPEDEF(SimplifiedAssembly, __uuidof(SimplifiedAssembly));
_COM_SMARTPTR_TYPEDEF(_ISimplifiedAssembliesAuto, __uuidof(_ISimplifiedAssembliesAuto));
_COM_SMARTPTR_TYPEDEF(_ISimplifiedAssemblyAuto, __uuidof(_ISimplifiedAssemblyAuto));
_COM_SMARTPTR_TYPEDEF(InternalComponents, __uuidof(InternalComponents));
_COM_SMARTPTR_TYPEDEF(_IInternalComponentsAuto, __uuidof(_IInternalComponentsAuto));
_COM_SMARTPTR_TYPEDEF(EndCaps, __uuidof(EndCaps));
_COM_SMARTPTR_TYPEDEF(EndCap, __uuidof(EndCap));
_COM_SMARTPTR_TYPEDEF(_IEndCapAuto, __uuidof(_IEndCapAuto));
_COM_SMARTPTR_TYPEDEF(_IEndCapsAuto, __uuidof(_IEndCapsAuto));
_COM_SMARTPTR_TYPEDEF(SuppressComponent, __uuidof(SuppressComponent));
_COM_SMARTPTR_TYPEDEF(_ISuppressComponentAuto, __uuidof(_ISuppressComponentAuto));
_COM_SMARTPTR_TYPEDEF(AsmCADDirects, __uuidof(AsmCADDirects));
_COM_SMARTPTR_TYPEDEF(AsmCADDirect, __uuidof(AsmCADDirect));
_COM_SMARTPTR_TYPEDEF(_IAsmCADDirectsAuto, __uuidof(_IAsmCADDirectsAuto));
_COM_SMARTPTR_TYPEDEF(_IAsmCADDirectAuto, __uuidof(_IAsmCADDirectAuto));
_COM_SMARTPTR_TYPEDEF(_IAssemblyDocumentAuto, __uuidof(_IAssemblyDocumentAuto));
_COM_SMARTPTR_TYPEDEF(_IGroundRelation3dAuto, __uuidof(_IGroundRelation3dAuto));
_COM_SMARTPTR_TYPEDEF(GroundRelation3d, __uuidof(GroundRelation3d));

//
// Type library items
//

struct __declspec(uuid("ddae90b0-4a6f-11ce-951a-08003601be52"))
Parts : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    IDispatchPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
    PartPtr Item (
        const _variant_t & Index );
    PartPtr AddByFilename (
        _bstr_t PartFileName );
    PartPtr AddWithTransform (
        _bstr_t PartFileName,
        double OriginX,
        double OriginY,
        double OriginZ,
        double AngleX,
        double AngleY,
        double AngleZ );
    PartPtr AddWithMatrix (
        _bstr_t PartFileName,
        SAFEARRAY * * Matrix );
};

struct __declspec(uuid("ad1c9c00-4a6f-11ce-951a-08003601be52"))
Part : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetPartFileName))
    _bstr_t PartFileName;
    __declspec(property(get=GetPartDocument))
    IDispatchPtr PartDocument;
    __declspec(property(get=GetReferenceOnly,put=PutReferenceOnly))
    VARIANT_BOOL ReferenceOnly;
    __declspec(property(get=GetQuantity,put=PutQuantity))
    long Quantity;
    __declspec(property(get=GetSubassembly))
    VARIANT_BOOL Subassembly;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetRelations3d))
    IDispatchPtr Relations3d;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];
    __declspec(property(get=GetLocatable,put=PutLocatable))
    VARIANT_BOOL Locatable;
    __declspec(property(get=GetStatus))
    enum PartStatusConstants Status;
    __declspec(property(get=GetIncludeInBom,put=PutIncludeInBom))
    VARIANT_BOOL IncludeInBom;
    __declspec(property(get=GetDisplayInDrawings,put=PutDisplayInDrawings))
    VARIANT_BOOL DisplayInDrawings;
    __declspec(property(get=GetDisplayInSubAssembly,put=PutDisplayInSubAssembly))
    VARIANT_BOOL DisplayInSubAssembly;
    __declspec(property(get=GetIsForeign))
    VARIANT_BOOL IsForeign;
    __declspec(property(get=GetIncludeInPhysicalProperties,put=PutIncludeInPhysicalProperties))
    VARIANT_BOOL IncludeInPhysicalProperties;
    __declspec(property(get=GetStyle,put=PutStyle))
    _bstr_t Style;
    __declspec(property(get=GetFaceStyle,put=PutFaceStyle))
    IDispatchPtr FaceStyle;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t _arg1 );
    _bstr_t GetPartFileName ( );
    IDispatchPtr GetPartDocument ( );
    VARIANT_BOOL GetReferenceOnly ( );
    void PutReferenceOnly (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetSubassembly ( );
    enum TGFramework::ObjectType GetType ( );
    long GetQuantity ( );
    void PutQuantity (
        long _arg1 );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL _arg1 );
    HRESULT Select (
        VARIANT_BOOL Replace );
    VARIANT_BOOL GetLocatable ( );
    void PutLocatable (
        VARIANT_BOOL _arg1 );
    HRESULT PutTransform (
        double OriginX,
        double OriginY,
        double OriginZ,
        double AngleX,
        double AngleY,
        double AngleZ );
    HRESULT GetTransform (
        double * OriginX,
        double * OriginY,
        double * OriginZ,
        double * AngleX,
        double * AngleY,
        double * AngleZ );
    enum PartStatusConstants GetStatus ( );
    HRESULT PutOrigin (
        double OriginX,
        double OriginY,
        double OriginZ );
    HRESULT GetOrigin (
        double * OriginX,
        double * OriginY,
        double * OriginZ );
    HRESULT Move (
        double DeltaX,
        double DeltaY,
        double DeltaZ );
    HRESULT Rotate (
        double AxisX1,
        double AxisY1,
        double AxisZ1,
        double AxisX2,
        double AxisY2,
        double AxisZ2,
        double Angle );
    IDispatchPtr GetRelations3d ( );
    HRESULT PutMatrix (
        SAFEARRAY * * Matrix,
        VARIANT_BOOL Replace );
    HRESULT GetMatrix (
        SAFEARRAY * * Matrix );
    VARIANT_BOOL GetIncludeInBom ( );
    void PutIncludeInBom (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayInDrawings ( );
    void PutDisplayInDrawings (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayInSubAssembly ( );
    void PutDisplayInSubAssembly (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetIncludeInPhysicalProperties ( );
    void PutIncludeInPhysicalProperties (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetIsForeign ( );
    HRESULT Replace (
        _bstr_t NewPartFileName,
        VARIANT_BOOL ReplaceAll );
    _bstr_t GetStyle ( );
    void PutStyle (
        _bstr_t _arg1 );
    IDispatchPtr GetFaceStyle ( );
    void PutFaceStyle (
        IDispatch * _arg1 );
    HRESULT MakeWritable ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
};

struct __declspec(uuid("95135f2e-015c-11d2-be0c-080036b4d502"))
_IPartsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IDispatchPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
    PartPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    PartPtr AddByFilename (
        _bstr_t PartFileName );
    PartPtr AddWithTransform (
        _bstr_t PartFileName,
        double OriginX,
        double OriginY,
        double OriginZ,
        double AngleX,
        double AngleY,
        double AngleZ );
    PartPtr AddWithMatrix (
        _bstr_t PartFileName,
        SAFEARRAY * * Matrix );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ IDispatch * * Application ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Part * * Part ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Unknown ) = 0;
      virtual HRESULT __stdcall raw_AddByFilename (
        /*[in]*/ BSTR PartFileName,
        /*[out,retval]*/ struct Part * * Part ) = 0;
      virtual HRESULT __stdcall raw_AddWithTransform (
        /*[in]*/ BSTR PartFileName,
        /*[in]*/ double OriginX,
        /*[in]*/ double OriginY,
        /*[in]*/ double OriginZ,
        /*[in]*/ double AngleX,
        /*[in]*/ double AngleY,
        /*[in]*/ double AngleZ,
        /*[out,retval]*/ struct Part * * Part ) = 0;
      virtual HRESULT __stdcall raw_AddWithMatrix (
        /*[in]*/ BSTR PartFileName,
        /*[in]*/ SAFEARRAY * * Matrix,
        /*[out,retval]*/ struct Part * * Part ) = 0;
};

enum PartStatusConstants
{
    igPartStatusWellDefined = 1,
    igPartStatusFixed = 2,
    igPartStatusUnderDefined = 4,
    igPartStatusOverDefined = 32776,
    igPartStatusNotConsistent = 32784,
    igPartStatusNotChanged = 32800,
    igPartStatusNonAlgebraic = 32832,
    igPartStatusUnknown = 32896
};

struct __declspec(uuid("95135f27-015c-11d2-be0c-080036b4d502"))
_IPartAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetPartFileName))
    _bstr_t PartFileName;
    __declspec(property(get=GetPartDocument))
    IDispatchPtr PartDocument;
    __declspec(property(get=GetReferenceOnly,put=PutReferenceOnly))
    VARIANT_BOOL ReferenceOnly;
    __declspec(property(get=GetQuantity,put=PutQuantity))
    long Quantity;
    __declspec(property(get=GetSubassembly))
    VARIANT_BOOL Subassembly;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetRelations3d))
    IDispatchPtr Relations3d;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];
    __declspec(property(get=GetLocatable,put=PutLocatable))
    VARIANT_BOOL Locatable;
    __declspec(property(get=GetStatus))
    enum PartStatusConstants Status;
    __declspec(property(get=GetIncludeInBom,put=PutIncludeInBom))
    VARIANT_BOOL IncludeInBom;
    __declspec(property(get=GetDisplayInDrawings,put=PutDisplayInDrawings))
    VARIANT_BOOL DisplayInDrawings;
    __declspec(property(get=GetDisplayInSubAssembly,put=PutDisplayInSubAssembly))
    VARIANT_BOOL DisplayInSubAssembly;
    __declspec(property(get=GetIsForeign))
    VARIANT_BOOL IsForeign;
    __declspec(property(get=GetIncludeInPhysicalProperties,put=PutIncludeInPhysicalProperties))
    VARIANT_BOOL IncludeInPhysicalProperties;
    __declspec(property(get=GetStyle,put=PutStyle))
    _bstr_t Style;
    __declspec(property(get=GetFaceStyle,put=PutFaceStyle))
    IDispatchPtr FaceStyle;

    //
    // Wrapper methods for error-handling
    //

    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    _bstr_t GetPartFileName ( );
    IDispatchPtr GetPartDocument ( );
    VARIANT_BOOL GetReferenceOnly ( );
    void PutReferenceOnly (
        VARIANT_BOOL RefOnly );
    VARIANT_BOOL GetSubassembly ( );
    enum TGFramework::ObjectType GetType ( );
    long GetQuantity ( );
    void PutQuantity (
        long Quantity );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL Visible );
    HRESULT Select (
        VARIANT_BOOL Replace );
    VARIANT_BOOL GetLocatable ( );
    void PutLocatable (
        VARIANT_BOOL Locatable );
    HRESULT PutTransform (
        double OriginX,
        double OriginY,
        double OriginZ,
        double AngleX,
        double AngleY,
        double AngleZ );
    HRESULT GetTransform (
        double * OriginX,
        double * OriginY,
        double * OriginZ,
        double * AngleX,
        double * AngleY,
        double * AngleZ );
    enum PartStatusConstants GetStatus ( );
    HRESULT PutOrigin (
        double OriginX,
        double OriginY,
        double OriginZ );
    HRESULT GetOrigin (
        double * OriginX,
        double * OriginY,
        double * OriginZ );
    HRESULT Move (
        double DeltaX,
        double DeltaY,
        double DeltaZ );
    HRESULT Rotate (
        double AxisX1,
        double AxisY1,
        double AxisZ1,
        double AxisX2,
        double AxisY2,
        double AxisZ2,
        double Angle );
    IDispatchPtr GetRelations3d ( );
    HRESULT PutMatrix (
        SAFEARRAY * * Matrix,
        VARIANT_BOOL Replace );
    HRESULT GetMatrix (
        SAFEARRAY * * Matrix );
    VARIANT_BOOL GetIncludeInBom ( );
    void PutIncludeInBom (
        VARIANT_BOOL IncludeInBom );
    VARIANT_BOOL GetDisplayInDrawings ( );
    void PutDisplayInDrawings (
        VARIANT_BOOL DisplayInDrawings );
    VARIANT_BOOL GetDisplayInSubAssembly ( );
    void PutDisplayInSubAssembly (
        VARIANT_BOOL DisplayInSubAssembly );
    VARIANT_BOOL GetIncludeInPhysicalProperties ( );
    void PutIncludeInPhysicalProperties (
        VARIANT_BOOL IncludeInPhysicalProperties );
    VARIANT_BOOL GetIsForeign ( );
    HRESULT Replace (
        _bstr_t NewPartFileName,
        VARIANT_BOOL ReplaceAll );
    _bstr_t GetStyle ( );
    void PutStyle (
        _bstr_t Style );
    IDispatchPtr GetFaceStyle ( );
    void PutFaceStyle (
        IDispatch * FaceStyle );
    HRESULT MakeWritable ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ IDispatch * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_PartFileName (
        /*[out,retval]*/ BSTR * FileName ) = 0;
      virtual HRESULT __stdcall get_PartDocument (
        /*[out,retval]*/ IDispatch * * PartDocument ) = 0;
      virtual HRESULT __stdcall get_ReferenceOnly (
        /*[out,retval]*/ VARIANT_BOOL * RefOnly ) = 0;
      virtual HRESULT __stdcall put_ReferenceOnly (
        /*[in]*/ VARIANT_BOOL RefOnly ) = 0;
      virtual HRESULT __stdcall get_Subassembly (
        /*[out,retval]*/ VARIANT_BOOL * Subassembly ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall get_Quantity (
        /*[out,retval]*/ long * Quantity ) = 0;
      virtual HRESULT __stdcall put_Quantity (
        /*[in]*/ long Quantity ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall raw_Select (
        /*[in]*/ VARIANT_BOOL Replace ) = 0;
      virtual HRESULT __stdcall get_Locatable (
        /*[out,retval]*/ VARIANT_BOOL * Locatable ) = 0;
      virtual HRESULT __stdcall put_Locatable (
        /*[in]*/ VARIANT_BOOL Locatable ) = 0;
      virtual HRESULT __stdcall raw_PutTransform (
        /*[in]*/ double OriginX,
        /*[in]*/ double OriginY,
        /*[in]*/ double OriginZ,
        /*[in]*/ double AngleX,
        /*[in]*/ double AngleY,
        /*[in]*/ double AngleZ ) = 0;
      virtual HRESULT __stdcall raw_GetTransform (
        /*[out]*/ double * OriginX,
        /*[out]*/ double * OriginY,
        /*[out]*/ double * OriginZ,
        /*[out]*/ double * AngleX,
        /*[out]*/ double * AngleY,
        /*[out]*/ double * AngleZ ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum PartStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall raw_PutOrigin (
        /*[in]*/ double OriginX,
        /*[in]*/ double OriginY,
        /*[in]*/ double OriginZ ) = 0;
      virtual HRESULT __stdcall raw_GetOrigin (
        /*[out]*/ double * OriginX,
        /*[out]*/ double * OriginY,
        /*[out]*/ double * OriginZ ) = 0;
      virtual HRESULT __stdcall raw_Move (
        /*[in]*/ double DeltaX,
        /*[in]*/ double DeltaY,
        /*[in]*/ double DeltaZ ) = 0;
      virtual HRESULT __stdcall raw_Rotate (
        /*[in]*/ double AxisX1,
        /*[in]*/ double AxisY1,
        /*[in]*/ double AxisZ1,
        /*[in]*/ double AxisX2,
        /*[in]*/ double AxisY2,
        /*[in]*/ double AxisZ2,
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall get_Relations3d (
        /*[out,retval]*/ IDispatch * * Relations3d ) = 0;
      virtual HRESULT __stdcall raw_PutMatrix (
        /*[in]*/ SAFEARRAY * * Matrix,
        /*[in]*/ VARIANT_BOOL Replace ) = 0;
      virtual HRESULT __stdcall raw_GetMatrix (
        /*[in,out]*/ SAFEARRAY * * Matrix ) = 0;
      virtual HRESULT __stdcall get_IncludeInBom (
        /*[out,retval]*/ VARIANT_BOOL * IncludeInBom ) = 0;
      virtual HRESULT __stdcall put_IncludeInBom (
        /*[in]*/ VARIANT_BOOL IncludeInBom ) = 0;
      virtual HRESULT __stdcall get_DisplayInDrawings (
        /*[out,retval]*/ VARIANT_BOOL * DisplayInDrawings ) = 0;
      virtual HRESULT __stdcall put_DisplayInDrawings (
        /*[in]*/ VARIANT_BOOL DisplayInDrawings ) = 0;
      virtual HRESULT __stdcall get_DisplayInSubAssembly (
        /*[out,retval]*/ VARIANT_BOOL * DisplayInSubAssembly ) = 0;
      virtual HRESULT __stdcall put_DisplayInSubAssembly (
        /*[in]*/ VARIANT_BOOL DisplayInSubAssembly ) = 0;
      virtual HRESULT __stdcall get_IncludeInPhysicalProperties (
        /*[out,retval]*/ VARIANT_BOOL * IncludeInPhysicalProperties ) = 0;
      virtual HRESULT __stdcall put_IncludeInPhysicalProperties (
        /*[in]*/ VARIANT_BOOL IncludeInPhysicalProperties ) = 0;
      virtual HRESULT __stdcall get_IsForeign (
        /*[out,retval]*/ VARIANT_BOOL * IsForeign ) = 0;
      virtual HRESULT __stdcall raw_Replace (
        /*[in]*/ BSTR NewPartFileName,
        /*[in]*/ VARIANT_BOOL ReplaceAll ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ BSTR * Style ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ BSTR Style ) = 0;
      virtual HRESULT __stdcall get_FaceStyle (
        /*[out,retval]*/ IDispatch * * FaceStyle ) = 0;
      virtual HRESULT __stdcall put_FaceStyle (
        /*[in]*/ IDispatch * FaceStyle ) = 0;
      virtual HRESULT __stdcall raw_MakeWritable ( ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
};

struct __declspec(uuid("e0046380-54c4-11ce-951a-08003601be52"))
Relations3d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    IDispatchPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr Item (
        const _variant_t & Index );
    IDispatchPtr AddGround (
        struct Occurrence * Occurrence );
    PlanarRelation3dPtr AddPlanar (
        IDispatch * Plane1,
        IDispatch * Plane2,
        VARIANT_BOOL NormalsAligned,
        SAFEARRAY * * ConstrainingPoint1,
        SAFEARRAY * * ConstrainingPoint2 );
    AxialRelation3dPtr AddAxial (
        IDispatch * Axis1,
        IDispatch * Axis2,
        VARIANT_BOOL NormalsAligned );
    PointRelation3dPtr AddPoint (
        IDispatch * PointGeometry,
        enum Relation3dGeometryConstants PointKeyPoint,
        IDispatch * ConnectGeometry,
        const _variant_t & ConnectKeyPoint = vtMissing );
    AngularRelation3dPtr AddAngular (
        IDispatch * Element1,
        IDispatch * Element2,
        VARIANT_BOOL ReverseElement1Direction,
        VARIANT_BOOL ReverseElement2Direction,
        IDispatch * MeasureElement1,
        IDispatch * MeasureElement2,
        double Angle,
        VARIANT_BOOL MeasureToPositiveSide,
        VARIANT_BOOL MeasureFromPositiveSide,
        VARIANT_BOOL MeasureCCW );
    PointRelation3dPtr AddPointWithInferredGeometry (
        IDispatch * PointGeometry,
        IDispatch * SketchPoint );
    AxialRelation3dPtr AddAxialWithParallelOffset (
        IDispatch * Axis1,
        IDispatch * Axis2,
        VARIANT_BOOL FixedOffset,
        double Offset );
    TangentRelation3dPtr AddTangent (
        IDispatch * Element1,
        IDispatch * Element2,
        SAFEARRAY * * ConstrainingPoint1,
        SAFEARRAY * * ConstrainingPoint2,
        double Offset,
        VARIANT_BOOL IsHalfSpacePositive );
    GearRelation3dPtr AddGear (
        IDispatch * Element1,
        IDispatch * Element2,
        enum Relation3dGearTypeConstants GearType,
        enum Relation3dGearRatioTypeConstants RatioType,
        double GearRatio1,
        double GearRatio2,
        VARIANT_BOOL Flip );
    CenterPlaneRelation3dPtr AddCenterPlane (
        IDispatch * PlacementElement1,
        IDispatch * PlacementElement2,
        IDispatch * TargetElement1,
        IDispatch * TargetElement2,
        SAFEARRAY * * PlacementConstrainingPoint1,
        SAFEARRAY * * PlacementConstrainingPoint2,
        SAFEARRAY * * TargetConstrainingPoint1,
        SAFEARRAY * * TargetConstrainingPoint2 );
    RigidSetRelation3dPtr AddRigidSet (
        long OccurrenceCount,
        SAFEARRAY * * Occurrences );
    CamFollowerRelation3dPtr AddPlanarCam (
        IDispatch * ConstrainingFollowerElement,
        SAFEARRAY * * ConstrainingCamFaces );
    CamFollowerRelation3dPtr AddBarrelCam (
        IDispatch * ConstrainingFollowerElement,
        SAFEARRAY * * ConstrainingCamEdges );
    PathRelation3dPtr AddPath (
        IDispatch * ConstrainingFollowerElement,
        SAFEARRAY * * ConstrainingCamEdges );
    CoordinateSystemRelation3dPtr AddCoordinateSystem (
        IDispatch * pCoordSystem1,
        IDispatch * pCoordSystem2 );
    SlotRelation3dPtr AddSlot (
        IDispatch * pSlotElement,
        IDispatch * pPinElement,
        enum Relation3dSlotOffsetTypeConstants eSlotOffsetType,
        double dOffset );
};

struct __declspec(uuid("600251c5-e2f4-11d2-bed3-080036b4d502"))
Occurrence : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetDisplayLiveSections,put=PutDisplayLiveSections))
    VARIANT_BOOL DisplayLiveSections;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetPartFileName))
    _bstr_t PartFileName;
    __declspec(property(get=GetPartDocument))
    IDispatchPtr PartDocument;
    __declspec(property(get=GetReferenceOnly,put=PutReferenceOnly))
    VARIANT_BOOL ReferenceOnly;
    __declspec(property(get=GetQuantity,put=PutQuantity))
    long Quantity;
    __declspec(property(get=GetSubassembly))
    VARIANT_BOOL Subassembly;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetDisplayDimensions,put=PutDisplayDimensions))
    VARIANT_BOOL DisplayDimensions;
    __declspec(property(get=GetDisplayAnnotations,put=PutDisplayAnnotations))
    VARIANT_BOOL DisplayAnnotations;
    __declspec(property(get=GetDisplayDesignBody,put=PutDisplayDesignBody))
    VARIANT_BOOL DisplayDesignBody;
    __declspec(property(get=GetCustomPropertyValue,put=PutCustomPropertyValue))
    _bstr_t CustomPropertyValue[];
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetRelations3d))
    IDispatchPtr Relations3d;
    __declspec(property(get=GetOccurrenceID))
    long OccurrenceID;
    __declspec(property(get=GetLocatable,put=PutLocatable))
    VARIANT_BOOL Locatable;
    __declspec(property(get=GetIsInternalComponent))
    VARIANT_BOOL IsInternalComponent;
    __declspec(property(get=GetInternalComponent))
    InternalComponentPtr InternalComponent;
    __declspec(property(get=GetStatus))
    enum OccurrenceStatusConstants Status;
    __declspec(property(get=GetIncludeInBom,put=PutIncludeInBom))
    VARIANT_BOOL IncludeInBom;
    __declspec(property(get=GetDisplayInDrawings,put=PutDisplayInDrawings))
    VARIANT_BOOL DisplayInDrawings;
    __declspec(property(get=GetDisplayInSubAssembly,put=PutDisplayInSubAssembly))
    VARIANT_BOOL DisplayInSubAssembly;
    __declspec(property(get=GetIsForeign))
    VARIANT_BOOL IsForeign;
    __declspec(property(get=GetIncludeInPhysicalProperties,put=PutIncludeInPhysicalProperties))
    VARIANT_BOOL IncludeInPhysicalProperties;
    __declspec(property(get=GetStyle,put=PutStyle))
    _bstr_t Style;
    __declspec(property(get=GetFaceStyle,put=PutFaceStyle))
    IDispatchPtr FaceStyle;
    __declspec(property(get=GetOccurrenceDocument))
    IDispatchPtr OccurrenceDocument;
    __declspec(property(get=GetOccurrenceFileName))
    _bstr_t OccurrenceFileName;
    __declspec(property(get=GetActivate,put=PutActivate))
    VARIANT_BOOL Activate;
    __declspec(property(get=GetTopLevelDocument))
    AssemblyDocumentPtr TopLevelDocument;
    __declspec(property(get=GetSubOccurrences))
    SubOccurrencesPtr SubOccurrences;
    __declspec(property(get=GetNongraphicQuantity,put=PutNongraphicQuantity))
    double NongraphicQuantity;
    __declspec(property(get=GetIsNongraphic))
    VARIANT_BOOL IsNongraphic;
    __declspec(property(get=GetHasNongraphicQuantity))
    VARIANT_BOOL HasNongraphicQuantity;
    __declspec(property(get=GetNongraphicPrecision))
    long NongraphicPrecision;
    __declspec(property(get=GetNongraphicDescription))
    _bstr_t NongraphicDescription;
    __declspec(property(get=GetIsFamilyOfAssembly))
    VARIANT_BOOL IsFamilyOfAssembly;
    __declspec(property(get=GetUseSimplified,put=PutUseSimplified))
    VARIANT_BOOL UseSimplified;
    __declspec(property(get=GetDisplayReferencePlanes,put=PutDisplayReferencePlanes))
    VARIANT_BOOL DisplayReferencePlanes;
    __declspec(property(get=GetDisplayCoordinateSystems,put=PutDisplayCoordinateSystems))
    VARIANT_BOOL DisplayCoordinateSystems;
    __declspec(property(get=GetDisplayConstructions,put=PutDisplayConstructions))
    VARIANT_BOOL DisplayConstructions;
    __declspec(property(get=GetDisplayReferenceAxes,put=PutDisplayReferenceAxes))
    VARIANT_BOOL DisplayReferenceAxes;
    __declspec(property(get=GetDisplaySketches,put=PutDisplaySketches))
    VARIANT_BOOL DisplaySketches;
    __declspec(property(get=GetDisplayAsLastSaved,put=PutDisplayAsLastSaved))
    VARIANT_BOOL DisplayAsLastSaved;
    __declspec(property(get=GetDisplayConstrCurves,put=PutDisplayConstrCurves))
    VARIANT_BOOL DisplayConstrCurves;
    __declspec(property(get=GetAdjustable,put=PutAdjustable))
    VARIANT_BOOL Adjustable;
    __declspec(property(get=GetIsAdjustablePart))
    VARIANT_BOOL IsAdjustablePart;
    __declspec(property(get=GetHasBodyOverride))
    VARIANT_BOOL HasBodyOverride;
    __declspec(property(get=GetBody))
    IDispatchPtr Body;
    __declspec(property(get=GetIsPatterned))
    VARIANT_BOOL IsPatterned;
    __declspec(property(get=GetIsPatternItem))
    VARIANT_BOOL IsPatternItem;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIncludeInInterference,put=PutIncludeInInterference))
    VARIANT_BOOL IncludeInInterference;
    __declspec(property(get=GetDisplayAsReference,put=PutDisplayAsReference))
    VARIANT_BOOL DisplayAsReference;
    __declspec(property(get=GetSubassemblyBodies))
    SubassemblyBodiesPtr SubassemblyBodies;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];
    __declspec(property(get=GetItemNumber,put=PutItemNumber))
    int ItemNumber;
    __declspec(property(get=GetReferencePlanesVisible,put=PutReferencePlanesVisible))
    VARIANT_BOOL ReferencePlanesVisible;
    __declspec(property(get=GetCoordinateSystemsVisible,put=PutCoordinateSystemsVisible))
    VARIANT_BOOL CoordinateSystemsVisible;
    __declspec(property(get=GetSketchesVisible,put=PutSketchesVisible))
    VARIANT_BOOL SketchesVisible;
    __declspec(property(get=GetHasUserDefinedName))
    VARIANT_BOOL HasUserDefinedName;
    __declspec(property(get=GetIsStructuralFrameItem))
    VARIANT_BOOL IsStructuralFrameItem;
    __declspec(property(get=GetIsWire))
    VARIANT_BOOL IsWire;
    __declspec(property(get=GetIsPipeFitting))
    VARIANT_BOOL IsPipeFitting;
    __declspec(property(get=GetIsPipeSegment))
    VARIANT_BOOL IsPipeSegment;
    __declspec(property(get=GetIsFastenerSystemItem))
    VARIANT_BOOL IsFastenerSystemItem;
    __declspec(property(get=GetDisplayCenterline,put=PutDisplayCenterline))
    VARIANT_BOOL DisplayCenterline;
    __declspec(property(get=GetNodeType))
    enum TGFramework::ObjectType NodeType;
    __declspec(property(get=GetIsCopy))
    VARIANT_BOOL IsCopy;
    __declspec(property(get=GetIsFamilyOfParts))
    VARIANT_BOOL IsFamilyOfParts;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t _arg1 );
    _bstr_t GetPartFileName ( );
    IDispatchPtr GetPartDocument ( );
    VARIANT_BOOL GetReferenceOnly ( );
    void PutReferenceOnly (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetSubassembly ( );
    enum TGFramework::ObjectType GetType ( );
    long GetQuantity ( );
    void PutQuantity (
        long _arg1 );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL _arg1 );
    HRESULT Select (
        VARIANT_BOOL Replace );
    VARIANT_BOOL GetLocatable ( );
    void PutLocatable (
        VARIANT_BOOL _arg1 );
    HRESULT PutTransform (
        double OriginX,
        double OriginY,
        double OriginZ,
        double AngleX,
        double AngleY,
        double AngleZ );
    HRESULT GetTransform (
        double * OriginX,
        double * OriginY,
        double * OriginZ,
        double * AngleX,
        double * AngleY,
        double * AngleZ );
    enum OccurrenceStatusConstants GetStatus ( );
    HRESULT PutOrigin (
        double OriginX,
        double OriginY,
        double OriginZ );
    HRESULT GetOrigin (
        double * OriginX,
        double * OriginY,
        double * OriginZ );
    HRESULT Move (
        double DeltaX,
        double DeltaY,
        double DeltaZ );
    HRESULT Rotate (
        double AxisX1,
        double AxisY1,
        double AxisZ1,
        double AxisX2,
        double AxisY2,
        double AxisZ2,
        double Angle );
    IDispatchPtr GetRelations3d ( );
    HRESULT PutMatrix (
        SAFEARRAY * * Matrix,
        VARIANT_BOOL Replace );
    HRESULT GetMatrix (
        SAFEARRAY * * Matrix );
    VARIANT_BOOL GetIncludeInBom ( );
    void PutIncludeInBom (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayInDrawings ( );
    void PutDisplayInDrawings (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayInSubAssembly ( );
    void PutDisplayInSubAssembly (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetIncludeInPhysicalProperties ( );
    void PutIncludeInPhysicalProperties (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetIsForeign ( );
    HRESULT Replace (
        _bstr_t NewOccurrenceFileName,
        VARIANT_BOOL ReplaceAll,
        const _variant_t & NewFamilyMemberName = vtMissing );
    VARIANT_BOOL RenameFileName (
        _bstr_t NewOccurrenceFileName );
    HRESULT Mirror (
        IDispatch * pPlane );
    _bstr_t GetStyle ( );
    void PutStyle (
        _bstr_t _arg1 );
    IDispatchPtr GetFaceStyle ( );
    void PutFaceStyle (
        IDispatch * _arg1 );
    HRESULT MakeWritable ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    _bstr_t GetOccurrenceFileName ( );
    IDispatchPtr GetOccurrenceDocument ( );
    void PutActivate (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetActivate ( );
    AssemblyDocumentPtr GetTopLevelDocument ( );
    HRESULT GetReferenceKey (
        SAFEARRAY * * ReferenceKey,
        VARIANT * KeySize = &vtMissing );
    SubOccurrencesPtr GetSubOccurrences ( );
    HRESULT CreateTopologyReference (
        SAFEARRAY * * ReferenceKey,
        struct TopologyReference * * TopologyReference );
    VARIANT_BOOL IsTube ( );
    TubePtr GetTube ( );
    double GetNongraphicQuantity ( );
    void PutNongraphicQuantity (
        double _arg1 );
    VARIANT_BOOL GetIsNongraphic ( );
    VARIANT_BOOL GetHasNongraphicQuantity ( );
    long GetNongraphicPrecision ( );
    _bstr_t GetNongraphicDescription ( );
    VARIANT_BOOL GetIsFamilyOfAssembly ( );
    HRESULT SwapFamilyMember (
        _bstr_t MemberName,
        VARIANT_BOOL SwapAllOccurrences );
    void PutUseSimplified (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetUseSimplified ( );
    VARIANT_BOOL GetDisplayReferencePlanes ( );
    void PutDisplayReferencePlanes (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayCoordinateSystems ( );
    void PutDisplayCoordinateSystems (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayConstructions ( );
    void PutDisplayConstructions (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayConstrCurves ( );
    void PutDisplayConstrCurves (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayReferenceAxes ( );
    void PutDisplayReferenceAxes (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplaySketches ( );
    void PutDisplaySketches (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayAsLastSaved ( );
    void PutDisplayAsLastSaved (
        VARIANT_BOOL _arg1 );
    void PutAdjustable (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetAdjustable ( );
    IDispatchPtr GetFaceStyle2 (
        VARIANT_BOOL vbHonourPrefs );
    AdjustablePartPtr MakeAdjustablePart ( );
    AdjustablePartPtr GetAdjustablePart ( );
    VARIANT_BOOL GetIsAdjustablePart ( );
    VARIANT_BOOL IsAlternateComponent ( );
    HRESULT AddAlternateComponent (
        _bstr_t AlternateComponentFileName );
    HRESULT RemoveAlternateComponent (
        _bstr_t AlternateComponentFileName );
    HRESULT RemoveAllAlternateComponents ( );
    HRESULT GetAllAlternateComponents (
        long * AlternateComponentCount,
        SAFEARRAY * * AlternateComponentFileNames );
    VARIANT_BOOL GetHasBodyOverride ( );
    IDispatchPtr GetBody ( );
    HRESULT GetSimplifiedBodies (
        long * NumBodies,
        SAFEARRAY * * SimplifiedBodies );
    VARIANT_BOOL GetIsPatterned ( );
    VARIANT_BOOL GetIsPatternItem ( );
    HRESULT CaptureRelationships (
        long RelationshipCount,
        SAFEARRAY * * RelationshipsToCapture );
    HRESULT ClearCapturedRelationships ( );
    HRESULT GetBodyInversionMatrix (
        SAFEARRAY * * InvMatrix );
    VARIANT_BOOL GetIncludeInInterference ( );
    void PutIncludeInInterference (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayAsReference ( );
    void PutDisplayAsReference (
        VARIANT_BOOL _arg1 );
    SubassemblyBodiesPtr GetSubassemblyBodies ( );
    HRESULT GetExplodeMatrix (
        SAFEARRAY * * Matrix );
    HRESULT RemoveOverrideBody ( );
    HRESULT GetRangeBox (
        SAFEARRAY * * MinRangePoint,
        SAFEARRAY * * MaxRangePoint );
    HRESULT RetrieveHoleLocation ( );
    HRESULT DeleteHoleLocation ( );
    HRESULT GetInterpartDrivingOccurrences (
        long * NumDrivingOccurrences,
        SAFEARRAY * * DrivingOccurrences );
    HRESULT GetInterpartDrivenOccurrences (
        long * NumDrivenOccurrences,
        SAFEARRAY * * DrivenOccurrences );
    int GetItemNumber ( );
    void PutItemNumber (
        int _arg1 );
    VARIANT_BOOL GetReferencePlanesVisible ( );
    void PutReferencePlanesVisible (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetCoordinateSystemsVisible ( );
    void PutCoordinateSystemsVisible (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetSketchesVisible ( );
    void PutSketchesVisible (
        VARIANT_BOOL _arg1 );
    HRESULT CreateTopologyReferenceToBodyOverride (
        SAFEARRAY * * ReferenceKey,
        struct TopologyReference * * TopologyReference );
    HRESULT ResetName ( );
    VARIANT_BOOL GetHasUserDefinedName ( );
    VARIANT_BOOL GetIsStructuralFrameItem ( );
    VARIANT_BOOL GetIsWire ( );
    VARIANT_BOOL GetIsPipeFitting ( );
    VARIANT_BOOL GetIsPipeSegment ( );
    VARIANT_BOOL GetIsFastenerSystemItem ( );
    HRESULT Range (
        double * x_min,
        double * y_min,
        double * z_min,
        double * x_max,
        double * y_max,
        double * z_max );
    VARIANT_BOOL GetDisplayCenterline ( );
    void PutDisplayCenterline (
        VARIANT_BOOL _arg1 );
    enum TGFramework::ObjectType GetNodeType ( );
    VARIANT_BOOL GetIsCopy ( );
    VARIANT_BOOL GetIsFamilyOfParts ( );
    HRESULT GetSimplifiedBodies2 (
        long * NumBodies,
        SAFEARRAY * * SimplifiedBodies,
        SAFEARRAY * * Transforms );
    VARIANT_BOOL FileMissing ( );
    VARIANT_BOOL RecheckMissingFile ( );
    VARIANT_BOOL GetDisplayLiveSections ( );
    void PutDisplayLiveSections (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayDimensions ( );
    void PutDisplayDimensions (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayAnnotations ( );
    void PutDisplayAnnotations (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayDesignBody ( );
    void PutDisplayDesignBody (
        VARIANT_BOOL _arg1 );
    _bstr_t GetCustomPropertyValue (
        _bstr_t CustomPropertyName );
    void PutCustomPropertyValue (
        _bstr_t CustomPropertyName,
        _bstr_t _arg2 );
    HRESULT FrameSaveAs (
        _bstr_t FileName );
    HRESULT FrameSaveAsTranslated (
        _bstr_t FileName );
    HRESULT PutStyleUsePartStyle ( );
    HRESULT PutStyleNone ( );
    VARIANT_BOOL GetStyleNone ( );
    VARIANT_BOOL GetStyleUsePartStyle ( );
    _bstr_t FrameSaveAsBiDM (
        _bstr_t FilePath,
        _bstr_t DocumentNumber,
        _bstr_t Revision,
        _bstr_t Title );
    IDispatchPtr BindKeyToTopology (
        VARIANT_BOOL BodyOverride,
        SAFEARRAY * * ReferenceKey );
    long GetOccurrenceID ( );
    HRESULT GetSectionedFacetData (
        long PartID,
        enum OccurrenceSectionedFacetDataConstants * FacetDataPresence,
        long * FacetCount,
        SAFEARRAY * * Points,
        SAFEARRAY * * Normals,
        SAFEARRAY * * TextureCoords,
        SAFEARRAY * * StyleIDs,
        SAFEARRAY * * FaceIDs );
    HRESULT CutLength (
        double * dCutLength );
    HRESULT MiterCut (
        double * MiterCut1,
        double * MiterCut2 );
    HRESULT SideFaceEndAngle (
        double * SideFaceEndAngle1,
        double * SideFaceEndAngle2 );
    HRESULT EndFaceEndAngle (
        double * EndFaceEndAngle1,
        double * EndFaceEndAngle2 );
    VARIANT_BOOL GetIsInternalComponent ( );
    InternalComponentPtr GetInternalComponent ( );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
};

enum OccurrenceStatusConstants
{
    seOccurrenceStatusWellDefined = 1,
    seOccurrenceStatusFixed = 2,
    seOccurrenceStatusUnderDefined = 4,
    seOccurrenceStatusOverDefined = 32776,
    seOccurrenceStatusNotConsistent = 32784,
    seOccurrenceStatusNotChanged = 32800,
    seOccurrenceStatusNonAlgebraic = 32832,
    seOccurrenceStatusUnknown = 32896
};

struct __declspec(uuid("00c6bf00-483b-11ce-951a-08003601be52"))
AssemblyDocument : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAttributeQuery))
    TGFramework::AttributeQueryPtr AttributeQuery;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetFullName))
    _bstr_t FullName;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetParent))
    TGFramework::ApplicationPtr Parent;
    __declspec(property(get=GetPath))
    _bstr_t Path;
    __declspec(property(get=GetVariables))
    IDispatchPtr Variables;
    __declspec(property(get=GetAsmRefPlanes))
    AsmRefPlanesPtr AsmRefPlanes;
    __declspec(property(get=GetReadOnly,put=PutReadOnly))
    VARIANT_BOOL ReadOnly;
    __declspec(property(get=GetAssemblyRecomputeEvents))
    IUnknownPtr AssemblyRecomputeEvents;
    __declspec(property(get=GetCoordinateSystems))
    TGPart::CoordinateSystemsPtr CoordinateSystems;
    __declspec(property(get=GetLayouts))
    LayoutsPtr Layouts;
    __declspec(property(get=GetLineSegments))
    LineSegmentsPtr LineSegments;
    __declspec(property(get=GetSegments))
    SegmentsPtr Segments;
    __declspec(property(get=GetSensors))
    TGFramework::SensorsPtr Sensors;
    __declspec(property(get=GetRoutingSlip))
    IDispatchPtr RoutingSlip;
    __declspec(property(get=GetCutawaysCount))
    long CutawaysCount;
    __declspec(property(get=GetExplosionsCount))
    long ExplosionsCount;
    __declspec(property(get=GetArcSegments))
    ArcSegmentsPtr ArcSegments;
    __declspec(property(get=GetSegmentRelations3d))
    SegmentRelations3dPtr SegmentRelations3d;
    __declspec(property(get=GetQueries))
    QueriesPtr Queries;
    __declspec(property(get=GetRelationshipsSelectSet))
    TGFramework::SelectSetPtr RelationshipsSelectSet;
    __declspec(property(get=GetAssemblyFamilyMembers))
    AssemblyFamilyMembersPtr AssemblyFamilyMembers;
    __declspec(property(get=GetIsFileFamilyByDocument))
    VARIANT_BOOL IsFileFamilyByDocument;
    __declspec(property(get=GetSelectSet))
    TGFramework::SelectSetPtr SelectSet;
    __declspec(property(get=GetSummaryInfo))
    IDispatchPtr SummaryInfo;
    __declspec(property(get=GetWindows))
    TGFramework::WindowsPtr Windows;
    __declspec(property(get=GetNamedViews))
    TGFramework::NamedViewsPtr NamedViews;
    __declspec(property(get=GetAssemblyPatterns))
    AssemblyPatternsPtr AssemblyPatterns;
    __declspec(property(get=GetProperties))
    IDispatchPtr Properties;
    __declspec(property(get=GetConfigurations))
    ConfigurationsPtr Configurations;
    __declspec(property(get=GetViewStyles))
    IDispatchPtr ViewStyles;
    __declspec(property(get=GetIsTemplate,put=PutIsTemplate))
    VARIANT_BOOL IsTemplate;
    __declspec(property(get=GetWireRuns))
    WireRunsPtr WireRuns;
    __declspec(property(get=GetWirePaths))
    WirePathsPtr WirePaths;
    __declspec(property(get=GetAssemblyProperties))
    AssemblyPropertiesPtr AssemblyProperties;
    __declspec(property(get=GetCurveSegments))
    CurveSegmentsPtr CurveSegments;
    __declspec(property(get=GetStatus,put=PutStatus))
    enum TGFramework::DocumentStatus Status;
    __declspec(property(get=GetBlocks))
    TGPart::SketchBlocksPtr Blocks;
    __declspec(property(get=GetGeometricVersion))
    long GeometricVersion;
    __declspec(property(get=GetIsGeometricVersionDirty))
    VARIANT_BOOL IsGeometricVersionDirty;
    __declspec(property(get=GetDimensionStyles))
    IDispatchPtr DimensionStyles;
    __declspec(property(get=GetVirtualComponentOccurrences))
    VirtualComponentOccurrencesPtr VirtualComponentOccurrences;
    __declspec(property(get=GetUnitsOfMeasure))
    TGFramework::UnitsOfMeasurePtr UnitsOfMeasure;
    __declspec(property(get=GetHidePreviousLevel,put=PutHidePreviousLevel))
    VARIANT_BOOL HidePreviousLevel;
    __declspec(property(get=GetActiveSketch))
    IDispatchPtr ActiveSketch;
    __declspec(property(get=GetType))
    enum TGFramework::DocumentTypeConstants Type;
    __declspec(property(get=GetIsAssemblySimplified))
    VARIANT_BOOL IsAssemblySimplified;
    __declspec(property(get=GetDocumentEvents))
    IUnknownPtr DocumentEvents;
    __declspec(property(get=GetRootStorage))
    IUnknownPtr RootStorage;
    __declspec(property(get=GetStructuralFrames))
    StructuralFramesPtr StructuralFrames;
    __declspec(property(get=GetAddInsStorage))
    IUnknownPtr AddInsStorage[][];
    __declspec(property(get=GetHasCapturedRelationships))
    VARIANT_BOOL HasCapturedRelationships;
    __declspec(property(get=GetAssemblyFeatures))
    AssemblyFeaturesPtr AssemblyFeatures;
    __declspec(property(get=GetAssemblyDrivenPartFeatures))
    AssemblyDrivenPartFeaturesPtr AssemblyDrivenPartFeatures;
    __declspec(property(get=GetCapturedRelationshipCount))
    long CapturedRelationshipCount;
    __declspec(property(get=GetDirty,put=PutDirty))
    VARIANT_BOOL Dirty;
    __declspec(property(get=GetPipes))
    PipesPtr Pipes;
    __declspec(property(get=GetCreatedVersion))
    _bstr_t CreatedVersion;
    __declspec(property(get=GetLastSavedVersion))
    _bstr_t LastSavedVersion;
    __declspec(property(get=GetHighlightSets))
    TGFramework::HighlightSetsPtr HighlightSets;
    __declspec(property(get=GetInPlaceActivated))
    VARIANT_BOOL InPlaceActivated;
    __declspec(property(get=GetIsFileAlternatePositionByDocument))
    VARIANT_BOOL IsFileAlternatePositionByDocument;
    __declspec(property(get=GetComponentLayouts))
    ComponentLayoutsPtr ComponentLayouts;
    __declspec(property(get=GetPaths))
    PathsPtr Paths;
    __declspec(property(get=GetHarnesses))
    HarnessesPtr Harnesses;
    __declspec(property(get=GetLayers))
    TGFramework::LayersPtr Layers;
    __declspec(property(get=GetUndoSteps,put=PutUndoSteps))
    long UndoSteps;
    __declspec(property(get=GetProfileUndoSteps,put=PutProfileUndoSteps))
    long ProfileUndoSteps;
    __declspec(property(get=GetLabelWeldDataCollection))
    TGPart::LabelWeldDataCollectionPtr LabelWeldDataCollection;
    __declspec(property(get=GetWeldmentAssembly,put=PutWeldmentAssembly))
    VARIANT_BOOL WeldmentAssembly;
    __declspec(property(get=GetWeldmentAssemblyBeadMaterial,put=PutWeldmentAssemblyBeadMaterial))
    _bstr_t WeldmentAssemblyBeadMaterial;
    __declspec(property(get=GetWeldmentAssemblyBeadDensity,put=PutWeldmentAssemblyBeadDensity))
    double WeldmentAssemblyBeadDensity;
    __declspec(property(get=GetActivateSimplifiedAssembly,put=PutActivateSimplifiedAssembly))
    VARIANT_BOOL ActivateSimplifiedAssembly;
    __declspec(property(get=GetHoleDataCollection))
    TGPart::HoleDataCollectionPtr HoleDataCollection;
    __declspec(property(get=GetIsSimplifyStateActive))
    VARIANT_BOOL IsSimplifyStateActive;
    __declspec(property(get=GetIsInsightFile))
    VARIANT_BOOL IsInsightFile;
    __declspec(property(get=GetAssemblyBodies))
    AssemblyBodiesPtr AssemblyBodies;
    __declspec(property(get=GetZones))
    ZonesPtr Zones;
    __declspec(property(get=GetFastenerSystems))
    FastenerSystemsPtr FastenerSystems;
    __declspec(property(get=GetTextStyles))
    IDispatchPtr TextStyles;
    __declspec(property(get=GetAssemblyGroups))
    AssemblyGroupsPtr AssemblyGroups;
    __declspec(property(get=GetTextCharStyles))
    IDispatchPtr TextCharStyles;
    __declspec(property(get=GetPMI))
    IDispatchPtr PMI;
    __declspec(property(get=GetStudyOwner))
    TGPart::StudyOwnerPtr StudyOwner;
    __declspec(property(get=GetDisplayName))
    _bstr_t DisplayName;
    __declspec(property(get=GetInterpartLinks))
    IDispatchPtr InterpartLinks;
    __declspec(property(get=GetItemNumbers))
    ItemNumbersPtr ItemNumbers;
    __declspec(property(get=GetConstructions))
    TGPart::ConstructionsPtr Constructions;
    __declspec(property(get=GetLinearStyles))
    IDispatchPtr LinearStyles;
    __declspec(property(get=GetFillStyles))
    IDispatchPtr FillStyles;
    __declspec(property(get=GetHatchPatternStyles))
    IDispatchPtr HatchPatternStyles;
    __declspec(property(get=GetAssemblyFamilyEvents))
    IUnknownPtr AssemblyFamilyEvents;
    __declspec(property(get=GetSectionViews))
    TGFramework::SectionViewsPtr SectionViews;
    __declspec(property(get=GetIsMultiCADDriven))
    VARIANT_BOOL IsMultiCADDriven;
    __declspec(property(get=GetAssemblyCopies))
    AssemblyCopiesPtr AssemblyCopies;
    __declspec(property(get=GetAssemblyMirrors))
    AssemblyMirrorsPtr AssemblyMirrors;
    __declspec(property(get=GetSimplifiedAssemblies))
    SimplifiedAssembliesPtr SimplifiedAssemblies;
    __declspec(property(get=GetAssemblyChangeEvents))
    IUnknownPtr AssemblyChangeEvents;
    __declspec(property(get=GetInterDocumentUpdate))
    TGFramework::InterDocumentUpdatePtr InterDocumentUpdate;
    __declspec(property(get=GetSketches3D))
    TGPart::Sketches3DPtr Sketches3D;
    __declspec(property(get=GetParts))
    PartsPtr Parts;
    __declspec(property(get=GetRelations3d))
    Relations3dPtr Relations3d;
    __declspec(property(get=GetPhysicalProperties))
    PhysicalPropertiesPtr PhysicalProperties;
    __declspec(property(get=GetFaceStyles))
    IDispatchPtr FaceStyles;
    __declspec(property(get=GetOccurrences))
    OccurrencesPtr Occurrences;
    __declspec(property(get=GetAssemblyConfigurationChangeEvents))
    IUnknownPtr AssemblyConfigurationChangeEvents;
    __declspec(property(get=GetAssemblyFamilyEvents2))
    IUnknownPtr AssemblyFamilyEvents2;
    __declspec(property(get=GetActiveConfiguration))
    _bstr_t ActiveConfiguration;
    __declspec(property(get=GetAssemblyPhysicalPropertiesChangeEvents))
    IUnknownPtr AssemblyPhysicalPropertiesChangeEvents;
    __declspec(property(get=GetSteeringWheel))
    TGFramework::SteeringWheelPtr SteeringWheel;
    __declspec(property(get=GetPerformanceMode,put=PutPerformanceMode))
    VARIANT_BOOL PerformanceMode;
    __declspec(property(get=GetHasMissingFiles))
    VARIANT_BOOL HasMissingFiles;
    __declspec(property(get=GetInternalComponents))
    InternalComponentsPtr InternalComponents;
    __declspec(property(get=GetEndCaps))
    EndCapsPtr EndCaps;
    __declspec(property(get=GetDecals))
    TGPart::DecalsPtr Decals;
    __declspec(property(get=GetAsmCADDirects))
    AsmCADDirectsPtr AsmCADDirects;
    __declspec(property(get=GetModelingInAssembly))
    VARIANT_BOOL ModelingInAssembly;
    __declspec(property(get=GetAssemblyPreview))
    VARIANT_BOOL AssemblyPreview;
    __declspec(property(get=GetReferencePointClouds))
    TGPart::ReferencePointCloudsPtr ReferencePointClouds;
    __declspec(property(get=GetProfileSets))
    TGPart::ProfileSetsPtr ProfileSets;
    __declspec(property(get=GetAssemblyModel))
    TGPart::ModelPtr AssemblyModel;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT Activate ( );
    TGFramework::ApplicationPtr GetApplication ( );
    HRESULT Close (
        const _variant_t & SaveChanges = vtMissing,
        const _variant_t & FileName = vtMissing,
        const _variant_t & RouteWorkbook = vtMissing );
    _bstr_t GetFullName ( );
    _bstr_t GetName ( );
    TGFramework::ApplicationPtr GetParent ( );
    _bstr_t GetPath ( );
    HRESULT PrintOut (
        const _variant_t & Printer = vtMissing,
        const _variant_t & NumCopies = vtMissing,
        const _variant_t & Orientation = vtMissing,
        const _variant_t & PaperSize = vtMissing,
        const _variant_t & Scale = vtMissing,
        const _variant_t & PrintToFile = vtMissing,
        const _variant_t & OutputFileName = vtMissing,
        const _variant_t & PrintRange = vtMissing,
        const _variant_t & Sheets = vtMissing,
        const _variant_t & ColorAsBlack = vtMissing,
        const _variant_t & Collate = vtMissing );
    VARIANT_BOOL GetReadOnly ( );
    IDispatchPtr GetRoutingSlip ( );
    HRESULT Save ( );
    HRESULT SaveAs (
        _bstr_t NewName,
        const _variant_t & IsATemplate = vtMissing,
        const _variant_t & FileFormat = vtMissing,
        const _variant_t & ReadOnlyEnforced = vtMissing,
        const _variant_t & ReadOnlyRecommended = vtMissing,
        const _variant_t & NewStatus = vtMissing,
        const _variant_t & CreateBackup = vtMissing,
        const _variant_t & UpdateLinkInContainer = vtMissing,
        const _variant_t & UpdateAllLinksInContainer = vtMissing );
    HRESULT SaveCopyAs (
        _bstr_t Name );
    HRESULT SaveAsJT (
        _bstr_t NewName,
        const _variant_t & Include_PreciseGeom = vtMissing,
        const _variant_t & Prod_Structure_Option = vtMissing,
        const _variant_t & Export_PMI = vtMissing,
        const _variant_t & Export_CoordinateSystem = vtMissing,
        const _variant_t & Export_3DBodies = vtMissing,
        const _variant_t & NumberofLODs = vtMissing,
        const _variant_t & JTFileUnit = vtMissing,
        const _variant_t & Write_Which_Files = vtMissing,
        const _variant_t & Use_Simplified_TopAsm = vtMissing,
        const _variant_t & Use_Simplified_SubAsm = vtMissing,
        const _variant_t & Use_Simplified_Part = vtMissing,
        const _variant_t & EnableDefaultOutputPath = vtMissing,
        const _variant_t & IncludeSEProperties = vtMissing,
        const _variant_t & Export_VisiblePartsOnly = vtMissing,
        const _variant_t & Export_VisibleConstructionsOnly = vtMissing,
        const _variant_t & RemoveUnsafeCharacters = vtMissing,
        const _variant_t & ExportSEPartFileAsSingleJTFile = vtMissing );
    _bstr_t SaveAsBIDM (
        _bstr_t FilePath,
        _bstr_t DocumentNumber,
        _bstr_t Revision,
        _bstr_t Title );
    _bstr_t ReviseBIDM (
        _bstr_t FilePath,
        _bstr_t Revision,
        _bstr_t Title );
    TGFramework::SelectSetPtr GetSelectSet ( );
    HRESULT SendMail (
        const _variant_t & Recipients = vtMissing,
        const _variant_t & Subject = vtMissing,
        const _variant_t & ReturnReceipt = vtMissing );
    IDispatchPtr GetSummaryInfo ( );
    TGFramework::WindowsPtr GetWindows ( );
    IDispatchPtr GetProperties ( );
    VARIANT_BOOL GetIsTemplate ( );
    void PutIsTemplate (
        VARIANT_BOOL _arg1 );
    enum TGFramework::DocumentStatus GetStatus ( );
    void PutStatus (
        enum TGFramework::DocumentStatus _arg1 );
    HRESULT EditProperties ( );
    TGFramework::UnitsOfMeasurePtr GetUnitsOfMeasure ( );
    IDispatchPtr GetActiveSketch ( );
    enum TGFramework::DocumentTypeConstants GetType ( );
    IUnknownPtr GetDocumentEvents ( );
    IUnknownPtr GetRootStorage ( );
    IUnknownPtr GetAddInsStorage (
        _bstr_t Name,
        long grfMode );
    VARIANT_BOOL GetDirty ( );
    void PutDirty (
        VARIANT_BOOL _arg1 );
    TGFramework::AttributeQueryPtr GetAttributeQuery ( );
    _bstr_t GetCreatedVersion ( );
    _bstr_t GetLastSavedVersion ( );
    TGFramework::HighlightSetsPtr GetHighlightSets ( );
    VARIANT_BOOL GetInPlaceActivated ( );
    HRESULT SeekWriteAccess (
        VARIANT_BOOL * WriteAccess );
    long GetUndoSteps ( );
    void PutUndoSteps (
        long _arg1 );
    HRESULT CreatePreview ( );
    void PutReadOnly (
        VARIANT_BOOL _arg1 );
    HRESULT SeekReadOnlyAccess (
        VARIANT_BOOL * ReadOnlyAccess );
    HRESULT ImportStyles2 (
        enum TGFramework::seStyleTypeConstants StyleType,
        VARIANT_BOOL bReplace,
        IDispatch * pSrcDocument );
    VARIANT_BOOL GetIsInsightFile ( );
    TGFramework::NamedViewsPtr GetNamedViews ( );
    HRESULT GetRegisteredCustomPropertiesBiDM (
        VARIANT * varPropInfo );
    _bstr_t SaveAsWithCustomPropertiesBIDM (
        _bstr_t FilePath,
        _bstr_t DocumentNumber,
        _bstr_t Revision,
        _bstr_t Title,
        const _variant_t & varPropInfo );
    _bstr_t ReviseWithCustomPropertiesBIDM (
        _bstr_t FilePath,
        _bstr_t Revision,
        _bstr_t Title,
        const _variant_t & varPropInfo );
    HRESULT SaveAsPRC (
        _bstr_t FileName );
    IDispatchPtr GetVariables ( );
    IDispatchPtr GetInterpartLinks ( );
    HRESULT FreezeAllInterpartLinks ( );
    HRESULT BreakAllInterpartLinks ( );
    HRESULT ThawAllInterpartLinks ( );
    HRESULT HasInterpartLinks (
        VARIANT_BOOL * pbHasInterpartLinks );
    HRESULT GetInContextAssemblyNameForInterpartLinks (
        BSTR * pbstrAssemblyName );
    _variant_t NewWindow (
        const _variant_t & NewWindowOptions = vtMissing,
        const _variant_t & Environment = vtMissing );
    HRESULT NewNavigatorWindow ( );
    PartsPtr GetParts ( );
    Relations3dPtr GetRelations3d ( );
    PhysicalPropertiesPtr GetPhysicalProperties ( );
    IDispatchPtr GetFaceStyles ( );
    IDispatchPtr CreateReference (
        struct Occurrence * Occurrence,
        const _variant_t & Entity );
    OccurrencesPtr GetOccurrences ( );
    AsmRefPlanesPtr GetAsmRefPlanes ( );
    HRESULT CheckInterference (
        long NumElementsSet1,
        SAFEARRAY * * Set1,
        enum InterferenceStatusConstants * Status,
        const _variant_t & ComparisonMethod = vtMissing,
        const _variant_t & NumElementsSet2 = vtMissing,
        const _variant_t & Set2 = vtMissing,
        const _variant_t & AddInterferenceAsOccurrence = vtMissing,
        const _variant_t & ReportFilename = vtMissing,
        const _variant_t & ReportType = vtMissing,
        VARIANT * NumInterferences = &vtMissing,
        VARIANT * InterferingPartsSet1 = &vtMissing,
        VARIANT * InterferingPartsOtherSet = &vtMissing,
        VARIANT * ConfirmedInterference = &vtMissing,
        VARIANT * InterferenceOccurrence = &vtMissing,
        const _variant_t & IgnoreThreadInterferences = vtMissing );
    HRESULT BindKeyToObject (
        SAFEARRAY * * ReferenceKey,
        IDispatch * * Object );
    TGPart::CoordinateSystemsPtr GetCoordinateSystems ( );
    TGPart::StudyOwnerPtr GetStudyOwner ( );
    HRESULT MinimumDistance (
        IDispatch * Element1,
        IDispatch * Element2,
        double * Distance,
        SAFEARRAY * * Point1,
        SAFEARRAY * * Point2 );
    IUnknownPtr GetAssemblyRecomputeEvents ( );
    LayoutsPtr GetLayouts ( );
    LineSegmentsPtr GetLineSegments ( );
    SegmentsPtr GetSegments ( );
    HRESULT GetGlobalParameter (
        enum AssemblyGlobalConstants Parameter,
        VARIANT * Value );
    HRESULT SetGlobalParameter (
        enum AssemblyGlobalConstants Parameter,
        const _variant_t & Value );
    TGFramework::SensorsPtr GetSensors ( );
    long GetCutawaysCount ( );
    long GetExplosionsCount ( );
    ArcSegmentsPtr GetArcSegments ( );
    SegmentRelations3dPtr GetSegmentRelations3d ( );
    QueriesPtr GetQueries ( );
    TGFramework::SelectSetPtr GetRelationshipsSelectSet ( );
    AssemblyFamilyMembersPtr GetAssemblyFamilyMembers ( );
    VARIANT_BOOL GetIsFileFamilyByDocument ( );
    VARIANT_BOOL GetIsFileAlternatePositionByDocument ( );
    HRESULT CreateFamilyFile (
        _bstr_t FirstMemberName,
        _bstr_t SecondMemberName,
        VARIANT_BOOL bCreateAlternatePosition );
    HRESULT DisperseSubassembly (
        IDispatch * Subassembly,
        VARIANT_BOOL bAllOccurrences );
    HRESULT TransferOccurrences (
        SAFEARRAY * * OccurrencesToTransfer,
        const _variant_t & Subassembly = vtMissing );
    OccurrencePtr BundleOccurrences (
        SAFEARRAY * * OccurrencesToTransfer,
        _bstr_t OccurrenceFileName,
        const _variant_t & TemplateFileName = vtMissing,
        const _variant_t & Subassembly = vtMissing );
    AssemblyPatternsPtr GetAssemblyPatterns ( );
    HRESULT MeasureAngle (
        IDispatch * Element1,
        IDispatch * Element2,
        double * TrueAngle,
        double * ApparentAngle,
        const _variant_t & Element3 = vtMissing );
    HRESULT NormalDistance (
        IDispatch * Element1,
        IDispatch * Element2,
        double * TrueDistance,
        double * ApparentDistance,
        double * DeltaX,
        double * DeltaY,
        double * DeltaZ,
        const _variant_t & CoordinateSystem = vtMissing );
    ConfigurationsPtr GetConfigurations ( );
    HRESULT RenameFile (
        _bstr_t OldPath,
        _bstr_t NewPath );
    HRESULT SetExternalPaths (
        SAFEARRAY * * VecUnopenedPath );
    HRESULT UpdateExternalPaths ( );
    IDispatchPtr GetViewStyles ( );
    HRESULT ImportStyles (
        _bstr_t FileName,
        const _variant_t & Overwrite = vtMissing );
    WireRunsPtr GetWireRuns ( );
    WirePathsPtr GetWirePaths ( );
    AssemblyPropertiesPtr GetAssemblyProperties ( );
    CurveSegmentsPtr GetCurveSegments ( );
    HRESULT GenerateWireReport (
        enum AssemblyReportTypeConstants ReportType,
        const _variant_t & FileNameToSaveReport,
        int FieldsToGenerate );
    HRESULT ActivateAll ( );
    HRESULT UpdateAll ( );
    HRESULT GetContainerDocumentAndMatrixOfIPADoc (
        IDispatch * * ContainerDocument,
        SAFEARRAY * * Matrix );
    HRESULT CopySketch (
        IDispatch * SourceLayoutOrSketch,
        IDispatch * TargetPartOrAssembly,
        VARIANT_BOOL bAssociativeCopy,
        VARIANT * pvCopySketchErrorStatus = &vtMissing );
    long GetGeometricVersion ( );
    VARIANT_BOOL GetIsGeometricVersionDirty ( );
    IDispatchPtr GetDimensionStyles ( );
    TGFramework::LayersPtr GetLayers ( );
    TGPart::MeasureVariablePtr AddMeasureVariable (
        enum TGPart::MeasureVariableTypeConstants Type,
        enum TGPart::MeasureVariableValueConstants ValueType,
        IDispatch * Geom1,
        IDispatch * Geom2,
        const _variant_t & Geom3 = vtMissing );
    VirtualComponentOccurrencesPtr GetVirtualComponentOccurrences ( );
    HRESULT PublishVirtualComponents ( );
    VARIANT_BOOL GetHidePreviousLevel ( );
    void PutHidePreviousLevel (
        VARIANT_BOOL _arg1 );
    long GetProfileUndoSteps ( );
    void PutProfileUndoSteps (
        long _arg1 );
    HRESULT CreateOrEditSimplifiedAssembly (
        long NumOccurrenceExclude,
        SAFEARRAY * * OccurrenceExclude,
        double dExcludeRangeRatio,
        long NumOccurrenceInclude,
        SAFEARRAY * * OccurrenceInclude );
    HRESULT GetSimplifiedAssemblyInputs (
        long * NumOccurrenceExclude,
        SAFEARRAY * * OccurrenceExclude,
        double * dExcludeRangeRatio,
        long * NumOccurrenceInclude,
        SAFEARRAY * * OccurrenceInclude );
    HRESULT UpdateSimplifiedAssembly ( );
    VARIANT_BOOL GetIsAssemblySimplified ( );
    HRESULT DeleteSimplifiedAssembly ( );
    HRESULT SaveSimplifiedAssemblyAs (
        _bstr_t SaveFileName );
    VARIANT_BOOL GetIsSimplifyStateActive ( );
    StructuralFramesPtr GetStructuralFrames ( );
    VARIANT_BOOL GetHasCapturedRelationships ( );
    AssemblyFeaturesPtr GetAssemblyFeatures ( );
    AssemblyDrivenPartFeaturesPtr GetAssemblyDrivenPartFeatures ( );
    long GetCapturedRelationshipCount ( );
    HRESULT GetCapturedRelationshipInformation (
        SAFEARRAY * * RelationshipTypes,
        SAFEARRAY * * OffsetTypes,
        SAFEARRAY * * Offsets,
        VARIANT * Faces );
    PipesPtr GetPipes ( );
    ComponentLayoutsPtr GetComponentLayouts ( );
    PathsPtr GetPaths ( );
    HRESULT UpdateDocument (
        const _variant_t & FutureUse1 = vtMissing,
        const _variant_t & FutureUse2 = vtMissing );
    HarnessesPtr GetHarnesses ( );
    TGPart::LabelWeldDataCollectionPtr GetLabelWeldDataCollection ( );
    void PutWeldmentAssembly (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetWeldmentAssembly ( );
    void PutWeldmentAssemblyBeadMaterial (
        _bstr_t _arg1 );
    _bstr_t GetWeldmentAssemblyBeadMaterial ( );
    void PutWeldmentAssemblyBeadDensity (
        double _arg1 );
    double GetWeldmentAssemblyBeadDensity ( );
    HRESULT GetBaseStyle (
        enum AssemblyBaseStylesConstants BaseStyleType,
        struct TGFramework::FaceStyle * * BaseStyle );
    HRESULT SetBaseStyle (
        enum AssemblyBaseStylesConstants BaseStyleType,
        struct TGFramework::FaceStyle * BaseStyle );
    HRESULT SaveModelAs (
        IDispatch * Occurrence,
        _bstr_t SaveFileName );
    void PutActivateSimplifiedAssembly (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetActivateSimplifiedAssembly ( );
    TGPart::HoleDataCollectionPtr GetHoleDataCollection ( );
    HRESULT GenerateWireHarnessReport (
        enum AssemblyWireHarnessReportTypeConstants ReportType,
        const _variant_t & FileNameToSaveReport = vtMissing,
        const _variant_t & Selection = vtMissing,
        const _variant_t & Window = vtMissing,
        const _variant_t & NumberOfReportProperties = vtMissing,
        const _variant_t & AssemblyReportProperties = vtMissing,
        const _variant_t & NumberOfSortItems = vtMissing,
        const _variant_t & SortProperties = vtMissing,
        const _variant_t & SortOrder = vtMissing,
        const _variant_t & Justification = vtMissing,
        const _variant_t & UpdateTemplate = vtMissing );
    AssemblyBodiesPtr GetAssemblyBodies ( );
    IDispatchPtr CreateReference2 (
        IDispatch * Object,
        const _variant_t & Entity );
    HRESULT UpdatePathfinder (
        enum AssemblyPathfinderUpdateConstants UpdateType );
    ZonesPtr GetZones ( );
    HRESULT UpdateStructureCache (
        enum UpdateStructureCacheConstants UpdateType );
    HRESULT DeleteStructureCache ( );
    FastenerSystemsPtr GetFastenerSystems ( );
    AssemblyGroupsPtr GetAssemblyGroups ( );
    HRESULT CheckInterference2 (
        long NumElementsSet1,
        SAFEARRAY * * Set1,
        enum InterferenceStatusConstants * Status,
        const _variant_t & ComparisonMethod = vtMissing,
        const _variant_t & NumElementsSet2 = vtMissing,
        const _variant_t & Set2 = vtMissing,
        const _variant_t & AddInterferenceAsOccurrence = vtMissing,
        const _variant_t & ReportFilename = vtMissing,
        const _variant_t & ReportType = vtMissing,
        VARIANT * NumInterferences = &vtMissing,
        VARIANT * InterferingPartsSet1 = &vtMissing,
        VARIANT * InterferingPartsOtherSet = &vtMissing,
        VARIANT * ConfirmedInterference = &vtMissing,
        VARIANT * InterferenceOccurrence = &vtMissing,
        const _variant_t & IgnoreSameNominalDiaConstant = vtMissing,
        const _variant_t & IgnoreNonThreadVsThreadConstant = vtMissing );
    HRESULT CheckInterference3 (
        long NumElementsSet1,
        SAFEARRAY * * Set1,
        enum InterferenceStatusConstants * Status,
        const _variant_t & ComparisonMethod,
        const _variant_t & NumElementsSet2,
        const _variant_t & Set2,
        const _variant_t & AddInterferenceAsOccurrence,
        const _variant_t & ReportFilename,
        const _variant_t & ReportType,
        VARIANT * NumInterferences,
        VARIANT * InterferingPartsSet1,
        VARIANT * InterferingPartsOtherSet,
        VARIANT * ConfirmedInterference,
        VARIANT * InterferenceOccurrence,
        const _variant_t & IgnoreSameNominalDiaConstant,
        const _variant_t & IgnoreNonThreadVsThreadConstant,
        VARIANT_BOOL bAllowConstructions,
        VARIANT_BOOL bShowInterferenceVolume );
    HRESULT TranslateMultipleOccurrences (
        long lNumberOfOccurrences,
        SAFEARRAY * * Occurrences,
        enum MoveMultipleMoveTypeConstants MoveType,
        enum MoveMultipleRelationshipConstants RelationshipMaintenance,
        double FromX,
        double FromY,
        double FromZ,
        double ToX,
        double ToY,
        double ToZ,
        VARIANT * MovedOrCopiedOccurrences );
    HRESULT RotateMultipleOccurrences (
        long lNumberOfOccurrences,
        SAFEARRAY * * Occurrences,
        enum MoveMultipleMoveTypeConstants MoveType,
        enum MoveMultipleRelationshipConstants RelationshipMaintenance,
        double AxisX,
        double AxisY,
        double AxisZ,
        double Angle,
        VARIANT * MovedOrCopiedOccurrences );
    HRESULT GoalSeek (
        _bstr_t NameTargetVariable,
        _bstr_t NameVariableToChange,
        double dTargetValue,
        double dTimeLimitInSecs,
        long NumIterationsLimit,
        double * dTimeElapsed,
        long * NumIterations,
        VARIANT_BOOL * TimeLimitExceeded,
        VARIANT_BOOL * IterationsLimitExceeded );
    IDispatchPtr GetPMI ( );
    HRESULT PMI_ByModelState (
        IDispatch * * PMIObj,
        enum TGPart::PMIModelStateConstants PMIModelState );
    _bstr_t GetDisplayName ( );
    ItemNumbersPtr GetItemNumbers ( );
    TGPart::ConstructionsPtr GetConstructions ( );
    HRESULT GetContainerDocumentAndOccurrenceOfIPADoc (
        IDispatch * * ContainerDocument,
        IDispatch * * IPAOccurrence );
    HRESULT GetTopDocumentAndSubOccurrenceOfIPADoc (
        IDispatch * * TopDocument,
        IDispatch * * IPASubOccurrence );
    IDispatchPtr GetLinearStyles ( );
    IDispatchPtr GetFillStyles ( );
    IDispatchPtr GetHatchPatternStyles ( );
    IUnknownPtr GetAssemblyFamilyEvents ( );
    IUnknownPtr GetAssemblyFamilyEvents2 ( );
    TGFramework::SectionViewsPtr GetSectionViews ( );
    HRESULT Range (
        double * x_min,
        double * y_min,
        double * z_min,
        double * x_max,
        double * y_max,
        double * z_max );
    HRESULT ReplaceComponents (
        SAFEARRAY * * TargetComponents,
        _bstr_t ReplacementFilePath,
        enum ConstraintReplacementConstants ConstraintReplacementOption );
    VARIANT_BOOL GetIsMultiCADDriven ( );
    AssemblyCopiesPtr GetAssemblyCopies ( );
    AssemblyMirrorsPtr GetAssemblyMirrors ( );
    SimplifiedAssembliesPtr GetSimplifiedAssemblies ( );
    IUnknownPtr GetAssemblyChangeEvents ( );
    IUnknownPtr GetAssemblyConfigurationChangeEvents ( );
    HRESULT PathfinderScrollToSelection ( );
    TGFramework::InterDocumentUpdatePtr GetInterDocumentUpdate ( );
    TGPart::Sketches3DPtr GetSketches3D ( );
    HRESULT MeasureDistance (
        IDispatch * Element1,
        IDispatch * Element2,
        enum TGPart::MeasureDistanceTypeConstants DistanceType,
        double * Distance,
        double * DX,
        double * DY,
        double * DZ,
        SAFEARRAY * * Point1,
        SAFEARRAY * * Point2 );
    HRESULT MeasureAngleEx (
        IDispatch * Element1,
        IDispatch * Element2,
        IDispatch * Element3,
        double * Angle1,
        double * Angle2,
        double * Angle3,
        double * Angle4 );
    HRESULT InquireElement (
        IDispatch * Element,
        SAFEARRAY * * InPoint,
        const _variant_t & CoordinateSystem,
        SAFEARRAY * * Point,
        double * SurfaceArea,
        double * Volume,
        double * Length );
    HRESULT GetDrivenDrivingInfo (
        IDispatch * Element,
        VARIANT * DrivenOccurrencesArray,
        VARIANT * DrivingOccurrencesArray );
    _bstr_t GetActiveConfiguration ( );
    TGPart::SketchBlocksPtr GetBlocks ( );
    IUnknownPtr GetAssemblyPhysicalPropertiesChangeEvents ( );
    IDispatchPtr GetTextStyles ( );
    IDispatchPtr GetTextCharStyles ( );
    HRESULT CreateCloneComponents (
        SAFEARRAY * * ComponentsToClone,
        SAFEARRAY * * ReferenceGeometryFaces,
        SAFEARRAY * * CloneEnviornment,
        enum CloneComponentOptions CloneOptions,
        VARIANT_BOOL bCreateGroup,
        enum CloneMatchTypeOptions CloneMatchType,
        long * ErrorStatus );
    HRESULT Get3dPrintInfo (
        int * iNumberOfTriangles,
        int * iNumberOfPoints,
        int * iNumberOfEdges,
        double * dMeshSurfaceArea,
        double * dMeshVolume,
        double * dFileSize,
        double * dExportToleranceValue,
        double * dSurfacePlaneAngTol,
        enum TGPart::Print3DFileType Type );
    HRESULT PublishVirtualComponentsBIDM (
        const _variant_t & ListOfDocumentNumbers,
        const _variant_t & ListOfRevisionIDs,
        const _variant_t & ListOfTitles = vtMissing );
    HRESULT LoadUOMPreferences (
        VARIANT_BOOL UpdateUomGlobals );
    void PutName (
        _bstr_t _arg1 );
    TGFramework::SteeringWheelPtr GetSteeringWheel ( );
    _bstr_t SaveModelAsBiDM (
        IDispatch * Occurrence,
        _bstr_t FilePath,
        _bstr_t DocumentNumber,
        _bstr_t Revision,
        _bstr_t Title );
    void PutPerformanceMode (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetPerformanceMode ( );
    VARIANT_BOOL GetHasMissingFiles ( );
    HRESULT GetMissingFilesInfo (
        VARIANT * missingFilesAndObjects );
    HRESULT CopytoPMI (
        IDispatch * featureObj,
        enum TGPart::seCopytoPMIConstants Type );
    InternalComponentsPtr GetInternalComponents ( );
    EndCapsPtr GetEndCaps ( );
    HRESULT DragComponentTranslation (
        IDispatch * OccurrenceToDrag,
        enum DragComponentAnalysisOptionConstants AnalysisOption,
        enum DragComponentCollisionOptionConstants CollisionOption,
        double Distance,
        VARIANT_BOOL ConsiderMovingParts,
        VARIANT_BOOL ConsiderInactiveParts,
        VARIANT_BOOL MoveGroundedParts,
        double DirectionX,
        double DirectionY,
        double DirectionZ,
        double Sensitivity,
        IDispatch * EdgeOrAxis,
        VARIANT_BOOL * CollisionFound,
        SAFEARRAY * * CollidingPart );
    HRESULT DragComponentRotation (
        IDispatch * OccurrenceToDrag,
        enum DragComponentAnalysisOptionConstants AnalysisOption,
        enum DragComponentCollisionOptionConstants CollisionOption,
        double Angle,
        VARIANT_BOOL ConsiderMovingParts,
        VARIANT_BOOL ConsiderInactiveParts,
        VARIANT_BOOL MoveGroundedParts,
        double DirectionX,
        double DirectionY,
        double DirectionZ,
        double Sensitivity,
        IDispatch * EdgeOrAxis,
        VARIANT_BOOL * CollisionFound,
        SAFEARRAY * * CollidingPart );
    HRESULT BeginCachedSolve ( );
    HRESULT EndCachedSolve ( );
    HRESULT SetSuppressComponent (
        IDispatch * OccurrenceToSuppress,
        struct SuppressComponent * * SuppressComponent );
    HRESULT GetSuppressedComponents (
        enum AssemblyComponentTypeConstants ComponentType,
        long * SuppressedComponentCount,
        SAFEARRAY * * SuppressedComponents );
    HRESULT CheckInterference4 (
        long NumElementsSet1,
        SAFEARRAY * * Set1,
        enum InterferenceStatusConstants * Status,
        const _variant_t & ComparisonMethod,
        const _variant_t & NumElementsSet2,
        const _variant_t & Set2,
        const _variant_t & AddInterferenceAsOccurrence,
        const _variant_t & ReportFilename,
        const _variant_t & ReportType,
        VARIANT * NumInterferences,
        VARIANT * InterferingPartsSet1,
        VARIANT * InterferingPartsOtherSet,
        VARIANT * ConfirmedInterference,
        VARIANT * InterferenceOccurrence,
        const _variant_t & IgnoreSameNominalDiaConstant,
        const _variant_t & IgnoreNonThreadVsThreadConstant,
        VARIANT_BOOL ShowIntersectionVolume );
    TGPart::DecalsPtr GetDecals ( );
    HRESULT AutoExplode (
        enum AutoExplodeSelectionTypeConstants AutoExplodeSelectionType,
        VARIANT_BOOL BindAllSubassemblies,
        enum AutoExplodeTechniqueConstants ExplodeTechnique,
        BSTR * ErrorCode,
        double SpreadDistance,
        IDispatch * Subassembly );
    AsmCADDirectsPtr GetAsmCADDirects ( );
    VARIANT_BOOL GetModelingInAssembly ( );
    VARIANT_BOOL GetAssemblyPreview ( );
    HRESULT EditAssembly ( );
    HRESULT EditAssemblyWithOptions (
        enum AssemblyFileOpenPartActivationOptions ePartActivation,
        enum AssemblyFileOpenSimplificationOptions ePartSimplification,
        enum AssemblyFileOpenSimplificationOptions eSubassemblySimplification,
        enum AssemblyFileOpenActivateChangedPartOptions eActivateChangedParts );
    TGPart::ReferencePointCloudsPtr GetReferencePointClouds ( );
    TGPart::ProfileSetsPtr GetProfileSets ( );
    TGPart::ModelPtr GetAssemblyModel ( );
    HRESULT PublishInternalComponents (
        _bstr_t bstrFileLocation,
        _bstr_t bstrPartTemplatePath,
        _bstr_t bstrSheetmetalTemplatePath,
        _bstr_t bstrAsmTemplatePath,
        _bstr_t bstrMaterial );
    HRESULT ArrangeDimensionsInSelectSet (
        double dStackPitchMultiplier,
        VARIANT_BOOL bAssociative );
};

struct __declspec(uuid("c32a477a-8c85-11d3-9737-0060973828b5"))
SubOccurrences : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    SubOccurrencePtr Item (
        const _variant_t & Index );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
};

struct __declspec(uuid("c32a477b-8c85-11d3-9737-0060973828b5"))
SubOccurrence : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetTopLevelDocument))
    AssemblyDocumentPtr TopLevelDocument;
    __declspec(property(get=GetSubOccurrenceDocument))
    IDispatchPtr SubOccurrenceDocument;
    __declspec(property(get=GetSubOccurrenceFileName))
    _bstr_t SubOccurrenceFileName;
    __declspec(property(get=GetSubOccurrences))
    SubOccurrencesPtr SubOccurrences;
    __declspec(property(get=GetSubassembly))
    VARIANT_BOOL Subassembly;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetUseSimplified,put=PutUseSimplified))
    VARIANT_BOOL UseSimplified;
    __declspec(property(get=GetDisplayReferencePlanes,put=PutDisplayReferencePlanes))
    VARIANT_BOOL DisplayReferencePlanes;
    __declspec(property(get=GetDisplayCoordinateSystems,put=PutDisplayCoordinateSystems))
    VARIANT_BOOL DisplayCoordinateSystems;
    __declspec(property(get=GetDisplayConstructions,put=PutDisplayConstructions))
    VARIANT_BOOL DisplayConstructions;
    __declspec(property(get=GetDisplayConstrCurves,put=PutDisplayConstrCurves))
    VARIANT_BOOL DisplayConstrCurves;
    __declspec(property(get=GetDisplayReferenceAxes,put=PutDisplayReferenceAxes))
    VARIANT_BOOL DisplayReferenceAxes;
    __declspec(property(get=GetDisplaySketches,put=PutDisplaySketches))
    VARIANT_BOOL DisplaySketches;
    __declspec(property(get=GetDisplayAsLastSaved,put=PutDisplayAsLastSaved))
    VARIANT_BOOL DisplayAsLastSaved;
    __declspec(property(get=GetAdjustable,put=PutAdjustable))
    VARIANT_BOOL Adjustable;
    __declspec(property(get=GetThisAsOccurrence))
    OccurrencePtr ThisAsOccurrence;
    __declspec(property(get=GetHasBodyOverride))
    VARIANT_BOOL HasBodyOverride;
    __declspec(property(get=GetBody))
    IDispatchPtr Body;
    __declspec(property(get=GetIsPatterned))
    VARIANT_BOOL IsPatterned;
    __declspec(property(get=GetIsPatternItem))
    VARIANT_BOOL IsPatternItem;
    __declspec(property(get=GetIsAdjustablePart))
    VARIANT_BOOL IsAdjustablePart;
    __declspec(property(get=GetSubassemblyBodies))
    SubassemblyBodiesPtr SubassemblyBodies;
    __declspec(property(get=GetItemNumber,put=PutItemNumber))
    int ItemNumber;
    __declspec(property(get=GetReferencePlanesVisible,put=PutReferencePlanesVisible))
    VARIANT_BOOL ReferencePlanesVisible;
    __declspec(property(get=GetCoordinateSystemsVisible,put=PutCoordinateSystemsVisible))
    VARIANT_BOOL CoordinateSystemsVisible;
    __declspec(property(get=GetSketchesVisible,put=PutSketchesVisible))
    VARIANT_BOOL SketchesVisible;
    __declspec(property(get=GetDisplayCenterline,put=PutDisplayCenterline))
    VARIANT_BOOL DisplayCenterline;
    __declspec(property(get=GetReference))
    TGFramework::ReferencePtr Reference;
    __declspec(property(get=GetNodeType))
    enum TGFramework::ObjectType NodeType;
    __declspec(property(get=GetDisplayLiveSections,put=PutDisplayLiveSections))
    VARIANT_BOOL DisplayLiveSections;
    __declspec(property(get=GetDisplayDimensions,put=PutDisplayDimensions))
    VARIANT_BOOL DisplayDimensions;
    __declspec(property(get=GetDisplayAnnotations,put=PutDisplayAnnotations))
    VARIANT_BOOL DisplayAnnotations;
    __declspec(property(get=GetDisplayDesignBody,put=PutDisplayDesignBody))
    VARIANT_BOOL DisplayDesignBody;
    __declspec(property(get=GetHideInDrawing,put=PutHideInDrawing))
    VARIANT_BOOL HideInDrawing;
    __declspec(property(get=GetHideInSubassembly,put=PutHideInSubassembly))
    VARIANT_BOOL HideInSubassembly;
    __declspec(property(get=GetLocatable,put=PutLocatable))
    VARIANT_BOOL Locatable;
    __declspec(property(get=GetDisplayAsDraftReference,put=PutDisplayAsDraftReference))
    VARIANT_BOOL DisplayAsDraftReference;
    __declspec(property(get=GetExcludeFromPhysicalProperties,put=PutExcludeFromPhysicalProperties))
    VARIANT_BOOL ExcludeFromPhysicalProperties;
    __declspec(property(get=GetExcludeFromReports,put=PutExcludeFromReports))
    VARIANT_BOOL ExcludeFromReports;
    __declspec(property(get=GetExcludeFromInterference,put=PutExcludeFromInterference))
    VARIANT_BOOL ExcludeFromInterference;
    __declspec(property(get=GetCustomPropertyValue,put=PutCustomPropertyValue))
    _bstr_t CustomPropertyValue[];
    __declspec(property(get=GetFaceStyle,put=PutFaceStyle))
    IDispatchPtr FaceStyle;
    __declspec(property(get=GetStyle,put=PutStyle))
    _bstr_t Style;
    __declspec(property(get=GetIsInternalComponent))
    VARIANT_BOOL IsInternalComponent;
    __declspec(property(get=GetInternalComponent))
    InternalComponentPtr InternalComponent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyDocumentPtr GetTopLevelDocument ( );
    IDispatchPtr GetSubOccurrenceDocument ( );
    _bstr_t GetSubOccurrenceFileName ( );
    HRESULT GetReferenceKey (
        SAFEARRAY * * ReferenceKey,
        VARIANT * KeySize = &vtMissing );
    SubOccurrencesPtr GetSubOccurrences ( );
    HRESULT GetMatrix (
        SAFEARRAY * * Matrix );
    HRESULT CreateTopologyReference (
        SAFEARRAY * * ReferenceKey,
        struct TopologyReference * * TopologyReference );
    VARIANT_BOOL GetSubassembly ( );
    enum TGFramework::ObjectType GetType ( );
    _bstr_t GetName ( );
    HRESULT GetMaterial (
        SAFEARRAY * * DiffuseColor,
        SAFEARRAY * * AmbientColor,
        SAFEARRAY * * SpecularColor,
        SAFEARRAY * * EmissionColor,
        double * Shininess,
        double * Opacity );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetUseSimplified ( );
    void PutUseSimplified (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayReferencePlanes ( );
    void PutDisplayReferencePlanes (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayCoordinateSystems ( );
    void PutDisplayCoordinateSystems (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayConstructions ( );
    void PutDisplayConstructions (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayConstrCurves ( );
    void PutDisplayConstrCurves (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayReferenceAxes ( );
    void PutDisplayReferenceAxes (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplaySketches ( );
    void PutDisplaySketches (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayAsLastSaved ( );
    void PutDisplayAsLastSaved (
        VARIANT_BOOL _arg1 );
    void PutAdjustable (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetAdjustable ( );
    HRESULT PutMatrix (
        SAFEARRAY * * Matrix,
        VARIANT_BOOL Replace );
    OccurrencePtr GetThisAsOccurrence ( );
    VARIANT_BOOL GetHasBodyOverride ( );
    IDispatchPtr GetBody ( );
    HRESULT GetSimplifiedBodies (
        long * NumBodies,
        SAFEARRAY * * SimplifiedBodies );
    VARIANT_BOOL GetIsPatterned ( );
    VARIANT_BOOL GetIsPatternItem ( );
    HRESULT GetBodyInversionMatrix (
        SAFEARRAY * * InvMatrix );
    AdjustablePartPtr MakeAdjustablePart ( );
    AdjustablePartPtr GetAdjustablePart ( );
    VARIANT_BOOL GetIsAdjustablePart ( );
    SubassemblyBodiesPtr GetSubassemblyBodies ( );
    HRESULT GetExplodeMatrix (
        SAFEARRAY * * Matrix );
    HRESULT RemoveOverrideBody ( );
    HRESULT GetRangeBox (
        SAFEARRAY * * MinRangePoint,
        SAFEARRAY * * MaxRangePoint );
    HRESULT GetInterpartDrivingOccurrences (
        long * NumDrivingOccurrences,
        SAFEARRAY * * DrivingOccurrences );
    HRESULT GetInterpartDrivenOccurrences (
        long * NumDrivenOccurrences,
        SAFEARRAY * * DrivenOccurrences );
    int GetItemNumber ( );
    void PutItemNumber (
        int _arg1 );
    VARIANT_BOOL GetReferencePlanesVisible ( );
    void PutReferencePlanesVisible (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetCoordinateSystemsVisible ( );
    void PutCoordinateSystemsVisible (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetSketchesVisible ( );
    void PutSketchesVisible (
        VARIANT_BOOL _arg1 );
    HRESULT CreateTopologyReferenceToBodyOverride (
        SAFEARRAY * * ReferenceKey,
        struct TopologyReference * * TopologyReference );
    HRESULT Range (
        double * x_min,
        double * y_min,
        double * z_min,
        double * x_max,
        double * y_max,
        double * z_max );
    VARIANT_BOOL GetDisplayCenterline ( );
    void PutDisplayCenterline (
        VARIANT_BOOL _arg1 );
    TGFramework::ReferencePtr GetReference ( );
    enum TGFramework::ObjectType GetNodeType ( );
    VARIANT_BOOL FileMissing ( );
    VARIANT_BOOL RecheckMissingFile ( );
    VARIANT_BOOL GetDisplayLiveSections ( );
    void PutDisplayLiveSections (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayDimensions ( );
    void PutDisplayDimensions (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayAnnotations ( );
    void PutDisplayAnnotations (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayDesignBody ( );
    void PutDisplayDesignBody (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetHideInDrawing ( );
    void PutHideInDrawing (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetHideInSubassembly ( );
    void PutHideInSubassembly (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetLocatable ( );
    void PutLocatable (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayAsDraftReference ( );
    void PutDisplayAsDraftReference (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetExcludeFromPhysicalProperties ( );
    void PutExcludeFromPhysicalProperties (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetExcludeFromReports ( );
    void PutExcludeFromReports (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetExcludeFromInterference ( );
    void PutExcludeFromInterference (
        VARIANT_BOOL _arg1 );
    _bstr_t GetCustomPropertyValue (
        _bstr_t CustomPropertyName );
    void PutCustomPropertyValue (
        _bstr_t CustomPropertyName,
        _bstr_t _arg2 );
    IDispatchPtr GetFaceStyle ( );
    void PutFaceStyle (
        IDispatch * _arg1 );
    IDispatchPtr GetFaceStyle2 (
        VARIANT_BOOL vbHonourPrefs );
    HRESULT PutStyleUsePartStyle ( );
    HRESULT PutStyleNone ( );
    VARIANT_BOOL GetStyleNone ( );
    VARIANT_BOOL GetStyleUsePartStyle ( );
    _bstr_t GetStyle ( );
    void PutStyle (
        _bstr_t _arg1 );
    IDispatchPtr BindKeyToTopology (
        VARIANT_BOOL BodyOverride,
        SAFEARRAY * * ReferenceKey );
    HRESULT GetSectionedFacetData (
        long PartID,
        enum OccurrenceSectionedFacetDataConstants * FacetDataPresence,
        long * FacetCount,
        SAFEARRAY * * Points,
        SAFEARRAY * * Normals,
        SAFEARRAY * * TextureCoords,
        SAFEARRAY * * StyleIDs,
        SAFEARRAY * * FaceIDs );
    VARIANT_BOOL GetIsInternalComponent ( );
    InternalComponentPtr GetInternalComponent ( );
};

struct __declspec(uuid("915ced00-8594-11d3-9736-0060973828b5"))
_ISubOccurrencesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    SubOccurrencePtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct SubOccurrence * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
};

struct __declspec(uuid("6c7bd538-a2b0-11d3-8049-00c04fa15287"))
TopologyReference : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetObject))
    IDispatchPtr Object;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr GetObject ( );
    HRESULT GetMatrix (
        SAFEARRAY * * Matrix );
    HRESULT GetReferenceKey (
        SAFEARRAY * * ReferenceKey,
        VARIANT * KeySize = &vtMissing );
    enum TGFramework::ObjectType GetType ( );
    HRESULT GetOccurrencesInPath (
        IDispatch * * TopOccurrence,
        long * NumSubOccurrencesInPath,
        long * NumBoundSubOccurrencesInPath,
        SAFEARRAY * * BoundSubOccurrencesInPath );
};

struct __declspec(uuid("15d1e008-a2a9-11d3-8049-00c04fa15287"))
_ITopologyReferenceAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetObject))
    IDispatchPtr Object;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr GetObject ( );
    HRESULT GetMatrix (
        SAFEARRAY * * Matrix );
    HRESULT GetReferenceKey (
        SAFEARRAY * * ReferenceKey,
        VARIANT * KeySize );
    enum TGFramework::ObjectType GetType ( );
    HRESULT GetOccurrencesInPath (
        IDispatch * * TopOccurrence,
        long * NumSubOccurrencesInPath,
        long * NumBoundSubOccurrencesInPath,
        SAFEARRAY * * BoundSubOccurrencesInPath );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Object (
        /*[out,retval]*/ IDispatch * * Object ) = 0;
      virtual HRESULT __stdcall raw_GetMatrix (
        /*[in,out]*/ SAFEARRAY * * Matrix ) = 0;
      virtual HRESULT __stdcall raw_GetReferenceKey (
        /*[in,out]*/ SAFEARRAY * * ReferenceKey,
        /*[out]*/ VARIANT * KeySize ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall raw_GetOccurrencesInPath (
        /*[out]*/ IDispatch * * TopOccurrence,
        /*[out]*/ long * NumSubOccurrencesInPath,
        /*[out]*/ long * NumBoundSubOccurrencesInPath,
        /*[in,out]*/ SAFEARRAY * * BoundSubOccurrencesInPath ) = 0;
};

struct __declspec(uuid("e0db57e8-57c9-44c2-8f02-bdabdd85060e"))
AdjustablePart : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetOccurrence))
    OccurrencePtr Occurrence;
    __declspec(property(get=GetAdjustToFit,put=PutAdjustToFit))
    VARIANT_BOOL AdjustToFit;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    OccurrencePtr GetOccurrence ( );
    HRESULT GetAdjustables (
        long NumberOfEntries,
        SAFEARRAY * * PartVariables,
        SAFEARRAY * * AsmVariables );
    HRESULT SetAdjustables (
        long NumberOfEntries,
        SAFEARRAY * * PartVariables,
        SAFEARRAY * * AsmVariables );
    HRESULT Delete ( );
    VARIANT_BOOL GetAdjustToFit ( );
    void PutAdjustToFit (
        VARIANT_BOOL _arg1 );
    TubePtr GetTube ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
};

struct __declspec(uuid("56a41246-9b92-11d3-8fd4-00c04fa15548"))
Tube : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetExtentStart,put=PutExtentStart))
    double ExtentStart;
    __declspec(property(get=GetPartFileName))
    _bstr_t PartFileName;
    __declspec(property(get=GetExtentEnd,put=PutExtentEnd))
    double ExtentEnd;
    __declspec(property(get=GetInsideArea))
    double InsideArea;
    __declspec(property(get=GetInsideVolume))
    double InsideVolume;
    __declspec(property(get=GetIsSolid,put=PutIsSolid))
    VARIANT_BOOL IsSolid;
    __declspec(property(get=GetTubeMaterial,put=PutTubeMaterial))
    _bstr_t TubeMaterial;
    __declspec(property(get=GetDefaultBendRadius,put=PutDefaultBendRadius))
    double DefaultBendRadius;
    __declspec(property(get=GetOuterDiameter,put=PutOuterDiameter))
    double OuterDiameter;
    __declspec(property(get=GetUsesGlobalBendRadius,put=PutUsesGlobalBendRadius))
    VARIANT_BOOL UsesGlobalBendRadius;
    __declspec(property(get=GetMaterial,put=PutMaterial))
    TGFramework::FaceStylePtr Material;
    __declspec(property(get=GetUsesGlobalOuterDiameter,put=PutUsesGlobalOuterDiameter))
    VARIANT_BOOL UsesGlobalOuterDiameter;
    __declspec(property(get=GetUsesGlobalMinimumFlatLength,put=PutUsesGlobalMinimumFlatLength))
    VARIANT_BOOL UsesGlobalMinimumFlatLength;
    __declspec(property(get=GetUsesGlobalWallThickness,put=PutUsesGlobalWallThickness))
    VARIANT_BOOL UsesGlobalWallThickness;
    __declspec(property(get=GetMinimumFlatLength,put=PutMinimumFlatLength))
    double MinimumFlatLength;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetWallThickness,put=PutWallThickness))
    double WallThickness;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Path (
        long * NumElementsInPath,
        VARIANT * Path = &vtMissing,
        VARIANT * Reversed = &vtMissing );
    _bstr_t GetPartFileName ( );
    HRESULT AddSegment (
        IDispatch * TubeSegment,
        enum TubeSegmentAdditionStatusConstants * Status );
    HRESULT RemoveSegment (
        IDispatch * TubeSegment,
        enum TubeSegmentRemovalStatusConstants * Status );
    double GetInsideArea ( );
    double GetInsideVolume ( );
    VARIANT_BOOL GetIsSolid ( );
    void PutIsSolid (
        VARIANT_BOOL _arg1 );
    double GetDefaultBendRadius ( );
    void PutDefaultBendRadius (
        double _arg1 );
    VARIANT_BOOL GetUsesGlobalBendRadius ( );
    void PutUsesGlobalBendRadius (
        VARIANT_BOOL _arg1 );
    HRESULT IsBendRadiusOverridden (
        IDispatch * Segment1,
        IDispatch * Segment2,
        VARIANT_BOOL * IsOverridden );
    HRESULT GetBendRadius (
        IDispatch * Segment1,
        IDispatch * Segment2,
        double * BendRadius );
    HRESULT SetBendRadius (
        IDispatch * Segment1,
        IDispatch * Segment2,
        double BendRadius );
    VARIANT_BOOL GetUsesGlobalOuterDiameter ( );
    void PutUsesGlobalOuterDiameter (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetUsesGlobalMinimumFlatLength ( );
    void PutUsesGlobalMinimumFlatLength (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetUsesGlobalWallThickness ( );
    void PutUsesGlobalWallThickness (
        VARIANT_BOOL _arg1 );
    double GetMinimumFlatLength ( );
    void PutMinimumFlatLength (
        double _arg1 );
    double GetWallThickness ( );
    void PutWallThickness (
        double _arg1 );
    HRESULT BendTable (
        VARIANT * CutLength = &vtMissing,
        VARIANT * NumOfBends = &vtMissing,
        VARIANT * FeedLength = &vtMissing,
        VARIANT * RotationAngle = &vtMissing,
        VARIANT * BendRadius = &vtMissing,
        VARIANT * ReverseBendOrder = &vtMissing,
        const _variant_t & SaveToFileName = vtMissing,
        VARIANT * BendAngle = &vtMissing );
    HRESULT GetEndTreatment (
        VARIANT_BOOL StartOrEnd,
        VARIANT * EndTreatmentType = &vtMissing,
        VARIANT * InsideDiameter = &vtMissing,
        VARIANT * OutsideDiameter = &vtMissing,
        VARIANT * Depth = &vtMissing,
        VARIANT * Radius = &vtMissing,
        VARIANT * Angle = &vtMissing );
    HRESULT SetEndTreatment (
        VARIANT_BOOL StartOrEnd,
        const _variant_t & EndTreatmentType = vtMissing,
        const _variant_t & InsideDiameter = vtMissing,
        const _variant_t & OutsideDiameter = vtMissing,
        const _variant_t & Depth = vtMissing,
        const _variant_t & Radius = vtMissing,
        const _variant_t & Angle = vtMissing );
    void PutOuterDiameter (
        double _arg1 );
    double GetOuterDiameter ( );
    void PutMaterial (
        struct TGFramework::FaceStyle * _arg1 );
    TGFramework::FaceStylePtr GetMaterial ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    HRESULT GetTubePropertyNameAndValueByPid (
        enum TubePropertyPidConstants TubePropertyPid,
        BSTR * TubePropertyName,
        BSTR * TubePropertyValue );
    HRESULT UpdateTubeFileProperties ( );
    double GetExtentStart ( );
    void PutExtentStart (
        double _arg1 );
    double GetExtentEnd ( );
    void PutExtentEnd (
        double _arg1 );
    HRESULT GetPathSegmentsRelations (
        long * NumSegmentRelations,
        VARIANT * SegmentRelations = &vtMissing );
    HRESULT IsFrozen (
        VARIANT_BOOL * bFrozen );
    HRESULT IsLinked (
        VARIANT_BOOL * bLinked );
    HRESULT Freeze ( );
    HRESULT Thaw ( );
    HRESULT BreakLink ( );
    void PutTubeMaterial (
        _bstr_t _arg1 );
    _bstr_t GetTubeMaterial ( );
};

struct __declspec(uuid("b7f4a873-3307-44fb-938b-7002c9ef5f88"))
_IAdjustablePartAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetOccurrence))
    OccurrencePtr Occurrence;
    __declspec(property(get=GetAdjustToFit,put=PutAdjustToFit))
    VARIANT_BOOL AdjustToFit;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    OccurrencePtr GetOccurrence ( );
    HRESULT GetAdjustables (
        long NumberOfEntries,
        SAFEARRAY * * PartVariables,
        SAFEARRAY * * AsmVariables );
    HRESULT SetAdjustables (
        long NumberOfEntries,
        SAFEARRAY * * PartVariables,
        SAFEARRAY * * AsmVariables );
    HRESULT Delete ( );
    VARIANT_BOOL GetAdjustToFit ( );
    void PutAdjustToFit (
        VARIANT_BOOL AdjustToFit );
    TubePtr GetTube ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * App ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Occurrence (
        /*[out,retval]*/ struct Occurrence * * Occurrence ) = 0;
      virtual HRESULT __stdcall raw_GetAdjustables (
        /*[in]*/ long NumberOfEntries,
        /*[in,out]*/ SAFEARRAY * * PartVariables,
        /*[in,out]*/ SAFEARRAY * * AsmVariables ) = 0;
      virtual HRESULT __stdcall raw_SetAdjustables (
        /*[in]*/ long NumberOfEntries,
        /*[in,out]*/ SAFEARRAY * * PartVariables,
        /*[in,out]*/ SAFEARRAY * * AsmVariables ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_AdjustToFit (
        /*[out,retval]*/ VARIANT_BOOL * AdjustToFit ) = 0;
      virtual HRESULT __stdcall put_AdjustToFit (
        /*[in]*/ VARIANT_BOOL AdjustToFit ) = 0;
      virtual HRESULT __stdcall raw_GetTube (
        /*[out,retval]*/ struct Tube * * Tube ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
};

enum TubeSegmentAdditionStatusConstants
{
    seTubeSegmentAdditionStatusSucceeded = 1,
    seTubeSegmentAdditionStatusFailedSplit = 2,
    seTubeSegmentAdditionStatusFailedDisjoint = 3,
    seTubeSegmentAdditionStatusFailedUnknownReason = 4
};

enum TubeSegmentRemovalStatusConstants
{
    seTubeSegmentRemovalStatusSucceeded = 1,
    seTubeSegmentRemovalStatusFailedNotPartOfTube = 2,
    seTubeSegmentRemovalStatusFailedDueToDisjoint = 3,
    seTubeSegmentRemovalStatusFailedUnknownReason = 4
};

enum TubePropertyPidConstants
{
    seTubePropertyPid_TubeBendRadius = 1508,
    seTubePropertyPid_TubeOuterDiameter = 1509,
    seTubePropertyPid_TubeMinimumFlatLength = 1510,
    seTubePropertyPid_TubeWallThickness = 1511,
    seTubePropertyPid_TubeFlatLength = 1512,
    seTubePropertyPid_TubeAreaInsideDiameter = 1513,
    seTubePropertyPid_TubeVolumeInsideDiameter = 1514,
    seTubePropertyPid_TubeEndTreatmentTypeEnd1 = 1515,
    seTubePropertyPid_TubeEndTreatmentTypeEnd2 = 1516
};

struct __declspec(uuid("720508b1-a104-11d3-8fd8-00c04fa15548"))
_ITubeAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetExtentStart,put=PutExtentStart))
    double ExtentStart;
    __declspec(property(get=GetPartFileName))
    _bstr_t PartFileName;
    __declspec(property(get=GetExtentEnd,put=PutExtentEnd))
    double ExtentEnd;
    __declspec(property(get=GetInsideArea))
    double InsideArea;
    __declspec(property(get=GetInsideVolume))
    double InsideVolume;
    __declspec(property(get=GetIsSolid,put=PutIsSolid))
    VARIANT_BOOL IsSolid;
    __declspec(property(get=GetTubeMaterial,put=PutTubeMaterial))
    _bstr_t TubeMaterial;
    __declspec(property(get=GetDefaultBendRadius,put=PutDefaultBendRadius))
    double DefaultBendRadius;
    __declspec(property(get=GetOuterDiameter,put=PutOuterDiameter))
    double OuterDiameter;
    __declspec(property(get=GetUsesGlobalBendRadius,put=PutUsesGlobalBendRadius))
    VARIANT_BOOL UsesGlobalBendRadius;
    __declspec(property(get=GetMaterial,put=PutMaterial))
    TGFramework::FaceStylePtr Material;
    __declspec(property(get=GetUsesGlobalOuterDiameter,put=PutUsesGlobalOuterDiameter))
    VARIANT_BOOL UsesGlobalOuterDiameter;
    __declspec(property(get=GetUsesGlobalMinimumFlatLength,put=PutUsesGlobalMinimumFlatLength))
    VARIANT_BOOL UsesGlobalMinimumFlatLength;
    __declspec(property(get=GetUsesGlobalWallThickness,put=PutUsesGlobalWallThickness))
    VARIANT_BOOL UsesGlobalWallThickness;
    __declspec(property(get=GetMinimumFlatLength,put=PutMinimumFlatLength))
    double MinimumFlatLength;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetWallThickness,put=PutWallThickness))
    double WallThickness;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Path (
        long * NumElementsInPath,
        VARIANT * Path,
        VARIANT * Reversed );
    _bstr_t GetPartFileName ( );
    HRESULT AddSegment (
        IDispatch * TubeSegment,
        enum TubeSegmentAdditionStatusConstants * Status );
    HRESULT RemoveSegment (
        IDispatch * TubeSegment,
        enum TubeSegmentRemovalStatusConstants * Status );
    double GetInsideArea ( );
    double GetInsideVolume ( );
    VARIANT_BOOL GetIsSolid ( );
    void PutIsSolid (
        VARIANT_BOOL IsSolid );
    double GetDefaultBendRadius ( );
    void PutDefaultBendRadius (
        double DefaultBendRadius );
    VARIANT_BOOL GetUsesGlobalBendRadius ( );
    void PutUsesGlobalBendRadius (
        VARIANT_BOOL UsesDefaultBendRadius );
    HRESULT IsBendRadiusOverridden (
        IDispatch * Segment1,
        IDispatch * Segment2,
        VARIANT_BOOL * IsOverridden );
    HRESULT GetBendRadius (
        IDispatch * Segment1,
        IDispatch * Segment2,
        double * BendRadius );
    HRESULT SetBendRadius (
        IDispatch * Segment1,
        IDispatch * Segment2,
        double BendRadius );
    VARIANT_BOOL GetUsesGlobalOuterDiameter ( );
    void PutUsesGlobalOuterDiameter (
        VARIANT_BOOL UsesOuterDiameter );
    VARIANT_BOOL GetUsesGlobalMinimumFlatLength ( );
    void PutUsesGlobalMinimumFlatLength (
        VARIANT_BOOL UsesGlobalMinimumFlatLength );
    VARIANT_BOOL GetUsesGlobalWallThickness ( );
    void PutUsesGlobalWallThickness (
        VARIANT_BOOL UsesGlobalWallThickness );
    double GetMinimumFlatLength ( );
    void PutMinimumFlatLength (
        double MinimumFlatLength );
    double GetWallThickness ( );
    void PutWallThickness (
        double WallThickness );
    HRESULT BendTable (
        VARIANT * CutLength,
        VARIANT * NumOfBends,
        VARIANT * FeedLength,
        VARIANT * RotationAngle,
        VARIANT * BendRadius,
        VARIANT * ReverseBendOrder,
        const _variant_t & SaveToFileName,
        VARIANT * BendAngle );
    HRESULT GetEndTreatment (
        VARIANT_BOOL StartOrEnd,
        VARIANT * EndTreatmentType,
        VARIANT * InsideDiameter,
        VARIANT * OutsideDiameter,
        VARIANT * Depth,
        VARIANT * Radius,
        VARIANT * Angle );
    HRESULT SetEndTreatment (
        VARIANT_BOOL StartOrEnd,
        const _variant_t & EndTreatmentType = vtMissing,
        const _variant_t & InsideDiameter = vtMissing,
        const _variant_t & OutsideDiameter = vtMissing,
        const _variant_t & Depth = vtMissing,
        const _variant_t & Radius = vtMissing,
        const _variant_t & Angle = vtMissing );
    void PutOuterDiameter (
        double OuterDiameter );
    double GetOuterDiameter ( );
    void PutMaterial (
        struct TGFramework::FaceStyle * Material );
    TGFramework::FaceStylePtr GetMaterial ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    HRESULT GetTubePropertyNameAndValueByPid (
        enum TubePropertyPidConstants TubePropertyPid,
        BSTR * TubePropertyName,
        BSTR * TubePropertyValue );
    HRESULT UpdateTubeFileProperties ( );
    double GetExtentStart ( );
    void PutExtentStart (
        double ExtentStart );
    double GetExtentEnd ( );
    void PutExtentEnd (
        double ExtentEnd );
    HRESULT GetPathSegmentsRelations (
        long * NumSegmentRelations,
        VARIANT * SegmentRelations );
    HRESULT IsFrozen (
        VARIANT_BOOL * bFrozen );
    HRESULT IsLinked (
        VARIANT_BOOL * bLinked );
    HRESULT Freeze ( );
    HRESULT Thaw ( );
    HRESULT BreakLink ( );
    void PutTubeMaterial (
        _bstr_t pbstrMaterialName );
    _bstr_t GetTubeMaterial ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Path (
        /*[out]*/ long * NumElementsInPath,
        /*[out]*/ VARIANT * Path,
        /*[out]*/ VARIANT * Reversed ) = 0;
      virtual HRESULT __stdcall get_PartFileName (
        /*[out,retval]*/ BSTR * PartFileName ) = 0;
      virtual HRESULT __stdcall raw_AddSegment (
        /*[in]*/ IDispatch * TubeSegment,
        /*[out]*/ enum TubeSegmentAdditionStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall raw_RemoveSegment (
        /*[in]*/ IDispatch * TubeSegment,
        /*[out]*/ enum TubeSegmentRemovalStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall get_InsideArea (
        /*[out,retval]*/ double * InsideArea ) = 0;
      virtual HRESULT __stdcall get_InsideVolume (
        /*[out,retval]*/ double * InsideVolume ) = 0;
      virtual HRESULT __stdcall get_IsSolid (
        /*[out,retval]*/ VARIANT_BOOL * IsSolid ) = 0;
      virtual HRESULT __stdcall put_IsSolid (
        /*[in]*/ VARIANT_BOOL IsSolid ) = 0;
      virtual HRESULT __stdcall get_DefaultBendRadius (
        /*[out,retval]*/ double * DefaultBendRadius ) = 0;
      virtual HRESULT __stdcall put_DefaultBendRadius (
        /*[in]*/ double DefaultBendRadius ) = 0;
      virtual HRESULT __stdcall get_UsesGlobalBendRadius (
        /*[out,retval]*/ VARIANT_BOOL * UsesDefaultBendRadius ) = 0;
      virtual HRESULT __stdcall put_UsesGlobalBendRadius (
        /*[in]*/ VARIANT_BOOL UsesDefaultBendRadius ) = 0;
      virtual HRESULT __stdcall raw_IsBendRadiusOverridden (
        /*[in]*/ IDispatch * Segment1,
        /*[in]*/ IDispatch * Segment2,
        /*[out]*/ VARIANT_BOOL * IsOverridden ) = 0;
      virtual HRESULT __stdcall raw_GetBendRadius (
        /*[in]*/ IDispatch * Segment1,
        /*[in]*/ IDispatch * Segment2,
        /*[out]*/ double * BendRadius ) = 0;
      virtual HRESULT __stdcall raw_SetBendRadius (
        /*[in]*/ IDispatch * Segment1,
        /*[in]*/ IDispatch * Segment2,
        /*[in]*/ double BendRadius ) = 0;
      virtual HRESULT __stdcall get_UsesGlobalOuterDiameter (
        /*[out,retval]*/ VARIANT_BOOL * UsesOuterDiameter ) = 0;
      virtual HRESULT __stdcall put_UsesGlobalOuterDiameter (
        /*[in]*/ VARIANT_BOOL UsesOuterDiameter ) = 0;
      virtual HRESULT __stdcall get_UsesGlobalMinimumFlatLength (
        /*[out,retval]*/ VARIANT_BOOL * UsesGlobalMinimumFlatLength ) = 0;
      virtual HRESULT __stdcall put_UsesGlobalMinimumFlatLength (
        /*[in]*/ VARIANT_BOOL UsesGlobalMinimumFlatLength ) = 0;
      virtual HRESULT __stdcall get_UsesGlobalWallThickness (
        /*[out,retval]*/ VARIANT_BOOL * UsesGlobalWallThickness ) = 0;
      virtual HRESULT __stdcall put_UsesGlobalWallThickness (
        /*[in]*/ VARIANT_BOOL UsesGlobalWallThickness ) = 0;
      virtual HRESULT __stdcall get_MinimumFlatLength (
        /*[out,retval]*/ double * MinimumFlatLength ) = 0;
      virtual HRESULT __stdcall put_MinimumFlatLength (
        /*[in]*/ double MinimumFlatLength ) = 0;
      virtual HRESULT __stdcall get_WallThickness (
        /*[out,retval]*/ double * WallThickness ) = 0;
      virtual HRESULT __stdcall put_WallThickness (
        /*[in]*/ double WallThickness ) = 0;
      virtual HRESULT __stdcall raw_BendTable (
        /*[out]*/ VARIANT * CutLength,
        /*[out]*/ VARIANT * NumOfBends,
        /*[out]*/ VARIANT * FeedLength,
        /*[out]*/ VARIANT * RotationAngle,
        /*[out]*/ VARIANT * BendRadius,
        /*[in]*/ VARIANT * ReverseBendOrder,
        /*[in]*/ VARIANT SaveToFileName,
        /*[out]*/ VARIANT * BendAngle ) = 0;
      virtual HRESULT __stdcall raw_GetEndTreatment (
        /*[in]*/ VARIANT_BOOL StartOrEnd,
        /*[out]*/ VARIANT * EndTreatmentType,
        /*[out]*/ VARIANT * InsideDiameter,
        /*[out]*/ VARIANT * OutsideDiameter,
        /*[out]*/ VARIANT * Depth,
        /*[out]*/ VARIANT * Radius,
        /*[out]*/ VARIANT * Angle ) = 0;
      virtual HRESULT __stdcall raw_SetEndTreatment (
        /*[in]*/ VARIANT_BOOL StartOrEnd,
        /*[in]*/ VARIANT EndTreatmentType = vtMissing,
        /*[in]*/ VARIANT InsideDiameter = vtMissing,
        /*[in]*/ VARIANT OutsideDiameter = vtMissing,
        /*[in]*/ VARIANT Depth = vtMissing,
        /*[in]*/ VARIANT Radius = vtMissing,
        /*[in]*/ VARIANT Angle = vtMissing ) = 0;
      virtual HRESULT __stdcall put_OuterDiameter (
        /*[in]*/ double OuterDiameter ) = 0;
      virtual HRESULT __stdcall get_OuterDiameter (
        /*[out,retval]*/ double * OuterDiameter ) = 0;
      virtual HRESULT __stdcall put_Material (
        /*[in]*/ struct TGFramework::FaceStyle * Material ) = 0;
      virtual HRESULT __stdcall get_Material (
        /*[out,retval]*/ struct TGFramework::FaceStyle * * Material ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall raw_GetTubePropertyNameAndValueByPid (
        /*[in]*/ enum TubePropertyPidConstants TubePropertyPid,
        /*[out]*/ BSTR * TubePropertyName,
        /*[out]*/ BSTR * TubePropertyValue ) = 0;
      virtual HRESULT __stdcall raw_UpdateTubeFileProperties ( ) = 0;
      virtual HRESULT __stdcall get_ExtentStart (
        /*[out,retval]*/ double * ExtentStart ) = 0;
      virtual HRESULT __stdcall put_ExtentStart (
        /*[in]*/ double ExtentStart ) = 0;
      virtual HRESULT __stdcall get_ExtentEnd (
        /*[out,retval]*/ double * ExtentEnd ) = 0;
      virtual HRESULT __stdcall put_ExtentEnd (
        /*[in]*/ double ExtentEnd ) = 0;
      virtual HRESULT __stdcall raw_GetPathSegmentsRelations (
        /*[out]*/ long * NumSegmentRelations,
        /*[out]*/ VARIANT * SegmentRelations ) = 0;
      virtual HRESULT __stdcall raw_IsFrozen (
        /*[out]*/ VARIANT_BOOL * bFrozen ) = 0;
      virtual HRESULT __stdcall raw_IsLinked (
        /*[out]*/ VARIANT_BOOL * bLinked ) = 0;
      virtual HRESULT __stdcall raw_Freeze ( ) = 0;
      virtual HRESULT __stdcall raw_Thaw ( ) = 0;
      virtual HRESULT __stdcall raw_BreakLink ( ) = 0;
      virtual HRESULT __stdcall put_TubeMaterial (
        /*[in]*/ BSTR pbstrMaterialName ) = 0;
      virtual HRESULT __stdcall get_TubeMaterial (
        /*[out,retval]*/ BSTR * pbstrMaterialName ) = 0;
};

struct __declspec(uuid("a5f2ac55-105a-4dca-8f70-dbfb64251907"))
SubassemblyBodies : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    SubassemblyBodyPtr Item (
        const _variant_t & Index );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
};

struct __declspec(uuid("ebc9fc09-0804-45a9-92ad-52f2f0ce2ca4"))
SubassemblyBody : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetTopLevelDocument))
    AssemblyDocumentPtr TopLevelDocument;
    __declspec(property(get=GetBody))
    IDispatchPtr Body;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetAssemblyBodyType))
    enum seAssemblyBodyTypeConstants AssemblyBodyType;
    __declspec(property(get=GetThisAsAssemblyBody))
    AssemblyBodyPtr ThisAsAssemblyBody;
    __declspec(property(get=GetReference))
    TGFramework::ReferencePtr Reference;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    enum TGFramework::ObjectType GetType ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    AssemblyDocumentPtr GetTopLevelDocument ( );
    HRESULT GetReferenceKey (
        SAFEARRAY * * ReferenceKey,
        VARIANT * KeySize = &vtMissing );
    IDispatchPtr GetBody ( );
    HRESULT GetMaterial (
        SAFEARRAY * * DiffuseColor,
        SAFEARRAY * * AmbientColor,
        SAFEARRAY * * SpecularColor,
        SAFEARRAY * * EmissionColor,
        double * Shininess,
        double * Opacity );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL _arg1 );
    enum seAssemblyBodyTypeConstants GetAssemblyBodyType ( );
    AssemblyBodyPtr GetThisAsAssemblyBody ( );
    TGFramework::ReferencePtr GetReference ( );
    HRESULT GetSectionedFacetData (
        enum OccurrenceSectionedFacetDataConstants * FacetDataPresence,
        long * FacetCount,
        SAFEARRAY * * Points,
        SAFEARRAY * * Normals,
        SAFEARRAY * * TextureCoords,
        SAFEARRAY * * StyleIDs,
        SAFEARRAY * * FaceIDs );
};

struct __declspec(uuid("d0aaadb1-94d6-466e-a57a-d8425503a9ea"))
_ISubassemblyBodiesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    SubassemblyBodyPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct SubassemblyBody * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
};

enum seAssemblyBodyTypeConstants
{
    seAssemblyBodyType_WeldBeadBody = 1,
    seAssemblyBodyType_HarnessBody = 2,
    seAssemblyBodyType_GenericAssemblyBody = 3
};

struct __declspec(uuid("5566eaef-db58-467b-a937-94a2ab85c1b5"))
AssemblyBody : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetFaceStyle,put=PutFaceStyle))
    IDispatchPtr FaceStyle;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetStyle,put=PutStyle))
    _bstr_t Style;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetTopLevelDocument))
    AssemblyDocumentPtr TopLevelDocument;
    __declspec(property(get=GetBody))
    IDispatchPtr Body;
    __declspec(property(get=GetAssemblyBodyType))
    enum seAssemblyBodyTypeConstants AssemblyBodyType;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    enum TGFramework::ObjectType GetType ( );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL _arg1 );
    _bstr_t GetStyle ( );
    void PutStyle (
        _bstr_t _arg1 );
    IDispatchPtr GetFaceStyle ( );
    void PutFaceStyle (
        IDispatch * _arg1 );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    AssemblyDocumentPtr GetTopLevelDocument ( );
    HRESULT GetReferenceKey (
        SAFEARRAY * * ReferenceKey,
        VARIANT * KeySize = &vtMissing );
    IDispatchPtr GetFaceStyle2 (
        VARIANT_BOOL vbHonourPrefs );
    IDispatchPtr GetBody ( );
    enum seAssemblyBodyTypeConstants GetAssemblyBodyType ( );
    HRESULT Mirror (
        IDispatch * pPlane );
    HRESULT GetSectionedFacetData (
        enum OccurrenceSectionedFacetDataConstants * FacetDataPresence,
        long * FacetCount,
        SAFEARRAY * * Points,
        SAFEARRAY * * Normals,
        SAFEARRAY * * TextureCoords,
        SAFEARRAY * * StyleIDs,
        SAFEARRAY * * FaceIDs );
};

enum OccurrenceSectionedFacetDataConstants
{
    seOccurrenceSectionedFacetDataPresent = 0,
    seOccurrenceSectionedFacetDataNotPresent = 1,
    seOccurrenceNotSectioned = 2
};

struct __declspec(uuid("498717a0-21fd-468d-8521-3f0bf620d180"))
_ISubassemblyBodyAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetTopLevelDocument))
    AssemblyDocumentPtr TopLevelDocument;
    __declspec(property(get=GetBody))
    IDispatchPtr Body;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetAssemblyBodyType))
    enum seAssemblyBodyTypeConstants AssemblyBodyType;
    __declspec(property(get=GetThisAsAssemblyBody))
    AssemblyBodyPtr ThisAsAssemblyBody;
    __declspec(property(get=GetReference))
    TGFramework::ReferencePtr Reference;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    enum TGFramework::ObjectType GetType ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    AssemblyDocumentPtr GetTopLevelDocument ( );
    HRESULT GetReferenceKey (
        SAFEARRAY * * ReferenceKey,
        VARIANT * KeySize );
    IDispatchPtr GetBody ( );
    HRESULT GetMaterial (
        SAFEARRAY * * DiffuseColor,
        SAFEARRAY * * AmbientColor,
        SAFEARRAY * * SpecularColor,
        SAFEARRAY * * EmissionColor,
        double * Shininess,
        double * Opacity );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL pbVisible );
    enum seAssemblyBodyTypeConstants GetAssemblyBodyType ( );
    AssemblyBodyPtr GetThisAsAssemblyBody ( );
    TGFramework::ReferencePtr GetReference ( );
    HRESULT GetSectionedFacetData (
        enum OccurrenceSectionedFacetDataConstants * FacetDataPresence,
        long * FacetCount,
        SAFEARRAY * * Points,
        SAFEARRAY * * Normals,
        SAFEARRAY * * TextureCoords,
        SAFEARRAY * * StyleIDs,
        SAFEARRAY * * FaceIDs );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall get_TopLevelDocument (
        /*[out,retval]*/ struct AssemblyDocument * * AssemblyDocument ) = 0;
      virtual HRESULT __stdcall raw_GetReferenceKey (
        /*[in,out]*/ SAFEARRAY * * ReferenceKey,
        /*[out]*/ VARIANT * KeySize ) = 0;
      virtual HRESULT __stdcall get_Body (
        /*[out,retval]*/ IDispatch * * Body ) = 0;
      virtual HRESULT __stdcall raw_GetMaterial (
        /*[in,out]*/ SAFEARRAY * * DiffuseColor,
        /*[in,out]*/ SAFEARRAY * * AmbientColor,
        /*[in,out]*/ SAFEARRAY * * SpecularColor,
        /*[in,out]*/ SAFEARRAY * * EmissionColor,
        /*[out]*/ double * Shininess,
        /*[out]*/ double * Opacity ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * pbVisible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL pbVisible ) = 0;
      virtual HRESULT __stdcall get_AssemblyBodyType (
        /*[out,retval]*/ enum seAssemblyBodyTypeConstants * AssemblyBodyType ) = 0;
      virtual HRESULT __stdcall get_ThisAsAssemblyBody (
        /*[out,retval]*/ struct AssemblyBody * * AssemblyBody ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct TGFramework::Reference * * ppReference ) = 0;
      virtual HRESULT __stdcall raw_GetSectionedFacetData (
        /*[out]*/ enum OccurrenceSectionedFacetDataConstants * FacetDataPresence,
        /*[out]*/ long * FacetCount,
        /*[in,out]*/ SAFEARRAY * * Points,
        /*[in,out]*/ SAFEARRAY * * Normals,
        /*[in,out]*/ SAFEARRAY * * TextureCoords,
        /*[in,out]*/ SAFEARRAY * * StyleIDs,
        /*[in,out]*/ SAFEARRAY * * FaceIDs ) = 0;
};

struct __declspec(uuid("904f220f-b259-4c34-9eca-883e50b0ce7c"))
_IAssemblyBodyAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetFaceStyle,put=PutFaceStyle))
    IDispatchPtr FaceStyle;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetStyle,put=PutStyle))
    _bstr_t Style;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetTopLevelDocument))
    AssemblyDocumentPtr TopLevelDocument;
    __declspec(property(get=GetBody))
    IDispatchPtr Body;
    __declspec(property(get=GetAssemblyBodyType))
    enum seAssemblyBodyTypeConstants AssemblyBodyType;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    enum TGFramework::ObjectType GetType ( );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL Visible );
    _bstr_t GetStyle ( );
    void PutStyle (
        _bstr_t Style );
    IDispatchPtr GetFaceStyle ( );
    void PutFaceStyle (
        IDispatch * FaceStyle );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    AssemblyDocumentPtr GetTopLevelDocument ( );
    HRESULT GetReferenceKey (
        SAFEARRAY * * ReferenceKey,
        VARIANT * KeySize );
    IDispatchPtr GetFaceStyle2 (
        VARIANT_BOOL vbHonourPrefs );
    IDispatchPtr GetBody ( );
    enum seAssemblyBodyTypeConstants GetAssemblyBodyType ( );
    HRESULT Mirror (
        IDispatch * pPlane );
    HRESULT GetSectionedFacetData (
        enum OccurrenceSectionedFacetDataConstants * FacetDataPresence,
        long * FacetCount,
        SAFEARRAY * * Points,
        SAFEARRAY * * Normals,
        SAFEARRAY * * TextureCoords,
        SAFEARRAY * * StyleIDs,
        SAFEARRAY * * FaceIDs );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ BSTR * Style ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ BSTR Style ) = 0;
      virtual HRESULT __stdcall get_FaceStyle (
        /*[out,retval]*/ IDispatch * * FaceStyle ) = 0;
      virtual HRESULT __stdcall put_FaceStyle (
        /*[in]*/ IDispatch * FaceStyle ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall get_TopLevelDocument (
        /*[out,retval]*/ struct AssemblyDocument * * AssemblyDocument ) = 0;
      virtual HRESULT __stdcall raw_GetReferenceKey (
        /*[in,out]*/ SAFEARRAY * * ReferenceKey,
        /*[out]*/ VARIANT * KeySize ) = 0;
      virtual HRESULT __stdcall raw_GetFaceStyle2 (
        /*[in]*/ VARIANT_BOOL vbHonourPrefs,
        /*[out,retval]*/ IDispatch * * FaceStyle ) = 0;
      virtual HRESULT __stdcall get_Body (
        /*[out,retval]*/ IDispatch * * Body ) = 0;
      virtual HRESULT __stdcall get_AssemblyBodyType (
        /*[out,retval]*/ enum seAssemblyBodyTypeConstants * AssemblyBodyType ) = 0;
      virtual HRESULT __stdcall raw_Mirror (
        /*[in]*/ IDispatch * pPlane ) = 0;
      virtual HRESULT __stdcall raw_GetSectionedFacetData (
        /*[out]*/ enum OccurrenceSectionedFacetDataConstants * FacetDataPresence,
        /*[out]*/ long * FacetCount,
        /*[in,out]*/ SAFEARRAY * * Points,
        /*[in,out]*/ SAFEARRAY * * Normals,
        /*[in,out]*/ SAFEARRAY * * TextureCoords,
        /*[in,out]*/ SAFEARRAY * * StyleIDs,
        /*[in,out]*/ SAFEARRAY * * FaceIDs ) = 0;
};

struct __declspec(uuid("7c4a9134-d124-4eee-a233-aae354844a24"))
InternalComponent : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetModels))
    TGPart::ModelsPtr Models;
    __declspec(property(get=GetConstructions))
    TGPart::ConstructionsPtr Constructions;
    __declspec(property(get=GetModelingMode,put=PutModelingMode))
    enum TGPart::ModelingModeConstants ModelingMode;
    __declspec(property(get=GetSketches))
    TGPart::SketchsPtr Sketches;
    __declspec(property(get=GetProfileSets))
    TGPart::ProfileSetsPtr ProfileSets;
    __declspec(property(get=GetPartRefPlanes))
    TGPart::RefPlanesPtr PartRefPlanes;
    __declspec(property(get=GetRefAxes))
    TGPart::RefAxesPtr RefAxes;
    __declspec(property(get=GetBendTable))
    TGPart::BendTablePtr BendTable;
    __declspec(property(get=GetUsedSketches))
    TGPart::UsedSketchesPtr UsedSketches;
    __declspec(property(get=GetUserDefinedSets))
    TGPart::UserDefinedSetsPtr UserDefinedSets;
    __declspec(property(get=GetConstraints))
    TGPart::ConstraintsPtr Constraints;
    __declspec(property(get=GetDisableMoveToSynchronous,put=PutDisableMoveToSynchronous))
    VARIANT_BOOL DisableMoveToSynchronous;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t _arg1 );
    enum InternalComponentTypeConstant GetType ( );
    HRESULT Optimize ( );
    HRESULT DeleteBodies ( );
    long GetCount ( );
    HRESULT GetBodies (
        long * NumberOfBodies,
        SAFEARRAY * * Bodies );
    TGPart::ModelsPtr GetModels ( );
    TGPart::ConstructionsPtr GetConstructions ( );
    HRESULT EditStart ( );
    HRESULT EditEnd ( );
    HRESULT MoveBody (
        IDispatch * BodyProxy );
    HRESULT MakeActive ( );
    VARIANT_BOOL IsActive ( );
    HRESULT GetSheetMetalParameter (
        enum TGPart::SheetMetalGlobalConstants Parameter,
        VARIANT * Value );
    HRESULT SetSheetMetalParameter (
        enum TGPart::SheetMetalGlobalConstants Parameter,
        const _variant_t & Value );
    enum TGPart::ModelingModeConstants GetModelingMode ( );
    void PutModelingMode (
        enum TGPart::ModelingModeConstants _arg1 );
    TGPart::SketchsPtr GetSketches ( );
    TGPart::ProfileSetsPtr GetProfileSets ( );
    TGPart::RefPlanesPtr GetPartRefPlanes ( );
    TGPart::RefAxesPtr GetRefAxes ( );
    TGPart::BendTablePtr GetBendTable ( );
    TGPart::UsedSketchesPtr GetUsedSketches ( );
    TGPart::UserDefinedSetsPtr GetUserDefinedSets ( );
    TGPart::ConstraintsPtr GetConstraints ( );
    VARIANT_BOOL GetDisableMoveToSynchronous ( );
    void PutDisableMoveToSynchronous (
        VARIANT_BOOL _arg1 );
    HRESULT Separate (
        long NumberOfFeatures,
        SAFEARRAY * * Features );
    HRESULT Break (
        long NumberOfFeatures,
        SAFEARRAY * * Features );
    HRESULT MoveToSynchronous (
        IDispatch * pFeatureUnk,
        VARIANT_BOOL bIgnoreWarnings,
        VARIANT_BOOL bExtendSelection,
        long * NumberOfFeaturesCausingError,
        SAFEARRAY * * ErrorMessageArray,
        long * NumberOfFeaturesCausingWarning,
        SAFEARRAY * * WarningMessageArray,
        double * VolumeDifference );
    HRESULT TransformToSynchronousSheetmetal (
        IDispatch * pRefFace,
        long nEdgeNum,
        SAFEARRAY * * EdgesArray,
        const _variant_t & BRType,
        double dBRWidth,
        double dBRLength,
        double dBendRadius,
        double dNeutralFactor );
    HRESULT GetCurrentMaterialName (
        BSTR * bstrMaterialName );
    HRESULT GetCurrentGageName (
        BSTR * bstrGageName );
    HRESULT GetOODStatusofMaterialAndGage (
        VARIANT_BOOL * vbMaterialPropOOD,
        VARIANT_BOOL * vbGagePropOOD );
    HRESULT GetPhysicalProperties (
        int * Status,
        double * Density,
        double * Accuracy,
        double * Volume,
        double * Area,
        double * Mass,
        SAFEARRAY * * CenterOfGravity,
        SAFEARRAY * * CenterOfVolume,
        SAFEARRAY * * GlobalMomentsOfInteria,
        SAFEARRAY * * PrincipalMomentsOfInteria,
        SAFEARRAY * * PrincipalAxes,
        SAFEARRAY * * RadiiOfGyration,
        double * RelativeAccuracyAchieved );
};

struct __declspec(uuid("cec85b73-e2f4-11d2-bed3-080036b4d502"))
_IOccurrenceAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetDisplayLiveSections,put=PutDisplayLiveSections))
    VARIANT_BOOL DisplayLiveSections;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetPartFileName))
    _bstr_t PartFileName;
    __declspec(property(get=GetPartDocument))
    IDispatchPtr PartDocument;
    __declspec(property(get=GetReferenceOnly,put=PutReferenceOnly))
    VARIANT_BOOL ReferenceOnly;
    __declspec(property(get=GetQuantity,put=PutQuantity))
    long Quantity;
    __declspec(property(get=GetSubassembly))
    VARIANT_BOOL Subassembly;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetDisplayDimensions,put=PutDisplayDimensions))
    VARIANT_BOOL DisplayDimensions;
    __declspec(property(get=GetDisplayAnnotations,put=PutDisplayAnnotations))
    VARIANT_BOOL DisplayAnnotations;
    __declspec(property(get=GetDisplayDesignBody,put=PutDisplayDesignBody))
    VARIANT_BOOL DisplayDesignBody;
    __declspec(property(get=GetCustomPropertyValue,put=PutCustomPropertyValue))
    _bstr_t CustomPropertyValue[];
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetRelations3d))
    IDispatchPtr Relations3d;
    __declspec(property(get=GetOccurrenceID))
    long OccurrenceID;
    __declspec(property(get=GetLocatable,put=PutLocatable))
    VARIANT_BOOL Locatable;
    __declspec(property(get=GetIsInternalComponent))
    VARIANT_BOOL IsInternalComponent;
    __declspec(property(get=GetInternalComponent))
    InternalComponentPtr InternalComponent;
    __declspec(property(get=GetStatus))
    enum OccurrenceStatusConstants Status;
    __declspec(property(get=GetIncludeInBom,put=PutIncludeInBom))
    VARIANT_BOOL IncludeInBom;
    __declspec(property(get=GetDisplayInDrawings,put=PutDisplayInDrawings))
    VARIANT_BOOL DisplayInDrawings;
    __declspec(property(get=GetDisplayInSubAssembly,put=PutDisplayInSubAssembly))
    VARIANT_BOOL DisplayInSubAssembly;
    __declspec(property(get=GetIsForeign))
    VARIANT_BOOL IsForeign;
    __declspec(property(get=GetIncludeInPhysicalProperties,put=PutIncludeInPhysicalProperties))
    VARIANT_BOOL IncludeInPhysicalProperties;
    __declspec(property(get=GetStyle,put=PutStyle))
    _bstr_t Style;
    __declspec(property(get=GetFaceStyle,put=PutFaceStyle))
    IDispatchPtr FaceStyle;
    __declspec(property(get=GetOccurrenceDocument))
    IDispatchPtr OccurrenceDocument;
    __declspec(property(get=GetOccurrenceFileName))
    _bstr_t OccurrenceFileName;
    __declspec(property(get=GetActivate,put=PutActivate))
    VARIANT_BOOL Activate;
    __declspec(property(get=GetTopLevelDocument))
    AssemblyDocumentPtr TopLevelDocument;
    __declspec(property(get=GetSubOccurrences))
    SubOccurrencesPtr SubOccurrences;
    __declspec(property(get=GetNongraphicQuantity,put=PutNongraphicQuantity))
    double NongraphicQuantity;
    __declspec(property(get=GetIsNongraphic))
    VARIANT_BOOL IsNongraphic;
    __declspec(property(get=GetHasNongraphicQuantity))
    VARIANT_BOOL HasNongraphicQuantity;
    __declspec(property(get=GetNongraphicPrecision))
    long NongraphicPrecision;
    __declspec(property(get=GetNongraphicDescription))
    _bstr_t NongraphicDescription;
    __declspec(property(get=GetIsFamilyOfAssembly))
    VARIANT_BOOL IsFamilyOfAssembly;
    __declspec(property(get=GetUseSimplified,put=PutUseSimplified))
    VARIANT_BOOL UseSimplified;
    __declspec(property(get=GetDisplayReferencePlanes,put=PutDisplayReferencePlanes))
    VARIANT_BOOL DisplayReferencePlanes;
    __declspec(property(get=GetDisplayCoordinateSystems,put=PutDisplayCoordinateSystems))
    VARIANT_BOOL DisplayCoordinateSystems;
    __declspec(property(get=GetDisplayConstructions,put=PutDisplayConstructions))
    VARIANT_BOOL DisplayConstructions;
    __declspec(property(get=GetDisplayReferenceAxes,put=PutDisplayReferenceAxes))
    VARIANT_BOOL DisplayReferenceAxes;
    __declspec(property(get=GetDisplaySketches,put=PutDisplaySketches))
    VARIANT_BOOL DisplaySketches;
    __declspec(property(get=GetDisplayAsLastSaved,put=PutDisplayAsLastSaved))
    VARIANT_BOOL DisplayAsLastSaved;
    __declspec(property(get=GetDisplayConstrCurves,put=PutDisplayConstrCurves))
    VARIANT_BOOL DisplayConstrCurves;
    __declspec(property(get=GetAdjustable,put=PutAdjustable))
    VARIANT_BOOL Adjustable;
    __declspec(property(get=GetIsAdjustablePart))
    VARIANT_BOOL IsAdjustablePart;
    __declspec(property(get=GetHasBodyOverride))
    VARIANT_BOOL HasBodyOverride;
    __declspec(property(get=GetBody))
    IDispatchPtr Body;
    __declspec(property(get=GetIsPatterned))
    VARIANT_BOOL IsPatterned;
    __declspec(property(get=GetIsPatternItem))
    VARIANT_BOOL IsPatternItem;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIncludeInInterference,put=PutIncludeInInterference))
    VARIANT_BOOL IncludeInInterference;
    __declspec(property(get=GetDisplayAsReference,put=PutDisplayAsReference))
    VARIANT_BOOL DisplayAsReference;
    __declspec(property(get=GetSubassemblyBodies))
    SubassemblyBodiesPtr SubassemblyBodies;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];
    __declspec(property(get=GetItemNumber,put=PutItemNumber))
    int ItemNumber;
    __declspec(property(get=GetReferencePlanesVisible,put=PutReferencePlanesVisible))
    VARIANT_BOOL ReferencePlanesVisible;
    __declspec(property(get=GetCoordinateSystemsVisible,put=PutCoordinateSystemsVisible))
    VARIANT_BOOL CoordinateSystemsVisible;
    __declspec(property(get=GetSketchesVisible,put=PutSketchesVisible))
    VARIANT_BOOL SketchesVisible;
    __declspec(property(get=GetHasUserDefinedName))
    VARIANT_BOOL HasUserDefinedName;
    __declspec(property(get=GetIsStructuralFrameItem))
    VARIANT_BOOL IsStructuralFrameItem;
    __declspec(property(get=GetIsWire))
    VARIANT_BOOL IsWire;
    __declspec(property(get=GetIsPipeFitting))
    VARIANT_BOOL IsPipeFitting;
    __declspec(property(get=GetIsPipeSegment))
    VARIANT_BOOL IsPipeSegment;
    __declspec(property(get=GetIsFastenerSystemItem))
    VARIANT_BOOL IsFastenerSystemItem;
    __declspec(property(get=GetDisplayCenterline,put=PutDisplayCenterline))
    VARIANT_BOOL DisplayCenterline;
    __declspec(property(get=GetNodeType))
    enum TGFramework::ObjectType NodeType;
    __declspec(property(get=GetIsCopy))
    VARIANT_BOOL IsCopy;
    __declspec(property(get=GetIsFamilyOfParts))
    VARIANT_BOOL IsFamilyOfParts;

    //
    // Wrapper methods for error-handling
    //

    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    _bstr_t GetPartFileName ( );
    IDispatchPtr GetPartDocument ( );
    VARIANT_BOOL GetReferenceOnly ( );
    void PutReferenceOnly (
        VARIANT_BOOL RefOnly );
    VARIANT_BOOL GetSubassembly ( );
    enum TGFramework::ObjectType GetType ( );
    long GetQuantity ( );
    void PutQuantity (
        long Quantity );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL Visible );
    HRESULT Select (
        VARIANT_BOOL Replace );
    VARIANT_BOOL GetLocatable ( );
    void PutLocatable (
        VARIANT_BOOL Locatable );
    HRESULT PutTransform (
        double OriginX,
        double OriginY,
        double OriginZ,
        double AngleX,
        double AngleY,
        double AngleZ );
    HRESULT GetTransform (
        double * OriginX,
        double * OriginY,
        double * OriginZ,
        double * AngleX,
        double * AngleY,
        double * AngleZ );
    enum OccurrenceStatusConstants GetStatus ( );
    HRESULT PutOrigin (
        double OriginX,
        double OriginY,
        double OriginZ );
    HRESULT GetOrigin (
        double * OriginX,
        double * OriginY,
        double * OriginZ );
    HRESULT Move (
        double DeltaX,
        double DeltaY,
        double DeltaZ );
    HRESULT Rotate (
        double AxisX1,
        double AxisY1,
        double AxisZ1,
        double AxisX2,
        double AxisY2,
        double AxisZ2,
        double Angle );
    IDispatchPtr GetRelations3d ( );
    HRESULT PutMatrix (
        SAFEARRAY * * Matrix,
        VARIANT_BOOL Replace );
    HRESULT GetMatrix (
        SAFEARRAY * * Matrix );
    VARIANT_BOOL GetIncludeInBom ( );
    void PutIncludeInBom (
        VARIANT_BOOL IncludeInBom );
    VARIANT_BOOL GetDisplayInDrawings ( );
    void PutDisplayInDrawings (
        VARIANT_BOOL DisplayInDrawings );
    VARIANT_BOOL GetDisplayInSubAssembly ( );
    void PutDisplayInSubAssembly (
        VARIANT_BOOL DisplayInSubAssembly );
    VARIANT_BOOL GetIncludeInPhysicalProperties ( );
    void PutIncludeInPhysicalProperties (
        VARIANT_BOOL IncludeInPhysicalProperties );
    VARIANT_BOOL GetIsForeign ( );
    HRESULT Replace (
        _bstr_t NewOccurrenceFileName,
        VARIANT_BOOL ReplaceAll,
        const _variant_t & NewFamilyMemberName = vtMissing );
    VARIANT_BOOL RenameFileName (
        _bstr_t NewOccurrenceFileName );
    HRESULT Mirror (
        IDispatch * pPlane );
    _bstr_t GetStyle ( );
    void PutStyle (
        _bstr_t Style );
    IDispatchPtr GetFaceStyle ( );
    void PutFaceStyle (
        IDispatch * FaceStyle );
    HRESULT MakeWritable ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    _bstr_t GetOccurrenceFileName ( );
    IDispatchPtr GetOccurrenceDocument ( );
    void PutActivate (
        VARIANT_BOOL bActivate );
    VARIANT_BOOL GetActivate ( );
    AssemblyDocumentPtr GetTopLevelDocument ( );
    HRESULT GetReferenceKey (
        SAFEARRAY * * ReferenceKey,
        VARIANT * KeySize );
    SubOccurrencesPtr GetSubOccurrences ( );
    HRESULT CreateTopologyReference (
        SAFEARRAY * * ReferenceKey,
        struct TopologyReference * * TopologyReference );
    VARIANT_BOOL IsTube ( );
    TubePtr GetTube ( );
    double GetNongraphicQuantity ( );
    void PutNongraphicQuantity (
        double NongraphicQuantity );
    VARIANT_BOOL GetIsNongraphic ( );
    VARIANT_BOOL GetHasNongraphicQuantity ( );
    long GetNongraphicPrecision ( );
    _bstr_t GetNongraphicDescription ( );
    VARIANT_BOOL GetIsFamilyOfAssembly ( );
    HRESULT SwapFamilyMember (
        _bstr_t MemberName,
        VARIANT_BOOL SwapAllOccurrences );
    void PutUseSimplified (
        VARIANT_BOOL UseSimplified );
    VARIANT_BOOL GetUseSimplified ( );
    VARIANT_BOOL GetDisplayReferencePlanes ( );
    void PutDisplayReferencePlanes (
        VARIANT_BOOL DisplayReferencePlanes );
    VARIANT_BOOL GetDisplayCoordinateSystems ( );
    void PutDisplayCoordinateSystems (
        VARIANT_BOOL DisplayCoordinateSystems );
    VARIANT_BOOL GetDisplayConstructions ( );
    void PutDisplayConstructions (
        VARIANT_BOOL DisplayConstructions );
    VARIANT_BOOL GetDisplayConstrCurves ( );
    void PutDisplayConstrCurves (
        VARIANT_BOOL DisplayConstrCurves );
    VARIANT_BOOL GetDisplayReferenceAxes ( );
    void PutDisplayReferenceAxes (
        VARIANT_BOOL DisplayReferenceAxes );
    VARIANT_BOOL GetDisplaySketches ( );
    void PutDisplaySketches (
        VARIANT_BOOL DisplaySketches );
    VARIANT_BOOL GetDisplayAsLastSaved ( );
    void PutDisplayAsLastSaved (
        VARIANT_BOOL DisplayAsLastSaved );
    void PutAdjustable (
        VARIANT_BOOL Adjustable );
    VARIANT_BOOL GetAdjustable ( );
    IDispatchPtr GetFaceStyle2 (
        VARIANT_BOOL vbHonourPrefs );
    AdjustablePartPtr MakeAdjustablePart ( );
    AdjustablePartPtr GetAdjustablePart ( );
    VARIANT_BOOL GetIsAdjustablePart ( );
    VARIANT_BOOL IsAlternateComponent ( );
    HRESULT AddAlternateComponent (
        _bstr_t AlternateComponentFileName );
    HRESULT RemoveAlternateComponent (
        _bstr_t AlternateComponentFileName );
    HRESULT RemoveAllAlternateComponents ( );
    HRESULT GetAllAlternateComponents (
        long * AlternateComponentCount,
        SAFEARRAY * * AlternateComponentFileNames );
    VARIANT_BOOL GetHasBodyOverride ( );
    IDispatchPtr GetBody ( );
    HRESULT GetSimplifiedBodies (
        long * NumBodies,
        SAFEARRAY * * SimplifiedBodies );
    VARIANT_BOOL GetIsPatterned ( );
    VARIANT_BOOL GetIsPatternItem ( );
    HRESULT CaptureRelationships (
        long RelationshipCount,
        SAFEARRAY * * RelationshipsToCapture );
    HRESULT ClearCapturedRelationships ( );
    HRESULT GetBodyInversionMatrix (
        SAFEARRAY * * InvMatrix );
    VARIANT_BOOL GetIncludeInInterference ( );
    void PutIncludeInInterference (
        VARIANT_BOOL IncludeInInterference );
    VARIANT_BOOL GetDisplayAsReference ( );
    void PutDisplayAsReference (
        VARIANT_BOOL DisplayAsReference );
    SubassemblyBodiesPtr GetSubassemblyBodies ( );
    HRESULT GetExplodeMatrix (
        SAFEARRAY * * Matrix );
    HRESULT RemoveOverrideBody ( );
    HRESULT GetRangeBox (
        SAFEARRAY * * MinRangePoint,
        SAFEARRAY * * MaxRangePoint );
    HRESULT RetrieveHoleLocation ( );
    HRESULT DeleteHoleLocation ( );
    HRESULT GetInterpartDrivingOccurrences (
        long * NumDrivingOccurrences,
        SAFEARRAY * * DrivingOccurrences );
    HRESULT GetInterpartDrivenOccurrences (
        long * NumDrivenOccurrences,
        SAFEARRAY * * DrivenOccurrences );
    int GetItemNumber ( );
    void PutItemNumber (
        int pnItemNumber );
    VARIANT_BOOL GetReferencePlanesVisible ( );
    void PutReferencePlanesVisible (
        VARIANT_BOOL Visible );
    VARIANT_BOOL GetCoordinateSystemsVisible ( );
    void PutCoordinateSystemsVisible (
        VARIANT_BOOL Visible );
    VARIANT_BOOL GetSketchesVisible ( );
    void PutSketchesVisible (
        VARIANT_BOOL Visible );
    HRESULT CreateTopologyReferenceToBodyOverride (
        SAFEARRAY * * ReferenceKey,
        struct TopologyReference * * TopologyReference );
    HRESULT ResetName ( );
    VARIANT_BOOL GetHasUserDefinedName ( );
    VARIANT_BOOL GetIsStructuralFrameItem ( );
    VARIANT_BOOL GetIsWire ( );
    VARIANT_BOOL GetIsPipeFitting ( );
    VARIANT_BOOL GetIsPipeSegment ( );
    VARIANT_BOOL GetIsFastenerSystemItem ( );
    HRESULT Range (
        double * x_min,
        double * y_min,
        double * z_min,
        double * x_max,
        double * y_max,
        double * z_max );
    VARIANT_BOOL GetDisplayCenterline ( );
    void PutDisplayCenterline (
        VARIANT_BOOL DisplayCenterline );
    enum TGFramework::ObjectType GetNodeType ( );
    VARIANT_BOOL GetIsCopy ( );
    VARIANT_BOOL GetIsFamilyOfParts ( );
    HRESULT GetSimplifiedBodies2 (
        long * NumBodies,
        SAFEARRAY * * SimplifiedBodies,
        SAFEARRAY * * Transforms );
    VARIANT_BOOL FileMissing ( );
    VARIANT_BOOL RecheckMissingFile ( );
    VARIANT_BOOL GetDisplayLiveSections ( );
    void PutDisplayLiveSections (
        VARIANT_BOOL Display );
    VARIANT_BOOL GetDisplayDimensions ( );
    void PutDisplayDimensions (
        VARIANT_BOOL Display );
    VARIANT_BOOL GetDisplayAnnotations ( );
    void PutDisplayAnnotations (
        VARIANT_BOOL Display );
    VARIANT_BOOL GetDisplayDesignBody ( );
    void PutDisplayDesignBody (
        VARIANT_BOOL Display );
    _bstr_t GetCustomPropertyValue (
        _bstr_t CustomPropertyName );
    void PutCustomPropertyValue (
        _bstr_t CustomPropertyName,
        _bstr_t CustomPropertyValue );
    HRESULT FrameSaveAs (
        _bstr_t FileName );
    HRESULT FrameSaveAsTranslated (
        _bstr_t FileName );
    HRESULT PutStyleUsePartStyle ( );
    HRESULT PutStyleNone ( );
    VARIANT_BOOL GetStyleNone ( );
    VARIANT_BOOL GetStyleUsePartStyle ( );
    _bstr_t FrameSaveAsBiDM (
        _bstr_t FilePath,
        _bstr_t DocumentNumber,
        _bstr_t Revision,
        _bstr_t Title );
    IDispatchPtr BindKeyToTopology (
        VARIANT_BOOL BodyOverride,
        SAFEARRAY * * ReferenceKey );
    long GetOccurrenceID ( );
    HRESULT GetSectionedFacetData (
        long PartID,
        enum OccurrenceSectionedFacetDataConstants * FacetDataPresence,
        long * FacetCount,
        SAFEARRAY * * Points,
        SAFEARRAY * * Normals,
        SAFEARRAY * * TextureCoords,
        SAFEARRAY * * StyleIDs,
        SAFEARRAY * * FaceIDs );
    HRESULT CutLength (
        double * dCutLength );
    HRESULT MiterCut (
        double * MiterCut1,
        double * MiterCut2 );
    HRESULT SideFaceEndAngle (
        double * SideFaceEndAngle1,
        double * SideFaceEndAngle2 );
    HRESULT EndFaceEndAngle (
        double * EndFaceEndAngle1,
        double * EndFaceEndAngle2 );
    VARIANT_BOOL GetIsInternalComponent ( );
    InternalComponentPtr GetInternalComponent ( );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ IDispatch * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_PartFileName (
        /*[out,retval]*/ BSTR * FileName ) = 0;
      virtual HRESULT __stdcall get_PartDocument (
        /*[out,retval]*/ IDispatch * * PartDocument ) = 0;
      virtual HRESULT __stdcall get_ReferenceOnly (
        /*[out,retval]*/ VARIANT_BOOL * RefOnly ) = 0;
      virtual HRESULT __stdcall put_ReferenceOnly (
        /*[in]*/ VARIANT_BOOL RefOnly ) = 0;
      virtual HRESULT __stdcall get_Subassembly (
        /*[out,retval]*/ VARIANT_BOOL * Subassembly ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall get_Quantity (
        /*[out,retval]*/ long * Quantity ) = 0;
      virtual HRESULT __stdcall put_Quantity (
        /*[in]*/ long Quantity ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall raw_Select (
        /*[in]*/ VARIANT_BOOL Replace ) = 0;
      virtual HRESULT __stdcall get_Locatable (
        /*[out,retval]*/ VARIANT_BOOL * Locatable ) = 0;
      virtual HRESULT __stdcall put_Locatable (
        /*[in]*/ VARIANT_BOOL Locatable ) = 0;
      virtual HRESULT __stdcall raw_PutTransform (
        /*[in]*/ double OriginX,
        /*[in]*/ double OriginY,
        /*[in]*/ double OriginZ,
        /*[in]*/ double AngleX,
        /*[in]*/ double AngleY,
        /*[in]*/ double AngleZ ) = 0;
      virtual HRESULT __stdcall raw_GetTransform (
        /*[out]*/ double * OriginX,
        /*[out]*/ double * OriginY,
        /*[out]*/ double * OriginZ,
        /*[out]*/ double * AngleX,
        /*[out]*/ double * AngleY,
        /*[out]*/ double * AngleZ ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum OccurrenceStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall raw_PutOrigin (
        /*[in]*/ double OriginX,
        /*[in]*/ double OriginY,
        /*[in]*/ double OriginZ ) = 0;
      virtual HRESULT __stdcall raw_GetOrigin (
        /*[out]*/ double * OriginX,
        /*[out]*/ double * OriginY,
        /*[out]*/ double * OriginZ ) = 0;
      virtual HRESULT __stdcall raw_Move (
        /*[in]*/ double DeltaX,
        /*[in]*/ double DeltaY,
        /*[in]*/ double DeltaZ ) = 0;
      virtual HRESULT __stdcall raw_Rotate (
        /*[in]*/ double AxisX1,
        /*[in]*/ double AxisY1,
        /*[in]*/ double AxisZ1,
        /*[in]*/ double AxisX2,
        /*[in]*/ double AxisY2,
        /*[in]*/ double AxisZ2,
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall get_Relations3d (
        /*[out,retval]*/ IDispatch * * Relations3d ) = 0;
      virtual HRESULT __stdcall raw_PutMatrix (
        /*[in]*/ SAFEARRAY * * Matrix,
        /*[in]*/ VARIANT_BOOL Replace ) = 0;
      virtual HRESULT __stdcall raw_GetMatrix (
        /*[in,out]*/ SAFEARRAY * * Matrix ) = 0;
      virtual HRESULT __stdcall get_IncludeInBom (
        /*[out,retval]*/ VARIANT_BOOL * IncludeInBom ) = 0;
      virtual HRESULT __stdcall put_IncludeInBom (
        /*[in]*/ VARIANT_BOOL IncludeInBom ) = 0;
      virtual HRESULT __stdcall get_DisplayInDrawings (
        /*[out,retval]*/ VARIANT_BOOL * DisplayInDrawings ) = 0;
      virtual HRESULT __stdcall put_DisplayInDrawings (
        /*[in]*/ VARIANT_BOOL DisplayInDrawings ) = 0;
      virtual HRESULT __stdcall get_DisplayInSubAssembly (
        /*[out,retval]*/ VARIANT_BOOL * DisplayInSubAssembly ) = 0;
      virtual HRESULT __stdcall put_DisplayInSubAssembly (
        /*[in]*/ VARIANT_BOOL DisplayInSubAssembly ) = 0;
      virtual HRESULT __stdcall get_IncludeInPhysicalProperties (
        /*[out,retval]*/ VARIANT_BOOL * IncludeInPhysicalProperties ) = 0;
      virtual HRESULT __stdcall put_IncludeInPhysicalProperties (
        /*[in]*/ VARIANT_BOOL IncludeInPhysicalProperties ) = 0;
      virtual HRESULT __stdcall get_IsForeign (
        /*[out,retval]*/ VARIANT_BOOL * IsForeign ) = 0;
      virtual HRESULT __stdcall raw_Replace (
        /*[in]*/ BSTR NewOccurrenceFileName,
        /*[in]*/ VARIANT_BOOL ReplaceAll,
        /*[in]*/ VARIANT NewFamilyMemberName = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_RenameFileName (
        /*[in]*/ BSTR NewOccurrenceFileName,
        /*[out,retval]*/ VARIANT_BOOL * IsDuplicateFileName ) = 0;
      virtual HRESULT __stdcall raw_Mirror (
        /*[in]*/ IDispatch * pPlane ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ BSTR * Style ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ BSTR Style ) = 0;
      virtual HRESULT __stdcall get_FaceStyle (
        /*[out,retval]*/ IDispatch * * FaceStyle ) = 0;
      virtual HRESULT __stdcall put_FaceStyle (
        /*[in]*/ IDispatch * FaceStyle ) = 0;
      virtual HRESULT __stdcall raw_MakeWritable ( ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall get_OccurrenceFileName (
        /*[out,retval]*/ BSTR * FileName ) = 0;
      virtual HRESULT __stdcall get_OccurrenceDocument (
        /*[out,retval]*/ IDispatch * * OccurrenceDocument ) = 0;
      virtual HRESULT __stdcall put_Activate (
        /*[in]*/ VARIANT_BOOL bActivate ) = 0;
      virtual HRESULT __stdcall get_Activate (
        /*[out,retval]*/ VARIANT_BOOL * bActivate ) = 0;
      virtual HRESULT __stdcall get_TopLevelDocument (
        /*[out,retval]*/ struct AssemblyDocument * * AssemblyDocument ) = 0;
      virtual HRESULT __stdcall raw_GetReferenceKey (
        /*[in,out]*/ SAFEARRAY * * ReferenceKey,
        /*[out]*/ VARIANT * KeySize ) = 0;
      virtual HRESULT __stdcall get_SubOccurrences (
        /*[out,retval]*/ struct SubOccurrences * * SubOccurrences ) = 0;
      virtual HRESULT __stdcall raw_CreateTopologyReference (
        /*[in]*/ SAFEARRAY * * ReferenceKey,
        /*[out]*/ struct TopologyReference * * TopologyReference ) = 0;
      virtual HRESULT __stdcall raw_IsTube (
        /*[out,retval]*/ VARIANT_BOOL * IsTube ) = 0;
      virtual HRESULT __stdcall raw_GetTube (
        /*[out,retval]*/ struct Tube * * Tube ) = 0;
      virtual HRESULT __stdcall get_NongraphicQuantity (
        /*[out,retval]*/ double * NongraphicQuantity ) = 0;
      virtual HRESULT __stdcall put_NongraphicQuantity (
        /*[in]*/ double NongraphicQuantity ) = 0;
      virtual HRESULT __stdcall get_IsNongraphic (
        /*[out,retval]*/ VARIANT_BOOL * IsNongraphic ) = 0;
      virtual HRESULT __stdcall get_HasNongraphicQuantity (
        /*[out,retval]*/ VARIANT_BOOL * HasNongraphicQuantity ) = 0;
      virtual HRESULT __stdcall get_NongraphicPrecision (
        /*[out,retval]*/ long * NongraphicPrecision ) = 0;
      virtual HRESULT __stdcall get_NongraphicDescription (
        /*[out,retval]*/ BSTR * NongraphicDescription ) = 0;
      virtual HRESULT __stdcall get_IsFamilyOfAssembly (
        /*[out,retval]*/ VARIANT_BOOL * IsFamilyOfAssembly ) = 0;
      virtual HRESULT __stdcall raw_SwapFamilyMember (
        /*[in]*/ BSTR MemberName,
        /*[in]*/ VARIANT_BOOL SwapAllOccurrences ) = 0;
      virtual HRESULT __stdcall put_UseSimplified (
        /*[in]*/ VARIANT_BOOL UseSimplified ) = 0;
      virtual HRESULT __stdcall get_UseSimplified (
        /*[out,retval]*/ VARIANT_BOOL * UseSimplified ) = 0;
      virtual HRESULT __stdcall get_DisplayReferencePlanes (
        /*[out,retval]*/ VARIANT_BOOL * DisplayReferencePlanes ) = 0;
      virtual HRESULT __stdcall put_DisplayReferencePlanes (
        /*[in]*/ VARIANT_BOOL DisplayReferencePlanes ) = 0;
      virtual HRESULT __stdcall get_DisplayCoordinateSystems (
        /*[out,retval]*/ VARIANT_BOOL * DisplayCoordinateSystems ) = 0;
      virtual HRESULT __stdcall put_DisplayCoordinateSystems (
        /*[in]*/ VARIANT_BOOL DisplayCoordinateSystems ) = 0;
      virtual HRESULT __stdcall get_DisplayConstructions (
        /*[out,retval]*/ VARIANT_BOOL * DisplayConstructions ) = 0;
      virtual HRESULT __stdcall put_DisplayConstructions (
        /*[in]*/ VARIANT_BOOL DisplayConstructions ) = 0;
      virtual HRESULT __stdcall get_DisplayConstrCurves (
        /*[out,retval]*/ VARIANT_BOOL * DisplayConstrCurves ) = 0;
      virtual HRESULT __stdcall put_DisplayConstrCurves (
        /*[in]*/ VARIANT_BOOL DisplayConstrCurves ) = 0;
      virtual HRESULT __stdcall get_DisplayReferenceAxes (
        /*[out,retval]*/ VARIANT_BOOL * DisplayReferenceAxes ) = 0;
      virtual HRESULT __stdcall put_DisplayReferenceAxes (
        /*[in]*/ VARIANT_BOOL DisplayReferenceAxes ) = 0;
      virtual HRESULT __stdcall get_DisplaySketches (
        /*[out,retval]*/ VARIANT_BOOL * DisplaySketches ) = 0;
      virtual HRESULT __stdcall put_DisplaySketches (
        /*[in]*/ VARIANT_BOOL DisplaySketches ) = 0;
      virtual HRESULT __stdcall get_DisplayAsLastSaved (
        /*[out,retval]*/ VARIANT_BOOL * DisplayAsLastSaved ) = 0;
      virtual HRESULT __stdcall put_DisplayAsLastSaved (
        /*[in]*/ VARIANT_BOOL DisplayAsLastSaved ) = 0;
      virtual HRESULT __stdcall put_Adjustable (
        /*[in]*/ VARIANT_BOOL Adjustable ) = 0;
      virtual HRESULT __stdcall get_Adjustable (
        /*[out,retval]*/ VARIANT_BOOL * Adjustable ) = 0;
      virtual HRESULT __stdcall raw_GetFaceStyle2 (
        /*[in]*/ VARIANT_BOOL vbHonourPrefs,
        /*[out,retval]*/ IDispatch * * FaceStyle ) = 0;
      virtual HRESULT __stdcall raw_MakeAdjustablePart (
        /*[out,retval]*/ struct AdjustablePart * * AdjustablePart ) = 0;
      virtual HRESULT __stdcall raw_GetAdjustablePart (
        /*[out,retval]*/ struct AdjustablePart * * AdjustablePart ) = 0;
      virtual HRESULT __stdcall get_IsAdjustablePart (
        /*[out,retval]*/ VARIANT_BOOL * IsAdjustablePart ) = 0;
      virtual HRESULT __stdcall raw_IsAlternateComponent (
        /*[out,retval]*/ VARIANT_BOOL * IsAlternateComponent ) = 0;
      virtual HRESULT __stdcall raw_AddAlternateComponent (
        /*[in]*/ BSTR AlternateComponentFileName ) = 0;
      virtual HRESULT __stdcall raw_RemoveAlternateComponent (
        /*[in]*/ BSTR AlternateComponentFileName ) = 0;
      virtual HRESULT __stdcall raw_RemoveAllAlternateComponents ( ) = 0;
      virtual HRESULT __stdcall raw_GetAllAlternateComponents (
        /*[out]*/ long * AlternateComponentCount,
        /*[out]*/ SAFEARRAY * * AlternateComponentFileNames ) = 0;
      virtual HRESULT __stdcall get_HasBodyOverride (
        /*[out,retval]*/ VARIANT_BOOL * HasBodyOverride ) = 0;
      virtual HRESULT __stdcall get_Body (
        /*[out,retval]*/ IDispatch * * Body ) = 0;
      virtual HRESULT __stdcall raw_GetSimplifiedBodies (
        /*[out]*/ long * NumBodies,
        /*[in,out]*/ SAFEARRAY * * SimplifiedBodies ) = 0;
      virtual HRESULT __stdcall get_IsPatterned (
        /*[out,retval]*/ VARIANT_BOOL * IsPatterned ) = 0;
      virtual HRESULT __stdcall get_IsPatternItem (
        /*[out,retval]*/ VARIANT_BOOL * IsPatternItem ) = 0;
      virtual HRESULT __stdcall raw_CaptureRelationships (
        /*[in]*/ long RelationshipCount,
        /*[in]*/ SAFEARRAY * * RelationshipsToCapture ) = 0;
      virtual HRESULT __stdcall raw_ClearCapturedRelationships ( ) = 0;
      virtual HRESULT __stdcall raw_GetBodyInversionMatrix (
        /*[in,out]*/ SAFEARRAY * * InvMatrix ) = 0;
      virtual HRESULT __stdcall get_IncludeInInterference (
        /*[out,retval]*/ VARIANT_BOOL * IncludeInInterference ) = 0;
      virtual HRESULT __stdcall put_IncludeInInterference (
        /*[in]*/ VARIANT_BOOL IncludeInInterference ) = 0;
      virtual HRESULT __stdcall get_DisplayAsReference (
        /*[out,retval]*/ VARIANT_BOOL * DisplayAsReference ) = 0;
      virtual HRESULT __stdcall put_DisplayAsReference (
        /*[in]*/ VARIANT_BOOL DisplayAsReference ) = 0;
      virtual HRESULT __stdcall get_SubassemblyBodies (
        /*[out,retval]*/ struct SubassemblyBodies * * SubassemblyBodies ) = 0;
      virtual HRESULT __stdcall raw_GetExplodeMatrix (
        /*[in,out]*/ SAFEARRAY * * Matrix ) = 0;
      virtual HRESULT __stdcall raw_RemoveOverrideBody ( ) = 0;
      virtual HRESULT __stdcall raw_GetRangeBox (
        /*[in,out]*/ SAFEARRAY * * MinRangePoint,
        /*[in,out]*/ SAFEARRAY * * MaxRangePoint ) = 0;
      virtual HRESULT __stdcall raw_RetrieveHoleLocation ( ) = 0;
      virtual HRESULT __stdcall raw_DeleteHoleLocation ( ) = 0;
      virtual HRESULT __stdcall raw_GetInterpartDrivingOccurrences (
        /*[out]*/ long * NumDrivingOccurrences,
        /*[in,out]*/ SAFEARRAY * * DrivingOccurrences ) = 0;
      virtual HRESULT __stdcall raw_GetInterpartDrivenOccurrences (
        /*[out]*/ long * NumDrivenOccurrences,
        /*[in,out]*/ SAFEARRAY * * DrivenOccurrences ) = 0;
      virtual HRESULT __stdcall get_ItemNumber (
        /*[out,retval]*/ int * pnItemNumber ) = 0;
      virtual HRESULT __stdcall put_ItemNumber (
        /*[in]*/ int pnItemNumber ) = 0;
      virtual HRESULT __stdcall get_ReferencePlanesVisible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_ReferencePlanesVisible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall get_CoordinateSystemsVisible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_CoordinateSystemsVisible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall get_SketchesVisible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_SketchesVisible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall raw_CreateTopologyReferenceToBodyOverride (
        /*[in]*/ SAFEARRAY * * ReferenceKey,
        /*[out]*/ struct TopologyReference * * TopologyReference ) = 0;
      virtual HRESULT __stdcall raw_ResetName ( ) = 0;
      virtual HRESULT __stdcall get_HasUserDefinedName (
        /*[out,retval]*/ VARIANT_BOOL * HasUserDefinedName ) = 0;
      virtual HRESULT __stdcall get_IsStructuralFrameItem (
        /*[out,retval]*/ VARIANT_BOOL * IsStructuralFrameItem ) = 0;
      virtual HRESULT __stdcall get_IsWire (
        /*[out,retval]*/ VARIANT_BOOL * IsWire ) = 0;
      virtual HRESULT __stdcall get_IsPipeFitting (
        /*[out,retval]*/ VARIANT_BOOL * IsPipeFitting ) = 0;
      virtual HRESULT __stdcall get_IsPipeSegment (
        /*[out,retval]*/ VARIANT_BOOL * IsPipeSegment ) = 0;
      virtual HRESULT __stdcall get_IsFastenerSystemItem (
        /*[out,retval]*/ VARIANT_BOOL * IsFastenerSystemItem ) = 0;
      virtual HRESULT __stdcall raw_Range (
        /*[out]*/ double * x_min,
        /*[out]*/ double * y_min,
        /*[out]*/ double * z_min,
        /*[out]*/ double * x_max,
        /*[out]*/ double * y_max,
        /*[out]*/ double * z_max ) = 0;
      virtual HRESULT __stdcall get_DisplayCenterline (
        /*[out,retval]*/ VARIANT_BOOL * DisplayCenterline ) = 0;
      virtual HRESULT __stdcall put_DisplayCenterline (
        /*[in]*/ VARIANT_BOOL DisplayCenterline ) = 0;
      virtual HRESULT __stdcall get_NodeType (
        /*[out,retval]*/ enum TGFramework::ObjectType * pNodeType ) = 0;
      virtual HRESULT __stdcall get_IsCopy (
        /*[out,retval]*/ VARIANT_BOOL * bIsCopy ) = 0;
      virtual HRESULT __stdcall get_IsFamilyOfParts (
        /*[out,retval]*/ VARIANT_BOOL * IsFamilyOfParts ) = 0;
      virtual HRESULT __stdcall raw_GetSimplifiedBodies2 (
        /*[out]*/ long * NumBodies,
        /*[in,out]*/ SAFEARRAY * * SimplifiedBodies,
        /*[in,out]*/ SAFEARRAY * * Transforms ) = 0;
      virtual HRESULT __stdcall raw_FileMissing (
        /*[out,retval]*/ VARIANT_BOOL * bFileMissing ) = 0;
      virtual HRESULT __stdcall raw_RecheckMissingFile (
        /*[out,retval]*/ VARIANT_BOOL * bFoundPreviouslyMissingFile ) = 0;
      virtual HRESULT __stdcall get_DisplayLiveSections (
        /*[out,retval]*/ VARIANT_BOOL * Display ) = 0;
      virtual HRESULT __stdcall put_DisplayLiveSections (
        /*[in]*/ VARIANT_BOOL Display ) = 0;
      virtual HRESULT __stdcall get_DisplayDimensions (
        /*[out,retval]*/ VARIANT_BOOL * Display ) = 0;
      virtual HRESULT __stdcall put_DisplayDimensions (
        /*[in]*/ VARIANT_BOOL Display ) = 0;
      virtual HRESULT __stdcall get_DisplayAnnotations (
        /*[out,retval]*/ VARIANT_BOOL * Display ) = 0;
      virtual HRESULT __stdcall put_DisplayAnnotations (
        /*[in]*/ VARIANT_BOOL Display ) = 0;
      virtual HRESULT __stdcall get_DisplayDesignBody (
        /*[out,retval]*/ VARIANT_BOOL * Display ) = 0;
      virtual HRESULT __stdcall put_DisplayDesignBody (
        /*[in]*/ VARIANT_BOOL Display ) = 0;
      virtual HRESULT __stdcall get_CustomPropertyValue (
        /*[in]*/ BSTR CustomPropertyName,
        /*[out,retval]*/ BSTR * CustomPropertyValue ) = 0;
      virtual HRESULT __stdcall put_CustomPropertyValue (
        /*[in]*/ BSTR CustomPropertyName,
        /*[in]*/ BSTR CustomPropertyValue ) = 0;
      virtual HRESULT __stdcall raw_FrameSaveAs (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_FrameSaveAsTranslated (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_PutStyleUsePartStyle ( ) = 0;
      virtual HRESULT __stdcall raw_PutStyleNone ( ) = 0;
      virtual HRESULT __stdcall raw_GetStyleNone (
        /*[out,retval]*/ VARIANT_BOOL * NoneStyleSet ) = 0;
      virtual HRESULT __stdcall raw_GetStyleUsePartStyle (
        /*[out,retval]*/ VARIANT_BOOL * UsePartStyleSet ) = 0;
      virtual HRESULT __stdcall raw_FrameSaveAsBiDM (
        /*[in]*/ BSTR FilePath,
        /*[in]*/ BSTR DocumentNumber,
        /*[in]*/ BSTR Revision,
        /*[in]*/ BSTR Title,
        /*[out,retval]*/ BSTR * NewFileName ) = 0;
      virtual HRESULT __stdcall raw_BindKeyToTopology (
        /*[in]*/ VARIANT_BOOL BodyOverride,
        /*[in]*/ SAFEARRAY * * ReferenceKey,
        /*[out,retval]*/ IDispatch * * Topology ) = 0;
      virtual HRESULT __stdcall get_OccurrenceID (
        /*[out,retval]*/ long * ID ) = 0;
      virtual HRESULT __stdcall raw_GetSectionedFacetData (
        /*[in]*/ long PartID,
        /*[out]*/ enum OccurrenceSectionedFacetDataConstants * FacetDataPresence,
        /*[out]*/ long * FacetCount,
        /*[in,out]*/ SAFEARRAY * * Points,
        /*[in,out]*/ SAFEARRAY * * Normals,
        /*[in,out]*/ SAFEARRAY * * TextureCoords,
        /*[in,out]*/ SAFEARRAY * * StyleIDs,
        /*[in,out]*/ SAFEARRAY * * FaceIDs ) = 0;
      virtual HRESULT __stdcall raw_CutLength (
        /*[out]*/ double * dCutLength ) = 0;
      virtual HRESULT __stdcall raw_MiterCut (
        /*[out]*/ double * MiterCut1,
        /*[out]*/ double * MiterCut2 ) = 0;
      virtual HRESULT __stdcall raw_SideFaceEndAngle (
        /*[out]*/ double * SideFaceEndAngle1,
        /*[out]*/ double * SideFaceEndAngle2 ) = 0;
      virtual HRESULT __stdcall raw_EndFaceEndAngle (
        /*[out]*/ double * EndFaceEndAngle1,
        /*[out]*/ double * EndFaceEndAngle2 ) = 0;
      virtual HRESULT __stdcall get_IsInternalComponent (
        /*[out,retval]*/ VARIANT_BOOL * IsInternalComponent ) = 0;
      virtual HRESULT __stdcall get_InternalComponent (
        /*[out,retval]*/ struct InternalComponent * * InternalComponent ) = 0;
      virtual HRESULT __stdcall raw_GetSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_AddSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_DeleteSuppressionVariable ( ) = 0;
      virtual HRESULT __stdcall raw_HasSuppressionVariable (
        /*[out,retval]*/ VARIANT_BOOL * IsSuppressionVariablePresent ) = 0;
};

struct __declspec(uuid("915ced01-8594-11d3-9736-0060973828b5"))
_ISubOccurrenceAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetTopLevelDocument))
    AssemblyDocumentPtr TopLevelDocument;
    __declspec(property(get=GetSubOccurrenceDocument))
    IDispatchPtr SubOccurrenceDocument;
    __declspec(property(get=GetSubOccurrenceFileName))
    _bstr_t SubOccurrenceFileName;
    __declspec(property(get=GetSubOccurrences))
    SubOccurrencesPtr SubOccurrences;
    __declspec(property(get=GetSubassembly))
    VARIANT_BOOL Subassembly;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetUseSimplified,put=PutUseSimplified))
    VARIANT_BOOL UseSimplified;
    __declspec(property(get=GetDisplayReferencePlanes,put=PutDisplayReferencePlanes))
    VARIANT_BOOL DisplayReferencePlanes;
    __declspec(property(get=GetDisplayCoordinateSystems,put=PutDisplayCoordinateSystems))
    VARIANT_BOOL DisplayCoordinateSystems;
    __declspec(property(get=GetDisplayConstructions,put=PutDisplayConstructions))
    VARIANT_BOOL DisplayConstructions;
    __declspec(property(get=GetDisplayConstrCurves,put=PutDisplayConstrCurves))
    VARIANT_BOOL DisplayConstrCurves;
    __declspec(property(get=GetDisplayReferenceAxes,put=PutDisplayReferenceAxes))
    VARIANT_BOOL DisplayReferenceAxes;
    __declspec(property(get=GetDisplaySketches,put=PutDisplaySketches))
    VARIANT_BOOL DisplaySketches;
    __declspec(property(get=GetDisplayAsLastSaved,put=PutDisplayAsLastSaved))
    VARIANT_BOOL DisplayAsLastSaved;
    __declspec(property(get=GetAdjustable,put=PutAdjustable))
    VARIANT_BOOL Adjustable;
    __declspec(property(get=GetThisAsOccurrence))
    OccurrencePtr ThisAsOccurrence;
    __declspec(property(get=GetHasBodyOverride))
    VARIANT_BOOL HasBodyOverride;
    __declspec(property(get=GetBody))
    IDispatchPtr Body;
    __declspec(property(get=GetIsPatterned))
    VARIANT_BOOL IsPatterned;
    __declspec(property(get=GetIsPatternItem))
    VARIANT_BOOL IsPatternItem;
    __declspec(property(get=GetIsAdjustablePart))
    VARIANT_BOOL IsAdjustablePart;
    __declspec(property(get=GetSubassemblyBodies))
    SubassemblyBodiesPtr SubassemblyBodies;
    __declspec(property(get=GetItemNumber,put=PutItemNumber))
    int ItemNumber;
    __declspec(property(get=GetReferencePlanesVisible,put=PutReferencePlanesVisible))
    VARIANT_BOOL ReferencePlanesVisible;
    __declspec(property(get=GetCoordinateSystemsVisible,put=PutCoordinateSystemsVisible))
    VARIANT_BOOL CoordinateSystemsVisible;
    __declspec(property(get=GetSketchesVisible,put=PutSketchesVisible))
    VARIANT_BOOL SketchesVisible;
    __declspec(property(get=GetDisplayCenterline,put=PutDisplayCenterline))
    VARIANT_BOOL DisplayCenterline;
    __declspec(property(get=GetReference))
    TGFramework::ReferencePtr Reference;
    __declspec(property(get=GetNodeType))
    enum TGFramework::ObjectType NodeType;
    __declspec(property(get=GetDisplayLiveSections,put=PutDisplayLiveSections))
    VARIANT_BOOL DisplayLiveSections;
    __declspec(property(get=GetDisplayDimensions,put=PutDisplayDimensions))
    VARIANT_BOOL DisplayDimensions;
    __declspec(property(get=GetDisplayAnnotations,put=PutDisplayAnnotations))
    VARIANT_BOOL DisplayAnnotations;
    __declspec(property(get=GetDisplayDesignBody,put=PutDisplayDesignBody))
    VARIANT_BOOL DisplayDesignBody;
    __declspec(property(get=GetHideInDrawing,put=PutHideInDrawing))
    VARIANT_BOOL HideInDrawing;
    __declspec(property(get=GetHideInSubassembly,put=PutHideInSubassembly))
    VARIANT_BOOL HideInSubassembly;
    __declspec(property(get=GetLocatable,put=PutLocatable))
    VARIANT_BOOL Locatable;
    __declspec(property(get=GetDisplayAsDraftReference,put=PutDisplayAsDraftReference))
    VARIANT_BOOL DisplayAsDraftReference;
    __declspec(property(get=GetExcludeFromPhysicalProperties,put=PutExcludeFromPhysicalProperties))
    VARIANT_BOOL ExcludeFromPhysicalProperties;
    __declspec(property(get=GetExcludeFromReports,put=PutExcludeFromReports))
    VARIANT_BOOL ExcludeFromReports;
    __declspec(property(get=GetExcludeFromInterference,put=PutExcludeFromInterference))
    VARIANT_BOOL ExcludeFromInterference;
    __declspec(property(get=GetCustomPropertyValue,put=PutCustomPropertyValue))
    _bstr_t CustomPropertyValue[];
    __declspec(property(get=GetFaceStyle,put=PutFaceStyle))
    IDispatchPtr FaceStyle;
    __declspec(property(get=GetStyle,put=PutStyle))
    _bstr_t Style;
    __declspec(property(get=GetIsInternalComponent))
    VARIANT_BOOL IsInternalComponent;
    __declspec(property(get=GetInternalComponent))
    InternalComponentPtr InternalComponent;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyDocumentPtr GetTopLevelDocument ( );
    IDispatchPtr GetSubOccurrenceDocument ( );
    _bstr_t GetSubOccurrenceFileName ( );
    HRESULT GetReferenceKey (
        SAFEARRAY * * ReferenceKey,
        VARIANT * KeySize );
    SubOccurrencesPtr GetSubOccurrences ( );
    HRESULT GetMatrix (
        SAFEARRAY * * Matrix );
    HRESULT CreateTopologyReference (
        SAFEARRAY * * ReferenceKey,
        struct TopologyReference * * TopologyReference );
    VARIANT_BOOL GetSubassembly ( );
    enum TGFramework::ObjectType GetType ( );
    _bstr_t GetName ( );
    HRESULT GetMaterial (
        SAFEARRAY * * DiffuseColor,
        SAFEARRAY * * AmbientColor,
        SAFEARRAY * * SpecularColor,
        SAFEARRAY * * EmissionColor,
        double * Shininess,
        double * Opacity );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL pbVisible );
    VARIANT_BOOL GetUseSimplified ( );
    void PutUseSimplified (
        VARIANT_BOOL pbUseSimplified );
    VARIANT_BOOL GetDisplayReferencePlanes ( );
    void PutDisplayReferencePlanes (
        VARIANT_BOOL pbDisplayReferencePlanes );
    VARIANT_BOOL GetDisplayCoordinateSystems ( );
    void PutDisplayCoordinateSystems (
        VARIANT_BOOL pbDisplayCoordinateSystems );
    VARIANT_BOOL GetDisplayConstructions ( );
    void PutDisplayConstructions (
        VARIANT_BOOL pbDisplayConstructions );
    VARIANT_BOOL GetDisplayConstrCurves ( );
    void PutDisplayConstrCurves (
        VARIANT_BOOL pbDisplayConstrCurves );
    VARIANT_BOOL GetDisplayReferenceAxes ( );
    void PutDisplayReferenceAxes (
        VARIANT_BOOL pbDisplayReferenceAxes );
    VARIANT_BOOL GetDisplaySketches ( );
    void PutDisplaySketches (
        VARIANT_BOOL pbDisplaySketches );
    VARIANT_BOOL GetDisplayAsLastSaved ( );
    void PutDisplayAsLastSaved (
        VARIANT_BOOL pbDisplayAsLastSaved );
    void PutAdjustable (
        VARIANT_BOOL Adjustable );
    VARIANT_BOOL GetAdjustable ( );
    HRESULT PutMatrix (
        SAFEARRAY * * Matrix,
        VARIANT_BOOL Replace );
    OccurrencePtr GetThisAsOccurrence ( );
    VARIANT_BOOL GetHasBodyOverride ( );
    IDispatchPtr GetBody ( );
    HRESULT GetSimplifiedBodies (
        long * NumBodies,
        SAFEARRAY * * SimplifiedBodies );
    VARIANT_BOOL GetIsPatterned ( );
    VARIANT_BOOL GetIsPatternItem ( );
    HRESULT GetBodyInversionMatrix (
        SAFEARRAY * * InvMatrix );
    AdjustablePartPtr MakeAdjustablePart ( );
    AdjustablePartPtr GetAdjustablePart ( );
    VARIANT_BOOL GetIsAdjustablePart ( );
    SubassemblyBodiesPtr GetSubassemblyBodies ( );
    HRESULT GetExplodeMatrix (
        SAFEARRAY * * Matrix );
    HRESULT RemoveOverrideBody ( );
    HRESULT GetRangeBox (
        SAFEARRAY * * MinRangePoint,
        SAFEARRAY * * MaxRangePoint );
    HRESULT GetInterpartDrivingOccurrences (
        long * NumDrivingOccurrences,
        SAFEARRAY * * DrivingOccurrences );
    HRESULT GetInterpartDrivenOccurrences (
        long * NumDrivenOccurrences,
        SAFEARRAY * * DrivenOccurrences );
    int GetItemNumber ( );
    void PutItemNumber (
        int pnItemNumber );
    VARIANT_BOOL GetReferencePlanesVisible ( );
    void PutReferencePlanesVisible (
        VARIANT_BOOL pbVisible );
    VARIANT_BOOL GetCoordinateSystemsVisible ( );
    void PutCoordinateSystemsVisible (
        VARIANT_BOOL pbVisible );
    VARIANT_BOOL GetSketchesVisible ( );
    void PutSketchesVisible (
        VARIANT_BOOL pbVisible );
    HRESULT CreateTopologyReferenceToBodyOverride (
        SAFEARRAY * * ReferenceKey,
        struct TopologyReference * * TopologyReference );
    HRESULT Range (
        double * x_min,
        double * y_min,
        double * z_min,
        double * x_max,
        double * y_max,
        double * z_max );
    VARIANT_BOOL GetDisplayCenterline ( );
    void PutDisplayCenterline (
        VARIANT_BOOL bCenterline );
    TGFramework::ReferencePtr GetReference ( );
    enum TGFramework::ObjectType GetNodeType ( );
    VARIANT_BOOL FileMissing ( );
    VARIANT_BOOL RecheckMissingFile ( );
    VARIANT_BOOL GetDisplayLiveSections ( );
    void PutDisplayLiveSections (
        VARIANT_BOOL Display );
    VARIANT_BOOL GetDisplayDimensions ( );
    void PutDisplayDimensions (
        VARIANT_BOOL Display );
    VARIANT_BOOL GetDisplayAnnotations ( );
    void PutDisplayAnnotations (
        VARIANT_BOOL Display );
    VARIANT_BOOL GetDisplayDesignBody ( );
    void PutDisplayDesignBody (
        VARIANT_BOOL Display );
    VARIANT_BOOL GetHideInDrawing ( );
    void PutHideInDrawing (
        VARIANT_BOOL pvbHideInDwg );
    VARIANT_BOOL GetHideInSubassembly ( );
    void PutHideInSubassembly (
        VARIANT_BOOL pvbHideInSub );
    VARIANT_BOOL GetLocatable ( );
    void PutLocatable (
        VARIANT_BOOL pvbLocatable );
    VARIANT_BOOL GetDisplayAsDraftReference ( );
    void PutDisplayAsDraftReference (
        VARIANT_BOOL pvbDisplayAsDraftRef );
    VARIANT_BOOL GetExcludeFromPhysicalProperties ( );
    void PutExcludeFromPhysicalProperties (
        VARIANT_BOOL pvbExcludeFromPhysProps );
    VARIANT_BOOL GetExcludeFromReports ( );
    void PutExcludeFromReports (
        VARIANT_BOOL pvExcludeFromReports );
    VARIANT_BOOL GetExcludeFromInterference ( );
    void PutExcludeFromInterference (
        VARIANT_BOOL pvbExcludeFromInterferenceAnalysis );
    _bstr_t GetCustomPropertyValue (
        _bstr_t CustomPropertyName );
    void PutCustomPropertyValue (
        _bstr_t CustomPropertyName,
        _bstr_t CustomPropertyValue );
    IDispatchPtr GetFaceStyle ( );
    void PutFaceStyle (
        IDispatch * FaceStyle );
    IDispatchPtr GetFaceStyle2 (
        VARIANT_BOOL vbHonourPrefs );
    HRESULT PutStyleUsePartStyle ( );
    HRESULT PutStyleNone ( );
    VARIANT_BOOL GetStyleNone ( );
    VARIANT_BOOL GetStyleUsePartStyle ( );
    _bstr_t GetStyle ( );
    void PutStyle (
        _bstr_t Style );
    IDispatchPtr BindKeyToTopology (
        VARIANT_BOOL BodyOverride,
        SAFEARRAY * * ReferenceKey );
    HRESULT GetSectionedFacetData (
        long PartID,
        enum OccurrenceSectionedFacetDataConstants * FacetDataPresence,
        long * FacetCount,
        SAFEARRAY * * Points,
        SAFEARRAY * * Normals,
        SAFEARRAY * * TextureCoords,
        SAFEARRAY * * StyleIDs,
        SAFEARRAY * * FaceIDs );
    VARIANT_BOOL GetIsInternalComponent ( );
    InternalComponentPtr GetInternalComponent ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_TopLevelDocument (
        /*[out,retval]*/ struct AssemblyDocument * * AssemblyDocument ) = 0;
      virtual HRESULT __stdcall get_SubOccurrenceDocument (
        /*[out,retval]*/ IDispatch * * Document ) = 0;
      virtual HRESULT __stdcall get_SubOccurrenceFileName (
        /*[out,retval]*/ BSTR * OccurrenceFileName ) = 0;
      virtual HRESULT __stdcall raw_GetReferenceKey (
        /*[in,out]*/ SAFEARRAY * * ReferenceKey,
        /*[out]*/ VARIANT * KeySize ) = 0;
      virtual HRESULT __stdcall get_SubOccurrences (
        /*[out,retval]*/ struct SubOccurrences * * SubOccurrences ) = 0;
      virtual HRESULT __stdcall raw_GetMatrix (
        /*[in,out]*/ SAFEARRAY * * Matrix ) = 0;
      virtual HRESULT __stdcall raw_CreateTopologyReference (
        /*[in]*/ SAFEARRAY * * ReferenceKey,
        /*[out]*/ struct TopologyReference * * TopologyReference ) = 0;
      virtual HRESULT __stdcall get_Subassembly (
        /*[out,retval]*/ VARIANT_BOOL * Subassembly ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall raw_GetMaterial (
        /*[in,out]*/ SAFEARRAY * * DiffuseColor,
        /*[in,out]*/ SAFEARRAY * * AmbientColor,
        /*[in,out]*/ SAFEARRAY * * SpecularColor,
        /*[in,out]*/ SAFEARRAY * * EmissionColor,
        /*[out]*/ double * Shininess,
        /*[out]*/ double * Opacity ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * pbVisible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL pbVisible ) = 0;
      virtual HRESULT __stdcall get_UseSimplified (
        /*[out,retval]*/ VARIANT_BOOL * pbUseSimplified ) = 0;
      virtual HRESULT __stdcall put_UseSimplified (
        /*[in]*/ VARIANT_BOOL pbUseSimplified ) = 0;
      virtual HRESULT __stdcall get_DisplayReferencePlanes (
        /*[out,retval]*/ VARIANT_BOOL * pbDisplayReferencePlanes ) = 0;
      virtual HRESULT __stdcall put_DisplayReferencePlanes (
        /*[in]*/ VARIANT_BOOL pbDisplayReferencePlanes ) = 0;
      virtual HRESULT __stdcall get_DisplayCoordinateSystems (
        /*[out,retval]*/ VARIANT_BOOL * pbDisplayCoordinateSystems ) = 0;
      virtual HRESULT __stdcall put_DisplayCoordinateSystems (
        /*[in]*/ VARIANT_BOOL pbDisplayCoordinateSystems ) = 0;
      virtual HRESULT __stdcall get_DisplayConstructions (
        /*[out,retval]*/ VARIANT_BOOL * pbDisplayConstructions ) = 0;
      virtual HRESULT __stdcall put_DisplayConstructions (
        /*[in]*/ VARIANT_BOOL pbDisplayConstructions ) = 0;
      virtual HRESULT __stdcall get_DisplayConstrCurves (
        /*[out,retval]*/ VARIANT_BOOL * pbDisplayConstrCurves ) = 0;
      virtual HRESULT __stdcall put_DisplayConstrCurves (
        /*[in]*/ VARIANT_BOOL pbDisplayConstrCurves ) = 0;
      virtual HRESULT __stdcall get_DisplayReferenceAxes (
        /*[out,retval]*/ VARIANT_BOOL * pbDisplayReferenceAxes ) = 0;
      virtual HRESULT __stdcall put_DisplayReferenceAxes (
        /*[in]*/ VARIANT_BOOL pbDisplayReferenceAxes ) = 0;
      virtual HRESULT __stdcall get_DisplaySketches (
        /*[out,retval]*/ VARIANT_BOOL * pbDisplaySketches ) = 0;
      virtual HRESULT __stdcall put_DisplaySketches (
        /*[in]*/ VARIANT_BOOL pbDisplaySketches ) = 0;
      virtual HRESULT __stdcall get_DisplayAsLastSaved (
        /*[out,retval]*/ VARIANT_BOOL * pbDisplayAsLastSaved ) = 0;
      virtual HRESULT __stdcall put_DisplayAsLastSaved (
        /*[in]*/ VARIANT_BOOL pbDisplayAsLastSaved ) = 0;
      virtual HRESULT __stdcall put_Adjustable (
        /*[in]*/ VARIANT_BOOL Adjustable ) = 0;
      virtual HRESULT __stdcall get_Adjustable (
        /*[out,retval]*/ VARIANT_BOOL * Adjustable ) = 0;
      virtual HRESULT __stdcall raw_PutMatrix (
        /*[in]*/ SAFEARRAY * * Matrix,
        /*[in]*/ VARIANT_BOOL Replace ) = 0;
      virtual HRESULT __stdcall get_ThisAsOccurrence (
        /*[out,retval]*/ struct Occurrence * * Occurrence ) = 0;
      virtual HRESULT __stdcall get_HasBodyOverride (
        /*[out,retval]*/ VARIANT_BOOL * HasBodyOverride ) = 0;
      virtual HRESULT __stdcall get_Body (
        /*[out,retval]*/ IDispatch * * Body ) = 0;
      virtual HRESULT __stdcall raw_GetSimplifiedBodies (
        /*[out]*/ long * NumBodies,
        /*[in,out]*/ SAFEARRAY * * SimplifiedBodies ) = 0;
      virtual HRESULT __stdcall get_IsPatterned (
        /*[out,retval]*/ VARIANT_BOOL * IsPatterned ) = 0;
      virtual HRESULT __stdcall get_IsPatternItem (
        /*[out,retval]*/ VARIANT_BOOL * IsPatternItem ) = 0;
      virtual HRESULT __stdcall raw_GetBodyInversionMatrix (
        /*[in,out]*/ SAFEARRAY * * InvMatrix ) = 0;
      virtual HRESULT __stdcall raw_MakeAdjustablePart (
        /*[out,retval]*/ struct AdjustablePart * * AdjustablePart ) = 0;
      virtual HRESULT __stdcall raw_GetAdjustablePart (
        /*[out,retval]*/ struct AdjustablePart * * AdjustablePart ) = 0;
      virtual HRESULT __stdcall get_IsAdjustablePart (
        /*[out,retval]*/ VARIANT_BOOL * IsAdjustablePart ) = 0;
      virtual HRESULT __stdcall get_SubassemblyBodies (
        /*[out,retval]*/ struct SubassemblyBodies * * SubassemblyBodies ) = 0;
      virtual HRESULT __stdcall raw_GetExplodeMatrix (
        /*[in,out]*/ SAFEARRAY * * Matrix ) = 0;
      virtual HRESULT __stdcall raw_RemoveOverrideBody ( ) = 0;
      virtual HRESULT __stdcall raw_GetRangeBox (
        /*[in,out]*/ SAFEARRAY * * MinRangePoint,
        /*[in,out]*/ SAFEARRAY * * MaxRangePoint ) = 0;
      virtual HRESULT __stdcall raw_GetInterpartDrivingOccurrences (
        /*[out]*/ long * NumDrivingOccurrences,
        /*[in,out]*/ SAFEARRAY * * DrivingOccurrences ) = 0;
      virtual HRESULT __stdcall raw_GetInterpartDrivenOccurrences (
        /*[out]*/ long * NumDrivenOccurrences,
        /*[in,out]*/ SAFEARRAY * * DrivenOccurrences ) = 0;
      virtual HRESULT __stdcall get_ItemNumber (
        /*[out,retval]*/ int * pnItemNumber ) = 0;
      virtual HRESULT __stdcall put_ItemNumber (
        /*[in]*/ int pnItemNumber ) = 0;
      virtual HRESULT __stdcall get_ReferencePlanesVisible (
        /*[out,retval]*/ VARIANT_BOOL * pbVisible ) = 0;
      virtual HRESULT __stdcall put_ReferencePlanesVisible (
        /*[in]*/ VARIANT_BOOL pbVisible ) = 0;
      virtual HRESULT __stdcall get_CoordinateSystemsVisible (
        /*[out,retval]*/ VARIANT_BOOL * pbVisible ) = 0;
      virtual HRESULT __stdcall put_CoordinateSystemsVisible (
        /*[in]*/ VARIANT_BOOL pbVisible ) = 0;
      virtual HRESULT __stdcall get_SketchesVisible (
        /*[out,retval]*/ VARIANT_BOOL * pbVisible ) = 0;
      virtual HRESULT __stdcall put_SketchesVisible (
        /*[in]*/ VARIANT_BOOL pbVisible ) = 0;
      virtual HRESULT __stdcall raw_CreateTopologyReferenceToBodyOverride (
        /*[in]*/ SAFEARRAY * * ReferenceKey,
        /*[out]*/ struct TopologyReference * * TopologyReference ) = 0;
      virtual HRESULT __stdcall raw_Range (
        /*[out]*/ double * x_min,
        /*[out]*/ double * y_min,
        /*[out]*/ double * z_min,
        /*[out]*/ double * x_max,
        /*[out]*/ double * y_max,
        /*[out]*/ double * z_max ) = 0;
      virtual HRESULT __stdcall get_DisplayCenterline (
        /*[out,retval]*/ VARIANT_BOOL * bCenterline ) = 0;
      virtual HRESULT __stdcall put_DisplayCenterline (
        /*[in]*/ VARIANT_BOOL bCenterline ) = 0;
      virtual HRESULT __stdcall get_Reference (
        /*[out,retval]*/ struct TGFramework::Reference * * ppReference ) = 0;
      virtual HRESULT __stdcall get_NodeType (
        /*[out,retval]*/ enum TGFramework::ObjectType * pNodeType ) = 0;
      virtual HRESULT __stdcall raw_FileMissing (
        /*[out,retval]*/ VARIANT_BOOL * bFileMissing ) = 0;
      virtual HRESULT __stdcall raw_RecheckMissingFile (
        /*[out,retval]*/ VARIANT_BOOL * bFoundPreviouslyMissingFile ) = 0;
      virtual HRESULT __stdcall get_DisplayLiveSections (
        /*[out,retval]*/ VARIANT_BOOL * Display ) = 0;
      virtual HRESULT __stdcall put_DisplayLiveSections (
        /*[in]*/ VARIANT_BOOL Display ) = 0;
      virtual HRESULT __stdcall get_DisplayDimensions (
        /*[out,retval]*/ VARIANT_BOOL * Display ) = 0;
      virtual HRESULT __stdcall put_DisplayDimensions (
        /*[in]*/ VARIANT_BOOL Display ) = 0;
      virtual HRESULT __stdcall get_DisplayAnnotations (
        /*[out,retval]*/ VARIANT_BOOL * Display ) = 0;
      virtual HRESULT __stdcall put_DisplayAnnotations (
        /*[in]*/ VARIANT_BOOL Display ) = 0;
      virtual HRESULT __stdcall get_DisplayDesignBody (
        /*[out,retval]*/ VARIANT_BOOL * Display ) = 0;
      virtual HRESULT __stdcall put_DisplayDesignBody (
        /*[in]*/ VARIANT_BOOL Display ) = 0;
      virtual HRESULT __stdcall get_HideInDrawing (
        /*[out,retval]*/ VARIANT_BOOL * pvbHideInDwg ) = 0;
      virtual HRESULT __stdcall put_HideInDrawing (
        /*[in]*/ VARIANT_BOOL pvbHideInDwg ) = 0;
      virtual HRESULT __stdcall get_HideInSubassembly (
        /*[out,retval]*/ VARIANT_BOOL * pvbHideInSub ) = 0;
      virtual HRESULT __stdcall put_HideInSubassembly (
        /*[in]*/ VARIANT_BOOL pvbHideInSub ) = 0;
      virtual HRESULT __stdcall get_Locatable (
        /*[out,retval]*/ VARIANT_BOOL * pvbLocatable ) = 0;
      virtual HRESULT __stdcall put_Locatable (
        /*[in]*/ VARIANT_BOOL pvbLocatable ) = 0;
      virtual HRESULT __stdcall get_DisplayAsDraftReference (
        /*[out,retval]*/ VARIANT_BOOL * pvbDisplayAsDraftRef ) = 0;
      virtual HRESULT __stdcall put_DisplayAsDraftReference (
        /*[in]*/ VARIANT_BOOL pvbDisplayAsDraftRef ) = 0;
      virtual HRESULT __stdcall get_ExcludeFromPhysicalProperties (
        /*[out,retval]*/ VARIANT_BOOL * pvbExcludeFromPhysProps ) = 0;
      virtual HRESULT __stdcall put_ExcludeFromPhysicalProperties (
        /*[in]*/ VARIANT_BOOL pvbExcludeFromPhysProps ) = 0;
      virtual HRESULT __stdcall get_ExcludeFromReports (
        /*[out,retval]*/ VARIANT_BOOL * pvExcludeFromReports ) = 0;
      virtual HRESULT __stdcall put_ExcludeFromReports (
        /*[in]*/ VARIANT_BOOL pvExcludeFromReports ) = 0;
      virtual HRESULT __stdcall get_ExcludeFromInterference (
        /*[out,retval]*/ VARIANT_BOOL * pvbExcludeFromInterferenceAnalysis ) = 0;
      virtual HRESULT __stdcall put_ExcludeFromInterference (
        /*[in]*/ VARIANT_BOOL pvbExcludeFromInterferenceAnalysis ) = 0;
      virtual HRESULT __stdcall get_CustomPropertyValue (
        /*[in]*/ BSTR CustomPropertyName,
        /*[out,retval]*/ BSTR * CustomPropertyValue ) = 0;
      virtual HRESULT __stdcall put_CustomPropertyValue (
        /*[in]*/ BSTR CustomPropertyName,
        /*[in]*/ BSTR CustomPropertyValue ) = 0;
      virtual HRESULT __stdcall get_FaceStyle (
        /*[out,retval]*/ IDispatch * * FaceStyle ) = 0;
      virtual HRESULT __stdcall put_FaceStyle (
        /*[in]*/ IDispatch * FaceStyle ) = 0;
      virtual HRESULT __stdcall raw_GetFaceStyle2 (
        /*[in]*/ VARIANT_BOOL vbHonourPrefs,
        /*[out,retval]*/ IDispatch * * FaceStyle ) = 0;
      virtual HRESULT __stdcall raw_PutStyleUsePartStyle ( ) = 0;
      virtual HRESULT __stdcall raw_PutStyleNone ( ) = 0;
      virtual HRESULT __stdcall raw_GetStyleNone (
        /*[out,retval]*/ VARIANT_BOOL * NoneStyleSet ) = 0;
      virtual HRESULT __stdcall raw_GetStyleUsePartStyle (
        /*[out,retval]*/ VARIANT_BOOL * UsePartStyleSet ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ BSTR * Style ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ BSTR Style ) = 0;
      virtual HRESULT __stdcall raw_BindKeyToTopology (
        /*[in]*/ VARIANT_BOOL BodyOverride,
        /*[in]*/ SAFEARRAY * * ReferenceKey,
        /*[out,retval]*/ IDispatch * * Topology ) = 0;
      virtual HRESULT __stdcall raw_GetSectionedFacetData (
        /*[in]*/ long PartID,
        /*[out]*/ enum OccurrenceSectionedFacetDataConstants * FacetDataPresence,
        /*[out]*/ long * FacetCount,
        /*[in,out]*/ SAFEARRAY * * Points,
        /*[in,out]*/ SAFEARRAY * * Normals,
        /*[in,out]*/ SAFEARRAY * * TextureCoords,
        /*[in,out]*/ SAFEARRAY * * StyleIDs,
        /*[in,out]*/ SAFEARRAY * * FaceIDs ) = 0;
      virtual HRESULT __stdcall get_IsInternalComponent (
        /*[out,retval]*/ VARIANT_BOOL * IsInternalComponent ) = 0;
      virtual HRESULT __stdcall get_InternalComponent (
        /*[out,retval]*/ struct InternalComponent * * InternalComponent ) = 0;
};

enum InternalComponentTypeConstant
{
    InternalComponentTypeConstant_Unknown = 0,
    InternalComponentTypeConstant_Part = 1,
    InternalComponentTypeConstant_Assembly = 2,
    InternalComponentTypeConstant_SheetMetal = 3
};

struct __declspec(uuid("d5726605-a2cb-4e6d-ad1c-58d0da19c7dc"))
_IInternalComponentAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetModels))
    TGPart::ModelsPtr Models;
    __declspec(property(get=GetConstructions))
    TGPart::ConstructionsPtr Constructions;
    __declspec(property(get=GetModelingMode,put=PutModelingMode))
    enum TGPart::ModelingModeConstants ModelingMode;
    __declspec(property(get=GetSketches))
    TGPart::SketchsPtr Sketches;
    __declspec(property(get=GetProfileSets))
    TGPart::ProfileSetsPtr ProfileSets;
    __declspec(property(get=GetPartRefPlanes))
    TGPart::RefPlanesPtr PartRefPlanes;
    __declspec(property(get=GetRefAxes))
    TGPart::RefAxesPtr RefAxes;
    __declspec(property(get=GetBendTable))
    TGPart::BendTablePtr BendTable;
    __declspec(property(get=GetUsedSketches))
    TGPart::UsedSketchesPtr UsedSketches;
    __declspec(property(get=GetUserDefinedSets))
    TGPart::UserDefinedSetsPtr UserDefinedSets;
    __declspec(property(get=GetConstraints))
    TGPart::ConstraintsPtr Constraints;
    __declspec(property(get=GetDisableMoveToSynchronous,put=PutDisableMoveToSynchronous))
    VARIANT_BOOL DisableMoveToSynchronous;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    enum InternalComponentTypeConstant GetType ( );
    HRESULT Optimize ( );
    HRESULT DeleteBodies ( );
    long GetCount ( );
    HRESULT GetBodies (
        long * NumberOfBodies,
        SAFEARRAY * * Bodies );
    TGPart::ModelsPtr GetModels ( );
    TGPart::ConstructionsPtr GetConstructions ( );
    HRESULT EditStart ( );
    HRESULT EditEnd ( );
    HRESULT MoveBody (
        IDispatch * BodyProxy );
    HRESULT MakeActive ( );
    VARIANT_BOOL IsActive ( );
    HRESULT GetSheetMetalParameter (
        enum TGPart::SheetMetalGlobalConstants Parameter,
        VARIANT * Value );
    HRESULT SetSheetMetalParameter (
        enum TGPart::SheetMetalGlobalConstants Parameter,
        const _variant_t & Value );
    enum TGPart::ModelingModeConstants GetModelingMode ( );
    void PutModelingMode (
        enum TGPart::ModelingModeConstants Mode );
    TGPart::SketchsPtr GetSketches ( );
    TGPart::ProfileSetsPtr GetProfileSets ( );
    TGPart::RefPlanesPtr GetPartRefPlanes ( );
    TGPart::RefAxesPtr GetRefAxes ( );
    TGPart::BendTablePtr GetBendTable ( );
    TGPart::UsedSketchesPtr GetUsedSketches ( );
    TGPart::UserDefinedSetsPtr GetUserDefinedSets ( );
    TGPart::ConstraintsPtr GetConstraints ( );
    VARIANT_BOOL GetDisableMoveToSynchronous ( );
    void PutDisableMoveToSynchronous (
        VARIANT_BOOL bDisable );
    HRESULT Separate (
        long NumberOfFeatures,
        SAFEARRAY * * Features );
    HRESULT Break (
        long NumberOfFeatures,
        SAFEARRAY * * Features );
    HRESULT MoveToSynchronous (
        IDispatch * pFeatureUnk,
        VARIANT_BOOL bIgnoreWarnings,
        VARIANT_BOOL bExtendSelection,
        long * NumberOfFeaturesCausingError,
        SAFEARRAY * * ErrorMessageArray,
        long * NumberOfFeaturesCausingWarning,
        SAFEARRAY * * WarningMessageArray,
        double * VolumeDifference );
    HRESULT TransformToSynchronousSheetmetal (
        IDispatch * pRefFace,
        long nEdgeNum,
        SAFEARRAY * * EdgesArray,
        const _variant_t & BRType,
        double dBRWidth,
        double dBRLength,
        double dBendRadius,
        double dNeutralFactor );
    HRESULT GetCurrentMaterialName (
        BSTR * bstrMaterialName );
    HRESULT GetCurrentGageName (
        BSTR * bstrGageName );
    HRESULT GetOODStatusofMaterialAndGage (
        VARIANT_BOOL * vbMaterialPropOOD,
        VARIANT_BOOL * vbGagePropOOD );
    HRESULT GetPhysicalProperties (
        int * Status,
        double * Density,
        double * Accuracy,
        double * Volume,
        double * Area,
        double * Mass,
        SAFEARRAY * * CenterOfGravity,
        SAFEARRAY * * CenterOfVolume,
        SAFEARRAY * * GlobalMomentsOfInteria,
        SAFEARRAY * * PrincipalMomentsOfInteria,
        SAFEARRAY * * PrincipalAxes,
        SAFEARRAY * * RadiiOfGyration,
        double * RelativeAccuracyAchieved );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall raw_GetType (
        /*[out,retval]*/ enum InternalComponentTypeConstant * TypeConstant ) = 0;
      virtual HRESULT __stdcall raw_Optimize ( ) = 0;
      virtual HRESULT __stdcall raw_DeleteBodies ( ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_GetBodies (
        /*[out]*/ long * NumberOfBodies,
        /*[out]*/ SAFEARRAY * * Bodies ) = 0;
      virtual HRESULT __stdcall get_Models (
        /*[out,retval]*/ struct TGPart::Models * * Models ) = 0;
      virtual HRESULT __stdcall get_Constructions (
        /*[out,retval]*/ struct TGPart::Constructions * * Constructions ) = 0;
      virtual HRESULT __stdcall raw_EditStart ( ) = 0;
      virtual HRESULT __stdcall raw_EditEnd ( ) = 0;
      virtual HRESULT __stdcall raw_MoveBody (
        /*[in]*/ IDispatch * BodyProxy ) = 0;
      virtual HRESULT __stdcall raw_MakeActive ( ) = 0;
      virtual HRESULT __stdcall raw_IsActive (
        /*[out,retval]*/ VARIANT_BOOL * IsActive ) = 0;
      virtual HRESULT __stdcall raw_GetSheetMetalParameter (
        /*[in]*/ enum TGPart::SheetMetalGlobalConstants Parameter,
        /*[out]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall raw_SetSheetMetalParameter (
        /*[in]*/ enum TGPart::SheetMetalGlobalConstants Parameter,
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall get_ModelingMode (
        /*[out,retval]*/ enum TGPart::ModelingModeConstants * Mode ) = 0;
      virtual HRESULT __stdcall put_ModelingMode (
        /*[in]*/ enum TGPart::ModelingModeConstants Mode ) = 0;
      virtual HRESULT __stdcall get_Sketches (
        /*[out,retval]*/ struct TGPart::Sketchs * * Sketchs ) = 0;
      virtual HRESULT __stdcall get_ProfileSets (
        /*[out,retval]*/ struct TGPart::ProfileSets * * ProfileSets ) = 0;
      virtual HRESULT __stdcall get_PartRefPlanes (
        /*[out,retval]*/ struct TGPart::RefPlanes * * RefPlanes ) = 0;
      virtual HRESULT __stdcall get_RefAxes (
        /*[out,retval]*/ struct TGPart::RefAxes * * RefAxes ) = 0;
      virtual HRESULT __stdcall get_BendTable (
        /*[out,retval]*/ struct TGPart::BendTable * * BendTable ) = 0;
      virtual HRESULT __stdcall get_UsedSketches (
        /*[out,retval]*/ struct TGPart::UsedSketches * * UsedSketches ) = 0;
      virtual HRESULT __stdcall get_UserDefinedSets (
        /*[out,retval]*/ struct TGPart::UserDefinedSets * * UserDefinedSets ) = 0;
      virtual HRESULT __stdcall get_Constraints (
        /*[out,retval]*/ struct TGPart::Constraints * * Constraints ) = 0;
      virtual HRESULT __stdcall get_DisableMoveToSynchronous (
        /*[out,retval]*/ VARIANT_BOOL * bDisable ) = 0;
      virtual HRESULT __stdcall put_DisableMoveToSynchronous (
        /*[in]*/ VARIANT_BOOL bDisable ) = 0;
      virtual HRESULT __stdcall raw_Separate (
        /*[in]*/ long NumberOfFeatures,
        /*[in]*/ SAFEARRAY * * Features ) = 0;
      virtual HRESULT __stdcall raw_Break (
        /*[in]*/ long NumberOfFeatures,
        /*[in,out]*/ SAFEARRAY * * Features ) = 0;
      virtual HRESULT __stdcall raw_MoveToSynchronous (
        /*[in]*/ IDispatch * pFeatureUnk,
        /*[in]*/ VARIANT_BOOL bIgnoreWarnings,
        /*[in]*/ VARIANT_BOOL bExtendSelection,
        /*[out]*/ long * NumberOfFeaturesCausingError,
        /*[out]*/ SAFEARRAY * * ErrorMessageArray,
        /*[out]*/ long * NumberOfFeaturesCausingWarning,
        /*[out]*/ SAFEARRAY * * WarningMessageArray,
        /*[out]*/ double * VolumeDifference ) = 0;
      virtual HRESULT __stdcall raw_TransformToSynchronousSheetmetal (
        /*[in]*/ IDispatch * pRefFace,
        /*[in]*/ long nEdgeNum,
        /*[in]*/ SAFEARRAY * * EdgesArray,
        /*[in]*/ VARIANT BRType,
        /*[in]*/ double dBRWidth,
        /*[in]*/ double dBRLength,
        /*[in]*/ double dBendRadius,
        /*[in]*/ double dNeutralFactor ) = 0;
      virtual HRESULT __stdcall raw_GetCurrentMaterialName (
        /*[out]*/ BSTR * bstrMaterialName ) = 0;
      virtual HRESULT __stdcall raw_GetCurrentGageName (
        /*[out]*/ BSTR * bstrGageName ) = 0;
      virtual HRESULT __stdcall raw_GetOODStatusofMaterialAndGage (
        /*[out]*/ VARIANT_BOOL * vbMaterialPropOOD,
        /*[out]*/ VARIANT_BOOL * vbGagePropOOD ) = 0;
      virtual HRESULT __stdcall raw_GetPhysicalProperties (
        /*[out]*/ int * Status,
        /*[out]*/ double * Density,
        /*[out]*/ double * Accuracy,
        /*[out]*/ double * Volume,
        /*[out]*/ double * Area,
        /*[out]*/ double * Mass,
        /*[in,out]*/ SAFEARRAY * * CenterOfGravity,
        /*[in,out]*/ SAFEARRAY * * CenterOfVolume,
        /*[in,out]*/ SAFEARRAY * * GlobalMomentsOfInteria,
        /*[in,out]*/ SAFEARRAY * * PrincipalMomentsOfInteria,
        /*[in,out]*/ SAFEARRAY * * PrincipalAxes,
        /*[in,out]*/ SAFEARRAY * * RadiiOfGyration,
        /*[out]*/ double * RelativeAccuracyAchieved ) = 0;
};

struct __declspec(uuid("7a654020-9b75-11ce-a2ab-08003601b7ad"))
PlanarRelation3d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum Relation3dStatusConstants Status;
    __declspec(property(get=GetPart1))
    PartPtr Part1;
    __declspec(property(get=GetPart2))
    PartPtr Part2;
    __declspec(property(get=GetFixedOffset,put=PutFixedOffset))
    VARIANT_BOOL FixedOffset;
    __declspec(property(get=GetOffset,put=PutOffset))
    double Offset;
    __declspec(property(get=GetNormalsAligned,put=PutNormalsAligned))
    VARIANT_BOOL NormalsAligned;
    __declspec(property(get=GetOccurrence1))
    OccurrencePtr Occurrence1;
    __declspec(property(get=GetOccurrence2))
    OccurrencePtr Occurrence2;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetRangedOffset,put=PutRangedOffset))
    VARIANT_BOOL RangedOffset;
    __declspec(property(get=GetRangeLow,put=PutRangeLow))
    double RangeLow;
    __declspec(property(get=GetRangeHigh,put=PutRangeHigh))
    double RangeHigh;
    __declspec(property(get=GetDetailedStatus))
    enum Relation3dDetailedStatusConstants DetailedStatus;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum Relation3dStatusConstants GetStatus ( );
    enum Relation3dDetailedStatusConstants GetDetailedStatus ( );
    PartPtr GetPart1 ( );
    PartPtr GetPart2 ( );
    HRESULT GetGeometry1 (
        long * GeometryType,
        double * PointX,
        double * PointY,
        double * PointZ,
        double * VectorX,
        double * VectorY,
        double * VectorZ );
    HRESULT GetGeometry2 (
        long * GeometryType,
        double * PointX,
        double * PointY,
        double * PointZ,
        double * VectorX,
        double * VectorY,
        double * VectorZ );
    VARIANT_BOOL GetFixedOffset ( );
    void PutFixedOffset (
        VARIANT_BOOL _arg1 );
    double GetOffset ( );
    void PutOffset (
        double _arg1 );
    VARIANT_BOOL GetNormalsAligned ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    OccurrencePtr GetOccurrence1 ( );
    OccurrencePtr GetOccurrence2 ( );
    void PutNormalsAligned (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL _arg1 );
    IDispatchPtr GetElement1 (
        VARIANT_BOOL * IsTopologyReference );
    IDispatchPtr GetElement2 (
        VARIANT_BOOL * IsTopologyReference );
    VARIANT_BOOL GetRangedOffset ( );
    void PutRangedOffset (
        VARIANT_BOOL _arg1 );
    double GetRangeLow ( );
    void PutRangeLow (
        double _arg1 );
    double GetRangeHigh ( );
    void PutRangeHigh (
        double _arg1 );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
};

enum Relation3dStatusConstants
{
    igRelation3dStatusUnsolved = 0,
    igRelation3dStatusSolved = 1
};

enum Relation3dDetailedStatusConstants
{
    igRelation3dDetailedStatusUnknown = 0,
    igRelation3dDetailedStatusSolved = 1,
    igRelation3dDetailedStatusSuppressed = 2,
    igRelation3dDetailedStatusBetweenSetMembers = 3,
    igRelation3dDetailedStatusBetweenFixed = 4,
    igRelation3dDetailedStatusUnsatisfied = 5,
    igRelation3dDetailedStatusMissingGeometry = 6
};

struct __declspec(uuid("95135f57-015c-11d2-be0c-080036b4d502"))
_IPlanarRelation3dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum Relation3dStatusConstants Status;
    __declspec(property(get=GetPart1))
    PartPtr Part1;
    __declspec(property(get=GetPart2))
    PartPtr Part2;
    __declspec(property(get=GetFixedOffset,put=PutFixedOffset))
    VARIANT_BOOL FixedOffset;
    __declspec(property(get=GetOffset,put=PutOffset))
    double Offset;
    __declspec(property(get=GetNormalsAligned,put=PutNormalsAligned))
    VARIANT_BOOL NormalsAligned;
    __declspec(property(get=GetOccurrence1))
    OccurrencePtr Occurrence1;
    __declspec(property(get=GetOccurrence2))
    OccurrencePtr Occurrence2;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetRangedOffset,put=PutRangedOffset))
    VARIANT_BOOL RangedOffset;
    __declspec(property(get=GetRangeLow,put=PutRangeLow))
    double RangeLow;
    __declspec(property(get=GetRangeHigh,put=PutRangeHigh))
    double RangeHigh;
    __declspec(property(get=GetDetailedStatus))
    enum Relation3dDetailedStatusConstants DetailedStatus;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum Relation3dStatusConstants GetStatus ( );
    enum Relation3dDetailedStatusConstants GetDetailedStatus ( );
    PartPtr GetPart1 ( );
    PartPtr GetPart2 ( );
    HRESULT GetGeometry1 (
        long * GeometryType,
        double * PointX,
        double * PointY,
        double * PointZ,
        double * VectorX,
        double * VectorY,
        double * VectorZ );
    HRESULT GetGeometry2 (
        long * GeometryType,
        double * PointX,
        double * PointY,
        double * PointZ,
        double * VectorX,
        double * VectorY,
        double * VectorZ );
    VARIANT_BOOL GetFixedOffset ( );
    void PutFixedOffset (
        VARIANT_BOOL FixedOffset );
    double GetOffset ( );
    void PutOffset (
        double Offset );
    VARIANT_BOOL GetNormalsAligned ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    OccurrencePtr GetOccurrence1 ( );
    OccurrencePtr GetOccurrence2 ( );
    void PutNormalsAligned (
        VARIANT_BOOL NormalsAligned );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL bSuppress );
    IDispatchPtr GetElement1 (
        VARIANT_BOOL * IsTopologyReference );
    IDispatchPtr GetElement2 (
        VARIANT_BOOL * IsTopologyReference );
    VARIANT_BOOL GetRangedOffset ( );
    void PutRangedOffset (
        VARIANT_BOOL RangedOffset );
    double GetRangeLow ( );
    void PutRangeLow (
        double RangeLow );
    double GetRangeHigh ( );
    void PutRangeHigh (
        double RangeHigh );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ IDispatch * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall raw_Select (
        /*[in]*/ VARIANT_BOOL Replace ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum Relation3dStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall get_DetailedStatus (
        /*[out,retval]*/ enum Relation3dDetailedStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall get_Part1 (
        /*[out,retval]*/ struct Part * * Part1 ) = 0;
      virtual HRESULT __stdcall get_Part2 (
        /*[out,retval]*/ struct Part * * Part2 ) = 0;
      virtual HRESULT __stdcall raw_GetGeometry1 (
        /*[out]*/ long * GeometryType,
        /*[out]*/ double * PointX,
        /*[out]*/ double * PointY,
        /*[out]*/ double * PointZ,
        /*[out]*/ double * VectorX,
        /*[out]*/ double * VectorY,
        /*[out]*/ double * VectorZ ) = 0;
      virtual HRESULT __stdcall raw_GetGeometry2 (
        /*[out]*/ long * GeometryType,
        /*[out]*/ double * PointX,
        /*[out]*/ double * PointY,
        /*[out]*/ double * PointZ,
        /*[out]*/ double * VectorX,
        /*[out]*/ double * VectorY,
        /*[out]*/ double * VectorZ ) = 0;
      virtual HRESULT __stdcall get_FixedOffset (
        /*[out,retval]*/ VARIANT_BOOL * FixedOffset ) = 0;
      virtual HRESULT __stdcall put_FixedOffset (
        /*[in]*/ VARIANT_BOOL FixedOffset ) = 0;
      virtual HRESULT __stdcall get_Offset (
        /*[out,retval]*/ double * Offset ) = 0;
      virtual HRESULT __stdcall put_Offset (
        /*[in]*/ double Offset ) = 0;
      virtual HRESULT __stdcall get_NormalsAligned (
        /*[out,retval]*/ VARIANT_BOOL * NormalsAligned ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall get_Occurrence1 (
        /*[out,retval]*/ struct Occurrence * * Occurrence1 ) = 0;
      virtual HRESULT __stdcall get_Occurrence2 (
        /*[out,retval]*/ struct Occurrence * * Occurrence2 ) = 0;
      virtual HRESULT __stdcall put_NormalsAligned (
        /*[in]*/ VARIANT_BOOL NormalsAligned ) = 0;
      virtual HRESULT __stdcall get_Suppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_Suppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall raw_GetElement1 (
        /*[out]*/ VARIANT_BOOL * IsTopologyReference,
        /*[out,retval]*/ IDispatch * * Element ) = 0;
      virtual HRESULT __stdcall raw_GetElement2 (
        /*[out]*/ VARIANT_BOOL * IsTopologyReference,
        /*[out,retval]*/ IDispatch * * Element ) = 0;
      virtual HRESULT __stdcall get_RangedOffset (
        /*[out,retval]*/ VARIANT_BOOL * RangedOffset ) = 0;
      virtual HRESULT __stdcall put_RangedOffset (
        /*[in]*/ VARIANT_BOOL RangedOffset ) = 0;
      virtual HRESULT __stdcall get_RangeLow (
        /*[out,retval]*/ double * RangeLow ) = 0;
      virtual HRESULT __stdcall put_RangeLow (
        /*[in]*/ double RangeLow ) = 0;
      virtual HRESULT __stdcall get_RangeHigh (
        /*[out,retval]*/ double * RangeHigh ) = 0;
      virtual HRESULT __stdcall put_RangeHigh (
        /*[in]*/ double RangeHigh ) = 0;
      virtual HRESULT __stdcall raw_GetSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_AddSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_DeleteSuppressionVariable ( ) = 0;
      virtual HRESULT __stdcall raw_HasSuppressionVariable (
        /*[out,retval]*/ VARIANT_BOOL * IsSuppressionVariablePresent ) = 0;
};

struct __declspec(uuid("4e45d7a0-9b76-11ce-a2ab-08003601b7ad"))
AxialRelation3d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum Relation3dStatusConstants Status;
    __declspec(property(get=GetPart1))
    PartPtr Part1;
    __declspec(property(get=GetPart2))
    PartPtr Part2;
    __declspec(property(get=GetFixedRotate,put=PutFixedRotate))
    VARIANT_BOOL FixedRotate;
    __declspec(property(get=GetOccurrence1))
    OccurrencePtr Occurrence1;
    __declspec(property(get=GetOccurrence2))
    OccurrencePtr Occurrence2;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetParallelOffset,put=PutParallelOffset))
    VARIANT_BOOL ParallelOffset;
    __declspec(property(get=GetFixedParallelOffset,put=PutFixedParallelOffset))
    VARIANT_BOOL FixedParallelOffset;
    __declspec(property(get=GetOffset,put=PutOffset))
    double Offset;
    __declspec(property(get=GetOrientation,put=PutOrientation))
    enum Relation3dOrientationConstants Orientation;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetRangedOffset,put=PutRangedOffset))
    VARIANT_BOOL RangedOffset;
    __declspec(property(get=GetRangeLow,put=PutRangeLow))
    double RangeLow;
    __declspec(property(get=GetDetailedStatus))
    enum Relation3dDetailedStatusConstants DetailedStatus;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];
    __declspec(property(get=GetRangeHigh,put=PutRangeHigh))
    double RangeHigh;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum Relation3dStatusConstants GetStatus ( );
    enum Relation3dDetailedStatusConstants GetDetailedStatus ( );
    PartPtr GetPart1 ( );
    PartPtr GetPart2 ( );
    HRESULT GetGeometry1 (
        long * GeometryType,
        double * PointX,
        double * PointY,
        double * PointZ,
        double * VectorX,
        double * VectorY,
        double * VectorZ );
    HRESULT GetGeometry2 (
        long * GeometryType,
        double * PointX,
        double * PointY,
        double * PointZ,
        double * VectorX,
        double * VectorY,
        double * VectorZ );
    VARIANT_BOOL GetFixedRotate ( );
    void PutFixedRotate (
        VARIANT_BOOL _arg1 );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    OccurrencePtr GetOccurrence1 ( );
    OccurrencePtr GetOccurrence2 ( );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL _arg1 );
    IDispatchPtr GetElement1 (
        VARIANT_BOOL * IsTopologyReference );
    IDispatchPtr GetElement2 (
        VARIANT_BOOL * IsTopologyReference );
    VARIANT_BOOL GetParallelOffset ( );
    void PutParallelOffset (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetFixedParallelOffset ( );
    void PutFixedParallelOffset (
        VARIANT_BOOL _arg1 );
    double GetOffset ( );
    void PutOffset (
        double _arg1 );
    enum Relation3dOrientationConstants GetOrientation ( );
    void PutOrientation (
        enum Relation3dOrientationConstants _arg1 );
    HRESULT Flip ( );
    VARIANT_BOOL GetRangedOffset ( );
    void PutRangedOffset (
        VARIANT_BOOL _arg1 );
    double GetRangeLow ( );
    void PutRangeLow (
        double _arg1 );
    double GetRangeHigh ( );
    void PutRangeHigh (
        double _arg1 );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
};

enum Relation3dOrientationConstants
{
    igRelation3dOrientationNotspecified = 0,
    igRelation3dOrientationAlign = 1,
    igRelation3dOrientationAntialign = 2
};

struct __declspec(uuid("95135f4e-015c-11d2-be0c-080036b4d502"))
_IAxialRelation3dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum Relation3dStatusConstants Status;
    __declspec(property(get=GetPart1))
    PartPtr Part1;
    __declspec(property(get=GetPart2))
    PartPtr Part2;
    __declspec(property(get=GetFixedRotate,put=PutFixedRotate))
    VARIANT_BOOL FixedRotate;
    __declspec(property(get=GetOccurrence1))
    OccurrencePtr Occurrence1;
    __declspec(property(get=GetOccurrence2))
    OccurrencePtr Occurrence2;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetParallelOffset,put=PutParallelOffset))
    VARIANT_BOOL ParallelOffset;
    __declspec(property(get=GetFixedParallelOffset,put=PutFixedParallelOffset))
    VARIANT_BOOL FixedParallelOffset;
    __declspec(property(get=GetOffset,put=PutOffset))
    double Offset;
    __declspec(property(get=GetOrientation,put=PutOrientation))
    enum Relation3dOrientationConstants Orientation;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetRangedOffset,put=PutRangedOffset))
    VARIANT_BOOL RangedOffset;
    __declspec(property(get=GetRangeLow,put=PutRangeLow))
    double RangeLow;
    __declspec(property(get=GetDetailedStatus))
    enum Relation3dDetailedStatusConstants DetailedStatus;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];
    __declspec(property(get=GetRangeHigh,put=PutRangeHigh))
    double RangeHigh;

    //
    // Wrapper methods for error-handling
    //

    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum Relation3dStatusConstants GetStatus ( );
    enum Relation3dDetailedStatusConstants GetDetailedStatus ( );
    PartPtr GetPart1 ( );
    PartPtr GetPart2 ( );
    HRESULT GetGeometry1 (
        long * GeometryType,
        double * PointX,
        double * PointY,
        double * PointZ,
        double * VectorX,
        double * VectorY,
        double * VectorZ );
    HRESULT GetGeometry2 (
        long * GeometryType,
        double * PointX,
        double * PointY,
        double * PointZ,
        double * VectorX,
        double * VectorY,
        double * VectorZ );
    VARIANT_BOOL GetFixedRotate ( );
    void PutFixedRotate (
        VARIANT_BOOL FixedRotate );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    OccurrencePtr GetOccurrence1 ( );
    OccurrencePtr GetOccurrence2 ( );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL bSuppress );
    IDispatchPtr GetElement1 (
        VARIANT_BOOL * IsTopologyReference );
    IDispatchPtr GetElement2 (
        VARIANT_BOOL * IsTopologyReference );
    VARIANT_BOOL GetParallelOffset ( );
    void PutParallelOffset (
        VARIANT_BOOL ParallelOffset );
    VARIANT_BOOL GetFixedParallelOffset ( );
    void PutFixedParallelOffset (
        VARIANT_BOOL FixedParallelOffset );
    double GetOffset ( );
    void PutOffset (
        double Offset );
    enum Relation3dOrientationConstants GetOrientation ( );
    void PutOrientation (
        enum Relation3dOrientationConstants Orientation );
    HRESULT Flip ( );
    VARIANT_BOOL GetRangedOffset ( );
    void PutRangedOffset (
        VARIANT_BOOL RangedOffset );
    double GetRangeLow ( );
    void PutRangeLow (
        double RangeLow );
    double GetRangeHigh ( );
    void PutRangeHigh (
        double RangeHigh );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ IDispatch * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall raw_Select (
        /*[in]*/ VARIANT_BOOL Replace ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum Relation3dStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall get_DetailedStatus (
        /*[out,retval]*/ enum Relation3dDetailedStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall get_Part1 (
        /*[out,retval]*/ struct Part * * Part1 ) = 0;
      virtual HRESULT __stdcall get_Part2 (
        /*[out,retval]*/ struct Part * * Part2 ) = 0;
      virtual HRESULT __stdcall raw_GetGeometry1 (
        /*[out]*/ long * GeometryType,
        /*[out]*/ double * PointX,
        /*[out]*/ double * PointY,
        /*[out]*/ double * PointZ,
        /*[out]*/ double * VectorX,
        /*[out]*/ double * VectorY,
        /*[out]*/ double * VectorZ ) = 0;
      virtual HRESULT __stdcall raw_GetGeometry2 (
        /*[out]*/ long * GeometryType,
        /*[out]*/ double * PointX,
        /*[out]*/ double * PointY,
        /*[out]*/ double * PointZ,
        /*[out]*/ double * VectorX,
        /*[out]*/ double * VectorY,
        /*[out]*/ double * VectorZ ) = 0;
      virtual HRESULT __stdcall get_FixedRotate (
        /*[out,retval]*/ VARIANT_BOOL * FixedRotate ) = 0;
      virtual HRESULT __stdcall put_FixedRotate (
        /*[in]*/ VARIANT_BOOL FixedRotate ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall get_Occurrence1 (
        /*[out,retval]*/ struct Occurrence * * Occurrence1 ) = 0;
      virtual HRESULT __stdcall get_Occurrence2 (
        /*[out,retval]*/ struct Occurrence * * Occurrence2 ) = 0;
      virtual HRESULT __stdcall get_Suppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_Suppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall raw_GetElement1 (
        /*[out]*/ VARIANT_BOOL * IsTopologyReference,
        /*[out,retval]*/ IDispatch * * Element ) = 0;
      virtual HRESULT __stdcall raw_GetElement2 (
        /*[out]*/ VARIANT_BOOL * IsTopologyReference,
        /*[out,retval]*/ IDispatch * * Element ) = 0;
      virtual HRESULT __stdcall get_ParallelOffset (
        /*[out,retval]*/ VARIANT_BOOL * ParallelOffset ) = 0;
      virtual HRESULT __stdcall put_ParallelOffset (
        /*[in]*/ VARIANT_BOOL ParallelOffset ) = 0;
      virtual HRESULT __stdcall get_FixedParallelOffset (
        /*[out,retval]*/ VARIANT_BOOL * FixedParallelOffset ) = 0;
      virtual HRESULT __stdcall put_FixedParallelOffset (
        /*[in]*/ VARIANT_BOOL FixedParallelOffset ) = 0;
      virtual HRESULT __stdcall get_Offset (
        /*[out,retval]*/ double * Offset ) = 0;
      virtual HRESULT __stdcall put_Offset (
        /*[in]*/ double Offset ) = 0;
      virtual HRESULT __stdcall get_Orientation (
        /*[out,retval]*/ enum Relation3dOrientationConstants * Orientation ) = 0;
      virtual HRESULT __stdcall put_Orientation (
        /*[in]*/ enum Relation3dOrientationConstants Orientation ) = 0;
      virtual HRESULT __stdcall raw_Flip ( ) = 0;
      virtual HRESULT __stdcall get_RangedOffset (
        /*[out,retval]*/ VARIANT_BOOL * RangedOffset ) = 0;
      virtual HRESULT __stdcall put_RangedOffset (
        /*[in]*/ VARIANT_BOOL RangedOffset ) = 0;
      virtual HRESULT __stdcall get_RangeLow (
        /*[out,retval]*/ double * RangeLow ) = 0;
      virtual HRESULT __stdcall put_RangeLow (
        /*[in]*/ double RangeLow ) = 0;
      virtual HRESULT __stdcall get_RangeHigh (
        /*[out,retval]*/ double * RangeHigh ) = 0;
      virtual HRESULT __stdcall put_RangeHigh (
        /*[in]*/ double RangeHigh ) = 0;
      virtual HRESULT __stdcall raw_GetSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_AddSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_DeleteSuppressionVariable ( ) = 0;
      virtual HRESULT __stdcall raw_HasSuppressionVariable (
        /*[out,retval]*/ VARIANT_BOOL * IsSuppressionVariablePresent ) = 0;
};

enum Relation3dGeometryConstants
{
    igRelation3dGeometryPlane = 1,
    igRelation3dGeometryLine = 2,
    igRelation3dGeometryPoint = 3,
    igRelation3dStartPoint = 4,
    igRelation3dMidPoint = 5,
    igRelation3dEndPoint = 6,
    igRelation3dCenterPoint = 7,
    igRelation3dPointUnknown = 8,
    igRelation3dGeometrySphere = 9,
    igRelation3dGeometryCone = 10,
    igRelation3dGeometrySurface = 11,
    igRelation3dGeometrySweepSurface = 12
};

struct __declspec(uuid("e9f86440-187d-11d0-a236-0800364ae802"))
PointRelation3d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum Relation3dStatusConstants Status;
    __declspec(property(get=GetPart1))
    PartPtr Part1;
    __declspec(property(get=GetPart2))
    PartPtr Part2;
    __declspec(property(get=GetOccurrence1))
    OccurrencePtr Occurrence1;
    __declspec(property(get=GetOccurrence2))
    OccurrencePtr Occurrence2;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetRangedOffset,put=PutRangedOffset))
    VARIANT_BOOL RangedOffset;
    __declspec(property(get=GetRangeLow,put=PutRangeLow))
    double RangeLow;
    __declspec(property(get=GetRangeHigh,put=PutRangeHigh))
    double RangeHigh;
    __declspec(property(get=GetDetailedStatus))
    enum Relation3dDetailedStatusConstants DetailedStatus;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum Relation3dStatusConstants GetStatus ( );
    enum Relation3dDetailedStatusConstants GetDetailedStatus ( );
    PartPtr GetPart1 ( );
    PartPtr GetPart2 ( );
    HRESULT GetGeometry1 (
        long * GeometryType,
        double * PointX,
        double * PointY,
        double * PointZ,
        double * VectorX,
        double * VectorY,
        double * VectorZ );
    HRESULT GetGeometry2 (
        long * GeometryType,
        double * PointX,
        double * PointY,
        double * PointZ,
        double * VectorX,
        double * VectorY,
        double * VectorZ );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    OccurrencePtr GetOccurrence1 ( );
    OccurrencePtr GetOccurrence2 ( );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL _arg1 );
    IDispatchPtr GetElement1 (
        VARIANT_BOOL * IsTopologyReference );
    IDispatchPtr GetElement2 (
        VARIANT_BOOL * IsTopologyReference );
    VARIANT_BOOL GetRangedOffset ( );
    void PutRangedOffset (
        VARIANT_BOOL _arg1 );
    double GetRangeLow ( );
    void PutRangeLow (
        double _arg1 );
    double GetRangeHigh ( );
    void PutRangeHigh (
        double _arg1 );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
};

struct __declspec(uuid("95135f42-015c-11d2-be0c-080036b4d502"))
_IPointRelation3dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum Relation3dStatusConstants Status;
    __declspec(property(get=GetPart1))
    PartPtr Part1;
    __declspec(property(get=GetPart2))
    PartPtr Part2;
    __declspec(property(get=GetOccurrence1))
    OccurrencePtr Occurrence1;
    __declspec(property(get=GetOccurrence2))
    OccurrencePtr Occurrence2;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetRangedOffset,put=PutRangedOffset))
    VARIANT_BOOL RangedOffset;
    __declspec(property(get=GetRangeLow,put=PutRangeLow))
    double RangeLow;
    __declspec(property(get=GetRangeHigh,put=PutRangeHigh))
    double RangeHigh;
    __declspec(property(get=GetDetailedStatus))
    enum Relation3dDetailedStatusConstants DetailedStatus;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum Relation3dStatusConstants GetStatus ( );
    enum Relation3dDetailedStatusConstants GetDetailedStatus ( );
    PartPtr GetPart1 ( );
    PartPtr GetPart2 ( );
    HRESULT GetGeometry1 (
        long * GeometryType,
        double * PointX,
        double * PointY,
        double * PointZ,
        double * VectorX,
        double * VectorY,
        double * VectorZ );
    HRESULT GetGeometry2 (
        long * GeometryType,
        double * PointX,
        double * PointY,
        double * PointZ,
        double * VectorX,
        double * VectorY,
        double * VectorZ );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    OccurrencePtr GetOccurrence1 ( );
    OccurrencePtr GetOccurrence2 ( );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL bSuppress );
    IDispatchPtr GetElement1 (
        VARIANT_BOOL * IsTopologyReference );
    IDispatchPtr GetElement2 (
        VARIANT_BOOL * IsTopologyReference );
    VARIANT_BOOL GetRangedOffset ( );
    void PutRangedOffset (
        VARIANT_BOOL RangedOffset );
    double GetRangeLow ( );
    void PutRangeLow (
        double RangeLow );
    double GetRangeHigh ( );
    void PutRangeHigh (
        double RangeHigh );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ IDispatch * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall raw_Select (
        /*[in]*/ VARIANT_BOOL Replace ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum Relation3dStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall get_DetailedStatus (
        /*[out,retval]*/ enum Relation3dDetailedStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall get_Part1 (
        /*[out,retval]*/ struct Part * * Part1 ) = 0;
      virtual HRESULT __stdcall get_Part2 (
        /*[out,retval]*/ struct Part * * Part2 ) = 0;
      virtual HRESULT __stdcall raw_GetGeometry1 (
        /*[out]*/ long * GeometryType,
        /*[out]*/ double * PointX,
        /*[out]*/ double * PointY,
        /*[out]*/ double * PointZ,
        /*[out]*/ double * VectorX,
        /*[out]*/ double * VectorY,
        /*[out]*/ double * VectorZ ) = 0;
      virtual HRESULT __stdcall raw_GetGeometry2 (
        /*[out]*/ long * GeometryType,
        /*[out]*/ double * PointX,
        /*[out]*/ double * PointY,
        /*[out]*/ double * PointZ,
        /*[out]*/ double * VectorX,
        /*[out]*/ double * VectorY,
        /*[out]*/ double * VectorZ ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall get_Occurrence1 (
        /*[out,retval]*/ struct Occurrence * * Occurrence1 ) = 0;
      virtual HRESULT __stdcall get_Occurrence2 (
        /*[out,retval]*/ struct Occurrence * * Occurrence2 ) = 0;
      virtual HRESULT __stdcall get_Suppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_Suppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall raw_GetElement1 (
        /*[out]*/ VARIANT_BOOL * IsTopologyReference,
        /*[out,retval]*/ IDispatch * * Element ) = 0;
      virtual HRESULT __stdcall raw_GetElement2 (
        /*[out]*/ VARIANT_BOOL * IsTopologyReference,
        /*[out,retval]*/ IDispatch * * Element ) = 0;
      virtual HRESULT __stdcall get_RangedOffset (
        /*[out,retval]*/ VARIANT_BOOL * RangedOffset ) = 0;
      virtual HRESULT __stdcall put_RangedOffset (
        /*[in]*/ VARIANT_BOOL RangedOffset ) = 0;
      virtual HRESULT __stdcall get_RangeLow (
        /*[out,retval]*/ double * RangeLow ) = 0;
      virtual HRESULT __stdcall put_RangeLow (
        /*[in]*/ double RangeLow ) = 0;
      virtual HRESULT __stdcall get_RangeHigh (
        /*[out,retval]*/ double * RangeHigh ) = 0;
      virtual HRESULT __stdcall put_RangeHigh (
        /*[in]*/ double RangeHigh ) = 0;
      virtual HRESULT __stdcall raw_GetSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_AddSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_DeleteSuppressionVariable ( ) = 0;
      virtual HRESULT __stdcall raw_HasSuppressionVariable (
        /*[out,retval]*/ VARIANT_BOOL * IsSuppressionVariablePresent ) = 0;
};

struct __declspec(uuid("cbb0bd40-a7c0-11d0-944d-0800364ae802"))
AngularRelation3d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum Relation3dStatusConstants Status;
    __declspec(property(get=GetPart1))
    PartPtr Part1;
    __declspec(property(get=GetPart2))
    PartPtr Part2;
    __declspec(property(get=GetAngle,put=PutAngle))
    double Angle;
    __declspec(property(get=GetOccurrence1))
    OccurrencePtr Occurrence1;
    __declspec(property(get=GetOccurrence2))
    OccurrencePtr Occurrence2;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetRangedAngle,put=PutRangedAngle))
    VARIANT_BOOL RangedAngle;
    __declspec(property(get=GetRangeLow,put=PutRangeLow))
    double RangeLow;
    __declspec(property(get=GetRangeHigh,put=PutRangeHigh))
    double RangeHigh;
    __declspec(property(get=GetDetailedStatus))
    enum Relation3dDetailedStatusConstants DetailedStatus;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum Relation3dStatusConstants GetStatus ( );
    enum Relation3dDetailedStatusConstants GetDetailedStatus ( );
    PartPtr GetPart1 ( );
    PartPtr GetPart2 ( );
    HRESULT GetGeometry1 (
        long * GeometryType,
        double * PointX,
        double * PointY,
        double * PointZ,
        double * VectorX,
        double * VectorY,
        double * VectorZ );
    HRESULT GetGeometry2 (
        long * GeometryType,
        double * PointX,
        double * PointY,
        double * PointZ,
        double * VectorX,
        double * VectorY,
        double * VectorZ );
    double GetAngle ( );
    void PutAngle (
        double _arg1 );
    HRESULT GetDefinition (
        VARIANT_BOOL * ToPlane1PositiveSide,
        VARIANT_BOOL * FromPlane2PositiveSide,
        VARIANT_BOOL * CounterClockWise,
        double * VectorX,
        double * VectorY,
        double * VectorZ );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    OccurrencePtr GetOccurrence1 ( );
    OccurrencePtr GetOccurrence2 ( );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL _arg1 );
    IDispatchPtr GetElement1 (
        VARIANT_BOOL * IsTopologyReference );
    IDispatchPtr GetElement2 (
        VARIANT_BOOL * IsTopologyReference );
    VARIANT_BOOL GetRangedAngle ( );
    void PutRangedAngle (
        VARIANT_BOOL _arg1 );
    double GetRangeLow ( );
    void PutRangeLow (
        double _arg1 );
    double GetRangeHigh ( );
    void PutRangeHigh (
        double _arg1 );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
};

struct __declspec(uuid("95135f3c-015c-11d2-be0c-080036b4d502"))
_IAngularRelation3dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum Relation3dStatusConstants Status;
    __declspec(property(get=GetPart1))
    PartPtr Part1;
    __declspec(property(get=GetPart2))
    PartPtr Part2;
    __declspec(property(get=GetAngle,put=PutAngle))
    double Angle;
    __declspec(property(get=GetOccurrence1))
    OccurrencePtr Occurrence1;
    __declspec(property(get=GetOccurrence2))
    OccurrencePtr Occurrence2;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetRangedAngle,put=PutRangedAngle))
    VARIANT_BOOL RangedAngle;
    __declspec(property(get=GetRangeLow,put=PutRangeLow))
    double RangeLow;
    __declspec(property(get=GetRangeHigh,put=PutRangeHigh))
    double RangeHigh;
    __declspec(property(get=GetDetailedStatus))
    enum Relation3dDetailedStatusConstants DetailedStatus;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum Relation3dStatusConstants GetStatus ( );
    enum Relation3dDetailedStatusConstants GetDetailedStatus ( );
    PartPtr GetPart1 ( );
    PartPtr GetPart2 ( );
    HRESULT GetGeometry1 (
        long * GeometryType,
        double * PointX,
        double * PointY,
        double * PointZ,
        double * VectorX,
        double * VectorY,
        double * VectorZ );
    HRESULT GetGeometry2 (
        long * GeometryType,
        double * PointX,
        double * PointY,
        double * PointZ,
        double * VectorX,
        double * VectorY,
        double * VectorZ );
    double GetAngle ( );
    void PutAngle (
        double Angle );
    HRESULT GetDefinition (
        VARIANT_BOOL * ToPlane1PositiveSide,
        VARIANT_BOOL * FromPlane2PositiveSide,
        VARIANT_BOOL * CounterClockWise,
        double * VectorX,
        double * VectorY,
        double * VectorZ );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    OccurrencePtr GetOccurrence1 ( );
    OccurrencePtr GetOccurrence2 ( );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL bSuppress );
    IDispatchPtr GetElement1 (
        VARIANT_BOOL * IsTopologyReference );
    IDispatchPtr GetElement2 (
        VARIANT_BOOL * IsTopologyReference );
    VARIANT_BOOL GetRangedAngle ( );
    void PutRangedAngle (
        VARIANT_BOOL RangedAngle );
    double GetRangeLow ( );
    void PutRangeLow (
        double RangeLow );
    double GetRangeHigh ( );
    void PutRangeHigh (
        double RangeHigh );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ IDispatch * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall raw_Select (
        /*[in]*/ VARIANT_BOOL Replace ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum Relation3dStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall get_DetailedStatus (
        /*[out,retval]*/ enum Relation3dDetailedStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall get_Part1 (
        /*[out,retval]*/ struct Part * * Part1 ) = 0;
      virtual HRESULT __stdcall get_Part2 (
        /*[out,retval]*/ struct Part * * Part2 ) = 0;
      virtual HRESULT __stdcall raw_GetGeometry1 (
        /*[out]*/ long * GeometryType,
        /*[out]*/ double * PointX,
        /*[out]*/ double * PointY,
        /*[out]*/ double * PointZ,
        /*[out]*/ double * VectorX,
        /*[out]*/ double * VectorY,
        /*[out]*/ double * VectorZ ) = 0;
      virtual HRESULT __stdcall raw_GetGeometry2 (
        /*[out]*/ long * GeometryType,
        /*[out]*/ double * PointX,
        /*[out]*/ double * PointY,
        /*[out]*/ double * PointZ,
        /*[out]*/ double * VectorX,
        /*[out]*/ double * VectorY,
        /*[out]*/ double * VectorZ ) = 0;
      virtual HRESULT __stdcall get_Angle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall put_Angle (
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall raw_GetDefinition (
        /*[out]*/ VARIANT_BOOL * ToPlane1PositiveSide,
        /*[out]*/ VARIANT_BOOL * FromPlane2PositiveSide,
        /*[out]*/ VARIANT_BOOL * CounterClockWise,
        /*[out]*/ double * VectorX,
        /*[out]*/ double * VectorY,
        /*[out]*/ double * VectorZ ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall get_Occurrence1 (
        /*[out,retval]*/ struct Occurrence * * Occurrence1 ) = 0;
      virtual HRESULT __stdcall get_Occurrence2 (
        /*[out,retval]*/ struct Occurrence * * Occurrence2 ) = 0;
      virtual HRESULT __stdcall get_Suppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_Suppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall raw_GetElement1 (
        /*[out]*/ VARIANT_BOOL * IsTopologyReference,
        /*[out,retval]*/ IDispatch * * Element ) = 0;
      virtual HRESULT __stdcall raw_GetElement2 (
        /*[out]*/ VARIANT_BOOL * IsTopologyReference,
        /*[out,retval]*/ IDispatch * * Element ) = 0;
      virtual HRESULT __stdcall get_RangedAngle (
        /*[out,retval]*/ VARIANT_BOOL * RangedAngle ) = 0;
      virtual HRESULT __stdcall put_RangedAngle (
        /*[in]*/ VARIANT_BOOL RangedAngle ) = 0;
      virtual HRESULT __stdcall get_RangeLow (
        /*[out,retval]*/ double * RangeLow ) = 0;
      virtual HRESULT __stdcall put_RangeLow (
        /*[in]*/ double RangeLow ) = 0;
      virtual HRESULT __stdcall get_RangeHigh (
        /*[out,retval]*/ double * RangeHigh ) = 0;
      virtual HRESULT __stdcall put_RangeHigh (
        /*[in]*/ double RangeHigh ) = 0;
      virtual HRESULT __stdcall raw_GetSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_AddSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_DeleteSuppressionVariable ( ) = 0;
      virtual HRESULT __stdcall raw_HasSuppressionVariable (
        /*[out,retval]*/ VARIANT_BOOL * IsSuppressionVariablePresent ) = 0;
};

struct __declspec(uuid("58e959db-07d0-11d3-986a-0060b0c335a5"))
TangentRelation3d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum Relation3dStatusConstants Status;
    __declspec(property(get=GetOffset,put=PutOffset))
    double Offset;
    __declspec(property(get=GetOccurrence1))
    OccurrencePtr Occurrence1;
    __declspec(property(get=GetOccurrence2))
    OccurrencePtr Occurrence2;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetHalfSpacePositive))
    VARIANT_BOOL HalfSpacePositive;
    __declspec(property(get=GetRangedOffset,put=PutRangedOffset))
    VARIANT_BOOL RangedOffset;
    __declspec(property(get=GetRangeLow,put=PutRangeLow))
    double RangeLow;
    __declspec(property(get=GetRangeHigh,put=PutRangeHigh))
    double RangeHigh;
    __declspec(property(get=GetDetailedStatus))
    enum Relation3dDetailedStatusConstants DetailedStatus;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum Relation3dStatusConstants GetStatus ( );
    enum Relation3dDetailedStatusConstants GetDetailedStatus ( );
    HRESULT GetGeometry1 (
        long * GeometryType,
        double * PointX,
        double * PointY,
        double * PointZ,
        double * VectorX,
        double * VectorY,
        double * VectorZ );
    HRESULT GetGeometry2 (
        long * GeometryType,
        double * PointX,
        double * PointY,
        double * PointZ,
        double * VectorX,
        double * VectorY,
        double * VectorZ );
    OccurrencePtr GetOccurrence1 ( );
    OccurrencePtr GetOccurrence2 ( );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL _arg1 );
    double GetOffset ( );
    void PutOffset (
        double _arg1 );
    VARIANT_BOOL GetHalfSpacePositive ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    IDispatchPtr GetElement1 (
        VARIANT_BOOL * IsTopologyReference );
    IDispatchPtr GetElement2 (
        VARIANT_BOOL * IsTopologyReference );
    VARIANT_BOOL GetRangedOffset ( );
    void PutRangedOffset (
        VARIANT_BOOL _arg1 );
    double GetRangeLow ( );
    void PutRangeLow (
        double _arg1 );
    double GetRangeHigh ( );
    void PutRangeHigh (
        double _arg1 );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
};

struct __declspec(uuid("42325571-7f8f-11d3-a45b-00500471d7ac"))
_ITangentRelation3dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum Relation3dStatusConstants Status;
    __declspec(property(get=GetOffset,put=PutOffset))
    double Offset;
    __declspec(property(get=GetOccurrence1))
    OccurrencePtr Occurrence1;
    __declspec(property(get=GetOccurrence2))
    OccurrencePtr Occurrence2;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetHalfSpacePositive))
    VARIANT_BOOL HalfSpacePositive;
    __declspec(property(get=GetRangedOffset,put=PutRangedOffset))
    VARIANT_BOOL RangedOffset;
    __declspec(property(get=GetRangeLow,put=PutRangeLow))
    double RangeLow;
    __declspec(property(get=GetRangeHigh,put=PutRangeHigh))
    double RangeHigh;
    __declspec(property(get=GetDetailedStatus))
    enum Relation3dDetailedStatusConstants DetailedStatus;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum Relation3dStatusConstants GetStatus ( );
    enum Relation3dDetailedStatusConstants GetDetailedStatus ( );
    HRESULT GetGeometry1 (
        long * GeometryType,
        double * PointX,
        double * PointY,
        double * PointZ,
        double * VectorX,
        double * VectorY,
        double * VectorZ );
    HRESULT GetGeometry2 (
        long * GeometryType,
        double * PointX,
        double * PointY,
        double * PointZ,
        double * VectorX,
        double * VectorY,
        double * VectorZ );
    OccurrencePtr GetOccurrence1 ( );
    OccurrencePtr GetOccurrence2 ( );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL bSuppress );
    double GetOffset ( );
    void PutOffset (
        double Offset );
    VARIANT_BOOL GetHalfSpacePositive ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    IDispatchPtr GetElement1 (
        VARIANT_BOOL * IsTopologyReference );
    IDispatchPtr GetElement2 (
        VARIANT_BOOL * IsTopologyReference );
    VARIANT_BOOL GetRangedOffset ( );
    void PutRangedOffset (
        VARIANT_BOOL RangedOffset );
    double GetRangeLow ( );
    void PutRangeLow (
        double RangeLow );
    double GetRangeHigh ( );
    void PutRangeHigh (
        double RangeHigh );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ IDispatch * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall raw_Select (
        /*[in]*/ VARIANT_BOOL Replace ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum Relation3dStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall get_DetailedStatus (
        /*[out,retval]*/ enum Relation3dDetailedStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall raw_GetGeometry1 (
        /*[out]*/ long * GeometryType,
        /*[out]*/ double * PointX,
        /*[out]*/ double * PointY,
        /*[out]*/ double * PointZ,
        /*[out]*/ double * VectorX,
        /*[out]*/ double * VectorY,
        /*[out]*/ double * VectorZ ) = 0;
      virtual HRESULT __stdcall raw_GetGeometry2 (
        /*[out]*/ long * GeometryType,
        /*[out]*/ double * PointX,
        /*[out]*/ double * PointY,
        /*[out]*/ double * PointZ,
        /*[out]*/ double * VectorX,
        /*[out]*/ double * VectorY,
        /*[out]*/ double * VectorZ ) = 0;
      virtual HRESULT __stdcall get_Occurrence1 (
        /*[out,retval]*/ struct Occurrence * * Occurrence1 ) = 0;
      virtual HRESULT __stdcall get_Occurrence2 (
        /*[out,retval]*/ struct Occurrence * * Occurrence2 ) = 0;
      virtual HRESULT __stdcall get_Suppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_Suppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall get_Offset (
        /*[out,retval]*/ double * Offset ) = 0;
      virtual HRESULT __stdcall put_Offset (
        /*[in]*/ double Offset ) = 0;
      virtual HRESULT __stdcall get_HalfSpacePositive (
        /*[out,retval]*/ VARIANT_BOOL * bHalfSpacePositive ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall raw_GetElement1 (
        /*[out]*/ VARIANT_BOOL * IsTopologyReference,
        /*[out,retval]*/ IDispatch * * Element ) = 0;
      virtual HRESULT __stdcall raw_GetElement2 (
        /*[out]*/ VARIANT_BOOL * IsTopologyReference,
        /*[out,retval]*/ IDispatch * * Element ) = 0;
      virtual HRESULT __stdcall get_RangedOffset (
        /*[out,retval]*/ VARIANT_BOOL * RangedOffset ) = 0;
      virtual HRESULT __stdcall put_RangedOffset (
        /*[in]*/ VARIANT_BOOL RangedOffset ) = 0;
      virtual HRESULT __stdcall get_RangeLow (
        /*[out,retval]*/ double * RangeLow ) = 0;
      virtual HRESULT __stdcall put_RangeLow (
        /*[in]*/ double RangeLow ) = 0;
      virtual HRESULT __stdcall get_RangeHigh (
        /*[out,retval]*/ double * RangeHigh ) = 0;
      virtual HRESULT __stdcall put_RangeHigh (
        /*[in]*/ double RangeHigh ) = 0;
      virtual HRESULT __stdcall raw_GetSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_AddSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_DeleteSuppressionVariable ( ) = 0;
      virtual HRESULT __stdcall raw_HasSuppressionVariable (
        /*[out,retval]*/ VARIANT_BOOL * IsSuppressionVariablePresent ) = 0;
};

enum Relation3dGearTypeConstants
{
    igRelation3dGearTypeRotaryRotary = 0,
    igRelation3dGearTypeRotaryLinear = 1,
    igRelation3dGearTypeLinearLinear = 2
};

enum Relation3dGearRatioTypeConstants
{
    igRelation3dGearRatioTypeNumberOfTurns = 0,
    igRelation3dGearRatioTypeNumberOfTeeth = 1
};

struct __declspec(uuid("c07abe02-c644-46d5-a122-640591786172"))
GearRelation3d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum Relation3dStatusConstants Status;
    __declspec(property(get=GetOccurrence1))
    OccurrencePtr Occurrence1;
    __declspec(property(get=GetOccurrence2))
    OccurrencePtr Occurrence2;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetRatioValue1,put=PutRatioValue1))
    double RatioValue1;
    __declspec(property(get=GetRatioValue2,put=PutRatioValue2))
    double RatioValue2;
    __declspec(property(get=GetDetailedStatus))
    enum Relation3dDetailedStatusConstants DetailedStatus;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum Relation3dStatusConstants GetStatus ( );
    enum Relation3dDetailedStatusConstants GetDetailedStatus ( );
    OccurrencePtr GetOccurrence1 ( );
    OccurrencePtr GetOccurrence2 ( );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL _arg1 );
    IDispatchPtr GetElement1 (
        VARIANT_BOOL * IsTopologyReference );
    IDispatchPtr GetElement2 (
        VARIANT_BOOL * IsTopologyReference );
    HRESULT GetGeometry1 (
        long * GeometryType,
        double * PointX,
        double * PointY,
        double * PointZ,
        double * VectorX,
        double * VectorY,
        double * VectorZ );
    HRESULT GetGeometry2 (
        long * GeometryType,
        double * PointX,
        double * PointY,
        double * PointZ,
        double * VectorX,
        double * VectorY,
        double * VectorZ );
    double GetRatioValue1 ( );
    void PutRatioValue1 (
        double _arg1 );
    double GetRatioValue2 ( );
    void PutRatioValue2 (
        double _arg1 );
    HRESULT Flip ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
};

struct __declspec(uuid("b97ef8a2-14fe-4b2f-91da-ff2b3fe54a92"))
_IGearRelation3dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum Relation3dStatusConstants Status;
    __declspec(property(get=GetOccurrence1))
    OccurrencePtr Occurrence1;
    __declspec(property(get=GetOccurrence2))
    OccurrencePtr Occurrence2;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetRatioValue1,put=PutRatioValue1))
    double RatioValue1;
    __declspec(property(get=GetRatioValue2,put=PutRatioValue2))
    double RatioValue2;
    __declspec(property(get=GetDetailedStatus))
    enum Relation3dDetailedStatusConstants DetailedStatus;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum Relation3dStatusConstants GetStatus ( );
    enum Relation3dDetailedStatusConstants GetDetailedStatus ( );
    OccurrencePtr GetOccurrence1 ( );
    OccurrencePtr GetOccurrence2 ( );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL bSuppress );
    IDispatchPtr GetElement1 (
        VARIANT_BOOL * IsTopologyReference );
    IDispatchPtr GetElement2 (
        VARIANT_BOOL * IsTopologyReference );
    HRESULT GetGeometry1 (
        long * GeometryType,
        double * PointX,
        double * PointY,
        double * PointZ,
        double * VectorX,
        double * VectorY,
        double * VectorZ );
    HRESULT GetGeometry2 (
        long * GeometryType,
        double * PointX,
        double * PointY,
        double * PointZ,
        double * VectorX,
        double * VectorY,
        double * VectorZ );
    double GetRatioValue1 ( );
    void PutRatioValue1 (
        double RatioValue1 );
    double GetRatioValue2 ( );
    void PutRatioValue2 (
        double RatioValue2 );
    HRESULT Flip ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ IDispatch * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall raw_Select (
        /*[in]*/ VARIANT_BOOL Replace ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum Relation3dStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall get_DetailedStatus (
        /*[out,retval]*/ enum Relation3dDetailedStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall get_Occurrence1 (
        /*[out,retval]*/ struct Occurrence * * Occurrence1 ) = 0;
      virtual HRESULT __stdcall get_Occurrence2 (
        /*[out,retval]*/ struct Occurrence * * Occurrence2 ) = 0;
      virtual HRESULT __stdcall get_Suppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_Suppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall raw_GetElement1 (
        /*[out]*/ VARIANT_BOOL * IsTopologyReference,
        /*[out,retval]*/ IDispatch * * Element ) = 0;
      virtual HRESULT __stdcall raw_GetElement2 (
        /*[out]*/ VARIANT_BOOL * IsTopologyReference,
        /*[out,retval]*/ IDispatch * * Element ) = 0;
      virtual HRESULT __stdcall raw_GetGeometry1 (
        /*[out]*/ long * GeometryType,
        /*[out]*/ double * PointX,
        /*[out]*/ double * PointY,
        /*[out]*/ double * PointZ,
        /*[out]*/ double * VectorX,
        /*[out]*/ double * VectorY,
        /*[out]*/ double * VectorZ ) = 0;
      virtual HRESULT __stdcall raw_GetGeometry2 (
        /*[out]*/ long * GeometryType,
        /*[out]*/ double * PointX,
        /*[out]*/ double * PointY,
        /*[out]*/ double * PointZ,
        /*[out]*/ double * VectorX,
        /*[out]*/ double * VectorY,
        /*[out]*/ double * VectorZ ) = 0;
      virtual HRESULT __stdcall get_RatioValue1 (
        /*[out,retval]*/ double * RatioValue1 ) = 0;
      virtual HRESULT __stdcall put_RatioValue1 (
        /*[in]*/ double RatioValue1 ) = 0;
      virtual HRESULT __stdcall get_RatioValue2 (
        /*[out,retval]*/ double * RatioValue2 ) = 0;
      virtual HRESULT __stdcall put_RatioValue2 (
        /*[in]*/ double RatioValue2 ) = 0;
      virtual HRESULT __stdcall raw_Flip ( ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall raw_GetSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_AddSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_DeleteSuppressionVariable ( ) = 0;
      virtual HRESULT __stdcall raw_HasSuppressionVariable (
        /*[out,retval]*/ VARIANT_BOOL * IsSuppressionVariablePresent ) = 0;
};

struct __declspec(uuid("345b0e81-661f-41e2-8b75-7170635277e1"))
CenterPlaneRelation3d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum Relation3dStatusConstants Status;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetDetailedStatus))
    enum Relation3dDetailedStatusConstants DetailedStatus;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum Relation3dStatusConstants GetStatus ( );
    enum Relation3dDetailedStatusConstants GetDetailedStatus ( );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL _arg1 );
    HRESULT Flip ( );
    IDispatchPtr GetElement1 (
        VARIANT_BOOL * IsTopologyReference );
    IDispatchPtr GetElement2 (
        VARIANT_BOOL * IsTopologyReference );
    IDispatchPtr GetElement3 (
        VARIANT_BOOL * IsTopologyReference );
    IDispatchPtr GetElement4 (
        VARIANT_BOOL * IsTopologyReference );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
};

struct __declspec(uuid("f83be012-da6e-4d31-91da-0ef32bee5a33"))
_ICenterPlaneRelation3dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum Relation3dStatusConstants Status;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetDetailedStatus))
    enum Relation3dDetailedStatusConstants DetailedStatus;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum Relation3dStatusConstants GetStatus ( );
    enum Relation3dDetailedStatusConstants GetDetailedStatus ( );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL bSuppress );
    HRESULT Flip ( );
    IDispatchPtr GetElement1 (
        VARIANT_BOOL * IsTopologyReference );
    IDispatchPtr GetElement2 (
        VARIANT_BOOL * IsTopologyReference );
    IDispatchPtr GetElement3 (
        VARIANT_BOOL * IsTopologyReference );
    IDispatchPtr GetElement4 (
        VARIANT_BOOL * IsTopologyReference );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ IDispatch * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall raw_Select (
        /*[in]*/ VARIANT_BOOL Replace ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum Relation3dStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall get_DetailedStatus (
        /*[out,retval]*/ enum Relation3dDetailedStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall get_Suppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_Suppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall raw_Flip ( ) = 0;
      virtual HRESULT __stdcall raw_GetElement1 (
        /*[out]*/ VARIANT_BOOL * IsTopologyReference,
        /*[out,retval]*/ IDispatch * * Element ) = 0;
      virtual HRESULT __stdcall raw_GetElement2 (
        /*[out]*/ VARIANT_BOOL * IsTopologyReference,
        /*[out,retval]*/ IDispatch * * Element ) = 0;
      virtual HRESULT __stdcall raw_GetElement3 (
        /*[out]*/ VARIANT_BOOL * IsTopologyReference,
        /*[out,retval]*/ IDispatch * * Element ) = 0;
      virtual HRESULT __stdcall raw_GetElement4 (
        /*[out]*/ VARIANT_BOOL * IsTopologyReference,
        /*[out,retval]*/ IDispatch * * Element ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall raw_GetSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_AddSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_DeleteSuppressionVariable ( ) = 0;
      virtual HRESULT __stdcall raw_HasSuppressionVariable (
        /*[out,retval]*/ VARIANT_BOOL * IsSuppressionVariablePresent ) = 0;
};

struct __declspec(uuid("1c8d5564-d410-4836-a81a-5498b15fe9e5"))
RigidSetRelation3d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum Relation3dStatusConstants Status;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetIsMember))
    VARIANT_BOOL IsMember[];
    __declspec(property(get=GetOccurrenceCount))
    long OccurrenceCount;
    __declspec(property(get=GetOccurrences))
    SAFEARRAY * Occurrences;
    __declspec(property(get=GetDetailedStatus))
    enum Relation3dDetailedStatusConstants DetailedStatus;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum Relation3dStatusConstants GetStatus ( );
    enum Relation3dDetailedStatusConstants GetDetailedStatus ( );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL _arg1 );
    HRESULT AddOccurrence (
        IDispatch * Occurrence );
    HRESULT RemoveOccurrence (
        IDispatch * Occurrence );
    VARIANT_BOOL GetIsMember (
        IDispatch * Occurrence );
    long GetOccurrenceCount ( );
    SAFEARRAY * GetOccurrences ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
};

struct __declspec(uuid("82c62c0c-d38c-4f1d-abae-0fbb045893e5"))
_IRigidSetRelation3dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum Relation3dStatusConstants Status;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetIsMember))
    VARIANT_BOOL IsMember[];
    __declspec(property(get=GetOccurrenceCount))
    long OccurrenceCount;
    __declspec(property(get=GetOccurrences))
    SAFEARRAY * Occurrences;
    __declspec(property(get=GetDetailedStatus))
    enum Relation3dDetailedStatusConstants DetailedStatus;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum Relation3dStatusConstants GetStatus ( );
    enum Relation3dDetailedStatusConstants GetDetailedStatus ( );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL bSuppress );
    HRESULT AddOccurrence (
        IDispatch * Occurrence );
    HRESULT RemoveOccurrence (
        IDispatch * Occurrence );
    VARIANT_BOOL GetIsMember (
        IDispatch * Occurrence );
    long GetOccurrenceCount ( );
    SAFEARRAY * GetOccurrences ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ IDispatch * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall raw_Select (
        /*[in]*/ VARIANT_BOOL Replace ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum Relation3dStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall get_DetailedStatus (
        /*[out,retval]*/ enum Relation3dDetailedStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall get_Suppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_Suppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall raw_AddOccurrence (
        /*[in]*/ IDispatch * Occurrence ) = 0;
      virtual HRESULT __stdcall raw_RemoveOccurrence (
        /*[in]*/ IDispatch * Occurrence ) = 0;
      virtual HRESULT __stdcall get_IsMember (
        /*[in]*/ IDispatch * Occurrence,
        /*[out,retval]*/ VARIANT_BOOL * IsMember ) = 0;
      virtual HRESULT __stdcall get_OccurrenceCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Occurrences (
        /*[out,retval]*/ SAFEARRAY * * Occurrences ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall raw_GetSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_AddSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_DeleteSuppressionVariable ( ) = 0;
      virtual HRESULT __stdcall raw_HasSuppressionVariable (
        /*[out,retval]*/ VARIANT_BOOL * IsSuppressionVariablePresent ) = 0;
};

struct __declspec(uuid("68c77a64-f099-4d24-9a33-e9f9540a5ad6"))
CamFollowerRelation3d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum Relation3dStatusConstants Status;
    __declspec(property(get=GetOccurrence1))
    OccurrencePtr Occurrence1;
    __declspec(property(get=GetOccurrence2))
    OccurrencePtr Occurrence2;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetDetailedStatus))
    enum Relation3dDetailedStatusConstants DetailedStatus;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum Relation3dStatusConstants GetStatus ( );
    enum Relation3dDetailedStatusConstants GetDetailedStatus ( );
    OccurrencePtr GetOccurrence1 ( );
    OccurrencePtr GetOccurrence2 ( );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL _arg1 );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
};

struct __declspec(uuid("b7d80306-9508-43fc-b5a0-450f47e2a998"))
_ICamFollowerRelation3dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum Relation3dStatusConstants Status;
    __declspec(property(get=GetOccurrence1))
    OccurrencePtr Occurrence1;
    __declspec(property(get=GetOccurrence2))
    OccurrencePtr Occurrence2;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetDetailedStatus))
    enum Relation3dDetailedStatusConstants DetailedStatus;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum Relation3dStatusConstants GetStatus ( );
    enum Relation3dDetailedStatusConstants GetDetailedStatus ( );
    OccurrencePtr GetOccurrence1 ( );
    OccurrencePtr GetOccurrence2 ( );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL bSuppress );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ IDispatch * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall raw_Select (
        /*[in]*/ VARIANT_BOOL Replace ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum Relation3dStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall get_DetailedStatus (
        /*[out,retval]*/ enum Relation3dDetailedStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall get_Occurrence1 (
        /*[out,retval]*/ struct Occurrence * * Occurrence1 ) = 0;
      virtual HRESULT __stdcall get_Occurrence2 (
        /*[out,retval]*/ struct Occurrence * * Occurrence2 ) = 0;
      virtual HRESULT __stdcall get_Suppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_Suppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall raw_GetSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_AddSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_DeleteSuppressionVariable ( ) = 0;
      virtual HRESULT __stdcall raw_HasSuppressionVariable (
        /*[out,retval]*/ VARIANT_BOOL * IsSuppressionVariablePresent ) = 0;
};

struct __declspec(uuid("1c8d5433-d410-4836-a81a-5498b15fe9e5"))
PathRelation3d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum Relation3dStatusConstants Status;
    __declspec(property(get=GetOccurrence1))
    OccurrencePtr Occurrence1;
    __declspec(property(get=GetOccurrence2))
    OccurrencePtr Occurrence2;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetDetailedStatus))
    enum Relation3dDetailedStatusConstants DetailedStatus;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum Relation3dStatusConstants GetStatus ( );
    enum Relation3dDetailedStatusConstants GetDetailedStatus ( );
    OccurrencePtr GetOccurrence1 ( );
    OccurrencePtr GetOccurrence2 ( );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL _arg1 );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
};

struct __declspec(uuid("b7d80455-9508-43fc-b5a0-450f47e2a998"))
_IPathRelation3dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum Relation3dStatusConstants Status;
    __declspec(property(get=GetOccurrence1))
    OccurrencePtr Occurrence1;
    __declspec(property(get=GetOccurrence2))
    OccurrencePtr Occurrence2;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetDetailedStatus))
    enum Relation3dDetailedStatusConstants DetailedStatus;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum Relation3dStatusConstants GetStatus ( );
    enum Relation3dDetailedStatusConstants GetDetailedStatus ( );
    OccurrencePtr GetOccurrence1 ( );
    OccurrencePtr GetOccurrence2 ( );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL bSuppress );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ IDispatch * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall raw_Select (
        /*[in]*/ VARIANT_BOOL Replace ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum Relation3dStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall get_DetailedStatus (
        /*[out,retval]*/ enum Relation3dDetailedStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall get_Occurrence1 (
        /*[out,retval]*/ struct Occurrence * * Occurrence1 ) = 0;
      virtual HRESULT __stdcall get_Occurrence2 (
        /*[out,retval]*/ struct Occurrence * * Occurrence2 ) = 0;
      virtual HRESULT __stdcall get_Suppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_Suppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall raw_GetSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_AddSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_DeleteSuppressionVariable ( ) = 0;
      virtual HRESULT __stdcall raw_HasSuppressionVariable (
        /*[out,retval]*/ VARIANT_BOOL * IsSuppressionVariablePresent ) = 0;
};

struct __declspec(uuid("cc8ecc61-dc84-42d8-88a8-5d8a96078f44"))
CoordinateSystemRelation3d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum Relation3dStatusConstants Status;
    __declspec(property(get=GetDetailedStatus))
    enum Relation3dDetailedStatusConstants DetailedStatus;
    __declspec(property(get=GetPart1))
    PartPtr Part1;
    __declspec(property(get=GetPart2))
    PartPtr Part2;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum Relation3dStatusConstants GetStatus ( );
    enum Relation3dDetailedStatusConstants GetDetailedStatus ( );
    PartPtr GetPart1 ( );
    PartPtr GetPart2 ( );
    HRESULT GetGeometry1 (
        long * GeometryType,
        double * PointX,
        double * PointY,
        double * PointZ,
        double * VectorX,
        double * VectorY,
        double * VectorZ );
    HRESULT GetGeometry2 (
        long * GeometryType,
        double * PointX,
        double * PointY,
        double * PointZ,
        double * VectorX,
        double * VectorY,
        double * VectorZ );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL _arg1 );
    IDispatchPtr GetElement1 (
        VARIANT_BOOL * IsTopologyReference );
    IDispatchPtr GetElement2 (
        VARIANT_BOOL * IsTopologyReference );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
};

struct __declspec(uuid("af7ac7d7-4cad-4d18-b0a0-4663104712f5"))
_ICoordinateSystemRelation3dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum Relation3dStatusConstants Status;
    __declspec(property(get=GetDetailedStatus))
    enum Relation3dDetailedStatusConstants DetailedStatus;
    __declspec(property(get=GetPart1))
    PartPtr Part1;
    __declspec(property(get=GetPart2))
    PartPtr Part2;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum Relation3dStatusConstants GetStatus ( );
    enum Relation3dDetailedStatusConstants GetDetailedStatus ( );
    PartPtr GetPart1 ( );
    PartPtr GetPart2 ( );
    HRESULT GetGeometry1 (
        long * GeometryType,
        double * PointX,
        double * PointY,
        double * PointZ,
        double * VectorX,
        double * VectorY,
        double * VectorZ );
    HRESULT GetGeometry2 (
        long * GeometryType,
        double * PointX,
        double * PointY,
        double * PointZ,
        double * VectorX,
        double * VectorY,
        double * VectorZ );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL bSuppress );
    IDispatchPtr GetElement1 (
        VARIANT_BOOL * IsTopologyReference );
    IDispatchPtr GetElement2 (
        VARIANT_BOOL * IsTopologyReference );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ IDispatch * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall raw_Select (
        /*[in]*/ VARIANT_BOOL Replace ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum Relation3dStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall get_DetailedStatus (
        /*[out,retval]*/ enum Relation3dDetailedStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall get_Part1 (
        /*[out,retval]*/ struct Part * * Part1 ) = 0;
      virtual HRESULT __stdcall get_Part2 (
        /*[out,retval]*/ struct Part * * Part2 ) = 0;
      virtual HRESULT __stdcall raw_GetGeometry1 (
        /*[out]*/ long * GeometryType,
        /*[out]*/ double * PointX,
        /*[out]*/ double * PointY,
        /*[out]*/ double * PointZ,
        /*[out]*/ double * VectorX,
        /*[out]*/ double * VectorY,
        /*[out]*/ double * VectorZ ) = 0;
      virtual HRESULT __stdcall raw_GetGeometry2 (
        /*[out]*/ long * GeometryType,
        /*[out]*/ double * PointX,
        /*[out]*/ double * PointY,
        /*[out]*/ double * PointZ,
        /*[out]*/ double * VectorX,
        /*[out]*/ double * VectorY,
        /*[out]*/ double * VectorZ ) = 0;
      virtual HRESULT __stdcall get_Suppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_Suppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall raw_GetElement1 (
        /*[out]*/ VARIANT_BOOL * IsTopologyReference,
        /*[out,retval]*/ IDispatch * * Element ) = 0;
      virtual HRESULT __stdcall raw_GetElement2 (
        /*[out]*/ VARIANT_BOOL * IsTopologyReference,
        /*[out,retval]*/ IDispatch * * Element ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall raw_GetSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_AddSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_DeleteSuppressionVariable ( ) = 0;
      virtual HRESULT __stdcall raw_HasSuppressionVariable (
        /*[out,retval]*/ VARIANT_BOOL * IsSuppressionVariablePresent ) = 0;
};

enum Relation3dSlotOffsetTypeConstants
{
    igRelation3dSlotOffsetTypeFree = 1,
    igRelation3dSlotOffsetTypeCenterinSlot = 2,
    igRelation3dSlotOffsetTypeDistanceAlongSlot = 3,
    igRelation3dSlotOffsetTypePercentAlongSlot = 4
};

struct __declspec(uuid("373647bf-745c-4533-b55b-bbb0236968fa"))
SlotRelation3d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum Relation3dStatusConstants Status;
    __declspec(property(get=GetDetailedStatus))
    enum Relation3dDetailedStatusConstants DetailedStatus;
    __declspec(property(get=GetOccurrence1))
    OccurrencePtr Occurrence1;
    __declspec(property(get=GetOccurrence2))
    OccurrencePtr Occurrence2;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetOffsetValue,put=PutOffsetValue))
    double OffsetValue;
    __declspec(property(get=GetOffsetType,put=PutOffsetType))
    enum Relation3dSlotOffsetTypeConstants OffsetType;
    __declspec(property(get=GetSlotPathLength))
    double SlotPathLength;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum Relation3dStatusConstants GetStatus ( );
    enum Relation3dDetailedStatusConstants GetDetailedStatus ( );
    OccurrencePtr GetOccurrence1 ( );
    OccurrencePtr GetOccurrence2 ( );
    HRESULT GetGeometry1 (
        long * GeometryType,
        double * PointX,
        double * PointY,
        double * PointZ,
        double * VectorX,
        double * VectorY,
        double * VectorZ );
    HRESULT GetGeometry2 (
        long * GeometryType,
        double * PointX,
        double * PointY,
        double * PointZ,
        double * VectorX,
        double * VectorY,
        double * VectorZ );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL _arg1 );
    IDispatchPtr GetElement1 (
        VARIANT_BOOL * IsTopologyReference );
    IDispatchPtr GetElement2 (
        VARIANT_BOOL * IsTopologyReference );
    double GetOffsetValue ( );
    void PutOffsetValue (
        double _arg1 );
    enum Relation3dSlotOffsetTypeConstants GetOffsetType ( );
    void PutOffsetType (
        enum Relation3dSlotOffsetTypeConstants _arg1 );
    double GetSlotPathLength ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
};

struct __declspec(uuid("95135f37-015c-11d2-be0c-080036b4d502"))
_IRelations3dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IDispatchPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    IDispatchPtr AddGround (
        struct Occurrence * Occurrence );
    PlanarRelation3dPtr AddPlanar (
        IDispatch * Plane1,
        IDispatch * Plane2,
        VARIANT_BOOL NormalsAligned,
        SAFEARRAY * * ConstrainingPoint1,
        SAFEARRAY * * ConstrainingPoint2 );
    AxialRelation3dPtr AddAxial (
        IDispatch * Axis1,
        IDispatch * Axis2,
        VARIANT_BOOL NormalsAligned );
    PointRelation3dPtr AddPoint (
        IDispatch * PointGeometry,
        enum Relation3dGeometryConstants PointKeyPoint,
        IDispatch * ConnectGeometry,
        const _variant_t & ConnectKeyPoint = vtMissing );
    AngularRelation3dPtr AddAngular (
        IDispatch * Element1,
        IDispatch * Element2,
        VARIANT_BOOL ReverseElement1Direction,
        VARIANT_BOOL ReverseElement2Direction,
        IDispatch * MeasureElement1,
        IDispatch * MeasureElement2,
        double Angle,
        VARIANT_BOOL MeasureToPositiveSide,
        VARIANT_BOOL MeasureFromPositiveSide,
        VARIANT_BOOL MeasureCCW );
    PointRelation3dPtr AddPointWithInferredGeometry (
        IDispatch * PointGeometry,
        IDispatch * SketchPoint );
    AxialRelation3dPtr AddAxialWithParallelOffset (
        IDispatch * Axis1,
        IDispatch * Axis2,
        VARIANT_BOOL FixedOffset,
        double Offset );
    TangentRelation3dPtr AddTangent (
        IDispatch * Element1,
        IDispatch * Element2,
        SAFEARRAY * * ConstrainingPoint1,
        SAFEARRAY * * ConstrainingPoint2,
        double Offset,
        VARIANT_BOOL IsHalfSpacePositive );
    GearRelation3dPtr AddGear (
        IDispatch * Element1,
        IDispatch * Element2,
        enum Relation3dGearTypeConstants GearType,
        enum Relation3dGearRatioTypeConstants RatioType,
        double GearRatio1,
        double GearRatio2,
        VARIANT_BOOL Flip );
    CenterPlaneRelation3dPtr AddCenterPlane (
        IDispatch * PlacementElement1,
        IDispatch * PlacementElement2,
        IDispatch * TargetElement1,
        IDispatch * TargetElement2,
        SAFEARRAY * * PlacementConstrainingPoint1,
        SAFEARRAY * * PlacementConstrainingPoint2,
        SAFEARRAY * * TargetConstrainingPoint1,
        SAFEARRAY * * TargetConstrainingPoint2 );
    RigidSetRelation3dPtr AddRigidSet (
        long OccurrenceCount,
        SAFEARRAY * * Occurrences );
    CamFollowerRelation3dPtr AddPlanarCam (
        IDispatch * ConstrainingFollowerElement,
        SAFEARRAY * * ConstrainingCamFaces );
    CamFollowerRelation3dPtr AddBarrelCam (
        IDispatch * ConstrainingFollowerElement,
        SAFEARRAY * * ConstrainingCamEdges );
    PathRelation3dPtr AddPath (
        IDispatch * ConstrainingFollowerElement,
        SAFEARRAY * * ConstrainingCamEdges );
    CoordinateSystemRelation3dPtr AddCoordinateSystem (
        IDispatch * pCoordSystem1,
        IDispatch * pCoordSystem2 );
    SlotRelation3dPtr AddSlot (
        IDispatch * pSlotElement,
        IDispatch * pPinElement,
        enum Relation3dSlotOffsetTypeConstants eSlotOffsetType,
        double dOffset );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ IDispatch * * Application ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Unknown ) = 0;
      virtual HRESULT __stdcall raw_AddGround (
        /*[in]*/ struct Occurrence * Occurrence,
        /*[out,retval]*/ IDispatch * * GroundRelation3d ) = 0;
      virtual HRESULT __stdcall raw_AddPlanar (
        /*[in]*/ IDispatch * Plane1,
        /*[in]*/ IDispatch * Plane2,
        /*[in]*/ VARIANT_BOOL NormalsAligned,
        /*[in]*/ SAFEARRAY * * ConstrainingPoint1,
        /*[in]*/ SAFEARRAY * * ConstrainingPoint2,
        /*[out,retval]*/ struct PlanarRelation3d * * PlanarRelation3d ) = 0;
      virtual HRESULT __stdcall raw_AddAxial (
        /*[in]*/ IDispatch * Axis1,
        /*[in]*/ IDispatch * Axis2,
        /*[in]*/ VARIANT_BOOL NormalsAligned,
        /*[out,retval]*/ struct AxialRelation3d * * AxialRelation3d ) = 0;
      virtual HRESULT __stdcall raw_AddPoint (
        /*[in]*/ IDispatch * PointGeometry,
        /*[in]*/ enum Relation3dGeometryConstants PointKeyPoint,
        /*[in]*/ IDispatch * ConnectGeometry,
        /*[in]*/ VARIANT ConnectKeyPoint,
        /*[out,retval]*/ struct PointRelation3d * * PointRelation3d ) = 0;
      virtual HRESULT __stdcall raw_AddAngular (
        /*[in]*/ IDispatch * Element1,
        /*[in]*/ IDispatch * Element2,
        /*[in]*/ VARIANT_BOOL ReverseElement1Direction,
        /*[in]*/ VARIANT_BOOL ReverseElement2Direction,
        /*[in]*/ IDispatch * MeasureElement1,
        /*[in]*/ IDispatch * MeasureElement2,
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL MeasureToPositiveSide,
        /*[in]*/ VARIANT_BOOL MeasureFromPositiveSide,
        /*[in]*/ VARIANT_BOOL MeasureCCW,
        /*[out,retval]*/ struct AngularRelation3d * * AngularRelation3d ) = 0;
      virtual HRESULT __stdcall raw_AddPointWithInferredGeometry (
        /*[in]*/ IDispatch * PointGeometry,
        /*[in]*/ IDispatch * SketchPoint,
        /*[out,retval]*/ struct PointRelation3d * * PointRelation3d ) = 0;
      virtual HRESULT __stdcall raw_AddAxialWithParallelOffset (
        /*[in]*/ IDispatch * Axis1,
        /*[in]*/ IDispatch * Axis2,
        /*[in]*/ VARIANT_BOOL FixedOffset,
        /*[in]*/ double Offset,
        /*[out,retval]*/ struct AxialRelation3d * * AxialRelation3d ) = 0;
      virtual HRESULT __stdcall raw_AddTangent (
        /*[in]*/ IDispatch * Element1,
        /*[in]*/ IDispatch * Element2,
        /*[in]*/ SAFEARRAY * * ConstrainingPoint1,
        /*[in]*/ SAFEARRAY * * ConstrainingPoint2,
        /*[in]*/ double Offset,
        /*[in]*/ VARIANT_BOOL IsHalfSpacePositive,
        /*[out,retval]*/ struct TangentRelation3d * * TangentRelation3d ) = 0;
      virtual HRESULT __stdcall raw_AddGear (
        /*[in]*/ IDispatch * Element1,
        /*[in]*/ IDispatch * Element2,
        /*[in]*/ enum Relation3dGearTypeConstants GearType,
        /*[in]*/ enum Relation3dGearRatioTypeConstants RatioType,
        /*[in]*/ double GearRatio1,
        /*[in]*/ double GearRatio2,
        /*[in]*/ VARIANT_BOOL Flip,
        /*[out,retval]*/ struct GearRelation3d * * GearRelation3d ) = 0;
      virtual HRESULT __stdcall raw_AddCenterPlane (
        /*[in]*/ IDispatch * PlacementElement1,
        /*[in]*/ IDispatch * PlacementElement2,
        /*[in]*/ IDispatch * TargetElement1,
        /*[in]*/ IDispatch * TargetElement2,
        /*[in]*/ SAFEARRAY * * PlacementConstrainingPoint1,
        /*[in]*/ SAFEARRAY * * PlacementConstrainingPoint2,
        /*[in]*/ SAFEARRAY * * TargetConstrainingPoint1,
        /*[in]*/ SAFEARRAY * * TargetConstrainingPoint2,
        /*[out,retval]*/ struct CenterPlaneRelation3d * * CenterPlaneRelation3d ) = 0;
      virtual HRESULT __stdcall raw_AddRigidSet (
        /*[in]*/ long OccurrenceCount,
        /*[in]*/ SAFEARRAY * * Occurrences,
        /*[out,retval]*/ struct RigidSetRelation3d * * RigidSetRelation3d ) = 0;
      virtual HRESULT __stdcall raw_AddPlanarCam (
        /*[in]*/ IDispatch * ConstrainingFollowerElement,
        /*[in]*/ SAFEARRAY * * ConstrainingCamFaces,
        /*[out,retval]*/ struct CamFollowerRelation3d * * PlanarCamRelation3d ) = 0;
      virtual HRESULT __stdcall raw_AddBarrelCam (
        /*[in]*/ IDispatch * ConstrainingFollowerElement,
        /*[in]*/ SAFEARRAY * * ConstrainingCamEdges,
        /*[out,retval]*/ struct CamFollowerRelation3d * * BarrelCamRelation3d ) = 0;
      virtual HRESULT __stdcall raw_AddPath (
        /*[in]*/ IDispatch * ConstrainingFollowerElement,
        /*[in]*/ SAFEARRAY * * ConstrainingCamEdges,
        /*[out,retval]*/ struct PathRelation3d * * PathRelation3d ) = 0;
      virtual HRESULT __stdcall raw_AddCoordinateSystem (
        /*[in]*/ IDispatch * pCoordSystem1,
        /*[in]*/ IDispatch * pCoordSystem2,
        /*[out,retval]*/ struct CoordinateSystemRelation3d * * CoordinateSystemRelation3d ) = 0;
      virtual HRESULT __stdcall raw_AddSlot (
        /*[in]*/ IDispatch * pSlotElement,
        /*[in]*/ IDispatch * pPinElement,
        /*[in]*/ enum Relation3dSlotOffsetTypeConstants eSlotOffsetType,
        /*[in]*/ double dOffset,
        /*[out,retval]*/ struct SlotRelation3d * * SlotRelation3d ) = 0;
};

struct __declspec(uuid("15da8f2f-15e7-4547-baf7-0d7858b38286"))
_ISlotRelation3dAuto_TG : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum Relation3dStatusConstants Status;
    __declspec(property(get=GetDetailedStatus))
    enum Relation3dDetailedStatusConstants DetailedStatus;
    __declspec(property(get=GetOccurrence1))
    OccurrencePtr Occurrence1;
    __declspec(property(get=GetOccurrence2))
    OccurrencePtr Occurrence2;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetOffsetValue,put=PutOffsetValue))
    double OffsetValue;
    __declspec(property(get=GetOffsetType,put=PutOffsetType))
    enum Relation3dSlotOffsetTypeConstants OffsetType;
    __declspec(property(get=GetSlotPathLength))
    double SlotPathLength;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum Relation3dStatusConstants GetStatus ( );
    enum Relation3dDetailedStatusConstants GetDetailedStatus ( );
    OccurrencePtr GetOccurrence1 ( );
    OccurrencePtr GetOccurrence2 ( );
    HRESULT GetGeometry1 (
        long * GeometryType,
        double * PointX,
        double * PointY,
        double * PointZ,
        double * VectorX,
        double * VectorY,
        double * VectorZ );
    HRESULT GetGeometry2 (
        long * GeometryType,
        double * PointX,
        double * PointY,
        double * PointZ,
        double * VectorX,
        double * VectorY,
        double * VectorZ );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL bSuppress );
    IDispatchPtr GetElement1 (
        VARIANT_BOOL * IsTopologyReference );
    IDispatchPtr GetElement2 (
        VARIANT_BOOL * IsTopologyReference );
    double GetOffsetValue ( );
    void PutOffsetValue (
        double Offset );
    enum Relation3dSlotOffsetTypeConstants GetOffsetType ( );
    void PutOffsetType (
        enum Relation3dSlotOffsetTypeConstants eSlotOffsetType );
    double GetSlotPathLength ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ IDispatch * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall raw_Select (
        /*[in]*/ VARIANT_BOOL Replace ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum Relation3dStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall get_DetailedStatus (
        /*[out,retval]*/ enum Relation3dDetailedStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall get_Occurrence1 (
        /*[out,retval]*/ struct Occurrence * * Occ1 ) = 0;
      virtual HRESULT __stdcall get_Occurrence2 (
        /*[out,retval]*/ struct Occurrence * * Occ2 ) = 0;
      virtual HRESULT __stdcall raw_GetGeometry1 (
        /*[out]*/ long * GeometryType,
        /*[out]*/ double * PointX,
        /*[out]*/ double * PointY,
        /*[out]*/ double * PointZ,
        /*[out]*/ double * VectorX,
        /*[out]*/ double * VectorY,
        /*[out]*/ double * VectorZ ) = 0;
      virtual HRESULT __stdcall raw_GetGeometry2 (
        /*[out]*/ long * GeometryType,
        /*[out]*/ double * PointX,
        /*[out]*/ double * PointY,
        /*[out]*/ double * PointZ,
        /*[out]*/ double * VectorX,
        /*[out]*/ double * VectorY,
        /*[out]*/ double * VectorZ ) = 0;
      virtual HRESULT __stdcall get_Suppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_Suppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall raw_GetElement1 (
        /*[out]*/ VARIANT_BOOL * IsTopologyReference,
        /*[out,retval]*/ IDispatch * * Element ) = 0;
      virtual HRESULT __stdcall raw_GetElement2 (
        /*[out]*/ VARIANT_BOOL * IsTopologyReference,
        /*[out,retval]*/ IDispatch * * Element ) = 0;
      virtual HRESULT __stdcall get_OffsetValue (
        /*[out,retval]*/ double * Offset ) = 0;
      virtual HRESULT __stdcall put_OffsetValue (
        /*[in]*/ double Offset ) = 0;
      virtual HRESULT __stdcall get_OffsetType (
        /*[out,retval]*/ enum Relation3dSlotOffsetTypeConstants * eSlotOffsetType ) = 0;
      virtual HRESULT __stdcall put_OffsetType (
        /*[in]*/ enum Relation3dSlotOffsetTypeConstants eSlotOffsetType ) = 0;
      virtual HRESULT __stdcall get_SlotPathLength (
        /*[out,retval]*/ double * dSlotPathLength ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall raw_GetSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_AddSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_DeleteSuppressionVariable ( ) = 0;
      virtual HRESULT __stdcall raw_HasSuppressionVariable (
        /*[out,retval]*/ VARIANT_BOOL * IsSuppressionVariablePresent ) = 0;
};

struct __declspec(uuid("01525383-c6b1-11ce-8bd2-08003601b7ad"))
PhysicalProperties : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetDisplayCenterOfMass,put=PutDisplayCenterOfMass))
    VARIANT_BOOL DisplayCenterOfMass;
    __declspec(property(get=GetDisplayCenterOfVolume,put=PutDisplayCenterOfVolume))
    VARIANT_BOOL DisplayCenterOfVolume;
    __declspec(property(get=GetDisplayPrincipalAxes,put=PutDisplayPrincipalAxes))
    VARIANT_BOOL DisplayPrincipalAxes;
    __declspec(property(get=GetIsUpToDate))
    VARIANT_BOOL IsUpToDate;
    __declspec(property(get=GetUserDefinedPropertiesStatus,put=PutUserDefinedPropertiesStatus))
    VARIANT_BOOL UserDefinedPropertiesStatus;
    __declspec(property(get=GetUpdateOnFileSaveStatus,put=PutUpdateOnFileSaveStatus))
    VARIANT_BOOL UpdateOnFileSaveStatus;
    __declspec(property(get=GetUseQuantityOverrideMass,put=PutUseQuantityOverrideMass))
    VARIANT_BOOL UseQuantityOverrideMass;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetDisplayCenterOfMass ( );
    void PutDisplayCenterOfMass (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayCenterOfVolume ( );
    void PutDisplayCenterOfVolume (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetDisplayPrincipalAxes ( );
    void PutDisplayPrincipalAxes (
        VARIANT_BOOL _arg1 );
    HRESULT WriteToFile (
        _bstr_t FileName );
    HRESULT GetAssemblyPhysicalProperties (
        double * Mass,
        double * Volume,
        double * Area,
        SAFEARRAY * * CenterOfMass,
        SAFEARRAY * * CenterOfVolume,
        SAFEARRAY * * GlobalMoments,
        SAFEARRAY * * PrincipalAxis1,
        SAFEARRAY * * PrincipalAxis2,
        SAFEARRAY * * PrincipalAxis3,
        SAFEARRAY * * PrincipalMoments,
        SAFEARRAY * * RadiiOfGyration,
        VARIANT_BOOL * IsSick,
        VARIANT_BOOL * UpdateStatus );
    HRESULT GetAssemblyPhysicalProperties1 (
        double * Mass,
        double * Volume,
        double * Area,
        SAFEARRAY * * CenterOfMass,
        SAFEARRAY * * CenterOfVolume,
        SAFEARRAY * * GlobalMoments,
        SAFEARRAY * * PrincipalAxis1,
        SAFEARRAY * * PrincipalAxis2,
        SAFEARRAY * * PrincipalAxis3,
        SAFEARRAY * * PrincipalMoments,
        SAFEARRAY * * RadiiOfGyration,
        VARIANT_BOOL * IsSick,
        VARIANT_BOOL * UpdateStatus,
        double * OverrideMass );
    HRESULT GetSelectSetPhysicalProperties (
        double * Mass,
        double * Volume,
        double * Area,
        SAFEARRAY * * CenterOfMass,
        SAFEARRAY * * CenterOfVolume,
        SAFEARRAY * * GlobalMoments,
        SAFEARRAY * * PrincipalAxis1,
        SAFEARRAY * * PrincipalAxis2,
        SAFEARRAY * * PrincipalAxis3,
        SAFEARRAY * * PrincipalMoments,
        SAFEARRAY * * RadiiOfGyration );
    VARIANT_BOOL GetIsUpToDate ( );
    HRESULT Update ( );
    HRESULT GetAsmPhysicalPropsRelativeToCoordSystem (
        IDispatch * CoordinateSystem,
        double * Mass,
        double * Volume,
        double * Area,
        SAFEARRAY * * CenterOfMass,
        SAFEARRAY * * CenterOfVolume,
        SAFEARRAY * * GlobalMoments,
        SAFEARRAY * * PrincipalAxis1,
        SAFEARRAY * * PrincipalAxis2,
        SAFEARRAY * * PrincipalAxis3,
        SAFEARRAY * * PrincipalMoments,
        SAFEARRAY * * RadiiOfGyration,
        VARIANT_BOOL * IsSick,
        VARIANT_BOOL * UpdateStatus );
    HRESULT GetSelectSetPhysicalPropsRelativeToCoordSystem (
        IDispatch * CoordinateSystem,
        double * Mass,
        double * Volume,
        double * Area,
        SAFEARRAY * * CenterOfMass,
        SAFEARRAY * * CenterOfVolume,
        SAFEARRAY * * GlobalMoments,
        SAFEARRAY * * PrincipalAxis1,
        SAFEARRAY * * PrincipalAxis2,
        SAFEARRAY * * PrincipalAxis3,
        SAFEARRAY * * PrincipalMoments,
        SAFEARRAY * * RadiiOfGyration );
    VARIANT_BOOL GetUserDefinedPropertiesStatus ( );
    void PutUserDefinedPropertiesStatus (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetUpdateOnFileSaveStatus ( );
    void PutUpdateOnFileSaveStatus (
        VARIANT_BOOL _arg1 );
    HRESULT SetUserDefinedAssemblyPhysicalProperties (
        double * Volume,
        double * Area,
        double * Mass,
        SAFEARRAY * * CenterOfMass,
        SAFEARRAY * * CenterOfVolume,
        SAFEARRAY * * GlobalMoments,
        SAFEARRAY * * PrincipalMoments,
        SAFEARRAY * * PrincipalAxis1,
        SAFEARRAY * * PrincipalAxis2,
        SAFEARRAY * * PrincipalAxis3,
        SAFEARRAY * * RadiiOfGyration,
        double * OverrideMass );
    VARIANT_BOOL GetUseQuantityOverrideMass ( );
    void PutUseQuantityOverrideMass (
        VARIANT_BOOL _arg1 );
    HRESULT UpdateV2 (
        SAFEARRAY * * ParFileNamesWithoutDensity );
    HRESULT GetAssemblyPhysicalPropertiesInstantly (
        double * Mass,
        double * Volume,
        double * Area,
        SAFEARRAY * * CenterOfMass,
        SAFEARRAY * * CenterOfVolume,
        SAFEARRAY * * GlobalMoments,
        SAFEARRAY * * PrincipalAxis1,
        SAFEARRAY * * PrincipalAxis2,
        SAFEARRAY * * PrincipalAxis3,
        SAFEARRAY * * PrincipalMoments,
        SAFEARRAY * * RadiiOfGyration,
        VARIANT_BOOL * IsSick,
        VARIANT_BOOL * UpdateStatus,
        SAFEARRAY * * ParFileNamesWithoutDensity );
    HRESULT GetAssemblyPhysicalPropertiesWithOverrideMassInstantly (
        double * Mass,
        double * Volume,
        double * Area,
        SAFEARRAY * * CenterOfMass,
        SAFEARRAY * * CenterOfVolume,
        SAFEARRAY * * GlobalMoments,
        SAFEARRAY * * PrincipalAxis1,
        SAFEARRAY * * PrincipalAxis2,
        SAFEARRAY * * PrincipalAxis3,
        SAFEARRAY * * PrincipalMoments,
        SAFEARRAY * * RadiiOfGyration,
        VARIANT_BOOL * IsSick,
        VARIANT_BOOL * UpdateStatus,
        SAFEARRAY * * ParFileNamesWithoutDensity,
        double * OverrideMass );
};

struct __declspec(uuid("95135f33-015c-11d2-be0c-080036b4d502"))
_IPhysicalPropertiesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetDisplayCenterOfMass,put=PutDisplayCenterOfMass))
    VARIANT_BOOL DisplayCenterOfMass;
    __declspec(property(get=GetDisplayCenterOfVolume,put=PutDisplayCenterOfVolume))
    VARIANT_BOOL DisplayCenterOfVolume;
    __declspec(property(get=GetDisplayPrincipalAxes,put=PutDisplayPrincipalAxes))
    VARIANT_BOOL DisplayPrincipalAxes;
    __declspec(property(get=GetIsUpToDate))
    VARIANT_BOOL IsUpToDate;
    __declspec(property(get=GetUserDefinedPropertiesStatus,put=PutUserDefinedPropertiesStatus))
    VARIANT_BOOL UserDefinedPropertiesStatus;
    __declspec(property(get=GetUpdateOnFileSaveStatus,put=PutUpdateOnFileSaveStatus))
    VARIANT_BOOL UpdateOnFileSaveStatus;
    __declspec(property(get=GetUseQuantityOverrideMass,put=PutUseQuantityOverrideMass))
    VARIANT_BOOL UseQuantityOverrideMass;

    //
    // Wrapper methods for error-handling
    //

    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetDisplayCenterOfMass ( );
    void PutDisplayCenterOfMass (
        VARIANT_BOOL Display );
    VARIANT_BOOL GetDisplayCenterOfVolume ( );
    void PutDisplayCenterOfVolume (
        VARIANT_BOOL Display );
    VARIANT_BOOL GetDisplayPrincipalAxes ( );
    void PutDisplayPrincipalAxes (
        VARIANT_BOOL Display );
    HRESULT WriteToFile (
        _bstr_t FileName );
    HRESULT GetAssemblyPhysicalProperties (
        double * Mass,
        double * Volume,
        double * Area,
        SAFEARRAY * * CenterOfMass,
        SAFEARRAY * * CenterOfVolume,
        SAFEARRAY * * GlobalMoments,
        SAFEARRAY * * PrincipalAxis1,
        SAFEARRAY * * PrincipalAxis2,
        SAFEARRAY * * PrincipalAxis3,
        SAFEARRAY * * PrincipalMoments,
        SAFEARRAY * * RadiiOfGyration,
        VARIANT_BOOL * IsSick,
        VARIANT_BOOL * UpdateStatus );
    HRESULT GetAssemblyPhysicalProperties1 (
        double * Mass,
        double * Volume,
        double * Area,
        SAFEARRAY * * CenterOfMass,
        SAFEARRAY * * CenterOfVolume,
        SAFEARRAY * * GlobalMoments,
        SAFEARRAY * * PrincipalAxis1,
        SAFEARRAY * * PrincipalAxis2,
        SAFEARRAY * * PrincipalAxis3,
        SAFEARRAY * * PrincipalMoments,
        SAFEARRAY * * RadiiOfGyration,
        VARIANT_BOOL * IsSick,
        VARIANT_BOOL * UpdateStatus,
        double * OverrideMass );
    HRESULT GetSelectSetPhysicalProperties (
        double * Mass,
        double * Volume,
        double * Area,
        SAFEARRAY * * CenterOfMass,
        SAFEARRAY * * CenterOfVolume,
        SAFEARRAY * * GlobalMoments,
        SAFEARRAY * * PrincipalAxis1,
        SAFEARRAY * * PrincipalAxis2,
        SAFEARRAY * * PrincipalAxis3,
        SAFEARRAY * * PrincipalMoments,
        SAFEARRAY * * RadiiOfGyration );
    VARIANT_BOOL GetIsUpToDate ( );
    HRESULT Update ( );
    HRESULT GetAsmPhysicalPropsRelativeToCoordSystem (
        IDispatch * CoordinateSystem,
        double * Mass,
        double * Volume,
        double * Area,
        SAFEARRAY * * CenterOfMass,
        SAFEARRAY * * CenterOfVolume,
        SAFEARRAY * * GlobalMoments,
        SAFEARRAY * * PrincipalAxis1,
        SAFEARRAY * * PrincipalAxis2,
        SAFEARRAY * * PrincipalAxis3,
        SAFEARRAY * * PrincipalMoments,
        SAFEARRAY * * RadiiOfGyration,
        VARIANT_BOOL * IsSick,
        VARIANT_BOOL * UpdateStatus );
    HRESULT GetSelectSetPhysicalPropsRelativeToCoordSystem (
        IDispatch * CoordinateSystem,
        double * Mass,
        double * Volume,
        double * Area,
        SAFEARRAY * * CenterOfMass,
        SAFEARRAY * * CenterOfVolume,
        SAFEARRAY * * GlobalMoments,
        SAFEARRAY * * PrincipalAxis1,
        SAFEARRAY * * PrincipalAxis2,
        SAFEARRAY * * PrincipalAxis3,
        SAFEARRAY * * PrincipalMoments,
        SAFEARRAY * * RadiiOfGyration );
    VARIANT_BOOL GetUserDefinedPropertiesStatus ( );
    void PutUserDefinedPropertiesStatus (
        VARIANT_BOOL Status );
    VARIANT_BOOL GetUpdateOnFileSaveStatus ( );
    void PutUpdateOnFileSaveStatus (
        VARIANT_BOOL Status );
    HRESULT SetUserDefinedAssemblyPhysicalProperties (
        double * Volume,
        double * Area,
        double * Mass,
        SAFEARRAY * * CenterOfMass,
        SAFEARRAY * * CenterOfVolume,
        SAFEARRAY * * GlobalMoments,
        SAFEARRAY * * PrincipalMoments,
        SAFEARRAY * * PrincipalAxis1,
        SAFEARRAY * * PrincipalAxis2,
        SAFEARRAY * * PrincipalAxis3,
        SAFEARRAY * * RadiiOfGyration,
        double * OverrideMass );
    VARIANT_BOOL GetUseQuantityOverrideMass ( );
    void PutUseQuantityOverrideMass (
        VARIANT_BOOL UseQuantityOverrideMass );
    HRESULT UpdateV2 (
        SAFEARRAY * * ParFileNamesWithoutDensity );
    HRESULT GetAssemblyPhysicalPropertiesInstantly (
        double * Mass,
        double * Volume,
        double * Area,
        SAFEARRAY * * CenterOfMass,
        SAFEARRAY * * CenterOfVolume,
        SAFEARRAY * * GlobalMoments,
        SAFEARRAY * * PrincipalAxis1,
        SAFEARRAY * * PrincipalAxis2,
        SAFEARRAY * * PrincipalAxis3,
        SAFEARRAY * * PrincipalMoments,
        SAFEARRAY * * RadiiOfGyration,
        VARIANT_BOOL * IsSick,
        VARIANT_BOOL * UpdateStatus,
        SAFEARRAY * * ParFileNamesWithoutDensity );
    HRESULT GetAssemblyPhysicalPropertiesWithOverrideMassInstantly (
        double * Mass,
        double * Volume,
        double * Area,
        SAFEARRAY * * CenterOfMass,
        SAFEARRAY * * CenterOfVolume,
        SAFEARRAY * * GlobalMoments,
        SAFEARRAY * * PrincipalAxis1,
        SAFEARRAY * * PrincipalAxis2,
        SAFEARRAY * * PrincipalAxis3,
        SAFEARRAY * * PrincipalMoments,
        SAFEARRAY * * RadiiOfGyration,
        VARIANT_BOOL * IsSick,
        VARIANT_BOOL * UpdateStatus,
        SAFEARRAY * * ParFileNamesWithoutDensity,
        double * OverrideMass );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ IDispatch * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_DisplayCenterOfMass (
        /*[out,retval]*/ VARIANT_BOOL * Display ) = 0;
      virtual HRESULT __stdcall put_DisplayCenterOfMass (
        /*[in]*/ VARIANT_BOOL Display ) = 0;
      virtual HRESULT __stdcall get_DisplayCenterOfVolume (
        /*[out,retval]*/ VARIANT_BOOL * Display ) = 0;
      virtual HRESULT __stdcall put_DisplayCenterOfVolume (
        /*[in]*/ VARIANT_BOOL Display ) = 0;
      virtual HRESULT __stdcall get_DisplayPrincipalAxes (
        /*[out,retval]*/ VARIANT_BOOL * Display ) = 0;
      virtual HRESULT __stdcall put_DisplayPrincipalAxes (
        /*[in]*/ VARIANT_BOOL Display ) = 0;
      virtual HRESULT __stdcall raw_WriteToFile (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_GetAssemblyPhysicalProperties (
        /*[out]*/ double * Mass,
        /*[out]*/ double * Volume,
        /*[out]*/ double * Area,
        /*[in,out]*/ SAFEARRAY * * CenterOfMass,
        /*[in,out]*/ SAFEARRAY * * CenterOfVolume,
        /*[in,out]*/ SAFEARRAY * * GlobalMoments,
        /*[in,out]*/ SAFEARRAY * * PrincipalAxis1,
        /*[in,out]*/ SAFEARRAY * * PrincipalAxis2,
        /*[in,out]*/ SAFEARRAY * * PrincipalAxis3,
        /*[in,out]*/ SAFEARRAY * * PrincipalMoments,
        /*[in,out]*/ SAFEARRAY * * RadiiOfGyration,
        /*[out]*/ VARIANT_BOOL * IsSick,
        /*[out]*/ VARIANT_BOOL * UpdateStatus ) = 0;
      virtual HRESULT __stdcall raw_GetAssemblyPhysicalProperties1 (
        /*[out]*/ double * Mass,
        /*[out]*/ double * Volume,
        /*[out]*/ double * Area,
        /*[in,out]*/ SAFEARRAY * * CenterOfMass,
        /*[in,out]*/ SAFEARRAY * * CenterOfVolume,
        /*[in,out]*/ SAFEARRAY * * GlobalMoments,
        /*[in,out]*/ SAFEARRAY * * PrincipalAxis1,
        /*[in,out]*/ SAFEARRAY * * PrincipalAxis2,
        /*[in,out]*/ SAFEARRAY * * PrincipalAxis3,
        /*[in,out]*/ SAFEARRAY * * PrincipalMoments,
        /*[in,out]*/ SAFEARRAY * * RadiiOfGyration,
        /*[out]*/ VARIANT_BOOL * IsSick,
        /*[out]*/ VARIANT_BOOL * UpdateStatus,
        /*[out]*/ double * OverrideMass ) = 0;
      virtual HRESULT __stdcall raw_GetSelectSetPhysicalProperties (
        /*[out]*/ double * Mass,
        /*[out]*/ double * Volume,
        /*[out]*/ double * Area,
        /*[in,out]*/ SAFEARRAY * * CenterOfMass,
        /*[in,out]*/ SAFEARRAY * * CenterOfVolume,
        /*[in,out]*/ SAFEARRAY * * GlobalMoments,
        /*[in,out]*/ SAFEARRAY * * PrincipalAxis1,
        /*[in,out]*/ SAFEARRAY * * PrincipalAxis2,
        /*[in,out]*/ SAFEARRAY * * PrincipalAxis3,
        /*[in,out]*/ SAFEARRAY * * PrincipalMoments,
        /*[in,out]*/ SAFEARRAY * * RadiiOfGyration ) = 0;
      virtual HRESULT __stdcall get_IsUpToDate (
        /*[out,retval]*/ VARIANT_BOOL * UpdateStatus ) = 0;
      virtual HRESULT __stdcall raw_Update ( ) = 0;
      virtual HRESULT __stdcall raw_GetAsmPhysicalPropsRelativeToCoordSystem (
        /*[in]*/ IDispatch * CoordinateSystem,
        /*[out]*/ double * Mass,
        /*[out]*/ double * Volume,
        /*[out]*/ double * Area,
        /*[in,out]*/ SAFEARRAY * * CenterOfMass,
        /*[in,out]*/ SAFEARRAY * * CenterOfVolume,
        /*[in,out]*/ SAFEARRAY * * GlobalMoments,
        /*[in,out]*/ SAFEARRAY * * PrincipalAxis1,
        /*[in,out]*/ SAFEARRAY * * PrincipalAxis2,
        /*[in,out]*/ SAFEARRAY * * PrincipalAxis3,
        /*[in,out]*/ SAFEARRAY * * PrincipalMoments,
        /*[in,out]*/ SAFEARRAY * * RadiiOfGyration,
        /*[out]*/ VARIANT_BOOL * IsSick,
        /*[out]*/ VARIANT_BOOL * UpdateStatus ) = 0;
      virtual HRESULT __stdcall raw_GetSelectSetPhysicalPropsRelativeToCoordSystem (
        /*[in]*/ IDispatch * CoordinateSystem,
        /*[out]*/ double * Mass,
        /*[out]*/ double * Volume,
        /*[out]*/ double * Area,
        /*[in,out]*/ SAFEARRAY * * CenterOfMass,
        /*[in,out]*/ SAFEARRAY * * CenterOfVolume,
        /*[in,out]*/ SAFEARRAY * * GlobalMoments,
        /*[in,out]*/ SAFEARRAY * * PrincipalAxis1,
        /*[in,out]*/ SAFEARRAY * * PrincipalAxis2,
        /*[in,out]*/ SAFEARRAY * * PrincipalAxis3,
        /*[in,out]*/ SAFEARRAY * * PrincipalMoments,
        /*[in,out]*/ SAFEARRAY * * RadiiOfGyration ) = 0;
      virtual HRESULT __stdcall get_UserDefinedPropertiesStatus (
        /*[out,retval]*/ VARIANT_BOOL * Status ) = 0;
      virtual HRESULT __stdcall put_UserDefinedPropertiesStatus (
        /*[in]*/ VARIANT_BOOL Status ) = 0;
      virtual HRESULT __stdcall get_UpdateOnFileSaveStatus (
        /*[out,retval]*/ VARIANT_BOOL * Status ) = 0;
      virtual HRESULT __stdcall put_UpdateOnFileSaveStatus (
        /*[in]*/ VARIANT_BOOL Status ) = 0;
      virtual HRESULT __stdcall raw_SetUserDefinedAssemblyPhysicalProperties (
        /*[in]*/ double * Volume,
        /*[in]*/ double * Area,
        /*[in]*/ double * Mass,
        /*[in]*/ SAFEARRAY * * CenterOfMass,
        /*[in]*/ SAFEARRAY * * CenterOfVolume,
        /*[in]*/ SAFEARRAY * * GlobalMoments,
        /*[in]*/ SAFEARRAY * * PrincipalMoments,
        /*[in]*/ SAFEARRAY * * PrincipalAxis1,
        /*[in]*/ SAFEARRAY * * PrincipalAxis2,
        /*[in]*/ SAFEARRAY * * PrincipalAxis3,
        /*[in]*/ SAFEARRAY * * RadiiOfGyration,
        /*[in]*/ double * OverrideMass ) = 0;
      virtual HRESULT __stdcall get_UseQuantityOverrideMass (
        /*[out,retval]*/ VARIANT_BOOL * UseQuantityOverrideMass ) = 0;
      virtual HRESULT __stdcall put_UseQuantityOverrideMass (
        /*[in]*/ VARIANT_BOOL UseQuantityOverrideMass ) = 0;
      virtual HRESULT __stdcall raw_UpdateV2 (
        /*[out]*/ SAFEARRAY * * ParFileNamesWithoutDensity ) = 0;
      virtual HRESULT __stdcall raw_GetAssemblyPhysicalPropertiesInstantly (
        /*[out]*/ double * Mass,
        /*[out]*/ double * Volume,
        /*[out]*/ double * Area,
        /*[in,out]*/ SAFEARRAY * * CenterOfMass,
        /*[in,out]*/ SAFEARRAY * * CenterOfVolume,
        /*[in,out]*/ SAFEARRAY * * GlobalMoments,
        /*[in,out]*/ SAFEARRAY * * PrincipalAxis1,
        /*[in,out]*/ SAFEARRAY * * PrincipalAxis2,
        /*[in,out]*/ SAFEARRAY * * PrincipalAxis3,
        /*[in,out]*/ SAFEARRAY * * PrincipalMoments,
        /*[in,out]*/ SAFEARRAY * * RadiiOfGyration,
        /*[out]*/ VARIANT_BOOL * IsSick,
        /*[out]*/ VARIANT_BOOL * UpdateStatus,
        /*[out]*/ SAFEARRAY * * ParFileNamesWithoutDensity ) = 0;
      virtual HRESULT __stdcall raw_GetAssemblyPhysicalPropertiesWithOverrideMassInstantly (
        /*[out]*/ double * Mass,
        /*[out]*/ double * Volume,
        /*[out]*/ double * Area,
        /*[in,out]*/ SAFEARRAY * * CenterOfMass,
        /*[in,out]*/ SAFEARRAY * * CenterOfVolume,
        /*[in,out]*/ SAFEARRAY * * GlobalMoments,
        /*[in,out]*/ SAFEARRAY * * PrincipalAxis1,
        /*[in,out]*/ SAFEARRAY * * PrincipalAxis2,
        /*[in,out]*/ SAFEARRAY * * PrincipalAxis3,
        /*[in,out]*/ SAFEARRAY * * PrincipalMoments,
        /*[in,out]*/ SAFEARRAY * * RadiiOfGyration,
        /*[out]*/ VARIANT_BOOL * IsSick,
        /*[out]*/ VARIANT_BOOL * UpdateStatus,
        /*[out]*/ SAFEARRAY * * ParFileNamesWithoutDensity,
        /*[out]*/ double * OverrideMass ) = 0;
};

struct __declspec(uuid("7ad88cc9-e2f4-11d2-bed3-080036b4d502"))
Occurrences : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    IDispatchPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
    OccurrencePtr Item (
        const _variant_t & Index );
    OccurrencePtr AddByFilename (
        _bstr_t OccurrenceFileName,
        const _variant_t & UseSimplifiedPart = vtMissing );
    OccurrencePtr AddWithTransform (
        _bstr_t OccurrenceFileName,
        double OriginX,
        double OriginY,
        double OriginZ,
        double AngleX,
        double AngleY,
        double AngleZ );
    OccurrencePtr AddWithMatrix (
        _bstr_t OccurrenceFileName,
        SAFEARRAY * * Matrix );
    OccurrencePtr AddTube (
        SAFEARRAY * * TubeSegments,
        BSTR * PartFileName,
        const _variant_t & TemplateFileName = vtMissing,
        const _variant_t & IsSolid = vtMissing,
        const _variant_t & Material = vtMissing,
        const _variant_t & BendRadius = vtMissing,
        const _variant_t & OuterDiameter = vtMissing,
        const _variant_t & MinimumFlatLength = vtMissing,
        const _variant_t & WallThickness = vtMissing,
        const _variant_t & ExtendStart = vtMissing,
        const _variant_t & ExtendEnd = vtMissing,
        const _variant_t & AddConnectRelations = vtMissing,
        const _variant_t & StartEndTreatmentType = vtMissing,
        const _variant_t & StartEndTreatmentInsideDiameter = vtMissing,
        const _variant_t & StartEndTreatmentOutsideDiameter = vtMissing,
        const _variant_t & StartEndTreatmentRadius = vtMissing,
        const _variant_t & StartEndTreatmentDepth = vtMissing,
        const _variant_t & StartEndTreatmentAngle = vtMissing,
        const _variant_t & EndEndTreatmentType = vtMissing,
        const _variant_t & EndEndTreatmentInsideDiameter = vtMissing,
        const _variant_t & EndEndTreatmentOutsideDiameter = vtMissing,
        const _variant_t & EndEndTreatmentRadius = vtMissing,
        const _variant_t & EndEndTreatmentDepth = vtMissing,
        const _variant_t & EndEndTreatmentAngle = vtMissing );
    OccurrencePtr AddTubeBIDM (
        SAFEARRAY * * TubeSegments,
        _bstr_t FilePath,
        _bstr_t DocumentNumber,
        _bstr_t RevisionID,
        _bstr_t Title,
        BSTR * NewFileName,
        const _variant_t & TemplateFileName = vtMissing,
        const _variant_t & IsSolid = vtMissing,
        const _variant_t & Material = vtMissing,
        const _variant_t & BendRadius = vtMissing,
        const _variant_t & OuterDiameter = vtMissing,
        const _variant_t & MinimumFlatLength = vtMissing,
        const _variant_t & WallThickness = vtMissing,
        const _variant_t & ExtendStart = vtMissing,
        const _variant_t & ExtendEnd = vtMissing,
        const _variant_t & AddConnectRelations = vtMissing,
        const _variant_t & StartEndTreatmentType = vtMissing,
        const _variant_t & StartEndTreatmentInsideDiameter = vtMissing,
        const _variant_t & StartEndTreatmentOutsideDiameter = vtMissing,
        const _variant_t & StartEndTreatmentRadius = vtMissing,
        const _variant_t & StartEndTreatmentDepth = vtMissing,
        const _variant_t & StartEndTreatmentAngle = vtMissing,
        const _variant_t & EndEndTreatmentType = vtMissing,
        const _variant_t & EndEndTreatmentInsideDiameter = vtMissing,
        const _variant_t & EndEndTreatmentOutsideDiameter = vtMissing,
        const _variant_t & EndEndTreatmentRadius = vtMissing,
        const _variant_t & EndEndTreatmentDepth = vtMissing,
        const _variant_t & EndEndTreatmentAngle = vtMissing );
    OccurrencePtr AddFamilyByFilename (
        _bstr_t OccurrenceFileName,
        _bstr_t MemberName );
    OccurrencePtr AddFamilyWithTransform (
        _bstr_t OccurrenceFileName,
        double OriginX,
        double OriginY,
        double OriginZ,
        double AngleX,
        double AngleY,
        double AngleZ,
        _bstr_t MemberName );
    OccurrencePtr AddFamilyWithMatrix (
        _bstr_t OccurrenceFileName,
        SAFEARRAY * * Matrix,
        _bstr_t MemberName );
    OccurrencePtr AddByTemplate (
        _bstr_t OccurrenceFileName,
        const _variant_t & TemplateFileName = vtMissing );
    HRESULT ReorderOccurrence (
        IDispatch * OccurrenceToReorder,
        IDispatch * TargetOccurrence,
        VARIANT_BOOL AfterTarget );
    enum TGFramework::ObjectType GetType ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    OccurrencePtr AddAsAdjustablePart (
        _bstr_t OccurrenceFileName );
    OccurrencePtr GetOccurrence (
        long ID );
};

struct __declspec(uuid("cec85b6b-e2f4-11d2-bed3-080036b4d502"))
_IOccurrencesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    IDispatchPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
    OccurrencePtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    OccurrencePtr AddByFilename (
        _bstr_t OccurrenceFileName,
        const _variant_t & UseSimplifiedPart = vtMissing );
    OccurrencePtr AddWithTransform (
        _bstr_t OccurrenceFileName,
        double OriginX,
        double OriginY,
        double OriginZ,
        double AngleX,
        double AngleY,
        double AngleZ );
    OccurrencePtr AddWithMatrix (
        _bstr_t OccurrenceFileName,
        SAFEARRAY * * Matrix );
    OccurrencePtr AddTube (
        SAFEARRAY * * TubeSegments,
        BSTR * PartFileName,
        const _variant_t & TemplateFileName = vtMissing,
        const _variant_t & IsSolid = vtMissing,
        const _variant_t & Material = vtMissing,
        const _variant_t & BendRadius = vtMissing,
        const _variant_t & OuterDiameter = vtMissing,
        const _variant_t & MinimumFlatLength = vtMissing,
        const _variant_t & WallThickness = vtMissing,
        const _variant_t & ExtendStart = vtMissing,
        const _variant_t & ExtendEnd = vtMissing,
        const _variant_t & AddConnectRelations = vtMissing,
        const _variant_t & StartEndTreatmentType = vtMissing,
        const _variant_t & StartEndTreatmentInsideDiameter = vtMissing,
        const _variant_t & StartEndTreatmentOutsideDiameter = vtMissing,
        const _variant_t & StartEndTreatmentRadius = vtMissing,
        const _variant_t & StartEndTreatmentDepth = vtMissing,
        const _variant_t & StartEndTreatmentAngle = vtMissing,
        const _variant_t & EndEndTreatmentType = vtMissing,
        const _variant_t & EndEndTreatmentInsideDiameter = vtMissing,
        const _variant_t & EndEndTreatmentOutsideDiameter = vtMissing,
        const _variant_t & EndEndTreatmentRadius = vtMissing,
        const _variant_t & EndEndTreatmentDepth = vtMissing,
        const _variant_t & EndEndTreatmentAngle = vtMissing );
    OccurrencePtr AddTubeBIDM (
        SAFEARRAY * * TubeSegments,
        _bstr_t FilePath,
        _bstr_t DocumentNumber,
        _bstr_t RevisionID,
        _bstr_t Title,
        BSTR * NewFileName,
        const _variant_t & TemplateFileName = vtMissing,
        const _variant_t & IsSolid = vtMissing,
        const _variant_t & Material = vtMissing,
        const _variant_t & BendRadius = vtMissing,
        const _variant_t & OuterDiameter = vtMissing,
        const _variant_t & MinimumFlatLength = vtMissing,
        const _variant_t & WallThickness = vtMissing,
        const _variant_t & ExtendStart = vtMissing,
        const _variant_t & ExtendEnd = vtMissing,
        const _variant_t & AddConnectRelations = vtMissing,
        const _variant_t & StartEndTreatmentType = vtMissing,
        const _variant_t & StartEndTreatmentInsideDiameter = vtMissing,
        const _variant_t & StartEndTreatmentOutsideDiameter = vtMissing,
        const _variant_t & StartEndTreatmentRadius = vtMissing,
        const _variant_t & StartEndTreatmentDepth = vtMissing,
        const _variant_t & StartEndTreatmentAngle = vtMissing,
        const _variant_t & EndEndTreatmentType = vtMissing,
        const _variant_t & EndEndTreatmentInsideDiameter = vtMissing,
        const _variant_t & EndEndTreatmentOutsideDiameter = vtMissing,
        const _variant_t & EndEndTreatmentRadius = vtMissing,
        const _variant_t & EndEndTreatmentDepth = vtMissing,
        const _variant_t & EndEndTreatmentAngle = vtMissing );
    OccurrencePtr AddFamilyByFilename (
        _bstr_t OccurrenceFileName,
        _bstr_t MemberName );
    OccurrencePtr AddFamilyWithTransform (
        _bstr_t OccurrenceFileName,
        double OriginX,
        double OriginY,
        double OriginZ,
        double AngleX,
        double AngleY,
        double AngleZ,
        _bstr_t MemberName );
    OccurrencePtr AddFamilyWithMatrix (
        _bstr_t OccurrenceFileName,
        SAFEARRAY * * Matrix,
        _bstr_t MemberName );
    OccurrencePtr AddByTemplate (
        _bstr_t OccurrenceFileName,
        const _variant_t & TemplateFileName = vtMissing );
    HRESULT ReorderOccurrence (
        IDispatch * OccurrenceToReorder,
        IDispatch * TargetOccurrence,
        VARIANT_BOOL AfterTarget );
    enum TGFramework::ObjectType GetType ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    OccurrencePtr AddAsAdjustablePart (
        _bstr_t OccurrenceFileName );
    OccurrencePtr GetOccurrence (
        long ID );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ IDispatch * * Application ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Occurrence * * Occurrence ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Unknown ) = 0;
      virtual HRESULT __stdcall raw_AddByFilename (
        /*[in]*/ BSTR OccurrenceFileName,
        /*[in]*/ VARIANT UseSimplifiedPart,
        /*[out,retval]*/ struct Occurrence * * Occurrence ) = 0;
      virtual HRESULT __stdcall raw_AddWithTransform (
        /*[in]*/ BSTR OccurrenceFileName,
        /*[in]*/ double OriginX,
        /*[in]*/ double OriginY,
        /*[in]*/ double OriginZ,
        /*[in]*/ double AngleX,
        /*[in]*/ double AngleY,
        /*[in]*/ double AngleZ,
        /*[out,retval]*/ struct Occurrence * * Occurrence ) = 0;
      virtual HRESULT __stdcall raw_AddWithMatrix (
        /*[in]*/ BSTR OccurrenceFileName,
        /*[in]*/ SAFEARRAY * * Matrix,
        /*[out,retval]*/ struct Occurrence * * Occurrence ) = 0;
      virtual HRESULT __stdcall raw_AddTube (
        /*[in]*/ SAFEARRAY * * TubeSegments,
        /*[in]*/ BSTR * PartFileName,
        /*[in]*/ VARIANT TemplateFileName,
        /*[in]*/ VARIANT IsSolid,
        /*[in]*/ VARIANT Material,
        /*[in]*/ VARIANT BendRadius,
        /*[in]*/ VARIANT OuterDiameter,
        /*[in]*/ VARIANT MinimumFlatLength,
        /*[in]*/ VARIANT WallThickness,
        /*[in]*/ VARIANT ExtendStart,
        /*[in]*/ VARIANT ExtendEnd,
        /*[in]*/ VARIANT AddConnectRelations,
        /*[in]*/ VARIANT StartEndTreatmentType,
        /*[in]*/ VARIANT StartEndTreatmentInsideDiameter,
        /*[in]*/ VARIANT StartEndTreatmentOutsideDiameter,
        /*[in]*/ VARIANT StartEndTreatmentRadius,
        /*[in]*/ VARIANT StartEndTreatmentDepth,
        /*[in]*/ VARIANT StartEndTreatmentAngle,
        /*[in]*/ VARIANT EndEndTreatmentType,
        /*[in]*/ VARIANT EndEndTreatmentInsideDiameter,
        /*[in]*/ VARIANT EndEndTreatmentOutsideDiameter,
        /*[in]*/ VARIANT EndEndTreatmentRadius,
        /*[in]*/ VARIANT EndEndTreatmentDepth,
        /*[in]*/ VARIANT EndEndTreatmentAngle,
        /*[out,retval]*/ struct Occurrence * * Occurrence ) = 0;
      virtual HRESULT __stdcall raw_AddTubeBIDM (
        /*[in]*/ SAFEARRAY * * TubeSegments,
        /*[in]*/ BSTR FilePath,
        /*[in]*/ BSTR DocumentNumber,
        /*[in]*/ BSTR RevisionID,
        /*[in]*/ BSTR Title,
        /*[out]*/ BSTR * NewFileName,
        /*[in]*/ VARIANT TemplateFileName,
        /*[in]*/ VARIANT IsSolid,
        /*[in]*/ VARIANT Material,
        /*[in]*/ VARIANT BendRadius,
        /*[in]*/ VARIANT OuterDiameter,
        /*[in]*/ VARIANT MinimumFlatLength,
        /*[in]*/ VARIANT WallThickness,
        /*[in]*/ VARIANT ExtendStart,
        /*[in]*/ VARIANT ExtendEnd,
        /*[in]*/ VARIANT AddConnectRelations,
        /*[in]*/ VARIANT StartEndTreatmentType,
        /*[in]*/ VARIANT StartEndTreatmentInsideDiameter,
        /*[in]*/ VARIANT StartEndTreatmentOutsideDiameter,
        /*[in]*/ VARIANT StartEndTreatmentRadius,
        /*[in]*/ VARIANT StartEndTreatmentDepth,
        /*[in]*/ VARIANT StartEndTreatmentAngle,
        /*[in]*/ VARIANT EndEndTreatmentType,
        /*[in]*/ VARIANT EndEndTreatmentInsideDiameter,
        /*[in]*/ VARIANT EndEndTreatmentOutsideDiameter,
        /*[in]*/ VARIANT EndEndTreatmentRadius,
        /*[in]*/ VARIANT EndEndTreatmentDepth,
        /*[in]*/ VARIANT EndEndTreatmentAngle,
        /*[out,retval]*/ struct Occurrence * * Occurrence ) = 0;
      virtual HRESULT __stdcall raw_AddFamilyByFilename (
        /*[in]*/ BSTR OccurrenceFileName,
        /*[in]*/ BSTR MemberName,
        /*[out,retval]*/ struct Occurrence * * Occurrence ) = 0;
      virtual HRESULT __stdcall raw_AddFamilyWithTransform (
        /*[in]*/ BSTR OccurrenceFileName,
        /*[in]*/ double OriginX,
        /*[in]*/ double OriginY,
        /*[in]*/ double OriginZ,
        /*[in]*/ double AngleX,
        /*[in]*/ double AngleY,
        /*[in]*/ double AngleZ,
        /*[in]*/ BSTR MemberName,
        /*[out,retval]*/ struct Occurrence * * Occurrence ) = 0;
      virtual HRESULT __stdcall raw_AddFamilyWithMatrix (
        /*[in]*/ BSTR OccurrenceFileName,
        /*[in]*/ SAFEARRAY * * Matrix,
        /*[in]*/ BSTR MemberName,
        /*[out,retval]*/ struct Occurrence * * Occurrence ) = 0;
      virtual HRESULT __stdcall raw_AddByTemplate (
        /*[in]*/ BSTR OccurrenceFileName,
        /*[in]*/ VARIANT TemplateFileName,
        /*[out,retval]*/ struct Occurrence * * Occurrence ) = 0;
      virtual HRESULT __stdcall raw_ReorderOccurrence (
        /*[in]*/ IDispatch * OccurrenceToReorder,
        /*[in]*/ IDispatch * TargetOccurrence,
        /*[in]*/ VARIANT_BOOL AfterTarget ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall raw_AddAsAdjustablePart (
        /*[in]*/ BSTR OccurrenceFileName,
        /*[out,retval]*/ struct Occurrence * * Occurrence ) = 0;
      virtual HRESULT __stdcall raw_GetOccurrence (
        /*[in]*/ long ID,
        /*[out,retval]*/ struct Occurrence * * Occurrence ) = 0;
};

struct __declspec(uuid("aa0c3293-667e-11d3-aed8-00500471c49e"))
AsmRefPlanes : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    AsmRefPlanePtr Item (
        const _variant_t & Index );
    AsmRefPlanePtr AddParallelByDistance (
        IDispatch * ParentPlane,
        double Distance,
        const _variant_t & NormalSide = vtMissing,
        const _variant_t & Pivot = vtMissing,
        const _variant_t & PivotOrigin = vtMissing,
        const _variant_t & Local = vtMissing );
    AsmRefPlanePtr AddMiddlePlaneByTwoPlanes (
        IDispatch * ParentPlane,
        IDispatch * ParentPlaneTwo,
        const _variant_t & PivotParallel,
        const _variant_t & PivotOriginParallel,
        enum TGPart::ReferenceElementConstants PivotOriginAngular );
    AsmRefPlanePtr AddAngularByAngle (
        IDispatch * ParentPlane,
        double Angle,
        IDispatch * Pivot,
        enum TGPart::ReferenceElementConstants PivotOrigin,
        const _variant_t & NormalSide = vtMissing,
        const _variant_t & Local = vtMissing );
    AsmRefPlanePtr AddBy3Points (
        IDispatch * RootPoint,
        IDispatch * SecondXAxisPoint,
        IDispatch * ThirdPoint );
    AsmRefPlanePtr AddNormalToCurveAtDistanceAlongCurve (
        IDispatch * Parent,
        IDispatch * OrientationPlane,
        double Distance,
        double XAxisRotation,
        enum TGPart::ReferenceElementConstants normalOrientation,
        enum TGPart::ReferenceElementConstants distanceOrigin );
    AsmRefPlanePtr AddNormalToCurveAtArcLengthRatio (
        IDispatch * Parent,
        IDispatch * OrientationPlane,
        double ArcLengthRatio,
        double XAxisRotation,
        enum TGPart::ReferenceElementConstants normalOrientation,
        enum TGPart::ReferenceElementConstants arcLengthRatioOrigin );
    AsmRefPlanePtr AddNormalToCurveAtKeyPoint (
        IDispatch * Parent,
        IDispatch * OrientationPlane,
        IDispatch * Keypoint,
        double XAxisRotation,
        enum TGPart::ReferenceElementConstants normalOrientation,
        enum TGPart::ReferenceElementConstants selectedCurveEnd );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL _arg1 );
    AsmRefPlanePtr AddTangentToCylinderOrConeAtAngleEx (
        IDispatch * Face,
        IDispatch * ParentPlane,
        double AngleOfRotation,
        double XAxisAngle,
        enum TGPart::FeaturePropertyConstants ExtentSide,
        enum TGPart::ReferenceElementConstants normalOrientation,
        const _variant_t & Local = vtMissing );
    AsmRefPlanePtr AddTangentToCylinderOrConeAtKeyPointEx (
        IDispatch * Face,
        IDispatch * ParentPlane,
        IDispatch * Keypoint,
        enum TGFramework::KeyPointType KeyPointTypeConstant,
        double XAxisAngle,
        enum TGPart::FeaturePropertyConstants ExtentSide,
        enum TGPart::ReferenceElementConstants normalOrientation,
        const _variant_t & Local = vtMissing );
    AsmRefPlanePtr AddTangentToCurvedSurfaceAtKeyPointEx (
        IDispatch * Face,
        IDispatch * ParentPlane,
        IDispatch * Keypoint,
        enum TGFramework::KeyPointType KeyPointTypeConstant,
        double XAxisAngle,
        enum TGPart::ReferenceElementConstants normalOrientation,
        const _variant_t & Local = vtMissing );
    AsmRefPlanePtr AddParallelByDistanceEx (
        IDispatch * ParentPlane,
        double Distance,
        const _variant_t & NormalSide = vtMissing,
        const _variant_t & Pivot = vtMissing,
        const _variant_t & PivotOrigin = vtMissing,
        const _variant_t & Local = vtMissing );
    AsmRefPlanePtr AddAngularByAngleEx (
        IDispatch * ParentPlane,
        double Angle,
        IDispatch * Pivot,
        enum TGPart::ReferenceElementConstants PivotOrigin,
        const _variant_t & NormalSide = vtMissing,
        const _variant_t & Local = vtMissing );
    AsmRefPlanePtr AddBy3PointsEx (
        IDispatch * RootPoint,
        IDispatch * SecondXAxisPoint,
        IDispatch * ThirdPoint,
        const _variant_t & Local = vtMissing );
    AsmRefPlanePtr AddNormalToCurveAtDistanceAlongCurveEx (
        IDispatch * Parent,
        IDispatch * OrientationPlane,
        double Distance,
        double XAxisRotation,
        enum TGPart::ReferenceElementConstants normalOrientation,
        enum TGPart::ReferenceElementConstants distanceOrigin,
        const _variant_t & Local = vtMissing );
    AsmRefPlanePtr AddNormalToCurveAtArcLengthRatioEx (
        IDispatch * Parent,
        IDispatch * OrientationPlane,
        double ArcLengthRatio,
        double XAxisRotation,
        enum TGPart::ReferenceElementConstants normalOrientation,
        enum TGPart::ReferenceElementConstants arcLengthRatioOrigin,
        const _variant_t & Local = vtMissing );
    AsmRefPlanePtr AddNormalToCurveAtKeyPointEx (
        IDispatch * Parent,
        IDispatch * OrientationPlane,
        IDispatch * Keypoint,
        double XAxisRotation,
        enum TGPart::ReferenceElementConstants normalOrientation,
        enum TGPart::ReferenceElementConstants selectedCurveEnd,
        const _variant_t & Local = vtMissing );
};

struct __declspec(uuid("aa0c3292-667e-11d3-aed8-00500471c49e"))
AsmRefPlane : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetGlobal))
    VARIANT_BOOL Global;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetParentRelations))
    SAFEARRAY * ParentRelations;
    __declspec(property(get=GetTangentAngle,put=PutTangentAngle))
    double TangentAngle;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t _arg1 );
    HRESULT GetNormal (
        SAFEARRAY * * Normal );
    HRESULT GetRootPoint (
        SAFEARRAY * * RootPoint );
    HRESULT GetReferenceDirection (
        SAFEARRAY * * RefDir );
    VARIANT_BOOL GetGlobal ( );
    void PutVisible (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetVisible ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT ResizeRefPlaneByDirDist (
        VARIANT_BOOL bAlongX,
        int idx,
        double dist );
    HRESULT AutoResizeRefPlane ( );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description = &vtMissing );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    HRESULT Delete ( );
    SAFEARRAY * GetParentRelations ( );
    double GetTangentAngle ( );
    void PutTangentAngle (
        double _arg1 );
};

struct __declspec(uuid("aa0c3291-667e-11d3-aed8-00500471c49e"))
_IAsmRefPlanesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    AsmRefPlanePtr Item (
        const _variant_t & Index );
    AsmRefPlanePtr AddParallelByDistance (
        IDispatch * ParentPlane,
        double Distance,
        const _variant_t & NormalSide = vtMissing,
        const _variant_t & Pivot = vtMissing,
        const _variant_t & PivotOrigin = vtMissing,
        const _variant_t & Local = vtMissing );
    AsmRefPlanePtr AddMiddlePlaneByTwoPlanes (
        IDispatch * ParentPlane,
        IDispatch * ParentPlaneTwo,
        const _variant_t & PivotParallel,
        const _variant_t & PivotOriginParallel,
        enum TGPart::ReferenceElementConstants PivotOriginAngular );
    AsmRefPlanePtr AddAngularByAngle (
        IDispatch * ParentPlane,
        double Angle,
        IDispatch * Pivot,
        enum TGPart::ReferenceElementConstants PivotOrigin,
        const _variant_t & NormalSide = vtMissing,
        const _variant_t & Local = vtMissing );
    AsmRefPlanePtr AddBy3Points (
        IDispatch * RootPoint,
        IDispatch * SecondXAxisPoint,
        IDispatch * ThirdPoint );
    AsmRefPlanePtr AddNormalToCurveAtDistanceAlongCurve (
        IDispatch * Parent,
        IDispatch * OrientationPlane,
        double Distance,
        double XAxisRotation,
        enum TGPart::ReferenceElementConstants normalOrientation,
        enum TGPart::ReferenceElementConstants distanceOrigin );
    AsmRefPlanePtr AddNormalToCurveAtArcLengthRatio (
        IDispatch * Parent,
        IDispatch * OrientationPlane,
        double ArcLengthRatio,
        double XAxisRotation,
        enum TGPart::ReferenceElementConstants normalOrientation,
        enum TGPart::ReferenceElementConstants arcLengthRatioOrigin );
    AsmRefPlanePtr AddNormalToCurveAtKeyPoint (
        IDispatch * Parent,
        IDispatch * OrientationPlane,
        IDispatch * Keypoint,
        double XAxisRotation,
        enum TGPart::ReferenceElementConstants normalOrientation,
        enum TGPart::ReferenceElementConstants selectedCurveEnd );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL pbVisible );
    AsmRefPlanePtr AddTangentToCylinderOrConeAtAngleEx (
        IDispatch * Face,
        IDispatch * ParentPlane,
        double AngleOfRotation,
        double XAxisAngle,
        enum TGPart::FeaturePropertyConstants ExtentSide,
        enum TGPart::ReferenceElementConstants normalOrientation,
        const _variant_t & Local = vtMissing );
    AsmRefPlanePtr AddTangentToCylinderOrConeAtKeyPointEx (
        IDispatch * Face,
        IDispatch * ParentPlane,
        IDispatch * Keypoint,
        enum TGFramework::KeyPointType KeyPointTypeConstant,
        double XAxisAngle,
        enum TGPart::FeaturePropertyConstants ExtentSide,
        enum TGPart::ReferenceElementConstants normalOrientation,
        const _variant_t & Local = vtMissing );
    AsmRefPlanePtr AddTangentToCurvedSurfaceAtKeyPointEx (
        IDispatch * Face,
        IDispatch * ParentPlane,
        IDispatch * Keypoint,
        enum TGFramework::KeyPointType KeyPointTypeConstant,
        double XAxisAngle,
        enum TGPart::ReferenceElementConstants normalOrientation,
        const _variant_t & Local = vtMissing );
    AsmRefPlanePtr AddParallelByDistanceEx (
        IDispatch * ParentPlane,
        double Distance,
        const _variant_t & NormalSide = vtMissing,
        const _variant_t & Pivot = vtMissing,
        const _variant_t & PivotOrigin = vtMissing,
        const _variant_t & Local = vtMissing );
    AsmRefPlanePtr AddAngularByAngleEx (
        IDispatch * ParentPlane,
        double Angle,
        IDispatch * Pivot,
        enum TGPart::ReferenceElementConstants PivotOrigin,
        const _variant_t & NormalSide = vtMissing,
        const _variant_t & Local = vtMissing );
    AsmRefPlanePtr AddBy3PointsEx (
        IDispatch * RootPoint,
        IDispatch * SecondXAxisPoint,
        IDispatch * ThirdPoint,
        const _variant_t & Local = vtMissing );
    AsmRefPlanePtr AddNormalToCurveAtDistanceAlongCurveEx (
        IDispatch * Parent,
        IDispatch * OrientationPlane,
        double Distance,
        double XAxisRotation,
        enum TGPart::ReferenceElementConstants normalOrientation,
        enum TGPart::ReferenceElementConstants distanceOrigin,
        const _variant_t & Local = vtMissing );
    AsmRefPlanePtr AddNormalToCurveAtArcLengthRatioEx (
        IDispatch * Parent,
        IDispatch * OrientationPlane,
        double ArcLengthRatio,
        double XAxisRotation,
        enum TGPart::ReferenceElementConstants normalOrientation,
        enum TGPart::ReferenceElementConstants arcLengthRatioOrigin,
        const _variant_t & Local = vtMissing );
    AsmRefPlanePtr AddNormalToCurveAtKeyPointEx (
        IDispatch * Parent,
        IDispatch * OrientationPlane,
        IDispatch * Keypoint,
        double XAxisRotation,
        enum TGPart::ReferenceElementConstants normalOrientation,
        enum TGPart::ReferenceElementConstants selectedCurveEnd,
        const _variant_t & Local = vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Enum ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct AsmRefPlane * * Item ) = 0;
      virtual HRESULT __stdcall raw_AddParallelByDistance (
        /*[in]*/ IDispatch * ParentPlane,
        /*[in]*/ double Distance,
        /*[in]*/ VARIANT NormalSide,
        /*[in]*/ VARIANT Pivot,
        /*[in]*/ VARIANT PivotOrigin,
        /*[in]*/ VARIANT Local,
        /*[out,retval]*/ struct AsmRefPlane * * ReferencePlane ) = 0;
      virtual HRESULT __stdcall raw_AddMiddlePlaneByTwoPlanes (
        /*[in]*/ IDispatch * ParentPlane,
        /*[in]*/ IDispatch * ParentPlaneTwo,
        /*[in]*/ VARIANT PivotParallel,
        /*[in]*/ VARIANT PivotOriginParallel,
        /*[in]*/ enum TGPart::ReferenceElementConstants PivotOriginAngular,
        /*[out,retval]*/ struct AsmRefPlane * * ReferencePlane ) = 0;
      virtual HRESULT __stdcall raw_AddAngularByAngle (
        /*[in]*/ IDispatch * ParentPlane,
        /*[in]*/ double Angle,
        /*[in]*/ IDispatch * Pivot,
        /*[in]*/ enum TGPart::ReferenceElementConstants PivotOrigin,
        /*[in]*/ VARIANT NormalSide,
        /*[in]*/ VARIANT Local,
        /*[out,retval]*/ struct AsmRefPlane * * ReferencePlane ) = 0;
      virtual HRESULT __stdcall raw_AddBy3Points (
        /*[in]*/ IDispatch * RootPoint,
        /*[in]*/ IDispatch * SecondXAxisPoint,
        /*[in]*/ IDispatch * ThirdPoint,
        /*[out,retval]*/ struct AsmRefPlane * * ReferencePlane ) = 0;
      virtual HRESULT __stdcall raw_AddNormalToCurveAtDistanceAlongCurve (
        /*[in]*/ IDispatch * Parent,
        /*[in]*/ IDispatch * OrientationPlane,
        /*[in]*/ double Distance,
        /*[in]*/ double XAxisRotation,
        /*[in]*/ enum TGPart::ReferenceElementConstants normalOrientation,
        /*[in]*/ enum TGPart::ReferenceElementConstants distanceOrigin,
        /*[out,retval]*/ struct AsmRefPlane * * ReferencePlane ) = 0;
      virtual HRESULT __stdcall raw_AddNormalToCurveAtArcLengthRatio (
        /*[in]*/ IDispatch * Parent,
        /*[in]*/ IDispatch * OrientationPlane,
        /*[in]*/ double ArcLengthRatio,
        /*[in]*/ double XAxisRotation,
        /*[in]*/ enum TGPart::ReferenceElementConstants normalOrientation,
        /*[in]*/ enum TGPart::ReferenceElementConstants arcLengthRatioOrigin,
        /*[out,retval]*/ struct AsmRefPlane * * ReferencePlane ) = 0;
      virtual HRESULT __stdcall raw_AddNormalToCurveAtKeyPoint (
        /*[in]*/ IDispatch * Parent,
        /*[in]*/ IDispatch * OrientationPlane,
        /*[in]*/ IDispatch * Keypoint,
        /*[in]*/ double XAxisRotation,
        /*[in]*/ enum TGPart::ReferenceElementConstants normalOrientation,
        /*[in]*/ enum TGPart::ReferenceElementConstants selectedCurveEnd,
        /*[out,retval]*/ struct AsmRefPlane * * ReferencePlane ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * pbVisible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL pbVisible ) = 0;
      virtual HRESULT __stdcall raw_AddTangentToCylinderOrConeAtAngleEx (
        /*[in]*/ IDispatch * Face,
        /*[in]*/ IDispatch * ParentPlane,
        /*[in]*/ double AngleOfRotation,
        /*[in]*/ double XAxisAngle,
        /*[in]*/ enum TGPart::FeaturePropertyConstants ExtentSide,
        /*[in]*/ enum TGPart::ReferenceElementConstants normalOrientation,
        /*[in]*/ VARIANT Local,
        /*[out,retval]*/ struct AsmRefPlane * * ReferencePlane ) = 0;
      virtual HRESULT __stdcall raw_AddTangentToCylinderOrConeAtKeyPointEx (
        /*[in]*/ IDispatch * Face,
        /*[in]*/ IDispatch * ParentPlane,
        /*[in]*/ IDispatch * Keypoint,
        /*[in]*/ enum TGFramework::KeyPointType KeyPointTypeConstant,
        /*[in]*/ double XAxisAngle,
        /*[in]*/ enum TGPart::FeaturePropertyConstants ExtentSide,
        /*[in]*/ enum TGPart::ReferenceElementConstants normalOrientation,
        /*[in]*/ VARIANT Local,
        /*[out,retval]*/ struct AsmRefPlane * * ReferencePlane ) = 0;
      virtual HRESULT __stdcall raw_AddTangentToCurvedSurfaceAtKeyPointEx (
        /*[in]*/ IDispatch * Face,
        /*[in]*/ IDispatch * ParentPlane,
        /*[in]*/ IDispatch * Keypoint,
        /*[in]*/ enum TGFramework::KeyPointType KeyPointTypeConstant,
        /*[in]*/ double XAxisAngle,
        /*[in]*/ enum TGPart::ReferenceElementConstants normalOrientation,
        /*[in]*/ VARIANT Local,
        /*[out,retval]*/ struct AsmRefPlane * * ReferencePlane ) = 0;
      virtual HRESULT __stdcall raw_AddParallelByDistanceEx (
        /*[in]*/ IDispatch * ParentPlane,
        /*[in]*/ double Distance,
        /*[in]*/ VARIANT NormalSide,
        /*[in]*/ VARIANT Pivot,
        /*[in]*/ VARIANT PivotOrigin,
        /*[in]*/ VARIANT Local,
        /*[out,retval]*/ struct AsmRefPlane * * ReferencePlane ) = 0;
      virtual HRESULT __stdcall raw_AddAngularByAngleEx (
        /*[in]*/ IDispatch * ParentPlane,
        /*[in]*/ double Angle,
        /*[in]*/ IDispatch * Pivot,
        /*[in]*/ enum TGPart::ReferenceElementConstants PivotOrigin,
        /*[in]*/ VARIANT NormalSide,
        /*[in]*/ VARIANT Local,
        /*[out,retval]*/ struct AsmRefPlane * * ReferencePlane ) = 0;
      virtual HRESULT __stdcall raw_AddBy3PointsEx (
        /*[in]*/ IDispatch * RootPoint,
        /*[in]*/ IDispatch * SecondXAxisPoint,
        /*[in]*/ IDispatch * ThirdPoint,
        /*[in]*/ VARIANT Local,
        /*[out,retval]*/ struct AsmRefPlane * * ReferencePlane ) = 0;
      virtual HRESULT __stdcall raw_AddNormalToCurveAtDistanceAlongCurveEx (
        /*[in]*/ IDispatch * Parent,
        /*[in]*/ IDispatch * OrientationPlane,
        /*[in]*/ double Distance,
        /*[in]*/ double XAxisRotation,
        /*[in]*/ enum TGPart::ReferenceElementConstants normalOrientation,
        /*[in]*/ enum TGPart::ReferenceElementConstants distanceOrigin,
        /*[in]*/ VARIANT Local,
        /*[out,retval]*/ struct AsmRefPlane * * ReferencePlane ) = 0;
      virtual HRESULT __stdcall raw_AddNormalToCurveAtArcLengthRatioEx (
        /*[in]*/ IDispatch * Parent,
        /*[in]*/ IDispatch * OrientationPlane,
        /*[in]*/ double ArcLengthRatio,
        /*[in]*/ double XAxisRotation,
        /*[in]*/ enum TGPart::ReferenceElementConstants normalOrientation,
        /*[in]*/ enum TGPart::ReferenceElementConstants arcLengthRatioOrigin,
        /*[in]*/ VARIANT Local,
        /*[out,retval]*/ struct AsmRefPlane * * ReferencePlane ) = 0;
      virtual HRESULT __stdcall raw_AddNormalToCurveAtKeyPointEx (
        /*[in]*/ IDispatch * Parent,
        /*[in]*/ IDispatch * OrientationPlane,
        /*[in]*/ IDispatch * Keypoint,
        /*[in]*/ double XAxisRotation,
        /*[in]*/ enum TGPart::ReferenceElementConstants normalOrientation,
        /*[in]*/ enum TGPart::ReferenceElementConstants selectedCurveEnd,
        /*[in]*/ VARIANT Local,
        /*[out,retval]*/ struct AsmRefPlane * * ReferencePlane ) = 0;
};

struct __declspec(uuid("aa0c3290-667e-11d3-aed8-00500471c49e"))
_IAsmRefPlaneAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetGlobal))
    VARIANT_BOOL Global;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetParentRelations))
    SAFEARRAY * ParentRelations;
    __declspec(property(get=GetTangentAngle,put=PutTangentAngle))
    double TangentAngle;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    HRESULT GetNormal (
        SAFEARRAY * * Normal );
    HRESULT GetRootPoint (
        SAFEARRAY * * RootPoint );
    HRESULT GetReferenceDirection (
        SAFEARRAY * * RefDir );
    VARIANT_BOOL GetGlobal ( );
    void PutVisible (
        VARIANT_BOOL Visible );
    VARIANT_BOOL GetVisible ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT ResizeRefPlaneByDirDist (
        VARIANT_BOOL bAlongX,
        int idx,
        double dist );
    HRESULT AutoResizeRefPlane ( );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    HRESULT Delete ( );
    SAFEARRAY * GetParentRelations ( );
    double GetTangentAngle ( );
    void PutTangentAngle (
        double dAngle );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall raw_GetNormal (
        /*[in,out]*/ SAFEARRAY * * Normal ) = 0;
      virtual HRESULT __stdcall raw_GetRootPoint (
        /*[in,out]*/ SAFEARRAY * * RootPoint ) = 0;
      virtual HRESULT __stdcall raw_GetReferenceDirection (
        /*[in,out]*/ SAFEARRAY * * RefDir ) = 0;
      virtual HRESULT __stdcall get_Global (
        /*[out,retval]*/ VARIANT_BOOL * Global ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall raw_ResizeRefPlaneByDirDist (
        /*[in]*/ VARIANT_BOOL bAlongX,
        /*[in]*/ int idx,
        /*[in]*/ double dist ) = 0;
      virtual HRESULT __stdcall raw_AutoResizeRefPlane ( ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out]*/ VARIANT * Description,
        /*[out,retval]*/ enum TGPart::FeatureStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_ParentRelations (
        /*[out,retval]*/ SAFEARRAY * * ppParentRelations ) = 0;
      virtual HRESULT __stdcall get_TangentAngle (
        /*[out,retval]*/ double * dAngle ) = 0;
      virtual HRESULT __stdcall put_TangentAngle (
        /*[in]*/ double dAngle ) = 0;
};

enum InterferenceStatusConstants
{
    seInterferenceStatusNoInterference = 1,
    seInterferenceStatusConfirmedInterference = 2,
    seInterferenceStatusProbableInterference = 3,
    seInterferenceStatusConfirmedAndProbableInterference = 4,
    seInterferenceStatusIncompleteAnalysis = 5
};

struct __declspec(uuid("3c883f04-9bdf-11d3-a473-00500471d7ac"))
Layouts : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    LayoutPtr Item (
        const _variant_t & Index );
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    LayoutPtr Add (
        struct AsmRefPlane * AsmRefPlane,
        const _variant_t & ReturnExisting = vtMissing,
        VARIANT * Status = &vtMissing );
    LayoutPtr AddByTearOff (
        SAFEARRAY * * ProfileCurveBodyEdges,
        IDispatch * TearOffSketchPlane,
        VARIANT_BOOL bAssociative,
        VARIANT_BOOL bCopy,
        VARIANT * Status = &vtMissing );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL _arg1 );
};

struct __declspec(uuid("3c883f03-9bdf-11d3-a473-00500471d7ac"))
Layout : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetProfile))
    IDispatchPtr Profile;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetRefPlane))
    AsmRefPlanePtr RefPlane;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetShowSketchColors,put=PutShowSketchColors))
    VARIANT_BOOL ShowSketchColors;
    __declspec(property(get=GetStyle,put=PutStyle))
    _bstr_t Style;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    HRESULT Delete ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr GetProfile ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t _arg1 );
    AsmRefPlanePtr GetRefPlane ( );
    enum TGFramework::ObjectType GetType ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    VARIANT_BOOL GetShowSketchColors ( );
    void PutShowSketchColors (
        VARIANT_BOOL _arg1 );
    _bstr_t GetStyle ( );
    void PutStyle (
        _bstr_t _arg1 );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description = &vtMissing );
};

struct __declspec(uuid("3c883f02-9bdf-11d3-a473-00500471d7ac"))
_ILayoutsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    LayoutPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    LayoutPtr Add (
        struct AsmRefPlane * AsmRefPlane,
        const _variant_t & ReturnExisting,
        VARIANT * Status );
    LayoutPtr AddByTearOff (
        SAFEARRAY * * ProfileCurveBodyEdges,
        IDispatch * TearOffSketchPlane,
        VARIANT_BOOL bAssociative,
        VARIANT_BOOL bCopy,
        VARIANT * Status );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL pbVisible );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Layout * * pItem ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * pApp ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * ppParent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pnCount ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ struct AsmRefPlane * AsmRefPlane,
        /*[in]*/ VARIANT ReturnExisting,
        /*[out]*/ VARIANT * Status,
        /*[out,retval]*/ struct Layout * * ppLayout ) = 0;
      virtual HRESULT __stdcall raw_AddByTearOff (
        /*[in]*/ SAFEARRAY * * ProfileCurveBodyEdges,
        /*[in]*/ IDispatch * TearOffSketchPlane,
        /*[in]*/ VARIANT_BOOL bAssociative,
        /*[in]*/ VARIANT_BOOL bCopy,
        /*[out]*/ VARIANT * Status,
        /*[out,retval]*/ struct Layout * * ppTearOffLayout ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * pbVisible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL pbVisible ) = 0;
};

struct __declspec(uuid("3c883f01-9bdf-11d3-a473-00500471d7ac"))
_ILayoutAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetProfile))
    IDispatchPtr Profile;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetRefPlane))
    AsmRefPlanePtr RefPlane;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetShowSketchColors,put=PutShowSketchColors))
    VARIANT_BOOL ShowSketchColors;
    __declspec(property(get=GetStyle,put=PutStyle))
    _bstr_t Style;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    HRESULT Delete ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr GetProfile ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    AsmRefPlanePtr GetRefPlane ( );
    enum TGFramework::ObjectType GetType ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    VARIANT_BOOL GetShowSketchColors ( );
    void PutShowSketchColors (
        VARIANT_BOOL ShowSketchColors );
    _bstr_t GetStyle ( );
    void PutStyle (
        _bstr_t Style );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * pApp ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * ppParent ) = 0;
      virtual HRESULT __stdcall get_Profile (
        /*[out,retval]*/ IDispatch * * ppProfile ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_RefPlane (
        /*[out,retval]*/ struct AsmRefPlane * * AsmRefPlane ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall get_ShowSketchColors (
        /*[out,retval]*/ VARIANT_BOOL * ShowSketchColors ) = 0;
      virtual HRESULT __stdcall put_ShowSketchColors (
        /*[in]*/ VARIANT_BOOL ShowSketchColors ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ BSTR * Style ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ BSTR Style ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out]*/ VARIANT * Description,
        /*[out,retval]*/ enum TGPart::FeatureStatusConstants * Status ) = 0;
};

struct __declspec(uuid("56a41243-9b92-11d3-8fd4-00c04fa15548"))
LineSegments : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    LineSegmentPtr Item (
        const _variant_t & Index );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
    LineSegmentPtr Add (
        SAFEARRAY * * StartPoint,
        SAFEARRAY * * EndPoint );
};

struct __declspec(uuid("56a41244-9b92-11d3-8fd4-00c04fa15548"))
LineSegment : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    HRESULT GetStartPoint (
        double * x,
        double * y,
        double * z );
    HRESULT GetEndPoint (
        double * x,
        double * y,
        double * z );
    HRESULT SetStartPoint (
        double * x,
        double * y,
        double * z );
    HRESULT SetEndPoint (
        double * x,
        double * y,
        double * z );
    enum TGFramework::ObjectType GetType ( );
    HRESULT SplitAtPoint (
        double x,
        double y,
        double z,
        VARIANT * OtherSplitElement = &vtMissing );
};

struct __declspec(uuid("56a41248-9b92-11d3-8fd4-00c04fa15548"))
_ILineSegmentsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    LineSegmentPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
    LineSegmentPtr Add (
        SAFEARRAY * * StartPoint,
        SAFEARRAY * * EndPoint );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct LineSegment * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ SAFEARRAY * * StartPoint,
        /*[in]*/ SAFEARRAY * * EndPoint,
        /*[out,retval]*/ struct LineSegment * * ppObj ) = 0;
};

struct __declspec(uuid("56a41249-9b92-11d3-8fd4-00c04fa15548"))
_ILineSegmentAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    HRESULT GetStartPoint (
        double * x,
        double * y,
        double * z );
    HRESULT GetEndPoint (
        double * x,
        double * y,
        double * z );
    HRESULT SetStartPoint (
        double * x,
        double * y,
        double * z );
    HRESULT SetEndPoint (
        double * x,
        double * y,
        double * z );
    enum TGFramework::ObjectType GetType ( );
    HRESULT SplitAtPoint (
        double x,
        double y,
        double z,
        VARIANT * OtherSplitElement );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall raw_GetStartPoint (
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall raw_GetEndPoint (
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall raw_SetStartPoint (
        /*[in]*/ double * x,
        /*[in]*/ double * y,
        /*[in]*/ double * z ) = 0;
      virtual HRESULT __stdcall raw_SetEndPoint (
        /*[in]*/ double * x,
        /*[in]*/ double * y,
        /*[in]*/ double * z ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall raw_SplitAtPoint (
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ double z,
        /*[out]*/ VARIANT * OtherSplitElement ) = 0;
};

struct __declspec(uuid("56a41245-9b92-11d3-8fd4-00c04fa15548"))
Segments : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    IDispatchPtr Item (
        const _variant_t & Index );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
};

struct __declspec(uuid("56a41247-9b92-11d3-8fd4-00c04fa15548"))
_ISegmentsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IDispatchPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
};

enum AssemblyGlobalConstants
{
    seAssemblyGlobalTubeWallThickness = 1,
    seAssemblyGlobalTubeBendRadius = 2,
    seAssemblyGlobalTubeOuterDiameter = 3,
    seAssemblyGlobalTubeMinimumFlatLength = 4,
    seAssemblyGlobalTubeEndTreatmentOutsideDiameter = 5,
    seAssemblyGlobalTubeEndTreatmentInsideDiameter = 6,
    seAssemblyGlobalTubeEndTreatmentDepth = 7,
    seAssemblyGlobalTubeEndTreatmentAngle = 8,
    seAssemblyGlobalTubeEndTreatmentRadius = 9,
    seAssemblyGlobalDefaultPartDensity = 10,
    seAssemblyGlobalDefaultAccuracyForPartDensity = 11,
    seAssemblyGlobalWireHarnessDefaultSlackCompensation = 12,
    seAssemblyGlobalWireHarnessDefaultHoleClearance = 13,
    seAssemblyGlobalWireHarnessDefaultBundleClearance = 14,
    seAssemblyGlobalWireHarnessDefaultWireAdder = 15,
    seAssemblyGlobalWireHarnessDefaultCableAdder = 16,
    seAssemblyGlobalWireHarnessDefaultBundleAdder = 17,
    seAssemblyGlobalUpdatePhysicalPropertiesOnSave = 18,
    seAssemblyGlobalAutomaticUpdate = 19,
    seAssemblyGlobalAdjustableAsm = 20,
    seAssemblyGlobalAdjustableTubes = 21
};

struct __declspec(uuid("cb5d5636-3be3-11d4-b991-0004ac969177"))
ArcSegments : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    ArcSegmentPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    ArcSegmentPtr Add (
        SAFEARRAY * * StartPoint,
        SAFEARRAY * * EndPoint,
        SAFEARRAY * * PlanePoint );
};

struct __declspec(uuid("94f30b5a-2987-11d3-9879-0060b0c335a5"))
ArcSegment : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetRadius,put=PutRadius))
    double Radius;
    __declspec(property(get=GetSweepAngle,put=PutSweepAngle))
    double SweepAngle;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    enum TGFramework::ObjectType GetType ( );
    HRESULT GetStartPoint (
        double * x,
        double * y,
        double * z );
    HRESULT SetStartPoint (
        double x,
        double y,
        double z );
    HRESULT GetEndPoint (
        double * x,
        double * y,
        double * z );
    HRESULT SetEndPoint (
        double x,
        double y,
        double z );
    double GetRadius ( );
    void PutRadius (
        double _arg1 );
    double GetSweepAngle ( );
    void PutSweepAngle (
        double _arg1 );
};

struct __declspec(uuid("2158ea8a-3bdc-11d4-b991-0004ac969177"))
_IArcSegmentsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    ArcSegmentPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    ArcSegmentPtr Add (
        SAFEARRAY * * StartPoint,
        SAFEARRAY * * EndPoint,
        SAFEARRAY * * PlanePoint );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct ArcSegment * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ SAFEARRAY * * StartPoint,
        /*[in]*/ SAFEARRAY * * EndPoint,
        /*[in]*/ SAFEARRAY * * PlanePoint,
        /*[out,retval]*/ struct ArcSegment * * ppObj ) = 0;
};

struct __declspec(uuid("fe02eaf4-372b-11d4-b991-0004ac969177"))
_IArcSegmentAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetRadius,put=PutRadius))
    double Radius;
    __declspec(property(get=GetSweepAngle,put=PutSweepAngle))
    double SweepAngle;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    enum TGFramework::ObjectType GetType ( );
    HRESULT GetStartPoint (
        double * x,
        double * y,
        double * z );
    HRESULT SetStartPoint (
        double x,
        double y,
        double z );
    HRESULT GetEndPoint (
        double * x,
        double * y,
        double * z );
    HRESULT SetEndPoint (
        double x,
        double y,
        double z );
    double GetRadius ( );
    void PutRadius (
        double Radius );
    double GetSweepAngle ( );
    void PutSweepAngle (
        double SweepAngle );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall raw_GetStartPoint (
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall raw_SetStartPoint (
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ double z ) = 0;
      virtual HRESULT __stdcall raw_GetEndPoint (
        /*[out]*/ double * x,
        /*[out]*/ double * y,
        /*[out]*/ double * z ) = 0;
      virtual HRESULT __stdcall raw_SetEndPoint (
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ double z ) = 0;
      virtual HRESULT __stdcall get_Radius (
        /*[out,retval]*/ double * Radius ) = 0;
      virtual HRESULT __stdcall put_Radius (
        /*[in]*/ double Radius ) = 0;
      virtual HRESULT __stdcall get_SweepAngle (
        /*[out,retval]*/ double * SweepAngle ) = 0;
      virtual HRESULT __stdcall put_SweepAngle (
        /*[in]*/ double SweepAngle ) = 0;
};

struct __declspec(uuid("cdfbec64-4628-11d4-b993-0004ac969177"))
SegmentRelations3d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    IDispatchPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr Item (
        const _variant_t & Index );
    SegmentDirectionRelation3dPtr AddSegmentDirection (
        IDispatch * Element1,
        enum SegmentRelation3dGeometryConstants SegmentGeometryType1,
        IDispatch * Element2,
        enum SegmentRelation3dGeometryConstants SegmentGeometryType2,
        enum SegmentRelation3dDirectionConstants SegmentDirectionType );
    SegmentDistanceRelation3dPtr AddSegmentDistance (
        IDispatch * Element1,
        enum SegmentRelation3dGeometryConstants SegmentGeometryType1,
        IDispatch * Element2,
        enum SegmentRelation3dGeometryConstants SegmentGeometryType2,
        IDispatch * RefPlane,
        enum SegmentRelation3dDistanceConstants SegmentDistanceType,
        double Distance );
    SegmentRadiusRelation3dPtr AddSegmentRadius (
        IDispatch * Element,
        double Radius );
    SegmentAngularRelation3dPtr AddSegmentAngular (
        IDispatch * Element1,
        enum SegmentRelation3dGeometryConstants SegmentGeometryType1,
        IDispatch * Element2,
        enum SegmentRelation3dGeometryConstants SegmentGeometryType2,
        double Angle,
        VARIANT_BOOL vbSegAngleFromPositiveDir,
        VARIANT_BOOL vbSegAngleToPositiveDir,
        VARIANT_BOOL vbSegAngleCCW );
    SegmentPointRelation3dPtr AddSegmentPoint (
        IDispatch * Element1,
        enum SegmentRelation3dGeometryConstants SegmentGeometryType1,
        IDispatch * Element2,
        enum SegmentRelation3dGeometryConstants SegmentGeometryType2 );
    SegmentTangentRelation3dPtr AddSegmentTangent (
        IDispatch * Element1,
        IDispatch * Element2 );
};

enum SegmentRelation3dGeometryConstants
{
    seSegmentRelation3dStartPoint = 1,
    seSegmentRelation3dEndPoint = 2,
    seSegmentRelation3dUnbounded = 3,
    seSegmentRelation3dArcCenter = 4,
    seSegmentRelation3dEllipseCenter = 5,
    seSegmentRelation3dLineStartPoint = 6,
    seSegmentRelation3dLineEndPoint = 7,
    seSegmentRelation3dRefPlane = 8,
    seSegmentRelation3dArc = 9
};

enum SegmentRelation3dDirectionConstants
{
    seSegmentRelation3dDirectionParallel = 0,
    seSegmentRelation3dDirectionPerpendicular = 1,
    seSegmentRelation3dDirectionCoincident = 2
};

struct __declspec(uuid("58e959dd-07d0-11d3-986a-0060b0c335a5"))
SegmentDirectionRelation3d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum SegmentRelation3dStatusConstants Status;
    __declspec(property(get=GetDirectionType))
    enum SegmentRelation3dDirectionConstants DirectionType;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum SegmentRelation3dStatusConstants GetStatus ( );
    HRESULT GetElement1 (
        IDispatch * * Element1,
        enum TGFramework::ObjectType * Type,
        enum SegmentRelation3dGeometryConstants * GeometryType );
    HRESULT GetElement2 (
        IDispatch * * Element2,
        enum TGFramework::ObjectType * Type,
        enum SegmentRelation3dGeometryConstants * GeometryType );
    enum SegmentRelation3dDirectionConstants GetDirectionType ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
};

enum SegmentRelation3dStatusConstants
{
    seSegmentRelation3dStatusUnsolved = 0,
    seSegmentRelation3dStatusSolved = 1
};

struct __declspec(uuid("48402b9a-4168-11d4-b991-0004ac969177"))
_ISegmentDirectionRelation3dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum SegmentRelation3dStatusConstants Status;
    __declspec(property(get=GetDirectionType))
    enum SegmentRelation3dDirectionConstants DirectionType;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum SegmentRelation3dStatusConstants GetStatus ( );
    HRESULT GetElement1 (
        IDispatch * * Element1,
        enum TGFramework::ObjectType * Type,
        enum SegmentRelation3dGeometryConstants * GeometryType );
    HRESULT GetElement2 (
        IDispatch * * Element2,
        enum TGFramework::ObjectType * Type,
        enum SegmentRelation3dGeometryConstants * GeometryType );
    enum SegmentRelation3dDirectionConstants GetDirectionType ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ IDispatch * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall raw_Select (
        /*[in]*/ VARIANT_BOOL Replace ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum SegmentRelation3dStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall raw_GetElement1 (
        /*[out]*/ IDispatch * * Element1,
        /*[out]*/ enum TGFramework::ObjectType * Type,
        /*[out]*/ enum SegmentRelation3dGeometryConstants * GeometryType ) = 0;
      virtual HRESULT __stdcall raw_GetElement2 (
        /*[out]*/ IDispatch * * Element2,
        /*[out]*/ enum TGFramework::ObjectType * Type,
        /*[out]*/ enum SegmentRelation3dGeometryConstants * GeometryType ) = 0;
      virtual HRESULT __stdcall get_DirectionType (
        /*[out,retval]*/ enum SegmentRelation3dDirectionConstants * DirectionType ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
};

enum SegmentRelation3dDistanceConstants
{
    seSegmentRelation3dDistanceNormal = 0,
    seSegmentRelation3dDistanceReverse = 1,
    seSegmentRelation3dDistanceTrueLength = 2
};

struct __declspec(uuid("58e959de-07d0-11d3-986a-0060b0c335a5"))
SegmentDistanceRelation3d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum SegmentRelation3dStatusConstants Status;
    __declspec(property(get=GetDistance,put=PutDistance))
    double Distance;
    __declspec(property(get=GetDistanceType))
    enum SegmentRelation3dDistanceConstants DistanceType;
    __declspec(property(get=GetDimension))
    IDispatchPtr Dimension;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum SegmentRelation3dStatusConstants GetStatus ( );
    double GetDistance ( );
    void PutDistance (
        double _arg1 );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    HRESULT GetElement1 (
        IDispatch * * Element1,
        enum TGFramework::ObjectType * Type,
        enum SegmentRelation3dGeometryConstants * GeometryType );
    HRESULT GetElement2 (
        IDispatch * * Element2,
        enum TGFramework::ObjectType * Type,
        enum SegmentRelation3dGeometryConstants * GeometryType );
    HRESULT GetElement3 (
        IDispatch * * Element3,
        enum TGFramework::ObjectType * Type,
        enum SegmentRelation3dGeometryConstants * GeometryType );
    enum SegmentRelation3dDistanceConstants GetDistanceType ( );
    IDispatchPtr GetDimension ( );
};

struct __declspec(uuid("8a9b7e7c-4168-11d4-b991-0004ac969177"))
_ISegmentDistanceRelation3dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum SegmentRelation3dStatusConstants Status;
    __declspec(property(get=GetDistance,put=PutDistance))
    double Distance;
    __declspec(property(get=GetDistanceType))
    enum SegmentRelation3dDistanceConstants DistanceType;
    __declspec(property(get=GetDimension))
    IDispatchPtr Dimension;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum SegmentRelation3dStatusConstants GetStatus ( );
    double GetDistance ( );
    void PutDistance (
        double Distance );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    HRESULT GetElement1 (
        IDispatch * * Element1,
        enum TGFramework::ObjectType * Type,
        enum SegmentRelation3dGeometryConstants * GeometryType );
    HRESULT GetElement2 (
        IDispatch * * Element2,
        enum TGFramework::ObjectType * Type,
        enum SegmentRelation3dGeometryConstants * GeometryType );
    HRESULT GetElement3 (
        IDispatch * * Element3,
        enum TGFramework::ObjectType * Type,
        enum SegmentRelation3dGeometryConstants * GeometryType );
    enum SegmentRelation3dDistanceConstants GetDistanceType ( );
    IDispatchPtr GetDimension ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ IDispatch * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall raw_Select (
        /*[in]*/ VARIANT_BOOL Replace ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum SegmentRelation3dStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall get_Distance (
        /*[out,retval]*/ double * Distance ) = 0;
      virtual HRESULT __stdcall put_Distance (
        /*[in]*/ double Distance ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall raw_GetElement1 (
        /*[out]*/ IDispatch * * Element1,
        /*[out]*/ enum TGFramework::ObjectType * Type,
        /*[out]*/ enum SegmentRelation3dGeometryConstants * GeometryType ) = 0;
      virtual HRESULT __stdcall raw_GetElement2 (
        /*[out]*/ IDispatch * * Element2,
        /*[out]*/ enum TGFramework::ObjectType * Type,
        /*[out]*/ enum SegmentRelation3dGeometryConstants * GeometryType ) = 0;
      virtual HRESULT __stdcall raw_GetElement3 (
        /*[out]*/ IDispatch * * Element3,
        /*[out]*/ enum TGFramework::ObjectType * Type,
        /*[out]*/ enum SegmentRelation3dGeometryConstants * GeometryType ) = 0;
      virtual HRESULT __stdcall get_DistanceType (
        /*[out,retval]*/ enum SegmentRelation3dDistanceConstants * DistanceType ) = 0;
      virtual HRESULT __stdcall get_Dimension (
        /*[out,retval]*/ IDispatch * * RelationDimension ) = 0;
};

struct __declspec(uuid("a02dd114-7c20-11d3-a3f4-0004ac96977f"))
SegmentRadiusRelation3d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum SegmentRelation3dStatusConstants Status;
    __declspec(property(get=GetRadius,put=PutRadius))
    double Radius;
    __declspec(property(get=GetArcSegment))
    ArcSegmentPtr ArcSegment;
    __declspec(property(get=GetDimension))
    IDispatchPtr Dimension;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum SegmentRelation3dStatusConstants GetStatus ( );
    double GetRadius ( );
    void PutRadius (
        double _arg1 );
    ArcSegmentPtr GetArcSegment ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    HRESULT GetElement1 (
        IDispatch * * Element1,
        enum TGFramework::ObjectType * Type,
        enum SegmentRelation3dGeometryConstants * GeometryType );
    IDispatchPtr GetDimension ( );
};

struct __declspec(uuid("d108b500-4168-11d4-b991-0004ac969177"))
_ISegmentRadiusRelation3dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum SegmentRelation3dStatusConstants Status;
    __declspec(property(get=GetRadius,put=PutRadius))
    double Radius;
    __declspec(property(get=GetArcSegment))
    ArcSegmentPtr ArcSegment;
    __declspec(property(get=GetDimension))
    IDispatchPtr Dimension;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum SegmentRelation3dStatusConstants GetStatus ( );
    double GetRadius ( );
    void PutRadius (
        double Radius );
    ArcSegmentPtr GetArcSegment ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    HRESULT GetElement1 (
        IDispatch * * Element1,
        enum TGFramework::ObjectType * Type,
        enum SegmentRelation3dGeometryConstants * GeometryType );
    IDispatchPtr GetDimension ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ IDispatch * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall raw_Select (
        /*[in]*/ VARIANT_BOOL Replace ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum SegmentRelation3dStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall get_Radius (
        /*[out,retval]*/ double * Radius ) = 0;
      virtual HRESULT __stdcall put_Radius (
        /*[in]*/ double Radius ) = 0;
      virtual HRESULT __stdcall get_ArcSegment (
        /*[out,retval]*/ struct ArcSegment * * ArcSegment ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall raw_GetElement1 (
        /*[out]*/ IDispatch * * Element1,
        /*[out]*/ enum TGFramework::ObjectType * Type,
        /*[out]*/ enum SegmentRelation3dGeometryConstants * GeometryType ) = 0;
      virtual HRESULT __stdcall get_Dimension (
        /*[out,retval]*/ IDispatch * * RelationDimension ) = 0;
};

struct __declspec(uuid("8f85534c-36fc-11d4-a420-0004ac96977f"))
SegmentAngularRelation3d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum SegmentRelation3dStatusConstants Status;
    __declspec(property(get=GetAngle,put=PutAngle))
    double Angle;
    __declspec(property(get=GetAngleFromPositiveDirection))
    VARIANT_BOOL AngleFromPositiveDirection;
    __declspec(property(get=GetAngleToPositiveDirection))
    VARIANT_BOOL AngleToPositiveDirection;
    __declspec(property(get=GetAngleCounterclockwise))
    VARIANT_BOOL AngleCounterclockwise;
    __declspec(property(get=GetDimension))
    IDispatchPtr Dimension;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum SegmentRelation3dStatusConstants GetStatus ( );
    double GetAngle ( );
    void PutAngle (
        double _arg1 );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    HRESULT GetElement1 (
        IDispatch * * Element1,
        enum TGFramework::ObjectType * Type,
        enum SegmentRelation3dGeometryConstants * GeometryType );
    HRESULT GetElement2 (
        IDispatch * * Element2,
        enum TGFramework::ObjectType * Type,
        enum SegmentRelation3dGeometryConstants * GeometryType );
    VARIANT_BOOL GetAngleFromPositiveDirection ( );
    VARIANT_BOOL GetAngleToPositiveDirection ( );
    VARIANT_BOOL GetAngleCounterclockwise ( );
    IDispatchPtr GetDimension ( );
};

struct __declspec(uuid("eaec0f60-5e84-11d4-b798-00c04fa15510"))
_ISegmentAngularRelation3dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum SegmentRelation3dStatusConstants Status;
    __declspec(property(get=GetAngle,put=PutAngle))
    double Angle;
    __declspec(property(get=GetAngleFromPositiveDirection))
    VARIANT_BOOL AngleFromPositiveDirection;
    __declspec(property(get=GetAngleToPositiveDirection))
    VARIANT_BOOL AngleToPositiveDirection;
    __declspec(property(get=GetAngleCounterclockwise))
    VARIANT_BOOL AngleCounterclockwise;
    __declspec(property(get=GetDimension))
    IDispatchPtr Dimension;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum SegmentRelation3dStatusConstants GetStatus ( );
    double GetAngle ( );
    void PutAngle (
        double Angle );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    HRESULT GetElement1 (
        IDispatch * * Element1,
        enum TGFramework::ObjectType * Type,
        enum SegmentRelation3dGeometryConstants * GeometryType );
    HRESULT GetElement2 (
        IDispatch * * Element2,
        enum TGFramework::ObjectType * Type,
        enum SegmentRelation3dGeometryConstants * GeometryType );
    VARIANT_BOOL GetAngleFromPositiveDirection ( );
    VARIANT_BOOL GetAngleToPositiveDirection ( );
    VARIANT_BOOL GetAngleCounterclockwise ( );
    IDispatchPtr GetDimension ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ IDispatch * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall raw_Select (
        /*[in]*/ VARIANT_BOOL Replace ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum SegmentRelation3dStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall get_Angle (
        /*[out,retval]*/ double * Angle ) = 0;
      virtual HRESULT __stdcall put_Angle (
        /*[in]*/ double Angle ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall raw_GetElement1 (
        /*[out]*/ IDispatch * * Element1,
        /*[out]*/ enum TGFramework::ObjectType * Type,
        /*[out]*/ enum SegmentRelation3dGeometryConstants * GeometryType ) = 0;
      virtual HRESULT __stdcall raw_GetElement2 (
        /*[out]*/ IDispatch * * Element2,
        /*[out]*/ enum TGFramework::ObjectType * Type,
        /*[out]*/ enum SegmentRelation3dGeometryConstants * GeometryType ) = 0;
      virtual HRESULT __stdcall get_AngleFromPositiveDirection (
        /*[out,retval]*/ VARIANT_BOOL * FromDirection ) = 0;
      virtual HRESULT __stdcall get_AngleToPositiveDirection (
        /*[out,retval]*/ VARIANT_BOOL * ToDirection ) = 0;
      virtual HRESULT __stdcall get_AngleCounterclockwise (
        /*[out,retval]*/ VARIANT_BOOL * AngleCounterclockwise ) = 0;
      virtual HRESULT __stdcall get_Dimension (
        /*[out,retval]*/ IDispatch * * RelationDimension ) = 0;
};

struct __declspec(uuid("58e959dc-07d0-11d3-986a-0060b0c335a5"))
SegmentPointRelation3d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum SegmentRelation3dStatusConstants Status;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum SegmentRelation3dStatusConstants GetStatus ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    HRESULT GetElement1 (
        IDispatch * * Element1,
        enum TGFramework::ObjectType * Type,
        enum SegmentRelation3dGeometryConstants * GeometryType );
    HRESULT GetElement2 (
        IDispatch * * Element2,
        enum TGFramework::ObjectType * Type,
        enum SegmentRelation3dGeometryConstants * GeometryType );
};

struct __declspec(uuid("fd5182ae-4168-11d4-b991-0004ac969177"))
_ISegmentPointRelation3dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum SegmentRelation3dStatusConstants Status;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum SegmentRelation3dStatusConstants GetStatus ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    HRESULT GetElement1 (
        IDispatch * * Element1,
        enum TGFramework::ObjectType * Type,
        enum SegmentRelation3dGeometryConstants * GeometryType );
    HRESULT GetElement2 (
        IDispatch * * Element2,
        enum TGFramework::ObjectType * Type,
        enum SegmentRelation3dGeometryConstants * GeometryType );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ IDispatch * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall raw_Select (
        /*[in]*/ VARIANT_BOOL Replace ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum SegmentRelation3dStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall raw_GetElement1 (
        /*[out]*/ IDispatch * * Element1,
        /*[out]*/ enum TGFramework::ObjectType * Type,
        /*[out]*/ enum SegmentRelation3dGeometryConstants * GeometryType ) = 0;
      virtual HRESULT __stdcall raw_GetElement2 (
        /*[out]*/ IDispatch * * Element2,
        /*[out]*/ enum TGFramework::ObjectType * Type,
        /*[out]*/ enum SegmentRelation3dGeometryConstants * GeometryType ) = 0;
};

struct __declspec(uuid("5df5112c-3880-11d3-987e-0060b0c335a5"))
SegmentTangentRelation3d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum SegmentRelation3dStatusConstants Status;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum SegmentRelation3dStatusConstants GetStatus ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    HRESULT GetElement1 (
        IDispatch * * Element1,
        enum TGFramework::ObjectType * Type,
        enum SegmentRelation3dGeometryConstants * GeometryType );
    HRESULT GetElement2 (
        IDispatch * * Element2,
        enum TGFramework::ObjectType * Type,
        enum SegmentRelation3dGeometryConstants * GeometryType );
};

struct __declspec(uuid("c67bec6e-4169-11d4-b991-0004ac969177"))
_ISegmentRelations3dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    IDispatchPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    SegmentDirectionRelation3dPtr AddSegmentDirection (
        IDispatch * Element1,
        enum SegmentRelation3dGeometryConstants SegmentGeometryType1,
        IDispatch * Element2,
        enum SegmentRelation3dGeometryConstants SegmentGeometryType2,
        enum SegmentRelation3dDirectionConstants SegmentDirectionType );
    SegmentDistanceRelation3dPtr AddSegmentDistance (
        IDispatch * Element1,
        enum SegmentRelation3dGeometryConstants SegmentGeometryType1,
        IDispatch * Element2,
        enum SegmentRelation3dGeometryConstants SegmentGeometryType2,
        IDispatch * RefPlane,
        enum SegmentRelation3dDistanceConstants SegmentDistanceType,
        double Distance );
    SegmentRadiusRelation3dPtr AddSegmentRadius (
        IDispatch * Element,
        double Radius );
    SegmentAngularRelation3dPtr AddSegmentAngular (
        IDispatch * Element1,
        enum SegmentRelation3dGeometryConstants SegmentGeometryType1,
        IDispatch * Element2,
        enum SegmentRelation3dGeometryConstants SegmentGeometryType2,
        double Angle,
        VARIANT_BOOL vbSegAngleFromPositiveDir,
        VARIANT_BOOL vbSegAngleToPositiveDir,
        VARIANT_BOOL vbSegAngleCCW );
    SegmentPointRelation3dPtr AddSegmentPoint (
        IDispatch * Element1,
        enum SegmentRelation3dGeometryConstants SegmentGeometryType1,
        IDispatch * Element2,
        enum SegmentRelation3dGeometryConstants SegmentGeometryType2 );
    SegmentTangentRelation3dPtr AddSegmentTangent (
        IDispatch * Element1,
        IDispatch * Element2 );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ IDispatch * * Application ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Unknown ) = 0;
      virtual HRESULT __stdcall raw_AddSegmentDirection (
        /*[in]*/ IDispatch * Element1,
        /*[in]*/ enum SegmentRelation3dGeometryConstants SegmentGeometryType1,
        /*[in]*/ IDispatch * Element2,
        /*[in]*/ enum SegmentRelation3dGeometryConstants SegmentGeometryType2,
        /*[in]*/ enum SegmentRelation3dDirectionConstants SegmentDirectionType,
        /*[out,retval]*/ struct SegmentDirectionRelation3d * * SegmentDirectionRelation3d ) = 0;
      virtual HRESULT __stdcall raw_AddSegmentDistance (
        /*[in]*/ IDispatch * Element1,
        /*[in]*/ enum SegmentRelation3dGeometryConstants SegmentGeometryType1,
        /*[in]*/ IDispatch * Element2,
        /*[in]*/ enum SegmentRelation3dGeometryConstants SegmentGeometryType2,
        /*[in]*/ IDispatch * RefPlane,
        /*[in]*/ enum SegmentRelation3dDistanceConstants SegmentDistanceType,
        /*[in]*/ double Distance,
        /*[out,retval]*/ struct SegmentDistanceRelation3d * * SegmentDistanceRelation3d ) = 0;
      virtual HRESULT __stdcall raw_AddSegmentRadius (
        /*[in]*/ IDispatch * Element,
        /*[in]*/ double Radius,
        /*[out,retval]*/ struct SegmentRadiusRelation3d * * SegmentRadiusRelation3d ) = 0;
      virtual HRESULT __stdcall raw_AddSegmentAngular (
        /*[in]*/ IDispatch * Element1,
        /*[in]*/ enum SegmentRelation3dGeometryConstants SegmentGeometryType1,
        /*[in]*/ IDispatch * Element2,
        /*[in]*/ enum SegmentRelation3dGeometryConstants SegmentGeometryType2,
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL vbSegAngleFromPositiveDir,
        /*[in]*/ VARIANT_BOOL vbSegAngleToPositiveDir,
        /*[in]*/ VARIANT_BOOL vbSegAngleCCW,
        /*[out,retval]*/ struct SegmentAngularRelation3d * * SegmentAngularRelation3d ) = 0;
      virtual HRESULT __stdcall raw_AddSegmentPoint (
        /*[in]*/ IDispatch * Element1,
        /*[in]*/ enum SegmentRelation3dGeometryConstants SegmentGeometryType1,
        /*[in]*/ IDispatch * Element2,
        /*[in]*/ enum SegmentRelation3dGeometryConstants SegmentGeometryType2,
        /*[out,retval]*/ struct SegmentPointRelation3d * * SegmentPointRelation3d ) = 0;
      virtual HRESULT __stdcall raw_AddSegmentTangent (
        /*[in]*/ IDispatch * Element1,
        /*[in]*/ IDispatch * Element2,
        /*[out,retval]*/ struct SegmentTangentRelation3d * * SegmentTangentRelation3d ) = 0;
};

struct __declspec(uuid("979eb35e-4169-11d4-b991-0004ac969177"))
_ISegmentTangentRelation3dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum SegmentRelation3dStatusConstants Status;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum SegmentRelation3dStatusConstants GetStatus ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    HRESULT GetElement1 (
        IDispatch * * Element1,
        enum TGFramework::ObjectType * Type,
        enum SegmentRelation3dGeometryConstants * GeometryType );
    HRESULT GetElement2 (
        IDispatch * * Element2,
        enum TGFramework::ObjectType * Type,
        enum SegmentRelation3dGeometryConstants * GeometryType );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ IDispatch * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall raw_Select (
        /*[in]*/ VARIANT_BOOL Replace ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum SegmentRelation3dStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall raw_GetElement1 (
        /*[out]*/ IDispatch * * Element1,
        /*[out]*/ enum TGFramework::ObjectType * Type,
        /*[out]*/ enum SegmentRelation3dGeometryConstants * GeometryType ) = 0;
      virtual HRESULT __stdcall raw_GetElement2 (
        /*[out]*/ IDispatch * * Element2,
        /*[out]*/ enum TGFramework::ObjectType * Type,
        /*[out]*/ enum SegmentRelation3dGeometryConstants * GeometryType ) = 0;
};

struct __declspec(uuid("dc6efc2a-52b5-11d4-b995-0004ac969177"))
Queries : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetQueryName))
    _bstr_t QueryName[];
    __declspec(property(get=GetQuickQuery))
    QueryPtr QuickQuery;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    QueryPtr Item (
        const _variant_t & Index );
    QueryPtr Add (
        _bstr_t QueryName );
    HRESULT Remove (
        _bstr_t QueryName );
    HRESULT Rename (
        _bstr_t OldQueryName,
        _bstr_t NewQueryName );
    HRESULT Cut (
        _bstr_t QueryName );
    QueryPtr Paste (
        _bstr_t QueryName );
    _bstr_t GetQueryName (
        struct Query * Query );
    QueryPtr GetQuickQuery ( );
};

struct __declspec(uuid("ab912984-52b5-11d4-b995-0004ac969177"))
Query : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetScope,put=PutScope))
    enum QueryScopeConstants Scope;
    __declspec(property(get=GetSearchSubassemblies,put=PutSearchSubassemblies))
    VARIANT_BOOL SearchSubassemblies;
    __declspec(property(get=GetLoadSubassemblies,put=PutLoadSubassemblies))
    VARIANT_BOOL LoadSubassemblies;
    __declspec(property(get=GetCriteriaCount))
    long CriteriaCount;
    __declspec(property(get=GetCriteria))
    _variant_t Criteria;
    __declspec(property(get=GetMatchesCount))
    long MatchesCount;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    enum QueryScopeConstants GetScope ( );
    void PutScope (
        enum QueryScopeConstants _arg1 );
    VARIANT_BOOL GetSearchSubassemblies ( );
    void PutSearchSubassemblies (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetLoadSubassemblies ( );
    void PutLoadSubassemblies (
        VARIANT_BOOL _arg1 );
    long GetCriteriaCount ( );
    _variant_t GetCriteria ( );
    HRESULT AddCriteria (
        enum QueryPropertyConstants QueryProperty,
        _bstr_t CustomPropertyName,
        enum QueryConditionConstants QueryCondition,
        const _variant_t & Value );
    HRESULT RemoveCriteria (
        enum QueryPropertyConstants QueryProperty,
        _bstr_t CustomPropertyName,
        enum QueryConditionConstants QueryCondition,
        const _variant_t & Value );
    HRESULT RemoveAllCriteria ( );
    long GetMatchesCount ( );
    HRESULT CopyToClipboard ( );
    HRESULT PopulateFromClipboard ( );
};

struct __declspec(uuid("8d45e7a2-52b6-11d4-b995-0004ac969177"))
_IQueriesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetQueryName))
    _bstr_t QueryName[];
    __declspec(property(get=GetQuickQuery))
    QueryPtr QuickQuery;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    QueryPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    QueryPtr Add (
        _bstr_t QueryName );
    HRESULT Remove (
        _bstr_t QueryName );
    HRESULT Rename (
        _bstr_t OldQueryName,
        _bstr_t NewQueryName );
    HRESULT Cut (
        _bstr_t QueryName );
    QueryPtr Paste (
        _bstr_t QueryName );
    _bstr_t GetQueryName (
        struct Query * Query );
    QueryPtr GetQuickQuery ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Query * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Unknown ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR QueryName,
        /*[out,retval]*/ struct Query * * Query ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ BSTR QueryName ) = 0;
      virtual HRESULT __stdcall raw_Rename (
        /*[in]*/ BSTR OldQueryName,
        /*[in]*/ BSTR NewQueryName ) = 0;
      virtual HRESULT __stdcall raw_Cut (
        /*[in]*/ BSTR QueryName ) = 0;
      virtual HRESULT __stdcall raw_Paste (
        /*[in]*/ BSTR QueryName,
        /*[out,retval]*/ struct Query * * Query ) = 0;
      virtual HRESULT __stdcall get_QueryName (
        /*[in]*/ struct Query * Query,
        /*[out,retval]*/ BSTR * QueryName ) = 0;
      virtual HRESULT __stdcall get_QuickQuery (
        /*[out,retval]*/ struct Query * * Query ) = 0;
};

enum QueryScopeConstants
{
    seQueryScopeAllParts = 0,
    seQueryScopeShownParts = 1,
    seQueryScopeHiddenParts = 2,
    seQueryScopeSelectedParts = 3
};

enum QueryPropertyConstants
{
    seQueryPropertyName = 0,
    seQueryPropertyTitle = 1,
    seQueryPropertySubject = 2,
    seQueryPropertyAuthor = 3,
    seQueryPropertyManager = 4,
    seQueryPropertyCompany = 5,
    seQueryPropertyCategory = 6,
    seQueryPropertyKeywords = 7,
    seQueryPropertyComments = 8,
    seQueryPropertyDocumentNumber = 9,
    seQueryPropertyRevisionNumber = 10,
    seQueryPropertyProject = 11,
    seQueryPropertyMaterial = 12,
    seQueryPropertyStatus = 13,
    seQueryPropertyReference = 14,
    seQueryPropertyCustom = 15,
    seQueryPropertyCustomOccurrence = 16
};

enum QueryConditionConstants
{
    seQueryConditionContains = 0,
    seQueryConditionIs = 1,
    seQueryConditionIsNot = 2
};

struct __declspec(uuid("60b7f5c2-52b6-11d4-b995-0004ac969177"))
_IQueryAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetScope,put=PutScope))
    enum QueryScopeConstants Scope;
    __declspec(property(get=GetSearchSubassemblies,put=PutSearchSubassemblies))
    VARIANT_BOOL SearchSubassemblies;
    __declspec(property(get=GetLoadSubassemblies,put=PutLoadSubassemblies))
    VARIANT_BOOL LoadSubassemblies;
    __declspec(property(get=GetCriteriaCount))
    long CriteriaCount;
    __declspec(property(get=GetCriteria))
    _variant_t Criteria;
    __declspec(property(get=GetMatchesCount))
    long MatchesCount;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    enum QueryScopeConstants GetScope ( );
    void PutScope (
        enum QueryScopeConstants Scope );
    VARIANT_BOOL GetSearchSubassemblies ( );
    void PutSearchSubassemblies (
        VARIANT_BOOL SearchSubassemblies );
    VARIANT_BOOL GetLoadSubassemblies ( );
    void PutLoadSubassemblies (
        VARIANT_BOOL LoadSubassemblies );
    long GetCriteriaCount ( );
    _variant_t GetCriteria ( );
    HRESULT AddCriteria (
        enum QueryPropertyConstants QueryProperty,
        _bstr_t CustomPropertyName,
        enum QueryConditionConstants QueryCondition,
        const _variant_t & Value );
    HRESULT RemoveCriteria (
        enum QueryPropertyConstants QueryProperty,
        _bstr_t CustomPropertyName,
        enum QueryConditionConstants QueryCondition,
        const _variant_t & Value );
    HRESULT RemoveAllCriteria ( );
    long GetMatchesCount ( );
    HRESULT CopyToClipboard ( );
    HRESULT PopulateFromClipboard ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Scope (
        /*[out,retval]*/ enum QueryScopeConstants * Scope ) = 0;
      virtual HRESULT __stdcall put_Scope (
        /*[in]*/ enum QueryScopeConstants Scope ) = 0;
      virtual HRESULT __stdcall get_SearchSubassemblies (
        /*[out,retval]*/ VARIANT_BOOL * SearchSubassemblies ) = 0;
      virtual HRESULT __stdcall put_SearchSubassemblies (
        /*[in]*/ VARIANT_BOOL SearchSubassemblies ) = 0;
      virtual HRESULT __stdcall get_LoadSubassemblies (
        /*[out,retval]*/ VARIANT_BOOL * LoadSubassemblies ) = 0;
      virtual HRESULT __stdcall put_LoadSubassemblies (
        /*[in]*/ VARIANT_BOOL LoadSubassemblies ) = 0;
      virtual HRESULT __stdcall get_CriteriaCount (
        /*[out,retval]*/ long * CriteriaCount ) = 0;
      virtual HRESULT __stdcall get_Criteria (
        /*[out,retval]*/ VARIANT * Criteria ) = 0;
      virtual HRESULT __stdcall raw_AddCriteria (
        /*[in]*/ enum QueryPropertyConstants QueryProperty,
        /*[in]*/ BSTR CustomPropertyName,
        /*[in]*/ enum QueryConditionConstants QueryCondition,
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall raw_RemoveCriteria (
        /*[in]*/ enum QueryPropertyConstants QueryProperty,
        /*[in]*/ BSTR CustomPropertyName,
        /*[in]*/ enum QueryConditionConstants QueryCondition,
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall raw_RemoveAllCriteria ( ) = 0;
      virtual HRESULT __stdcall get_MatchesCount (
        /*[out,retval]*/ long * MatchesCount ) = 0;
      virtual HRESULT __stdcall raw_CopyToClipboard ( ) = 0;
      virtual HRESULT __stdcall raw_PopulateFromClipboard ( ) = 0;
};

struct __declspec(uuid("72ba62ee-89f1-4326-9676-4efcf2cf1f66"))
AssemblyFamilyMembers : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetGlobalEditMode,put=PutGlobalEditMode))
    VARIANT_BOOL GlobalEditMode;
    __declspec(property(get=GetVariable))
    IDispatchPtr Variable[];
    __declspec(property(get=GetVariableCount))
    long VariableCount;
    __declspec(property(get=GetActiveMember))
    _bstr_t ActiveMember;
    __declspec(property(get=GetAlternateAssemblyType))
    enum AlternateAssemblyTypeConstants AlternateAssemblyType;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyFamilyMemberPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    AssemblyFamilyMemberPtr NewMember (
        _bstr_t MemberName );
    HRESULT DeleteMember (
        _bstr_t MemberName );
    HRESULT ActivateMember (
        _bstr_t MemberName );
    HRESULT SaveMember (
        _bstr_t MemberName,
        _bstr_t FileNameWithPath );
    void PutGlobalEditMode (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetGlobalEditMode ( );
    HRESULT AddVariable (
        IDispatch * Variable );
    HRESULT RemoveVariable (
        IDispatch * Variable );
    IDispatchPtr GetVariable (
        int Index );
    long GetVariableCount ( );
    HRESULT SaveAllMembers (
        VARIANT_BOOL ChangeGeometricVersion );
    _bstr_t GetActiveMember ( );
    enum AlternateAssemblyTypeConstants GetAlternateAssemblyType ( );
    HRESULT RenameMember (
        _bstr_t CurrentMemberName,
        _bstr_t NewMemberName );
    _bstr_t SaveMemberBiDM (
        _bstr_t MemberName,
        _bstr_t FileNameWithPath,
        _bstr_t DocumentNumber,
        _bstr_t Revision,
        _bstr_t Title );
    HRESULT SetMembersToPopulate (
        long NumMembers,
        SAFEARRAY * pMembersToPopulate );
    HRESULT SavePopulatedMembers ( );
};

struct __declspec(uuid("ff8b1ea6-f7f4-48d7-9fc8-39ee0293d8fd"))
AssemblyFamilyMember : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetMemberProperties))
    _bstr_t MemberProperties[];
    __declspec(property(get=GetMemberName))
    _bstr_t MemberName;
    __declspec(property(get=GetProperties))
    IDispatchPtr Properties;
    __declspec(property(get=GetEnablePopulate,put=PutEnablePopulate))
    VARIANT_BOOL EnablePopulate;
    __declspec(property(get=GetMemberStatus))
    enum AssemblyFamilyMemberStatusConstants MemberStatus;
    __declspec(property(get=GetSkipUpdateDuringSave,put=PutSkipUpdateDuringSave))
    VARIANT_BOOL SkipUpdateDuringSave;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT RemoveExcludedAttachment (
        IDispatch * AttachmentToRemove );
    HRESULT RemoveExcludedRelationship (
        IDispatch * ConstraintToRemove );
    HRESULT AddOccurrence (
        IDispatch * Occurrence,
        _bstr_t MemberName );
    HRESULT SetVariableValue (
        IDispatch * Variable,
        double ValueToSet );
    _bstr_t GetMemberProperties (
        enum AssemblyFamilyMemberPropertyConstants PropertyID );
    HRESULT SetMemberProperties (
        enum AssemblyFamilyMemberPropertyConstants PropertyID,
        _bstr_t PropertyString );
    _bstr_t GetMemberName ( );
    HRESULT IncludeObject (
        IDispatch * ObjectToInclude );
    HRESULT ExcludeObject (
        IDispatch * ObjectToExclude );
    IDispatchPtr GetProperties ( );
    VARIANT_BOOL GetEnablePopulate ( );
    void PutEnablePopulate (
        VARIANT_BOOL _arg1 );
    enum AssemblyFamilyMemberStatusConstants GetMemberStatus ( );
    VARIANT_BOOL GetSkipUpdateDuringSave ( );
    void PutSkipUpdateDuringSave (
        VARIANT_BOOL _arg1 );
    HRESULT GetSuppressedComponentsOfMember (
        enum AssemblyComponentTypeConstants ComponentType,
        long * SuppressedComponentCount,
        SAFEARRAY * * SuppressedComponents );
};

enum AssemblyFamilyMemberPropertyConstants
{
    seAssemblyFamilyMemberPropertyDocumentNumber = 0,
    seAssemblyFamilyMemberPropertyRevisionNumber = 1,
    seAssemblyFamilyMemberPropertyProjectName = 2
};

enum AssemblyFamilyMemberStatusConstants
{
    seAssemblyFamilyMemberStatusUpToDate = 0,
    seAssemblyFamilyMemberStatusNotPopulated = 1,
    seAssemblyFamilyMemberStatusPopulatedAndOutOfDate = 2
};

enum AssemblyComponentTypeConstants
{
    seAssemblyComponentTypeAll = 0,
    seAssemblyComponentTypeReference = 1,
    seAssemblyComponentTypeFramePart = 2,
    seAssemblyComponentTypeEndCapPart = 3,
    seAssemblyComponentTypePatterns = 4,
    seAssemblyComponentTypePipe = 5,
    seAssemblyComponentTypeBoltedConnection = 6
};

struct __declspec(uuid("c4b8b7fd-804d-4498-8419-c31f38067fbf"))
_IAssemblyFamilyMemberAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetMemberProperties))
    _bstr_t MemberProperties[];
    __declspec(property(get=GetMemberName))
    _bstr_t MemberName;
    __declspec(property(get=GetProperties))
    IDispatchPtr Properties;
    __declspec(property(get=GetEnablePopulate,put=PutEnablePopulate))
    VARIANT_BOOL EnablePopulate;
    __declspec(property(get=GetMemberStatus))
    enum AssemblyFamilyMemberStatusConstants MemberStatus;
    __declspec(property(get=GetSkipUpdateDuringSave,put=PutSkipUpdateDuringSave))
    VARIANT_BOOL SkipUpdateDuringSave;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT RemoveExcludedAttachment (
        IDispatch * AttachmentToRemove );
    HRESULT RemoveExcludedRelationship (
        IDispatch * ConstraintToRemove );
    HRESULT AddOccurrence (
        IDispatch * Occurrence,
        _bstr_t MemberName );
    HRESULT SetVariableValue (
        IDispatch * Variable,
        double ValueToSet );
    _bstr_t GetMemberProperties (
        enum AssemblyFamilyMemberPropertyConstants PropertyID );
    HRESULT SetMemberProperties (
        enum AssemblyFamilyMemberPropertyConstants PropertyID,
        _bstr_t PropertyString );
    _bstr_t GetMemberName ( );
    HRESULT IncludeObject (
        IDispatch * ObjectToInclude );
    HRESULT ExcludeObject (
        IDispatch * ObjectToExclude );
    IDispatchPtr GetProperties ( );
    VARIANT_BOOL GetEnablePopulate ( );
    void PutEnablePopulate (
        VARIANT_BOOL EnablePopulate );
    enum AssemblyFamilyMemberStatusConstants GetMemberStatus ( );
    VARIANT_BOOL GetSkipUpdateDuringSave ( );
    void PutSkipUpdateDuringSave (
        VARIANT_BOOL SkipUpdate );
    HRESULT GetSuppressedComponentsOfMember (
        enum AssemblyComponentTypeConstants ComponentType,
        long * SuppressedComponentCount,
        SAFEARRAY * * SuppressedComponents );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_RemoveExcludedAttachment (
        /*[in]*/ IDispatch * AttachmentToRemove ) = 0;
      virtual HRESULT __stdcall raw_RemoveExcludedRelationship (
        /*[in]*/ IDispatch * ConstraintToRemove ) = 0;
      virtual HRESULT __stdcall raw_AddOccurrence (
        /*[in]*/ IDispatch * Occurrence,
        /*[in]*/ BSTR MemberName ) = 0;
      virtual HRESULT __stdcall raw_SetVariableValue (
        /*[in]*/ IDispatch * Variable,
        /*[in]*/ double ValueToSet ) = 0;
      virtual HRESULT __stdcall get_MemberProperties (
        /*[in]*/ enum AssemblyFamilyMemberPropertyConstants PropertyID,
        /*[out,retval]*/ BSTR * PropertyString ) = 0;
      virtual HRESULT __stdcall raw_SetMemberProperties (
        /*[in]*/ enum AssemblyFamilyMemberPropertyConstants PropertyID,
        /*[in]*/ BSTR PropertyString ) = 0;
      virtual HRESULT __stdcall get_MemberName (
        /*[out,retval]*/ BSTR * MemberName ) = 0;
      virtual HRESULT __stdcall raw_IncludeObject (
        /*[in]*/ IDispatch * ObjectToInclude ) = 0;
      virtual HRESULT __stdcall raw_ExcludeObject (
        /*[in]*/ IDispatch * ObjectToExclude ) = 0;
      virtual HRESULT __stdcall get_Properties (
        /*[out,retval]*/ IDispatch * * Properties ) = 0;
      virtual HRESULT __stdcall get_EnablePopulate (
        /*[out,retval]*/ VARIANT_BOOL * EnablePopulate ) = 0;
      virtual HRESULT __stdcall put_EnablePopulate (
        /*[in]*/ VARIANT_BOOL EnablePopulate ) = 0;
      virtual HRESULT __stdcall get_MemberStatus (
        /*[out,retval]*/ enum AssemblyFamilyMemberStatusConstants * MemberStatus ) = 0;
      virtual HRESULT __stdcall get_SkipUpdateDuringSave (
        /*[out,retval]*/ VARIANT_BOOL * SkipUpdate ) = 0;
      virtual HRESULT __stdcall put_SkipUpdateDuringSave (
        /*[in]*/ VARIANT_BOOL SkipUpdate ) = 0;
      virtual HRESULT __stdcall raw_GetSuppressedComponentsOfMember (
        /*[in]*/ enum AssemblyComponentTypeConstants ComponentType,
        /*[out]*/ long * SuppressedComponentCount,
        /*[out]*/ SAFEARRAY * * SuppressedComponents ) = 0;
};

enum AlternateAssemblyTypeConstants
{
    seAlternateAssemblyType_Family = 1,
    seAlternateAssemblyType_AlternatePosition = 2
};

struct __declspec(uuid("e45b8c3e-79a5-45e3-bfea-e352b8972afb"))
_IAssemblyFamilyMembersAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetGlobalEditMode,put=PutGlobalEditMode))
    VARIANT_BOOL GlobalEditMode;
    __declspec(property(get=GetVariable))
    IDispatchPtr Variable[];
    __declspec(property(get=GetVariableCount))
    long VariableCount;
    __declspec(property(get=GetActiveMember))
    _bstr_t ActiveMember;
    __declspec(property(get=GetAlternateAssemblyType))
    enum AlternateAssemblyTypeConstants AlternateAssemblyType;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyFamilyMemberPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    AssemblyFamilyMemberPtr NewMember (
        _bstr_t MemberName );
    HRESULT DeleteMember (
        _bstr_t MemberName );
    HRESULT ActivateMember (
        _bstr_t MemberName );
    HRESULT SaveMember (
        _bstr_t MemberName,
        _bstr_t FileNameWithPath );
    void PutGlobalEditMode (
        VARIANT_BOOL GlobalEdit );
    VARIANT_BOOL GetGlobalEditMode ( );
    HRESULT AddVariable (
        IDispatch * Variable );
    HRESULT RemoveVariable (
        IDispatch * Variable );
    IDispatchPtr GetVariable (
        int Index );
    long GetVariableCount ( );
    HRESULT SaveAllMembers (
        VARIANT_BOOL ChangeGeometricVersion );
    _bstr_t GetActiveMember ( );
    enum AlternateAssemblyTypeConstants GetAlternateAssemblyType ( );
    HRESULT RenameMember (
        _bstr_t CurrentMemberName,
        _bstr_t NewMemberName );
    _bstr_t SaveMemberBiDM (
        _bstr_t MemberName,
        _bstr_t FileNameWithPath,
        _bstr_t DocumentNumber,
        _bstr_t Revision,
        _bstr_t Title );
    HRESULT SetMembersToPopulate (
        long NumMembers,
        SAFEARRAY * pMembersToPopulate );
    HRESULT SavePopulatedMembers ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct AssemblyFamilyMember * * Item ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall raw_NewMember (
        /*[in]*/ BSTR MemberName,
        /*[out,retval]*/ struct AssemblyFamilyMember * * AssemblyFamilyMember ) = 0;
      virtual HRESULT __stdcall raw_DeleteMember (
        /*[in]*/ BSTR MemberName ) = 0;
      virtual HRESULT __stdcall raw_ActivateMember (
        /*[in]*/ BSTR MemberName ) = 0;
      virtual HRESULT __stdcall raw_SaveMember (
        /*[in]*/ BSTR MemberName,
        /*[in]*/ BSTR FileNameWithPath ) = 0;
      virtual HRESULT __stdcall put_GlobalEditMode (
        /*[in]*/ VARIANT_BOOL GlobalEdit ) = 0;
      virtual HRESULT __stdcall get_GlobalEditMode (
        /*[out,retval]*/ VARIANT_BOOL * GlobalEdit ) = 0;
      virtual HRESULT __stdcall raw_AddVariable (
        /*[in]*/ IDispatch * Variable ) = 0;
      virtual HRESULT __stdcall raw_RemoveVariable (
        /*[in]*/ IDispatch * Variable ) = 0;
      virtual HRESULT __stdcall get_Variable (
        /*[in]*/ int Index,
        /*[out,retval]*/ IDispatch * * Variable ) = 0;
      virtual HRESULT __stdcall get_VariableCount (
        /*[out,retval]*/ long * VariableCount ) = 0;
      virtual HRESULT __stdcall raw_SaveAllMembers (
        /*[in]*/ VARIANT_BOOL ChangeGeometricVersion ) = 0;
      virtual HRESULT __stdcall get_ActiveMember (
        /*[out,retval]*/ BSTR * ActiveMemberName ) = 0;
      virtual HRESULT __stdcall get_AlternateAssemblyType (
        /*[out,retval]*/ enum AlternateAssemblyTypeConstants * AlternateAssemblyType ) = 0;
      virtual HRESULT __stdcall raw_RenameMember (
        /*[in]*/ BSTR CurrentMemberName,
        /*[in]*/ BSTR NewMemberName ) = 0;
      virtual HRESULT __stdcall raw_SaveMemberBiDM (
        /*[in]*/ BSTR MemberName,
        /*[in]*/ BSTR FileNameWithPath,
        /*[in]*/ BSTR DocumentNumber,
        /*[in]*/ BSTR Revision,
        /*[in]*/ BSTR Title,
        /*[out,retval]*/ BSTR * NewFileName ) = 0;
      virtual HRESULT __stdcall raw_SetMembersToPopulate (
        /*[in]*/ long NumMembers,
        SAFEARRAY * pMembersToPopulate ) = 0;
      virtual HRESULT __stdcall raw_SavePopulatedMembers ( ) = 0;
};

struct __declspec(uuid("402df72e-e673-11d4-bbd4-00c04f72e273"))
AssemblyPatterns : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyPatternPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    AssemblyPatternPtr Find (
        _bstr_t PatternName );
    HRESULT Delete (
        _bstr_t PatternName );
    HRESULT Drop (
        _bstr_t PatternName );
    AssemblyPatternPtr Create (
        _bstr_t PatternName,
        SAFEARRAY * * MasterOccurrences,
        IDispatch * FeaturePattern,
        IDispatch * ReferenceFeature );
    AssemblyPatternPtr CreateAlongCurve (
        long NumberOfMasters,
        SAFEARRAY * * MasterOccs,
        long NumberOfCurves1,
        SAFEARRAY * * Curves1,
        IDispatch * AnchorPointForCurves1,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1,
        double AnchorAtDistanceForCurves1,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1,
        long NumberOfOccurrencesForCurves1,
        double OccurrenceSpacingForCurves1,
        long NumberOfCurves2,
        SAFEARRAY * * Curves2,
        IDispatch * AnchorPointForCurves2,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2,
        double AnchorAtDistanceForCurves2,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2,
        long NumberOfOccurrencesForCurves2,
        double OccurrenceSpacingForCurves2,
        enum TGPart::PatternTransformTypeConstants TransformType,
        enum TGPart::PatternTransformRotateTypeConstants TransformRotateType,
        IDispatch * TransformPlaneOrSurface,
        _bstr_t bstrName,
        const _variant_t & FutureUse1 = vtMissing,
        const _variant_t & FutureUse2 = vtMissing,
        const _variant_t & FutureUse3 = vtMissing );
    AssemblyPatternPtr CreateDuplicate (
        _bstr_t PatternName,
        long NumberOfMasters,
        SAFEARRAY * * MasterOccurrences,
        IDispatch * FromOccurrence,
        long NumberOfToOccurrences,
        SAFEARRAY * * ToOccurrences );
    AssemblyPatternPtr CreateAlongCurveEx (
        long NumberOfMasters,
        SAFEARRAY * * MasterOccs,
        long NumberOfCurves1,
        SAFEARRAY * * Curves1,
        IDispatch * AnchorPointForCurves1,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1,
        double AnchorAtDistanceForCurves1,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1,
        long NumberOfOccurrencesForCurves1,
        double OccurrenceSpacingForCurves1,
        long NumberOfCurves2,
        SAFEARRAY * * Curves2,
        IDispatch * AnchorPointForCurves2,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2,
        double AnchorAtDistanceForCurves2,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2,
        long NumberOfOccurrencesForCurves2,
        double OccurrenceSpacingForCurves2,
        enum TGPart::PatternTransformTypeConstants TransformType,
        enum TGPart::PatternTransformRotateTypeConstants TransformRotateType,
        IDispatch * TransformPlaneOrSurface,
        _bstr_t bstrName,
        long lSkipCount,
        const _variant_t & FutureUse2 = vtMissing,
        const _variant_t & FutureUse3 = vtMissing );
    AssemblyPatternPtr CreateEx (
        _bstr_t PatternName,
        SAFEARRAY * * SourceOccurrences,
        IDispatch * FeaturePattern,
        IDispatch * ReferenceFeature );
    AssemblyPatternPtr CreateAlongCurveEx2 (
        long NumberOfSources,
        SAFEARRAY * * SourceOccs,
        long NumberOfCurves1,
        SAFEARRAY * * Curves1,
        IDispatch * AnchorPointForCurves1,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1,
        double AnchorAtDistanceForCurves1,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1,
        long NumberOfOccurrencesForCurves1,
        double OccurrenceSpacingForCurves1,
        long NumberOfCurves2,
        SAFEARRAY * * Curves2,
        IDispatch * AnchorPointForCurves2,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2,
        double AnchorAtDistanceForCurves2,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2,
        long NumberOfOccurrencesForCurves2,
        double OccurrenceSpacingForCurves2,
        enum TGPart::PatternTransformTypeConstants TransformType,
        enum TGPart::PatternTransformRotateTypeConstants TransformRotateType,
        IDispatch * TransformPlaneOrSurface,
        _bstr_t bstrName,
        const _variant_t & FutureUse1 = vtMissing,
        const _variant_t & FutureUse2 = vtMissing,
        const _variant_t & FutureUse3 = vtMissing );
    AssemblyPatternPtr CreateDuplicateEx (
        _bstr_t PatternName,
        long NumberOfSources,
        SAFEARRAY * * SourceOccurrences,
        IDispatch * FromOccurrence,
        long NumberOfToOccurrences,
        SAFEARRAY * * ToOccurrences );
    AssemblyPatternPtr CreateAlongCurveEx3 (
        long NumberOfSources,
        SAFEARRAY * * SourceOccs,
        long NumberOfCurves1,
        SAFEARRAY * * Curves1,
        IDispatch * AnchorPointForCurves1,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1,
        double AnchorAtDistanceForCurves1,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1,
        long NumberOfOccurrencesForCurves1,
        double OccurrenceSpacingForCurves1,
        long NumberOfCurves2,
        SAFEARRAY * * Curves2,
        IDispatch * AnchorPointForCurves2,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2,
        double AnchorAtDistanceForCurves2,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2,
        long NumberOfOccurrencesForCurves2,
        double OccurrenceSpacingForCurves2,
        enum TGPart::PatternTransformTypeConstants TransformType,
        enum TGPart::PatternTransformRotateTypeConstants TransformRotateType,
        IDispatch * TransformPlaneOrSurface,
        _bstr_t bstrName,
        long lSkipCount,
        const _variant_t & FutureUse2 = vtMissing,
        const _variant_t & FutureUse3 = vtMissing );
    AssemblyPatternPtr CreateAlongCircleWithOccurrences (
        long lNumberOfSources,
        SAFEARRAY * * SourceOccs,
        IDispatch * Axis,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCircle,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCircle,
        VARIANT_BOOL bIsFullCircle,
        double dSweep,
        long lNumberOfOccurrencesForCircle,
        double dSpacing,
        enum TGPart::PatternTransformTypeConstants TransformType,
        long lNumberOfSuppressIDs,
        SAFEARRAY * * SuppressIDs,
        _bstr_t bstrName,
        const _variant_t & FutureUse1 = vtMissing,
        const _variant_t & FutureUse2 = vtMissing );
    AssemblyPatternPtr CreateAlongLineWithOccurrences (
        long lNumberOfSources,
        SAFEARRAY * * SourceOccs,
        IDispatch * DirectionElement1,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForLine1,
        enum TGPart::LinearPatternMethodConstants DirectionMethod1,
        long lCount1,
        double dDistance1,
        IDispatch * DirectionElement2,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForLine2,
        enum TGPart::LinearPatternMethodConstants DirectionMethod2,
        long lCount2,
        double dDistance2,
        long lNumberOfSuppressIDs,
        SAFEARRAY * * SuppressIDs,
        _bstr_t bstrName );
};

struct __declspec(uuid("402df72f-e673-11d4-bbd4-00c04f72e273"))
AssemblyPattern : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyPatternOccurrencePtr Item (
        const _variant_t & Index );
    long GetCount ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t _arg1 );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL _arg1 );
    HRESULT GetInputs (
        SAFEARRAY * * MasterOccurrences,
        IDispatch * * FeaturePattern,
        SAFEARRAY * * ReferenceFeatures );
    HRESULT Edit (
        SAFEARRAY * * MasterOccurrences,
        IDispatch * FeaturePattern,
        IDispatch * ReferenceFeature,
        _bstr_t Name );
    HRESULT GetOccurrences (
        SAFEARRAY * * Occurrences );
    enum AssemblyPatternTypeConstants PatternType ( );
    HRESULT EditDuplicate (
        long NumberOfMasters,
        SAFEARRAY * * MasterOccurrences,
        IDispatch * FromOccurrence,
        long NumberOfToOccurrences,
        SAFEARRAY * * ToOccurrences,
        _bstr_t Name );
    HRESULT EditAlongCurve (
        long NumberOfMasters,
        SAFEARRAY * * MasterOccs,
        long NumberOfCurves1,
        SAFEARRAY * * Curves1,
        IDispatch * AnchorPointForCurves1,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1,
        double AnchorAtDistanceForCurves1,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1,
        long NumberOfOccurrencesForCurves1,
        double OccurrenceSpacingForCurves1,
        long NumberOfCurves2,
        SAFEARRAY * * Curves2,
        IDispatch * AnchorPointForCurves2,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2,
        double AnchorAtDistanceForCurves2,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2,
        long NumberOfOccurrencesForCurves2,
        double OccurrenceSpacingForCurves2,
        enum TGPart::PatternTransformTypeConstants TransformType,
        enum TGPart::PatternTransformRotateTypeConstants TransformRotateType,
        IDispatch * TransformPlaneOrSurface,
        _bstr_t Name,
        const _variant_t & FutureUse1 = vtMissing,
        const _variant_t & FutureUse2 = vtMissing,
        const _variant_t & FutureUse3 = vtMissing );
    HRESULT EditAlongCurveEx (
        long NumberOfMasters,
        SAFEARRAY * * MasterOccs,
        long NumberOfCurves1,
        SAFEARRAY * * Curves1,
        IDispatch * AnchorPointForCurves1,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1,
        double AnchorAtDistanceForCurves1,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1,
        long NumberOfOccurrencesForCurves1,
        double OccurrenceSpacingForCurves1,
        long NumberOfCurves2,
        SAFEARRAY * * Curves2,
        IDispatch * AnchorPointForCurves2,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2,
        double AnchorAtDistanceForCurves2,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2,
        long NumberOfOccurrencesForCurves2,
        double OccurrenceSpacingForCurves2,
        enum TGPart::PatternTransformTypeConstants TransformType,
        enum TGPart::PatternTransformRotateTypeConstants TransformRotateType,
        IDispatch * TransformPlaneOrSurface,
        _bstr_t Name,
        long lSkipCount,
        const _variant_t & FutureUse2 = vtMissing,
        const _variant_t & FutureUse3 = vtMissing );
    HRESULT GetPatternData (
        long * NumberOfMasters,
        SAFEARRAY * * MasterOccs,
        long * NumberOfCurves1,
        SAFEARRAY * * Curves1,
        IDispatch * * AnchorPointForCurves1,
        enum TGPart::PatternCurveAnchorSideConstants * AnchorSideForCurves1,
        double * AnchorAtDistanceForCurves1,
        enum PatternOffsetTypeConstants * PatternOffsetTypeForCurves1,
        long * NumberOfOccurrencesForCurves1,
        double * OccurrenceSpacingForCurves1,
        long * NumberOfCurves2,
        SAFEARRAY * * Curves2,
        IDispatch * * AnchorPointForCurves2,
        enum TGPart::PatternCurveAnchorSideConstants * AnchorSideForCurves2,
        double * AnchorAtDistanceForCurves2,
        enum PatternOffsetTypeConstants * PatternOffsetTypeForCurves2,
        long * NumberOfOccurrencesForCurves2,
        double * OccurrenceSpacingForCurves2,
        enum TGPart::PatternTransformTypeConstants * TransformType,
        enum TGPart::PatternTransformRotateTypeConstants * TransformRotateType,
        IDispatch * * TransformPlaneOrSurface,
        BSTR * Name,
        long * SkipCount );
    HRESULT GetInputsEx (
        SAFEARRAY * * SourceOccurrences,
        IDispatch * * FeaturePattern,
        SAFEARRAY * * ReferenceFeatures );
    HRESULT EditEx (
        SAFEARRAY * * SourceOccurrences,
        IDispatch * FeaturePattern,
        IDispatch * ReferenceFeature,
        _bstr_t Name );
    HRESULT EditDuplicateEx (
        long NumberOfSources,
        SAFEARRAY * * SourceOccurrences,
        IDispatch * FromOccurrence,
        long NumberOfToOccurrences,
        SAFEARRAY * * ToOccurrences,
        _bstr_t Name );
    HRESULT EditAlongCurveEx2 (
        long NumberOfSources,
        SAFEARRAY * * SourceOccs,
        long NumberOfCurves1,
        SAFEARRAY * * Curves1,
        IDispatch * AnchorPointForCurves1,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1,
        double AnchorAtDistanceForCurves1,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1,
        long NumberOfOccurrencesForCurves1,
        double OccurrenceSpacingForCurves1,
        long NumberOfCurves2,
        SAFEARRAY * * Curves2,
        IDispatch * AnchorPointForCurves2,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2,
        double AnchorAtDistanceForCurves2,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2,
        long NumberOfOccurrencesForCurves2,
        double OccurrenceSpacingForCurves2,
        enum TGPart::PatternTransformTypeConstants TransformType,
        enum TGPart::PatternTransformRotateTypeConstants TransformRotateType,
        IDispatch * TransformPlaneOrSurface,
        _bstr_t Name,
        const _variant_t & FutureUse1 = vtMissing,
        const _variant_t & FutureUse2 = vtMissing,
        const _variant_t & FutureUse3 = vtMissing );
    HRESULT EditAlongCurveEx3 (
        long NumberOfSources,
        SAFEARRAY * * SourceOccs,
        long NumberOfCurves1,
        SAFEARRAY * * Curves1,
        IDispatch * AnchorPointForCurves1,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1,
        double AnchorAtDistanceForCurves1,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1,
        long NumberOfOccurrencesForCurves1,
        double OccurrenceSpacingForCurves1,
        long NumberOfCurves2,
        SAFEARRAY * * Curves2,
        IDispatch * AnchorPointForCurves2,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2,
        double AnchorAtDistanceForCurves2,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2,
        long NumberOfOccurrencesForCurves2,
        double OccurrenceSpacingForCurves2,
        enum TGPart::PatternTransformTypeConstants TransformType,
        enum TGPart::PatternTransformRotateTypeConstants TransformRotateType,
        IDispatch * TransformPlaneOrSurface,
        _bstr_t Name,
        long lSkipCount,
        const _variant_t & FutureUse2 = vtMissing,
        const _variant_t & FutureUse3 = vtMissing );
    HRESULT GetPatternDataEx (
        long * NumberOfSources,
        SAFEARRAY * * SourceOccs,
        long * NumberOfCurves1,
        SAFEARRAY * * Curves1,
        IDispatch * * AnchorPointForCurves1,
        enum TGPart::PatternCurveAnchorSideConstants * AnchorSideForCurves1,
        double * AnchorAtDistanceForCurves1,
        enum PatternOffsetTypeConstants * PatternOffsetTypeForCurves1,
        long * NumberOfOccurrencesForCurves1,
        double * OccurrenceSpacingForCurves1,
        long * NumberOfCurves2,
        SAFEARRAY * * Curves2,
        IDispatch * * AnchorPointForCurves2,
        enum TGPart::PatternCurveAnchorSideConstants * AnchorSideForCurves2,
        double * AnchorAtDistanceForCurves2,
        enum PatternOffsetTypeConstants * PatternOffsetTypeForCurves2,
        long * NumberOfOccurrencesForCurves2,
        double * OccurrenceSpacingForCurves2,
        enum TGPart::PatternTransformTypeConstants * TransformType,
        enum TGPart::PatternTransformRotateTypeConstants * TransformRotateType,
        IDispatch * * TransformPlaneOrSurface,
        BSTR * Name,
        long * SkipCount );
    HRESULT EditAlongCircleWithOccurrences (
        long lNumberOfSources,
        SAFEARRAY * * SourceOccs,
        IDispatch * Axis,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCircle,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCircle,
        VARIANT_BOOL bIsFullCircle,
        double dSweep,
        long lNumberOfOccurrencesForCircle,
        double dSpacing,
        enum TGPart::PatternTransformTypeConstants TransformType,
        long lNumberOfSuppressIDs,
        SAFEARRAY * * SuppressIDs,
        _bstr_t bstrName,
        const _variant_t & FutureUse1 = vtMissing,
        const _variant_t & FutureUse2 = vtMissing );
    HRESULT EditAlongLineWithOccurrences (
        long lNumberOfSources,
        SAFEARRAY * * SourceOccs,
        IDispatch * DirectionElement1,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForLine1,
        enum TGPart::LinearPatternMethodConstants DirectionMethod1,
        long lCount1,
        double dDistance1,
        IDispatch * DirectionElement2,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForLine2,
        enum TGPart::LinearPatternMethodConstants DirectionMethod2,
        long lCount2,
        double dDistance2,
        long lNumberOfSuppressIDs,
        SAFEARRAY * * SuppressIDs,
        _bstr_t bstrName );
};

struct __declspec(uuid("ae397250-071d-42e9-94ab-7725140a5d98"))
AssemblyPatternOccurrence : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t _arg1 );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL _arg1 );
    HRESULT GetOccurrences (
        SAFEARRAY * * Occurrences );
    HRESULT GetPosition (
        long * Row,
        long * Col );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL _arg1 );
};

struct __declspec(uuid("93b6f437-c474-41a7-986a-4a32334dbe5a"))
_IAssemblyPatternOccurrenceAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL Visible );
    HRESULT GetOccurrences (
        SAFEARRAY * * Occurrences );
    HRESULT GetPosition (
        long * Row,
        long * Col );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL Suppress );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall raw_GetOccurrences (
        /*[in,out]*/ SAFEARRAY * * Occurrences ) = 0;
      virtual HRESULT __stdcall raw_GetPosition (
        /*[out]*/ long * Row,
        /*[out]*/ long * Col ) = 0;
      virtual HRESULT __stdcall get_Suppress (
        /*[out,retval]*/ VARIANT_BOOL * Suppress ) = 0;
      virtual HRESULT __stdcall put_Suppress (
        /*[in]*/ VARIANT_BOOL Suppress ) = 0;
};

enum AssemblyPatternTypeConstants
{
    seAssemblyPatternType = 1,
    seAssemblyDuplicatePatternType = 2,
    seAssemblyPatternAlongCurveType = 3
};

enum PatternOffsetTypeConstants
{
    sePatternFitOffset = 0,
    sePatternFillOffset = 1,
    sePatternFixedOffset = 2,
    sePatternChordLengthOffset = 3
};

struct __declspec(uuid("402df731-e673-11d4-bbd4-00c04f72e273"))
_IAssemblyPatternsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyPatternPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    AssemblyPatternPtr Find (
        _bstr_t PatternName );
    HRESULT Delete (
        _bstr_t PatternName );
    HRESULT Drop (
        _bstr_t PatternName );
    AssemblyPatternPtr Create (
        _bstr_t PatternName,
        SAFEARRAY * * MasterOccurrences,
        IDispatch * FeaturePattern,
        IDispatch * ReferenceFeature );
    AssemblyPatternPtr CreateAlongCurve (
        long NumberOfMasters,
        SAFEARRAY * * MasterOccs,
        long NumberOfCurves1,
        SAFEARRAY * * Curves1,
        IDispatch * AnchorPointForCurves1,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1,
        double AnchorAtDistanceForCurves1,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1,
        long NumberOfOccurrencesForCurves1,
        double OccurrenceSpacingForCurves1,
        long NumberOfCurves2,
        SAFEARRAY * * Curves2,
        IDispatch * AnchorPointForCurves2,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2,
        double AnchorAtDistanceForCurves2,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2,
        long NumberOfOccurrencesForCurves2,
        double OccurrenceSpacingForCurves2,
        enum TGPart::PatternTransformTypeConstants TransformType,
        enum TGPart::PatternTransformRotateTypeConstants TransformRotateType,
        IDispatch * TransformPlaneOrSurface,
        _bstr_t bstrName,
        const _variant_t & FutureUse1 = vtMissing,
        const _variant_t & FutureUse2 = vtMissing,
        const _variant_t & FutureUse3 = vtMissing );
    AssemblyPatternPtr CreateDuplicate (
        _bstr_t PatternName,
        long NumberOfMasters,
        SAFEARRAY * * MasterOccurrences,
        IDispatch * FromOccurrence,
        long NumberOfToOccurrences,
        SAFEARRAY * * ToOccurrences );
    AssemblyPatternPtr CreateAlongCurveEx (
        long NumberOfMasters,
        SAFEARRAY * * MasterOccs,
        long NumberOfCurves1,
        SAFEARRAY * * Curves1,
        IDispatch * AnchorPointForCurves1,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1,
        double AnchorAtDistanceForCurves1,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1,
        long NumberOfOccurrencesForCurves1,
        double OccurrenceSpacingForCurves1,
        long NumberOfCurves2,
        SAFEARRAY * * Curves2,
        IDispatch * AnchorPointForCurves2,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2,
        double AnchorAtDistanceForCurves2,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2,
        long NumberOfOccurrencesForCurves2,
        double OccurrenceSpacingForCurves2,
        enum TGPart::PatternTransformTypeConstants TransformType,
        enum TGPart::PatternTransformRotateTypeConstants TransformRotateType,
        IDispatch * TransformPlaneOrSurface,
        _bstr_t bstrName,
        long lSkipCount,
        const _variant_t & FutureUse2 = vtMissing,
        const _variant_t & FutureUse3 = vtMissing );
    AssemblyPatternPtr CreateEx (
        _bstr_t PatternName,
        SAFEARRAY * * SourceOccurrences,
        IDispatch * FeaturePattern,
        IDispatch * ReferenceFeature );
    AssemblyPatternPtr CreateAlongCurveEx2 (
        long NumberOfSources,
        SAFEARRAY * * SourceOccs,
        long NumberOfCurves1,
        SAFEARRAY * * Curves1,
        IDispatch * AnchorPointForCurves1,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1,
        double AnchorAtDistanceForCurves1,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1,
        long NumberOfOccurrencesForCurves1,
        double OccurrenceSpacingForCurves1,
        long NumberOfCurves2,
        SAFEARRAY * * Curves2,
        IDispatch * AnchorPointForCurves2,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2,
        double AnchorAtDistanceForCurves2,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2,
        long NumberOfOccurrencesForCurves2,
        double OccurrenceSpacingForCurves2,
        enum TGPart::PatternTransformTypeConstants TransformType,
        enum TGPart::PatternTransformRotateTypeConstants TransformRotateType,
        IDispatch * TransformPlaneOrSurface,
        _bstr_t bstrName,
        const _variant_t & FutureUse1 = vtMissing,
        const _variant_t & FutureUse2 = vtMissing,
        const _variant_t & FutureUse3 = vtMissing );
    AssemblyPatternPtr CreateDuplicateEx (
        _bstr_t PatternName,
        long NumberOfSources,
        SAFEARRAY * * SourceOccurrences,
        IDispatch * FromOccurrence,
        long NumberOfToOccurrences,
        SAFEARRAY * * ToOccurrences );
    AssemblyPatternPtr CreateAlongCurveEx3 (
        long NumberOfSources,
        SAFEARRAY * * SourceOccs,
        long NumberOfCurves1,
        SAFEARRAY * * Curves1,
        IDispatch * AnchorPointForCurves1,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1,
        double AnchorAtDistanceForCurves1,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1,
        long NumberOfOccurrencesForCurves1,
        double OccurrenceSpacingForCurves1,
        long NumberOfCurves2,
        SAFEARRAY * * Curves2,
        IDispatch * AnchorPointForCurves2,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2,
        double AnchorAtDistanceForCurves2,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2,
        long NumberOfOccurrencesForCurves2,
        double OccurrenceSpacingForCurves2,
        enum TGPart::PatternTransformTypeConstants TransformType,
        enum TGPart::PatternTransformRotateTypeConstants TransformRotateType,
        IDispatch * TransformPlaneOrSurface,
        _bstr_t bstrName,
        long lSkipCount,
        const _variant_t & FutureUse2 = vtMissing,
        const _variant_t & FutureUse3 = vtMissing );
    AssemblyPatternPtr CreateAlongCircleWithOccurrences (
        long lNumberOfSources,
        SAFEARRAY * * SourceOccs,
        IDispatch * Axis,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCircle,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCircle,
        VARIANT_BOOL bIsFullCircle,
        double dSweep,
        long lNumberOfOccurrencesForCircle,
        double dSpacing,
        enum TGPart::PatternTransformTypeConstants TransformType,
        long lNumberOfSuppressIDs,
        SAFEARRAY * * SuppressIDs,
        _bstr_t bstrName,
        const _variant_t & FutureUse1 = vtMissing,
        const _variant_t & FutureUse2 = vtMissing );
    AssemblyPatternPtr CreateAlongLineWithOccurrences (
        long lNumberOfSources,
        SAFEARRAY * * SourceOccs,
        IDispatch * DirectionElement1,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForLine1,
        enum TGPart::LinearPatternMethodConstants DirectionMethod1,
        long lCount1,
        double dDistance1,
        IDispatch * DirectionElement2,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForLine2,
        enum TGPart::LinearPatternMethodConstants DirectionMethod2,
        long lCount2,
        double dDistance2,
        long lNumberOfSuppressIDs,
        SAFEARRAY * * SuppressIDs,
        _bstr_t bstrName );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct AssemblyPattern * * Item ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall raw_Find (
        /*[in]*/ BSTR PatternName,
        /*[out,retval]*/ struct AssemblyPattern * * AssemblyPattern ) = 0;
      virtual HRESULT __stdcall raw_Delete (
        /*[in]*/ BSTR PatternName ) = 0;
      virtual HRESULT __stdcall raw_Drop (
        /*[in]*/ BSTR PatternName ) = 0;
      virtual HRESULT __stdcall raw_Create (
        /*[in]*/ BSTR PatternName,
        /*[in]*/ SAFEARRAY * * MasterOccurrences,
        /*[in]*/ IDispatch * FeaturePattern,
        /*[in]*/ IDispatch * ReferenceFeature,
        /*[out,retval]*/ struct AssemblyPattern * * AsmPattern ) = 0;
      virtual HRESULT __stdcall raw_CreateAlongCurve (
        /*[in]*/ long NumberOfMasters,
        /*[in]*/ SAFEARRAY * * MasterOccs,
        /*[in]*/ long NumberOfCurves1,
        /*[in]*/ SAFEARRAY * * Curves1,
        /*[in]*/ IDispatch * AnchorPointForCurves1,
        /*[in]*/ enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1,
        /*[in]*/ double AnchorAtDistanceForCurves1,
        /*[in]*/ enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1,
        /*[in]*/ long NumberOfOccurrencesForCurves1,
        /*[in]*/ double OccurrenceSpacingForCurves1,
        /*[in]*/ long NumberOfCurves2,
        /*[in]*/ SAFEARRAY * * Curves2,
        /*[in]*/ IDispatch * AnchorPointForCurves2,
        /*[in]*/ enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2,
        /*[in]*/ double AnchorAtDistanceForCurves2,
        /*[in]*/ enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2,
        /*[in]*/ long NumberOfOccurrencesForCurves2,
        /*[in]*/ double OccurrenceSpacingForCurves2,
        /*[in]*/ enum TGPart::PatternTransformTypeConstants TransformType,
        /*[in]*/ enum TGPart::PatternTransformRotateTypeConstants TransformRotateType,
        /*[in]*/ IDispatch * TransformPlaneOrSurface,
        /*[in]*/ BSTR bstrName,
        /*[in]*/ VARIANT FutureUse1,
        /*[in]*/ VARIANT FutureUse2,
        /*[in]*/ VARIANT FutureUse3,
        /*[out,retval]*/ struct AssemblyPattern * * ppPattern ) = 0;
      virtual HRESULT __stdcall raw_CreateDuplicate (
        /*[in]*/ BSTR PatternName,
        /*[in]*/ long NumberOfMasters,
        /*[in]*/ SAFEARRAY * * MasterOccurrences,
        /*[in]*/ IDispatch * FromOccurrence,
        /*[in]*/ long NumberOfToOccurrences,
        /*[in]*/ SAFEARRAY * * ToOccurrences,
        /*[out,retval]*/ struct AssemblyPattern * * AsmPattern ) = 0;
      virtual HRESULT __stdcall raw_CreateAlongCurveEx (
        /*[in]*/ long NumberOfMasters,
        /*[in]*/ SAFEARRAY * * MasterOccs,
        /*[in]*/ long NumberOfCurves1,
        /*[in]*/ SAFEARRAY * * Curves1,
        /*[in]*/ IDispatch * AnchorPointForCurves1,
        /*[in]*/ enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1,
        /*[in]*/ double AnchorAtDistanceForCurves1,
        /*[in]*/ enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1,
        /*[in]*/ long NumberOfOccurrencesForCurves1,
        /*[in]*/ double OccurrenceSpacingForCurves1,
        /*[in]*/ long NumberOfCurves2,
        /*[in]*/ SAFEARRAY * * Curves2,
        /*[in]*/ IDispatch * AnchorPointForCurves2,
        /*[in]*/ enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2,
        /*[in]*/ double AnchorAtDistanceForCurves2,
        /*[in]*/ enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2,
        /*[in]*/ long NumberOfOccurrencesForCurves2,
        /*[in]*/ double OccurrenceSpacingForCurves2,
        /*[in]*/ enum TGPart::PatternTransformTypeConstants TransformType,
        /*[in]*/ enum TGPart::PatternTransformRotateTypeConstants TransformRotateType,
        /*[in]*/ IDispatch * TransformPlaneOrSurface,
        /*[in]*/ BSTR bstrName,
        /*[in]*/ long lSkipCount,
        /*[in]*/ VARIANT FutureUse2,
        /*[in]*/ VARIANT FutureUse3,
        /*[out,retval]*/ struct AssemblyPattern * * ppPattern ) = 0;
      virtual HRESULT __stdcall raw_CreateEx (
        /*[in]*/ BSTR PatternName,
        /*[in]*/ SAFEARRAY * * SourceOccurrences,
        /*[in]*/ IDispatch * FeaturePattern,
        /*[in]*/ IDispatch * ReferenceFeature,
        /*[out,retval]*/ struct AssemblyPattern * * AsmPattern ) = 0;
      virtual HRESULT __stdcall raw_CreateAlongCurveEx2 (
        /*[in]*/ long NumberOfSources,
        /*[in]*/ SAFEARRAY * * SourceOccs,
        /*[in]*/ long NumberOfCurves1,
        /*[in]*/ SAFEARRAY * * Curves1,
        /*[in]*/ IDispatch * AnchorPointForCurves1,
        /*[in]*/ enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1,
        /*[in]*/ double AnchorAtDistanceForCurves1,
        /*[in]*/ enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1,
        /*[in]*/ long NumberOfOccurrencesForCurves1,
        /*[in]*/ double OccurrenceSpacingForCurves1,
        /*[in]*/ long NumberOfCurves2,
        /*[in]*/ SAFEARRAY * * Curves2,
        /*[in]*/ IDispatch * AnchorPointForCurves2,
        /*[in]*/ enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2,
        /*[in]*/ double AnchorAtDistanceForCurves2,
        /*[in]*/ enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2,
        /*[in]*/ long NumberOfOccurrencesForCurves2,
        /*[in]*/ double OccurrenceSpacingForCurves2,
        /*[in]*/ enum TGPart::PatternTransformTypeConstants TransformType,
        /*[in]*/ enum TGPart::PatternTransformRotateTypeConstants TransformRotateType,
        /*[in]*/ IDispatch * TransformPlaneOrSurface,
        /*[in]*/ BSTR bstrName,
        /*[in]*/ VARIANT FutureUse1,
        /*[in]*/ VARIANT FutureUse2,
        /*[in]*/ VARIANT FutureUse3,
        /*[out,retval]*/ struct AssemblyPattern * * ppPattern ) = 0;
      virtual HRESULT __stdcall raw_CreateDuplicateEx (
        /*[in]*/ BSTR PatternName,
        /*[in]*/ long NumberOfSources,
        /*[in]*/ SAFEARRAY * * SourceOccurrences,
        /*[in]*/ IDispatch * FromOccurrence,
        /*[in]*/ long NumberOfToOccurrences,
        /*[in]*/ SAFEARRAY * * ToOccurrences,
        /*[out,retval]*/ struct AssemblyPattern * * AsmPattern ) = 0;
      virtual HRESULT __stdcall raw_CreateAlongCurveEx3 (
        /*[in]*/ long NumberOfSources,
        /*[in]*/ SAFEARRAY * * SourceOccs,
        /*[in]*/ long NumberOfCurves1,
        /*[in]*/ SAFEARRAY * * Curves1,
        /*[in]*/ IDispatch * AnchorPointForCurves1,
        /*[in]*/ enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1,
        /*[in]*/ double AnchorAtDistanceForCurves1,
        /*[in]*/ enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1,
        /*[in]*/ long NumberOfOccurrencesForCurves1,
        /*[in]*/ double OccurrenceSpacingForCurves1,
        /*[in]*/ long NumberOfCurves2,
        /*[in]*/ SAFEARRAY * * Curves2,
        /*[in]*/ IDispatch * AnchorPointForCurves2,
        /*[in]*/ enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2,
        /*[in]*/ double AnchorAtDistanceForCurves2,
        /*[in]*/ enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2,
        /*[in]*/ long NumberOfOccurrencesForCurves2,
        /*[in]*/ double OccurrenceSpacingForCurves2,
        /*[in]*/ enum TGPart::PatternTransformTypeConstants TransformType,
        /*[in]*/ enum TGPart::PatternTransformRotateTypeConstants TransformRotateType,
        /*[in]*/ IDispatch * TransformPlaneOrSurface,
        /*[in]*/ BSTR bstrName,
        /*[in]*/ long lSkipCount,
        /*[in]*/ VARIANT FutureUse2,
        /*[in]*/ VARIANT FutureUse3,
        /*[out,retval]*/ struct AssemblyPattern * * ppPattern ) = 0;
      virtual HRESULT __stdcall raw_CreateAlongCircleWithOccurrences (
        /*[in]*/ long lNumberOfSources,
        /*[in]*/ SAFEARRAY * * SourceOccs,
        /*[in]*/ IDispatch * Axis,
        /*[in]*/ enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCircle,
        /*[in]*/ enum PatternOffsetTypeConstants PatternOffsetTypeForCircle,
        /*[in]*/ VARIANT_BOOL bIsFullCircle,
        /*[in]*/ double dSweep,
        /*[in]*/ long lNumberOfOccurrencesForCircle,
        /*[in]*/ double dSpacing,
        /*[in]*/ enum TGPart::PatternTransformTypeConstants TransformType,
        /*[in]*/ long lNumberOfSuppressIDs,
        /*[in]*/ SAFEARRAY * * SuppressIDs,
        /*[in]*/ BSTR bstrName,
        /*[in]*/ VARIANT FutureUse1,
        /*[in]*/ VARIANT FutureUse2,
        /*[out,retval]*/ struct AssemblyPattern * * ppPattern ) = 0;
      virtual HRESULT __stdcall raw_CreateAlongLineWithOccurrences (
        /*[in]*/ long lNumberOfSources,
        /*[in]*/ SAFEARRAY * * SourceOccs,
        /*[in]*/ IDispatch * DirectionElement1,
        /*[in]*/ enum TGPart::PatternCurveAnchorSideConstants AnchorSideForLine1,
        /*[in]*/ enum TGPart::LinearPatternMethodConstants DirectionMethod1,
        /*[in]*/ long lCount1,
        /*[in]*/ double dDistance1,
        /*[in]*/ IDispatch * DirectionElement2,
        /*[in]*/ enum TGPart::PatternCurveAnchorSideConstants AnchorSideForLine2,
        /*[in]*/ enum TGPart::LinearPatternMethodConstants DirectionMethod2,
        /*[in]*/ long lCount2,
        /*[in]*/ double dDistance2,
        /*[in]*/ long lNumberOfSuppressIDs,
        /*[in]*/ SAFEARRAY * * SuppressIDs,
        /*[in]*/ BSTR bstrName,
        /*[out,retval]*/ struct AssemblyPattern * * ppPattern ) = 0;
};

struct __declspec(uuid("402df730-e673-11d4-bbd4-00c04f72e273"))
_IAssemblyPatternAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyPatternOccurrencePtr Item (
        const _variant_t & Index );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL Visible );
    HRESULT GetInputs (
        SAFEARRAY * * MasterOccurrences,
        IDispatch * * FeaturePattern,
        SAFEARRAY * * ReferenceFeatures );
    HRESULT Edit (
        SAFEARRAY * * MasterOccurrences,
        IDispatch * FeaturePattern,
        IDispatch * ReferenceFeature,
        _bstr_t Name );
    HRESULT GetOccurrences (
        SAFEARRAY * * Occurrences );
    enum AssemblyPatternTypeConstants PatternType ( );
    HRESULT EditDuplicate (
        long NumberOfMasters,
        SAFEARRAY * * MasterOccurrences,
        IDispatch * FromOccurrence,
        long NumberOfToOccurrences,
        SAFEARRAY * * ToOccurrences,
        _bstr_t Name );
    HRESULT EditAlongCurve (
        long NumberOfMasters,
        SAFEARRAY * * MasterOccs,
        long NumberOfCurves1,
        SAFEARRAY * * Curves1,
        IDispatch * AnchorPointForCurves1,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1,
        double AnchorAtDistanceForCurves1,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1,
        long NumberOfOccurrencesForCurves1,
        double OccurrenceSpacingForCurves1,
        long NumberOfCurves2,
        SAFEARRAY * * Curves2,
        IDispatch * AnchorPointForCurves2,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2,
        double AnchorAtDistanceForCurves2,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2,
        long NumberOfOccurrencesForCurves2,
        double OccurrenceSpacingForCurves2,
        enum TGPart::PatternTransformTypeConstants TransformType,
        enum TGPart::PatternTransformRotateTypeConstants TransformRotateType,
        IDispatch * TransformPlaneOrSurface,
        _bstr_t Name,
        const _variant_t & FutureUse1 = vtMissing,
        const _variant_t & FutureUse2 = vtMissing,
        const _variant_t & FutureUse3 = vtMissing );
    HRESULT EditAlongCurveEx (
        long NumberOfMasters,
        SAFEARRAY * * MasterOccs,
        long NumberOfCurves1,
        SAFEARRAY * * Curves1,
        IDispatch * AnchorPointForCurves1,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1,
        double AnchorAtDistanceForCurves1,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1,
        long NumberOfOccurrencesForCurves1,
        double OccurrenceSpacingForCurves1,
        long NumberOfCurves2,
        SAFEARRAY * * Curves2,
        IDispatch * AnchorPointForCurves2,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2,
        double AnchorAtDistanceForCurves2,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2,
        long NumberOfOccurrencesForCurves2,
        double OccurrenceSpacingForCurves2,
        enum TGPart::PatternTransformTypeConstants TransformType,
        enum TGPart::PatternTransformRotateTypeConstants TransformRotateType,
        IDispatch * TransformPlaneOrSurface,
        _bstr_t Name,
        long lSkipCount,
        const _variant_t & FutureUse2 = vtMissing,
        const _variant_t & FutureUse3 = vtMissing );
    HRESULT GetPatternData (
        long * NumberOfMasters,
        SAFEARRAY * * MasterOccs,
        long * NumberOfCurves1,
        SAFEARRAY * * Curves1,
        IDispatch * * AnchorPointForCurves1,
        enum TGPart::PatternCurveAnchorSideConstants * AnchorSideForCurves1,
        double * AnchorAtDistanceForCurves1,
        enum PatternOffsetTypeConstants * PatternOffsetTypeForCurves1,
        long * NumberOfOccurrencesForCurves1,
        double * OccurrenceSpacingForCurves1,
        long * NumberOfCurves2,
        SAFEARRAY * * Curves2,
        IDispatch * * AnchorPointForCurves2,
        enum TGPart::PatternCurveAnchorSideConstants * AnchorSideForCurves2,
        double * AnchorAtDistanceForCurves2,
        enum PatternOffsetTypeConstants * PatternOffsetTypeForCurves2,
        long * NumberOfOccurrencesForCurves2,
        double * OccurrenceSpacingForCurves2,
        enum TGPart::PatternTransformTypeConstants * TransformType,
        enum TGPart::PatternTransformRotateTypeConstants * TransformRotateType,
        IDispatch * * TransformPlaneOrSurface,
        BSTR * Name,
        long * SkipCount );
    HRESULT GetInputsEx (
        SAFEARRAY * * SourceOccurrences,
        IDispatch * * FeaturePattern,
        SAFEARRAY * * ReferenceFeatures );
    HRESULT EditEx (
        SAFEARRAY * * SourceOccurrences,
        IDispatch * FeaturePattern,
        IDispatch * ReferenceFeature,
        _bstr_t Name );
    HRESULT EditDuplicateEx (
        long NumberOfSources,
        SAFEARRAY * * SourceOccurrences,
        IDispatch * FromOccurrence,
        long NumberOfToOccurrences,
        SAFEARRAY * * ToOccurrences,
        _bstr_t Name );
    HRESULT EditAlongCurveEx2 (
        long NumberOfSources,
        SAFEARRAY * * SourceOccs,
        long NumberOfCurves1,
        SAFEARRAY * * Curves1,
        IDispatch * AnchorPointForCurves1,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1,
        double AnchorAtDistanceForCurves1,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1,
        long NumberOfOccurrencesForCurves1,
        double OccurrenceSpacingForCurves1,
        long NumberOfCurves2,
        SAFEARRAY * * Curves2,
        IDispatch * AnchorPointForCurves2,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2,
        double AnchorAtDistanceForCurves2,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2,
        long NumberOfOccurrencesForCurves2,
        double OccurrenceSpacingForCurves2,
        enum TGPart::PatternTransformTypeConstants TransformType,
        enum TGPart::PatternTransformRotateTypeConstants TransformRotateType,
        IDispatch * TransformPlaneOrSurface,
        _bstr_t Name,
        const _variant_t & FutureUse1 = vtMissing,
        const _variant_t & FutureUse2 = vtMissing,
        const _variant_t & FutureUse3 = vtMissing );
    HRESULT EditAlongCurveEx3 (
        long NumberOfSources,
        SAFEARRAY * * SourceOccs,
        long NumberOfCurves1,
        SAFEARRAY * * Curves1,
        IDispatch * AnchorPointForCurves1,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1,
        double AnchorAtDistanceForCurves1,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1,
        long NumberOfOccurrencesForCurves1,
        double OccurrenceSpacingForCurves1,
        long NumberOfCurves2,
        SAFEARRAY * * Curves2,
        IDispatch * AnchorPointForCurves2,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2,
        double AnchorAtDistanceForCurves2,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2,
        long NumberOfOccurrencesForCurves2,
        double OccurrenceSpacingForCurves2,
        enum TGPart::PatternTransformTypeConstants TransformType,
        enum TGPart::PatternTransformRotateTypeConstants TransformRotateType,
        IDispatch * TransformPlaneOrSurface,
        _bstr_t Name,
        long lSkipCount,
        const _variant_t & FutureUse2 = vtMissing,
        const _variant_t & FutureUse3 = vtMissing );
    HRESULT GetPatternDataEx (
        long * NumberOfSources,
        SAFEARRAY * * SourceOccs,
        long * NumberOfCurves1,
        SAFEARRAY * * Curves1,
        IDispatch * * AnchorPointForCurves1,
        enum TGPart::PatternCurveAnchorSideConstants * AnchorSideForCurves1,
        double * AnchorAtDistanceForCurves1,
        enum PatternOffsetTypeConstants * PatternOffsetTypeForCurves1,
        long * NumberOfOccurrencesForCurves1,
        double * OccurrenceSpacingForCurves1,
        long * NumberOfCurves2,
        SAFEARRAY * * Curves2,
        IDispatch * * AnchorPointForCurves2,
        enum TGPart::PatternCurveAnchorSideConstants * AnchorSideForCurves2,
        double * AnchorAtDistanceForCurves2,
        enum PatternOffsetTypeConstants * PatternOffsetTypeForCurves2,
        long * NumberOfOccurrencesForCurves2,
        double * OccurrenceSpacingForCurves2,
        enum TGPart::PatternTransformTypeConstants * TransformType,
        enum TGPart::PatternTransformRotateTypeConstants * TransformRotateType,
        IDispatch * * TransformPlaneOrSurface,
        BSTR * Name,
        long * SkipCount );
    HRESULT EditAlongCircleWithOccurrences (
        long lNumberOfSources,
        SAFEARRAY * * SourceOccs,
        IDispatch * Axis,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCircle,
        enum PatternOffsetTypeConstants PatternOffsetTypeForCircle,
        VARIANT_BOOL bIsFullCircle,
        double dSweep,
        long lNumberOfOccurrencesForCircle,
        double dSpacing,
        enum TGPart::PatternTransformTypeConstants TransformType,
        long lNumberOfSuppressIDs,
        SAFEARRAY * * SuppressIDs,
        _bstr_t bstrName,
        const _variant_t & FutureUse1 = vtMissing,
        const _variant_t & FutureUse2 = vtMissing );
    HRESULT EditAlongLineWithOccurrences (
        long lNumberOfSources,
        SAFEARRAY * * SourceOccs,
        IDispatch * DirectionElement1,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForLine1,
        enum TGPart::LinearPatternMethodConstants DirectionMethod1,
        long lCount1,
        double dDistance1,
        IDispatch * DirectionElement2,
        enum TGPart::PatternCurveAnchorSideConstants AnchorSideForLine2,
        enum TGPart::LinearPatternMethodConstants DirectionMethod2,
        long lCount2,
        double dDistance2,
        long lNumberOfSuppressIDs,
        SAFEARRAY * * SuppressIDs,
        _bstr_t bstrName );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct AssemblyPatternOccurrence * * Item ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall raw_GetInputs (
        /*[in,out]*/ SAFEARRAY * * MasterOccurrences,
        /*[out]*/ IDispatch * * FeaturePattern,
        /*[in,out]*/ SAFEARRAY * * ReferenceFeatures ) = 0;
      virtual HRESULT __stdcall raw_Edit (
        /*[in]*/ SAFEARRAY * * MasterOccurrences,
        /*[in]*/ IDispatch * FeaturePattern,
        /*[in]*/ IDispatch * ReferenceFeature,
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall raw_GetOccurrences (
        /*[in,out]*/ SAFEARRAY * * Occurrences ) = 0;
      virtual HRESULT __stdcall raw_PatternType (
        /*[out,retval]*/ enum AssemblyPatternTypeConstants * AssemblyPatternType ) = 0;
      virtual HRESULT __stdcall raw_EditDuplicate (
        /*[in]*/ long NumberOfMasters,
        /*[in]*/ SAFEARRAY * * MasterOccurrences,
        /*[in]*/ IDispatch * FromOccurrence,
        /*[in]*/ long NumberOfToOccurrences,
        /*[in]*/ SAFEARRAY * * ToOccurrences,
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall raw_EditAlongCurve (
        /*[in]*/ long NumberOfMasters,
        /*[in]*/ SAFEARRAY * * MasterOccs,
        /*[in]*/ long NumberOfCurves1,
        /*[in]*/ SAFEARRAY * * Curves1,
        /*[in]*/ IDispatch * AnchorPointForCurves1,
        /*[in]*/ enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1,
        /*[in]*/ double AnchorAtDistanceForCurves1,
        /*[in]*/ enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1,
        /*[in]*/ long NumberOfOccurrencesForCurves1,
        /*[in]*/ double OccurrenceSpacingForCurves1,
        /*[in]*/ long NumberOfCurves2,
        /*[in]*/ SAFEARRAY * * Curves2,
        /*[in]*/ IDispatch * AnchorPointForCurves2,
        /*[in]*/ enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2,
        /*[in]*/ double AnchorAtDistanceForCurves2,
        /*[in]*/ enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2,
        /*[in]*/ long NumberOfOccurrencesForCurves2,
        /*[in]*/ double OccurrenceSpacingForCurves2,
        /*[in]*/ enum TGPart::PatternTransformTypeConstants TransformType,
        /*[in]*/ enum TGPart::PatternTransformRotateTypeConstants TransformRotateType,
        /*[in]*/ IDispatch * TransformPlaneOrSurface,
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT FutureUse1 = vtMissing,
        /*[in]*/ VARIANT FutureUse2 = vtMissing,
        /*[in]*/ VARIANT FutureUse3 = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_EditAlongCurveEx (
        /*[in]*/ long NumberOfMasters,
        /*[in]*/ SAFEARRAY * * MasterOccs,
        /*[in]*/ long NumberOfCurves1,
        /*[in]*/ SAFEARRAY * * Curves1,
        /*[in]*/ IDispatch * AnchorPointForCurves1,
        /*[in]*/ enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1,
        /*[in]*/ double AnchorAtDistanceForCurves1,
        /*[in]*/ enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1,
        /*[in]*/ long NumberOfOccurrencesForCurves1,
        /*[in]*/ double OccurrenceSpacingForCurves1,
        /*[in]*/ long NumberOfCurves2,
        /*[in]*/ SAFEARRAY * * Curves2,
        /*[in]*/ IDispatch * AnchorPointForCurves2,
        /*[in]*/ enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2,
        /*[in]*/ double AnchorAtDistanceForCurves2,
        /*[in]*/ enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2,
        /*[in]*/ long NumberOfOccurrencesForCurves2,
        /*[in]*/ double OccurrenceSpacingForCurves2,
        /*[in]*/ enum TGPart::PatternTransformTypeConstants TransformType,
        /*[in]*/ enum TGPart::PatternTransformRotateTypeConstants TransformRotateType,
        /*[in]*/ IDispatch * TransformPlaneOrSurface,
        /*[in]*/ BSTR Name,
        /*[in]*/ long lSkipCount,
        /*[in]*/ VARIANT FutureUse2 = vtMissing,
        /*[in]*/ VARIANT FutureUse3 = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_GetPatternData (
        /*[out]*/ long * NumberOfMasters,
        /*[in,out]*/ SAFEARRAY * * MasterOccs,
        /*[out]*/ long * NumberOfCurves1,
        /*[in,out]*/ SAFEARRAY * * Curves1,
        /*[out]*/ IDispatch * * AnchorPointForCurves1,
        /*[out]*/ enum TGPart::PatternCurveAnchorSideConstants * AnchorSideForCurves1,
        /*[out]*/ double * AnchorAtDistanceForCurves1,
        /*[out]*/ enum PatternOffsetTypeConstants * PatternOffsetTypeForCurves1,
        /*[out]*/ long * NumberOfOccurrencesForCurves1,
        /*[out]*/ double * OccurrenceSpacingForCurves1,
        /*[out]*/ long * NumberOfCurves2,
        /*[in,out]*/ SAFEARRAY * * Curves2,
        /*[out]*/ IDispatch * * AnchorPointForCurves2,
        /*[out]*/ enum TGPart::PatternCurveAnchorSideConstants * AnchorSideForCurves2,
        /*[out]*/ double * AnchorAtDistanceForCurves2,
        /*[out]*/ enum PatternOffsetTypeConstants * PatternOffsetTypeForCurves2,
        /*[out]*/ long * NumberOfOccurrencesForCurves2,
        /*[out]*/ double * OccurrenceSpacingForCurves2,
        /*[out]*/ enum TGPart::PatternTransformTypeConstants * TransformType,
        /*[out]*/ enum TGPart::PatternTransformRotateTypeConstants * TransformRotateType,
        /*[out]*/ IDispatch * * TransformPlaneOrSurface,
        /*[out]*/ BSTR * Name,
        /*[out]*/ long * SkipCount ) = 0;
      virtual HRESULT __stdcall raw_GetInputsEx (
        /*[in,out]*/ SAFEARRAY * * SourceOccurrences,
        /*[out]*/ IDispatch * * FeaturePattern,
        /*[in,out]*/ SAFEARRAY * * ReferenceFeatures ) = 0;
      virtual HRESULT __stdcall raw_EditEx (
        /*[in]*/ SAFEARRAY * * SourceOccurrences,
        /*[in]*/ IDispatch * FeaturePattern,
        /*[in]*/ IDispatch * ReferenceFeature,
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall raw_EditDuplicateEx (
        /*[in]*/ long NumberOfSources,
        /*[in]*/ SAFEARRAY * * SourceOccurrences,
        /*[in]*/ IDispatch * FromOccurrence,
        /*[in]*/ long NumberOfToOccurrences,
        /*[in]*/ SAFEARRAY * * ToOccurrences,
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall raw_EditAlongCurveEx2 (
        /*[in]*/ long NumberOfSources,
        /*[in]*/ SAFEARRAY * * SourceOccs,
        /*[in]*/ long NumberOfCurves1,
        /*[in]*/ SAFEARRAY * * Curves1,
        /*[in]*/ IDispatch * AnchorPointForCurves1,
        /*[in]*/ enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1,
        /*[in]*/ double AnchorAtDistanceForCurves1,
        /*[in]*/ enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1,
        /*[in]*/ long NumberOfOccurrencesForCurves1,
        /*[in]*/ double OccurrenceSpacingForCurves1,
        /*[in]*/ long NumberOfCurves2,
        /*[in]*/ SAFEARRAY * * Curves2,
        /*[in]*/ IDispatch * AnchorPointForCurves2,
        /*[in]*/ enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2,
        /*[in]*/ double AnchorAtDistanceForCurves2,
        /*[in]*/ enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2,
        /*[in]*/ long NumberOfOccurrencesForCurves2,
        /*[in]*/ double OccurrenceSpacingForCurves2,
        /*[in]*/ enum TGPart::PatternTransformTypeConstants TransformType,
        /*[in]*/ enum TGPart::PatternTransformRotateTypeConstants TransformRotateType,
        /*[in]*/ IDispatch * TransformPlaneOrSurface,
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT FutureUse1 = vtMissing,
        /*[in]*/ VARIANT FutureUse2 = vtMissing,
        /*[in]*/ VARIANT FutureUse3 = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_EditAlongCurveEx3 (
        /*[in]*/ long NumberOfSources,
        /*[in]*/ SAFEARRAY * * SourceOccs,
        /*[in]*/ long NumberOfCurves1,
        /*[in]*/ SAFEARRAY * * Curves1,
        /*[in]*/ IDispatch * AnchorPointForCurves1,
        /*[in]*/ enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1,
        /*[in]*/ double AnchorAtDistanceForCurves1,
        /*[in]*/ enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1,
        /*[in]*/ long NumberOfOccurrencesForCurves1,
        /*[in]*/ double OccurrenceSpacingForCurves1,
        /*[in]*/ long NumberOfCurves2,
        /*[in]*/ SAFEARRAY * * Curves2,
        /*[in]*/ IDispatch * AnchorPointForCurves2,
        /*[in]*/ enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2,
        /*[in]*/ double AnchorAtDistanceForCurves2,
        /*[in]*/ enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2,
        /*[in]*/ long NumberOfOccurrencesForCurves2,
        /*[in]*/ double OccurrenceSpacingForCurves2,
        /*[in]*/ enum TGPart::PatternTransformTypeConstants TransformType,
        /*[in]*/ enum TGPart::PatternTransformRotateTypeConstants TransformRotateType,
        /*[in]*/ IDispatch * TransformPlaneOrSurface,
        /*[in]*/ BSTR Name,
        /*[in]*/ long lSkipCount,
        /*[in]*/ VARIANT FutureUse2 = vtMissing,
        /*[in]*/ VARIANT FutureUse3 = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_GetPatternDataEx (
        /*[out]*/ long * NumberOfSources,
        /*[in,out]*/ SAFEARRAY * * SourceOccs,
        /*[out]*/ long * NumberOfCurves1,
        /*[in,out]*/ SAFEARRAY * * Curves1,
        /*[out]*/ IDispatch * * AnchorPointForCurves1,
        /*[out]*/ enum TGPart::PatternCurveAnchorSideConstants * AnchorSideForCurves1,
        /*[out]*/ double * AnchorAtDistanceForCurves1,
        /*[out]*/ enum PatternOffsetTypeConstants * PatternOffsetTypeForCurves1,
        /*[out]*/ long * NumberOfOccurrencesForCurves1,
        /*[out]*/ double * OccurrenceSpacingForCurves1,
        /*[out]*/ long * NumberOfCurves2,
        /*[in,out]*/ SAFEARRAY * * Curves2,
        /*[out]*/ IDispatch * * AnchorPointForCurves2,
        /*[out]*/ enum TGPart::PatternCurveAnchorSideConstants * AnchorSideForCurves2,
        /*[out]*/ double * AnchorAtDistanceForCurves2,
        /*[out]*/ enum PatternOffsetTypeConstants * PatternOffsetTypeForCurves2,
        /*[out]*/ long * NumberOfOccurrencesForCurves2,
        /*[out]*/ double * OccurrenceSpacingForCurves2,
        /*[out]*/ enum TGPart::PatternTransformTypeConstants * TransformType,
        /*[out]*/ enum TGPart::PatternTransformRotateTypeConstants * TransformRotateType,
        /*[out]*/ IDispatch * * TransformPlaneOrSurface,
        /*[out]*/ BSTR * Name,
        /*[out]*/ long * SkipCount ) = 0;
      virtual HRESULT __stdcall raw_EditAlongCircleWithOccurrences (
        /*[in]*/ long lNumberOfSources,
        /*[in]*/ SAFEARRAY * * SourceOccs,
        /*[in]*/ IDispatch * Axis,
        /*[in]*/ enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCircle,
        /*[in]*/ enum PatternOffsetTypeConstants PatternOffsetTypeForCircle,
        /*[in]*/ VARIANT_BOOL bIsFullCircle,
        /*[in]*/ double dSweep,
        /*[in]*/ long lNumberOfOccurrencesForCircle,
        /*[in]*/ double dSpacing,
        /*[in]*/ enum TGPart::PatternTransformTypeConstants TransformType,
        /*[in]*/ long lNumberOfSuppressIDs,
        /*[in]*/ SAFEARRAY * * SuppressIDs,
        /*[in]*/ BSTR bstrName,
        /*[in]*/ VARIANT FutureUse1 = vtMissing,
        /*[in]*/ VARIANT FutureUse2 = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_EditAlongLineWithOccurrences (
        /*[in]*/ long lNumberOfSources,
        /*[in]*/ SAFEARRAY * * SourceOccs,
        /*[in]*/ IDispatch * DirectionElement1,
        /*[in]*/ enum TGPart::PatternCurveAnchorSideConstants AnchorSideForLine1,
        /*[in]*/ enum TGPart::LinearPatternMethodConstants DirectionMethod1,
        /*[in]*/ long lCount1,
        /*[in]*/ double dDistance1,
        /*[in]*/ IDispatch * DirectionElement2,
        /*[in]*/ enum TGPart::PatternCurveAnchorSideConstants AnchorSideForLine2,
        /*[in]*/ enum TGPart::LinearPatternMethodConstants DirectionMethod2,
        /*[in]*/ long lCount2,
        /*[in]*/ double dDistance2,
        /*[in]*/ long lNumberOfSuppressIDs,
        /*[in]*/ SAFEARRAY * * SuppressIDs,
        /*[in]*/ BSTR bstrName ) = 0;
};

struct __declspec(uuid("62ba35e0-0e79-11d5-b9bd-0004ac969177"))
Configurations : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetDirty))
    VARIANT_BOOL Dirty;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    ConfigurationPtr Item (
        const _variant_t & Index );
    HRESULT Apply (
        const _variant_t & Index,
        const _variant_t & ActivationOverride = vtMissing,
        const _variant_t & SimplifyOverride = vtMissing );
    ConfigurationPtr Add (
        _bstr_t Name );
    ConfigurationPtr AddDerivedConfig (
        int nConfig,
        int nZones,
        int nQueries,
        VARIANT * ppsaConfigList,
        VARIANT * ppsaZoneList,
        VARIANT * ppsaQueryList,
        _bstr_t bstrNewConfigName );
    VARIANT_BOOL GetDirty ( );
    HRESULT Save ( );
    HRESULT GetConfigComponentList (
        _bstr_t bstrConfigName,
        SAFEARRAY * * bstrActiveComponentList );
};

struct __declspec(uuid("7bf47882-0e78-11d5-b9bd-0004ac969177"))
Configuration : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetConfigurationType))
    enum ConfigurationTypeConstants ConfigurationType;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Apply (
        const _variant_t & ActivationOverride = vtMissing,
        const _variant_t & SimplifyOverride = vtMissing );
    _bstr_t GetName ( );
    enum TGFramework::ObjectType GetType ( );
    enum ConfigurationTypeConstants GetConfigurationType ( );
    HRESULT Delete ( );
    HRESULT Update ( );
    HRESULT Save ( );
};

struct __declspec(uuid("67b62350-0e75-11d5-b9bd-0004ac969177"))
_IConfigurationsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetDirty))
    VARIANT_BOOL Dirty;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    ConfigurationPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    HRESULT Apply (
        const _variant_t & Index,
        const _variant_t & ActivationOverride = vtMissing,
        const _variant_t & SimplifyOverride = vtMissing );
    ConfigurationPtr Add (
        _bstr_t Name );
    ConfigurationPtr AddDerivedConfig (
        int nConfig,
        int nZones,
        int nQueries,
        VARIANT * ppsaConfigList,
        VARIANT * ppsaZoneList,
        VARIANT * ppsaQueryList,
        _bstr_t bstrNewConfigName );
    VARIANT_BOOL GetDirty ( );
    HRESULT Save ( );
    HRESULT GetConfigComponentList (
        _bstr_t bstrConfigName,
        SAFEARRAY * * bstrActiveComponentList );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Configuration * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Unknown ) = 0;
      virtual HRESULT __stdcall raw_Apply (
        /*[in]*/ VARIANT Index,
        /*[in]*/ VARIANT ActivationOverride = vtMissing,
        /*[in]*/ VARIANT SimplifyOverride = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct Configuration * * ppConfiguration ) = 0;
      virtual HRESULT __stdcall raw_AddDerivedConfig (
        /*[in]*/ int nConfig,
        /*[in]*/ int nZones,
        /*[in]*/ int nQueries,
        /*[in]*/ VARIANT * ppsaConfigList,
        /*[in]*/ VARIANT * ppsaZoneList,
        /*[in]*/ VARIANT * ppsaQueryList,
        /*[in]*/ BSTR bstrNewConfigName,
        /*[out,retval]*/ struct Configuration * * ppConfiguration ) = 0;
      virtual HRESULT __stdcall get_Dirty (
        /*[out,retval]*/ VARIANT_BOOL * Dirty ) = 0;
      virtual HRESULT __stdcall raw_Save ( ) = 0;
      virtual HRESULT __stdcall raw_GetConfigComponentList (
        /*[in]*/ BSTR bstrConfigName,
        /*[in,out]*/ SAFEARRAY * * bstrActiveComponentList ) = 0;
};

enum ConfigurationTypeConstants
{
    seConfigurationType_Display = 0,
    seConfigurationType_Explode = 1
};

struct __declspec(uuid("775c11b0-0e76-11d5-b9bd-0004ac969177"))
_IConfigurationAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetConfigurationType))
    enum ConfigurationTypeConstants ConfigurationType;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Apply (
        const _variant_t & ActivationOverride = vtMissing,
        const _variant_t & SimplifyOverride = vtMissing );
    _bstr_t GetName ( );
    enum TGFramework::ObjectType GetType ( );
    enum ConfigurationTypeConstants GetConfigurationType ( );
    HRESULT Delete ( );
    HRESULT Update ( );
    HRESULT Save ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Apply (
        /*[in]*/ VARIANT ActivationOverride = vtMissing,
        /*[in]*/ VARIANT SimplifyOverride = vtMissing ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall get_ConfigurationType (
        /*[out,retval]*/ enum ConfigurationTypeConstants * ConfigurationType ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Update ( ) = 0;
      virtual HRESULT __stdcall raw_Save ( ) = 0;
};

struct __declspec(uuid("ef92f8c0-4439-485a-870f-4ab555ba5938"))
WireRuns : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    WireRunPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    WireRunPtr Add (
        _bstr_t PartFileName,
        const _variant_t & PartTemplateFileName = vtMissing,
        const _variant_t & PartFileDirectory = vtMissing );
    HRESULT Delete (
        struct WireRun * WireRun );
};

struct __declspec(uuid("e6d8b4bc-fdff-4373-85ac-c189e3c031f9"))
WireRun : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetWirePaths))
    WireRunPathsPtr WirePaths;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetOccurrence))
    OccurrencePtr Occurrence;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT AddWirePath (
        struct WirePath * WirePath );
    HRESULT RemoveWirePath (
        struct WirePath * WirePath );
    WireRunPathsPtr GetWirePaths ( );
    void PutName (
        _bstr_t _arg1 );
    _bstr_t GetName ( );
    void PutVisible (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetVisible ( );
    OccurrencePtr GetOccurrence ( );
    HRESULT IsFrozen (
        VARIANT_BOOL * bFrozen );
    HRESULT IsLinked (
        VARIANT_BOOL * bLinked );
    HRESULT Freeze ( );
    HRESULT Thaw ( );
    HRESULT BreakLink ( );
};

struct __declspec(uuid("50c71156-d9f1-4f63-88b7-a9e582b3dd58"))
_IWireRunsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    WireRunPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    WireRunPtr Add (
        _bstr_t PartFileName,
        const _variant_t & PartTemplateFileName = vtMissing,
        const _variant_t & PartFileDirectory = vtMissing );
    HRESULT Delete (
        struct WireRun * WireRun );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct WireRun * * Item ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR PartFileName,
        /*[in]*/ VARIANT PartTemplateFileName,
        /*[in]*/ VARIANT PartFileDirectory,
        /*[out,retval]*/ struct WireRun * * WireRun ) = 0;
      virtual HRESULT __stdcall raw_Delete (
        /*[in]*/ struct WireRun * WireRun ) = 0;
};

struct __declspec(uuid("830cbd35-5f67-4f05-b0cb-b3fb7ed3764d"))
WirePath : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetSegments))
    WirePathSegmentsPtr Segments;
    __declspec(property(get=GetColor,put=PutColor))
    long Color;
    __declspec(property(get=GetColorName,put=PutColorName))
    _bstr_t ColorName;
    __declspec(property(get=GetMaterial,put=PutMaterial))
    _bstr_t Material;
    __declspec(property(get=GetDiameter,put=PutDiameter))
    double Diameter;
    __declspec(property(get=GetLength,put=PutLength))
    double Length;
    __declspec(property(get=GetStartConnector,put=PutStartConnector))
    _bstr_t StartConnector;
    __declspec(property(get=GetEndConnector,put=PutEndConnector))
    _bstr_t EndConnector;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetAssemblyProperty))
    AssemblyPropertyPtr AssemblyProperty;
    __declspec(property(get=GetType,put=PutType))
    enum WirePathConstants Type;
    __declspec(property(get=GetCableMaster))
    WirePathPtr CableMaster;
    __declspec(property(get=GetCableMembers))
    WirePathCableMembersPtr CableMembers;
    __declspec(property(get=GetCableSource))
    WirePathPtr CableSource;
    __declspec(property(get=GetTypeEx,put=PutTypeEx))
    enum WirePathConstantsEx TypeEx;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT AddSegment (
        IDispatch * Segment,
        enum TubeSegmentAdditionStatusConstants * Status );
    HRESULT RemoveSegment (
        IDispatch * Segment,
        enum TubeSegmentRemovalStatusConstants * Status );
    WirePathSegmentsPtr GetSegments ( );
    void PutName (
        _bstr_t _arg1 );
    _bstr_t GetName ( );
    void PutColor (
        long _arg1 );
    long GetColor ( );
    void PutColorName (
        _bstr_t _arg1 );
    _bstr_t GetColorName ( );
    void PutMaterial (
        _bstr_t _arg1 );
    _bstr_t GetMaterial ( );
    void PutDiameter (
        double _arg1 );
    double GetDiameter ( );
    void PutLength (
        double _arg1 );
    double GetLength ( );
    void PutStartConnector (
        _bstr_t _arg1 );
    _bstr_t GetStartConnector ( );
    void PutEndConnector (
        _bstr_t _arg1 );
    _bstr_t GetEndConnector ( );
    void PutVisible (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetVisible ( );
    AssemblyPropertyPtr GetAssemblyProperty ( );
    enum WirePathConstants GetType ( );
    void PutType (
        enum WirePathConstants _arg1 );
    WirePathPtr GetCableMaster ( );
    HRESULT AddCableMember (
        struct WirePath * WirePath );
    HRESULT RemoveCableMember (
        struct WirePath * WirePath );
    HRESULT SetCableMemberIndex (
        struct WirePath * WirePath,
        long Index );
    HRESULT GetCableMemberIndex (
        struct WirePath * WirePath,
        long * Index );
    WirePathCableMembersPtr GetCableMembers ( );
    WirePathPtr GetCableSource ( );
    enum WirePathConstantsEx GetTypeEx ( );
    void PutTypeEx (
        enum WirePathConstantsEx _arg1 );
};

struct __declspec(uuid("4766979b-eaf1-4b67-a9f9-97f8dd695c32"))
WirePathSegments : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr Item (
        const _variant_t & Index );
    long GetCount ( );
};

struct __declspec(uuid("9743b0a4-1918-45b6-b49e-78609cdfb1eb"))
_IWirePathSegmentsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
};

struct __declspec(uuid("59c0a0e8-e6c9-47b9-b8fc-c808eec586f3"))
AssemblyProperty : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t _arg1 );
    HRESULT AddPropertyItem (
        _bstr_t ItemName,
        enum TGPart::PropertyTypeConstants ItemType,
        const _variant_t & ItemValue );
    HRESULT DeletePropertyItem (
        _bstr_t ItemName );
    HRESULT DeleteAllItems ( );
    long GetCount ( );
    _bstr_t GetNameByIndex (
        long IndexOfItem );
    _variant_t GetItemValue (
        _bstr_t ItemName );
    enum TGPart::PropertyTypeConstants GetItemType (
        _bstr_t ItemName );
    HRESULT UpdateItemValue (
        _bstr_t CurrentItemName,
        enum TGPart::PropertyTypeConstants CurrentItemType,
        const _variant_t & NewItemValue );
    HRESULT GetDefaultValues (
        long * NumberOfEntries,
        SAFEARRAY * * DefaultValues );
};

struct __declspec(uuid("280173ab-f561-4d0c-b073-0bd5697c1995"))
_IAssemblyPropertyAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    HRESULT AddPropertyItem (
        _bstr_t ItemName,
        enum TGPart::PropertyTypeConstants ItemType,
        const _variant_t & ItemValue );
    HRESULT DeletePropertyItem (
        _bstr_t ItemName );
    HRESULT DeleteAllItems ( );
    long GetCount ( );
    _bstr_t GetNameByIndex (
        long IndexOfItem );
    _variant_t GetItemValue (
        _bstr_t ItemName );
    enum TGPart::PropertyTypeConstants GetItemType (
        _bstr_t ItemName );
    HRESULT UpdateItemValue (
        _bstr_t CurrentItemName,
        enum TGPart::PropertyTypeConstants CurrentItemType,
        const _variant_t & NewItemValue );
    HRESULT GetDefaultValues (
        long * NumberOfEntries,
        SAFEARRAY * * DefaultValues );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall raw_AddPropertyItem (
        /*[in]*/ BSTR ItemName,
        /*[in]*/ enum TGPart::PropertyTypeConstants ItemType,
        /*[in]*/ VARIANT ItemValue ) = 0;
      virtual HRESULT __stdcall raw_DeletePropertyItem (
        /*[in]*/ BSTR ItemName ) = 0;
      virtual HRESULT __stdcall raw_DeleteAllItems ( ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_GetNameByIndex (
        /*[in]*/ long IndexOfItem,
        /*[out,retval]*/ BSTR * ItemName ) = 0;
      virtual HRESULT __stdcall raw_GetItemValue (
        /*[in]*/ BSTR ItemName,
        /*[out,retval]*/ VARIANT * ItemValue ) = 0;
      virtual HRESULT __stdcall raw_GetItemType (
        /*[in]*/ BSTR ItemName,
        /*[out,retval]*/ enum TGPart::PropertyTypeConstants * ItemType ) = 0;
      virtual HRESULT __stdcall raw_UpdateItemValue (
        /*[in]*/ BSTR CurrentItemName,
        /*[in]*/ enum TGPart::PropertyTypeConstants CurrentItemType,
        /*[in]*/ VARIANT NewItemValue ) = 0;
      virtual HRESULT __stdcall raw_GetDefaultValues (
        /*[in,out]*/ long * NumberOfEntries,
        /*[in,out]*/ SAFEARRAY * * DefaultValues ) = 0;
};

enum WirePathConstants
{
    seSingleWirePath = 0,
    seCableWirePathMaster = 1,
    seCableWirePathMember = 2
};

struct __declspec(uuid("88e1df18-e0ca-460b-b11f-a6b6bab4c8e1"))
WirePathCableMembers : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    WirePathPtr Item (
        const _variant_t & Index );
    long GetCount ( );
};

struct __declspec(uuid("a0208c63-a2bf-4c93-823b-23de14d5b6a0"))
_IWirePathCableMembersAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    WirePathPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct WirePath * * Item ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
};

enum WirePathConstantsEx
{
    seSingleWirePathEx = 0,
    seCableWirePathSource = 1,
    seCableWirePathMemberEx = 2
};

struct __declspec(uuid("2bfccd10-92df-40e3-98c1-09321182840e"))
_IWirePathAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetSegments))
    WirePathSegmentsPtr Segments;
    __declspec(property(get=GetColor,put=PutColor))
    long Color;
    __declspec(property(get=GetColorName,put=PutColorName))
    _bstr_t ColorName;
    __declspec(property(get=GetMaterial,put=PutMaterial))
    _bstr_t Material;
    __declspec(property(get=GetDiameter,put=PutDiameter))
    double Diameter;
    __declspec(property(get=GetLength,put=PutLength))
    double Length;
    __declspec(property(get=GetStartConnector,put=PutStartConnector))
    _bstr_t StartConnector;
    __declspec(property(get=GetEndConnector,put=PutEndConnector))
    _bstr_t EndConnector;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetAssemblyProperty))
    AssemblyPropertyPtr AssemblyProperty;
    __declspec(property(get=GetType,put=PutType))
    enum WirePathConstants Type;
    __declspec(property(get=GetCableMaster))
    WirePathPtr CableMaster;
    __declspec(property(get=GetCableMembers))
    WirePathCableMembersPtr CableMembers;
    __declspec(property(get=GetCableSource))
    WirePathPtr CableSource;
    __declspec(property(get=GetTypeEx,put=PutTypeEx))
    enum WirePathConstantsEx TypeEx;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT AddSegment (
        IDispatch * Segment,
        enum TubeSegmentAdditionStatusConstants * Status );
    HRESULT RemoveSegment (
        IDispatch * Segment,
        enum TubeSegmentRemovalStatusConstants * Status );
    WirePathSegmentsPtr GetSegments ( );
    void PutName (
        _bstr_t Name );
    _bstr_t GetName ( );
    void PutColor (
        long Color );
    long GetColor ( );
    void PutColorName (
        _bstr_t ColorName );
    _bstr_t GetColorName ( );
    void PutMaterial (
        _bstr_t Material );
    _bstr_t GetMaterial ( );
    void PutDiameter (
        double Diameter );
    double GetDiameter ( );
    void PutLength (
        double Length );
    double GetLength ( );
    void PutStartConnector (
        _bstr_t StartConnector );
    _bstr_t GetStartConnector ( );
    void PutEndConnector (
        _bstr_t EndConnector );
    _bstr_t GetEndConnector ( );
    void PutVisible (
        VARIANT_BOOL Visible );
    VARIANT_BOOL GetVisible ( );
    AssemblyPropertyPtr GetAssemblyProperty ( );
    enum WirePathConstants GetType ( );
    void PutType (
        enum WirePathConstants Type );
    WirePathPtr GetCableMaster ( );
    HRESULT AddCableMember (
        struct WirePath * WirePath );
    HRESULT RemoveCableMember (
        struct WirePath * WirePath );
    HRESULT SetCableMemberIndex (
        struct WirePath * WirePath,
        long Index );
    HRESULT GetCableMemberIndex (
        struct WirePath * WirePath,
        long * Index );
    WirePathCableMembersPtr GetCableMembers ( );
    WirePathPtr GetCableSource ( );
    enum WirePathConstantsEx GetTypeEx ( );
    void PutTypeEx (
        enum WirePathConstantsEx TypeEx );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_AddSegment (
        /*[in]*/ IDispatch * Segment,
        /*[out]*/ enum TubeSegmentAdditionStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall raw_RemoveSegment (
        /*[in]*/ IDispatch * Segment,
        /*[out]*/ enum TubeSegmentRemovalStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall get_Segments (
        /*[out,retval]*/ struct WirePathSegments * * Segments ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Color (
        /*[in]*/ long Color ) = 0;
      virtual HRESULT __stdcall get_Color (
        /*[out,retval]*/ long * Color ) = 0;
      virtual HRESULT __stdcall put_ColorName (
        /*[in]*/ BSTR ColorName ) = 0;
      virtual HRESULT __stdcall get_ColorName (
        /*[out,retval]*/ BSTR * ColorName ) = 0;
      virtual HRESULT __stdcall put_Material (
        /*[in]*/ BSTR Material ) = 0;
      virtual HRESULT __stdcall get_Material (
        /*[out,retval]*/ BSTR * Material ) = 0;
      virtual HRESULT __stdcall put_Diameter (
        /*[in]*/ double Diameter ) = 0;
      virtual HRESULT __stdcall get_Diameter (
        /*[out,retval]*/ double * Diameter ) = 0;
      virtual HRESULT __stdcall put_Length (
        /*[in]*/ double Length ) = 0;
      virtual HRESULT __stdcall get_Length (
        /*[out,retval]*/ double * Length ) = 0;
      virtual HRESULT __stdcall put_StartConnector (
        /*[in]*/ BSTR StartConnector ) = 0;
      virtual HRESULT __stdcall get_StartConnector (
        /*[out,retval]*/ BSTR * StartConnector ) = 0;
      virtual HRESULT __stdcall put_EndConnector (
        /*[in]*/ BSTR EndConnector ) = 0;
      virtual HRESULT __stdcall get_EndConnector (
        /*[out,retval]*/ BSTR * EndConnector ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall get_AssemblyProperty (
        /*[out,retval]*/ struct AssemblyProperty * * Property ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum WirePathConstants * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum WirePathConstants Type ) = 0;
      virtual HRESULT __stdcall get_CableMaster (
        /*[out,retval]*/ struct WirePath * * WirePath ) = 0;
      virtual HRESULT __stdcall raw_AddCableMember (
        /*[in]*/ struct WirePath * WirePath ) = 0;
      virtual HRESULT __stdcall raw_RemoveCableMember (
        /*[in]*/ struct WirePath * WirePath ) = 0;
      virtual HRESULT __stdcall raw_SetCableMemberIndex (
        /*[in]*/ struct WirePath * WirePath,
        /*[in]*/ long Index ) = 0;
      virtual HRESULT __stdcall raw_GetCableMemberIndex (
        /*[in]*/ struct WirePath * WirePath,
        /*[out]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_CableMembers (
        /*[out,retval]*/ struct WirePathCableMembers * * CableMembers ) = 0;
      virtual HRESULT __stdcall get_CableSource (
        /*[out,retval]*/ struct WirePath * * WirePath ) = 0;
      virtual HRESULT __stdcall get_TypeEx (
        /*[out,retval]*/ enum WirePathConstantsEx * TypeEx ) = 0;
      virtual HRESULT __stdcall put_TypeEx (
        /*[in]*/ enum WirePathConstantsEx TypeEx ) = 0;
};

struct __declspec(uuid("e1400cd0-1dd4-4a40-a45c-2239d46c2403"))
WireRunPaths : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    WirePathPtr Item (
        const _variant_t & Index );
    long GetCount ( );
};

struct __declspec(uuid("4e7012b2-3f49-455d-bb29-2dca8a7bc94d"))
_IWireRunAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetWirePaths))
    WireRunPathsPtr WirePaths;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetOccurrence))
    OccurrencePtr Occurrence;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT AddWirePath (
        struct WirePath * WirePath );
    HRESULT RemoveWirePath (
        struct WirePath * WirePath );
    WireRunPathsPtr GetWirePaths ( );
    void PutName (
        _bstr_t Name );
    _bstr_t GetName ( );
    void PutVisible (
        VARIANT_BOOL Visible );
    VARIANT_BOOL GetVisible ( );
    OccurrencePtr GetOccurrence ( );
    HRESULT IsFrozen (
        VARIANT_BOOL * bFrozen );
    HRESULT IsLinked (
        VARIANT_BOOL * bLinked );
    HRESULT Freeze ( );
    HRESULT Thaw ( );
    HRESULT BreakLink ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_AddWirePath (
        /*[in]*/ struct WirePath * WirePath ) = 0;
      virtual HRESULT __stdcall raw_RemoveWirePath (
        /*[in]*/ struct WirePath * WirePath ) = 0;
      virtual HRESULT __stdcall get_WirePaths (
        /*[out,retval]*/ struct WireRunPaths * * Paths ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall get_Occurrence (
        /*[out,retval]*/ struct Occurrence * * Occurrence ) = 0;
      virtual HRESULT __stdcall raw_IsFrozen (
        /*[out]*/ VARIANT_BOOL * bFrozen ) = 0;
      virtual HRESULT __stdcall raw_IsLinked (
        /*[out]*/ VARIANT_BOOL * bLinked ) = 0;
      virtual HRESULT __stdcall raw_Freeze ( ) = 0;
      virtual HRESULT __stdcall raw_Thaw ( ) = 0;
      virtual HRESULT __stdcall raw_BreakLink ( ) = 0;
};

struct __declspec(uuid("2e2c305b-0bea-4c53-9131-21156a651b37"))
_IWireRunPathsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    WirePathPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct WirePath * * Item ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
};

struct __declspec(uuid("6beef21f-eee4-4445-b4fb-ae569d78e7f5"))
WirePaths : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    WirePathPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    WirePathPtr Add (
        _bstr_t Name );
    HRESULT Delete (
        struct WirePath * WirePath );
};

struct __declspec(uuid("2c829edd-6e29-4506-bd1f-631f35ce23da"))
_IWirePathsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    WirePathPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    WirePathPtr Add (
        _bstr_t Name );
    HRESULT Delete (
        struct WirePath * WirePath );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct WirePath * * Item ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct WirePath * * WirePath ) = 0;
      virtual HRESULT __stdcall raw_Delete (
        /*[in]*/ struct WirePath * WirePath ) = 0;
};

struct __declspec(uuid("282cf056-a43a-453d-9c3a-dec7ce854411"))
AssemblyProperties : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetDefaultCustomOccurrenceProperties))
    DefaultCustomOccurrencePropertiesPtr DefaultCustomOccurrenceProperties;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyPropertyPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    AssemblyPropertyPtr AddProperty (
        _bstr_t MemberName );
    DefaultCustomOccurrencePropertiesPtr GetDefaultCustomOccurrenceProperties ( );
    HRESULT LoadCustomOccurrenceProperties ( );
    HRESULT DeleteCustomOccurrenceProperties (
        SAFEARRAY * * CustomOccurrencePropertyNames );
};

struct __declspec(uuid("e4766118-0958-4441-896a-22a8ce1c6853"))
DefaultCustomOccurrenceProperties : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyPropertyPtr Item (
        const _variant_t & Index );
    long GetCount ( );
};

struct __declspec(uuid("cee7ac30-4fa5-4343-99d3-c9e2732eceb6"))
_IAssemblyPropertiesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetDefaultCustomOccurrenceProperties))
    DefaultCustomOccurrencePropertiesPtr DefaultCustomOccurrenceProperties;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyPropertyPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    AssemblyPropertyPtr AddProperty (
        _bstr_t MemberName );
    DefaultCustomOccurrencePropertiesPtr GetDefaultCustomOccurrenceProperties ( );
    HRESULT LoadCustomOccurrenceProperties ( );
    HRESULT DeleteCustomOccurrenceProperties (
        SAFEARRAY * * CustomOccurrencePropertyNames );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct AssemblyProperty * * Item ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall raw_AddProperty (
        /*[in]*/ BSTR MemberName,
        /*[out,retval]*/ struct AssemblyProperty * * AssemblyProperty ) = 0;
      virtual HRESULT __stdcall get_DefaultCustomOccurrenceProperties (
        /*[out,retval]*/ struct DefaultCustomOccurrenceProperties * * DefaultCustomOccurrenceProperties ) = 0;
      virtual HRESULT __stdcall raw_LoadCustomOccurrenceProperties ( ) = 0;
      virtual HRESULT __stdcall raw_DeleteCustomOccurrenceProperties (
        /*[in]*/ SAFEARRAY * * CustomOccurrencePropertyNames ) = 0;
};

struct __declspec(uuid("d112e397-4035-40d7-b2fd-ecce19c8859e"))
_IDefaultCustomOccurrencePropertiesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyPropertyPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct AssemblyProperty * * Item ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
};

struct __declspec(uuid("3823602a-1748-4108-a76b-6e3f8c6ffd48"))
CurveSegments : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    CurveSegmentPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    CurveSegmentPtr Add (
        long PathSegmentsCount,
        SAFEARRAY * * PathSegments,
        enum CurveSegmentValidationConstants * Validation );
};

struct __declspec(uuid("553cadf8-5004-43e0-b22f-a592edeb9f4a"))
CurveSegment : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetValidation))
    enum CurveSegmentValidationConstants Validation;
    __declspec(property(get=GetWhichKeypoints,put=PutWhichKeypoints))
    enum CurveSegmentWhichKeypointsConstants WhichKeypoints;
    __declspec(property(get=GetStartDerivativeMagnitude,put=PutStartDerivativeMagnitude))
    double StartDerivativeMagnitude;
    __declspec(property(get=GetEndDerivativeMagnitude,put=PutEndDerivativeMagnitude))
    double EndDerivativeMagnitude;
    __declspec(property(get=GetPathSegmentsCount))
    long PathSegmentsCount;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    enum TGFramework::ObjectType GetType ( );
    enum CurveSegmentValidationConstants GetValidation ( );
    enum CurveSegmentWhichKeypointsConstants GetWhichKeypoints ( );
    void PutWhichKeypoints (
        enum CurveSegmentWhichKeypointsConstants _arg1 );
    double GetStartDerivativeMagnitude ( );
    void PutStartDerivativeMagnitude (
        double _arg1 );
    double GetEndDerivativeMagnitude ( );
    void PutEndDerivativeMagnitude (
        double _arg1 );
    HRESULT AddPathSegment (
        IDispatch * pPathSegment,
        enum CurveSegmentPathAdditionStatusConstants * AdditionStatus );
    HRESULT RemovePathSegment (
        IDispatch * pPathSegment,
        enum CurveSegmentPathRemovalStatusConstants * RemovalStatus );
    HRESULT ShowPathSegments ( );
    HRESULT HidePathSegments ( );
    IDispatchPtr GetPathSegment (
        const _variant_t & Index );
    long GetPathSegmentsCount ( );
    HRESULT Delete ( );
};

enum CurveSegmentValidationConstants
{
    seCurveSegmentValidation_valid = 0,
    seCurveSegmentValidation_break = 1,
    seCurveSegmentValidation_angle = 2,
    seCurveSegmentValidation_length = 4,
    seCurveSegmentValidation_intersection = 8,
    seCurveSegmentValidation_fork = 16,
    seCurveSegmentValidation_duplicate_segment = 32,
    seCurveSegmentValidation_loop = 64,
    seCurveSegmentValidation_unknown_segment = 128,
    seCurveSegmentValidation_unknown = 256,
    seCurveSegmentValidation_empty = 512,
    seCurveSegmentValidation_single_segment = 1024,
    seCurveSegmentValidation_connectivity = 2048,
    seCurveSegmentValidation_calculation = 4096,
    seCurveSegmentValidation_status = 8192
};

struct __declspec(uuid("09e2b3d5-74de-4b31-8f3f-7c4a885f005e"))
_ICurveSegmentsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    CurveSegmentPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    CurveSegmentPtr Add (
        long PathSegmentsCount,
        SAFEARRAY * * PathSegments,
        enum CurveSegmentValidationConstants * Validation );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct CurveSegment * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ long PathSegmentsCount,
        /*[in]*/ SAFEARRAY * * PathSegments,
        /*[out]*/ enum CurveSegmentValidationConstants * Validation,
        /*[out,retval]*/ struct CurveSegment * * ppCurveSegment ) = 0;
};

enum CurveSegmentWhichKeypointsConstants
{
    seCurveSegmentWhichKeypoints_mid_points = 1,
    seCurveSegmentWhichKeypoints_end_points = 2,
    seCurveSegmentWhichKeypoints_all_points = 3
};

enum CurveSegmentPathAdditionStatusConstants
{
    seCurveSegmentPathAdditionStatusSucceeded = 0,
    seCurveSegmentPathAdditionStatusFailedUnknownReason = 1,
    seCurveSegmentPathAdditionStatusFailedBreak = 2,
    seCurveSegmentPathAdditionStatusFailedDuplicate = 3,
    seCurveSegmentPathAdditionStatusFailedFork = 4,
    seCurveSegmentPathAdditionStatusFailedIntersection = 5,
    seCurveSegmentPathAdditionStatusFailedLoop = 6,
    seCurveSegmentPathAdditionStatusFailedUnknownSegment = 7,
    seCurveSegmentPathAdditionStatusFailedLength = 8
};

enum CurveSegmentPathRemovalStatusConstants
{
    seCurveSegmentPathRemovalStatusSucceeded = 0,
    seCurveSegmentPathRemovalStatusFailedUnknownReason = 1,
    seCurveSegmentPathRemovalStatusFailedBreak = 2,
    seCurveSegmentPathRemovalStatusFailedNotInPath = 3,
    seCurveSegmentPathRemovalStatusFailedSingle = 4,
    seCurveSegmentPathRemovalStatusFailedEmpty = 5
};

struct __declspec(uuid("f650910d-27cd-4433-91de-bfef005d8262"))
_ICurveSegmentAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetValidation))
    enum CurveSegmentValidationConstants Validation;
    __declspec(property(get=GetWhichKeypoints,put=PutWhichKeypoints))
    enum CurveSegmentWhichKeypointsConstants WhichKeypoints;
    __declspec(property(get=GetStartDerivativeMagnitude,put=PutStartDerivativeMagnitude))
    double StartDerivativeMagnitude;
    __declspec(property(get=GetEndDerivativeMagnitude,put=PutEndDerivativeMagnitude))
    double EndDerivativeMagnitude;
    __declspec(property(get=GetPathSegmentsCount))
    long PathSegmentsCount;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    enum TGFramework::ObjectType GetType ( );
    enum CurveSegmentValidationConstants GetValidation ( );
    enum CurveSegmentWhichKeypointsConstants GetWhichKeypoints ( );
    void PutWhichKeypoints (
        enum CurveSegmentWhichKeypointsConstants WhichKeypoints );
    double GetStartDerivativeMagnitude ( );
    void PutStartDerivativeMagnitude (
        double StartDerivativeMagnitude );
    double GetEndDerivativeMagnitude ( );
    void PutEndDerivativeMagnitude (
        double EndDerivativeMagnitude );
    HRESULT AddPathSegment (
        IDispatch * pPathSegment,
        enum CurveSegmentPathAdditionStatusConstants * AdditionStatus );
    HRESULT RemovePathSegment (
        IDispatch * pPathSegment,
        enum CurveSegmentPathRemovalStatusConstants * RemovalStatus );
    HRESULT ShowPathSegments ( );
    HRESULT HidePathSegments ( );
    IDispatchPtr GetPathSegment (
        const _variant_t & Index );
    long GetPathSegmentsCount ( );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall get_Validation (
        /*[out,retval]*/ enum CurveSegmentValidationConstants * Validation ) = 0;
      virtual HRESULT __stdcall get_WhichKeypoints (
        /*[out,retval]*/ enum CurveSegmentWhichKeypointsConstants * WhichKeypoints ) = 0;
      virtual HRESULT __stdcall put_WhichKeypoints (
        /*[in]*/ enum CurveSegmentWhichKeypointsConstants WhichKeypoints ) = 0;
      virtual HRESULT __stdcall get_StartDerivativeMagnitude (
        /*[out,retval]*/ double * StartDerivativeMagnitude ) = 0;
      virtual HRESULT __stdcall put_StartDerivativeMagnitude (
        /*[in]*/ double StartDerivativeMagnitude ) = 0;
      virtual HRESULT __stdcall get_EndDerivativeMagnitude (
        /*[out,retval]*/ double * EndDerivativeMagnitude ) = 0;
      virtual HRESULT __stdcall put_EndDerivativeMagnitude (
        /*[in]*/ double EndDerivativeMagnitude ) = 0;
      virtual HRESULT __stdcall raw_AddPathSegment (
        /*[in]*/ IDispatch * pPathSegment,
        /*[out]*/ enum CurveSegmentPathAdditionStatusConstants * AdditionStatus ) = 0;
      virtual HRESULT __stdcall raw_RemovePathSegment (
        /*[in]*/ IDispatch * pPathSegment,
        /*[out]*/ enum CurveSegmentPathRemovalStatusConstants * RemovalStatus ) = 0;
      virtual HRESULT __stdcall raw_ShowPathSegments ( ) = 0;
      virtual HRESULT __stdcall raw_HidePathSegments ( ) = 0;
      virtual HRESULT __stdcall raw_GetPathSegment (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * PathSegment ) = 0;
      virtual HRESULT __stdcall get_PathSegmentsCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

enum AssemblyReportTypeConstants
{
    seAssemblyWireReportAtomic = 0,
    seAssemblyWireReportExpanded = 1
};

struct __declspec(uuid("42c7cb2f-7e5f-4262-b1f7-c0fad057368d"))
VirtualComponentOccurrences : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    VirtualComponentOccurrencePtr Item (
        const _variant_t & Index );
    long GetCount ( );
    VirtualComponentOccurrencePtr Add (
        _bstr_t VirtualComponentName,
        enum VirtualComponentTypeConstants VirtualComponentType,
        enum VirtualComponentStatusConstants * ComponentStatusConstants );
    VirtualComponentOccurrencePtr AddAsPreDefined (
        _bstr_t FileName,
        enum VirtualComponentStatusConstants * ComponentStatusConstants );
    VirtualComponentOccurrencePtr AddBIDM (
        _bstr_t bstrDocumentNumber,
        _bstr_t bstrRevisionID,
        enum VirtualComponentTypeConstants VirtualComponentType,
        enum VirtualComponentStatusConstants * ComponentStatusConstants );
};

struct __declspec(uuid("ba37a3d7-d66a-41b7-8ccd-265f18430739"))
VirtualComponentOccurrence : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetVirtualComponent))
    VirtualComponentPtr VirtualComponent;
    __declspec(property(get=GetIsPreDefined))
    VARIANT_BOOL IsPreDefined;
    __declspec(property(get=GetIsPositioned))
    VARIANT_BOOL IsPositioned;
    __declspec(property(get=GetAngle,put=PutAngle))
    double Angle;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Delete ( );
    _bstr_t GetName ( );
    VirtualComponentPtr GetVirtualComponent ( );
    HRESULT MoveTo (
        struct VirtualComponent * VirtualComponent );
    VARIANT_BOOL GetIsPositioned ( );
    HRESULT IsMaster (
        VARIANT_BOOL * IsMaster,
        VARIANT * ppMasterOccurrence = &vtMissing );
    VARIANT_BOOL GetIsPreDefined ( );
    HRESULT ReplaceComponent (
        _bstr_t FileName,
        VARIANT_BOOL ReplaceAll,
        VARIANT * ComponentStatusConstants = &vtMissing );
    HRESULT PositionComponent (
        IDispatch * pProfile,
        double x,
        double y,
        const _variant_t & Angle = vtMissing,
        VARIANT * ComponentStatusConstants = &vtMissing );
    HRESULT SetViewDefinition (
        enum VirtualComponentPublishConstants PublishOn,
        const _variant_t & SketchName = vtMissing );
    HRESULT GetViewDefinition (
        enum VirtualComponentPublishConstants * PublishOn,
        VARIANT * SketchName = &vtMissing );
    HRESULT SetOrigin (
        double x,
        double y );
    HRESULT GetOrigin (
        double * x,
        double * y );
    HRESULT SetOriginByKeypoints (
        IDispatch * Object1,
        enum TGFramework::KeyPointType KeyPointTypeConstant1,
        IDispatch * Object2,
        enum TGFramework::KeyPointType KeyPointTypeConstant2 );
    HRESULT GetOriginByKeypoints (
        IDispatch * * Object1,
        enum TGFramework::KeyPointType * KeyPointTypeConstant1,
        IDispatch * * Object2,
        enum TGFramework::KeyPointType * KeyPointTypeConstant2 );
    void PutAngle (
        double _arg1 );
    double GetAngle ( );
    HRESULT Show ( );
    HRESULT ShowAll ( );
    HRESULT Hide ( );
    HRESULT HideAll ( );
    VARIANT_BOOL IsVisible ( );
    HRESULT IsSource (
        VARIANT_BOOL * IsSource,
        VARIANT * ppSourceOccurrence = &vtMissing );
};

struct __declspec(uuid("70b1de86-948a-42fe-acb9-a551429dddda"))
VirtualComponent : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetVirtualComponentType))
    enum VirtualComponentTypeConstants VirtualComponentType;
    __declspec(property(get=GetProperties))
    IDispatchPtr Properties;
    __declspec(property(get=GetVirtualComponentOccurrences))
    VirtualComponentOccurrencesPtr VirtualComponentOccurrences;
    __declspec(property(get=GetPublishPath,put=PutPublishPath))
    _bstr_t PublishPath;
    __declspec(property(get=GetTemplateName,put=PutTemplateName))
    _bstr_t TemplateName;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Delete ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t _arg1 );
    enum VirtualComponentTypeConstants GetVirtualComponentType ( );
    IDispatchPtr GetProperties ( );
    VirtualComponentOccurrencesPtr GetVirtualComponentOccurrences ( );
    _bstr_t GetPublishPath ( );
    void PutPublishPath (
        _bstr_t _arg1 );
    _bstr_t GetTemplateName ( );
    void PutTemplateName (
        _bstr_t _arg1 );
    HRESULT SetGeometry (
        long NumElements,
        SAFEARRAY * * GeomElements );
    HRESULT GetGeometry (
        long * NumElements,
        SAFEARRAY * * GeomElements );
    HRESULT RemoveGeometry (
        long NumElements,
        SAFEARRAY * * GeomElements );
    HRESULT UpdateComponent (
        VARIANT * ComponentStatusConstants = &vtMissing );
};

enum VirtualComponentTypeConstants
{
    seVirtualComponentType_Unknown = 1,
    seVirtualComponentType_Assembly = 2,
    seVirtualComponentType_Part = 3,
    seVirtualComponentType_Sheetmetal = 4
};

struct __declspec(uuid("8af78615-322b-4200-939e-957de506f3a5"))
_IVirtualComponentAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetVirtualComponentType))
    enum VirtualComponentTypeConstants VirtualComponentType;
    __declspec(property(get=GetProperties))
    IDispatchPtr Properties;
    __declspec(property(get=GetVirtualComponentOccurrences))
    VirtualComponentOccurrencesPtr VirtualComponentOccurrences;
    __declspec(property(get=GetPublishPath,put=PutPublishPath))
    _bstr_t PublishPath;
    __declspec(property(get=GetTemplateName,put=PutTemplateName))
    _bstr_t TemplateName;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Delete ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    enum VirtualComponentTypeConstants GetVirtualComponentType ( );
    IDispatchPtr GetProperties ( );
    VirtualComponentOccurrencesPtr GetVirtualComponentOccurrences ( );
    _bstr_t GetPublishPath ( );
    void PutPublishPath (
        _bstr_t PublishPath );
    _bstr_t GetTemplateName ( );
    void PutTemplateName (
        _bstr_t TemplateName );
    HRESULT SetGeometry (
        long NumElements,
        SAFEARRAY * * GeomElements );
    HRESULT GetGeometry (
        long * NumElements,
        SAFEARRAY * * GeomElements );
    HRESULT RemoveGeometry (
        long NumElements,
        SAFEARRAY * * GeomElements );
    HRESULT UpdateComponent (
        VARIANT * ComponentStatusConstants );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_VirtualComponentType (
        /*[out,retval]*/ enum VirtualComponentTypeConstants * VirtualComponentType ) = 0;
      virtual HRESULT __stdcall get_Properties (
        /*[out,retval]*/ IDispatch * * Properties ) = 0;
      virtual HRESULT __stdcall get_VirtualComponentOccurrences (
        /*[out,retval]*/ struct VirtualComponentOccurrences * * VirtualComponentOccurrences ) = 0;
      virtual HRESULT __stdcall get_PublishPath (
        /*[out,retval]*/ BSTR * PublishPath ) = 0;
      virtual HRESULT __stdcall put_PublishPath (
        /*[in]*/ BSTR PublishPath ) = 0;
      virtual HRESULT __stdcall get_TemplateName (
        /*[out,retval]*/ BSTR * TemplateName ) = 0;
      virtual HRESULT __stdcall put_TemplateName (
        /*[in]*/ BSTR TemplateName ) = 0;
      virtual HRESULT __stdcall raw_SetGeometry (
        /*[in]*/ long NumElements,
        /*[in,out]*/ SAFEARRAY * * GeomElements ) = 0;
      virtual HRESULT __stdcall raw_GetGeometry (
        /*[out]*/ long * NumElements,
        /*[in,out]*/ SAFEARRAY * * GeomElements ) = 0;
      virtual HRESULT __stdcall raw_RemoveGeometry (
        /*[in]*/ long NumElements,
        /*[in,out]*/ SAFEARRAY * * GeomElements ) = 0;
      virtual HRESULT __stdcall raw_UpdateComponent (
        /*[out]*/ VARIANT * ComponentStatusConstants ) = 0;
};

enum VirtualComponentPublishConstants
{
    seVCPublishOn_FrontView = 1,
    seVCPublishOn_TopView = 2,
    seVCPublishOn_RightView = 3,
    seVCPublishOn_SketchView = 4
};

struct __declspec(uuid("767ea5ef-e357-43bc-b7f8-cc0b933d31d5"))
_IVirtualComponentOccurrenceAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetVirtualComponent))
    VirtualComponentPtr VirtualComponent;
    __declspec(property(get=GetIsPreDefined))
    VARIANT_BOOL IsPreDefined;
    __declspec(property(get=GetIsPositioned))
    VARIANT_BOOL IsPositioned;
    __declspec(property(get=GetAngle,put=PutAngle))
    double Angle;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Delete ( );
    _bstr_t GetName ( );
    VirtualComponentPtr GetVirtualComponent ( );
    HRESULT MoveTo (
        struct VirtualComponent * VirtualComponent );
    VARIANT_BOOL GetIsPositioned ( );
    HRESULT IsMaster (
        VARIANT_BOOL * IsMaster,
        VARIANT * ppMasterOccurrence );
    VARIANT_BOOL GetIsPreDefined ( );
    HRESULT ReplaceComponent (
        _bstr_t FileName,
        VARIANT_BOOL ReplaceAll,
        VARIANT * ComponentStatusConstants );
    HRESULT PositionComponent (
        IDispatch * pProfile,
        double x,
        double y,
        const _variant_t & Angle,
        VARIANT * ComponentStatusConstants );
    HRESULT SetViewDefinition (
        enum VirtualComponentPublishConstants PublishOn,
        const _variant_t & SketchName = vtMissing );
    HRESULT GetViewDefinition (
        enum VirtualComponentPublishConstants * PublishOn,
        VARIANT * SketchName );
    HRESULT SetOrigin (
        double x,
        double y );
    HRESULT GetOrigin (
        double * x,
        double * y );
    HRESULT SetOriginByKeypoints (
        IDispatch * Object1,
        enum TGFramework::KeyPointType KeyPointTypeConstant1,
        IDispatch * Object2,
        enum TGFramework::KeyPointType KeyPointTypeConstant2 );
    HRESULT GetOriginByKeypoints (
        IDispatch * * Object1,
        enum TGFramework::KeyPointType * KeyPointTypeConstant1,
        IDispatch * * Object2,
        enum TGFramework::KeyPointType * KeyPointTypeConstant2 );
    void PutAngle (
        double dAngle );
    double GetAngle ( );
    HRESULT Show ( );
    HRESULT ShowAll ( );
    HRESULT Hide ( );
    HRESULT HideAll ( );
    VARIANT_BOOL IsVisible ( );
    HRESULT IsSource (
        VARIANT_BOOL * IsSource,
        VARIANT * ppSourceOccurrence );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_VirtualComponent (
        /*[out,retval]*/ struct VirtualComponent * * VirtualComponent ) = 0;
      virtual HRESULT __stdcall raw_MoveTo (
        /*[in]*/ struct VirtualComponent * VirtualComponent ) = 0;
      virtual HRESULT __stdcall get_IsPositioned (
        /*[out,retval]*/ VARIANT_BOOL * IsPositioned ) = 0;
      virtual HRESULT __stdcall raw_IsMaster (
        /*[out]*/ VARIANT_BOOL * IsMaster,
        /*[out]*/ VARIANT * ppMasterOccurrence ) = 0;
      virtual HRESULT __stdcall get_IsPreDefined (
        /*[out,retval]*/ VARIANT_BOOL * IsPreDefined ) = 0;
      virtual HRESULT __stdcall raw_ReplaceComponent (
        /*[in]*/ BSTR FileName,
        /*[in]*/ VARIANT_BOOL ReplaceAll,
        /*[out]*/ VARIANT * ComponentStatusConstants ) = 0;
      virtual HRESULT __stdcall raw_PositionComponent (
        /*[in]*/ IDispatch * pProfile,
        /*[in]*/ double x,
        /*[in]*/ double y,
        /*[in]*/ VARIANT Angle,
        /*[out]*/ VARIANT * ComponentStatusConstants ) = 0;
      virtual HRESULT __stdcall raw_SetViewDefinition (
        /*[in]*/ enum VirtualComponentPublishConstants PublishOn,
        /*[in]*/ VARIANT SketchName = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_GetViewDefinition (
        /*[out]*/ enum VirtualComponentPublishConstants * PublishOn,
        /*[out]*/ VARIANT * SketchName ) = 0;
      virtual HRESULT __stdcall raw_SetOrigin (
        /*[in]*/ double x,
        /*[in]*/ double y ) = 0;
      virtual HRESULT __stdcall raw_GetOrigin (
        /*[out]*/ double * x,
        /*[out]*/ double * y ) = 0;
      virtual HRESULT __stdcall raw_SetOriginByKeypoints (
        /*[in]*/ IDispatch * Object1,
        /*[in]*/ enum TGFramework::KeyPointType KeyPointTypeConstant1,
        /*[in]*/ IDispatch * Object2,
        /*[in]*/ enum TGFramework::KeyPointType KeyPointTypeConstant2 ) = 0;
      virtual HRESULT __stdcall raw_GetOriginByKeypoints (
        /*[out]*/ IDispatch * * Object1,
        /*[out]*/ enum TGFramework::KeyPointType * KeyPointTypeConstant1,
        /*[out]*/ IDispatch * * Object2,
        /*[out]*/ enum TGFramework::KeyPointType * KeyPointTypeConstant2 ) = 0;
      virtual HRESULT __stdcall put_Angle (
        /*[in]*/ double dAngle ) = 0;
      virtual HRESULT __stdcall get_Angle (
        /*[out,retval]*/ double * dAngle ) = 0;
      virtual HRESULT __stdcall raw_Show ( ) = 0;
      virtual HRESULT __stdcall raw_ShowAll ( ) = 0;
      virtual HRESULT __stdcall raw_Hide ( ) = 0;
      virtual HRESULT __stdcall raw_HideAll ( ) = 0;
      virtual HRESULT __stdcall raw_IsVisible (
        /*[out,retval]*/ VARIANT_BOOL * IsVisible ) = 0;
      virtual HRESULT __stdcall raw_IsSource (
        /*[out]*/ VARIANT_BOOL * IsSource,
        /*[out]*/ VARIANT * ppSourceOccurrence ) = 0;
};

enum VirtualComponentStatusConstants
{
    seVCStatus_Success = 1,
    seVCStatus_Fail = 2,
    seVCStatus_AddUnManagedToManaged = 3,
    seVCStatus_AddManagedToUnManaged = 4,
    seVCStatus_ReplaceConflictWithVirtualComponent = 5,
    seVCStatus_SourceFileNotFound = 6,
    seVCStatus_NameConflictWithVirtualComponent = 7,
    seVCStatus_NameConflictWithPreDefinedComponent = 8,
    seVCStatus_DuplicateNameConflictWithVirtualComponent = 9,
    seVCStatus_CannotAddToComponent = 10,
    seVCStatus_ComponentSketchMissing = 11
};

struct __declspec(uuid("441054dd-ffcd-4926-9750-fd5597828e6b"))
_IVirtualComponentOccurrencesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    VirtualComponentOccurrencePtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    VirtualComponentOccurrencePtr Add (
        _bstr_t VirtualComponentName,
        enum VirtualComponentTypeConstants VirtualComponentType,
        enum VirtualComponentStatusConstants * ComponentStatusConstants );
    VirtualComponentOccurrencePtr AddAsPreDefined (
        _bstr_t FileName,
        enum VirtualComponentStatusConstants * ComponentStatusConstants );
    VirtualComponentOccurrencePtr AddBIDM (
        _bstr_t bstrDocumentNumber,
        _bstr_t bstrRevisionID,
        enum VirtualComponentTypeConstants VirtualComponentType,
        enum VirtualComponentStatusConstants * ComponentStatusConstants );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct VirtualComponentOccurrence * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR VirtualComponentName,
        /*[in]*/ enum VirtualComponentTypeConstants VirtualComponentType,
        /*[out]*/ enum VirtualComponentStatusConstants * ComponentStatusConstants,
        /*[out,retval]*/ struct VirtualComponentOccurrence * * ppVirtualComponentOccurrence ) = 0;
      virtual HRESULT __stdcall raw_AddAsPreDefined (
        /*[in]*/ BSTR FileName,
        /*[out]*/ enum VirtualComponentStatusConstants * ComponentStatusConstants,
        /*[out,retval]*/ struct VirtualComponentOccurrence * * ppVirtualComponentOccurrence ) = 0;
      virtual HRESULT __stdcall raw_AddBIDM (
        /*[in]*/ BSTR bstrDocumentNumber,
        /*[in]*/ BSTR bstrRevisionID,
        /*[in]*/ enum VirtualComponentTypeConstants VirtualComponentType,
        /*[out]*/ enum VirtualComponentStatusConstants * ComponentStatusConstants,
        /*[out,retval]*/ struct VirtualComponentOccurrence * * ppVirtualComponentOccurrence ) = 0;
};

struct __declspec(uuid("d38d0cc0-92d3-46fe-a3f0-27831cd78946"))
StructuralFrames : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    StructuralFramePtr Item (
        const _variant_t & Index );
    long GetCount ( );
    StructuralFramePtr Add (
        _bstr_t PartFileName,
        long NumPaths,
        SAFEARRAY * * Path,
        const _variant_t & GlobalEndConditions = vtMissing,
        const _variant_t & GlobalEndConditionValue = vtMissing,
        const _variant_t & AutoPosition = vtMissing );
    StructuralFramePtr AddByOrientation (
        _bstr_t PartFileName,
        _bstr_t CoOrdinateSystemName,
        long NumPaths,
        SAFEARRAY * * Path,
        const _variant_t & PreferredOrientationPlane = vtMissing,
        const _variant_t & GlobalEndConditions = vtMissing,
        const _variant_t & GlobalEndConditionValue = vtMissing,
        const _variant_t & AutoPosition = vtMissing );
    HRESULT Delete (
        struct StructuralFrame * StructuralFrame );
    HRESULT FrameSaveAs (
        _bstr_t FileName );
    HRESULT FrameSaveAsTranslated (
        _bstr_t FileName );
    _bstr_t FrameSaveAsBiDM (
        _bstr_t FilePath,
        _bstr_t DocumentNumber,
        _bstr_t Revision,
        _bstr_t Title );
    StructuralFramePtr GetStructuralFrameByOccurrence (
        IDispatch * Occurrence );
    StructuralFramePtr AddWithSplitOnIntersection (
        _bstr_t PartFileName,
        long NumPaths,
        SAFEARRAY * * Path,
        const _variant_t & PreferredOrientationPlane,
        const _variant_t & GlobalEndConditions,
        const _variant_t & GlobalEndConditionValue,
        const _variant_t & AutoPosition,
        _bstr_t CoOrdinateSystemName );
};

struct __declspec(uuid("4baaa61f-14ef-4f61-8d70-26599f8d4328"))
StructuralFrame : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSingleFrameForCollinearPaths,put=PutSingleFrameForCollinearPaths))
    VARIANT_BOOL SingleFrameForCollinearPaths;
    __declspec(property(get=GetSingleFrameForTangentialPaths,put=PutSingleFrameForTangentialPaths))
    VARIANT_BOOL SingleFrameForTangentialPaths;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetAutoPosition,put=PutAutoPosition))
    VARIANT_BOOL AutoPosition;
    __declspec(property(get=GetGlobalDocument,put=PutGlobalDocument))
    _bstr_t GlobalDocument;
    __declspec(property(get=GetWeldGap,put=PutWeldGap))
    double WeldGap;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    void PutName (
        _bstr_t _arg1 );
    _bstr_t GetName ( );
    HRESULT GetGlobalEndCondition (
        enum StructuralFrameEndConditionConstants * EndCondition,
        VARIANT * dValue = &vtMissing );
    HRESULT SetGlobalEndCondition (
        enum StructuralFrameEndConditionConstants EndCondition,
        const _variant_t & dValue = vtMissing );
    VARIANT_BOOL GetAutoPosition ( );
    void PutAutoPosition (
        VARIANT_BOOL _arg1 );
    _bstr_t GetGlobalDocument ( );
    void PutGlobalDocument (
        _bstr_t _arg1 );
    HRESULT SetFramePath (
        long NumPathSegments,
        SAFEARRAY * * PathSegments );
    HRESULT GetFramePath (
        long * NumPathSegments,
        SAFEARRAY * * PathSegments );
    HRESULT GetSections (
        long * NumSections,
        SAFEARRAY * * Sections );
    HRESULT GetRedefineSectionPlacement (
        long SectionId,
        VARIANT * Rotation = &vtMissing,
        VARIANT * XDistance = &vtMissing,
        VARIANT * YDistance = &vtMissing );
    HRESULT SetRedefineSectionPlacement (
        long SectionId,
        const _variant_t & Rotation = vtMissing,
        const _variant_t & XDistance = vtMissing,
        const _variant_t & YDistance = vtMissing );
    HRESULT GetRedefineSectionDocument (
        long SectionId,
        BSTR * PartFileDocument );
    HRESULT SetRedefineSectionDocument (
        long SectionId,
        _bstr_t PartFileDocument );
    HRESULT GetOverrideEndCondition (
        long NumSegments,
        SAFEARRAY * SegmentIds,
        enum StructuralFrameEndConditionConstants * EndCondition,
        VARIANT * dValue = &vtMissing );
    HRESULT SetOverrideEndCondition (
        long NumSegments,
        SAFEARRAY * SegmentIds,
        enum StructuralFrameEndConditionConstants EndCondition,
        const _variant_t & dValue = vtMissing );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL _arg1 );
    HRESULT CutLength (
        double * dCutLength,
        VARIANT * bExactLength = &vtMissing );
    HRESULT SegmentCutLength (
        long SectionId,
        double * dCutLength,
        VARIANT * bExactLength = &vtMissing );
    HRESULT GetFramePathObjects (
        long * NumPathSegments,
        SAFEARRAY * * PathSegments );
    HRESULT ReturnPathForGivenSectionID (
        long SectionId,
        VARIANT * PathId = &vtMissing,
        VARIANT * PathAsObject = &vtMissing );
    HRESULT ReturnOccurrenceForGivenSectionID (
        long SectionId,
        VARIANT * OccurrenceID = &vtMissing,
        VARIANT * OccurrenceAsObject = &vtMissing );
    HRESULT GetPlaneOrientationForGivenSectionID (
        long SectionId,
        VARIANT * XOffset = &vtMissing,
        VARIANT * YOffset = &vtMissing,
        VARIANT * ZOffset = &vtMissing,
        VARIANT * XRotation = &vtMissing,
        VARIANT * YRotation = &vtMissing,
        VARIANT * ZRotation = &vtMissing );
    HRESULT GetSetionIDObject (
        long SectionId,
        IDispatch * * ProfileObject );
    HRESULT RetrieveHoleLocation ( );
    HRESULT DeleteHoleLocation ( );
    VARIANT_BOOL GetSingleFrameForCollinearPaths ( );
    void PutSingleFrameForCollinearPaths (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetSingleFrameForTangentialPaths ( );
    void PutSingleFrameForTangentialPaths (
        VARIANT_BOOL _arg1 );
    HRESULT AssociateLegacyFrameToCrossSection ( );
    HRESULT MiterCut (
        long SectionId,
        double * MiterCut1,
        double * MiterCut2 );
    HRESULT FrameSaveAs (
        _bstr_t FileName );
    HRESULT FrameSaveAsTranslated (
        _bstr_t FileName );
    _bstr_t FrameSaveAsBiDM (
        _bstr_t FilePath,
        _bstr_t DocumentNumber,
        _bstr_t Revision,
        _bstr_t Title );
    double GetWeldGap ( );
    void PutWeldGap (
        double _arg1 );
    HRESULT SideFaceEndAngle (
        long SectionId,
        double * SideFaceEndAngle1,
        double * SideFaceEndAngle2 );
    HRESULT EndFaceEndAngle (
        long SectionId,
        double * EndFaceEndAngle1,
        double * EndFaceEndAngle2 );
    HRESULT GetOverrideEndConditionEx (
        long NumSegments,
        SAFEARRAY * SegmentIds,
        enum StructuralFrameEndConditionConstants * EndCondition,
        VARIANT * dValueEndConditionOrWeldGap,
        VARIANT_BOOL * bApplyWeldGap );
    HRESULT SetOverrideEndConditionEx (
        long NumSegments,
        SAFEARRAY * SegmentIds,
        enum StructuralFrameEndConditionConstants EndCondition,
        const _variant_t & dValueEndConditionOrWeldGap,
        VARIANT_BOOL bApplyWeldGap );
    VARIANT_BOOL GetSplitPath ( );
    HRESULT ApplyExtendTrimToTools (
        long NumTargetSegments,
        SAFEARRAY * TargetSegmentIds,
        enum StructuralFrameExtendTrimPositionConstants Position,
        long NumTools,
        SAFEARRAY * * Tools );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
};

struct __declspec(uuid("89968e01-a4b1-41e8-af77-89624125c1e1"))
_IStructuralFramesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    StructuralFramePtr Item (
        const _variant_t & Index );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    StructuralFramePtr Add (
        _bstr_t PartFileName,
        long NumPaths,
        SAFEARRAY * * Path,
        const _variant_t & GlobalEndConditions = vtMissing,
        const _variant_t & GlobalEndConditionValue = vtMissing,
        const _variant_t & AutoPosition = vtMissing );
    StructuralFramePtr AddByOrientation (
        _bstr_t PartFileName,
        _bstr_t CoOrdinateSystemName,
        long NumPaths,
        SAFEARRAY * * Path,
        const _variant_t & PreferredOrientationPlane = vtMissing,
        const _variant_t & GlobalEndConditions = vtMissing,
        const _variant_t & GlobalEndConditionValue = vtMissing,
        const _variant_t & AutoPosition = vtMissing );
    HRESULT Delete (
        struct StructuralFrame * StructuralFrame );
    HRESULT FrameSaveAs (
        _bstr_t FileName );
    HRESULT FrameSaveAsTranslated (
        _bstr_t FileName );
    _bstr_t FrameSaveAsBiDM (
        _bstr_t FilePath,
        _bstr_t DocumentNumber,
        _bstr_t Revision,
        _bstr_t Title );
    StructuralFramePtr GetStructuralFrameByOccurrence (
        IDispatch * Occurrence );
    StructuralFramePtr AddWithSplitOnIntersection (
        _bstr_t PartFileName,
        long NumPaths,
        SAFEARRAY * * Path,
        const _variant_t & PreferredOrientationPlane,
        const _variant_t & GlobalEndConditions,
        const _variant_t & GlobalEndConditionValue,
        const _variant_t & AutoPosition,
        _bstr_t CoOrdinateSystemName );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct StructuralFrame * * Item ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR PartFileName,
        /*[in]*/ long NumPaths,
        /*[in]*/ SAFEARRAY * * Path,
        /*[in]*/ VARIANT GlobalEndConditions,
        /*[in]*/ VARIANT GlobalEndConditionValue,
        /*[in]*/ VARIANT AutoPosition,
        /*[out,retval]*/ struct StructuralFrame * * StructuralFrame ) = 0;
      virtual HRESULT __stdcall raw_AddByOrientation (
        /*[in]*/ BSTR PartFileName,
        /*[in]*/ BSTR CoOrdinateSystemName,
        /*[in]*/ long NumPaths,
        /*[in]*/ SAFEARRAY * * Path,
        /*[in]*/ VARIANT PreferredOrientationPlane,
        /*[in]*/ VARIANT GlobalEndConditions,
        /*[in]*/ VARIANT GlobalEndConditionValue,
        /*[in]*/ VARIANT AutoPosition,
        /*[out,retval]*/ struct StructuralFrame * * StructuralFrame ) = 0;
      virtual HRESULT __stdcall raw_Delete (
        /*[in]*/ struct StructuralFrame * StructuralFrame ) = 0;
      virtual HRESULT __stdcall raw_FrameSaveAs (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_FrameSaveAsTranslated (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_FrameSaveAsBiDM (
        /*[in]*/ BSTR FilePath,
        /*[in]*/ BSTR DocumentNumber,
        /*[in]*/ BSTR Revision,
        /*[in]*/ BSTR Title,
        /*[out,retval]*/ BSTR * NewFileName ) = 0;
      virtual HRESULT __stdcall raw_GetStructuralFrameByOccurrence (
        /*[in]*/ IDispatch * Occurrence,
        /*[out,retval]*/ struct StructuralFrame * * StructuralFrame ) = 0;
      virtual HRESULT __stdcall raw_AddWithSplitOnIntersection (
        /*[in]*/ BSTR PartFileName,
        /*[in]*/ long NumPaths,
        /*[in]*/ SAFEARRAY * * Path,
        /*[in]*/ VARIANT PreferredOrientationPlane,
        /*[in]*/ VARIANT GlobalEndConditions,
        /*[in]*/ VARIANT GlobalEndConditionValue,
        /*[in]*/ VARIANT AutoPosition,
        /*[in]*/ BSTR CoOrdinateSystemName,
        /*[out,retval]*/ struct StructuralFrame * * StructuralFrame ) = 0;
};

enum StructuralFrameEndConditionConstants
{
    seMiter = 0,
    seButt1 = 1,
    seButt2 = 2,
    seNone = 3,
    seRadius = 4,
    seExtend = 5,
    seMiterXY = 6,
    seMiterYZ = 7,
    seMiterXZ = 8,
    seButtX = 9,
    seButtY = 10,
    seButtZ = 11
};

enum StructuralFrameExtendTrimPositionConstants
{
    startPosition = 0,
    endPosition = 1
};

struct __declspec(uuid("41a4f7e2-a172-491a-8777-aa4eef397c30"))
_IStructuralFrameAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetSingleFrameForCollinearPaths,put=PutSingleFrameForCollinearPaths))
    VARIANT_BOOL SingleFrameForCollinearPaths;
    __declspec(property(get=GetSingleFrameForTangentialPaths,put=PutSingleFrameForTangentialPaths))
    VARIANT_BOOL SingleFrameForTangentialPaths;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetAutoPosition,put=PutAutoPosition))
    VARIANT_BOOL AutoPosition;
    __declspec(property(get=GetGlobalDocument,put=PutGlobalDocument))
    _bstr_t GlobalDocument;
    __declspec(property(get=GetWeldGap,put=PutWeldGap))
    double WeldGap;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    void PutName (
        _bstr_t Name );
    _bstr_t GetName ( );
    HRESULT GetGlobalEndCondition (
        enum StructuralFrameEndConditionConstants * EndCondition,
        VARIANT * dValue );
    HRESULT SetGlobalEndCondition (
        enum StructuralFrameEndConditionConstants EndCondition,
        const _variant_t & dValue = vtMissing );
    VARIANT_BOOL GetAutoPosition ( );
    void PutAutoPosition (
        VARIANT_BOOL bAutoPosition );
    _bstr_t GetGlobalDocument ( );
    void PutGlobalDocument (
        _bstr_t PartFileDocument );
    HRESULT SetFramePath (
        long NumPathSegments,
        SAFEARRAY * * PathSegments );
    HRESULT GetFramePath (
        long * NumPathSegments,
        SAFEARRAY * * PathSegments );
    HRESULT GetSections (
        long * NumSections,
        SAFEARRAY * * Sections );
    HRESULT GetRedefineSectionPlacement (
        long SectionId,
        VARIANT * Rotation,
        VARIANT * XDistance,
        VARIANT * YDistance );
    HRESULT SetRedefineSectionPlacement (
        long SectionId,
        const _variant_t & Rotation = vtMissing,
        const _variant_t & XDistance = vtMissing,
        const _variant_t & YDistance = vtMissing );
    HRESULT GetRedefineSectionDocument (
        long SectionId,
        BSTR * PartFileDocument );
    HRESULT SetRedefineSectionDocument (
        long SectionId,
        _bstr_t PartFileDocument );
    HRESULT GetOverrideEndCondition (
        long NumSegments,
        SAFEARRAY * SegmentIds,
        enum StructuralFrameEndConditionConstants * EndCondition,
        VARIANT * dValue );
    HRESULT SetOverrideEndCondition (
        long NumSegments,
        SAFEARRAY * SegmentIds,
        enum StructuralFrameEndConditionConstants EndCondition,
        const _variant_t & dValue = vtMissing );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL bVisible );
    HRESULT CutLength (
        double * dCutLength,
        VARIANT * bExactLength );
    HRESULT SegmentCutLength (
        long SectionId,
        double * dCutLength,
        VARIANT * bExactLength );
    HRESULT GetFramePathObjects (
        long * NumPathSegments,
        SAFEARRAY * * PathSegments );
    HRESULT ReturnPathForGivenSectionID (
        long SectionId,
        VARIANT * PathId,
        VARIANT * PathAsObject );
    HRESULT ReturnOccurrenceForGivenSectionID (
        long SectionId,
        VARIANT * OccurrenceID,
        VARIANT * OccurrenceAsObject );
    HRESULT GetPlaneOrientationForGivenSectionID (
        long SectionId,
        VARIANT * XOffset,
        VARIANT * YOffset,
        VARIANT * ZOffset,
        VARIANT * XRotation,
        VARIANT * YRotation,
        VARIANT * ZRotation );
    HRESULT GetSetionIDObject (
        long SectionId,
        IDispatch * * ProfileObject );
    HRESULT RetrieveHoleLocation ( );
    HRESULT DeleteHoleLocation ( );
    VARIANT_BOOL GetSingleFrameForCollinearPaths ( );
    void PutSingleFrameForCollinearPaths (
        VARIANT_BOOL bSingleFrameForCollinearPaths );
    VARIANT_BOOL GetSingleFrameForTangentialPaths ( );
    void PutSingleFrameForTangentialPaths (
        VARIANT_BOOL bSingleFrameForTangentialPaths );
    HRESULT AssociateLegacyFrameToCrossSection ( );
    HRESULT MiterCut (
        long SectionId,
        double * MiterCut1,
        double * MiterCut2 );
    HRESULT FrameSaveAs (
        _bstr_t FileName );
    HRESULT FrameSaveAsTranslated (
        _bstr_t FileName );
    _bstr_t FrameSaveAsBiDM (
        _bstr_t FilePath,
        _bstr_t DocumentNumber,
        _bstr_t Revision,
        _bstr_t Title );
    double GetWeldGap ( );
    void PutWeldGap (
        double dWeldGap );
    HRESULT SideFaceEndAngle (
        long SectionId,
        double * SideFaceEndAngle1,
        double * SideFaceEndAngle2 );
    HRESULT EndFaceEndAngle (
        long SectionId,
        double * EndFaceEndAngle1,
        double * EndFaceEndAngle2 );
    HRESULT GetOverrideEndConditionEx (
        long NumSegments,
        SAFEARRAY * SegmentIds,
        enum StructuralFrameEndConditionConstants * EndCondition,
        VARIANT * dValueEndConditionOrWeldGap,
        VARIANT_BOOL * bApplyWeldGap );
    HRESULT SetOverrideEndConditionEx (
        long NumSegments,
        SAFEARRAY * SegmentIds,
        enum StructuralFrameEndConditionConstants EndCondition,
        const _variant_t & dValueEndConditionOrWeldGap,
        VARIANT_BOOL bApplyWeldGap );
    VARIANT_BOOL GetSplitPath ( );
    HRESULT ApplyExtendTrimToTools (
        long NumTargetSegments,
        SAFEARRAY * TargetSegmentIds,
        enum StructuralFrameExtendTrimPositionConstants Position,
        long NumTools,
        SAFEARRAY * * Tools );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall raw_GetGlobalEndCondition (
        /*[out]*/ enum StructuralFrameEndConditionConstants * EndCondition,
        /*[out]*/ VARIANT * dValue ) = 0;
      virtual HRESULT __stdcall raw_SetGlobalEndCondition (
        /*[in]*/ enum StructuralFrameEndConditionConstants EndCondition,
        /*[in]*/ VARIANT dValue = vtMissing ) = 0;
      virtual HRESULT __stdcall get_AutoPosition (
        /*[out,retval]*/ VARIANT_BOOL * bAutoPosition ) = 0;
      virtual HRESULT __stdcall put_AutoPosition (
        /*[in]*/ VARIANT_BOOL bAutoPosition ) = 0;
      virtual HRESULT __stdcall get_GlobalDocument (
        /*[out,retval]*/ BSTR * PartFileDocument ) = 0;
      virtual HRESULT __stdcall put_GlobalDocument (
        /*[in]*/ BSTR PartFileDocument ) = 0;
      virtual HRESULT __stdcall raw_SetFramePath (
        /*[in]*/ long NumPathSegments,
        /*[in,out]*/ SAFEARRAY * * PathSegments ) = 0;
      virtual HRESULT __stdcall raw_GetFramePath (
        /*[out]*/ long * NumPathSegments,
        /*[in,out]*/ SAFEARRAY * * PathSegments ) = 0;
      virtual HRESULT __stdcall raw_GetSections (
        /*[out]*/ long * NumSections,
        /*[in,out]*/ SAFEARRAY * * Sections ) = 0;
      virtual HRESULT __stdcall raw_GetRedefineSectionPlacement (
        /*[in]*/ long SectionId,
        /*[out]*/ VARIANT * Rotation,
        /*[out]*/ VARIANT * XDistance,
        /*[out]*/ VARIANT * YDistance ) = 0;
      virtual HRESULT __stdcall raw_SetRedefineSectionPlacement (
        /*[in]*/ long SectionId,
        /*[in]*/ VARIANT Rotation = vtMissing,
        /*[in]*/ VARIANT XDistance = vtMissing,
        /*[in]*/ VARIANT YDistance = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_GetRedefineSectionDocument (
        /*[in]*/ long SectionId,
        /*[out]*/ BSTR * PartFileDocument ) = 0;
      virtual HRESULT __stdcall raw_SetRedefineSectionDocument (
        /*[in]*/ long SectionId,
        /*[in]*/ BSTR PartFileDocument ) = 0;
      virtual HRESULT __stdcall raw_GetOverrideEndCondition (
        /*[in]*/ long NumSegments,
        /*[in]*/ SAFEARRAY * SegmentIds,
        /*[out]*/ enum StructuralFrameEndConditionConstants * EndCondition,
        /*[out]*/ VARIANT * dValue ) = 0;
      virtual HRESULT __stdcall raw_SetOverrideEndCondition (
        /*[in]*/ long NumSegments,
        /*[in]*/ SAFEARRAY * SegmentIds,
        /*[in]*/ enum StructuralFrameEndConditionConstants EndCondition,
        /*[in]*/ VARIANT dValue = vtMissing ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * bVisible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL bVisible ) = 0;
      virtual HRESULT __stdcall raw_CutLength (
        /*[out]*/ double * dCutLength,
        /*[out]*/ VARIANT * bExactLength ) = 0;
      virtual HRESULT __stdcall raw_SegmentCutLength (
        /*[in]*/ long SectionId,
        /*[out]*/ double * dCutLength,
        /*[out]*/ VARIANT * bExactLength ) = 0;
      virtual HRESULT __stdcall raw_GetFramePathObjects (
        /*[out]*/ long * NumPathSegments,
        /*[in,out]*/ SAFEARRAY * * PathSegments ) = 0;
      virtual HRESULT __stdcall raw_ReturnPathForGivenSectionID (
        /*[in]*/ long SectionId,
        /*[out]*/ VARIANT * PathId,
        /*[out]*/ VARIANT * PathAsObject ) = 0;
      virtual HRESULT __stdcall raw_ReturnOccurrenceForGivenSectionID (
        /*[in]*/ long SectionId,
        /*[out]*/ VARIANT * OccurrenceID,
        /*[out]*/ VARIANT * OccurrenceAsObject ) = 0;
      virtual HRESULT __stdcall raw_GetPlaneOrientationForGivenSectionID (
        /*[in]*/ long SectionId,
        /*[out]*/ VARIANT * XOffset,
        /*[out]*/ VARIANT * YOffset,
        /*[out]*/ VARIANT * ZOffset,
        /*[out]*/ VARIANT * XRotation,
        /*[out]*/ VARIANT * YRotation,
        /*[out]*/ VARIANT * ZRotation ) = 0;
      virtual HRESULT __stdcall raw_GetSetionIDObject (
        /*[in]*/ long SectionId,
        /*[out]*/ IDispatch * * ProfileObject ) = 0;
      virtual HRESULT __stdcall raw_RetrieveHoleLocation ( ) = 0;
      virtual HRESULT __stdcall raw_DeleteHoleLocation ( ) = 0;
      virtual HRESULT __stdcall get_SingleFrameForCollinearPaths (
        /*[out,retval]*/ VARIANT_BOOL * bSingleFrameForCollinearPaths ) = 0;
      virtual HRESULT __stdcall put_SingleFrameForCollinearPaths (
        /*[in]*/ VARIANT_BOOL bSingleFrameForCollinearPaths ) = 0;
      virtual HRESULT __stdcall get_SingleFrameForTangentialPaths (
        /*[out,retval]*/ VARIANT_BOOL * bSingleFrameForTangentialPaths ) = 0;
      virtual HRESULT __stdcall put_SingleFrameForTangentialPaths (
        /*[in]*/ VARIANT_BOOL bSingleFrameForTangentialPaths ) = 0;
      virtual HRESULT __stdcall raw_AssociateLegacyFrameToCrossSection ( ) = 0;
      virtual HRESULT __stdcall raw_MiterCut (
        /*[in]*/ long SectionId,
        /*[out]*/ double * MiterCut1,
        /*[out]*/ double * MiterCut2 ) = 0;
      virtual HRESULT __stdcall raw_FrameSaveAs (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_FrameSaveAsTranslated (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_FrameSaveAsBiDM (
        /*[in]*/ BSTR FilePath,
        /*[in]*/ BSTR DocumentNumber,
        /*[in]*/ BSTR Revision,
        /*[in]*/ BSTR Title,
        /*[out,retval]*/ BSTR * NewFileName ) = 0;
      virtual HRESULT __stdcall get_WeldGap (
        /*[out,retval]*/ double * dWeldGap ) = 0;
      virtual HRESULT __stdcall put_WeldGap (
        /*[in]*/ double dWeldGap ) = 0;
      virtual HRESULT __stdcall raw_SideFaceEndAngle (
        /*[in]*/ long SectionId,
        /*[out]*/ double * SideFaceEndAngle1,
        /*[out]*/ double * SideFaceEndAngle2 ) = 0;
      virtual HRESULT __stdcall raw_EndFaceEndAngle (
        /*[in]*/ long SectionId,
        /*[out]*/ double * EndFaceEndAngle1,
        /*[out]*/ double * EndFaceEndAngle2 ) = 0;
      virtual HRESULT __stdcall raw_GetOverrideEndConditionEx (
        /*[in]*/ long NumSegments,
        /*[in]*/ SAFEARRAY * SegmentIds,
        /*[out]*/ enum StructuralFrameEndConditionConstants * EndCondition,
        /*[out]*/ VARIANT * dValueEndConditionOrWeldGap,
        /*[out]*/ VARIANT_BOOL * bApplyWeldGap ) = 0;
      virtual HRESULT __stdcall raw_SetOverrideEndConditionEx (
        /*[in]*/ long NumSegments,
        /*[in]*/ SAFEARRAY * SegmentIds,
        /*[in]*/ enum StructuralFrameEndConditionConstants EndCondition,
        /*[in]*/ VARIANT dValueEndConditionOrWeldGap,
        /*[in]*/ VARIANT_BOOL bApplyWeldGap ) = 0;
      virtual HRESULT __stdcall raw_GetSplitPath (
        /*[out,retval]*/ VARIANT_BOOL * bSplitPath ) = 0;
      virtual HRESULT __stdcall raw_ApplyExtendTrimToTools (
        /*[in]*/ long NumTargetSegments,
        /*[in]*/ SAFEARRAY * TargetSegmentIds,
        /*[in]*/ enum StructuralFrameExtendTrimPositionConstants Position,
        /*[in]*/ long NumTools,
        /*[in]*/ SAFEARRAY * * Tools ) = 0;
      virtual HRESULT __stdcall raw_GetSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_AddSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_DeleteSuppressionVariable ( ) = 0;
      virtual HRESULT __stdcall raw_HasSuppressionVariable (
        /*[out,retval]*/ VARIANT_BOOL * IsSuppressionVariablePresent ) = 0;
};

struct __declspec(uuid("fe6a43fd-dbc1-43df-aee0-316a8fc02a1f"))
AssemblyFeatures : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetAssemblyFeaturesExtrudedCutouts))
    AssemblyFeaturesExtrudedCutoutsPtr AssemblyFeaturesExtrudedCutouts;
    __declspec(property(get=GetAssemblyFeaturesRevolvedCutouts))
    AssemblyFeaturesRevolvedCutoutsPtr AssemblyFeaturesRevolvedCutouts;
    __declspec(property(get=GetAssemblyFeaturesHoles))
    AssemblyFeaturesHolesPtr AssemblyFeaturesHoles;
    __declspec(property(get=GetAssemblyFeaturesPatterns))
    AssemblyFeaturesPatternsPtr AssemblyFeaturesPatterns;
    __declspec(property(get=GetAssemblyFeaturesMirrors))
    AssemblyFeaturesMirrorsPtr AssemblyFeaturesMirrors;
    __declspec(property(get=GetFilletWelds))
    AssemblyFilletWeldsPtr FilletWelds;
    __declspec(property(get=GetAssemblyFeaturesSweptProtrusions))
    AssemblyFeaturesSweptProtrusionsPtr AssemblyFeaturesSweptProtrusions;
    __declspec(property(get=GetStitchWelds))
    AssemblyStitchWeldsPtr StitchWelds;
    __declspec(property(get=GetGrooveWelds))
    AFGrooveWeldsPtr GrooveWelds;
    __declspec(property(get=GetThreads))
    AssemblyThreadsPtr Threads;
    __declspec(property(get=GetExtrudedProtrusions))
    AssemblyFeaturesExtrudedProtrusionsPtr ExtrudedProtrusions;
    __declspec(property(get=GetRevolvedProtrusions))
    AssemblyFeaturesRevolvedProtrusionsPtr RevolvedProtrusions;
    __declspec(property(get=GetLabelWelds))
    AssemblyLabelWeldsPtr LabelWelds;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyFeaturesExtrudedCutoutsPtr GetAssemblyFeaturesExtrudedCutouts ( );
    AssemblyFeaturesRevolvedCutoutsPtr GetAssemblyFeaturesRevolvedCutouts ( );
    AssemblyFeaturesHolesPtr GetAssemblyFeaturesHoles ( );
    AssemblyFeaturesMirrorsPtr GetAssemblyFeaturesMirrors ( );
    AssemblyFeaturesPatternsPtr GetAssemblyFeaturesPatterns ( );
    AssemblyFilletWeldsPtr GetFilletWelds ( );
    AFGrooveWeldsPtr GetGrooveWelds ( );
    AssemblyFeaturesSweptProtrusionsPtr GetAssemblyFeaturesSweptProtrusions ( );
    AssemblyStitchWeldsPtr GetStitchWelds ( );
    AssemblyThreadsPtr GetThreads ( );
    AssemblyFeaturesExtrudedProtrusionsPtr GetExtrudedProtrusions ( );
    AssemblyFeaturesRevolvedProtrusionsPtr GetRevolvedProtrusions ( );
    HRESULT Recompute (
        long options );
    AssemblyLabelWeldsPtr GetLabelWelds ( );
};

struct __declspec(uuid("f9bd12a7-6ac8-4bb8-ab14-9a6f00e0b6f7"))
AssemblyFeaturesExtrudedCutouts : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyFeaturesExtrudedCutoutPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    AssemblyFeaturesExtrudedCutoutPtr Add (
        long nNumScopeParts,
        SAFEARRAY * * pScopeParts,
        long nNumProfiles,
        SAFEARRAY * * pProfiles,
        enum TGPart::FeaturePropertyConstants ExtentType,
        enum TGPart::FeaturePropertyConstants * pExtentSide,
        enum TGPart::FeaturePropertyConstants profileSide,
        double * pdDistance,
        IUnknown * pKeyPoint,
        enum TGPart::KeyPointExtentConstants * pKeyPointFlags,
        IUnknown * pFromSurfOrPlane,
        IUnknown * pToSurfOrPlane );
};

struct __declspec(uuid("f9bd12a7-6ac8-4bb8-ab14-9a6f00e0b6d7"))
AssemblyFeaturesExtrudedCutout : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetFeatureType))
    enum TGPart::FeatureTypeConstants FeatureType;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetEdges))
    IDispatchPtr Edges[];
    __declspec(property(get=GetFaces))
    IDispatchPtr Faces[];
    __declspec(property(get=GetFacesByRay))
    IDispatchPtr FacesByRay[][][][][][];
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetEdgesForScopePart))
    IDispatchPtr EdgesForScopePart[][];
    __declspec(property(get=GetFacesForScopePart))
    IDispatchPtr FacesForScopePart[][];
    __declspec(property(get=GetFacesByRayForScopePart))
    IDispatchPtr FacesByRayForScopePart[][][][][][][];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    double GetDepth ( );
    HRESULT SetDepth (
        double nDepth );
    enum TGPart::FeaturePropertyConstants GetExtentSide ( );
    HRESULT SetExtentSide (
        enum TGPart::FeaturePropertyConstants ExtentSide );
    enum TGPart::FeaturePropertyConstants GetExtentType ( );
    HRESULT SetExtentType (
        enum TGPart::FeaturePropertyConstants ExtentType );
    enum TGPart::FeaturePropertyConstants GetProfileSide ( );
    HRESULT SetProfileSide (
        enum TGPart::FeaturePropertyConstants profileSide );
    HRESULT GetProfiles (
        long * NumProfiles,
        SAFEARRAY * * ppProfiles );
    HRESULT SetProfiles (
        long NumProfiles,
        SAFEARRAY * pProfiles );
    HRESULT SetFromPlane (
        IUnknown * FromPlane );
    IUnknownPtr GetFromPlane ( );
    HRESULT SetToPlane (
        IUnknown * ToPlane );
    IUnknownPtr GetToPlane ( );
    HRESULT SetScopeParts (
        long NumScopeParts,
        SAFEARRAY * pScopeParts );
    HRESULT GetScopeParts (
        long * NumScopeParts,
        SAFEARRAY * * pScopeParts );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t _arg1 );
    IDispatchPtr GetEdges (
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFaces (
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRay (
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    HRESULT Range (
        double * X1,
        double * Y1,
        double * Z1,
        double * X2,
        double * Y2,
        double * Z2 );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL _arg1 );
    HRESULT Delete ( );
    HRESULT RollToFeature ( );
    IDispatchPtr GetEdgesForScopePart (
        IUnknown * pScopePart,
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFacesForScopePart (
        IUnknown * ScopePart,
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRayForScopePart (
        IUnknown * pScopePart,
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description = &vtMissing );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
    enum TGPart::FeatureTypeConstants GetFeatureType ( );
};

struct __declspec(uuid("231c2134-d7b1-4903-b524-4c017c9b7f07"))
_IAssemblyFeaturesExtrudedCutoutsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyFeaturesExtrudedCutoutPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    AssemblyFeaturesExtrudedCutoutPtr Add (
        long nNumScopeParts,
        SAFEARRAY * * pScopeParts,
        long nNumProfiles,
        SAFEARRAY * * pProfiles,
        enum TGPart::FeaturePropertyConstants ExtentType,
        enum TGPart::FeaturePropertyConstants * pExtentSide,
        enum TGPart::FeaturePropertyConstants profileSide,
        double * pdDistance,
        IUnknown * pKeyPoint,
        enum TGPart::KeyPointExtentConstants * pKeyPointFlags,
        IUnknown * pFromSurfOrPlane,
        IUnknown * pToSurfOrPlane );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct AssemblyFeaturesExtrudedCutout * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ long nNumScopeParts,
        /*[in]*/ SAFEARRAY * * pScopeParts,
        /*[in]*/ long nNumProfiles,
        /*[in]*/ SAFEARRAY * * pProfiles,
        /*[in]*/ enum TGPart::FeaturePropertyConstants ExtentType,
        /*[in]*/ enum TGPart::FeaturePropertyConstants * pExtentSide,
        /*[in]*/ enum TGPart::FeaturePropertyConstants profileSide,
        /*[in]*/ double * pdDistance,
        /*[in]*/ IUnknown * pKeyPoint,
        /*[in]*/ enum TGPart::KeyPointExtentConstants * pKeyPointFlags,
        /*[in]*/ IUnknown * pFromSurfOrPlane,
        /*[in]*/ IUnknown * pToSurfOrPlane,
        /*[out,retval]*/ struct AssemblyFeaturesExtrudedCutout * * pOutAssemblyFeature ) = 0;
};

struct __declspec(uuid("231c2134-d7b1-4903-b524-4c017c9b7f37"))
_IAssemblyFeaturesExtrudedCutoutAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetFeatureType))
    enum TGPart::FeatureTypeConstants FeatureType;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetEdges))
    IDispatchPtr Edges[];
    __declspec(property(get=GetFaces))
    IDispatchPtr Faces[];
    __declspec(property(get=GetFacesByRay))
    IDispatchPtr FacesByRay[][][][][][];
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetEdgesForScopePart))
    IDispatchPtr EdgesForScopePart[][];
    __declspec(property(get=GetFacesForScopePart))
    IDispatchPtr FacesForScopePart[][];
    __declspec(property(get=GetFacesByRayForScopePart))
    IDispatchPtr FacesByRayForScopePart[][][][][][][];

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    double GetDepth ( );
    HRESULT SetDepth (
        double nDepth );
    enum TGPart::FeaturePropertyConstants GetExtentSide ( );
    HRESULT SetExtentSide (
        enum TGPart::FeaturePropertyConstants ExtentSide );
    enum TGPart::FeaturePropertyConstants GetExtentType ( );
    HRESULT SetExtentType (
        enum TGPart::FeaturePropertyConstants ExtentType );
    enum TGPart::FeaturePropertyConstants GetProfileSide ( );
    HRESULT SetProfileSide (
        enum TGPart::FeaturePropertyConstants profileSide );
    HRESULT GetProfiles (
        long * NumProfiles,
        SAFEARRAY * * ppProfiles );
    HRESULT SetProfiles (
        long NumProfiles,
        SAFEARRAY * pProfiles );
    HRESULT SetFromPlane (
        IUnknown * FromPlane );
    IUnknownPtr GetFromPlane ( );
    HRESULT SetToPlane (
        IUnknown * ToPlane );
    IUnknownPtr GetToPlane ( );
    HRESULT SetScopeParts (
        long NumScopeParts,
        SAFEARRAY * pScopeParts );
    HRESULT GetScopeParts (
        long * NumScopeParts,
        SAFEARRAY * * pScopeParts );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t featureName );
    IDispatchPtr GetEdges (
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFaces (
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRay (
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    HRESULT Range (
        double * X1,
        double * Y1,
        double * Z1,
        double * X2,
        double * Y2,
        double * Z2 );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL Suppress );
    HRESULT Delete ( );
    HRESULT RollToFeature ( );
    IDispatchPtr GetEdgesForScopePart (
        IUnknown * pScopePart,
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFacesForScopePart (
        IUnknown * ScopePart,
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRayForScopePart (
        IUnknown * pScopePart,
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
    enum TGPart::FeatureTypeConstants GetFeatureType ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_GetDepth (
        /*[out,retval]*/ double * nDepth ) = 0;
      virtual HRESULT __stdcall raw_SetDepth (
        /*[in]*/ double nDepth ) = 0;
      virtual HRESULT __stdcall raw_GetExtentSide (
        /*[out,retval]*/ enum TGPart::FeaturePropertyConstants * pExtentSide ) = 0;
      virtual HRESULT __stdcall raw_SetExtentSide (
        /*[in]*/ enum TGPart::FeaturePropertyConstants ExtentSide ) = 0;
      virtual HRESULT __stdcall raw_GetExtentType (
        /*[out,retval]*/ enum TGPart::FeaturePropertyConstants * pExtentType ) = 0;
      virtual HRESULT __stdcall raw_SetExtentType (
        /*[in]*/ enum TGPart::FeaturePropertyConstants ExtentType ) = 0;
      virtual HRESULT __stdcall raw_GetProfileSide (
        /*[out,retval]*/ enum TGPart::FeaturePropertyConstants * pProfileSide ) = 0;
      virtual HRESULT __stdcall raw_SetProfileSide (
        /*[in]*/ enum TGPart::FeaturePropertyConstants profileSide ) = 0;
      virtual HRESULT __stdcall raw_GetProfiles (
        /*[out]*/ long * NumProfiles,
        /*[out]*/ SAFEARRAY * * ppProfiles ) = 0;
      virtual HRESULT __stdcall raw_SetProfiles (
        /*[in]*/ long NumProfiles,
        SAFEARRAY * pProfiles ) = 0;
      virtual HRESULT __stdcall raw_SetFromPlane (
        /*[in]*/ IUnknown * FromPlane ) = 0;
      virtual HRESULT __stdcall raw_GetFromPlane (
        /*[out,retval]*/ IUnknown * * FromPlane ) = 0;
      virtual HRESULT __stdcall raw_SetToPlane (
        /*[in]*/ IUnknown * ToPlane ) = 0;
      virtual HRESULT __stdcall raw_GetToPlane (
        /*[out,retval]*/ IUnknown * * ToPlane ) = 0;
      virtual HRESULT __stdcall raw_SetScopeParts (
        /*[in]*/ long NumScopeParts,
        /*[in]*/ SAFEARRAY * pScopeParts ) = 0;
      virtual HRESULT __stdcall raw_GetScopeParts (
        /*[out]*/ long * NumScopeParts,
        /*[out]*/ SAFEARRAY * * pScopeParts ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * featureName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR featureName ) = 0;
      virtual HRESULT __stdcall get_Edges (
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType,
        /*[out,retval]*/ IDispatch * * ppFeatureEdges ) = 0;
      virtual HRESULT __stdcall get_Faces (
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall get_FacesByRay (
        /*[in]*/ double Xorigin,
        /*[in]*/ double Yorigin,
        /*[in]*/ double Zorigin,
        /*[in]*/ double Xdir,
        /*[in]*/ double Ydir,
        /*[in]*/ double Zdir,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall raw_Range (
        /*[out]*/ double * X1,
        /*[out]*/ double * Y1,
        /*[out]*/ double * Z1,
        /*[out]*/ double * X2,
        /*[out]*/ double * Y2,
        /*[out]*/ double * Z2 ) = 0;
      virtual HRESULT __stdcall get_Suppress (
        /*[out,retval]*/ VARIANT_BOOL * Suppress ) = 0;
      virtual HRESULT __stdcall put_Suppress (
        /*[in]*/ VARIANT_BOOL Suppress ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_RollToFeature ( ) = 0;
      virtual HRESULT __stdcall get_EdgesForScopePart (
        /*[in]*/ IUnknown * pScopePart,
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType,
        /*[out,retval]*/ IDispatch * * ppFeatureEdges ) = 0;
      virtual HRESULT __stdcall get_FacesForScopePart (
        /*[in]*/ IUnknown * ScopePart,
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall get_FacesByRayForScopePart (
        /*[in]*/ IUnknown * pScopePart,
        /*[in]*/ double Xorigin,
        /*[in]*/ double Yorigin,
        /*[in]*/ double Zorigin,
        /*[in]*/ double Xdir,
        /*[in]*/ double Ydir,
        /*[in]*/ double Zdir,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out]*/ VARIANT * Description,
        /*[out,retval]*/ enum TGPart::FeatureStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall raw_GetSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_AddSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_DeleteSuppressionVariable ( ) = 0;
      virtual HRESULT __stdcall raw_HasSuppressionVariable (
        /*[out,retval]*/ VARIANT_BOOL * IsSuppressionVariablePresent ) = 0;
      virtual HRESULT __stdcall get_FeatureType (
        /*[out,retval]*/ enum TGPart::FeatureTypeConstants * Type ) = 0;
};

struct __declspec(uuid("f9bd12a7-6ac8-4bb8-ab14-9a6f00e0b6f5"))
AssemblyFeaturesRevolvedCutouts : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyFeaturesRevolvedCutoutPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    AssemblyFeaturesRevolvedCutoutPtr Add (
        long nNumScopeParts,
        SAFEARRAY * * pScopeParts,
        long nNumProfiles,
        SAFEARRAY * * pProfiles,
        IUnknown * pRefAxis,
        enum TGPart::FeaturePropertyConstants ExtentType,
        enum TGPart::FeaturePropertyConstants ExtentSide,
        enum TGPart::FeaturePropertyConstants profileSide,
        double * pdAngle,
        IUnknown * KeyPointOrTangentFace,
        enum TGPart::KeyPointExtentConstants * KeyPointFlags,
        IUnknown * pFromSurface,
        IUnknown * pToSurface );
};

struct __declspec(uuid("f9bd12a7-6ac8-4bb8-ab14-9a6f00e0b6c8"))
AssemblyFeaturesRevolvedCutout : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetFeatureType))
    enum TGPart::FeatureTypeConstants FeatureType;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetEdges))
    IDispatchPtr Edges[];
    __declspec(property(get=GetFaces))
    IDispatchPtr Faces[];
    __declspec(property(get=GetFacesByRay))
    IDispatchPtr FacesByRay[][][][][][];
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetEdgesForScopePart))
    IDispatchPtr EdgesForScopePart[][];
    __declspec(property(get=GetFacesForScopePart))
    IDispatchPtr FacesForScopePart[][];
    __declspec(property(get=GetFacesByRayForScopePart))
    IDispatchPtr FacesByRayForScopePart[][][][][][][];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    double GetAngle ( );
    HRESULT SetAngle (
        double nAngle );
    IUnknownPtr GetReferenceAxis ( );
    HRESULT SetReferenceAxis (
        IUnknown * ReferenceAxis );
    enum TGPart::FeaturePropertyConstants GetExtentSide ( );
    HRESULT SetExtentSide (
        enum TGPart::FeaturePropertyConstants ExtentSide );
    enum TGPart::FeaturePropertyConstants GetExtentType ( );
    HRESULT SetExtentType (
        enum TGPart::FeaturePropertyConstants ExtentType );
    enum TGPart::FeaturePropertyConstants GetProfileSide ( );
    HRESULT SetProfileSide (
        enum TGPart::FeaturePropertyConstants profileSide );
    HRESULT GetProfiles (
        long * NumProfiles,
        SAFEARRAY * * ppProfiles );
    HRESULT SetProfiles (
        long NumProfiles,
        SAFEARRAY * pProfiles );
    HRESULT SetScopeParts (
        long NumScopeParts,
        SAFEARRAY * pScopeParts );
    HRESULT GetScopeParts (
        long * NumScopeParts,
        SAFEARRAY * * pScopeParts );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t _arg1 );
    IDispatchPtr GetEdges (
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFaces (
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRay (
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    HRESULT Range (
        double * X1,
        double * Y1,
        double * Z1,
        double * X2,
        double * Y2,
        double * Z2 );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL _arg1 );
    HRESULT Delete ( );
    HRESULT RollToFeature ( );
    IDispatchPtr GetEdgesForScopePart (
        IUnknown * ScopePart,
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFacesForScopePart (
        IUnknown * ScopePart,
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRayForScopePart (
        IUnknown * ScopePart,
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description = &vtMissing );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
    enum TGPart::FeatureTypeConstants GetFeatureType ( );
};

struct __declspec(uuid("231c2134-d7b1-4903-b524-4c017c9b7f77"))
_IAssemblyFeaturesRevolvedCutoutsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyFeaturesRevolvedCutoutPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    AssemblyFeaturesRevolvedCutoutPtr Add (
        long nNumScopeParts,
        SAFEARRAY * * pScopeParts,
        long nNumProfiles,
        SAFEARRAY * * pProfiles,
        IUnknown * pRefAxis,
        enum TGPart::FeaturePropertyConstants ExtentType,
        enum TGPart::FeaturePropertyConstants ExtentSide,
        enum TGPart::FeaturePropertyConstants profileSide,
        double * pdAngle,
        IUnknown * KeyPointOrTangentFace,
        enum TGPart::KeyPointExtentConstants * KeyPointFlags,
        IUnknown * pFromSurface,
        IUnknown * pToSurface );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct AssemblyFeaturesRevolvedCutout * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ long nNumScopeParts,
        /*[in]*/ SAFEARRAY * * pScopeParts,
        /*[in]*/ long nNumProfiles,
        /*[in]*/ SAFEARRAY * * pProfiles,
        /*[in]*/ IUnknown * pRefAxis,
        /*[in]*/ enum TGPart::FeaturePropertyConstants ExtentType,
        /*[in]*/ enum TGPart::FeaturePropertyConstants ExtentSide,
        /*[in]*/ enum TGPart::FeaturePropertyConstants profileSide,
        /*[in]*/ double * pdAngle,
        /*[in]*/ IUnknown * KeyPointOrTangentFace,
        /*[in]*/ enum TGPart::KeyPointExtentConstants * KeyPointFlags,
        /*[in]*/ IUnknown * pFromSurface,
        /*[in]*/ IUnknown * pToSurface,
        /*[out,retval]*/ struct AssemblyFeaturesRevolvedCutout * * pOutAssemblyFeature ) = 0;
};

struct __declspec(uuid("231c2134-d7b1-4903-b524-4c017c9b7f47"))
_IAssemblyFeaturesRevolvedCutoutAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetFeatureType))
    enum TGPart::FeatureTypeConstants FeatureType;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetEdges))
    IDispatchPtr Edges[];
    __declspec(property(get=GetFaces))
    IDispatchPtr Faces[];
    __declspec(property(get=GetFacesByRay))
    IDispatchPtr FacesByRay[][][][][][];
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetEdgesForScopePart))
    IDispatchPtr EdgesForScopePart[][];
    __declspec(property(get=GetFacesForScopePart))
    IDispatchPtr FacesForScopePart[][];
    __declspec(property(get=GetFacesByRayForScopePart))
    IDispatchPtr FacesByRayForScopePart[][][][][][][];

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    double GetAngle ( );
    HRESULT SetAngle (
        double nAngle );
    IUnknownPtr GetReferenceAxis ( );
    HRESULT SetReferenceAxis (
        IUnknown * ReferenceAxis );
    enum TGPart::FeaturePropertyConstants GetExtentSide ( );
    HRESULT SetExtentSide (
        enum TGPart::FeaturePropertyConstants ExtentSide );
    enum TGPart::FeaturePropertyConstants GetExtentType ( );
    HRESULT SetExtentType (
        enum TGPart::FeaturePropertyConstants ExtentType );
    enum TGPart::FeaturePropertyConstants GetProfileSide ( );
    HRESULT SetProfileSide (
        enum TGPart::FeaturePropertyConstants profileSide );
    HRESULT GetProfiles (
        long * NumProfiles,
        SAFEARRAY * * ppProfiles );
    HRESULT SetProfiles (
        long NumProfiles,
        SAFEARRAY * pProfiles );
    HRESULT SetScopeParts (
        long NumScopeParts,
        SAFEARRAY * pScopeParts );
    HRESULT GetScopeParts (
        long * NumScopeParts,
        SAFEARRAY * * pScopeParts );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t featureName );
    IDispatchPtr GetEdges (
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFaces (
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRay (
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    HRESULT Range (
        double * X1,
        double * Y1,
        double * Z1,
        double * X2,
        double * Y2,
        double * Z2 );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL Suppress );
    HRESULT Delete ( );
    HRESULT RollToFeature ( );
    IDispatchPtr GetEdgesForScopePart (
        IUnknown * ScopePart,
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFacesForScopePart (
        IUnknown * ScopePart,
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRayForScopePart (
        IUnknown * ScopePart,
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
    enum TGPart::FeatureTypeConstants GetFeatureType ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_GetAngle (
        /*[out,retval]*/ double * nAngle ) = 0;
      virtual HRESULT __stdcall raw_SetAngle (
        /*[in]*/ double nAngle ) = 0;
      virtual HRESULT __stdcall raw_GetReferenceAxis (
        /*[out,retval]*/ IUnknown * * pReferenceAxis ) = 0;
      virtual HRESULT __stdcall raw_SetReferenceAxis (
        /*[in]*/ IUnknown * ReferenceAxis ) = 0;
      virtual HRESULT __stdcall raw_GetExtentSide (
        /*[out,retval]*/ enum TGPart::FeaturePropertyConstants * pExtentSide ) = 0;
      virtual HRESULT __stdcall raw_SetExtentSide (
        /*[in]*/ enum TGPart::FeaturePropertyConstants ExtentSide ) = 0;
      virtual HRESULT __stdcall raw_GetExtentType (
        /*[out,retval]*/ enum TGPart::FeaturePropertyConstants * pExtentType ) = 0;
      virtual HRESULT __stdcall raw_SetExtentType (
        /*[in]*/ enum TGPart::FeaturePropertyConstants ExtentType ) = 0;
      virtual HRESULT __stdcall raw_GetProfileSide (
        /*[out,retval]*/ enum TGPart::FeaturePropertyConstants * pProfileSide ) = 0;
      virtual HRESULT __stdcall raw_SetProfileSide (
        /*[in]*/ enum TGPart::FeaturePropertyConstants profileSide ) = 0;
      virtual HRESULT __stdcall raw_GetProfiles (
        /*[out]*/ long * NumProfiles,
        /*[out]*/ SAFEARRAY * * ppProfiles ) = 0;
      virtual HRESULT __stdcall raw_SetProfiles (
        /*[in]*/ long NumProfiles,
        SAFEARRAY * pProfiles ) = 0;
      virtual HRESULT __stdcall raw_SetScopeParts (
        /*[in]*/ long NumScopeParts,
        /*[in]*/ SAFEARRAY * pScopeParts ) = 0;
      virtual HRESULT __stdcall raw_GetScopeParts (
        /*[out]*/ long * NumScopeParts,
        /*[out]*/ SAFEARRAY * * pScopeParts ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * featureName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR featureName ) = 0;
      virtual HRESULT __stdcall get_Edges (
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType,
        /*[out,retval]*/ IDispatch * * ppFeatureEdges ) = 0;
      virtual HRESULT __stdcall get_Faces (
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall get_FacesByRay (
        /*[in]*/ double Xorigin,
        /*[in]*/ double Yorigin,
        /*[in]*/ double Zorigin,
        /*[in]*/ double Xdir,
        /*[in]*/ double Ydir,
        /*[in]*/ double Zdir,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall raw_Range (
        /*[out]*/ double * X1,
        /*[out]*/ double * Y1,
        /*[out]*/ double * Z1,
        /*[out]*/ double * X2,
        /*[out]*/ double * Y2,
        /*[out]*/ double * Z2 ) = 0;
      virtual HRESULT __stdcall get_Suppress (
        /*[out,retval]*/ VARIANT_BOOL * Suppress ) = 0;
      virtual HRESULT __stdcall put_Suppress (
        /*[in]*/ VARIANT_BOOL Suppress ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_RollToFeature ( ) = 0;
      virtual HRESULT __stdcall get_EdgesForScopePart (
        /*[in]*/ IUnknown * ScopePart,
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType,
        /*[out,retval]*/ IDispatch * * ppFeatureEdges ) = 0;
      virtual HRESULT __stdcall get_FacesForScopePart (
        /*[in]*/ IUnknown * ScopePart,
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall get_FacesByRayForScopePart (
        /*[in]*/ IUnknown * ScopePart,
        /*[in]*/ double Xorigin,
        /*[in]*/ double Yorigin,
        /*[in]*/ double Zorigin,
        /*[in]*/ double Xdir,
        /*[in]*/ double Ydir,
        /*[in]*/ double Zdir,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out]*/ VARIANT * Description,
        /*[out,retval]*/ enum TGPart::FeatureStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall raw_GetSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_AddSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_DeleteSuppressionVariable ( ) = 0;
      virtual HRESULT __stdcall raw_HasSuppressionVariable (
        /*[out,retval]*/ VARIANT_BOOL * IsSuppressionVariablePresent ) = 0;
      virtual HRESULT __stdcall get_FeatureType (
        /*[out,retval]*/ enum TGPart::FeatureTypeConstants * Type ) = 0;
};

struct __declspec(uuid("f9bd12a7-6ac8-4bb8-ab14-9a6f00e0b6f6"))
AssemblyFeaturesHoles : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyFeaturesHolePtr Item (
        const _variant_t & Index );
    long GetCount ( );
    AssemblyFeaturesHolePtr Add (
        unsigned long nNumScopeParts,
        SAFEARRAY * * pScopeParts,
        unsigned long nNumProfiles,
        SAFEARRAY * * pProfiles,
        enum TGPart::FeaturePropertyConstants * pExtentSide,
        IUnknown * pHoledata,
        enum TGPart::FeaturePropertyConstants ExtentType,
        double * pHoleDepth,
        IUnknown * pFromSurfOrPlane,
        IUnknown * pToSurfOrPlane,
        IUnknown * pKeyPoint,
        enum TGPart::KeyPointExtentConstants * pKeyPointFlags );
};

struct __declspec(uuid("f9bd12a7-6ac8-4bb8-ab14-9a6f00e0b6f8"))
AssemblyFeaturesHole : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetFeatureType))
    enum TGPart::FeatureTypeConstants FeatureType;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetEdges))
    IDispatchPtr Edges[];
    __declspec(property(get=GetFaces))
    IDispatchPtr Faces[];
    __declspec(property(get=GetFacesByRay))
    IDispatchPtr FacesByRay[][][][][][];
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetEdgesForScopePart))
    IDispatchPtr EdgesForScopePart[][];
    __declspec(property(get=GetFacesForScopePart))
    IDispatchPtr FacesForScopePart[][];
    __declspec(property(get=GetFacesByRayForScopePart))
    IDispatchPtr FacesByRayForScopePart[][][][][][][];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    double GetDepth ( );
    HRESULT SetDepth (
        double nDepth );
    enum TGPart::FeaturePropertyConstants GetExtentSide ( );
    HRESULT SetExtentSide (
        enum TGPart::FeaturePropertyConstants ExtentSide );
    enum TGPart::FeaturePropertyConstants GetExtentType ( );
    HRESULT SetExtentType (
        enum TGPart::FeaturePropertyConstants ExtentType );
    IUnknownPtr GetHoleData ( );
    HRESULT SetHoleData (
        IUnknown * Holedata );
    HRESULT GetProfiles (
        long * NumProfiles,
        SAFEARRAY * * ppProfiles );
    HRESULT SetProfiles (
        long NumProfiles,
        SAFEARRAY * pProfiles );
    HRESULT SetFromPlane (
        IUnknown * FromPlane );
    IUnknownPtr GetFromPlane ( );
    HRESULT SetToPlane (
        IUnknown * ToPlane );
    IUnknownPtr GetToPlane ( );
    HRESULT SetScopeParts (
        long NumScopeParts,
        SAFEARRAY * pScopeParts );
    HRESULT GetScopeParts (
        long * NumScopeParts,
        SAFEARRAY * * pScopeParts );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t _arg1 );
    IDispatchPtr GetEdges (
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFaces (
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRay (
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    HRESULT Range (
        double * X1,
        double * Y1,
        double * Z1,
        double * X2,
        double * Y2,
        double * Z2 );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL _arg1 );
    HRESULT Delete ( );
    HRESULT RollToFeature ( );
    IDispatchPtr GetEdgesForScopePart (
        IUnknown * ScopePart,
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFacesForScopePart (
        IUnknown * ScopePart,
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRayForScopePart (
        IUnknown * ScopePart,
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description = &vtMissing );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
    enum TGPart::FeatureTypeConstants GetFeatureType ( );
};

struct __declspec(uuid("231c2134-d7b1-4903-b524-4c017c9b7f67"))
_IAssemblyFeaturesHolesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyFeaturesHolePtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    AssemblyFeaturesHolePtr Add (
        unsigned long nNumScopeParts,
        SAFEARRAY * * pScopeParts,
        unsigned long nNumProfiles,
        SAFEARRAY * * pProfiles,
        enum TGPart::FeaturePropertyConstants * pExtentSide,
        IUnknown * pHoledata,
        enum TGPart::FeaturePropertyConstants ExtentType,
        double * pHoleDepth,
        IUnknown * pFromSurfOrPlane,
        IUnknown * pToSurfOrPlane,
        IUnknown * pKeyPoint,
        enum TGPart::KeyPointExtentConstants * pKeyPointFlags );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct AssemblyFeaturesHole * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ unsigned long nNumScopeParts,
        /*[in]*/ SAFEARRAY * * pScopeParts,
        /*[in]*/ unsigned long nNumProfiles,
        /*[in]*/ SAFEARRAY * * pProfiles,
        /*[in]*/ enum TGPart::FeaturePropertyConstants * pExtentSide,
        /*[in]*/ IUnknown * pHoledata,
        /*[in]*/ enum TGPart::FeaturePropertyConstants ExtentType,
        /*[in]*/ double * pHoleDepth,
        /*[in]*/ IUnknown * pFromSurfOrPlane,
        /*[in]*/ IUnknown * pToSurfOrPlane,
        /*[in]*/ IUnknown * pKeyPoint,
        /*[in]*/ enum TGPart::KeyPointExtentConstants * pKeyPointFlags,
        /*[out,retval]*/ struct AssemblyFeaturesHole * * ppAssemblyFeatureHole ) = 0;
};

struct __declspec(uuid("231c2134-d7b1-4903-b524-4c017c9b7f57"))
_IAssemblyFeaturesHoleAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetFeatureType))
    enum TGPart::FeatureTypeConstants FeatureType;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetEdges))
    IDispatchPtr Edges[];
    __declspec(property(get=GetFaces))
    IDispatchPtr Faces[];
    __declspec(property(get=GetFacesByRay))
    IDispatchPtr FacesByRay[][][][][][];
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetEdgesForScopePart))
    IDispatchPtr EdgesForScopePart[][];
    __declspec(property(get=GetFacesForScopePart))
    IDispatchPtr FacesForScopePart[][];
    __declspec(property(get=GetFacesByRayForScopePart))
    IDispatchPtr FacesByRayForScopePart[][][][][][][];

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    double GetDepth ( );
    HRESULT SetDepth (
        double nDepth );
    enum TGPart::FeaturePropertyConstants GetExtentSide ( );
    HRESULT SetExtentSide (
        enum TGPart::FeaturePropertyConstants ExtentSide );
    enum TGPart::FeaturePropertyConstants GetExtentType ( );
    HRESULT SetExtentType (
        enum TGPart::FeaturePropertyConstants ExtentType );
    IUnknownPtr GetHoleData ( );
    HRESULT SetHoleData (
        IUnknown * Holedata );
    HRESULT GetProfiles (
        long * NumProfiles,
        SAFEARRAY * * ppProfiles );
    HRESULT SetProfiles (
        long NumProfiles,
        SAFEARRAY * pProfiles );
    HRESULT SetFromPlane (
        IUnknown * FromPlane );
    IUnknownPtr GetFromPlane ( );
    HRESULT SetToPlane (
        IUnknown * ToPlane );
    IUnknownPtr GetToPlane ( );
    HRESULT SetScopeParts (
        long NumScopeParts,
        SAFEARRAY * pScopeParts );
    HRESULT GetScopeParts (
        long * NumScopeParts,
        SAFEARRAY * * pScopeParts );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t featureName );
    IDispatchPtr GetEdges (
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFaces (
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRay (
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    HRESULT Range (
        double * X1,
        double * Y1,
        double * Z1,
        double * X2,
        double * Y2,
        double * Z2 );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL Suppress );
    HRESULT Delete ( );
    HRESULT RollToFeature ( );
    IDispatchPtr GetEdgesForScopePart (
        IUnknown * ScopePart,
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFacesForScopePart (
        IUnknown * ScopePart,
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRayForScopePart (
        IUnknown * ScopePart,
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
    enum TGPart::FeatureTypeConstants GetFeatureType ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_GetDepth (
        /*[out,retval]*/ double * nDepth ) = 0;
      virtual HRESULT __stdcall raw_SetDepth (
        /*[in]*/ double nDepth ) = 0;
      virtual HRESULT __stdcall raw_GetExtentSide (
        /*[out,retval]*/ enum TGPart::FeaturePropertyConstants * pExtentSide ) = 0;
      virtual HRESULT __stdcall raw_SetExtentSide (
        /*[in]*/ enum TGPart::FeaturePropertyConstants ExtentSide ) = 0;
      virtual HRESULT __stdcall raw_GetExtentType (
        /*[out,retval]*/ enum TGPart::FeaturePropertyConstants * pExtentType ) = 0;
      virtual HRESULT __stdcall raw_SetExtentType (
        /*[in]*/ enum TGPart::FeaturePropertyConstants ExtentType ) = 0;
      virtual HRESULT __stdcall raw_GetHoleData (
        /*[out,retval]*/ IUnknown * * pHoledata ) = 0;
      virtual HRESULT __stdcall raw_SetHoleData (
        /*[in]*/ IUnknown * Holedata ) = 0;
      virtual HRESULT __stdcall raw_GetProfiles (
        /*[out]*/ long * NumProfiles,
        /*[out]*/ SAFEARRAY * * ppProfiles ) = 0;
      virtual HRESULT __stdcall raw_SetProfiles (
        /*[in]*/ long NumProfiles,
        SAFEARRAY * pProfiles ) = 0;
      virtual HRESULT __stdcall raw_SetFromPlane (
        /*[in]*/ IUnknown * FromPlane ) = 0;
      virtual HRESULT __stdcall raw_GetFromPlane (
        /*[out,retval]*/ IUnknown * * FromPlane ) = 0;
      virtual HRESULT __stdcall raw_SetToPlane (
        /*[in]*/ IUnknown * ToPlane ) = 0;
      virtual HRESULT __stdcall raw_GetToPlane (
        /*[out,retval]*/ IUnknown * * ToPlane ) = 0;
      virtual HRESULT __stdcall raw_SetScopeParts (
        /*[in]*/ long NumScopeParts,
        /*[in]*/ SAFEARRAY * pScopeParts ) = 0;
      virtual HRESULT __stdcall raw_GetScopeParts (
        /*[out]*/ long * NumScopeParts,
        /*[out]*/ SAFEARRAY * * pScopeParts ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * featureName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR featureName ) = 0;
      virtual HRESULT __stdcall get_Edges (
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType,
        /*[out,retval]*/ IDispatch * * ppFeatureEdges ) = 0;
      virtual HRESULT __stdcall get_Faces (
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall get_FacesByRay (
        /*[in]*/ double Xorigin,
        /*[in]*/ double Yorigin,
        /*[in]*/ double Zorigin,
        /*[in]*/ double Xdir,
        /*[in]*/ double Ydir,
        /*[in]*/ double Zdir,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall raw_Range (
        /*[out]*/ double * X1,
        /*[out]*/ double * Y1,
        /*[out]*/ double * Z1,
        /*[out]*/ double * X2,
        /*[out]*/ double * Y2,
        /*[out]*/ double * Z2 ) = 0;
      virtual HRESULT __stdcall get_Suppress (
        /*[out,retval]*/ VARIANT_BOOL * Suppress ) = 0;
      virtual HRESULT __stdcall put_Suppress (
        /*[in]*/ VARIANT_BOOL Suppress ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_RollToFeature ( ) = 0;
      virtual HRESULT __stdcall get_EdgesForScopePart (
        /*[in]*/ IUnknown * ScopePart,
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType,
        /*[out,retval]*/ IDispatch * * ppFeatureEdges ) = 0;
      virtual HRESULT __stdcall get_FacesForScopePart (
        /*[in]*/ IUnknown * ScopePart,
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall get_FacesByRayForScopePart (
        /*[in]*/ IUnknown * ScopePart,
        /*[in]*/ double Xorigin,
        /*[in]*/ double Yorigin,
        /*[in]*/ double Zorigin,
        /*[in]*/ double Xdir,
        /*[in]*/ double Ydir,
        /*[in]*/ double Zdir,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out]*/ VARIANT * Description,
        /*[out,retval]*/ enum TGPart::FeatureStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall raw_GetSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_AddSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_DeleteSuppressionVariable ( ) = 0;
      virtual HRESULT __stdcall raw_HasSuppressionVariable (
        /*[out,retval]*/ VARIANT_BOOL * IsSuppressionVariablePresent ) = 0;
      virtual HRESULT __stdcall get_FeatureType (
        /*[out,retval]*/ enum TGPart::FeatureTypeConstants * Type ) = 0;
};

struct __declspec(uuid("f9bd12a7-6ac8-4bb8-ab14-9a6f00e0b6f1"))
AssemblyFeaturesMirrors : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyFeaturesMirrorPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    AssemblyFeaturesMirrorPtr Add (
        long NumberOfFeatures,
        SAFEARRAY * * ppFeaturesArray,
        IUnknown * pMirrorPlane,
        enum TGPart::FeaturePropertyConstants MirrorType );
};

struct __declspec(uuid("f9bd12a7-6ac8-4bb8-ab14-9a6f00e0b6f3"))
AssemblyFeaturesMirror : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetFeatureType))
    enum TGPart::FeatureTypeConstants FeatureType;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetEdges))
    IDispatchPtr Edges[];
    __declspec(property(get=GetFaces))
    IDispatchPtr Faces[];
    __declspec(property(get=GetFacesByRay))
    IDispatchPtr FacesByRay[][][][][][];
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetEdgesForScopePart))
    IDispatchPtr EdgesForScopePart[][];
    __declspec(property(get=GetFacesForScopePart))
    IDispatchPtr FacesForScopePart[][];
    __declspec(property(get=GetFacesByRayForScopePart))
    IDispatchPtr FacesByRayForScopePart[][][][][][][];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT SetPlane (
        IUnknown * Plane );
    IUnknownPtr GetPlane ( );
    HRESULT GetParentFeatures (
        long * NumParentFeatures,
        SAFEARRAY * * ppParentFeatures );
    HRESULT SetParentFeatures (
        long NumParentFeatures,
        SAFEARRAY * pParentFeatures );
    enum TGPart::FeaturePropertyConstants GetMirrorType ( );
    HRESULT SetMirrorType (
        enum TGPart::FeaturePropertyConstants MirrorType );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t _arg1 );
    IDispatchPtr GetEdges (
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFaces (
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRay (
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    HRESULT Range (
        double * X1,
        double * Y1,
        double * Z1,
        double * X2,
        double * Y2,
        double * Z2 );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL _arg1 );
    HRESULT Delete ( );
    HRESULT RollToFeature ( );
    IDispatchPtr GetEdgesForScopePart (
        IUnknown * ScopePart,
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFacesForScopePart (
        IUnknown * ScopePart,
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRayForScopePart (
        IUnknown * ScopePart,
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description = &vtMissing );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
    enum TGPart::FeatureTypeConstants GetFeatureType ( );
};

struct __declspec(uuid("231c2134-d7b1-4903-b524-4c017c9b7f11"))
_IAssemblyFeaturesMirrorsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyFeaturesMirrorPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    AssemblyFeaturesMirrorPtr Add (
        long NumberOfFeatures,
        SAFEARRAY * * ppFeaturesArray,
        IUnknown * pMirrorPlane,
        enum TGPart::FeaturePropertyConstants MirrorType );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct AssemblyFeaturesMirror * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ long NumberOfFeatures,
        /*[in]*/ SAFEARRAY * * ppFeaturesArray,
        /*[in]*/ IUnknown * pMirrorPlane,
        /*[in]*/ enum TGPart::FeaturePropertyConstants MirrorType,
        /*[out,retval]*/ struct AssemblyFeaturesMirror * * MirrorFeature ) = 0;
};

struct __declspec(uuid("231c2134-d7b1-4903-b524-4c017c9b7f61"))
_IAssemblyFeaturesMirrorAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetFeatureType))
    enum TGPart::FeatureTypeConstants FeatureType;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetEdges))
    IDispatchPtr Edges[];
    __declspec(property(get=GetFaces))
    IDispatchPtr Faces[];
    __declspec(property(get=GetFacesByRay))
    IDispatchPtr FacesByRay[][][][][][];
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetEdgesForScopePart))
    IDispatchPtr EdgesForScopePart[][];
    __declspec(property(get=GetFacesForScopePart))
    IDispatchPtr FacesForScopePart[][];
    __declspec(property(get=GetFacesByRayForScopePart))
    IDispatchPtr FacesByRayForScopePart[][][][][][][];

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT SetPlane (
        IUnknown * Plane );
    IUnknownPtr GetPlane ( );
    HRESULT GetParentFeatures (
        long * NumParentFeatures,
        SAFEARRAY * * ppParentFeatures );
    HRESULT SetParentFeatures (
        long NumParentFeatures,
        SAFEARRAY * pParentFeatures );
    enum TGPart::FeaturePropertyConstants GetMirrorType ( );
    HRESULT SetMirrorType (
        enum TGPart::FeaturePropertyConstants MirrorType );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t featureName );
    IDispatchPtr GetEdges (
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFaces (
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRay (
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    HRESULT Range (
        double * X1,
        double * Y1,
        double * Z1,
        double * X2,
        double * Y2,
        double * Z2 );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL Suppress );
    HRESULT Delete ( );
    HRESULT RollToFeature ( );
    IDispatchPtr GetEdgesForScopePart (
        IUnknown * ScopePart,
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFacesForScopePart (
        IUnknown * ScopePart,
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRayForScopePart (
        IUnknown * ScopePart,
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
    enum TGPart::FeatureTypeConstants GetFeatureType ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_SetPlane (
        /*[in]*/ IUnknown * Plane ) = 0;
      virtual HRESULT __stdcall raw_GetPlane (
        /*[out,retval]*/ IUnknown * * Plane ) = 0;
      virtual HRESULT __stdcall raw_GetParentFeatures (
        /*[out]*/ long * NumParentFeatures,
        /*[out]*/ SAFEARRAY * * ppParentFeatures ) = 0;
      virtual HRESULT __stdcall raw_SetParentFeatures (
        /*[in]*/ long NumParentFeatures,
        SAFEARRAY * pParentFeatures ) = 0;
      virtual HRESULT __stdcall raw_GetMirrorType (
        /*[out,retval]*/ enum TGPart::FeaturePropertyConstants * pMirrorType ) = 0;
      virtual HRESULT __stdcall raw_SetMirrorType (
        /*[in]*/ enum TGPart::FeaturePropertyConstants MirrorType ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * featureName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR featureName ) = 0;
      virtual HRESULT __stdcall get_Edges (
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType,
        /*[out,retval]*/ IDispatch * * ppFeatureEdges ) = 0;
      virtual HRESULT __stdcall get_Faces (
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall get_FacesByRay (
        /*[in]*/ double Xorigin,
        /*[in]*/ double Yorigin,
        /*[in]*/ double Zorigin,
        /*[in]*/ double Xdir,
        /*[in]*/ double Ydir,
        /*[in]*/ double Zdir,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall raw_Range (
        /*[out]*/ double * X1,
        /*[out]*/ double * Y1,
        /*[out]*/ double * Z1,
        /*[out]*/ double * X2,
        /*[out]*/ double * Y2,
        /*[out]*/ double * Z2 ) = 0;
      virtual HRESULT __stdcall get_Suppress (
        /*[out,retval]*/ VARIANT_BOOL * Suppress ) = 0;
      virtual HRESULT __stdcall put_Suppress (
        /*[in]*/ VARIANT_BOOL Suppress ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_RollToFeature ( ) = 0;
      virtual HRESULT __stdcall get_EdgesForScopePart (
        /*[in]*/ IUnknown * ScopePart,
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType,
        /*[out,retval]*/ IDispatch * * ppFeatureEdges ) = 0;
      virtual HRESULT __stdcall get_FacesForScopePart (
        /*[in]*/ IUnknown * ScopePart,
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall get_FacesByRayForScopePart (
        /*[in]*/ IUnknown * ScopePart,
        /*[in]*/ double Xorigin,
        /*[in]*/ double Yorigin,
        /*[in]*/ double Zorigin,
        /*[in]*/ double Xdir,
        /*[in]*/ double Ydir,
        /*[in]*/ double Zdir,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out]*/ VARIANT * Description,
        /*[out,retval]*/ enum TGPart::FeatureStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall raw_GetSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_AddSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_DeleteSuppressionVariable ( ) = 0;
      virtual HRESULT __stdcall raw_HasSuppressionVariable (
        /*[out,retval]*/ VARIANT_BOOL * IsSuppressionVariablePresent ) = 0;
      virtual HRESULT __stdcall get_FeatureType (
        /*[out,retval]*/ enum TGPart::FeatureTypeConstants * Type ) = 0;
};

struct __declspec(uuid("f9bd12a7-6ac8-4bb8-ab14-9a6f00e0b6f2"))
AssemblyFeaturesPatterns : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyFeaturesPatternPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    AssemblyFeaturesPatternPtr Add (
        long NumberOfFeatures,
        SAFEARRAY * * ppFeaturesArray,
        IUnknown * Profile,
        enum TGPart::FeaturePropertyConstants PatternType );
};

struct __declspec(uuid("f9bd12a7-6ac8-4bb8-ab14-9a6f00e0b4d7"))
AssemblyFeaturesPattern : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetFeatureType))
    enum TGPart::FeatureTypeConstants FeatureType;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetEdges))
    IDispatchPtr Edges[];
    __declspec(property(get=GetFaces))
    IDispatchPtr Faces[];
    __declspec(property(get=GetFacesByRay))
    IDispatchPtr FacesByRay[][][][][][];
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetEdgesForScopePart))
    IDispatchPtr EdgesForScopePart[][];
    __declspec(property(get=GetFacesForScopePart))
    IDispatchPtr FacesForScopePart[][];
    __declspec(property(get=GetFacesByRayForScopePart))
    IDispatchPtr FacesByRayForScopePart[][][][][][][];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT SetProfile (
        IUnknown * pProfile );
    IUnknownPtr GetProfile ( );
    HRESULT GetParentFeatures (
        long * NumParentFeatures,
        SAFEARRAY * * ppParentFeatures );
    HRESULT SetParentFeatures (
        long NumParentFeatures,
        SAFEARRAY * pParentFeatures );
    enum TGPart::FeaturePropertyConstants GetPatternType ( );
    HRESULT SetPatternType (
        enum TGPart::FeaturePropertyConstants PatternType );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t _arg1 );
    IDispatchPtr GetEdges (
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFaces (
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRay (
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    HRESULT Range (
        double * X1,
        double * Y1,
        double * Z1,
        double * X2,
        double * Y2,
        double * Z2 );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL _arg1 );
    HRESULT Delete ( );
    HRESULT RollToFeature ( );
    IDispatchPtr GetEdgesForScopePart (
        IUnknown * ScopePart,
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFacesForScopePart (
        IUnknown * ScopePart,
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRayForScopePart (
        IUnknown * ScopePart,
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description = &vtMissing );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
    enum TGPart::FeatureTypeConstants GetFeatureType ( );
};

struct __declspec(uuid("231c2134-d7b1-4903-b524-4c017c9b7f13"))
_IAssemblyFeaturesPatternsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyFeaturesPatternPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    AssemblyFeaturesPatternPtr Add (
        long NumberOfFeatures,
        SAFEARRAY * * ppFeaturesArray,
        IUnknown * Profile,
        enum TGPart::FeaturePropertyConstants PatternType );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct AssemblyFeaturesPattern * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ long NumberOfFeatures,
        /*[in]*/ SAFEARRAY * * ppFeaturesArray,
        /*[in]*/ IUnknown * Profile,
        /*[in]*/ enum TGPart::FeaturePropertyConstants PatternType,
        /*[out,retval]*/ struct AssemblyFeaturesPattern * * PatternFeature ) = 0;
};

struct __declspec(uuid("231c2134-d7b1-4903-b524-4c017c9b7f33"))
_IAssemblyFeaturesPatternAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetFeatureType))
    enum TGPart::FeatureTypeConstants FeatureType;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetEdges))
    IDispatchPtr Edges[];
    __declspec(property(get=GetFaces))
    IDispatchPtr Faces[];
    __declspec(property(get=GetFacesByRay))
    IDispatchPtr FacesByRay[][][][][][];
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetEdgesForScopePart))
    IDispatchPtr EdgesForScopePart[][];
    __declspec(property(get=GetFacesForScopePart))
    IDispatchPtr FacesForScopePart[][];
    __declspec(property(get=GetFacesByRayForScopePart))
    IDispatchPtr FacesByRayForScopePart[][][][][][][];

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT SetProfile (
        IUnknown * pProfile );
    IUnknownPtr GetProfile ( );
    HRESULT GetParentFeatures (
        long * NumParentFeatures,
        SAFEARRAY * * ppParentFeatures );
    HRESULT SetParentFeatures (
        long NumParentFeatures,
        SAFEARRAY * pParentFeatures );
    enum TGPart::FeaturePropertyConstants GetPatternType ( );
    HRESULT SetPatternType (
        enum TGPart::FeaturePropertyConstants PatternType );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t featureName );
    IDispatchPtr GetEdges (
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFaces (
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRay (
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    HRESULT Range (
        double * X1,
        double * Y1,
        double * Z1,
        double * X2,
        double * Y2,
        double * Z2 );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL Suppress );
    HRESULT Delete ( );
    HRESULT RollToFeature ( );
    IDispatchPtr GetEdgesForScopePart (
        IUnknown * ScopePart,
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFacesForScopePart (
        IUnknown * ScopePart,
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRayForScopePart (
        IUnknown * ScopePart,
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
    enum TGPart::FeatureTypeConstants GetFeatureType ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_SetProfile (
        /*[in]*/ IUnknown * pProfile ) = 0;
      virtual HRESULT __stdcall raw_GetProfile (
        /*[out,retval]*/ IUnknown * * ppProfile ) = 0;
      virtual HRESULT __stdcall raw_GetParentFeatures (
        /*[out]*/ long * NumParentFeatures,
        /*[out]*/ SAFEARRAY * * ppParentFeatures ) = 0;
      virtual HRESULT __stdcall raw_SetParentFeatures (
        /*[in]*/ long NumParentFeatures,
        SAFEARRAY * pParentFeatures ) = 0;
      virtual HRESULT __stdcall raw_GetPatternType (
        /*[out,retval]*/ enum TGPart::FeaturePropertyConstants * pPatternType ) = 0;
      virtual HRESULT __stdcall raw_SetPatternType (
        /*[in]*/ enum TGPart::FeaturePropertyConstants PatternType ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * featureName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR featureName ) = 0;
      virtual HRESULT __stdcall get_Edges (
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType,
        /*[out,retval]*/ IDispatch * * ppFeatureEdges ) = 0;
      virtual HRESULT __stdcall get_Faces (
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall get_FacesByRay (
        /*[in]*/ double Xorigin,
        /*[in]*/ double Yorigin,
        /*[in]*/ double Zorigin,
        /*[in]*/ double Xdir,
        /*[in]*/ double Ydir,
        /*[in]*/ double Zdir,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall raw_Range (
        /*[out]*/ double * X1,
        /*[out]*/ double * Y1,
        /*[out]*/ double * Z1,
        /*[out]*/ double * X2,
        /*[out]*/ double * Y2,
        /*[out]*/ double * Z2 ) = 0;
      virtual HRESULT __stdcall get_Suppress (
        /*[out,retval]*/ VARIANT_BOOL * Suppress ) = 0;
      virtual HRESULT __stdcall put_Suppress (
        /*[in]*/ VARIANT_BOOL Suppress ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_RollToFeature ( ) = 0;
      virtual HRESULT __stdcall get_EdgesForScopePart (
        /*[in]*/ IUnknown * ScopePart,
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType,
        /*[out,retval]*/ IDispatch * * ppFeatureEdges ) = 0;
      virtual HRESULT __stdcall get_FacesForScopePart (
        /*[in]*/ IUnknown * ScopePart,
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall get_FacesByRayForScopePart (
        /*[in]*/ IUnknown * ScopePart,
        /*[in]*/ double Xorigin,
        /*[in]*/ double Yorigin,
        /*[in]*/ double Zorigin,
        /*[in]*/ double Xdir,
        /*[in]*/ double Ydir,
        /*[in]*/ double Zdir,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out]*/ VARIANT * Description,
        /*[out,retval]*/ enum TGPart::FeatureStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall raw_GetSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_AddSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_DeleteSuppressionVariable ( ) = 0;
      virtual HRESULT __stdcall raw_HasSuppressionVariable (
        /*[out,retval]*/ VARIANT_BOOL * IsSuppressionVariablePresent ) = 0;
      virtual HRESULT __stdcall get_FeatureType (
        /*[out,retval]*/ enum TGPart::FeatureTypeConstants * Type ) = 0;
};

struct __declspec(uuid("077d07c4-d3a5-4a21-b442-2dd3ecc56189"))
AssemblyFilletWelds : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyFilletWeldPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    AssemblyFilletWeldPtr Add (
        long NumberOfBaseFaces,
        SAFEARRAY * * BaseFaces,
        long NumberOfTargetFaces,
        SAFEARRAY * * TargetFaces,
        IDispatch * pLabelWeldDataObject,
        enum TGPart::FilletWeldSetbackConstants eSetbackType,
        double dBaseThickness,
        double dTargetThickness );
};

struct __declspec(uuid("8bb7a85b-5c68-4cf0-aa5d-788b790bb489"))
AssemblyFilletWeld : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetFeatureType))
    enum TGPart::FeatureTypeConstants FeatureType;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetTargetThickness,put=PutTargetThickness))
    double TargetThickness;
    __declspec(property(get=GetBaseThickness,put=PutBaseThickness))
    double BaseThickness;
    __declspec(property(get=GetSetBackType,put=PutSetBackType))
    enum TGPart::FilletWeldSetbackConstants SetBackType;
    __declspec(property(get=GetEdges))
    IDispatchPtr Edges[];
    __declspec(property(get=GetFaces))
    IDispatchPtr Faces[];
    __declspec(property(get=GetFacesByRay))
    IDispatchPtr FacesByRay[][][][][][];
    __declspec(property(get=GetAssemblyBody))
    AssemblyBodyPtr AssemblyBody;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    void PutName (
        _bstr_t _arg1 );
    _bstr_t GetName ( );
    void PutVisible (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetVisible ( );
    HRESULT Recompute ( );
    HRESULT Delete ( );
    HRESULT GoTo ( );
    void PutSuppress (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetSuppress ( );
    double GetTargetThickness ( );
    void PutTargetThickness (
        double _arg1 );
    double GetBaseThickness ( );
    void PutBaseThickness (
        double _arg1 );
    enum TGPart::FilletWeldSetbackConstants GetSetBackType ( );
    void PutSetBackType (
        enum TGPart::FilletWeldSetbackConstants _arg1 );
    IDispatchPtr GetEdges (
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFaces (
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRay (
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    HRESULT Range (
        double * X1,
        double * Y1,
        double * Z1,
        double * X2,
        double * Y2,
        double * Z2 );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description = &vtMissing );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
    enum TGPart::FeatureTypeConstants GetFeatureType ( );
    HRESULT GetLabelWeldData (
        IDispatch * * Object );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    AssemblyBodyPtr GetAssemblyBody ( );
};

struct __declspec(uuid("79d13906-774a-4f6f-81d9-e6f8fb83e63b"))
_IAssemblyFilletWeldsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyFilletWeldPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    AssemblyFilletWeldPtr Add (
        long NumberOfBaseFaces,
        SAFEARRAY * * BaseFaces,
        long NumberOfTargetFaces,
        SAFEARRAY * * TargetFaces,
        IDispatch * pLabelWeldDataObject,
        enum TGPart::FilletWeldSetbackConstants eSetbackType,
        double dBaseThickness,
        double dTargetThickness );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct AssemblyFilletWeld * * Item ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ long NumberOfBaseFaces,
        /*[in]*/ SAFEARRAY * * BaseFaces,
        /*[in]*/ long NumberOfTargetFaces,
        /*[in]*/ SAFEARRAY * * TargetFaces,
        /*[in]*/ IDispatch * pLabelWeldDataObject,
        /*[in]*/ enum TGPart::FilletWeldSetbackConstants eSetbackType,
        /*[in]*/ double dBaseThickness,
        /*[in]*/ double dTargetThickness,
        /*[out,retval]*/ struct AssemblyFilletWeld * * ppFilletWeld ) = 0;
};

struct __declspec(uuid("e711a8bc-8c7c-45ab-86a2-57e0c12537a7"))
_IAssemblyFilletWeldAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetFeatureType))
    enum TGPart::FeatureTypeConstants FeatureType;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetTargetThickness,put=PutTargetThickness))
    double TargetThickness;
    __declspec(property(get=GetBaseThickness,put=PutBaseThickness))
    double BaseThickness;
    __declspec(property(get=GetSetBackType,put=PutSetBackType))
    enum TGPart::FilletWeldSetbackConstants SetBackType;
    __declspec(property(get=GetEdges))
    IDispatchPtr Edges[];
    __declspec(property(get=GetFaces))
    IDispatchPtr Faces[];
    __declspec(property(get=GetFacesByRay))
    IDispatchPtr FacesByRay[][][][][][];
    __declspec(property(get=GetAssemblyBody))
    AssemblyBodyPtr AssemblyBody;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    void PutName (
        _bstr_t Name );
    _bstr_t GetName ( );
    void PutVisible (
        VARIANT_BOOL bVisible );
    VARIANT_BOOL GetVisible ( );
    HRESULT Recompute ( );
    HRESULT Delete ( );
    HRESULT GoTo ( );
    void PutSuppress (
        VARIANT_BOOL pvbSuppress );
    VARIANT_BOOL GetSuppress ( );
    double GetTargetThickness ( );
    void PutTargetThickness (
        double TargetThickness );
    double GetBaseThickness ( );
    void PutBaseThickness (
        double BaseThickness );
    enum TGPart::FilletWeldSetbackConstants GetSetBackType ( );
    void PutSetBackType (
        enum TGPart::FilletWeldSetbackConstants pSetBackType );
    IDispatchPtr GetEdges (
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFaces (
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRay (
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    HRESULT Range (
        double * X1,
        double * Y1,
        double * Z1,
        double * X2,
        double * Y2,
        double * Z2 );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
    enum TGPart::FeatureTypeConstants GetFeatureType ( );
    HRESULT GetLabelWeldData (
        IDispatch * * Object );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    AssemblyBodyPtr GetAssemblyBody ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL bVisible ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * bVisible ) = 0;
      virtual HRESULT __stdcall raw_Recompute ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_GoTo ( ) = 0;
      virtual HRESULT __stdcall put_Suppress (
        /*[in]*/ VARIANT_BOOL pvbSuppress ) = 0;
      virtual HRESULT __stdcall get_Suppress (
        /*[out,retval]*/ VARIANT_BOOL * pvbSuppress ) = 0;
      virtual HRESULT __stdcall get_TargetThickness (
        /*[out,retval]*/ double * TargetThickness ) = 0;
      virtual HRESULT __stdcall put_TargetThickness (
        /*[in]*/ double TargetThickness ) = 0;
      virtual HRESULT __stdcall get_BaseThickness (
        /*[out,retval]*/ double * BaseThickness ) = 0;
      virtual HRESULT __stdcall put_BaseThickness (
        /*[in]*/ double BaseThickness ) = 0;
      virtual HRESULT __stdcall get_SetBackType (
        /*[out,retval]*/ enum TGPart::FilletWeldSetbackConstants * pSetBackType ) = 0;
      virtual HRESULT __stdcall put_SetBackType (
        /*[in]*/ enum TGPart::FilletWeldSetbackConstants pSetBackType ) = 0;
      virtual HRESULT __stdcall get_Edges (
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType,
        /*[out,retval]*/ IDispatch * * ppFeatureEdges ) = 0;
      virtual HRESULT __stdcall get_Faces (
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall get_FacesByRay (
        /*[in]*/ double Xorigin,
        /*[in]*/ double Yorigin,
        /*[in]*/ double Zorigin,
        /*[in]*/ double Xdir,
        /*[in]*/ double Ydir,
        /*[in]*/ double Zdir,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall raw_Range (
        /*[out]*/ double * X1,
        /*[out]*/ double * Y1,
        /*[out]*/ double * Z1,
        /*[out]*/ double * X2,
        /*[out]*/ double * Y2,
        /*[out]*/ double * Z2 ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out]*/ VARIANT * Description,
        /*[out,retval]*/ enum TGPart::FeatureStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall raw_GetSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_AddSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_DeleteSuppressionVariable ( ) = 0;
      virtual HRESULT __stdcall raw_HasSuppressionVariable (
        /*[out,retval]*/ VARIANT_BOOL * IsSuppressionVariablePresent ) = 0;
      virtual HRESULT __stdcall get_FeatureType (
        /*[out,retval]*/ enum TGPart::FeatureTypeConstants * Type ) = 0;
      virtual HRESULT __stdcall raw_GetLabelWeldData (
        /*[out]*/ IDispatch * * Object ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall get_AssemblyBody (
        /*[out,retval]*/ struct AssemblyBody * * AssemblyBody ) = 0;
};

struct __declspec(uuid("fd41873a-0011-421a-8e69-16053e2279ab"))
AFGrooveWelds : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AFGrooveWeldPtr Item (
        const _variant_t & Index );
    long GetCount ( );
};

struct __declspec(uuid("bc71e8b8-1aee-484a-b642-20fda2cc7dd7"))
AFGrooveWeld : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetFeatureType))
    enum TGPart::FeatureTypeConstants FeatureType;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetAssemblyBody))
    AssemblyBodyPtr AssemblyBody;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    void PutName (
        _bstr_t _arg1 );
    _bstr_t GetName ( );
    void PutVisible (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetVisible ( );
    HRESULT Recompute ( );
    HRESULT Delete ( );
    HRESULT GoTo ( );
    void PutSuppress (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetSuppress ( );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description = &vtMissing );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
    enum TGPart::FeatureTypeConstants GetFeatureType ( );
    AssemblyBodyPtr GetAssemblyBody ( );
    HRESULT GetLabelWeldData (
        IDispatch * * Object );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
};

struct __declspec(uuid("6ef83357-6ed9-4170-827f-33e642e993ff"))
_IAFGrooveWeldsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AFGrooveWeldPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct AFGrooveWeld * * Item ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
};

struct __declspec(uuid("84a69470-d23c-45b8-b398-f0de3073d6e7"))
_IAFGrooveWeldAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetFeatureType))
    enum TGPart::FeatureTypeConstants FeatureType;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetAssemblyBody))
    AssemblyBodyPtr AssemblyBody;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    void PutName (
        _bstr_t Name );
    _bstr_t GetName ( );
    void PutVisible (
        VARIANT_BOOL bVisible );
    VARIANT_BOOL GetVisible ( );
    HRESULT Recompute ( );
    HRESULT Delete ( );
    HRESULT GoTo ( );
    void PutSuppress (
        VARIANT_BOOL pvbSuppress );
    VARIANT_BOOL GetSuppress ( );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
    enum TGPart::FeatureTypeConstants GetFeatureType ( );
    AssemblyBodyPtr GetAssemblyBody ( );
    HRESULT GetLabelWeldData (
        IDispatch * * Object );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL bVisible ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * bVisible ) = 0;
      virtual HRESULT __stdcall raw_Recompute ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_GoTo ( ) = 0;
      virtual HRESULT __stdcall put_Suppress (
        /*[in]*/ VARIANT_BOOL pvbSuppress ) = 0;
      virtual HRESULT __stdcall get_Suppress (
        /*[out,retval]*/ VARIANT_BOOL * pvbSuppress ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out]*/ VARIANT * Description,
        /*[out,retval]*/ enum TGPart::FeatureStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall raw_GetSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_AddSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_DeleteSuppressionVariable ( ) = 0;
      virtual HRESULT __stdcall raw_HasSuppressionVariable (
        /*[out,retval]*/ VARIANT_BOOL * IsSuppressionVariablePresent ) = 0;
      virtual HRESULT __stdcall get_FeatureType (
        /*[out,retval]*/ enum TGPart::FeatureTypeConstants * Type ) = 0;
      virtual HRESULT __stdcall get_AssemblyBody (
        /*[out,retval]*/ struct AssemblyBody * * AssemblyBody ) = 0;
      virtual HRESULT __stdcall raw_GetLabelWeldData (
        /*[out]*/ IDispatch * * Object ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
};

struct __declspec(uuid("aa1ed4ed-767c-4b1c-9f09-52385756e192"))
AssemblyFeaturesSweptProtrusions : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyFeaturesSweptProtrusionPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    AssemblyFeaturesSweptProtrusionPtr Add (
        long NumCurves,
        SAFEARRAY * * TraceCurves,
        long NumSections,
        SAFEARRAY * * CrossSections,
        SAFEARRAY * * Origins );
};

struct __declspec(uuid("e167d214-aa7a-4dca-af29-b382cd8a9af0"))
AssemblyFeaturesSweptProtrusion : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetEdges))
    IDispatchPtr Edges[];
    __declspec(property(get=GetFaces))
    IDispatchPtr Faces[];
    __declspec(property(get=GetFacesByRay))
    IDispatchPtr FacesByRay[][][][][][];
    __declspec(property(get=GetFeatureType))
    enum TGPart::FeatureTypeConstants FeatureType;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetAssemblyBody))
    AssemblyBodyPtr AssemblyBody;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t _arg1 );
    IDispatchPtr GetEdges (
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFaces (
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRay (
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    HRESULT Range (
        double * X1,
        double * Y1,
        double * Z1,
        double * X2,
        double * Y2,
        double * Z2 );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL _arg1 );
    HRESULT Delete ( );
    HRESULT RollToFeature ( );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description = &vtMissing );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
    enum TGPart::FeatureTypeConstants GetFeatureType ( );
    AssemblyBodyPtr GetAssemblyBody ( );
};

struct __declspec(uuid("4db57fd6-edc4-4525-992f-163440315a06"))
_IAssemblyFeaturesSweptProtrusionsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyFeaturesSweptProtrusionPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    AssemblyFeaturesSweptProtrusionPtr Add (
        long NumCurves,
        SAFEARRAY * * TraceCurves,
        long NumSections,
        SAFEARRAY * * CrossSections,
        SAFEARRAY * * Origins );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct AssemblyFeaturesSweptProtrusion * * Item ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ long NumCurves,
        /*[in]*/ SAFEARRAY * * TraceCurves,
        /*[in]*/ long NumSections,
        /*[in]*/ SAFEARRAY * * CrossSections,
        /*[in]*/ SAFEARRAY * * Origins,
        /*[out,retval]*/ struct AssemblyFeaturesSweptProtrusion * * SweptProtrusion ) = 0;
};

struct __declspec(uuid("9f76f45e-dacf-4bca-a62c-99d9e3aa5579"))
_IAssemblyFeaturesSweptProtrusionAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetEdges))
    IDispatchPtr Edges[];
    __declspec(property(get=GetFaces))
    IDispatchPtr Faces[];
    __declspec(property(get=GetFacesByRay))
    IDispatchPtr FacesByRay[][][][][][];
    __declspec(property(get=GetFeatureType))
    enum TGPart::FeatureTypeConstants FeatureType;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetAssemblyBody))
    AssemblyBodyPtr AssemblyBody;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    IDispatchPtr GetEdges (
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFaces (
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRay (
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    HRESULT Range (
        double * X1,
        double * Y1,
        double * Z1,
        double * X2,
        double * Y2,
        double * Z2 );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL Suppress );
    HRESULT Delete ( );
    HRESULT RollToFeature ( );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
    enum TGPart::FeatureTypeConstants GetFeatureType ( );
    AssemblyBodyPtr GetAssemblyBody ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Edges (
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType,
        /*[out,retval]*/ IDispatch * * ppFeatureEdges ) = 0;
      virtual HRESULT __stdcall get_Faces (
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall get_FacesByRay (
        /*[in]*/ double Xorigin,
        /*[in]*/ double Yorigin,
        /*[in]*/ double Zorigin,
        /*[in]*/ double Xdir,
        /*[in]*/ double Ydir,
        /*[in]*/ double Zdir,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall raw_Range (
        /*[out]*/ double * X1,
        /*[out]*/ double * Y1,
        /*[out]*/ double * Z1,
        /*[out]*/ double * X2,
        /*[out]*/ double * Y2,
        /*[out]*/ double * Z2 ) = 0;
      virtual HRESULT __stdcall get_Suppress (
        /*[out,retval]*/ VARIANT_BOOL * Suppress ) = 0;
      virtual HRESULT __stdcall put_Suppress (
        /*[in]*/ VARIANT_BOOL Suppress ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_RollToFeature ( ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out]*/ VARIANT * Description,
        /*[out,retval]*/ enum TGPart::FeatureStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall raw_GetSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_AddSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_DeleteSuppressionVariable ( ) = 0;
      virtual HRESULT __stdcall raw_HasSuppressionVariable (
        /*[out,retval]*/ VARIANT_BOOL * IsSuppressionVariablePresent ) = 0;
      virtual HRESULT __stdcall get_FeatureType (
        /*[out,retval]*/ enum TGPart::FeatureTypeConstants * Type ) = 0;
      virtual HRESULT __stdcall get_AssemblyBody (
        /*[out,retval]*/ struct AssemblyBody * * AssemblyBody ) = 0;
};

struct __declspec(uuid("70dbf979-0cd7-4ca7-947b-0cd45ca19ad7"))
AssemblyStitchWelds : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyStitchWeldPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    AssemblyStitchWeldPtr Add (
        long NumberOfStitchPaths,
        SAFEARRAY * * StitchWeldPaths,
        SAFEARRAY * * StartVertices,
        SAFEARRAY * * DirectionEdgeForClosedStitchWeldPaths,
        SAFEARRAY * * eStitchDirections,
        enum TGPart::StitchWeldType eWeldType,
        enum TGPart::StitchWeldAnnotationFormat eAnnotationFormat,
        double dStartOffsetLength,
        double dEndOffsetLength,
        double dBeadLength,
        double dGapLength,
        _bstr_t bsStyleName );
};

struct __declspec(uuid("4c65f6ca-774c-4fef-84a0-37d1fc24fc02"))
AssemblyStitchWeld : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetFeatureType))
    enum TGPart::FeatureTypeConstants FeatureType;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetAnnotationFormat,put=PutAnnotationFormat))
    enum TGPart::StitchWeldAnnotationFormat AnnotationFormat;
    __declspec(property(get=GetType,put=PutType))
    enum TGPart::StitchWeldType Type;
    __declspec(property(get=GetStartOffset,put=PutStartOffset))
    double StartOffset;
    __declspec(property(get=GetEndOffset,put=PutEndOffset))
    double EndOffset;
    __declspec(property(get=GetBeadLength,put=PutBeadLength))
    double BeadLength;
    __declspec(property(get=GetGapLength,put=PutGapLength))
    double GapLength;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    void PutName (
        _bstr_t _arg1 );
    _bstr_t GetName ( );
    void PutVisible (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetVisible ( );
    HRESULT Recompute ( );
    HRESULT Delete ( );
    HRESULT GoTo ( );
    void PutSuppress (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetSuppress ( );
    enum TGPart::StitchWeldAnnotationFormat GetAnnotationFormat ( );
    void PutAnnotationFormat (
        enum TGPart::StitchWeldAnnotationFormat _arg1 );
    enum TGPart::StitchWeldType GetType ( );
    void PutType (
        enum TGPart::StitchWeldType _arg1 );
    double GetStartOffset ( );
    void PutStartOffset (
        double _arg1 );
    double GetEndOffset ( );
    void PutEndOffset (
        double _arg1 );
    double GetBeadLength ( );
    void PutBeadLength (
        double _arg1 );
    double GetGapLength ( );
    void PutGapLength (
        double _arg1 );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description = &vtMissing );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
    enum TGPart::FeatureTypeConstants GetFeatureType ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
};

struct __declspec(uuid("d96382d9-b340-4207-9946-de2ab8989137"))
_IAssemblyStitchWeldsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyStitchWeldPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    AssemblyStitchWeldPtr Add (
        long NumberOfStitchPaths,
        SAFEARRAY * * StitchWeldPaths,
        SAFEARRAY * * StartVertices,
        SAFEARRAY * * DirectionEdgeForClosedStitchWeldPaths,
        SAFEARRAY * * eStitchDirections,
        enum TGPart::StitchWeldType eWeldType,
        enum TGPart::StitchWeldAnnotationFormat eAnnotationFormat,
        double dStartOffsetLength,
        double dEndOffsetLength,
        double dBeadLength,
        double dGapLength,
        _bstr_t bsStyleName );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct AssemblyStitchWeld * * Item ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ long NumberOfStitchPaths,
        /*[in]*/ SAFEARRAY * * StitchWeldPaths,
        /*[in]*/ SAFEARRAY * * StartVertices,
        /*[in]*/ SAFEARRAY * * DirectionEdgeForClosedStitchWeldPaths,
        /*[in]*/ SAFEARRAY * * eStitchDirections,
        /*[in]*/ enum TGPart::StitchWeldType eWeldType,
        /*[in]*/ enum TGPart::StitchWeldAnnotationFormat eAnnotationFormat,
        /*[in]*/ double dStartOffsetLength,
        /*[in]*/ double dEndOffsetLength,
        /*[in]*/ double dBeadLength,
        /*[in]*/ double dGapLength,
        /*[in]*/ BSTR bsStyleName,
        /*[out,retval]*/ struct AssemblyStitchWeld * * ppStitchWeld ) = 0;
};

struct __declspec(uuid("613f6490-7d11-4c94-81e5-cba26ef905d2"))
_IAssemblyStitchWeldAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetFeatureType))
    enum TGPart::FeatureTypeConstants FeatureType;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetAnnotationFormat,put=PutAnnotationFormat))
    enum TGPart::StitchWeldAnnotationFormat AnnotationFormat;
    __declspec(property(get=GetType,put=PutType))
    enum TGPart::StitchWeldType Type;
    __declspec(property(get=GetStartOffset,put=PutStartOffset))
    double StartOffset;
    __declspec(property(get=GetEndOffset,put=PutEndOffset))
    double EndOffset;
    __declspec(property(get=GetBeadLength,put=PutBeadLength))
    double BeadLength;
    __declspec(property(get=GetGapLength,put=PutGapLength))
    double GapLength;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    void PutName (
        _bstr_t Name );
    _bstr_t GetName ( );
    void PutVisible (
        VARIANT_BOOL bVisible );
    VARIANT_BOOL GetVisible ( );
    HRESULT Recompute ( );
    HRESULT Delete ( );
    HRESULT GoTo ( );
    void PutSuppress (
        VARIANT_BOOL pvbSuppress );
    VARIANT_BOOL GetSuppress ( );
    enum TGPart::StitchWeldAnnotationFormat GetAnnotationFormat ( );
    void PutAnnotationFormat (
        enum TGPart::StitchWeldAnnotationFormat peAnnotationFormat );
    enum TGPart::StitchWeldType GetType ( );
    void PutType (
        enum TGPart::StitchWeldType pWeldType );
    double GetStartOffset ( );
    void PutStartOffset (
        double pdStartOffset );
    double GetEndOffset ( );
    void PutEndOffset (
        double pdEndOffset );
    double GetBeadLength ( );
    void PutBeadLength (
        double dBeadLength );
    double GetGapLength ( );
    void PutGapLength (
        double pdGapLength );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
    enum TGPart::FeatureTypeConstants GetFeatureType ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL bVisible ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * bVisible ) = 0;
      virtual HRESULT __stdcall raw_Recompute ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_GoTo ( ) = 0;
      virtual HRESULT __stdcall put_Suppress (
        /*[in]*/ VARIANT_BOOL pvbSuppress ) = 0;
      virtual HRESULT __stdcall get_Suppress (
        /*[out,retval]*/ VARIANT_BOOL * pvbSuppress ) = 0;
      virtual HRESULT __stdcall get_AnnotationFormat (
        /*[out,retval]*/ enum TGPart::StitchWeldAnnotationFormat * peAnnotationFormat ) = 0;
      virtual HRESULT __stdcall put_AnnotationFormat (
        /*[in]*/ enum TGPart::StitchWeldAnnotationFormat peAnnotationFormat ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGPart::StitchWeldType * pWeldType ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum TGPart::StitchWeldType pWeldType ) = 0;
      virtual HRESULT __stdcall get_StartOffset (
        /*[out,retval]*/ double * pdStartOffset ) = 0;
      virtual HRESULT __stdcall put_StartOffset (
        /*[in]*/ double pdStartOffset ) = 0;
      virtual HRESULT __stdcall get_EndOffset (
        /*[out,retval]*/ double * pdEndOffset ) = 0;
      virtual HRESULT __stdcall put_EndOffset (
        /*[in]*/ double pdEndOffset ) = 0;
      virtual HRESULT __stdcall get_BeadLength (
        /*[out,retval]*/ double * dBeadLength ) = 0;
      virtual HRESULT __stdcall put_BeadLength (
        /*[in]*/ double dBeadLength ) = 0;
      virtual HRESULT __stdcall get_GapLength (
        /*[out,retval]*/ double * pdGapLength ) = 0;
      virtual HRESULT __stdcall put_GapLength (
        /*[in]*/ double pdGapLength ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out]*/ VARIANT * Description,
        /*[out,retval]*/ enum TGPart::FeatureStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall raw_GetSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_AddSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_DeleteSuppressionVariable ( ) = 0;
      virtual HRESULT __stdcall raw_HasSuppressionVariable (
        /*[out,retval]*/ VARIANT_BOOL * IsSuppressionVariablePresent ) = 0;
      virtual HRESULT __stdcall get_FeatureType (
        /*[out,retval]*/ enum TGPart::FeatureTypeConstants * Type ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
};

struct __declspec(uuid("94696b94-15e1-4ebb-9d47-adb11109992a"))
AssemblyThreads : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyThreadPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    AssemblyThreadPtr Add (
        IDispatch * Holedata,
        long NumberOfCylinders,
        SAFEARRAY * * CylinderArray,
        SAFEARRAY * * CylinderEndArray,
        SAFEARRAY * * CylinderEndTypes,
        const _variant_t & Reserved2 = vtMissing );
};

struct __declspec(uuid("e6ef7979-44a8-4935-8c0d-b0363662170d"))
AssemblyThread : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetFeatureType))
    enum TGPart::FeatureTypeConstants FeatureType;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetHoledata))
    IDispatchPtr Holedata;
    __declspec(property(get=GetEdges))
    IDispatchPtr Edges[];
    __declspec(property(get=GetFaces))
    IDispatchPtr Faces[];
    __declspec(property(get=GetFacesByRay))
    IDispatchPtr FacesByRay[][][][][][];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    void PutName (
        _bstr_t _arg1 );
    _bstr_t GetName ( );
    void PutVisible (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetVisible ( );
    HRESULT Recompute ( );
    HRESULT Delete ( );
    HRESULT GoTo ( );
    void PutSuppress (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetSuppress ( );
    IDispatchPtr GetEdges (
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFaces (
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRay (
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    HRESULT Range (
        double * X1,
        double * Y1,
        double * Z1,
        double * X2,
        double * Y2,
        double * Z2 );
    IDispatchPtr GetHoledata ( );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description = &vtMissing );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
    enum TGPart::FeatureTypeConstants GetFeatureType ( );
};

struct __declspec(uuid("c1548baa-80b9-422b-98f9-ec5c8bdf1ec0"))
_IAssemblyThreadsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyThreadPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    AssemblyThreadPtr Add (
        IDispatch * Holedata,
        long NumberOfCylinders,
        SAFEARRAY * * CylinderArray,
        SAFEARRAY * * CylinderEndArray,
        SAFEARRAY * * CylinderEndTypes,
        const _variant_t & Reserved2 = vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct AssemblyThread * * Item ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ IDispatch * Holedata,
        /*[in]*/ long NumberOfCylinders,
        /*[in]*/ SAFEARRAY * * CylinderArray,
        /*[in]*/ SAFEARRAY * * CylinderEndArray,
        /*[in]*/ SAFEARRAY * * CylinderEndTypes,
        /*[in]*/ VARIANT Reserved2,
        /*[out,retval]*/ struct AssemblyThread * * ppThread ) = 0;
};

struct __declspec(uuid("866816f1-5f58-4b98-bbd0-44833b0044d7"))
_IAssemblyThreadAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetFeatureType))
    enum TGPart::FeatureTypeConstants FeatureType;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetHoledata))
    IDispatchPtr Holedata;
    __declspec(property(get=GetEdges))
    IDispatchPtr Edges[];
    __declspec(property(get=GetFaces))
    IDispatchPtr Faces[];
    __declspec(property(get=GetFacesByRay))
    IDispatchPtr FacesByRay[][][][][][];

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    void PutName (
        _bstr_t Name );
    _bstr_t GetName ( );
    void PutVisible (
        VARIANT_BOOL bVisible );
    VARIANT_BOOL GetVisible ( );
    HRESULT Recompute ( );
    HRESULT Delete ( );
    HRESULT GoTo ( );
    void PutSuppress (
        VARIANT_BOOL pvbSuppress );
    VARIANT_BOOL GetSuppress ( );
    IDispatchPtr GetEdges (
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFaces (
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRay (
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    HRESULT Range (
        double * X1,
        double * Y1,
        double * Z1,
        double * X2,
        double * Y2,
        double * Z2 );
    IDispatchPtr GetHoledata ( );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
    enum TGPart::FeatureTypeConstants GetFeatureType ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL bVisible ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * bVisible ) = 0;
      virtual HRESULT __stdcall raw_Recompute ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_GoTo ( ) = 0;
      virtual HRESULT __stdcall put_Suppress (
        /*[in]*/ VARIANT_BOOL pvbSuppress ) = 0;
      virtual HRESULT __stdcall get_Suppress (
        /*[out,retval]*/ VARIANT_BOOL * pvbSuppress ) = 0;
      virtual HRESULT __stdcall get_Edges (
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType,
        /*[out,retval]*/ IDispatch * * ppFeatureEdges ) = 0;
      virtual HRESULT __stdcall get_Faces (
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall get_FacesByRay (
        /*[in]*/ double Xorigin,
        /*[in]*/ double Yorigin,
        /*[in]*/ double Zorigin,
        /*[in]*/ double Xdir,
        /*[in]*/ double Ydir,
        /*[in]*/ double Zdir,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall raw_Range (
        /*[out]*/ double * X1,
        /*[out]*/ double * Y1,
        /*[out]*/ double * Z1,
        /*[out]*/ double * X2,
        /*[out]*/ double * Y2,
        /*[out]*/ double * Z2 ) = 0;
      virtual HRESULT __stdcall get_Holedata (
        /*[out,retval]*/ IDispatch * * Holedata ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out]*/ VARIANT * Description,
        /*[out,retval]*/ enum TGPart::FeatureStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall raw_GetSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_AddSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_DeleteSuppressionVariable ( ) = 0;
      virtual HRESULT __stdcall raw_HasSuppressionVariable (
        /*[out,retval]*/ VARIANT_BOOL * IsSuppressionVariablePresent ) = 0;
      virtual HRESULT __stdcall get_FeatureType (
        /*[out,retval]*/ enum TGPart::FeatureTypeConstants * Type ) = 0;
};

struct __declspec(uuid("46140580-2eb5-4a7d-a84b-259e5895f1b9"))
AssemblyFeaturesExtrudedProtrusions : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyFeaturesExtrudedProtrusionPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    AssemblyFeaturesExtrudedProtrusionPtr Add (
        long nNumProfiles,
        SAFEARRAY * * pProfiles,
        enum TGPart::FeaturePropertyConstants ExtentType,
        enum TGPart::FeaturePropertyConstants * pExtentSide,
        enum TGPart::FeaturePropertyConstants profileSide,
        double * pdDistance,
        IUnknown * pKeyPoint,
        enum TGPart::KeyPointExtentConstants * pKeyPointFlags,
        IUnknown * pFromSurfOrPlane,
        IUnknown * pToSurfOrPlane );
};

struct __declspec(uuid("0a6803b9-4376-4779-aad5-0738b020876b"))
AssemblyFeaturesExtrudedProtrusion : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetFeatureType))
    enum TGPart::FeatureTypeConstants FeatureType;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetEdges))
    IDispatchPtr Edges[];
    __declspec(property(get=GetFaces))
    IDispatchPtr Faces[];
    __declspec(property(get=GetFacesByRay))
    IDispatchPtr FacesByRay[][][][][][];
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetAssemblyBody))
    AssemblyBodyPtr AssemblyBody;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    double GetDepth ( );
    HRESULT SetDepth (
        double nDepth );
    enum TGPart::FeaturePropertyConstants GetExtentSide ( );
    HRESULT SetExtentSide (
        enum TGPart::FeaturePropertyConstants ExtentSide );
    enum TGPart::FeaturePropertyConstants GetExtentType ( );
    HRESULT SetExtentType (
        enum TGPart::FeaturePropertyConstants ExtentType );
    enum TGPart::FeaturePropertyConstants GetProfileSide ( );
    HRESULT SetProfileSide (
        enum TGPart::FeaturePropertyConstants profileSide );
    HRESULT GetProfiles (
        long * NumProfiles,
        SAFEARRAY * * ppProfiles );
    HRESULT SetProfiles (
        long NumProfiles,
        SAFEARRAY * pProfiles );
    HRESULT SetFromPlane (
        IUnknown * FromPlane );
    IUnknownPtr GetFromPlane ( );
    HRESULT SetToPlane (
        IUnknown * ToPlane );
    IUnknownPtr GetToPlane ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t _arg1 );
    IDispatchPtr GetEdges (
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFaces (
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRay (
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    HRESULT Range (
        double * X1,
        double * Y1,
        double * Z1,
        double * X2,
        double * Y2,
        double * Z2 );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL _arg1 );
    HRESULT Delete ( );
    HRESULT RollToFeature ( );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description = &vtMissing );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
    enum TGPart::FeatureTypeConstants GetFeatureType ( );
    AssemblyBodyPtr GetAssemblyBody ( );
};

struct __declspec(uuid("46eb0321-a0c9-468c-a016-569e2a68ac52"))
_IAssemblyFeaturesExtrudedProtrusionsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyFeaturesExtrudedProtrusionPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    AssemblyFeaturesExtrudedProtrusionPtr Add (
        long nNumProfiles,
        SAFEARRAY * * pProfiles,
        enum TGPart::FeaturePropertyConstants ExtentType,
        enum TGPart::FeaturePropertyConstants * pExtentSide,
        enum TGPart::FeaturePropertyConstants profileSide,
        double * pdDistance,
        IUnknown * pKeyPoint,
        enum TGPart::KeyPointExtentConstants * pKeyPointFlags,
        IUnknown * pFromSurfOrPlane,
        IUnknown * pToSurfOrPlane );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct AssemblyFeaturesExtrudedProtrusion * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ long nNumProfiles,
        /*[in]*/ SAFEARRAY * * pProfiles,
        /*[in]*/ enum TGPart::FeaturePropertyConstants ExtentType,
        /*[in]*/ enum TGPart::FeaturePropertyConstants * pExtentSide,
        /*[in]*/ enum TGPart::FeaturePropertyConstants profileSide,
        /*[in]*/ double * pdDistance,
        /*[in]*/ IUnknown * pKeyPoint,
        /*[in]*/ enum TGPart::KeyPointExtentConstants * pKeyPointFlags,
        /*[in]*/ IUnknown * pFromSurfOrPlane,
        /*[in]*/ IUnknown * pToSurfOrPlane,
        /*[out,retval]*/ struct AssemblyFeaturesExtrudedProtrusion * * pOutAssemblyFeature ) = 0;
};

struct __declspec(uuid("1eb43baf-5043-41cf-baaf-d580eda53312"))
_IAssemblyFeaturesExtrudedProtrusionAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetFeatureType))
    enum TGPart::FeatureTypeConstants FeatureType;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetEdges))
    IDispatchPtr Edges[];
    __declspec(property(get=GetFaces))
    IDispatchPtr Faces[];
    __declspec(property(get=GetFacesByRay))
    IDispatchPtr FacesByRay[][][][][][];
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetAssemblyBody))
    AssemblyBodyPtr AssemblyBody;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    double GetDepth ( );
    HRESULT SetDepth (
        double nDepth );
    enum TGPart::FeaturePropertyConstants GetExtentSide ( );
    HRESULT SetExtentSide (
        enum TGPart::FeaturePropertyConstants ExtentSide );
    enum TGPart::FeaturePropertyConstants GetExtentType ( );
    HRESULT SetExtentType (
        enum TGPart::FeaturePropertyConstants ExtentType );
    enum TGPart::FeaturePropertyConstants GetProfileSide ( );
    HRESULT SetProfileSide (
        enum TGPart::FeaturePropertyConstants profileSide );
    HRESULT GetProfiles (
        long * NumProfiles,
        SAFEARRAY * * ppProfiles );
    HRESULT SetProfiles (
        long NumProfiles,
        SAFEARRAY * pProfiles );
    HRESULT SetFromPlane (
        IUnknown * FromPlane );
    IUnknownPtr GetFromPlane ( );
    HRESULT SetToPlane (
        IUnknown * ToPlane );
    IUnknownPtr GetToPlane ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t featureName );
    IDispatchPtr GetEdges (
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFaces (
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRay (
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    HRESULT Range (
        double * X1,
        double * Y1,
        double * Z1,
        double * X2,
        double * Y2,
        double * Z2 );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL Suppress );
    HRESULT Delete ( );
    HRESULT RollToFeature ( );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
    enum TGPart::FeatureTypeConstants GetFeatureType ( );
    AssemblyBodyPtr GetAssemblyBody ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_GetDepth (
        /*[out,retval]*/ double * nDepth ) = 0;
      virtual HRESULT __stdcall raw_SetDepth (
        /*[in]*/ double nDepth ) = 0;
      virtual HRESULT __stdcall raw_GetExtentSide (
        /*[out,retval]*/ enum TGPart::FeaturePropertyConstants * pExtentSide ) = 0;
      virtual HRESULT __stdcall raw_SetExtentSide (
        /*[in]*/ enum TGPart::FeaturePropertyConstants ExtentSide ) = 0;
      virtual HRESULT __stdcall raw_GetExtentType (
        /*[out,retval]*/ enum TGPart::FeaturePropertyConstants * pExtentType ) = 0;
      virtual HRESULT __stdcall raw_SetExtentType (
        /*[in]*/ enum TGPart::FeaturePropertyConstants ExtentType ) = 0;
      virtual HRESULT __stdcall raw_GetProfileSide (
        /*[out,retval]*/ enum TGPart::FeaturePropertyConstants * pProfileSide ) = 0;
      virtual HRESULT __stdcall raw_SetProfileSide (
        /*[in]*/ enum TGPart::FeaturePropertyConstants profileSide ) = 0;
      virtual HRESULT __stdcall raw_GetProfiles (
        /*[out]*/ long * NumProfiles,
        /*[out]*/ SAFEARRAY * * ppProfiles ) = 0;
      virtual HRESULT __stdcall raw_SetProfiles (
        /*[in]*/ long NumProfiles,
        SAFEARRAY * pProfiles ) = 0;
      virtual HRESULT __stdcall raw_SetFromPlane (
        /*[in]*/ IUnknown * FromPlane ) = 0;
      virtual HRESULT __stdcall raw_GetFromPlane (
        /*[out,retval]*/ IUnknown * * FromPlane ) = 0;
      virtual HRESULT __stdcall raw_SetToPlane (
        /*[in]*/ IUnknown * ToPlane ) = 0;
      virtual HRESULT __stdcall raw_GetToPlane (
        /*[out,retval]*/ IUnknown * * ToPlane ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * featureName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR featureName ) = 0;
      virtual HRESULT __stdcall get_Edges (
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType,
        /*[out,retval]*/ IDispatch * * ppFeatureEdges ) = 0;
      virtual HRESULT __stdcall get_Faces (
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall get_FacesByRay (
        /*[in]*/ double Xorigin,
        /*[in]*/ double Yorigin,
        /*[in]*/ double Zorigin,
        /*[in]*/ double Xdir,
        /*[in]*/ double Ydir,
        /*[in]*/ double Zdir,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall raw_Range (
        /*[out]*/ double * X1,
        /*[out]*/ double * Y1,
        /*[out]*/ double * Z1,
        /*[out]*/ double * X2,
        /*[out]*/ double * Y2,
        /*[out]*/ double * Z2 ) = 0;
      virtual HRESULT __stdcall get_Suppress (
        /*[out,retval]*/ VARIANT_BOOL * Suppress ) = 0;
      virtual HRESULT __stdcall put_Suppress (
        /*[in]*/ VARIANT_BOOL Suppress ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_RollToFeature ( ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out]*/ VARIANT * Description,
        /*[out,retval]*/ enum TGPart::FeatureStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall raw_GetSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_AddSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_DeleteSuppressionVariable ( ) = 0;
      virtual HRESULT __stdcall raw_HasSuppressionVariable (
        /*[out,retval]*/ VARIANT_BOOL * IsSuppressionVariablePresent ) = 0;
      virtual HRESULT __stdcall get_FeatureType (
        /*[out,retval]*/ enum TGPart::FeatureTypeConstants * Type ) = 0;
      virtual HRESULT __stdcall get_AssemblyBody (
        /*[out,retval]*/ struct AssemblyBody * * AssemblyBody ) = 0;
};

struct __declspec(uuid("cd32e37a-471c-475c-bd78-e628dac1a79a"))
AssemblyFeaturesRevolvedProtrusions : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyFeaturesRevolvedProtrusionPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    AssemblyFeaturesRevolvedProtrusionPtr Add (
        long nNumProfiles,
        SAFEARRAY * * pProfiles,
        IUnknown * pRefAxis,
        enum TGPart::FeaturePropertyConstants ExtentType,
        enum TGPart::FeaturePropertyConstants ExtentSide,
        enum TGPart::FeaturePropertyConstants profileSide,
        double * pdAngle,
        IUnknown * KeyPointOrTangentFace,
        enum TGPart::KeyPointExtentConstants * KeyPointFlags,
        IUnknown * pFromSurface,
        IUnknown * pToSurface );
};

struct __declspec(uuid("376ccef1-6450-4017-bd54-7bb624fcd2c8"))
AssemblyFeaturesRevolvedProtrusion : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetFeatureType))
    enum TGPart::FeatureTypeConstants FeatureType;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetEdges))
    IDispatchPtr Edges[];
    __declspec(property(get=GetFaces))
    IDispatchPtr Faces[];
    __declspec(property(get=GetFacesByRay))
    IDispatchPtr FacesByRay[][][][][][];
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetAssemblyBody))
    AssemblyBodyPtr AssemblyBody;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    double GetAngle ( );
    HRESULT SetAngle (
        double nAngle );
    IUnknownPtr GetReferenceAxis ( );
    HRESULT SetReferenceAxis (
        IUnknown * ReferenceAxis );
    enum TGPart::FeaturePropertyConstants GetExtentSide ( );
    HRESULT SetExtentSide (
        enum TGPart::FeaturePropertyConstants ExtentSide );
    enum TGPart::FeaturePropertyConstants GetExtentType ( );
    HRESULT SetExtentType (
        enum TGPart::FeaturePropertyConstants ExtentType );
    enum TGPart::FeaturePropertyConstants GetProfileSide ( );
    HRESULT SetProfileSide (
        enum TGPart::FeaturePropertyConstants profileSide );
    HRESULT GetProfiles (
        long * NumProfiles,
        SAFEARRAY * * ppProfiles );
    HRESULT SetProfiles (
        long NumProfiles,
        SAFEARRAY * pProfiles );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t _arg1 );
    IDispatchPtr GetEdges (
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFaces (
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRay (
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    HRESULT Range (
        double * X1,
        double * Y1,
        double * Z1,
        double * X2,
        double * Y2,
        double * Z2 );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL _arg1 );
    HRESULT Delete ( );
    HRESULT RollToFeature ( );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description = &vtMissing );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
    enum TGPart::FeatureTypeConstants GetFeatureType ( );
    AssemblyBodyPtr GetAssemblyBody ( );
};

struct __declspec(uuid("ba3d6a5e-cc2e-4fd0-8c53-4523856accf5"))
_IAssemblyFeaturesRevolvedProtrusionsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyFeaturesRevolvedProtrusionPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    AssemblyFeaturesRevolvedProtrusionPtr Add (
        long nNumProfiles,
        SAFEARRAY * * pProfiles,
        IUnknown * pRefAxis,
        enum TGPart::FeaturePropertyConstants ExtentType,
        enum TGPart::FeaturePropertyConstants ExtentSide,
        enum TGPart::FeaturePropertyConstants profileSide,
        double * pdAngle,
        IUnknown * KeyPointOrTangentFace,
        enum TGPart::KeyPointExtentConstants * KeyPointFlags,
        IUnknown * pFromSurface,
        IUnknown * pToSurface );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct AssemblyFeaturesRevolvedProtrusion * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ long nNumProfiles,
        /*[in]*/ SAFEARRAY * * pProfiles,
        /*[in]*/ IUnknown * pRefAxis,
        /*[in]*/ enum TGPart::FeaturePropertyConstants ExtentType,
        /*[in]*/ enum TGPart::FeaturePropertyConstants ExtentSide,
        /*[in]*/ enum TGPart::FeaturePropertyConstants profileSide,
        /*[in]*/ double * pdAngle,
        /*[in]*/ IUnknown * KeyPointOrTangentFace,
        /*[in]*/ enum TGPart::KeyPointExtentConstants * KeyPointFlags,
        /*[in]*/ IUnknown * pFromSurface,
        /*[in]*/ IUnknown * pToSurface,
        /*[out,retval]*/ struct AssemblyFeaturesRevolvedProtrusion * * pOutAssemblyFeature ) = 0;
};

struct __declspec(uuid("473db53b-e5f1-48b8-8109-1195d83c0e4e"))
_IAssemblyFeaturesRevolvedProtrusionAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetFeatureType))
    enum TGPart::FeatureTypeConstants FeatureType;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetEdges))
    IDispatchPtr Edges[];
    __declspec(property(get=GetFaces))
    IDispatchPtr Faces[];
    __declspec(property(get=GetFacesByRay))
    IDispatchPtr FacesByRay[][][][][][];
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetAssemblyBody))
    AssemblyBodyPtr AssemblyBody;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    double GetAngle ( );
    HRESULT SetAngle (
        double nAngle );
    IUnknownPtr GetReferenceAxis ( );
    HRESULT SetReferenceAxis (
        IUnknown * ReferenceAxis );
    enum TGPart::FeaturePropertyConstants GetExtentSide ( );
    HRESULT SetExtentSide (
        enum TGPart::FeaturePropertyConstants ExtentSide );
    enum TGPart::FeaturePropertyConstants GetExtentType ( );
    HRESULT SetExtentType (
        enum TGPart::FeaturePropertyConstants ExtentType );
    enum TGPart::FeaturePropertyConstants GetProfileSide ( );
    HRESULT SetProfileSide (
        enum TGPart::FeaturePropertyConstants profileSide );
    HRESULT GetProfiles (
        long * NumProfiles,
        SAFEARRAY * * ppProfiles );
    HRESULT SetProfiles (
        long NumProfiles,
        SAFEARRAY * pProfiles );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t featureName );
    IDispatchPtr GetEdges (
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFaces (
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRay (
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    HRESULT Range (
        double * X1,
        double * Y1,
        double * Z1,
        double * X2,
        double * Y2,
        double * Z2 );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL Suppress );
    HRESULT Delete ( );
    HRESULT RollToFeature ( );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
    enum TGPart::FeatureTypeConstants GetFeatureType ( );
    AssemblyBodyPtr GetAssemblyBody ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_GetAngle (
        /*[out,retval]*/ double * nAngle ) = 0;
      virtual HRESULT __stdcall raw_SetAngle (
        /*[in]*/ double nAngle ) = 0;
      virtual HRESULT __stdcall raw_GetReferenceAxis (
        /*[out,retval]*/ IUnknown * * pReferenceAxis ) = 0;
      virtual HRESULT __stdcall raw_SetReferenceAxis (
        /*[in]*/ IUnknown * ReferenceAxis ) = 0;
      virtual HRESULT __stdcall raw_GetExtentSide (
        /*[out,retval]*/ enum TGPart::FeaturePropertyConstants * pExtentSide ) = 0;
      virtual HRESULT __stdcall raw_SetExtentSide (
        /*[in]*/ enum TGPart::FeaturePropertyConstants ExtentSide ) = 0;
      virtual HRESULT __stdcall raw_GetExtentType (
        /*[out,retval]*/ enum TGPart::FeaturePropertyConstants * pExtentType ) = 0;
      virtual HRESULT __stdcall raw_SetExtentType (
        /*[in]*/ enum TGPart::FeaturePropertyConstants ExtentType ) = 0;
      virtual HRESULT __stdcall raw_GetProfileSide (
        /*[out,retval]*/ enum TGPart::FeaturePropertyConstants * pProfileSide ) = 0;
      virtual HRESULT __stdcall raw_SetProfileSide (
        /*[in]*/ enum TGPart::FeaturePropertyConstants profileSide ) = 0;
      virtual HRESULT __stdcall raw_GetProfiles (
        /*[out]*/ long * NumProfiles,
        /*[out]*/ SAFEARRAY * * ppProfiles ) = 0;
      virtual HRESULT __stdcall raw_SetProfiles (
        /*[in]*/ long NumProfiles,
        SAFEARRAY * pProfiles ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * featureName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR featureName ) = 0;
      virtual HRESULT __stdcall get_Edges (
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType,
        /*[out,retval]*/ IDispatch * * ppFeatureEdges ) = 0;
      virtual HRESULT __stdcall get_Faces (
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall get_FacesByRay (
        /*[in]*/ double Xorigin,
        /*[in]*/ double Yorigin,
        /*[in]*/ double Zorigin,
        /*[in]*/ double Xdir,
        /*[in]*/ double Ydir,
        /*[in]*/ double Zdir,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall raw_Range (
        /*[out]*/ double * X1,
        /*[out]*/ double * Y1,
        /*[out]*/ double * Z1,
        /*[out]*/ double * X2,
        /*[out]*/ double * Y2,
        /*[out]*/ double * Z2 ) = 0;
      virtual HRESULT __stdcall get_Suppress (
        /*[out,retval]*/ VARIANT_BOOL * Suppress ) = 0;
      virtual HRESULT __stdcall put_Suppress (
        /*[in]*/ VARIANT_BOOL Suppress ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_RollToFeature ( ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out]*/ VARIANT * Description,
        /*[out,retval]*/ enum TGPart::FeatureStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall raw_GetSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_AddSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_DeleteSuppressionVariable ( ) = 0;
      virtual HRESULT __stdcall raw_HasSuppressionVariable (
        /*[out,retval]*/ VARIANT_BOOL * IsSuppressionVariablePresent ) = 0;
      virtual HRESULT __stdcall get_FeatureType (
        /*[out,retval]*/ enum TGPart::FeatureTypeConstants * Type ) = 0;
      virtual HRESULT __stdcall get_AssemblyBody (
        /*[out,retval]*/ struct AssemblyBody * * AssemblyBody ) = 0;
};

struct __declspec(uuid("d1fcaacf-a7eb-4aae-a1a9-a62b3e15061e"))
AssemblyLabelWelds : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyLabelWeldPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    AssemblyLabelWeldPtr Add (
        long NumberOfEdges,
        SAFEARRAY * * Edges,
        IDispatch * pLabelWeldDataObject );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
};

struct __declspec(uuid("3e931595-bf76-4941-8b17-0ab243fc0412"))
_IAssemblyFeaturesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetAssemblyFeaturesExtrudedCutouts))
    AssemblyFeaturesExtrudedCutoutsPtr AssemblyFeaturesExtrudedCutouts;
    __declspec(property(get=GetAssemblyFeaturesRevolvedCutouts))
    AssemblyFeaturesRevolvedCutoutsPtr AssemblyFeaturesRevolvedCutouts;
    __declspec(property(get=GetAssemblyFeaturesHoles))
    AssemblyFeaturesHolesPtr AssemblyFeaturesHoles;
    __declspec(property(get=GetAssemblyFeaturesPatterns))
    AssemblyFeaturesPatternsPtr AssemblyFeaturesPatterns;
    __declspec(property(get=GetAssemblyFeaturesMirrors))
    AssemblyFeaturesMirrorsPtr AssemblyFeaturesMirrors;
    __declspec(property(get=GetFilletWelds))
    AssemblyFilletWeldsPtr FilletWelds;
    __declspec(property(get=GetAssemblyFeaturesSweptProtrusions))
    AssemblyFeaturesSweptProtrusionsPtr AssemblyFeaturesSweptProtrusions;
    __declspec(property(get=GetStitchWelds))
    AssemblyStitchWeldsPtr StitchWelds;
    __declspec(property(get=GetGrooveWelds))
    AFGrooveWeldsPtr GrooveWelds;
    __declspec(property(get=GetThreads))
    AssemblyThreadsPtr Threads;
    __declspec(property(get=GetExtrudedProtrusions))
    AssemblyFeaturesExtrudedProtrusionsPtr ExtrudedProtrusions;
    __declspec(property(get=GetRevolvedProtrusions))
    AssemblyFeaturesRevolvedProtrusionsPtr RevolvedProtrusions;
    __declspec(property(get=GetLabelWelds))
    AssemblyLabelWeldsPtr LabelWelds;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyFeaturesExtrudedCutoutsPtr GetAssemblyFeaturesExtrudedCutouts ( );
    AssemblyFeaturesRevolvedCutoutsPtr GetAssemblyFeaturesRevolvedCutouts ( );
    AssemblyFeaturesHolesPtr GetAssemblyFeaturesHoles ( );
    AssemblyFeaturesMirrorsPtr GetAssemblyFeaturesMirrors ( );
    AssemblyFeaturesPatternsPtr GetAssemblyFeaturesPatterns ( );
    AssemblyFilletWeldsPtr GetFilletWelds ( );
    AFGrooveWeldsPtr GetGrooveWelds ( );
    AssemblyFeaturesSweptProtrusionsPtr GetAssemblyFeaturesSweptProtrusions ( );
    AssemblyStitchWeldsPtr GetStitchWelds ( );
    AssemblyThreadsPtr GetThreads ( );
    AssemblyFeaturesExtrudedProtrusionsPtr GetExtrudedProtrusions ( );
    AssemblyFeaturesRevolvedProtrusionsPtr GetRevolvedProtrusions ( );
    HRESULT Recompute (
        long options );
    AssemblyLabelWeldsPtr GetLabelWelds ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_AssemblyFeaturesExtrudedCutouts (
        /*[out,retval]*/ struct AssemblyFeaturesExtrudedCutouts * * AssemblyFeaturesExtrudedCutouts ) = 0;
      virtual HRESULT __stdcall get_AssemblyFeaturesRevolvedCutouts (
        /*[out,retval]*/ struct AssemblyFeaturesRevolvedCutouts * * AssemblyFeaturesRevolvedCutouts ) = 0;
      virtual HRESULT __stdcall get_AssemblyFeaturesHoles (
        /*[out,retval]*/ struct AssemblyFeaturesHoles * * AssemblyFeaturesHoles ) = 0;
      virtual HRESULT __stdcall get_AssemblyFeaturesMirrors (
        /*[out,retval]*/ struct AssemblyFeaturesMirrors * * AssemblyFeaturesMirrors ) = 0;
      virtual HRESULT __stdcall get_AssemblyFeaturesPatterns (
        /*[out,retval]*/ struct AssemblyFeaturesPatterns * * AssemblyFeaturesPatterns ) = 0;
      virtual HRESULT __stdcall get_FilletWelds (
        /*[out,retval]*/ struct AssemblyFilletWelds * * ppFilletWelds ) = 0;
      virtual HRESULT __stdcall get_GrooveWelds (
        /*[out,retval]*/ struct AFGrooveWelds * * ppGrooveWelds ) = 0;
      virtual HRESULT __stdcall get_AssemblyFeaturesSweptProtrusions (
        /*[out,retval]*/ struct AssemblyFeaturesSweptProtrusions * * AssemblyFeaturesSweptProtrusions ) = 0;
      virtual HRESULT __stdcall get_StitchWelds (
        /*[out,retval]*/ struct AssemblyStitchWelds * * ppStitchWelds ) = 0;
      virtual HRESULT __stdcall get_Threads (
        /*[out,retval]*/ struct AssemblyThreads * * ppThreads ) = 0;
      virtual HRESULT __stdcall get_ExtrudedProtrusions (
        /*[out,retval]*/ struct AssemblyFeaturesExtrudedProtrusions * * ppExtrudedProtrusions ) = 0;
      virtual HRESULT __stdcall get_RevolvedProtrusions (
        /*[out,retval]*/ struct AssemblyFeaturesRevolvedProtrusions * * ppRevolvedProtrusions ) = 0;
      virtual HRESULT __stdcall raw_Recompute (
        /*[in]*/ long options ) = 0;
      virtual HRESULT __stdcall get_LabelWelds (
        /*[out,retval]*/ struct AssemblyLabelWelds * * ppLabelWelds ) = 0;
};

struct __declspec(uuid("3c35f6ca-774c-4fef-84a0-37d1fc24fc02"))
AssemblyLabelWeld : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetFeatureType))
    enum TGPart::FeatureTypeConstants FeatureType;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    void PutName (
        _bstr_t _arg1 );
    _bstr_t GetName ( );
    void PutVisible (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetVisible ( );
    HRESULT Recompute ( );
    HRESULT Delete ( );
    HRESULT GoTo ( );
    void PutSuppress (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetSuppress ( );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description = &vtMissing );
    HRESULT GetLabelWeldData (
        IDispatch * * Object );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    enum TGPart::FeatureTypeConstants GetFeatureType ( );
};

struct __declspec(uuid("d96383e9-b340-4207-9946-de2ab8989137"))
_IAssemblyLabelWeldsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyLabelWeldPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    AssemblyLabelWeldPtr Add (
        long NumberOfEdges,
        SAFEARRAY * * Edges,
        IDispatch * pLabelWeldDataObject );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct AssemblyLabelWeld * * Item ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ long NumberOfEdges,
        /*[in]*/ SAFEARRAY * * Edges,
        /*[in]*/ IDispatch * pLabelWeldDataObject,
        /*[out,retval]*/ struct AssemblyLabelWeld * * ppLabelWeld ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
};

struct __declspec(uuid("444f6490-7d11-4c94-81e5-cba26ef905d2"))
_IAssemblyLabelWeldAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetFeatureType))
    enum TGPart::FeatureTypeConstants FeatureType;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    void PutName (
        _bstr_t Name );
    _bstr_t GetName ( );
    void PutVisible (
        VARIANT_BOOL bVisible );
    VARIANT_BOOL GetVisible ( );
    HRESULT Recompute ( );
    HRESULT Delete ( );
    HRESULT GoTo ( );
    void PutSuppress (
        VARIANT_BOOL pvbSuppress );
    VARIANT_BOOL GetSuppress ( );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description );
    HRESULT GetLabelWeldData (
        IDispatch * * Object );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    enum TGPart::FeatureTypeConstants GetFeatureType ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL bVisible ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * bVisible ) = 0;
      virtual HRESULT __stdcall raw_Recompute ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_GoTo ( ) = 0;
      virtual HRESULT __stdcall put_Suppress (
        /*[in]*/ VARIANT_BOOL pvbSuppress ) = 0;
      virtual HRESULT __stdcall get_Suppress (
        /*[out,retval]*/ VARIANT_BOOL * pvbSuppress ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out]*/ VARIANT * Description,
        /*[out,retval]*/ enum TGPart::FeatureStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall raw_GetLabelWeldData (
        /*[out]*/ IDispatch * * Object ) = 0;
      virtual HRESULT __stdcall raw_GetSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_AddSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_DeleteSuppressionVariable ( ) = 0;
      virtual HRESULT __stdcall raw_HasSuppressionVariable (
        /*[out,retval]*/ VARIANT_BOOL * IsSuppressionVariablePresent ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall get_FeatureType (
        /*[out,retval]*/ enum TGPart::FeatureTypeConstants * Type ) = 0;
};

struct __declspec(uuid("3e218f3d-71da-4d8a-9aa7-71ec9d86571e"))
AssemblyDrivenPartFeatures : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetAssemblyDrivenPartFeaturesExtrudedCutouts))
    AssemblyDrivenPartFeaturesExtrudedCutoutsPtr AssemblyDrivenPartFeaturesExtrudedCutouts;
    __declspec(property(get=GetAssemblyDrivenPartFeaturesRevolvedCutouts))
    AssemblyDrivenPartFeaturesRevolvedCutoutsPtr AssemblyDrivenPartFeaturesRevolvedCutouts;
    __declspec(property(get=GetAssemblyDrivenPartFeaturesHoles))
    AssemblyDrivenPartFeaturesHolesPtr AssemblyDrivenPartFeaturesHoles;
    __declspec(property(get=GetAssemblyDrivenPartFeaturesTrimTubes))
    AssemblyDrivenPartFeaturesTrimTubesPtr AssemblyDrivenPartFeaturesTrimTubes;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyDrivenPartFeaturesExtrudedCutoutsPtr GetAssemblyDrivenPartFeaturesExtrudedCutouts ( );
    AssemblyDrivenPartFeaturesRevolvedCutoutsPtr GetAssemblyDrivenPartFeaturesRevolvedCutouts ( );
    AssemblyDrivenPartFeaturesHolesPtr GetAssemblyDrivenPartFeaturesHoles ( );
    AssemblyDrivenPartFeaturesTrimTubesPtr GetAssemblyDrivenPartFeaturesTrimTubes ( );
};

struct __declspec(uuid("acab90cd-5bd7-4b44-ae91-8c465ba65229"))
AssemblyDrivenPartFeaturesExtrudedCutouts : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyDrivenPartFeaturesExtrudedCutoutPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    AssemblyDrivenPartFeaturesExtrudedCutoutPtr Add (
        long nNumScopeParts,
        SAFEARRAY * * pScopeParts,
        long nNumProfiles,
        SAFEARRAY * * pProfiles,
        enum TGPart::FeaturePropertyConstants ExtentType,
        enum TGPart::FeaturePropertyConstants * pExtentSide,
        enum TGPart::FeaturePropertyConstants profileSide,
        double * pdDistance,
        IUnknown * pKeyPoint,
        enum TGPart::KeyPointExtentConstants * pKeyPointFlags,
        IUnknown * pFromSurfOrPlane,
        IUnknown * pToSurfOrPlane );
};

struct __declspec(uuid("acab90cd-5bd7-4b44-ae91-8c465ba65249"))
AssemblyDrivenPartFeaturesExtrudedCutout : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetEdges))
    IDispatchPtr Edges[];
    __declspec(property(get=GetFaces))
    IDispatchPtr Faces[];
    __declspec(property(get=GetFacesByRay))
    IDispatchPtr FacesByRay[][][][][][];
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    double GetDepth ( );
    HRESULT SetDepth (
        double nDepth );
    enum TGPart::FeaturePropertyConstants GetExtentSide ( );
    HRESULT SetExtentSide (
        enum TGPart::FeaturePropertyConstants ExtentSide );
    enum TGPart::FeaturePropertyConstants GetExtentType ( );
    HRESULT SetExtentType (
        enum TGPart::FeaturePropertyConstants ExtentType );
    enum TGPart::FeaturePropertyConstants GetProfileSide ( );
    HRESULT SetProfileSide (
        enum TGPart::FeaturePropertyConstants profileSide );
    HRESULT GetProfiles (
        long * NumProfiles,
        SAFEARRAY * * ppProfiles );
    HRESULT SetProfiles (
        long NumProfiles,
        SAFEARRAY * pProfiles );
    HRESULT SetFromPlane (
        IUnknown * FromPlane );
    IUnknownPtr GetFromPlane ( );
    HRESULT SetToPlane (
        IUnknown * ToPlane );
    IUnknownPtr GetToPlane ( );
    HRESULT SetScopeParts (
        long NumScopeParts,
        SAFEARRAY * pScopeParts );
    HRESULT GetScopeParts (
        long * NumScopeParts,
        SAFEARRAY * * pScopeParts );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t _arg1 );
    IDispatchPtr GetEdges (
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFaces (
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRay (
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    HRESULT Range (
        double * X1,
        double * Y1,
        double * Z1,
        double * X2,
        double * Y2,
        double * Z2 );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL _arg1 );
    HRESULT Delete ( );
    HRESULT RollToFeature ( );
    HRESULT GetPartFeatures (
        long * NumFeatures,
        SAFEARRAY * * ppFeatures );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description = &vtMissing );
};

struct __declspec(uuid("231c2134-d7b1-4903-b524-4c017c9b7f14"))
_IAssemblyDrivenPartFeaturesExtrudedCutoutsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyDrivenPartFeaturesExtrudedCutoutPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    AssemblyDrivenPartFeaturesExtrudedCutoutPtr Add (
        long nNumScopeParts,
        SAFEARRAY * * pScopeParts,
        long nNumProfiles,
        SAFEARRAY * * pProfiles,
        enum TGPart::FeaturePropertyConstants ExtentType,
        enum TGPart::FeaturePropertyConstants * pExtentSide,
        enum TGPart::FeaturePropertyConstants profileSide,
        double * pdDistance,
        IUnknown * pKeyPoint,
        enum TGPart::KeyPointExtentConstants * pKeyPointFlags,
        IUnknown * pFromSurfOrPlane,
        IUnknown * pToSurfOrPlane );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct AssemblyDrivenPartFeaturesExtrudedCutout * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ long nNumScopeParts,
        /*[in]*/ SAFEARRAY * * pScopeParts,
        /*[in]*/ long nNumProfiles,
        /*[in]*/ SAFEARRAY * * pProfiles,
        /*[in]*/ enum TGPart::FeaturePropertyConstants ExtentType,
        /*[in]*/ enum TGPart::FeaturePropertyConstants * pExtentSide,
        /*[in]*/ enum TGPart::FeaturePropertyConstants profileSide,
        /*[in]*/ double * pdDistance,
        /*[in]*/ IUnknown * pKeyPoint,
        /*[in]*/ enum TGPart::KeyPointExtentConstants * pKeyPointFlags,
        /*[in]*/ IUnknown * pFromSurfOrPlane,
        /*[in]*/ IUnknown * pToSurfOrPlane,
        /*[out,retval]*/ struct AssemblyDrivenPartFeaturesExtrudedCutout * * pOutAssemblyDrivenPartFeature ) = 0;
};

struct __declspec(uuid("231c2134-d7b1-4903-b524-4c017c9b7f34"))
_IAssemblyDrivenPartFeaturesExtrudedCutoutAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetEdges))
    IDispatchPtr Edges[];
    __declspec(property(get=GetFaces))
    IDispatchPtr Faces[];
    __declspec(property(get=GetFacesByRay))
    IDispatchPtr FacesByRay[][][][][][];
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    double GetDepth ( );
    HRESULT SetDepth (
        double nDepth );
    enum TGPart::FeaturePropertyConstants GetExtentSide ( );
    HRESULT SetExtentSide (
        enum TGPart::FeaturePropertyConstants ExtentSide );
    enum TGPart::FeaturePropertyConstants GetExtentType ( );
    HRESULT SetExtentType (
        enum TGPart::FeaturePropertyConstants ExtentType );
    enum TGPart::FeaturePropertyConstants GetProfileSide ( );
    HRESULT SetProfileSide (
        enum TGPart::FeaturePropertyConstants profileSide );
    HRESULT GetProfiles (
        long * NumProfiles,
        SAFEARRAY * * ppProfiles );
    HRESULT SetProfiles (
        long NumProfiles,
        SAFEARRAY * pProfiles );
    HRESULT SetFromPlane (
        IUnknown * FromPlane );
    IUnknownPtr GetFromPlane ( );
    HRESULT SetToPlane (
        IUnknown * ToPlane );
    IUnknownPtr GetToPlane ( );
    HRESULT SetScopeParts (
        long NumScopeParts,
        SAFEARRAY * pScopeParts );
    HRESULT GetScopeParts (
        long * NumScopeParts,
        SAFEARRAY * * pScopeParts );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t featureName );
    IDispatchPtr GetEdges (
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFaces (
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRay (
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    HRESULT Range (
        double * X1,
        double * Y1,
        double * Z1,
        double * X2,
        double * Y2,
        double * Z2 );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL Suppress );
    HRESULT Delete ( );
    HRESULT RollToFeature ( );
    HRESULT GetPartFeatures (
        long * NumFeatures,
        SAFEARRAY * * ppFeatures );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_GetDepth (
        /*[out,retval]*/ double * nDepth ) = 0;
      virtual HRESULT __stdcall raw_SetDepth (
        /*[in]*/ double nDepth ) = 0;
      virtual HRESULT __stdcall raw_GetExtentSide (
        /*[out,retval]*/ enum TGPart::FeaturePropertyConstants * pExtentSide ) = 0;
      virtual HRESULT __stdcall raw_SetExtentSide (
        /*[in]*/ enum TGPart::FeaturePropertyConstants ExtentSide ) = 0;
      virtual HRESULT __stdcall raw_GetExtentType (
        /*[out,retval]*/ enum TGPart::FeaturePropertyConstants * pExtentType ) = 0;
      virtual HRESULT __stdcall raw_SetExtentType (
        /*[in]*/ enum TGPart::FeaturePropertyConstants ExtentType ) = 0;
      virtual HRESULT __stdcall raw_GetProfileSide (
        /*[out,retval]*/ enum TGPart::FeaturePropertyConstants * pProfileSide ) = 0;
      virtual HRESULT __stdcall raw_SetProfileSide (
        /*[in]*/ enum TGPart::FeaturePropertyConstants profileSide ) = 0;
      virtual HRESULT __stdcall raw_GetProfiles (
        /*[out]*/ long * NumProfiles,
        /*[out]*/ SAFEARRAY * * ppProfiles ) = 0;
      virtual HRESULT __stdcall raw_SetProfiles (
        /*[in]*/ long NumProfiles,
        SAFEARRAY * pProfiles ) = 0;
      virtual HRESULT __stdcall raw_SetFromPlane (
        /*[in]*/ IUnknown * FromPlane ) = 0;
      virtual HRESULT __stdcall raw_GetFromPlane (
        /*[out,retval]*/ IUnknown * * FromPlane ) = 0;
      virtual HRESULT __stdcall raw_SetToPlane (
        /*[in]*/ IUnknown * ToPlane ) = 0;
      virtual HRESULT __stdcall raw_GetToPlane (
        /*[out,retval]*/ IUnknown * * ToPlane ) = 0;
      virtual HRESULT __stdcall raw_SetScopeParts (
        /*[in]*/ long NumScopeParts,
        /*[in]*/ SAFEARRAY * pScopeParts ) = 0;
      virtual HRESULT __stdcall raw_GetScopeParts (
        /*[out]*/ long * NumScopeParts,
        /*[out]*/ SAFEARRAY * * pScopeParts ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * featureName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR featureName ) = 0;
      virtual HRESULT __stdcall get_Edges (
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType,
        /*[out,retval]*/ IDispatch * * ppFeatureEdges ) = 0;
      virtual HRESULT __stdcall get_Faces (
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall get_FacesByRay (
        /*[in]*/ double Xorigin,
        /*[in]*/ double Yorigin,
        /*[in]*/ double Zorigin,
        /*[in]*/ double Xdir,
        /*[in]*/ double Ydir,
        /*[in]*/ double Zdir,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall raw_Range (
        /*[out]*/ double * X1,
        /*[out]*/ double * Y1,
        /*[out]*/ double * Z1,
        /*[out]*/ double * X2,
        /*[out]*/ double * Y2,
        /*[out]*/ double * Z2 ) = 0;
      virtual HRESULT __stdcall get_Suppress (
        /*[out,retval]*/ VARIANT_BOOL * Suppress ) = 0;
      virtual HRESULT __stdcall put_Suppress (
        /*[in]*/ VARIANT_BOOL Suppress ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_RollToFeature ( ) = 0;
      virtual HRESULT __stdcall raw_GetPartFeatures (
        /*[out]*/ long * NumFeatures,
        /*[out]*/ SAFEARRAY * * ppFeatures ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out]*/ VARIANT * Description,
        /*[out,retval]*/ enum TGPart::FeatureStatusConstants * Status ) = 0;
};

struct __declspec(uuid("acab90cd-5bd7-4b44-ae91-8c465ba65228"))
AssemblyDrivenPartFeaturesRevolvedCutouts : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyDrivenPartFeaturesRevolvedCutoutPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    AssemblyDrivenPartFeaturesRevolvedCutoutPtr Add (
        long nNumScopeParts,
        SAFEARRAY * * pScopeParts,
        long nNumProfiles,
        SAFEARRAY * * pProfiles,
        IUnknown * pRefAxis,
        enum TGPart::FeaturePropertyConstants ExtentType,
        enum TGPart::FeaturePropertyConstants ExtentSide,
        enum TGPart::FeaturePropertyConstants profileSide,
        double * pdAngle,
        IUnknown * KeyPointOrTangentFace,
        enum TGPart::KeyPointExtentConstants * KeyPointFlags,
        IUnknown * pFromSurface,
        IUnknown * pToSurface );
};

struct __declspec(uuid("acab90cd-5bd7-4b44-ae91-8c465ba65268"))
AssemblyDrivenPartFeaturesRevolvedCutout : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetEdges))
    IDispatchPtr Edges[];
    __declspec(property(get=GetFaces))
    IDispatchPtr Faces[];
    __declspec(property(get=GetFacesByRay))
    IDispatchPtr FacesByRay[][][][][][];
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    double GetAngle ( );
    HRESULT SetAngle (
        double nAngle );
    IUnknownPtr GetReferenceAxis ( );
    HRESULT SetReferenceAxis (
        IUnknown * ReferenceAxis );
    enum TGPart::FeaturePropertyConstants GetExtentSide ( );
    HRESULT SetExtentSide (
        enum TGPart::FeaturePropertyConstants ExtentSide );
    enum TGPart::FeaturePropertyConstants GetExtentType ( );
    HRESULT SetExtentType (
        enum TGPart::FeaturePropertyConstants ExtentType );
    enum TGPart::FeaturePropertyConstants GetProfileSide ( );
    HRESULT SetProfileSide (
        enum TGPart::FeaturePropertyConstants profileSide );
    HRESULT GetProfiles (
        long * NumProfiles,
        SAFEARRAY * * ppProfiles );
    HRESULT SetProfiles (
        long NumProfiles,
        SAFEARRAY * pProfiles );
    HRESULT SetScopeParts (
        long NumScopeParts,
        SAFEARRAY * pScopeParts );
    HRESULT GetScopeParts (
        long * NumScopeParts,
        SAFEARRAY * * pScopeParts );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t _arg1 );
    IDispatchPtr GetEdges (
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFaces (
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRay (
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    HRESULT Range (
        double * X1,
        double * Y1,
        double * Z1,
        double * X2,
        double * Y2,
        double * Z2 );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL _arg1 );
    HRESULT Delete ( );
    HRESULT RollToFeature ( );
    HRESULT GetPartFeatures (
        long * NumFeatures,
        SAFEARRAY * * ppFeatures );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description = &vtMissing );
};

struct __declspec(uuid("231c2134-d7b1-4903-b524-4c017c9b7f15"))
_IAssemblyDrivenPartFeaturesRevolvedCutoutsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyDrivenPartFeaturesRevolvedCutoutPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    AssemblyDrivenPartFeaturesRevolvedCutoutPtr Add (
        long nNumScopeParts,
        SAFEARRAY * * pScopeParts,
        long nNumProfiles,
        SAFEARRAY * * pProfiles,
        IUnknown * pRefAxis,
        enum TGPart::FeaturePropertyConstants ExtentType,
        enum TGPart::FeaturePropertyConstants ExtentSide,
        enum TGPart::FeaturePropertyConstants profileSide,
        double * pdAngle,
        IUnknown * KeyPointOrTangentFace,
        enum TGPart::KeyPointExtentConstants * KeyPointFlags,
        IUnknown * pFromSurface,
        IUnknown * pToSurface );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct AssemblyDrivenPartFeaturesRevolvedCutout * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ long nNumScopeParts,
        /*[in]*/ SAFEARRAY * * pScopeParts,
        /*[in]*/ long nNumProfiles,
        /*[in]*/ SAFEARRAY * * pProfiles,
        /*[in]*/ IUnknown * pRefAxis,
        /*[in]*/ enum TGPart::FeaturePropertyConstants ExtentType,
        /*[in]*/ enum TGPart::FeaturePropertyConstants ExtentSide,
        /*[in]*/ enum TGPart::FeaturePropertyConstants profileSide,
        /*[in]*/ double * pdAngle,
        /*[in]*/ IUnknown * KeyPointOrTangentFace,
        /*[in]*/ enum TGPart::KeyPointExtentConstants * KeyPointFlags,
        /*[in]*/ IUnknown * pFromSurface,
        /*[in]*/ IUnknown * pToSurface,
        /*[out,retval]*/ struct AssemblyDrivenPartFeaturesRevolvedCutout * * pOutAssemblyDrivenPartFeature ) = 0;
};

struct __declspec(uuid("231c2134-d7b1-4903-b524-4c017c9b7f35"))
_IAssemblyDrivenPartFeaturesRevolvedCutoutAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetEdges))
    IDispatchPtr Edges[];
    __declspec(property(get=GetFaces))
    IDispatchPtr Faces[];
    __declspec(property(get=GetFacesByRay))
    IDispatchPtr FacesByRay[][][][][][];
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    double GetAngle ( );
    HRESULT SetAngle (
        double nAngle );
    IUnknownPtr GetReferenceAxis ( );
    HRESULT SetReferenceAxis (
        IUnknown * ReferenceAxis );
    enum TGPart::FeaturePropertyConstants GetExtentSide ( );
    HRESULT SetExtentSide (
        enum TGPart::FeaturePropertyConstants ExtentSide );
    enum TGPart::FeaturePropertyConstants GetExtentType ( );
    HRESULT SetExtentType (
        enum TGPart::FeaturePropertyConstants ExtentType );
    enum TGPart::FeaturePropertyConstants GetProfileSide ( );
    HRESULT SetProfileSide (
        enum TGPart::FeaturePropertyConstants profileSide );
    HRESULT GetProfiles (
        long * NumProfiles,
        SAFEARRAY * * ppProfiles );
    HRESULT SetProfiles (
        long NumProfiles,
        SAFEARRAY * pProfiles );
    HRESULT SetScopeParts (
        long NumScopeParts,
        SAFEARRAY * pScopeParts );
    HRESULT GetScopeParts (
        long * NumScopeParts,
        SAFEARRAY * * pScopeParts );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t featureName );
    IDispatchPtr GetEdges (
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFaces (
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRay (
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    HRESULT Range (
        double * X1,
        double * Y1,
        double * Z1,
        double * X2,
        double * Y2,
        double * Z2 );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL Suppress );
    HRESULT Delete ( );
    HRESULT RollToFeature ( );
    HRESULT GetPartFeatures (
        long * NumFeatures,
        SAFEARRAY * * ppFeatures );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_GetAngle (
        /*[out,retval]*/ double * nAngle ) = 0;
      virtual HRESULT __stdcall raw_SetAngle (
        /*[in]*/ double nAngle ) = 0;
      virtual HRESULT __stdcall raw_GetReferenceAxis (
        /*[out,retval]*/ IUnknown * * pReferenceAxis ) = 0;
      virtual HRESULT __stdcall raw_SetReferenceAxis (
        /*[in]*/ IUnknown * ReferenceAxis ) = 0;
      virtual HRESULT __stdcall raw_GetExtentSide (
        /*[out,retval]*/ enum TGPart::FeaturePropertyConstants * pExtentSide ) = 0;
      virtual HRESULT __stdcall raw_SetExtentSide (
        /*[in]*/ enum TGPart::FeaturePropertyConstants ExtentSide ) = 0;
      virtual HRESULT __stdcall raw_GetExtentType (
        /*[out,retval]*/ enum TGPart::FeaturePropertyConstants * pExtentType ) = 0;
      virtual HRESULT __stdcall raw_SetExtentType (
        /*[in]*/ enum TGPart::FeaturePropertyConstants ExtentType ) = 0;
      virtual HRESULT __stdcall raw_GetProfileSide (
        /*[out,retval]*/ enum TGPart::FeaturePropertyConstants * pProfileSide ) = 0;
      virtual HRESULT __stdcall raw_SetProfileSide (
        /*[in]*/ enum TGPart::FeaturePropertyConstants profileSide ) = 0;
      virtual HRESULT __stdcall raw_GetProfiles (
        /*[out]*/ long * NumProfiles,
        /*[out]*/ SAFEARRAY * * ppProfiles ) = 0;
      virtual HRESULT __stdcall raw_SetProfiles (
        /*[in]*/ long NumProfiles,
        SAFEARRAY * pProfiles ) = 0;
      virtual HRESULT __stdcall raw_SetScopeParts (
        /*[in]*/ long NumScopeParts,
        /*[in]*/ SAFEARRAY * pScopeParts ) = 0;
      virtual HRESULT __stdcall raw_GetScopeParts (
        /*[out]*/ long * NumScopeParts,
        /*[out]*/ SAFEARRAY * * pScopeParts ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * featureName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR featureName ) = 0;
      virtual HRESULT __stdcall get_Edges (
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType,
        /*[out,retval]*/ IDispatch * * ppFeatureEdges ) = 0;
      virtual HRESULT __stdcall get_Faces (
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall get_FacesByRay (
        /*[in]*/ double Xorigin,
        /*[in]*/ double Yorigin,
        /*[in]*/ double Zorigin,
        /*[in]*/ double Xdir,
        /*[in]*/ double Ydir,
        /*[in]*/ double Zdir,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall raw_Range (
        /*[out]*/ double * X1,
        /*[out]*/ double * Y1,
        /*[out]*/ double * Z1,
        /*[out]*/ double * X2,
        /*[out]*/ double * Y2,
        /*[out]*/ double * Z2 ) = 0;
      virtual HRESULT __stdcall get_Suppress (
        /*[out,retval]*/ VARIANT_BOOL * Suppress ) = 0;
      virtual HRESULT __stdcall put_Suppress (
        /*[in]*/ VARIANT_BOOL Suppress ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_RollToFeature ( ) = 0;
      virtual HRESULT __stdcall raw_GetPartFeatures (
        /*[out]*/ long * NumFeatures,
        /*[out]*/ SAFEARRAY * * ppFeatures ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out]*/ VARIANT * Description,
        /*[out,retval]*/ enum TGPart::FeatureStatusConstants * Status ) = 0;
};

struct __declspec(uuid("acab90cd-5bd7-4b44-ae91-8c465ba65223"))
AssemblyDrivenPartFeaturesHoles : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyDrivenPartFeaturesHolePtr Item (
        const _variant_t & Index );
    long GetCount ( );
    AssemblyDrivenPartFeaturesHolePtr Add (
        unsigned long nNumScopeParts,
        SAFEARRAY * * pScopeParts,
        unsigned long nNumProfiles,
        SAFEARRAY * * pProfiles,
        enum TGPart::FeaturePropertyConstants * pExtentSide,
        IUnknown * pHoledata,
        enum TGPart::FeaturePropertyConstants ExtentType,
        double * pHoleDepth,
        IUnknown * pFromSurfOrPlane,
        IUnknown * pToSurfOrPlane,
        IUnknown * pKeyPoint,
        enum TGPart::KeyPointExtentConstants * pKeyPointFlags );
};

struct __declspec(uuid("acab90cd-5bd7-4b44-ae91-8c465ba65273"))
AssemblyDrivenPartFeaturesHole : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetEdges))
    IDispatchPtr Edges[];
    __declspec(property(get=GetFaces))
    IDispatchPtr Faces[];
    __declspec(property(get=GetFacesByRay))
    IDispatchPtr FacesByRay[][][][][][];
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    double GetDepth ( );
    HRESULT SetDepth (
        double nDepth );
    enum TGPart::FeaturePropertyConstants GetExtentSide ( );
    HRESULT SetExtentSide (
        enum TGPart::FeaturePropertyConstants ExtentSide );
    enum TGPart::FeaturePropertyConstants GetExtentType ( );
    HRESULT SetExtentType (
        enum TGPart::FeaturePropertyConstants ExtentType );
    IUnknownPtr GetHoleData ( );
    HRESULT SetHoleData (
        IUnknown * Holedata );
    HRESULT GetProfiles (
        long * NumProfiles,
        SAFEARRAY * * ppProfiles );
    HRESULT SetProfiles (
        long NumProfiles,
        SAFEARRAY * pProfiles );
    HRESULT SetFromPlane (
        IUnknown * FromPlane );
    IUnknownPtr GetFromPlane ( );
    HRESULT SetToPlane (
        IUnknown * ToPlane );
    IUnknownPtr GetToPlane ( );
    HRESULT SetScopeParts (
        long NumScopeParts,
        SAFEARRAY * pScopeParts );
    HRESULT GetScopeParts (
        long * NumScopeParts,
        SAFEARRAY * * pScopeParts );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t _arg1 );
    IDispatchPtr GetEdges (
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFaces (
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRay (
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    HRESULT Range (
        double * X1,
        double * Y1,
        double * Z1,
        double * X2,
        double * Y2,
        double * Z2 );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL _arg1 );
    HRESULT Delete ( );
    HRESULT RollToFeature ( );
    HRESULT GetPartFeatures (
        long * NumFeatures,
        SAFEARRAY * * ppFeatures );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description = &vtMissing );
};

struct __declspec(uuid("231c2134-d7b1-4903-b524-4c017c9b7f16"))
_IAssemblyDrivenPartFeaturesHolesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyDrivenPartFeaturesHolePtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    AssemblyDrivenPartFeaturesHolePtr Add (
        unsigned long nNumScopeParts,
        SAFEARRAY * * pScopeParts,
        unsigned long nNumProfiles,
        SAFEARRAY * * pProfiles,
        enum TGPart::FeaturePropertyConstants * pExtentSide,
        IUnknown * pHoledata,
        enum TGPart::FeaturePropertyConstants ExtentType,
        double * pHoleDepth,
        IUnknown * pFromSurfOrPlane,
        IUnknown * pToSurfOrPlane,
        IUnknown * pKeyPoint,
        enum TGPart::KeyPointExtentConstants * pKeyPointFlags );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct AssemblyDrivenPartFeaturesHole * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ unsigned long nNumScopeParts,
        /*[in]*/ SAFEARRAY * * pScopeParts,
        /*[in]*/ unsigned long nNumProfiles,
        /*[in]*/ SAFEARRAY * * pProfiles,
        /*[in]*/ enum TGPart::FeaturePropertyConstants * pExtentSide,
        /*[in]*/ IUnknown * pHoledata,
        /*[in]*/ enum TGPart::FeaturePropertyConstants ExtentType,
        /*[in]*/ double * pHoleDepth,
        /*[in]*/ IUnknown * pFromSurfOrPlane,
        /*[in]*/ IUnknown * pToSurfOrPlane,
        /*[in]*/ IUnknown * pKeyPoint,
        /*[in]*/ enum TGPart::KeyPointExtentConstants * pKeyPointFlags,
        /*[out,retval]*/ struct AssemblyDrivenPartFeaturesHole * * ppAssemblyDrivenPartFeatureHole ) = 0;
};

struct __declspec(uuid("231c2134-d7b1-4903-b524-4c017c9b7f36"))
_IAssemblyDrivenPartFeaturesHoleAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetEdges))
    IDispatchPtr Edges[];
    __declspec(property(get=GetFaces))
    IDispatchPtr Faces[];
    __declspec(property(get=GetFacesByRay))
    IDispatchPtr FacesByRay[][][][][][];
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    double GetDepth ( );
    HRESULT SetDepth (
        double nDepth );
    enum TGPart::FeaturePropertyConstants GetExtentSide ( );
    HRESULT SetExtentSide (
        enum TGPart::FeaturePropertyConstants ExtentSide );
    enum TGPart::FeaturePropertyConstants GetExtentType ( );
    HRESULT SetExtentType (
        enum TGPart::FeaturePropertyConstants ExtentType );
    IUnknownPtr GetHoleData ( );
    HRESULT SetHoleData (
        IUnknown * Holedata );
    HRESULT GetProfiles (
        long * NumProfiles,
        SAFEARRAY * * ppProfiles );
    HRESULT SetProfiles (
        long NumProfiles,
        SAFEARRAY * pProfiles );
    HRESULT SetFromPlane (
        IUnknown * FromPlane );
    IUnknownPtr GetFromPlane ( );
    HRESULT SetToPlane (
        IUnknown * ToPlane );
    IUnknownPtr GetToPlane ( );
    HRESULT SetScopeParts (
        long NumScopeParts,
        SAFEARRAY * pScopeParts );
    HRESULT GetScopeParts (
        long * NumScopeParts,
        SAFEARRAY * * pScopeParts );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t featureName );
    IDispatchPtr GetEdges (
        enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
    IDispatchPtr GetFaces (
        enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
    IDispatchPtr GetFacesByRay (
        double Xorigin,
        double Yorigin,
        double Zorigin,
        double Xdir,
        double Ydir,
        double Zdir );
    HRESULT Range (
        double * X1,
        double * Y1,
        double * Z1,
        double * X2,
        double * Y2,
        double * Z2 );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL Suppress );
    HRESULT Delete ( );
    HRESULT RollToFeature ( );
    HRESULT GetPartFeatures (
        long * NumFeatures,
        SAFEARRAY * * ppFeatures );
    enum TGPart::FeatureStatusConstants GetStatus (
        VARIANT * Description );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_GetDepth (
        /*[out,retval]*/ double * nDepth ) = 0;
      virtual HRESULT __stdcall raw_SetDepth (
        /*[in]*/ double nDepth ) = 0;
      virtual HRESULT __stdcall raw_GetExtentSide (
        /*[out,retval]*/ enum TGPart::FeaturePropertyConstants * pExtentSide ) = 0;
      virtual HRESULT __stdcall raw_SetExtentSide (
        /*[in]*/ enum TGPart::FeaturePropertyConstants ExtentSide ) = 0;
      virtual HRESULT __stdcall raw_GetExtentType (
        /*[out,retval]*/ enum TGPart::FeaturePropertyConstants * pExtentType ) = 0;
      virtual HRESULT __stdcall raw_SetExtentType (
        /*[in]*/ enum TGPart::FeaturePropertyConstants ExtentType ) = 0;
      virtual HRESULT __stdcall raw_GetHoleData (
        /*[out,retval]*/ IUnknown * * pHoledata ) = 0;
      virtual HRESULT __stdcall raw_SetHoleData (
        /*[in]*/ IUnknown * Holedata ) = 0;
      virtual HRESULT __stdcall raw_GetProfiles (
        /*[out]*/ long * NumProfiles,
        /*[out]*/ SAFEARRAY * * ppProfiles ) = 0;
      virtual HRESULT __stdcall raw_SetProfiles (
        /*[in]*/ long NumProfiles,
        SAFEARRAY * pProfiles ) = 0;
      virtual HRESULT __stdcall raw_SetFromPlane (
        /*[in]*/ IUnknown * FromPlane ) = 0;
      virtual HRESULT __stdcall raw_GetFromPlane (
        /*[out,retval]*/ IUnknown * * FromPlane ) = 0;
      virtual HRESULT __stdcall raw_SetToPlane (
        /*[in]*/ IUnknown * ToPlane ) = 0;
      virtual HRESULT __stdcall raw_GetToPlane (
        /*[out,retval]*/ IUnknown * * ToPlane ) = 0;
      virtual HRESULT __stdcall raw_SetScopeParts (
        /*[in]*/ long NumScopeParts,
        /*[in]*/ SAFEARRAY * pScopeParts ) = 0;
      virtual HRESULT __stdcall raw_GetScopeParts (
        /*[out]*/ long * NumScopeParts,
        /*[out]*/ SAFEARRAY * * pScopeParts ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * featureName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR featureName ) = 0;
      virtual HRESULT __stdcall get_Edges (
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType,
        /*[out,retval]*/ IDispatch * * ppFeatureEdges ) = 0;
      virtual HRESULT __stdcall get_Faces (
        /*[in]*/ enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall get_FacesByRay (
        /*[in]*/ double Xorigin,
        /*[in]*/ double Yorigin,
        /*[in]*/ double Zorigin,
        /*[in]*/ double Xdir,
        /*[in]*/ double Ydir,
        /*[in]*/ double Zdir,
        /*[out,retval]*/ IDispatch * * ppFeatureFaces ) = 0;
      virtual HRESULT __stdcall raw_Range (
        /*[out]*/ double * X1,
        /*[out]*/ double * Y1,
        /*[out]*/ double * Z1,
        /*[out]*/ double * X2,
        /*[out]*/ double * Y2,
        /*[out]*/ double * Z2 ) = 0;
      virtual HRESULT __stdcall get_Suppress (
        /*[out,retval]*/ VARIANT_BOOL * Suppress ) = 0;
      virtual HRESULT __stdcall put_Suppress (
        /*[in]*/ VARIANT_BOOL Suppress ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_RollToFeature ( ) = 0;
      virtual HRESULT __stdcall raw_GetPartFeatures (
        /*[out]*/ long * NumFeatures,
        /*[out]*/ SAFEARRAY * * ppFeatures ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out]*/ VARIANT * Description,
        /*[out,retval]*/ enum TGPart::FeatureStatusConstants * Status ) = 0;
};

struct __declspec(uuid("1ea2e5be-5771-4997-8fea-f1555447af8b"))
AssemblyDrivenPartFeaturesTrimTubes : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyDrivenPartFeaturesTrimTubePtr Item (
        const _variant_t & Index );
    long GetCount ( );
    AssemblyDrivenPartFeaturesTrimTubePtr Add (
        IDispatch * pPrimaryTube,
        unsigned long ulNumSecondaryTubes,
        SAFEARRAY * * pSecondaryTubes );
};

struct __declspec(uuid("e1b171ec-3638-4dc2-bc95-4d5073e1cb9f"))
_IAssemblyDrivenPartFeaturesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetAssemblyDrivenPartFeaturesExtrudedCutouts))
    AssemblyDrivenPartFeaturesExtrudedCutoutsPtr AssemblyDrivenPartFeaturesExtrudedCutouts;
    __declspec(property(get=GetAssemblyDrivenPartFeaturesRevolvedCutouts))
    AssemblyDrivenPartFeaturesRevolvedCutoutsPtr AssemblyDrivenPartFeaturesRevolvedCutouts;
    __declspec(property(get=GetAssemblyDrivenPartFeaturesHoles))
    AssemblyDrivenPartFeaturesHolesPtr AssemblyDrivenPartFeaturesHoles;
    __declspec(property(get=GetAssemblyDrivenPartFeaturesTrimTubes))
    AssemblyDrivenPartFeaturesTrimTubesPtr AssemblyDrivenPartFeaturesTrimTubes;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyDrivenPartFeaturesExtrudedCutoutsPtr GetAssemblyDrivenPartFeaturesExtrudedCutouts ( );
    AssemblyDrivenPartFeaturesRevolvedCutoutsPtr GetAssemblyDrivenPartFeaturesRevolvedCutouts ( );
    AssemblyDrivenPartFeaturesHolesPtr GetAssemblyDrivenPartFeaturesHoles ( );
    AssemblyDrivenPartFeaturesTrimTubesPtr GetAssemblyDrivenPartFeaturesTrimTubes ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_AssemblyDrivenPartFeaturesExtrudedCutouts (
        /*[out,retval]*/ struct AssemblyDrivenPartFeaturesExtrudedCutouts * * AssemblyDrivenPartFeaturesExtrudedCutouts ) = 0;
      virtual HRESULT __stdcall get_AssemblyDrivenPartFeaturesRevolvedCutouts (
        /*[out,retval]*/ struct AssemblyDrivenPartFeaturesRevolvedCutouts * * AssemblyDrivenPartFeaturesRevolvedCutouts ) = 0;
      virtual HRESULT __stdcall get_AssemblyDrivenPartFeaturesHoles (
        /*[out,retval]*/ struct AssemblyDrivenPartFeaturesHoles * * AssemblyDrivenPartFeaturesHoles ) = 0;
      virtual HRESULT __stdcall get_AssemblyDrivenPartFeaturesTrimTubes (
        /*[out,retval]*/ struct AssemblyDrivenPartFeaturesTrimTubes * * AssemblyDrivenPartFeaturesTrimTubes ) = 0;
};

struct __declspec(uuid("3fd4e9f0-4f0f-4eab-85d8-ff9d95e48255"))
AssemblyDrivenPartFeaturesTrimTube : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT SetPrimaryTube (
        IDispatch * pPrimaryTube );
    IDispatchPtr GetPrimaryTube ( );
    HRESULT SetSecondaryTubes (
        long NumSecondaryTubes,
        SAFEARRAY * pSecondaryTubes );
    HRESULT GetSecondaryTubes (
        long * NumSecondaryTubes,
        SAFEARRAY * * pSecondaryTubes );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t _arg1 );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL _arg1 );
    HRESULT Delete ( );
    HRESULT RollToFeature ( );
};

struct __declspec(uuid("53789303-9a6a-481d-89fe-daa815d9c6bb"))
_IAssemblyDrivenPartFeaturesTrimTubesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyDrivenPartFeaturesTrimTubePtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    AssemblyDrivenPartFeaturesTrimTubePtr Add (
        IDispatch * pPrimaryTube,
        unsigned long ulNumSecondaryTubes,
        SAFEARRAY * * pSecondaryTubes );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct AssemblyDrivenPartFeaturesTrimTube * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ IDispatch * pPrimaryTube,
        /*[in]*/ unsigned long ulNumSecondaryTubes,
        /*[in]*/ SAFEARRAY * * pSecondaryTubes,
        /*[out,retval]*/ struct AssemblyDrivenPartFeaturesTrimTube * * ppAssemblyDrivenPartFeatureTrimTube ) = 0;
};

struct __declspec(uuid("62120da9-e8cb-4b6b-a7f1-b345e7b0030f"))
_IAssemblyDrivenPartFeaturesTrimTubeAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT SetPrimaryTube (
        IDispatch * pPrimaryTube );
    IDispatchPtr GetPrimaryTube ( );
    HRESULT SetSecondaryTubes (
        long NumSecondaryTubes,
        SAFEARRAY * pSecondaryTubes );
    HRESULT GetSecondaryTubes (
        long * NumSecondaryTubes,
        SAFEARRAY * * pSecondaryTubes );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t featureName );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL Suppress );
    HRESULT Delete ( );
    HRESULT RollToFeature ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_SetPrimaryTube (
        /*[in]*/ IDispatch * pPrimaryTube ) = 0;
      virtual HRESULT __stdcall raw_GetPrimaryTube (
        /*[out,retval]*/ IDispatch * * ppPrimaryTube ) = 0;
      virtual HRESULT __stdcall raw_SetSecondaryTubes (
        /*[in]*/ long NumSecondaryTubes,
        /*[in]*/ SAFEARRAY * pSecondaryTubes ) = 0;
      virtual HRESULT __stdcall raw_GetSecondaryTubes (
        /*[out]*/ long * NumSecondaryTubes,
        /*[out]*/ SAFEARRAY * * pSecondaryTubes ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * featureName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR featureName ) = 0;
      virtual HRESULT __stdcall get_Suppress (
        /*[out,retval]*/ VARIANT_BOOL * Suppress ) = 0;
      virtual HRESULT __stdcall put_Suppress (
        /*[in]*/ VARIANT_BOOL Suppress ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_RollToFeature ( ) = 0;
};

struct __declspec(uuid("bbe010ef-74c6-41dc-aaa0-4b5cab16e317"))
Pipes : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    PipePtr Item (
        const _variant_t & Index );
    long GetCount ( );
    PipePtr Add (
        double dPipeDiameter,
        long NumPaths,
        SAFEARRAY * * Path,
        VARIANT_BOOL bAllowGradient,
        double dGradientValue,
        _bstr_t PipeFileName,
        _bstr_t ElbowFileName,
        _bstr_t TeeFileName,
        _bstr_t CrossFileName,
        _bstr_t CouplingFileName );
};

struct __declspec(uuid("e9fa6f43-8e39-44bb-b092-803de2bccde2"))
Pipe : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetPipeSegmentStandard,put=PutPipeSegmentStandard))
    _bstr_t PipeSegmentStandard;
    __declspec(property(get=GetPipeFittingStandard,put=PutPipeFittingStandard))
    _bstr_t PipeFittingStandard;
    __declspec(property(get=GetDefaultEndTreatment,put=PutDefaultEndTreatment))
    enum PipeFittingEndTreatmentConstants DefaultEndTreatment;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    void PutName (
        _bstr_t _arg1 );
    _bstr_t GetName ( );
    void PutVisible (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetVisible ( );
    HRESULT GetPipeSegments (
        long * NumPipeSegments,
        SAFEARRAY * * PipeSegmentOccurrences );
    HRESULT GetPipeFittings (
        long * NumPipeFittings,
        SAFEARRAY * * PipeFittingOccurrences,
        SAFEARRAY * * FittingTypes );
    HRESULT GetPipeLengths (
        long * NumPipeSegments,
        SAFEARRAY * * PipeSegmentOccurrences,
        SAFEARRAY * * LineSegments,
        SAFEARRAY * * PipeSegmentLength );
    _bstr_t GetPipeSegmentStandard ( );
    void PutPipeSegmentStandard (
        _bstr_t _arg1 );
    _bstr_t GetPipeFittingStandard ( );
    void PutPipeFittingStandard (
        _bstr_t _arg1 );
    enum PipeFittingEndTreatmentConstants GetDefaultEndTreatment ( );
    void PutDefaultEndTreatment (
        enum PipeFittingEndTreatmentConstants _arg1 );
    HRESULT Delete ( );
    HRESULT RotateFittings (
        SAFEARRAY * PipeFittingOccurrences,
        double dValue );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
};

struct __declspec(uuid("3ee1394c-92d5-4823-b3f6-a1a55be6e684"))
_IPipesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    PipePtr Item (
        const _variant_t & Index );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    PipePtr Add (
        double dPipeDiameter,
        long NumPaths,
        SAFEARRAY * * Path,
        VARIANT_BOOL bAllowGradient,
        double dGradientValue,
        _bstr_t PipeFileName,
        _bstr_t ElbowFileName,
        _bstr_t TeeFileName,
        _bstr_t CrossFileName,
        _bstr_t CouplingFileName );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Pipe * * Item ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ double dPipeDiameter,
        /*[in]*/ long NumPaths,
        /*[in]*/ SAFEARRAY * * Path,
        /*[in]*/ VARIANT_BOOL bAllowGradient,
        /*[in]*/ double dGradientValue,
        /*[in]*/ BSTR PipeFileName,
        /*[in]*/ BSTR ElbowFileName,
        /*[in]*/ BSTR TeeFileName,
        /*[in]*/ BSTR CrossFileName,
        /*[in]*/ BSTR CouplingFileName,
        /*[out,retval]*/ struct Pipe * * ppPipe ) = 0;
};

enum PipeFittingTypeConstants
{
    sePipeFittingTypeNone = 0,
    sePipeFittingTypeElbow = 1,
    sePipeFittingTypeY = 2,
    sePipeFittingTypeTee = 3,
    sePipeFittingTypeCoupling = 4,
    sePipeFittingTypeReducer = 5,
    sePipeFittingTypeCross = 6,
    sePipeFittingTypePlug = 7,
    sePipeFittingTypeCompanionFlange = 8,
    sePipeFittingTypeReturn180 = 9
};

enum PipeFittingEndTreatmentConstants
{
    sePipeFittingEndTreatmentNone = 0,
    sePipeFittingEndTreatmentSocketWeld = 1,
    sePipeFittingEndTreatmentButtWeld = 2,
    sePipeFittingEndTreatmentFlange = 3,
    sePipeFittingEndTreatmentThread = 4,
    sePipeFittingEndTreatmentPipePenetration = 5
};

struct __declspec(uuid("5296e1d3-478e-4a69-9491-2cc51e180fba"))
_IPipeAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetPipeSegmentStandard,put=PutPipeSegmentStandard))
    _bstr_t PipeSegmentStandard;
    __declspec(property(get=GetPipeFittingStandard,put=PutPipeFittingStandard))
    _bstr_t PipeFittingStandard;
    __declspec(property(get=GetDefaultEndTreatment,put=PutDefaultEndTreatment))
    enum PipeFittingEndTreatmentConstants DefaultEndTreatment;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    void PutName (
        _bstr_t Name );
    _bstr_t GetName ( );
    void PutVisible (
        VARIANT_BOOL bVisible );
    VARIANT_BOOL GetVisible ( );
    HRESULT GetPipeSegments (
        long * NumPipeSegments,
        SAFEARRAY * * PipeSegmentOccurrences );
    HRESULT GetPipeFittings (
        long * NumPipeFittings,
        SAFEARRAY * * PipeFittingOccurrences,
        SAFEARRAY * * FittingTypes );
    HRESULT GetPipeLengths (
        long * NumPipeSegments,
        SAFEARRAY * * PipeSegmentOccurrences,
        SAFEARRAY * * LineSegments,
        SAFEARRAY * * PipeSegmentLength );
    _bstr_t GetPipeSegmentStandard ( );
    void PutPipeSegmentStandard (
        _bstr_t PipeSegmentStandard );
    _bstr_t GetPipeFittingStandard ( );
    void PutPipeFittingStandard (
        _bstr_t PipeFittingStandard );
    enum PipeFittingEndTreatmentConstants GetDefaultEndTreatment ( );
    void PutDefaultEndTreatment (
        enum PipeFittingEndTreatmentConstants DefaultEndTreatment );
    HRESULT Delete ( );
    HRESULT RotateFittings (
        SAFEARRAY * PipeFittingOccurrences,
        double dValue );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL bVisible ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * bVisible ) = 0;
      virtual HRESULT __stdcall raw_GetPipeSegments (
        /*[out]*/ long * NumPipeSegments,
        /*[in,out]*/ SAFEARRAY * * PipeSegmentOccurrences ) = 0;
      virtual HRESULT __stdcall raw_GetPipeFittings (
        /*[out]*/ long * NumPipeFittings,
        /*[in,out]*/ SAFEARRAY * * PipeFittingOccurrences,
        /*[in,out]*/ SAFEARRAY * * FittingTypes ) = 0;
      virtual HRESULT __stdcall raw_GetPipeLengths (
        /*[out]*/ long * NumPipeSegments,
        /*[in,out]*/ SAFEARRAY * * PipeSegmentOccurrences,
        /*[in,out]*/ SAFEARRAY * * LineSegments,
        /*[in,out]*/ SAFEARRAY * * PipeSegmentLength ) = 0;
      virtual HRESULT __stdcall get_PipeSegmentStandard (
        /*[out,retval]*/ BSTR * PipeSegmentStandard ) = 0;
      virtual HRESULT __stdcall put_PipeSegmentStandard (
        /*[in]*/ BSTR PipeSegmentStandard ) = 0;
      virtual HRESULT __stdcall get_PipeFittingStandard (
        /*[out,retval]*/ BSTR * PipeFittingStandard ) = 0;
      virtual HRESULT __stdcall put_PipeFittingStandard (
        /*[in]*/ BSTR PipeFittingStandard ) = 0;
      virtual HRESULT __stdcall get_DefaultEndTreatment (
        /*[out,retval]*/ enum PipeFittingEndTreatmentConstants * DefaultEndTreatment ) = 0;
      virtual HRESULT __stdcall put_DefaultEndTreatment (
        /*[in]*/ enum PipeFittingEndTreatmentConstants DefaultEndTreatment ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_RotateFittings (
        /*[in]*/ SAFEARRAY * PipeFittingOccurrences,
        /*[in]*/ double dValue ) = 0;
      virtual HRESULT __stdcall raw_GetSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_AddSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_DeleteSuppressionVariable ( ) = 0;
      virtual HRESULT __stdcall raw_HasSuppressionVariable (
        /*[out,retval]*/ VARIANT_BOOL * IsSuppressionVariablePresent ) = 0;
};

struct __declspec(uuid("ff5a2959-c266-4b9d-b91c-5e5b36cfa72b"))
ComponentLayouts : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    ComponentLayoutPtr Item (
        const _variant_t & Index );
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    ComponentLayoutPtr Add (
        struct AsmRefPlane * AsmRefPlane,
        const _variant_t & ReturnExisting = vtMissing,
        VARIANT * Status = &vtMissing );
};

struct __declspec(uuid("79851ead-d9b4-404d-abaa-2bd78ecc3436"))
ComponentLayout : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetProfile))
    IDispatchPtr Profile;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetRefPlane))
    AsmRefPlanePtr RefPlane;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    HRESULT Delete ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr GetProfile ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t _arg1 );
    AsmRefPlanePtr GetRefPlane ( );
    enum TGFramework::ObjectType GetType ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
};

struct __declspec(uuid("0e5104f4-ab85-4ac1-a913-bdcef6e4abc6"))
_IComponentLayoutsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    ComponentLayoutPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    ComponentLayoutPtr Add (
        struct AsmRefPlane * AsmRefPlane,
        const _variant_t & ReturnExisting,
        VARIANT * Status );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct ComponentLayout * * pItem ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * pApp ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * ppParent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * pnCount ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ struct AsmRefPlane * AsmRefPlane,
        /*[in]*/ VARIANT ReturnExisting,
        /*[out]*/ VARIANT * Status,
        /*[out,retval]*/ struct ComponentLayout * * ppComponentLayout ) = 0;
};

struct __declspec(uuid("ae4adcad-8322-43d3-bd0b-7320edeefb48"))
_IComponentLayoutAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetProfile))
    IDispatchPtr Profile;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetRefPlane))
    AsmRefPlanePtr RefPlane;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    HRESULT Delete ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr GetProfile ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    AsmRefPlanePtr GetRefPlane ( );
    enum TGFramework::ObjectType GetType ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * pApp ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * ppParent ) = 0;
      virtual HRESULT __stdcall get_Profile (
        /*[out,retval]*/ IDispatch * * ppProfile ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_RefPlane (
        /*[out,retval]*/ struct AsmRefPlane * * AsmRefPlane ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
};

struct __declspec(uuid("3823602a-1748-4108-a76b-6e3f8c6ffd68"))
Paths : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    PathPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    PathPtr Add (
        long NumPoints,
        SAFEARRAY * * PointTypeConstants,
        SAFEARRAY * * EdgeSet,
        SAFEARRAY * * KeyPointTypeConstants,
        SAFEARRAY * * Array,
        enum TGPart::KeypointEndConditionConstants StartpointEndType,
        const _variant_t & EndpointEndType = vtMissing );
};

struct __declspec(uuid("553cadf8-5004-43e0-b22f-a592edeb9f5a"))
Path : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetStatus))
    long Status;
    __declspec(property(get=GetEndParentEdge))
    IDispatchPtr EndParentEdge;
    __declspec(property(get=GetEndpointEndCondition))
    enum TGPart::KeypointEndConditionConstants EndpointEndCondition;
    __declspec(property(get=GetEndpointMagnitude))
    double EndpointMagnitude;
    __declspec(property(get=GetStartParentEdge))
    IDispatchPtr StartParentEdge;
    __declspec(property(get=GetStartpointEndCondition))
    enum TGPart::KeypointEndConditionConstants StartpointEndCondition;
    __declspec(property(get=GetStartpointMagnitude))
    double StartpointMagnitude;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    HRESULT Delete ( );
    long GetStatus ( );
    HRESULT InsertKeyPoint (
        IDispatch * EdgeToInsert,
        enum TGFramework::KeyPointType KeypointConstant,
        long KeypointIndexToInsertBefore );
    HRESULT InserttCylinderAxis (
        IDispatch * CylinderFace,
        IDispatch * CylinderEdge,
        long KeypointIndexToInsertBefore );
    HRESULT InsertSpacePoint (
        double XPos,
        double YPos,
        double ZPos,
        long KeypointIndexToInsertBefore );
    IDispatchPtr GetEndParentEdge ( );
    enum TGPart::KeypointEndConditionConstants GetEndpointEndCondition ( );
    double GetEndpointMagnitude ( );
    HRESULT RemovePoint (
        long KeypointIndex );
    IDispatchPtr GetStartParentEdge ( );
    enum TGPart::KeypointEndConditionConstants GetStartpointEndCondition ( );
    double GetStartpointMagnitude ( );
    HRESULT GetAllPoints (
        long * NumPoints,
        SAFEARRAY * * PointPositions );
    HRESULT GetEndPoints (
        SAFEARRAY * * EndPointPositions );
    HRESULT GetLength (
        double * PathLength );
    HRESULT SetFixedLength (
        double dCurveLength,
        enum TGPart::SEFixedLengthConstraintDirection FixedLengthConstraintDirection,
        IDispatch * ConstraintGeometry );
    HRESULT GetFixedLength (
        double * pdCurveLength,
        enum TGPart::SEFixedLengthConstraintDirection * pFixedLengthConstraintDirection,
        IDispatch * * pConstraintGeometry );
    HRESULT EditSpacePoint (
        long KeypointIndexToEdit,
        double XPos,
        double YPos,
        double ZPos );
    HRESULT SplitPath (
        double XPos,
        double YPos,
        double ZPos,
        IDispatch * * pNewPath );
};

struct __declspec(uuid("09e2b3d5-74de-4b31-8f3f-7c4a885f006e"))
_IPathsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    PathPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    PathPtr Add (
        long NumPoints,
        SAFEARRAY * * PointTypeConstants,
        SAFEARRAY * * EdgeSet,
        SAFEARRAY * * KeyPointTypeConstants,
        SAFEARRAY * * Array,
        enum TGPart::KeypointEndConditionConstants StartpointEndType,
        const _variant_t & EndpointEndType = vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Path * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ long NumPoints,
        /*[in]*/ SAFEARRAY * * PointTypeConstants,
        /*[in]*/ SAFEARRAY * * EdgeSet,
        /*[in]*/ SAFEARRAY * * KeyPointTypeConstants,
        /*[in]*/ SAFEARRAY * * Array,
        /*[in]*/ enum TGPart::KeypointEndConditionConstants StartpointEndType,
        /*[in]*/ VARIANT EndpointEndType,
        /*[out,retval]*/ struct Path * * Path ) = 0;
};

struct __declspec(uuid("f650910d-27cd-4433-91de-bfef005d8271"))
_IPathAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetStatus))
    long Status;
    __declspec(property(get=GetEndParentEdge))
    IDispatchPtr EndParentEdge;
    __declspec(property(get=GetEndpointEndCondition))
    enum TGPart::KeypointEndConditionConstants EndpointEndCondition;
    __declspec(property(get=GetEndpointMagnitude))
    double EndpointMagnitude;
    __declspec(property(get=GetStartParentEdge))
    IDispatchPtr StartParentEdge;
    __declspec(property(get=GetStartpointEndCondition))
    enum TGPart::KeypointEndConditionConstants StartpointEndCondition;
    __declspec(property(get=GetStartpointMagnitude))
    double StartpointMagnitude;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    HRESULT Delete ( );
    long GetStatus ( );
    HRESULT InsertKeyPoint (
        IDispatch * EdgeToInsert,
        enum TGFramework::KeyPointType KeypointConstant,
        long KeypointIndexToInsertBefore );
    HRESULT InserttCylinderAxis (
        IDispatch * CylinderFace,
        IDispatch * CylinderEdge,
        long KeypointIndexToInsertBefore );
    HRESULT InsertSpacePoint (
        double XPos,
        double YPos,
        double ZPos,
        long KeypointIndexToInsertBefore );
    IDispatchPtr GetEndParentEdge ( );
    enum TGPart::KeypointEndConditionConstants GetEndpointEndCondition ( );
    double GetEndpointMagnitude ( );
    HRESULT RemovePoint (
        long KeypointIndex );
    IDispatchPtr GetStartParentEdge ( );
    enum TGPart::KeypointEndConditionConstants GetStartpointEndCondition ( );
    double GetStartpointMagnitude ( );
    HRESULT GetAllPoints (
        long * NumPoints,
        SAFEARRAY * * PointPositions );
    HRESULT GetEndPoints (
        SAFEARRAY * * EndPointPositions );
    HRESULT GetLength (
        double * PathLength );
    HRESULT SetFixedLength (
        double dCurveLength,
        enum TGPart::SEFixedLengthConstraintDirection FixedLengthConstraintDirection,
        IDispatch * ConstraintGeometry );
    HRESULT GetFixedLength (
        double * pdCurveLength,
        enum TGPart::SEFixedLengthConstraintDirection * pFixedLengthConstraintDirection,
        IDispatch * * pConstraintGeometry );
    HRESULT EditSpacePoint (
        long KeypointIndexToEdit,
        double XPos,
        double YPos,
        double ZPos );
    HRESULT SplitPath (
        double XPos,
        double YPos,
        double ZPos,
        IDispatch * * pNewPath );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * featureName ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ long * bFailed ) = 0;
      virtual HRESULT __stdcall raw_InsertKeyPoint (
        /*[in]*/ IDispatch * EdgeToInsert,
        /*[in]*/ enum TGFramework::KeyPointType KeypointConstant,
        /*[in]*/ long KeypointIndexToInsertBefore ) = 0;
      virtual HRESULT __stdcall raw_InserttCylinderAxis (
        /*[in]*/ IDispatch * CylinderFace,
        /*[in]*/ IDispatch * CylinderEdge,
        /*[in]*/ long KeypointIndexToInsertBefore ) = 0;
      virtual HRESULT __stdcall raw_InsertSpacePoint (
        /*[in]*/ double XPos,
        /*[in]*/ double YPos,
        /*[in]*/ double ZPos,
        /*[in]*/ long KeypointIndexToInsertBefore ) = 0;
      virtual HRESULT __stdcall get_EndParentEdge (
        /*[out,retval]*/ IDispatch * * EndParentEdge ) = 0;
      virtual HRESULT __stdcall get_EndpointEndCondition (
        /*[out,retval]*/ enum TGPart::KeypointEndConditionConstants * EndpointEndCondition ) = 0;
      virtual HRESULT __stdcall get_EndpointMagnitude (
        /*[out,retval]*/ double * EndpointMagnitude ) = 0;
      virtual HRESULT __stdcall raw_RemovePoint (
        /*[in]*/ long KeypointIndex ) = 0;
      virtual HRESULT __stdcall get_StartParentEdge (
        /*[out,retval]*/ IDispatch * * StartParentEdge ) = 0;
      virtual HRESULT __stdcall get_StartpointEndCondition (
        /*[out,retval]*/ enum TGPart::KeypointEndConditionConstants * StartpointEndCondition ) = 0;
      virtual HRESULT __stdcall get_StartpointMagnitude (
        /*[out,retval]*/ double * StartpointMagnitude ) = 0;
      virtual HRESULT __stdcall raw_GetAllPoints (
        /*[out]*/ long * NumPoints,
        /*[in,out]*/ SAFEARRAY * * PointPositions ) = 0;
      virtual HRESULT __stdcall raw_GetEndPoints (
        /*[in,out]*/ SAFEARRAY * * EndPointPositions ) = 0;
      virtual HRESULT __stdcall raw_GetLength (
        /*[in,out]*/ double * PathLength ) = 0;
      virtual HRESULT __stdcall raw_SetFixedLength (
        /*[in]*/ double dCurveLength,
        /*[in]*/ enum TGPart::SEFixedLengthConstraintDirection FixedLengthConstraintDirection,
        /*[in]*/ IDispatch * ConstraintGeometry ) = 0;
      virtual HRESULT __stdcall raw_GetFixedLength (
        /*[out]*/ double * pdCurveLength,
        /*[out]*/ enum TGPart::SEFixedLengthConstraintDirection * pFixedLengthConstraintDirection,
        /*[out]*/ IDispatch * * pConstraintGeometry ) = 0;
      virtual HRESULT __stdcall raw_EditSpacePoint (
        /*[in]*/ long KeypointIndexToEdit,
        /*[in]*/ double XPos,
        /*[in]*/ double YPos,
        /*[in]*/ double ZPos ) = 0;
      virtual HRESULT __stdcall raw_SplitPath (
        /*[in]*/ double XPos,
        /*[in]*/ double YPos,
        /*[in]*/ double ZPos,
        /*[out]*/ IDispatch * * pNewPath ) = 0;
};

struct __declspec(uuid("eed72be4-1604-450c-afb0-058797320e0b"))
Harnesses : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    HarnessPtr Item (
        const _variant_t & Index );
    HarnessPtr Add ( );
    HRESULT CreateFromNetlistImporter (
        _bstr_t CompanyName,
        _bstr_t ComponentFilePath,
        _bstr_t ConnectionFilePath,
        const _variant_t & vbSaveHarnessImportOnFailure = vtMissing );
};

struct __declspec(uuid("fe65fc82-85a6-4e05-afbe-2c3691501058"))
Harness : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetWires))
    WiresPtr Wires;
    __declspec(property(get=GetCables))
    CablesPtr Cables;
    __declspec(property(get=GetBundles))
    BundlesPtr Bundles;
    __declspec(property(get=GetSplices))
    SplicesPtr Splices;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    WiresPtr GetWires ( );
    CablesPtr GetCables ( );
    BundlesPtr GetBundles ( );
    SplicesPtr GetSplices ( );
    HRESULT GetTopMostConductors (
        long * NumberOfConductors,
        SAFEARRAY * * ConductorArray );
    HRESULT SaveAsEcad (
        enum HarnessSaveAsEcadStatusConstants * HarnessSaveAsEcadStatus,
        _bstr_t CompanyName,
        const _variant_t & ComponentFilePath = vtMissing,
        const _variant_t & ConnectionFilePath = vtMissing );
    HRESULT CreatePhysicalConductor ( );
    HRESULT DeletePhysicalConductor ( );
    HRESULT SaveAsHarnessTopology (
        enum SaveAsHarnessTopologyStatusConstants * SaveAsHarnessTopologyStatus,
        const _variant_t & HarnessFilePath );
    HRESULT SaveAsHarnessTopologyEx (
        enum SaveAsHarnessTopologyStatusConstants * SaveAsHarnessTopologyStatus,
        const _variant_t & HarnessFilePath,
        enum SaveAsHarnessFileFormats SaveAsHarnessFileFormat );
};

struct __declspec(uuid("c61724b9-e986-4091-a049-676055c848ec"))
_IHarnessesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    HarnessPtr Item (
        const _variant_t & Index );
    HarnessPtr Add ( );
    HRESULT CreateFromNetlistImporter (
        _bstr_t CompanyName,
        _bstr_t ComponentFilePath,
        _bstr_t ConnectionFilePath,
        const _variant_t & vbSaveHarnessImportOnFailure = vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Enum ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Harness * * Item ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[out,retval]*/ struct Harness * * Harness ) = 0;
      virtual HRESULT __stdcall raw_CreateFromNetlistImporter (
        /*[in]*/ BSTR CompanyName,
        /*[in]*/ BSTR ComponentFilePath,
        /*[in]*/ BSTR ConnectionFilePath,
        /*[in]*/ VARIANT vbSaveHarnessImportOnFailure = vtMissing ) = 0;
};

struct __declspec(uuid("09c8d54b-6720-4e2e-840c-d4628cc848c1"))
Wires : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetType))
    enum HarnessTypeConstants Type;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    WirePtr Item (
        const _variant_t & Index );
    WirePtr Add (
        long NumberOfPaths,
        SAFEARRAY * * PathArray,
        SAFEARRAY * * PathDirectionArray,
        _bstr_t ConductorDescription );
    enum HarnessTypeConstants GetType ( );
};

struct __declspec(uuid("2e329ec8-960d-4804-ac0d-50d4b971e86c"))
Wire : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetFromTerminalName,put=PutFromTerminalName))
    _bstr_t FromTerminalName;
    __declspec(property(get=GetToTerminalName,put=PutToTerminalName))
    _bstr_t ToTerminalName;
    __declspec(property(get=GetFromComponentName,put=PutFromComponentName))
    _bstr_t FromComponentName;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetMaterialType,put=PutMaterialType))
    _bstr_t MaterialType;
    __declspec(property(get=GetToComponentName,put=PutToComponentName))
    _bstr_t ToComponentName;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];
    __declspec(property(get=GetUseGlobalAdders,put=PutUseGlobalAdders))
    VARIANT_BOOL UseGlobalAdders;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetTrueLength))
    double TrueLength;
    __declspec(property(get=GetCutLength))
    double CutLength;
    __declspec(property(get=GetMass))
    double Mass;
    __declspec(property(get=GetAssemblyProperty))
    AssemblyPropertyPtr AssemblyProperty;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetColor,put=PutColor))
    long Color;
    __declspec(property(get=GetDescription,put=PutDescription))
    _bstr_t Description;
    __declspec(property(get=GetDiameter,put=PutDiameter))
    double Diameter;
    __declspec(property(get=GetGage,put=PutGage))
    _bstr_t Gage;
    __declspec(property(get=GetOuterDiameter,put=PutOuterDiameter))
    double OuterDiameter;
    __declspec(property(get=GetPartNumber,put=PutPartNumber))
    _bstr_t PartNumber;
    __declspec(property(get=GetType))
    enum HarnessTypeConstants Type;
    __declspec(property(get=GetMaterial,put=PutMaterial))
    _bstr_t Material;
    __declspec(property(get=GetLinearDensity,put=PutLinearDensity))
    double LinearDensity;
    __declspec(property(get=GetMinimumBendRadius,put=PutMinimumBendRadius))
    double MinimumBendRadius;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL _arg1 );
    HRESULT GetPaths (
        long * NumberOfPaths,
        SAFEARRAY * * PathArray,
        SAFEARRAY * * PathDirectionArray );
    HRESULT GetAllPaths (
        long * NumberOfPaths,
        SAFEARRAY * * PathArray );
    HRESULT GetOuterConductors (
        long * NumberOfConductors,
        SAFEARRAY * * ConductorArray );
    HRESULT GetTopMostConductors (
        long * NumberOfConductors,
        SAFEARRAY * * ConductorArray );
    HRESULT GetEndPoints (
        double * dStartX,
        double * dStartY,
        double * dStartZ,
        double * dEndX,
        double * dEndY,
        double * dEndZ );
    HRESULT Remove (
        long NumberOfConductors,
        SAFEARRAY * * ConductorArray );
    HRESULT Delete ( );
    VARIANT_BOOL GetUseGlobalAdders ( );
    void PutUseGlobalAdders (
        VARIANT_BOOL _arg1 );
    HRESULT GetAdders (
        double * dSlackAdder,
        double * dPureAdder,
        double * dHoleDiameterAdder,
        double * dBundleDiameterAdder );
    HRESULT SetAdders (
        double dSlackAdder,
        double dPureAdder,
        double dHoleDiameterAdder,
        double dBundleDiameterAdder );
    double GetTrueLength ( );
    double GetCutLength ( );
    double GetMass ( );
    AssemblyPropertyPtr GetAssemblyProperty ( );
    enum HarnessTypeConstants GetType ( );
    void PutName (
        _bstr_t _arg1 );
    _bstr_t GetName ( );
    void PutColor (
        long _arg1 );
    long GetColor ( );
    void PutDescription (
        _bstr_t _arg1 );
    _bstr_t GetDescription ( );
    void PutOuterDiameter (
        double _arg1 );
    double GetOuterDiameter ( );
    void PutPartNumber (
        _bstr_t _arg1 );
    _bstr_t GetPartNumber ( );
    void PutLinearDensity (
        double _arg1 );
    double GetLinearDensity ( );
    void PutMinimumBendRadius (
        double _arg1 );
    double GetMinimumBendRadius ( );
    HRESULT CreatePhysicalConductor ( );
    HRESULT DeletePhysicalConductor ( );
    void PutDiameter (
        double _arg1 );
    double GetDiameter ( );
    void PutGage (
        _bstr_t _arg1 );
    _bstr_t GetGage ( );
    void PutMaterialType (
        _bstr_t _arg1 );
    _bstr_t GetMaterialType ( );
    void PutMaterial (
        _bstr_t _arg1 );
    _bstr_t GetMaterial ( );
    void PutFromTerminalName (
        _bstr_t _arg1 );
    _bstr_t GetFromTerminalName ( );
    void PutToTerminalName (
        _bstr_t _arg1 );
    _bstr_t GetToTerminalName ( );
    void PutFromComponentName (
        _bstr_t _arg1 );
    _bstr_t GetFromComponentName ( );
    void PutToComponentName (
        _bstr_t _arg1 );
    _bstr_t GetToComponentName ( );
    HRESULT Edit (
        long NumberOfPaths,
        SAFEARRAY * * PathArray,
        SAFEARRAY * * PathDirectionArray );
};

enum HarnessTypeConstants
{
    seHarnessType_Wire = 1,
    seHarnessType_Cable = 2,
    seHarnessType_Bundle = 3,
    seHarnessType_Wires = 4,
    seHarnessType_Cables = 5,
    seHarnessType_Bundles = 6,
    seHarnessType_Splice = 7,
    seHarnessType_Splices = 8
};

struct __declspec(uuid("1a643f09-1021-422b-a22e-10cbbc184848"))
_IWiresAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetType))
    enum HarnessTypeConstants Type;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    WirePtr Item (
        const _variant_t & Index );
    WirePtr Add (
        long NumberOfPaths,
        SAFEARRAY * * PathArray,
        SAFEARRAY * * PathDirectionArray,
        _bstr_t ConductorDescription );
    enum HarnessTypeConstants GetType ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Enum ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Wire * * Item ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ long NumberOfPaths,
        /*[in]*/ SAFEARRAY * * PathArray,
        /*[in]*/ SAFEARRAY * * PathDirectionArray,
        /*[in]*/ BSTR ConductorDescription,
        /*[out,retval]*/ struct Wire * * Wire ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum HarnessTypeConstants * Type ) = 0;
};

struct __declspec(uuid("61dc3311-8170-4102-b0f6-cbcc43c21fcc"))
_IWireAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetFromTerminalName,put=PutFromTerminalName))
    _bstr_t FromTerminalName;
    __declspec(property(get=GetToTerminalName,put=PutToTerminalName))
    _bstr_t ToTerminalName;
    __declspec(property(get=GetFromComponentName,put=PutFromComponentName))
    _bstr_t FromComponentName;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetMaterialType,put=PutMaterialType))
    _bstr_t MaterialType;
    __declspec(property(get=GetToComponentName,put=PutToComponentName))
    _bstr_t ToComponentName;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];
    __declspec(property(get=GetUseGlobalAdders,put=PutUseGlobalAdders))
    VARIANT_BOOL UseGlobalAdders;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetTrueLength))
    double TrueLength;
    __declspec(property(get=GetCutLength))
    double CutLength;
    __declspec(property(get=GetMass))
    double Mass;
    __declspec(property(get=GetAssemblyProperty))
    AssemblyPropertyPtr AssemblyProperty;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetColor,put=PutColor))
    long Color;
    __declspec(property(get=GetDescription,put=PutDescription))
    _bstr_t Description;
    __declspec(property(get=GetDiameter,put=PutDiameter))
    double Diameter;
    __declspec(property(get=GetGage,put=PutGage))
    _bstr_t Gage;
    __declspec(property(get=GetOuterDiameter,put=PutOuterDiameter))
    double OuterDiameter;
    __declspec(property(get=GetPartNumber,put=PutPartNumber))
    _bstr_t PartNumber;
    __declspec(property(get=GetType))
    enum HarnessTypeConstants Type;
    __declspec(property(get=GetMaterial,put=PutMaterial))
    _bstr_t Material;
    __declspec(property(get=GetLinearDensity,put=PutLinearDensity))
    double LinearDensity;
    __declspec(property(get=GetMinimumBendRadius,put=PutMinimumBendRadius))
    double MinimumBendRadius;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL Visible );
    HRESULT GetPaths (
        long * NumberOfPaths,
        SAFEARRAY * * PathArray,
        SAFEARRAY * * PathDirectionArray );
    HRESULT GetAllPaths (
        long * NumberOfPaths,
        SAFEARRAY * * PathArray );
    HRESULT GetOuterConductors (
        long * NumberOfConductors,
        SAFEARRAY * * ConductorArray );
    HRESULT GetTopMostConductors (
        long * NumberOfConductors,
        SAFEARRAY * * ConductorArray );
    HRESULT GetEndPoints (
        double * dStartX,
        double * dStartY,
        double * dStartZ,
        double * dEndX,
        double * dEndY,
        double * dEndZ );
    HRESULT Remove (
        long NumberOfConductors,
        SAFEARRAY * * ConductorArray );
    HRESULT Delete ( );
    VARIANT_BOOL GetUseGlobalAdders ( );
    void PutUseGlobalAdders (
        VARIANT_BOOL UseGlobalAdders );
    HRESULT GetAdders (
        double * dSlackAdder,
        double * dPureAdder,
        double * dHoleDiameterAdder,
        double * dBundleDiameterAdder );
    HRESULT SetAdders (
        double dSlackAdder,
        double dPureAdder,
        double dHoleDiameterAdder,
        double dBundleDiameterAdder );
    double GetTrueLength ( );
    double GetCutLength ( );
    double GetMass ( );
    AssemblyPropertyPtr GetAssemblyProperty ( );
    enum HarnessTypeConstants GetType ( );
    void PutName (
        _bstr_t Name );
    _bstr_t GetName ( );
    void PutColor (
        long Color );
    long GetColor ( );
    void PutDescription (
        _bstr_t Description );
    _bstr_t GetDescription ( );
    void PutOuterDiameter (
        double OuterDiameter );
    double GetOuterDiameter ( );
    void PutPartNumber (
        _bstr_t PartNumber );
    _bstr_t GetPartNumber ( );
    void PutLinearDensity (
        double LinearDensity );
    double GetLinearDensity ( );
    void PutMinimumBendRadius (
        double MinimumBendRadius );
    double GetMinimumBendRadius ( );
    HRESULT CreatePhysicalConductor ( );
    HRESULT DeletePhysicalConductor ( );
    void PutDiameter (
        double Diameter );
    double GetDiameter ( );
    void PutGage (
        _bstr_t Gage );
    _bstr_t GetGage ( );
    void PutMaterialType (
        _bstr_t MaterialType );
    _bstr_t GetMaterialType ( );
    void PutMaterial (
        _bstr_t Material );
    _bstr_t GetMaterial ( );
    void PutFromTerminalName (
        _bstr_t Name );
    _bstr_t GetFromTerminalName ( );
    void PutToTerminalName (
        _bstr_t Name );
    _bstr_t GetToTerminalName ( );
    void PutFromComponentName (
        _bstr_t Name );
    _bstr_t GetFromComponentName ( );
    void PutToComponentName (
        _bstr_t Name );
    _bstr_t GetToComponentName ( );
    HRESULT Edit (
        long NumberOfPaths,
        SAFEARRAY * * PathArray,
        SAFEARRAY * * PathDirectionArray );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall raw_GetPaths (
        /*[out]*/ long * NumberOfPaths,
        /*[in,out]*/ SAFEARRAY * * PathArray,
        /*[in,out]*/ SAFEARRAY * * PathDirectionArray ) = 0;
      virtual HRESULT __stdcall raw_GetAllPaths (
        /*[out]*/ long * NumberOfPaths,
        /*[in,out]*/ SAFEARRAY * * PathArray ) = 0;
      virtual HRESULT __stdcall raw_GetOuterConductors (
        /*[out]*/ long * NumberOfConductors,
        /*[in,out]*/ SAFEARRAY * * ConductorArray ) = 0;
      virtual HRESULT __stdcall raw_GetTopMostConductors (
        /*[out]*/ long * NumberOfConductors,
        /*[in,out]*/ SAFEARRAY * * ConductorArray ) = 0;
      virtual HRESULT __stdcall raw_GetEndPoints (
        /*[out]*/ double * dStartX,
        /*[out]*/ double * dStartY,
        /*[out]*/ double * dStartZ,
        /*[out]*/ double * dEndX,
        /*[out]*/ double * dEndY,
        /*[out]*/ double * dEndZ ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ long NumberOfConductors,
        /*[in]*/ SAFEARRAY * * ConductorArray ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_UseGlobalAdders (
        /*[out,retval]*/ VARIANT_BOOL * UseGlobalAdders ) = 0;
      virtual HRESULT __stdcall put_UseGlobalAdders (
        /*[in]*/ VARIANT_BOOL UseGlobalAdders ) = 0;
      virtual HRESULT __stdcall raw_GetAdders (
        /*[out]*/ double * dSlackAdder,
        /*[out]*/ double * dPureAdder,
        /*[out]*/ double * dHoleDiameterAdder,
        /*[out]*/ double * dBundleDiameterAdder ) = 0;
      virtual HRESULT __stdcall raw_SetAdders (
        /*[in]*/ double dSlackAdder,
        /*[in]*/ double dPureAdder,
        /*[in]*/ double dHoleDiameterAdder,
        /*[in]*/ double dBundleDiameterAdder ) = 0;
      virtual HRESULT __stdcall get_TrueLength (
        /*[out,retval]*/ double * TrueLength ) = 0;
      virtual HRESULT __stdcall get_CutLength (
        /*[out,retval]*/ double * CutLength ) = 0;
      virtual HRESULT __stdcall get_Mass (
        /*[out,retval]*/ double * Mass ) = 0;
      virtual HRESULT __stdcall get_AssemblyProperty (
        /*[out,retval]*/ struct AssemblyProperty * * Property ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum HarnessTypeConstants * Type ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Color (
        /*[in]*/ long Color ) = 0;
      virtual HRESULT __stdcall get_Color (
        /*[out,retval]*/ long * Color ) = 0;
      virtual HRESULT __stdcall put_Description (
        /*[in]*/ BSTR Description ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * Description ) = 0;
      virtual HRESULT __stdcall put_OuterDiameter (
        /*[in]*/ double OuterDiameter ) = 0;
      virtual HRESULT __stdcall get_OuterDiameter (
        /*[out,retval]*/ double * OuterDiameter ) = 0;
      virtual HRESULT __stdcall put_PartNumber (
        /*[in]*/ BSTR PartNumber ) = 0;
      virtual HRESULT __stdcall get_PartNumber (
        /*[out,retval]*/ BSTR * PartNumber ) = 0;
      virtual HRESULT __stdcall put_LinearDensity (
        /*[in]*/ double LinearDensity ) = 0;
      virtual HRESULT __stdcall get_LinearDensity (
        /*[out,retval]*/ double * LinearDensity ) = 0;
      virtual HRESULT __stdcall put_MinimumBendRadius (
        /*[in]*/ double MinimumBendRadius ) = 0;
      virtual HRESULT __stdcall get_MinimumBendRadius (
        /*[out,retval]*/ double * MinimumBendRadius ) = 0;
      virtual HRESULT __stdcall raw_CreatePhysicalConductor ( ) = 0;
      virtual HRESULT __stdcall raw_DeletePhysicalConductor ( ) = 0;
      virtual HRESULT __stdcall put_Diameter (
        /*[in]*/ double Diameter ) = 0;
      virtual HRESULT __stdcall get_Diameter (
        /*[out,retval]*/ double * Diameter ) = 0;
      virtual HRESULT __stdcall put_Gage (
        /*[in]*/ BSTR Gage ) = 0;
      virtual HRESULT __stdcall get_Gage (
        /*[out,retval]*/ BSTR * Gage ) = 0;
      virtual HRESULT __stdcall put_MaterialType (
        /*[in]*/ BSTR MaterialType ) = 0;
      virtual HRESULT __stdcall get_MaterialType (
        /*[out,retval]*/ BSTR * MaterialType ) = 0;
      virtual HRESULT __stdcall put_Material (
        /*[in]*/ BSTR Material ) = 0;
      virtual HRESULT __stdcall get_Material (
        /*[out,retval]*/ BSTR * Material ) = 0;
      virtual HRESULT __stdcall put_FromTerminalName (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_FromTerminalName (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_ToTerminalName (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_ToTerminalName (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_FromComponentName (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_FromComponentName (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_ToComponentName (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_ToComponentName (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall raw_Edit (
        /*[in]*/ long NumberOfPaths,
        /*[in]*/ SAFEARRAY * * PathArray,
        /*[in]*/ SAFEARRAY * * PathDirectionArray ) = 0;
};

struct __declspec(uuid("1ebfcf91-8560-4ae2-80e0-bf0e02784074"))
Cables : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetType))
    enum HarnessTypeConstants Type;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    CablePtr Item (
        const _variant_t & Index );
    CablePtr Add (
        long NumberOfPaths,
        SAFEARRAY * * PathArray,
        SAFEARRAY * * PathDirectionArray,
        long NumberOfWires,
        SAFEARRAY * * WireArray,
        SAFEARRAY * * SplitPathArray,
        SAFEARRAY * * SplitPathDirectionArray,
        _bstr_t ConductorDescription );
    enum HarnessTypeConstants GetType ( );
};

struct __declspec(uuid("d6c0379e-c428-421c-869a-3f2ac94dfb7d"))
Cable : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetFromTerminalName,put=PutFromTerminalName))
    _bstr_t FromTerminalName;
    __declspec(property(get=GetToTerminalName,put=PutToTerminalName))
    _bstr_t ToTerminalName;
    __declspec(property(get=GetFromComponentName,put=PutFromComponentName))
    _bstr_t FromComponentName;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetMaterialType,put=PutMaterialType))
    _bstr_t MaterialType;
    __declspec(property(get=GetToComponentName,put=PutToComponentName))
    _bstr_t ToComponentName;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];
    __declspec(property(get=GetUseGlobalAdders,put=PutUseGlobalAdders))
    VARIANT_BOOL UseGlobalAdders;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetTrueLength))
    double TrueLength;
    __declspec(property(get=GetCutLength))
    double CutLength;
    __declspec(property(get=GetMass))
    double Mass;
    __declspec(property(get=GetAssemblyProperty))
    AssemblyPropertyPtr AssemblyProperty;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetColor,put=PutColor))
    long Color;
    __declspec(property(get=GetDescription,put=PutDescription))
    _bstr_t Description;
    __declspec(property(get=GetDiameter,put=PutDiameter))
    double Diameter;
    __declspec(property(get=GetGage,put=PutGage))
    _bstr_t Gage;
    __declspec(property(get=GetOuterDiameter,put=PutOuterDiameter))
    double OuterDiameter;
    __declspec(property(get=GetPartNumber,put=PutPartNumber))
    _bstr_t PartNumber;
    __declspec(property(get=GetNumberOfConductors,put=PutNumberOfConductors))
    long NumberOfConductors;
    __declspec(property(get=GetType))
    enum HarnessTypeConstants Type;
    __declspec(property(get=GetMaterial,put=PutMaterial))
    _bstr_t Material;
    __declspec(property(get=GetLinearDensity,put=PutLinearDensity))
    double LinearDensity;
    __declspec(property(get=GetMinimumBendRadius,put=PutMinimumBendRadius))
    double MinimumBendRadius;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL _arg1 );
    HRESULT GetPaths (
        long * NumberOfPaths,
        SAFEARRAY * * PathArray,
        SAFEARRAY * * PathDirectionArray );
    HRESULT GetAllPaths (
        long * NumberOfPaths,
        SAFEARRAY * * PathArray );
    HRESULT GetOuterConductors (
        long * NumberOfConductors,
        SAFEARRAY * * ConductorArray );
    HRESULT GetTopMostConductors (
        long * NumberOfConductors,
        SAFEARRAY * * ConductorArray );
    HRESULT GetEndPoints (
        double * dStartX,
        double * dStartY,
        double * dStartZ,
        double * dEndX,
        double * dEndY,
        double * dEndZ );
    HRESULT Remove (
        long NumberOfConductors,
        SAFEARRAY * * ConductorArray );
    HRESULT Delete ( );
    VARIANT_BOOL GetUseGlobalAdders ( );
    void PutUseGlobalAdders (
        VARIANT_BOOL _arg1 );
    HRESULT GetAdders (
        double * dSlackAdder,
        double * dPureAdder,
        double * dHoleDiameterAdder,
        double * dBundleDiameterAdder );
    HRESULT SetAdders (
        double dSlackAdder,
        double dPureAdder,
        double dHoleDiameterAdder,
        double dBundleDiameterAdder );
    double GetTrueLength ( );
    double GetCutLength ( );
    double GetMass ( );
    AssemblyPropertyPtr GetAssemblyProperty ( );
    enum HarnessTypeConstants GetType ( );
    void PutName (
        _bstr_t _arg1 );
    _bstr_t GetName ( );
    void PutColor (
        long _arg1 );
    long GetColor ( );
    void PutDescription (
        _bstr_t _arg1 );
    _bstr_t GetDescription ( );
    void PutOuterDiameter (
        double _arg1 );
    double GetOuterDiameter ( );
    void PutPartNumber (
        _bstr_t _arg1 );
    _bstr_t GetPartNumber ( );
    void PutLinearDensity (
        double _arg1 );
    double GetLinearDensity ( );
    void PutMinimumBendRadius (
        double _arg1 );
    double GetMinimumBendRadius ( );
    HRESULT CreatePhysicalConductor ( );
    HRESULT DeletePhysicalConductor ( );
    void PutDiameter (
        double _arg1 );
    double GetDiameter ( );
    void PutGage (
        _bstr_t _arg1 );
    _bstr_t GetGage ( );
    void PutNumberOfConductors (
        long _arg1 );
    long GetNumberOfConductors ( );
    void PutMaterialType (
        _bstr_t _arg1 );
    _bstr_t GetMaterialType ( );
    void PutMaterial (
        _bstr_t _arg1 );
    _bstr_t GetMaterial ( );
    void PutFromTerminalName (
        _bstr_t _arg1 );
    _bstr_t GetFromTerminalName ( );
    void PutToTerminalName (
        _bstr_t _arg1 );
    _bstr_t GetToTerminalName ( );
    void PutFromComponentName (
        _bstr_t _arg1 );
    _bstr_t GetFromComponentName ( );
    void PutToComponentName (
        _bstr_t _arg1 );
    _bstr_t GetToComponentName ( );
    HRESULT GetWires (
        long * NumberOfWires,
        SAFEARRAY * * WireArray );
    HRESULT Edit (
        long NumberOfPaths,
        SAFEARRAY * * PathArray,
        SAFEARRAY * * PathDirectionArray,
        long NumberOfWires,
        SAFEARRAY * * WireArray,
        SAFEARRAY * * SplitPathArray,
        SAFEARRAY * * SplitPathDirectionArray );
};

struct __declspec(uuid("4c042f07-af0d-4aa5-8b2b-aebef7540c7f"))
_ICablesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetType))
    enum HarnessTypeConstants Type;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    CablePtr Item (
        const _variant_t & Index );
    CablePtr Add (
        long NumberOfPaths,
        SAFEARRAY * * PathArray,
        SAFEARRAY * * PathDirectionArray,
        long NumberOfWires,
        SAFEARRAY * * WireArray,
        SAFEARRAY * * SplitPathArray,
        SAFEARRAY * * SplitPathDirectionArray,
        _bstr_t ConductorDescription );
    enum HarnessTypeConstants GetType ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Enum ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Cable * * Item ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ long NumberOfPaths,
        /*[in]*/ SAFEARRAY * * PathArray,
        /*[in]*/ SAFEARRAY * * PathDirectionArray,
        /*[in]*/ long NumberOfWires,
        /*[in]*/ SAFEARRAY * * WireArray,
        /*[in]*/ SAFEARRAY * * SplitPathArray,
        /*[in]*/ SAFEARRAY * * SplitPathDirectionArray,
        /*[in]*/ BSTR ConductorDescription,
        /*[out,retval]*/ struct Cable * * Cable ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum HarnessTypeConstants * Type ) = 0;
};

struct __declspec(uuid("c187d74f-bfe0-4621-8391-3eae1ad0dbbd"))
_ICableAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetFromTerminalName,put=PutFromTerminalName))
    _bstr_t FromTerminalName;
    __declspec(property(get=GetToTerminalName,put=PutToTerminalName))
    _bstr_t ToTerminalName;
    __declspec(property(get=GetFromComponentName,put=PutFromComponentName))
    _bstr_t FromComponentName;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetMaterialType,put=PutMaterialType))
    _bstr_t MaterialType;
    __declspec(property(get=GetToComponentName,put=PutToComponentName))
    _bstr_t ToComponentName;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];
    __declspec(property(get=GetUseGlobalAdders,put=PutUseGlobalAdders))
    VARIANT_BOOL UseGlobalAdders;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetTrueLength))
    double TrueLength;
    __declspec(property(get=GetCutLength))
    double CutLength;
    __declspec(property(get=GetMass))
    double Mass;
    __declspec(property(get=GetAssemblyProperty))
    AssemblyPropertyPtr AssemblyProperty;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetColor,put=PutColor))
    long Color;
    __declspec(property(get=GetDescription,put=PutDescription))
    _bstr_t Description;
    __declspec(property(get=GetDiameter,put=PutDiameter))
    double Diameter;
    __declspec(property(get=GetGage,put=PutGage))
    _bstr_t Gage;
    __declspec(property(get=GetOuterDiameter,put=PutOuterDiameter))
    double OuterDiameter;
    __declspec(property(get=GetPartNumber,put=PutPartNumber))
    _bstr_t PartNumber;
    __declspec(property(get=GetNumberOfConductors,put=PutNumberOfConductors))
    long NumberOfConductors;
    __declspec(property(get=GetType))
    enum HarnessTypeConstants Type;
    __declspec(property(get=GetMaterial,put=PutMaterial))
    _bstr_t Material;
    __declspec(property(get=GetLinearDensity,put=PutLinearDensity))
    double LinearDensity;
    __declspec(property(get=GetMinimumBendRadius,put=PutMinimumBendRadius))
    double MinimumBendRadius;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL Visible );
    HRESULT GetPaths (
        long * NumberOfPaths,
        SAFEARRAY * * PathArray,
        SAFEARRAY * * PathDirectionArray );
    HRESULT GetAllPaths (
        long * NumberOfPaths,
        SAFEARRAY * * PathArray );
    HRESULT GetOuterConductors (
        long * NumberOfConductors,
        SAFEARRAY * * ConductorArray );
    HRESULT GetTopMostConductors (
        long * NumberOfConductors,
        SAFEARRAY * * ConductorArray );
    HRESULT GetEndPoints (
        double * dStartX,
        double * dStartY,
        double * dStartZ,
        double * dEndX,
        double * dEndY,
        double * dEndZ );
    HRESULT Remove (
        long NumberOfConductors,
        SAFEARRAY * * ConductorArray );
    HRESULT Delete ( );
    VARIANT_BOOL GetUseGlobalAdders ( );
    void PutUseGlobalAdders (
        VARIANT_BOOL UseGlobalAdders );
    HRESULT GetAdders (
        double * dSlackAdder,
        double * dPureAdder,
        double * dHoleDiameterAdder,
        double * dBundleDiameterAdder );
    HRESULT SetAdders (
        double dSlackAdder,
        double dPureAdder,
        double dHoleDiameterAdder,
        double dBundleDiameterAdder );
    double GetTrueLength ( );
    double GetCutLength ( );
    double GetMass ( );
    AssemblyPropertyPtr GetAssemblyProperty ( );
    enum HarnessTypeConstants GetType ( );
    void PutName (
        _bstr_t Name );
    _bstr_t GetName ( );
    void PutColor (
        long Color );
    long GetColor ( );
    void PutDescription (
        _bstr_t Description );
    _bstr_t GetDescription ( );
    void PutOuterDiameter (
        double OuterDiameter );
    double GetOuterDiameter ( );
    void PutPartNumber (
        _bstr_t PartNumber );
    _bstr_t GetPartNumber ( );
    void PutLinearDensity (
        double LinearDensity );
    double GetLinearDensity ( );
    void PutMinimumBendRadius (
        double MinimumBendRadius );
    double GetMinimumBendRadius ( );
    HRESULT CreatePhysicalConductor ( );
    HRESULT DeletePhysicalConductor ( );
    void PutDiameter (
        double Diameter );
    double GetDiameter ( );
    void PutGage (
        _bstr_t Gage );
    _bstr_t GetGage ( );
    void PutNumberOfConductors (
        long NumberOfConductors );
    long GetNumberOfConductors ( );
    void PutMaterialType (
        _bstr_t MaterialType );
    _bstr_t GetMaterialType ( );
    void PutMaterial (
        _bstr_t Material );
    _bstr_t GetMaterial ( );
    void PutFromTerminalName (
        _bstr_t Name );
    _bstr_t GetFromTerminalName ( );
    void PutToTerminalName (
        _bstr_t Name );
    _bstr_t GetToTerminalName ( );
    void PutFromComponentName (
        _bstr_t Name );
    _bstr_t GetFromComponentName ( );
    void PutToComponentName (
        _bstr_t Name );
    _bstr_t GetToComponentName ( );
    HRESULT GetWires (
        long * NumberOfWires,
        SAFEARRAY * * WireArray );
    HRESULT Edit (
        long NumberOfPaths,
        SAFEARRAY * * PathArray,
        SAFEARRAY * * PathDirectionArray,
        long NumberOfWires,
        SAFEARRAY * * WireArray,
        SAFEARRAY * * SplitPathArray,
        SAFEARRAY * * SplitPathDirectionArray );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall raw_GetPaths (
        /*[out]*/ long * NumberOfPaths,
        /*[in,out]*/ SAFEARRAY * * PathArray,
        /*[in,out]*/ SAFEARRAY * * PathDirectionArray ) = 0;
      virtual HRESULT __stdcall raw_GetAllPaths (
        /*[out]*/ long * NumberOfPaths,
        /*[in,out]*/ SAFEARRAY * * PathArray ) = 0;
      virtual HRESULT __stdcall raw_GetOuterConductors (
        /*[out]*/ long * NumberOfConductors,
        /*[in,out]*/ SAFEARRAY * * ConductorArray ) = 0;
      virtual HRESULT __stdcall raw_GetTopMostConductors (
        /*[out]*/ long * NumberOfConductors,
        /*[in,out]*/ SAFEARRAY * * ConductorArray ) = 0;
      virtual HRESULT __stdcall raw_GetEndPoints (
        /*[out]*/ double * dStartX,
        /*[out]*/ double * dStartY,
        /*[out]*/ double * dStartZ,
        /*[out]*/ double * dEndX,
        /*[out]*/ double * dEndY,
        /*[out]*/ double * dEndZ ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ long NumberOfConductors,
        /*[in]*/ SAFEARRAY * * ConductorArray ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_UseGlobalAdders (
        /*[out,retval]*/ VARIANT_BOOL * UseGlobalAdders ) = 0;
      virtual HRESULT __stdcall put_UseGlobalAdders (
        /*[in]*/ VARIANT_BOOL UseGlobalAdders ) = 0;
      virtual HRESULT __stdcall raw_GetAdders (
        /*[out]*/ double * dSlackAdder,
        /*[out]*/ double * dPureAdder,
        /*[out]*/ double * dHoleDiameterAdder,
        /*[out]*/ double * dBundleDiameterAdder ) = 0;
      virtual HRESULT __stdcall raw_SetAdders (
        /*[in]*/ double dSlackAdder,
        /*[in]*/ double dPureAdder,
        /*[in]*/ double dHoleDiameterAdder,
        /*[in]*/ double dBundleDiameterAdder ) = 0;
      virtual HRESULT __stdcall get_TrueLength (
        /*[out,retval]*/ double * TrueLength ) = 0;
      virtual HRESULT __stdcall get_CutLength (
        /*[out,retval]*/ double * CutLength ) = 0;
      virtual HRESULT __stdcall get_Mass (
        /*[out,retval]*/ double * Mass ) = 0;
      virtual HRESULT __stdcall get_AssemblyProperty (
        /*[out,retval]*/ struct AssemblyProperty * * Property ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum HarnessTypeConstants * Type ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Color (
        /*[in]*/ long Color ) = 0;
      virtual HRESULT __stdcall get_Color (
        /*[out,retval]*/ long * Color ) = 0;
      virtual HRESULT __stdcall put_Description (
        /*[in]*/ BSTR Description ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * Description ) = 0;
      virtual HRESULT __stdcall put_OuterDiameter (
        /*[in]*/ double OuterDiameter ) = 0;
      virtual HRESULT __stdcall get_OuterDiameter (
        /*[out,retval]*/ double * OuterDiameter ) = 0;
      virtual HRESULT __stdcall put_PartNumber (
        /*[in]*/ BSTR PartNumber ) = 0;
      virtual HRESULT __stdcall get_PartNumber (
        /*[out,retval]*/ BSTR * PartNumber ) = 0;
      virtual HRESULT __stdcall put_LinearDensity (
        /*[in]*/ double LinearDensity ) = 0;
      virtual HRESULT __stdcall get_LinearDensity (
        /*[out,retval]*/ double * LinearDensity ) = 0;
      virtual HRESULT __stdcall put_MinimumBendRadius (
        /*[in]*/ double MinimumBendRadius ) = 0;
      virtual HRESULT __stdcall get_MinimumBendRadius (
        /*[out,retval]*/ double * MinimumBendRadius ) = 0;
      virtual HRESULT __stdcall raw_CreatePhysicalConductor ( ) = 0;
      virtual HRESULT __stdcall raw_DeletePhysicalConductor ( ) = 0;
      virtual HRESULT __stdcall put_Diameter (
        /*[in]*/ double Diameter ) = 0;
      virtual HRESULT __stdcall get_Diameter (
        /*[out,retval]*/ double * Diameter ) = 0;
      virtual HRESULT __stdcall put_Gage (
        /*[in]*/ BSTR Gage ) = 0;
      virtual HRESULT __stdcall get_Gage (
        /*[out,retval]*/ BSTR * Gage ) = 0;
      virtual HRESULT __stdcall put_NumberOfConductors (
        /*[in]*/ long NumberOfConductors ) = 0;
      virtual HRESULT __stdcall get_NumberOfConductors (
        /*[out,retval]*/ long * NumberOfConductors ) = 0;
      virtual HRESULT __stdcall put_MaterialType (
        /*[in]*/ BSTR MaterialType ) = 0;
      virtual HRESULT __stdcall get_MaterialType (
        /*[out,retval]*/ BSTR * MaterialType ) = 0;
      virtual HRESULT __stdcall put_Material (
        /*[in]*/ BSTR Material ) = 0;
      virtual HRESULT __stdcall get_Material (
        /*[out,retval]*/ BSTR * Material ) = 0;
      virtual HRESULT __stdcall put_FromTerminalName (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_FromTerminalName (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_ToTerminalName (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_ToTerminalName (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_FromComponentName (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_FromComponentName (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_ToComponentName (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_ToComponentName (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall raw_GetWires (
        /*[out]*/ long * NumberOfWires,
        /*[in,out]*/ SAFEARRAY * * WireArray ) = 0;
      virtual HRESULT __stdcall raw_Edit (
        /*[in]*/ long NumberOfPaths,
        /*[in]*/ SAFEARRAY * * PathArray,
        /*[in]*/ SAFEARRAY * * PathDirectionArray,
        /*[in]*/ long NumberOfWires,
        /*[in]*/ SAFEARRAY * * WireArray,
        /*[in]*/ SAFEARRAY * * SplitPathArray,
        /*[in]*/ SAFEARRAY * * SplitPathDirectionArray ) = 0;
};

struct __declspec(uuid("9e4e11ce-71eb-482b-b8e7-f1dfaf52ca85"))
Bundles : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetType))
    enum HarnessTypeConstants Type;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    BundlePtr Item (
        const _variant_t & Index );
    BundlePtr Add (
        long NumberOfPaths,
        SAFEARRAY * * PathArray,
        SAFEARRAY * * PathDirectionArray,
        long NumberOfConductors,
        SAFEARRAY * * ConductorArray,
        SAFEARRAY * * SplitPathArray,
        SAFEARRAY * * SplitPathDirectionArray,
        _bstr_t ConductorDescription );
    enum HarnessTypeConstants GetType ( );
};

struct __declspec(uuid("0fc27e30-c5d2-41f7-aa1a-5248e6ef70d3"))
Bundle : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetType))
    enum HarnessTypeConstants Type;
    __declspec(property(get=GetLinearDensity,put=PutLinearDensity))
    double LinearDensity;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetMinimumBendRadius,put=PutMinimumBendRadius))
    double MinimumBendRadius;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetUseGlobalAdders,put=PutUseGlobalAdders))
    VARIANT_BOOL UseGlobalAdders;
    __declspec(property(get=GetTrueLength))
    double TrueLength;
    __declspec(property(get=GetCutLength))
    double CutLength;
    __declspec(property(get=GetMass))
    double Mass;
    __declspec(property(get=GetAssemblyProperty))
    AssemblyPropertyPtr AssemblyProperty;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetColor,put=PutColor))
    long Color;
    __declspec(property(get=GetDescription,put=PutDescription))
    _bstr_t Description;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];
    __declspec(property(get=GetOuterDiameter,put=PutOuterDiameter))
    double OuterDiameter;
    __declspec(property(get=GetPartNumber,put=PutPartNumber))
    _bstr_t PartNumber;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL _arg1 );
    HRESULT GetPaths (
        long * NumberOfPaths,
        SAFEARRAY * * PathArray,
        SAFEARRAY * * PathDirectionArray );
    HRESULT GetAllPaths (
        long * NumberOfPaths,
        SAFEARRAY * * PathArray );
    HRESULT GetOuterConductors (
        long * NumberOfConductors,
        SAFEARRAY * * ConductorArray );
    HRESULT GetTopMostConductors (
        long * NumberOfConductors,
        SAFEARRAY * * ConductorArray );
    HRESULT GetEndPoints (
        double * dStartX,
        double * dStartY,
        double * dStartZ,
        double * dEndX,
        double * dEndY,
        double * dEndZ );
    HRESULT Remove (
        long NumberOfConductors,
        SAFEARRAY * * ConductorArray );
    HRESULT Delete ( );
    VARIANT_BOOL GetUseGlobalAdders ( );
    void PutUseGlobalAdders (
        VARIANT_BOOL _arg1 );
    HRESULT GetAdders (
        double * dSlackAdder,
        double * dPureAdder,
        double * dHoleDiameterAdder,
        double * dBundleDiameterAdder );
    HRESULT SetAdders (
        double dSlackAdder,
        double dPureAdder,
        double dHoleDiameterAdder,
        double dBundleDiameterAdder );
    double GetTrueLength ( );
    double GetCutLength ( );
    double GetMass ( );
    AssemblyPropertyPtr GetAssemblyProperty ( );
    enum HarnessTypeConstants GetType ( );
    void PutName (
        _bstr_t _arg1 );
    _bstr_t GetName ( );
    void PutColor (
        long _arg1 );
    long GetColor ( );
    void PutDescription (
        _bstr_t _arg1 );
    _bstr_t GetDescription ( );
    void PutOuterDiameter (
        double _arg1 );
    double GetOuterDiameter ( );
    void PutPartNumber (
        _bstr_t _arg1 );
    _bstr_t GetPartNumber ( );
    void PutLinearDensity (
        double _arg1 );
    double GetLinearDensity ( );
    void PutMinimumBendRadius (
        double _arg1 );
    double GetMinimumBendRadius ( );
    HRESULT CreatePhysicalConductor ( );
    HRESULT DeletePhysicalConductor ( );
    HRESULT GetConductors (
        long * NumberOfConductors,
        SAFEARRAY * * ConductorArray );
    HRESULT Edit (
        long NumberOfPaths,
        SAFEARRAY * * PathArray,
        SAFEARRAY * * PathDirectionArray,
        long NumberOfConductors,
        SAFEARRAY * * ConductorArray,
        SAFEARRAY * * SplitPathArray,
        SAFEARRAY * * SplitPathDirectionArray );
};

struct __declspec(uuid("45a60e1d-5f32-4fc2-af5b-8685280c6014"))
_IBundlesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetType))
    enum HarnessTypeConstants Type;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    BundlePtr Item (
        const _variant_t & Index );
    BundlePtr Add (
        long NumberOfPaths,
        SAFEARRAY * * PathArray,
        SAFEARRAY * * PathDirectionArray,
        long NumberOfConductors,
        SAFEARRAY * * ConductorArray,
        SAFEARRAY * * SplitPathArray,
        SAFEARRAY * * SplitPathDirectionArray,
        _bstr_t ConductorDescription );
    enum HarnessTypeConstants GetType ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Enum ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Bundle * * Item ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ long NumberOfPaths,
        /*[in]*/ SAFEARRAY * * PathArray,
        /*[in]*/ SAFEARRAY * * PathDirectionArray,
        /*[in]*/ long NumberOfConductors,
        /*[in]*/ SAFEARRAY * * ConductorArray,
        /*[in]*/ SAFEARRAY * * SplitPathArray,
        /*[in]*/ SAFEARRAY * * SplitPathDirectionArray,
        /*[in]*/ BSTR ConductorDescription,
        /*[out,retval]*/ struct Bundle * * Bundle ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum HarnessTypeConstants * Type ) = 0;
};

struct __declspec(uuid("a92e8a24-c405-48a3-8efc-5d0a1c0ce518"))
_IBundleAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetType))
    enum HarnessTypeConstants Type;
    __declspec(property(get=GetLinearDensity,put=PutLinearDensity))
    double LinearDensity;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetMinimumBendRadius,put=PutMinimumBendRadius))
    double MinimumBendRadius;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetUseGlobalAdders,put=PutUseGlobalAdders))
    VARIANT_BOOL UseGlobalAdders;
    __declspec(property(get=GetTrueLength))
    double TrueLength;
    __declspec(property(get=GetCutLength))
    double CutLength;
    __declspec(property(get=GetMass))
    double Mass;
    __declspec(property(get=GetAssemblyProperty))
    AssemblyPropertyPtr AssemblyProperty;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetColor,put=PutColor))
    long Color;
    __declspec(property(get=GetDescription,put=PutDescription))
    _bstr_t Description;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];
    __declspec(property(get=GetOuterDiameter,put=PutOuterDiameter))
    double OuterDiameter;
    __declspec(property(get=GetPartNumber,put=PutPartNumber))
    _bstr_t PartNumber;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL Visible );
    HRESULT GetPaths (
        long * NumberOfPaths,
        SAFEARRAY * * PathArray,
        SAFEARRAY * * PathDirectionArray );
    HRESULT GetAllPaths (
        long * NumberOfPaths,
        SAFEARRAY * * PathArray );
    HRESULT GetOuterConductors (
        long * NumberOfConductors,
        SAFEARRAY * * ConductorArray );
    HRESULT GetTopMostConductors (
        long * NumberOfConductors,
        SAFEARRAY * * ConductorArray );
    HRESULT GetEndPoints (
        double * dStartX,
        double * dStartY,
        double * dStartZ,
        double * dEndX,
        double * dEndY,
        double * dEndZ );
    HRESULT Remove (
        long NumberOfConductors,
        SAFEARRAY * * ConductorArray );
    HRESULT Delete ( );
    VARIANT_BOOL GetUseGlobalAdders ( );
    void PutUseGlobalAdders (
        VARIANT_BOOL UseGlobalAdders );
    HRESULT GetAdders (
        double * dSlackAdder,
        double * dPureAdder,
        double * dHoleDiameterAdder,
        double * dBundleDiameterAdder );
    HRESULT SetAdders (
        double dSlackAdder,
        double dPureAdder,
        double dHoleDiameterAdder,
        double dBundleDiameterAdder );
    double GetTrueLength ( );
    double GetCutLength ( );
    double GetMass ( );
    AssemblyPropertyPtr GetAssemblyProperty ( );
    enum HarnessTypeConstants GetType ( );
    void PutName (
        _bstr_t Name );
    _bstr_t GetName ( );
    void PutColor (
        long Color );
    long GetColor ( );
    void PutDescription (
        _bstr_t Description );
    _bstr_t GetDescription ( );
    void PutOuterDiameter (
        double OuterDiameter );
    double GetOuterDiameter ( );
    void PutPartNumber (
        _bstr_t PartNumber );
    _bstr_t GetPartNumber ( );
    void PutLinearDensity (
        double LinearDensity );
    double GetLinearDensity ( );
    void PutMinimumBendRadius (
        double MinimumBendRadius );
    double GetMinimumBendRadius ( );
    HRESULT CreatePhysicalConductor ( );
    HRESULT DeletePhysicalConductor ( );
    HRESULT GetConductors (
        long * NumberOfConductors,
        SAFEARRAY * * ConductorArray );
    HRESULT Edit (
        long NumberOfPaths,
        SAFEARRAY * * PathArray,
        SAFEARRAY * * PathDirectionArray,
        long NumberOfConductors,
        SAFEARRAY * * ConductorArray,
        SAFEARRAY * * SplitPathArray,
        SAFEARRAY * * SplitPathDirectionArray );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall raw_GetPaths (
        /*[out]*/ long * NumberOfPaths,
        /*[in,out]*/ SAFEARRAY * * PathArray,
        /*[in,out]*/ SAFEARRAY * * PathDirectionArray ) = 0;
      virtual HRESULT __stdcall raw_GetAllPaths (
        /*[out]*/ long * NumberOfPaths,
        /*[in,out]*/ SAFEARRAY * * PathArray ) = 0;
      virtual HRESULT __stdcall raw_GetOuterConductors (
        /*[out]*/ long * NumberOfConductors,
        /*[in,out]*/ SAFEARRAY * * ConductorArray ) = 0;
      virtual HRESULT __stdcall raw_GetTopMostConductors (
        /*[out]*/ long * NumberOfConductors,
        /*[in,out]*/ SAFEARRAY * * ConductorArray ) = 0;
      virtual HRESULT __stdcall raw_GetEndPoints (
        /*[out]*/ double * dStartX,
        /*[out]*/ double * dStartY,
        /*[out]*/ double * dStartZ,
        /*[out]*/ double * dEndX,
        /*[out]*/ double * dEndY,
        /*[out]*/ double * dEndZ ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ long NumberOfConductors,
        /*[in]*/ SAFEARRAY * * ConductorArray ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_UseGlobalAdders (
        /*[out,retval]*/ VARIANT_BOOL * UseGlobalAdders ) = 0;
      virtual HRESULT __stdcall put_UseGlobalAdders (
        /*[in]*/ VARIANT_BOOL UseGlobalAdders ) = 0;
      virtual HRESULT __stdcall raw_GetAdders (
        /*[out]*/ double * dSlackAdder,
        /*[out]*/ double * dPureAdder,
        /*[out]*/ double * dHoleDiameterAdder,
        /*[out]*/ double * dBundleDiameterAdder ) = 0;
      virtual HRESULT __stdcall raw_SetAdders (
        /*[in]*/ double dSlackAdder,
        /*[in]*/ double dPureAdder,
        /*[in]*/ double dHoleDiameterAdder,
        /*[in]*/ double dBundleDiameterAdder ) = 0;
      virtual HRESULT __stdcall get_TrueLength (
        /*[out,retval]*/ double * TrueLength ) = 0;
      virtual HRESULT __stdcall get_CutLength (
        /*[out,retval]*/ double * CutLength ) = 0;
      virtual HRESULT __stdcall get_Mass (
        /*[out,retval]*/ double * Mass ) = 0;
      virtual HRESULT __stdcall get_AssemblyProperty (
        /*[out,retval]*/ struct AssemblyProperty * * Property ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum HarnessTypeConstants * Type ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Color (
        /*[in]*/ long Color ) = 0;
      virtual HRESULT __stdcall get_Color (
        /*[out,retval]*/ long * Color ) = 0;
      virtual HRESULT __stdcall put_Description (
        /*[in]*/ BSTR Description ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * Description ) = 0;
      virtual HRESULT __stdcall put_OuterDiameter (
        /*[in]*/ double OuterDiameter ) = 0;
      virtual HRESULT __stdcall get_OuterDiameter (
        /*[out,retval]*/ double * OuterDiameter ) = 0;
      virtual HRESULT __stdcall put_PartNumber (
        /*[in]*/ BSTR PartNumber ) = 0;
      virtual HRESULT __stdcall get_PartNumber (
        /*[out,retval]*/ BSTR * PartNumber ) = 0;
      virtual HRESULT __stdcall put_LinearDensity (
        /*[in]*/ double LinearDensity ) = 0;
      virtual HRESULT __stdcall get_LinearDensity (
        /*[out,retval]*/ double * LinearDensity ) = 0;
      virtual HRESULT __stdcall put_MinimumBendRadius (
        /*[in]*/ double MinimumBendRadius ) = 0;
      virtual HRESULT __stdcall get_MinimumBendRadius (
        /*[out,retval]*/ double * MinimumBendRadius ) = 0;
      virtual HRESULT __stdcall raw_CreatePhysicalConductor ( ) = 0;
      virtual HRESULT __stdcall raw_DeletePhysicalConductor ( ) = 0;
      virtual HRESULT __stdcall raw_GetConductors (
        /*[out]*/ long * NumberOfConductors,
        /*[in,out]*/ SAFEARRAY * * ConductorArray ) = 0;
      virtual HRESULT __stdcall raw_Edit (
        /*[in]*/ long NumberOfPaths,
        /*[in]*/ SAFEARRAY * * PathArray,
        /*[in]*/ SAFEARRAY * * PathDirectionArray,
        /*[in]*/ long NumberOfConductors,
        /*[in]*/ SAFEARRAY * * ConductorArray,
        /*[in]*/ SAFEARRAY * * SplitPathArray,
        /*[in]*/ SAFEARRAY * * SplitPathDirectionArray ) = 0;
};

struct __declspec(uuid("dee1d93d-7b22-4689-adb5-2f4cb0ae6f2e"))
Splices : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetType))
    enum HarnessTypeConstants Type;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    SplicePtr Item (
        const _variant_t & Index );
    SplicePtr Add (
        double dSpliceX,
        double dSpliceY,
        double dSpliceZ,
        long NumberOfConductors,
        SAFEARRAY * * ConductorArray,
        _bstr_t ConductorDescription );
    enum HarnessTypeConstants GetType ( );
};

struct __declspec(uuid("bd16bbb7-c509-46e9-bb5c-f05cf0284849"))
Splice : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetType))
    enum HarnessTypeConstants Type;
    __declspec(property(get=GetMaterial,put=PutMaterial))
    _bstr_t Material;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetMaterialType,put=PutMaterialType))
    _bstr_t MaterialType;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetAssemblyProperty))
    AssemblyPropertyPtr AssemblyProperty;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetColor,put=PutColor))
    long Color;
    __declspec(property(get=GetDescription,put=PutDescription))
    _bstr_t Description;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];
    __declspec(property(get=GetGage,put=PutGage))
    _bstr_t Gage;
    __declspec(property(get=GetOuterDiameter,put=PutOuterDiameter))
    double OuterDiameter;
    __declspec(property(get=GetPartNumber,put=PutPartNumber))
    _bstr_t PartNumber;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL _arg1 );
    void PutGage (
        _bstr_t _arg1 );
    _bstr_t GetGage ( );
    void PutMaterialType (
        _bstr_t _arg1 );
    _bstr_t GetMaterialType ( );
    void PutMaterial (
        _bstr_t _arg1 );
    _bstr_t GetMaterial ( );
    HRESULT GetOuterConductors (
        long * NumberOfConductors,
        SAFEARRAY * * ConductorArray );
    HRESULT GetTopMostConductors (
        long * NumberOfConductors,
        SAFEARRAY * * ConductorArray );
    HRESULT Remove (
        long NumberOfConductors,
        SAFEARRAY * * ConductorArray );
    HRESULT Delete ( );
    AssemblyPropertyPtr GetAssemblyProperty ( );
    enum HarnessTypeConstants GetType ( );
    void PutName (
        _bstr_t _arg1 );
    _bstr_t GetName ( );
    void PutColor (
        long _arg1 );
    long GetColor ( );
    void PutDescription (
        _bstr_t _arg1 );
    _bstr_t GetDescription ( );
    void PutOuterDiameter (
        double _arg1 );
    double GetOuterDiameter ( );
    void PutPartNumber (
        _bstr_t _arg1 );
    _bstr_t GetPartNumber ( );
    HRESULT CreatePhysicalConductor ( );
    HRESULT DeletePhysicalConductor ( );
    HRESULT GetSplicePosition (
        double * dSpliceX,
        double * dSpliceY,
        double * dSpliceZ );
    HRESULT GetConductors (
        long * NumberOfConductors,
        SAFEARRAY * * ConductorArray );
    HRESULT AddConductors (
        long NumberOfConductors,
        SAFEARRAY * * ConductorArray );
    HRESULT Edit (
        double dSpliceX,
        double dSpliceY,
        double dSpliceZ,
        long NumberOfConductors,
        SAFEARRAY * * ConductorArray );
};

struct __declspec(uuid("f9badebc-b860-4406-9557-a52f6f9292ba"))
_ISplicesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetType))
    enum HarnessTypeConstants Type;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    SplicePtr Item (
        const _variant_t & Index );
    SplicePtr Add (
        double dSpliceX,
        double dSpliceY,
        double dSpliceZ,
        long NumberOfConductors,
        SAFEARRAY * * ConductorArray,
        _bstr_t ConductorDescription );
    enum HarnessTypeConstants GetType ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Enum ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Splice * * Item ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ double dSpliceX,
        /*[in]*/ double dSpliceY,
        /*[in]*/ double dSpliceZ,
        /*[in]*/ long NumberOfConductors,
        /*[in]*/ SAFEARRAY * * ConductorArray,
        /*[in]*/ BSTR ConductorDescription,
        /*[out,retval]*/ struct Splice * * Splice ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum HarnessTypeConstants * Type ) = 0;
};

struct __declspec(uuid("c6824c19-5a3d-402e-a4d7-4885021c1772"))
_ISpliceAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetType))
    enum HarnessTypeConstants Type;
    __declspec(property(get=GetMaterial,put=PutMaterial))
    _bstr_t Material;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetMaterialType,put=PutMaterialType))
    _bstr_t MaterialType;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetAssemblyProperty))
    AssemblyPropertyPtr AssemblyProperty;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetColor,put=PutColor))
    long Color;
    __declspec(property(get=GetDescription,put=PutDescription))
    _bstr_t Description;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];
    __declspec(property(get=GetGage,put=PutGage))
    _bstr_t Gage;
    __declspec(property(get=GetOuterDiameter,put=PutOuterDiameter))
    double OuterDiameter;
    __declspec(property(get=GetPartNumber,put=PutPartNumber))
    _bstr_t PartNumber;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL Visible );
    void PutGage (
        _bstr_t Gage );
    _bstr_t GetGage ( );
    void PutMaterialType (
        _bstr_t MaterialType );
    _bstr_t GetMaterialType ( );
    void PutMaterial (
        _bstr_t Material );
    _bstr_t GetMaterial ( );
    HRESULT GetOuterConductors (
        long * NumberOfConductors,
        SAFEARRAY * * ConductorArray );
    HRESULT GetTopMostConductors (
        long * NumberOfConductors,
        SAFEARRAY * * ConductorArray );
    HRESULT Remove (
        long NumberOfConductors,
        SAFEARRAY * * ConductorArray );
    HRESULT Delete ( );
    AssemblyPropertyPtr GetAssemblyProperty ( );
    enum HarnessTypeConstants GetType ( );
    void PutName (
        _bstr_t Name );
    _bstr_t GetName ( );
    void PutColor (
        long Color );
    long GetColor ( );
    void PutDescription (
        _bstr_t Description );
    _bstr_t GetDescription ( );
    void PutOuterDiameter (
        double OuterDiameter );
    double GetOuterDiameter ( );
    void PutPartNumber (
        _bstr_t PartNumber );
    _bstr_t GetPartNumber ( );
    HRESULT CreatePhysicalConductor ( );
    HRESULT DeletePhysicalConductor ( );
    HRESULT GetSplicePosition (
        double * dSpliceX,
        double * dSpliceY,
        double * dSpliceZ );
    HRESULT GetConductors (
        long * NumberOfConductors,
        SAFEARRAY * * ConductorArray );
    HRESULT AddConductors (
        long NumberOfConductors,
        SAFEARRAY * * ConductorArray );
    HRESULT Edit (
        double dSpliceX,
        double dSpliceY,
        double dSpliceZ,
        long NumberOfConductors,
        SAFEARRAY * * ConductorArray );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall put_Gage (
        /*[in]*/ BSTR Gage ) = 0;
      virtual HRESULT __stdcall get_Gage (
        /*[out,retval]*/ BSTR * Gage ) = 0;
      virtual HRESULT __stdcall put_MaterialType (
        /*[in]*/ BSTR MaterialType ) = 0;
      virtual HRESULT __stdcall get_MaterialType (
        /*[out,retval]*/ BSTR * MaterialType ) = 0;
      virtual HRESULT __stdcall put_Material (
        /*[in]*/ BSTR Material ) = 0;
      virtual HRESULT __stdcall get_Material (
        /*[out,retval]*/ BSTR * Material ) = 0;
      virtual HRESULT __stdcall raw_GetOuterConductors (
        /*[out]*/ long * NumberOfConductors,
        /*[in,out]*/ SAFEARRAY * * ConductorArray ) = 0;
      virtual HRESULT __stdcall raw_GetTopMostConductors (
        /*[out]*/ long * NumberOfConductors,
        /*[in,out]*/ SAFEARRAY * * ConductorArray ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ long NumberOfConductors,
        /*[in]*/ SAFEARRAY * * ConductorArray ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_AssemblyProperty (
        /*[out,retval]*/ struct AssemblyProperty * * Property ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum HarnessTypeConstants * Type ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Color (
        /*[in]*/ long Color ) = 0;
      virtual HRESULT __stdcall get_Color (
        /*[out,retval]*/ long * Color ) = 0;
      virtual HRESULT __stdcall put_Description (
        /*[in]*/ BSTR Description ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * Description ) = 0;
      virtual HRESULT __stdcall put_OuterDiameter (
        /*[in]*/ double OuterDiameter ) = 0;
      virtual HRESULT __stdcall get_OuterDiameter (
        /*[out,retval]*/ double * OuterDiameter ) = 0;
      virtual HRESULT __stdcall put_PartNumber (
        /*[in]*/ BSTR PartNumber ) = 0;
      virtual HRESULT __stdcall get_PartNumber (
        /*[out,retval]*/ BSTR * PartNumber ) = 0;
      virtual HRESULT __stdcall raw_CreatePhysicalConductor ( ) = 0;
      virtual HRESULT __stdcall raw_DeletePhysicalConductor ( ) = 0;
      virtual HRESULT __stdcall raw_GetSplicePosition (
        /*[out]*/ double * dSpliceX,
        /*[out]*/ double * dSpliceY,
        /*[out]*/ double * dSpliceZ ) = 0;
      virtual HRESULT __stdcall raw_GetConductors (
        /*[out]*/ long * NumberOfConductors,
        /*[in,out]*/ SAFEARRAY * * ConductorArray ) = 0;
      virtual HRESULT __stdcall raw_AddConductors (
        /*[in]*/ long NumberOfConductors,
        /*[in]*/ SAFEARRAY * * ConductorArray ) = 0;
      virtual HRESULT __stdcall raw_Edit (
        /*[in]*/ double dSpliceX,
        /*[in]*/ double dSpliceY,
        /*[in]*/ double dSpliceZ,
        /*[in]*/ long NumberOfConductors,
        /*[in]*/ SAFEARRAY * * ConductorArray ) = 0;
};

enum HarnessSaveAsEcadStatusConstants
{
    seHarnessSaveAsEcadStatus_Success = 0,
    seHarnessSaveAsEcadStatus_Failed = 1,
    seHarnessSaveAsEcadStatus_FailedBadArgs = 2,
    seHarnessSaveAsEcadStatus_FailedNoComps = 3,
    seHarnessSaveAsEcadStatus_FailedNoConns = 4,
    seHarnessSaveAsEcadStatus_FailedDupComps = 5,
    seHarnessSaveAsEcadStatus_FailedDupConns = 6,
    seHarnessSaveAsEcadStatus_FailedComps = 7,
    seHarnessSaveAsEcadStatus_FailedConns = 8,
    seHarnessSaveAsEcadStatus_FailedBoth = 9,
    seHarnessSaveAsEcadStatus_FailedBadConfig = 10
};

enum SaveAsHarnessTopologyStatusConstants
{
    seSaveAsHarnessTopologyStatus_Success = 0,
    seSaveAsHarnessTopologyStatus_FailedBadArgs = 1
};

enum SaveAsHarnessFileFormats
{
    HarnessFileFormatHX2ML = 0,
    HarnessFileFormatDSI = 1,
    HarnessFileFormatX2ML = 2
};

struct __declspec(uuid("cee9de92-2531-49ce-82a3-dfb3159a480f"))
_IHarnessAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetWires))
    WiresPtr Wires;
    __declspec(property(get=GetCables))
    CablesPtr Cables;
    __declspec(property(get=GetBundles))
    BundlesPtr Bundles;
    __declspec(property(get=GetSplices))
    SplicesPtr Splices;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    WiresPtr GetWires ( );
    CablesPtr GetCables ( );
    BundlesPtr GetBundles ( );
    SplicesPtr GetSplices ( );
    HRESULT GetTopMostConductors (
        long * NumberOfConductors,
        SAFEARRAY * * ConductorArray );
    HRESULT SaveAsEcad (
        enum HarnessSaveAsEcadStatusConstants * HarnessSaveAsEcadStatus,
        _bstr_t CompanyName,
        const _variant_t & ComponentFilePath = vtMissing,
        const _variant_t & ConnectionFilePath = vtMissing );
    HRESULT CreatePhysicalConductor ( );
    HRESULT DeletePhysicalConductor ( );
    HRESULT SaveAsHarnessTopology (
        enum SaveAsHarnessTopologyStatusConstants * SaveAsHarnessTopologyStatus,
        const _variant_t & HarnessFilePath );
    HRESULT SaveAsHarnessTopologyEx (
        enum SaveAsHarnessTopologyStatusConstants * SaveAsHarnessTopologyStatus,
        const _variant_t & HarnessFilePath,
        enum SaveAsHarnessFileFormats SaveAsHarnessFileFormat );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Wires (
        /*[out,retval]*/ struct Wires * * Wires ) = 0;
      virtual HRESULT __stdcall get_Cables (
        /*[out,retval]*/ struct Cables * * Cables ) = 0;
      virtual HRESULT __stdcall get_Bundles (
        /*[out,retval]*/ struct Bundles * * Bundles ) = 0;
      virtual HRESULT __stdcall get_Splices (
        /*[out,retval]*/ struct Splices * * Splices ) = 0;
      virtual HRESULT __stdcall raw_GetTopMostConductors (
        /*[out]*/ long * NumberOfConductors,
        /*[in,out]*/ SAFEARRAY * * ConductorArray ) = 0;
      virtual HRESULT __stdcall raw_SaveAsEcad (
        /*[out]*/ enum HarnessSaveAsEcadStatusConstants * HarnessSaveAsEcadStatus,
        /*[in]*/ BSTR CompanyName,
        /*[in]*/ VARIANT ComponentFilePath = vtMissing,
        /*[in]*/ VARIANT ConnectionFilePath = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_CreatePhysicalConductor ( ) = 0;
      virtual HRESULT __stdcall raw_DeletePhysicalConductor ( ) = 0;
      virtual HRESULT __stdcall raw_SaveAsHarnessTopology (
        /*[out]*/ enum SaveAsHarnessTopologyStatusConstants * SaveAsHarnessTopologyStatus,
        /*[in]*/ VARIANT HarnessFilePath ) = 0;
      virtual HRESULT __stdcall raw_SaveAsHarnessTopologyEx (
        /*[out]*/ enum SaveAsHarnessTopologyStatusConstants * SaveAsHarnessTopologyStatus,
        /*[in]*/ VARIANT HarnessFilePath,
        /*[in]*/ enum SaveAsHarnessFileFormats SaveAsHarnessFileFormat ) = 0;
};

enum AssemblyBaseStylesConstants
{
    seAssemblyBaseStyle = 0,
    seAssemblyConstructionStyle = 1,
    seAssemblyThreadedCylindersStyle = 2,
    seAssemblyCurveStyle = 3,
    seAssemblyWeldBeadStyle = 4,
    seAssemblySectionedFaceStyle = 5
};

enum AssemblyWireHarnessReportTypeConstants
{
    seAssemblyWireHarnessReportComponents = 1,
    seAssemblyWireHarnessReportConnections = 2,
    seAssemblyWireHarnessReportHBom = 3
};

struct __declspec(uuid("336b4674-2688-4437-8bcc-52c19e6adc91"))
AssemblyBodies : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
    AssemblyBodyPtr Item (
        const _variant_t & Index );
    enum TGFramework::ObjectType GetType ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
};

struct __declspec(uuid("71423bab-f25e-4321-bfe9-240bccde469e"))
_IAssemblyBodiesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
    AssemblyBodyPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    enum TGFramework::ObjectType GetType ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct AssemblyBody * * AssemblyBody ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Unknown ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
};

enum AssemblyPathfinderUpdateConstants
{
    seUpdate = 1,
    seRebuild = 2,
    seSuspend = 3,
    seResume = 4,
    seExpandAll = 5,
    seCollapse = 6
};

struct __declspec(uuid("80e737d2-e5f4-4e54-bbde-ee0c3773febb"))
Zones : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    ZonePtr Item (
        const _variant_t & Index );
    ZonePtr Add (
        double Point1x,
        double Point1y,
        double Point1z,
        double Point2x,
        double Point2y,
        double Point2z );
    HRESULT Delete (
        _bstr_t Name );
    HRESULT Save ( );
    HRESULT Cut (
        _bstr_t Name );
    ZonePtr Paste ( );
    HRESULT Show ( );
    HRESULT Hide ( );
    VARIANT_BOOL IsVisible ( );
};

struct __declspec(uuid("8fa6bf9c-4b30-45fb-b229-6ec5dc56d627"))
Zone : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetOverlap,put=PutOverlap))
    VARIANT_BOOL Overlap;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    void PutName (
        _bstr_t _arg1 );
    _bstr_t GetName ( );
    void PutOverlap (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetOverlap ( );
    HRESULT GetPoints (
        double * Point1x,
        double * Point1y,
        double * Point1z,
        double * Point2x,
        double * Point2y,
        double * Point2z );
    HRESULT SetPoints (
        double Point1x,
        double Point1y,
        double Point1z,
        double Point2x,
        double Point2y,
        double Point2z );
    HRESULT CopyToClipboard ( );
    HRESULT PopulateFromClipboard ( );
    HRESULT Show ( );
    HRESULT Hide ( );
    VARIANT_BOOL IsVisible ( );
    HRESULT ShowParts ( );
    HRESULT HideParts ( );
    HRESULT ShowOnlyParts ( );
    HRESULT AddPartsToSelectSet ( );
};

struct __declspec(uuid("f2aa5b51-20dd-4018-a6f0-3e22d0b091b4"))
_IZonesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    ZonePtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    ZonePtr Add (
        double Point1x,
        double Point1y,
        double Point1z,
        double Point2x,
        double Point2y,
        double Point2z );
    HRESULT Delete (
        _bstr_t Name );
    HRESULT Save ( );
    HRESULT Cut (
        _bstr_t Name );
    ZonePtr Paste ( );
    HRESULT Show ( );
    HRESULT Hide ( );
    VARIANT_BOOL IsVisible ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Zone * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Unknown ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ double Point1x,
        /*[in]*/ double Point1y,
        /*[in]*/ double Point1z,
        /*[in]*/ double Point2x,
        /*[in]*/ double Point2y,
        /*[in]*/ double Point2z,
        /*[out,retval]*/ struct Zone * * Zone ) = 0;
      virtual HRESULT __stdcall raw_Delete (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall raw_Save ( ) = 0;
      virtual HRESULT __stdcall raw_Cut (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall raw_Paste (
        /*[out,retval]*/ struct Zone * * Zone ) = 0;
      virtual HRESULT __stdcall raw_Show ( ) = 0;
      virtual HRESULT __stdcall raw_Hide ( ) = 0;
      virtual HRESULT __stdcall raw_IsVisible (
        /*[out,retval]*/ VARIANT_BOOL * IsVisible ) = 0;
};

struct __declspec(uuid("9024d2c1-ec72-45db-b82e-b57c1156e862"))
_IZoneAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetOverlap,put=PutOverlap))
    VARIANT_BOOL Overlap;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    void PutName (
        _bstr_t Name );
    _bstr_t GetName ( );
    void PutOverlap (
        VARIANT_BOOL bOverlap );
    VARIANT_BOOL GetOverlap ( );
    HRESULT GetPoints (
        double * Point1x,
        double * Point1y,
        double * Point1z,
        double * Point2x,
        double * Point2y,
        double * Point2z );
    HRESULT SetPoints (
        double Point1x,
        double Point1y,
        double Point1z,
        double Point2x,
        double Point2y,
        double Point2z );
    HRESULT CopyToClipboard ( );
    HRESULT PopulateFromClipboard ( );
    HRESULT Show ( );
    HRESULT Hide ( );
    VARIANT_BOOL IsVisible ( );
    HRESULT ShowParts ( );
    HRESULT HideParts ( );
    HRESULT ShowOnlyParts ( );
    HRESULT AddPartsToSelectSet ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Overlap (
        /*[in]*/ VARIANT_BOOL bOverlap ) = 0;
      virtual HRESULT __stdcall get_Overlap (
        /*[out,retval]*/ VARIANT_BOOL * bOverlap ) = 0;
      virtual HRESULT __stdcall raw_GetPoints (
        /*[out]*/ double * Point1x,
        /*[out]*/ double * Point1y,
        /*[out]*/ double * Point1z,
        /*[out]*/ double * Point2x,
        /*[out]*/ double * Point2y,
        /*[out]*/ double * Point2z ) = 0;
      virtual HRESULT __stdcall raw_SetPoints (
        /*[in]*/ double Point1x,
        /*[in]*/ double Point1y,
        /*[in]*/ double Point1z,
        /*[in]*/ double Point2x,
        /*[in]*/ double Point2y,
        /*[in]*/ double Point2z ) = 0;
      virtual HRESULT __stdcall raw_CopyToClipboard ( ) = 0;
      virtual HRESULT __stdcall raw_PopulateFromClipboard ( ) = 0;
      virtual HRESULT __stdcall raw_Show ( ) = 0;
      virtual HRESULT __stdcall raw_Hide ( ) = 0;
      virtual HRESULT __stdcall raw_IsVisible (
        /*[out,retval]*/ VARIANT_BOOL * IsVisible ) = 0;
      virtual HRESULT __stdcall raw_ShowParts ( ) = 0;
      virtual HRESULT __stdcall raw_HideParts ( ) = 0;
      virtual HRESULT __stdcall raw_ShowOnlyParts ( ) = 0;
      virtual HRESULT __stdcall raw_AddPartsToSelectSet ( ) = 0;
};

enum UpdateStructureCacheConstants
{
    seUseOpenDocuments = 1,
    seWalkFilesOnDisk = 2
};

struct __declspec(uuid("b3019a95-39d7-4259-9f64-b5fa06bb26e8"))
FastenerSystems : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT GetOccurrences (
        long * NumOfMasters,
        SAFEARRAY * * Occurrences );
    HRESULT GetComponents (
        IUnknown * master,
        long * NoOfcomp,
        SAFEARRAY * * Occurrences );
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    FastenerSystemPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    HRESULT GetOccurrencesEx (
        long * NumOfSources,
        SAFEARRAY * * Occurrences );
    HRESULT GetComponentsEx (
        IUnknown * Source,
        long * NoOfcomp,
        SAFEARRAY * * Occurrences );
};

struct __declspec(uuid("91542f2e-0b05-4b1a-96b3-ee0f18fc7955"))
FastenerSystem : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT GetComponents (
        long * NoOfcomp,
        SAFEARRAY * * Occurrences );
    HRESULT Flip ( );
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t _arg1 );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL _arg1 );
    HRESULT Delete ( );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
};

struct __declspec(uuid("3f9105cc-ad3f-4e11-a8ae-30d11a0712e4"))
_IFastenerSystemsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    HRESULT GetOccurrences (
        long * NumOfMasters,
        SAFEARRAY * * Occurrences );
    HRESULT GetComponents (
        IUnknown * master,
        long * NoOfcomp,
        SAFEARRAY * * Occurrences );
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    FastenerSystemPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    HRESULT GetOccurrencesEx (
        long * NumOfSources,
        SAFEARRAY * * Occurrences );
    HRESULT GetComponentsEx (
        IUnknown * Source,
        long * NoOfcomp,
        SAFEARRAY * * Occurrences );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_GetOccurrences (
        /*[out]*/ long * NumOfMasters,
        /*[in,out]*/ SAFEARRAY * * Occurrences ) = 0;
      virtual HRESULT __stdcall raw_GetComponents (
        /*[in]*/ IUnknown * master,
        /*[out]*/ long * NoOfcomp,
        /*[in,out]*/ SAFEARRAY * * Occurrences ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct FastenerSystem * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_GetOccurrencesEx (
        /*[out]*/ long * NumOfSources,
        /*[in,out]*/ SAFEARRAY * * Occurrences ) = 0;
      virtual HRESULT __stdcall raw_GetComponentsEx (
        /*[in]*/ IUnknown * Source,
        /*[out]*/ long * NoOfcomp,
        /*[in,out]*/ SAFEARRAY * * Occurrences ) = 0;
};

struct __declspec(uuid("5472bb30-50fb-45f5-9ffd-ab00ca34479d"))
_IFastenerSystemAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;

    //
    // Wrapper methods for error-handling
    //

    HRESULT GetComponents (
        long * NoOfcomp,
        SAFEARRAY * * Occurrences );
    HRESULT Flip ( );
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL Visible );
    HRESULT Delete ( );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_GetComponents (
        /*[out]*/ long * NoOfcomp,
        /*[in,out]*/ SAFEARRAY * * Occurrences ) = 0;
      virtual HRESULT __stdcall raw_Flip ( ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_GetSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_AddSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_DeleteSuppressionVariable ( ) = 0;
      virtual HRESULT __stdcall raw_HasSuppressionVariable (
        /*[out,retval]*/ VARIANT_BOOL * IsSuppressionVariablePresent ) = 0;
};

struct __declspec(uuid("a4390fca-89ed-4321-9ce4-66c863ea9163"))
AssemblyGroups : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
    AssemblyGroupPtr Item (
        const _variant_t & Index );
    enum TGFramework::ObjectType GetType ( );
    AssemblyGroupPtr Add (
        long NumComponents,
        SAFEARRAY * * Components );
};

struct __declspec(uuid("a3c25d76-c2e5-4a35-8810-4f35ab5d5f58"))
AssemblyGroup : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetNumComponents))
    long NumComponents;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t _arg1 );
    enum TGFramework::ObjectType GetType ( );
    void PutVisible (
        VARIANT_BOOL _arg1 );
    HRESULT Delete ( );
    HRESULT UnGroup ( );
    HRESULT AddToGroup (
        long NumComponents,
        SAFEARRAY * * Components );
    HRESULT RemoveFromGroup (
        long NumComponents,
        SAFEARRAY * * Components );
    long GetNumComponents ( );
    HRESULT GetComponents (
        SAFEARRAY * * Components );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
};

struct __declspec(uuid("88850e82-39ee-439c-b966-6ac917ece611"))
_IAssemblyGroupsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    long GetCount ( );
    IDispatchPtr GetParent ( );
    AssemblyGroupPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    enum TGFramework::ObjectType GetType ( );
    AssemblyGroupPtr Add (
        long NumComponents,
        SAFEARRAY * * Components );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct AssemblyGroup * * AssemblyGroup ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * Unknown ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ long NumComponents,
        /*[in,out]*/ SAFEARRAY * * Components,
        /*[out,retval]*/ struct AssemblyGroup * * AssemblyGroup ) = 0;
};

struct __declspec(uuid("284c995f-1eab-4233-b8cc-03b455c98ef7"))
_IAssemblyGroupAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetNumComponents))
    long NumComponents;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    enum TGFramework::ObjectType GetType ( );
    void PutVisible (
        VARIANT_BOOL _arg1 );
    HRESULT Delete ( );
    HRESULT UnGroup ( );
    HRESULT AddToGroup (
        long NumComponents,
        SAFEARRAY * * Components );
    HRESULT RemoveFromGroup (
        long NumComponents,
        SAFEARRAY * * Components );
    long GetNumComponents ( );
    HRESULT GetComponents (
        SAFEARRAY * * Components );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL _arg1 ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_UnGroup ( ) = 0;
      virtual HRESULT __stdcall raw_AddToGroup (
        /*[in]*/ long NumComponents,
        /*[in,out]*/ SAFEARRAY * * Components ) = 0;
      virtual HRESULT __stdcall raw_RemoveFromGroup (
        /*[in]*/ long NumComponents,
        /*[in,out]*/ SAFEARRAY * * Components ) = 0;
      virtual HRESULT __stdcall get_NumComponents (
        /*[out,retval]*/ long * NumComponents ) = 0;
      virtual HRESULT __stdcall raw_GetComponents (
        /*[in,out]*/ SAFEARRAY * * Components ) = 0;
      virtual HRESULT __stdcall raw_GetSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_AddSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_DeleteSuppressionVariable ( ) = 0;
      virtual HRESULT __stdcall raw_HasSuppressionVariable (
        /*[out,retval]*/ VARIANT_BOOL * IsSuppressionVariablePresent ) = 0;
};

enum MoveMultipleMoveTypeConstants
{
    seMoveMultipleMove = 1,
    seMoveMultipleCopy = 2
};

enum MoveMultipleRelationshipConstants
{
    seMoveMultipleMaintainInternalRelationships = 1,
    seMoveMultipleDropInternalRelationships = 2,
    seMoveMultipleDropInternalRelationshipsAndGround = 3
};

struct __declspec(uuid("e87200e9-06fe-4c84-96ca-bb3e7a109826"))
ItemNumbers : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetNextAvailableItemNumber))
    int NextAvailableItemNumber;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT GetItemNumberPreferences (
        enum ItemNumberModeConstants * Mode,
        VARIANT_BOOL * ExpandWeldmentSubassemblies,
        int * StartNumber,
        int * IncrementBy );
    HRESULT SetItemNumberPreferences (
        enum ItemNumberModeConstants Mode,
        VARIANT_BOOL ExpandWeldmentSubassemblies,
        int StartNumber,
        int IncrementBy );
    int GetNextAvailableItemNumber ( );
    HRESULT IsInUse (
        int ItemNumber,
        VARIANT_BOOL * ItemNumberInUse );
    HRESULT Regenerate ( );
    HRESULT RemoveUnusedItemNumbers ( );
};

enum ItemNumberModeConstants
{
    seItemNumber_None = 0,
    seItemNumber_Toplevel = 1,
    seItemNumber_Atomic = 2,
    seItemNumber_Exploded = 3,
    seItemNumber_LevelBased = 4
};

struct __declspec(uuid("ce32775c-e997-4f8e-a061-aebfef8eae67"))
_IItemNumbersAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetNextAvailableItemNumber))
    int NextAvailableItemNumber;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT GetItemNumberPreferences (
        enum ItemNumberModeConstants * Mode,
        VARIANT_BOOL * ExpandWeldmentSubassemblies,
        int * StartNumber,
        int * IncrementBy );
    HRESULT SetItemNumberPreferences (
        enum ItemNumberModeConstants Mode,
        VARIANT_BOOL ExpandWeldmentSubassemblies,
        int StartNumber,
        int IncrementBy );
    int GetNextAvailableItemNumber ( );
    HRESULT IsInUse (
        int ItemNumber,
        VARIANT_BOOL * ItemNumberInUse );
    HRESULT Regenerate ( );
    HRESULT RemoveUnusedItemNumbers ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_GetItemNumberPreferences (
        /*[out]*/ enum ItemNumberModeConstants * Mode,
        /*[out]*/ VARIANT_BOOL * ExpandWeldmentSubassemblies,
        /*[out]*/ int * StartNumber,
        /*[out]*/ int * IncrementBy ) = 0;
      virtual HRESULT __stdcall raw_SetItemNumberPreferences (
        /*[in]*/ enum ItemNumberModeConstants Mode,
        /*[in]*/ VARIANT_BOOL ExpandWeldmentSubassemblies,
        /*[in]*/ int StartNumber,
        /*[in]*/ int IncrementBy ) = 0;
      virtual HRESULT __stdcall get_NextAvailableItemNumber (
        /*[out,retval]*/ int * AvailableItemNumber ) = 0;
      virtual HRESULT __stdcall raw_IsInUse (
        /*[in]*/ int ItemNumber,
        /*[out]*/ VARIANT_BOOL * ItemNumberInUse ) = 0;
      virtual HRESULT __stdcall raw_Regenerate ( ) = 0;
      virtual HRESULT __stdcall raw_RemoveUnusedItemNumbers ( ) = 0;
};

enum ConstraintReplacementConstants
{
    seConstraintReplacementNone = 0,
    seConstraintReplacementSuppress = 1,
    seConstraintReplacementDelete = 2
};

struct __declspec(uuid("ceaff9a2-30fc-4b1e-b993-819724d0bae3"))
AssemblyCopies : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetCountEx))
    long CountEx;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyCopyPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    AssemblyCopyPtr ItemEx (
        const _variant_t & Index );
    AssemblyCopyPtr Add (
        _bstr_t FileName,
        enum AssemblyCopyComponentConstants SpecifiedComponentSelection,
        const _variant_t & MirrorPlane = vtMissing,
        const _variant_t & IncludeAF = vtMissing,
        const _variant_t & AddNewComponentsOnUpdate = vtMissing,
        const _variant_t & NumSpecifiedComponents = vtMissing,
        const _variant_t & SpecifiedComponents = vtMissing,
        const _variant_t & CoordinateSystem = vtMissing );
    long GetCountEx ( );
};

struct __declspec(uuid("07094198-5fe4-4622-9eaa-b1d1e4604da4"))
AssemblyCopy : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetSourceFilename))
    _bstr_t SourceFilename;
    __declspec(property(get=GetSourceDocument))
    IDispatchPtr SourceDocument;
    __declspec(property(get=GetMirrorPlane,put=PutMirrorPlane))
    IDispatchPtr MirrorPlane;
    __declspec(property(get=GetCoordinateSystem,put=PutCoordinateSystem))
    IDispatchPtr CoordinateSystem;
    __declspec(property(get=GetIncludeAssemblyFeatures,put=PutIncludeAssemblyFeatures))
    VARIANT_BOOL IncludeAssemblyFeatures;
    __declspec(property(get=GetAddNewComponentsOnUpdate,put=PutAddNewComponentsOnUpdate))
    VARIANT_BOOL AddNewComponentsOnUpdate;
    __declspec(property(get=GetIsOutOfDate))
    VARIANT_BOOL IsOutOfDate;
    __declspec(property(get=GetStatus))
    enum AssemblyCopyStatusConstants Status;
    __declspec(property(get=GetAssemblyCopyType))
    enum AssemblyCopyTypeConstants AssemblyCopyType;
    __declspec(property(get=GetIsFrozen,put=PutIsFrozen))
    VARIANT_BOOL IsFrozen;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetSourceFilename ( );
    IDispatchPtr GetSourceDocument ( );
    IDispatchPtr GetMirrorPlane ( );
    void PutMirrorPlane (
        IDispatch * _arg1 );
    IDispatchPtr GetCoordinateSystem ( );
    void PutCoordinateSystem (
        IDispatch * _arg1 );
    VARIANT_BOOL GetIncludeAssemblyFeatures ( );
    void PutIncludeAssemblyFeatures (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetAddNewComponentsOnUpdate ( );
    void PutAddNewComponentsOnUpdate (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetIsOutOfDate ( );
    VARIANT_BOOL GetIsFrozen ( );
    void PutIsFrozen (
        VARIANT_BOOL _arg1 );
    enum AssemblyCopyStatusConstants GetStatus ( );
    enum AssemblyCopyTypeConstants GetAssemblyCopyType ( );
    HRESULT Update ( );
    HRESULT GetDefinition (
        SAFEARRAY * * inputOccs,
        SAFEARRAY * * outputOccs,
        VARIANT * actionEnums = &vtMissing,
        VARIANT * planeEnums = &vtMissing,
        VARIANT * userEnums = &vtMissing );
    HRESULT GetMultibodyDefinition (
        SAFEARRAY * * inputFileNames,
        SAFEARRAY * * inputReferences,
        SAFEARRAY * * outputOccs );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t _arg1 );
    HRESULT ChangeSource (
        _bstr_t FileName,
        enum AssemblyCopyComponentConstants SpecifiedComponentSelection,
        const _variant_t & NumSpecifiedComponents = vtMissing,
        const _variant_t & SpecifiedComponents = vtMissing );
    HRESULT ComponentSettings (
        long NumComponents,
        SAFEARRAY * * Components,
        SAFEARRAY * * ActionConstants,
        const _variant_t & PlaneConstants = vtMissing );
};

enum AssemblyCopyStatusConstants
{
    seAssemblyCopyStatusOK = 0,
    seAssemblyCopyStatusOutOfDate = 1,
    seAssemblyCopyStatusFrozen = 2,
    seAssemblyCopyStatusPending = 3,
    seAssemblyCopyStatusMirrorPlaneMissing = 4,
    seAssemblyCopyStatusCoordinateSystemMissing = 5,
    seAssemblyCopyStatusFailed = 6
};

enum AssemblyCopyTypeConstants
{
    seAssemblyCopyTypeDefault = 0,
    seAssemblyCopyTypeMirror = 1,
    seAssemblyCopyTypeMultiBodyPart = 2
};

enum AssemblyCopyComponentConstants
{
    seAssemblyCopyComponentsIncludeAll = 0,
    seAssemblyCopyComponentsExcludeAll = 1,
    seAssemblyCopyComponentsIncludeSpecified = 2,
    seAssemblyCopyComponentsExcludeSpecified = 3
};

struct __declspec(uuid("977a66aa-7a8d-4930-aaea-f4e75ac8d8b9"))
_IAssemblyCopiesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetCountEx))
    long CountEx;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyCopyPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    AssemblyCopyPtr ItemEx (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    AssemblyCopyPtr Add (
        _bstr_t FileName,
        enum AssemblyCopyComponentConstants SpecifiedComponentSelection,
        const _variant_t & MirrorPlane = vtMissing,
        const _variant_t & IncludeAF = vtMissing,
        const _variant_t & AddNewComponentsOnUpdate = vtMissing,
        const _variant_t & NumSpecifiedComponents = vtMissing,
        const _variant_t & SpecifiedComponents = vtMissing,
        const _variant_t & CoordinateSystem = vtMissing );
    long GetCountEx ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct AssemblyCopy * * Item ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_ItemEx (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct AssemblyCopy * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR FileName,
        /*[in]*/ enum AssemblyCopyComponentConstants SpecifiedComponentSelection,
        /*[in]*/ VARIANT MirrorPlane,
        /*[in]*/ VARIANT IncludeAF,
        /*[in]*/ VARIANT AddNewComponentsOnUpdate,
        /*[in]*/ VARIANT NumSpecifiedComponents,
        /*[in]*/ VARIANT SpecifiedComponents,
        /*[in]*/ VARIANT CoordinateSystem,
        /*[out,retval]*/ struct AssemblyCopy * * AssemblyCopy ) = 0;
      virtual HRESULT __stdcall get_CountEx (
        /*[out,retval]*/ long * CountEx ) = 0;
};

struct __declspec(uuid("43ee6f19-f55b-4ae6-9781-3c99f652796f"))
_IAssemblyCopyAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetSourceFilename))
    _bstr_t SourceFilename;
    __declspec(property(get=GetSourceDocument))
    IDispatchPtr SourceDocument;
    __declspec(property(get=GetMirrorPlane,put=PutMirrorPlane))
    IDispatchPtr MirrorPlane;
    __declspec(property(get=GetCoordinateSystem,put=PutCoordinateSystem))
    IDispatchPtr CoordinateSystem;
    __declspec(property(get=GetIncludeAssemblyFeatures,put=PutIncludeAssemblyFeatures))
    VARIANT_BOOL IncludeAssemblyFeatures;
    __declspec(property(get=GetAddNewComponentsOnUpdate,put=PutAddNewComponentsOnUpdate))
    VARIANT_BOOL AddNewComponentsOnUpdate;
    __declspec(property(get=GetIsOutOfDate))
    VARIANT_BOOL IsOutOfDate;
    __declspec(property(get=GetStatus))
    enum AssemblyCopyStatusConstants Status;
    __declspec(property(get=GetAssemblyCopyType))
    enum AssemblyCopyTypeConstants AssemblyCopyType;
    __declspec(property(get=GetIsFrozen,put=PutIsFrozen))
    VARIANT_BOOL IsFrozen;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetSourceFilename ( );
    IDispatchPtr GetSourceDocument ( );
    IDispatchPtr GetMirrorPlane ( );
    void PutMirrorPlane (
        IDispatch * Mirror );
    IDispatchPtr GetCoordinateSystem ( );
    void PutCoordinateSystem (
        IDispatch * coordinates );
    VARIANT_BOOL GetIncludeAssemblyFeatures ( );
    void PutIncludeAssemblyFeatures (
        VARIANT_BOOL bIncludeAF );
    VARIANT_BOOL GetAddNewComponentsOnUpdate ( );
    void PutAddNewComponentsOnUpdate (
        VARIANT_BOOL bAddNewComponentsOnUpdate );
    VARIANT_BOOL GetIsOutOfDate ( );
    VARIANT_BOOL GetIsFrozen ( );
    void PutIsFrozen (
        VARIANT_BOOL bIsFrozen );
    enum AssemblyCopyStatusConstants GetStatus ( );
    enum AssemblyCopyTypeConstants GetAssemblyCopyType ( );
    HRESULT Update ( );
    HRESULT GetDefinition (
        SAFEARRAY * * inputOccs,
        SAFEARRAY * * outputOccs,
        VARIANT * actionEnums,
        VARIANT * planeEnums,
        VARIANT * userEnums );
    HRESULT GetMultibodyDefinition (
        SAFEARRAY * * inputFileNames,
        SAFEARRAY * * inputReferences,
        SAFEARRAY * * outputOccs );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    HRESULT ChangeSource (
        _bstr_t FileName,
        enum AssemblyCopyComponentConstants SpecifiedComponentSelection,
        const _variant_t & NumSpecifiedComponents = vtMissing,
        const _variant_t & SpecifiedComponents = vtMissing );
    HRESULT ComponentSettings (
        long NumComponents,
        SAFEARRAY * * Components,
        SAFEARRAY * * ActionConstants,
        const _variant_t & PlaneConstants = vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_SourceFilename (
        /*[out,retval]*/ BSTR * FileName ) = 0;
      virtual HRESULT __stdcall get_SourceDocument (
        /*[out,retval]*/ IDispatch * * Document ) = 0;
      virtual HRESULT __stdcall get_MirrorPlane (
        /*[out,retval]*/ IDispatch * * Mirror ) = 0;
      virtual HRESULT __stdcall put_MirrorPlane (
        /*[in]*/ IDispatch * Mirror ) = 0;
      virtual HRESULT __stdcall get_CoordinateSystem (
        /*[out,retval]*/ IDispatch * * coordinates ) = 0;
      virtual HRESULT __stdcall put_CoordinateSystem (
        /*[in]*/ IDispatch * coordinates ) = 0;
      virtual HRESULT __stdcall get_IncludeAssemblyFeatures (
        /*[out,retval]*/ VARIANT_BOOL * bIncludeAF ) = 0;
      virtual HRESULT __stdcall put_IncludeAssemblyFeatures (
        /*[in]*/ VARIANT_BOOL bIncludeAF ) = 0;
      virtual HRESULT __stdcall get_AddNewComponentsOnUpdate (
        /*[out,retval]*/ VARIANT_BOOL * bAddNewComponentsOnUpdate ) = 0;
      virtual HRESULT __stdcall put_AddNewComponentsOnUpdate (
        /*[in]*/ VARIANT_BOOL bAddNewComponentsOnUpdate ) = 0;
      virtual HRESULT __stdcall get_IsOutOfDate (
        /*[out,retval]*/ VARIANT_BOOL * bIsOutOfDate ) = 0;
      virtual HRESULT __stdcall get_IsFrozen (
        /*[out,retval]*/ VARIANT_BOOL * bIsFrozen ) = 0;
      virtual HRESULT __stdcall put_IsFrozen (
        /*[in]*/ VARIANT_BOOL bIsFrozen ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum AssemblyCopyStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall get_AssemblyCopyType (
        /*[out,retval]*/ enum AssemblyCopyTypeConstants * Type ) = 0;
      virtual HRESULT __stdcall raw_Update ( ) = 0;
      virtual HRESULT __stdcall raw_GetDefinition (
        /*[in,out]*/ SAFEARRAY * * inputOccs,
        /*[in,out]*/ SAFEARRAY * * outputOccs,
        /*[in,out]*/ VARIANT * actionEnums,
        /*[in,out]*/ VARIANT * planeEnums,
        /*[in,out]*/ VARIANT * userEnums ) = 0;
      virtual HRESULT __stdcall raw_GetMultibodyDefinition (
        /*[in,out]*/ SAFEARRAY * * inputFileNames,
        /*[in,out]*/ SAFEARRAY * * inputReferences,
        /*[in,out]*/ SAFEARRAY * * outputOccs ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall raw_ChangeSource (
        /*[in]*/ BSTR FileName,
        /*[in]*/ enum AssemblyCopyComponentConstants SpecifiedComponentSelection,
        /*[in]*/ VARIANT NumSpecifiedComponents = vtMissing,
        /*[in]*/ VARIANT SpecifiedComponents = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_ComponentSettings (
        /*[in]*/ long NumComponents,
        /*[in,out]*/ SAFEARRAY * * Components,
        /*[in,out]*/ SAFEARRAY * * ActionConstants,
        /*[in]*/ VARIANT PlaneConstants = vtMissing ) = 0;
};

enum AssemblyCopyActionConstants
{
    seAssemblyCopyActionInclude = 0,
    seAssemblyCopyActionExclude = 1,
    seAssemblyCopyActionPending = 2,
    seAssemblyCopyActionMirror = 3,
    seAssemblyCopyActionRotate = 4,
    seAssemblyCopyActionDefault = 5
};

struct __declspec(uuid("90f5847c-3129-48d5-9658-3b3d5bb164c0"))
AssemblyMirrors : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyMirrorPtr Item (
        const _variant_t & Index );
    long GetCount ( );
};

struct __declspec(uuid("725c9151-af65-40d4-9057-aefdf08f0412"))
AssemblyMirror : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetMirrorPlane))
    IDispatchPtr MirrorPlane;
    __declspec(property(get=GetStatus))
    enum AssemblyCopyStatusConstants Status;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr GetMirrorPlane ( );
    enum AssemblyCopyStatusConstants GetStatus ( );
    HRESULT GetDefinition (
        SAFEARRAY * * inputOccs,
        SAFEARRAY * * outputOccs,
        VARIANT * actionEnums = &vtMissing,
        VARIANT * planeEnums = &vtMissing,
        VARIANT * userEnums = &vtMissing );
    _bstr_t GetName ( );
    HRESULT Delete ( );
};

struct __declspec(uuid("7195118a-3a57-4e57-8ba2-f83adb6fa55e"))
_IAssemblyMirrorsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    AssemblyMirrorPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct AssemblyMirror * * Item ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
};

struct __declspec(uuid("9e97e4b2-4e94-4f45-a07b-32f43cbc5a05"))
_IAssemblyMirrorAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetMirrorPlane))
    IDispatchPtr MirrorPlane;
    __declspec(property(get=GetStatus))
    enum AssemblyCopyStatusConstants Status;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr GetMirrorPlane ( );
    enum AssemblyCopyStatusConstants GetStatus ( );
    HRESULT GetDefinition (
        SAFEARRAY * * inputOccs,
        SAFEARRAY * * outputOccs,
        VARIANT * actionEnums,
        VARIANT * planeEnums,
        VARIANT * userEnums );
    _bstr_t GetName ( );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_MirrorPlane (
        /*[out,retval]*/ IDispatch * * Mirror ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum AssemblyCopyStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall raw_GetDefinition (
        /*[in,out]*/ SAFEARRAY * * inputOccs,
        /*[in,out]*/ SAFEARRAY * * outputOccs,
        /*[in,out]*/ VARIANT * actionEnums,
        /*[in,out]*/ VARIANT * planeEnums,
        /*[in,out]*/ VARIANT * userEnums ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

struct __declspec(uuid("a9f62364-e17e-49bf-bf1d-feea1b8a14d9"))
SimplifiedAssemblies : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetAddVisible))
    SimplifiedAssemblyPtr AddVisible[][][][][][];
    __declspec(property(get=GetAddModel))
    SimplifiedAssemblyPtr AddModel;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    SimplifiedAssemblyPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    SimplifiedAssemblyPtr GetAddVisible (
        long NumOccurrenceExclude,
        SAFEARRAY * * OccurrenceExclude,
        double dExcludeRangeRatio,
        long NumOccurrenceInclude,
        SAFEARRAY * * OccurrenceInclude,
        enum VisibilityBasedSimplifiedAssemblyCopyType CopyType );
    SimplifiedAssemblyPtr GetAddModel ( );
};

struct __declspec(uuid("a4cfe769-d9f5-41f1-883e-50444ef4e60f"))
SimplifiedAssembly : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetActivateSimplifiedAssembly,put=PutActivateSimplifiedAssembly))
    VARIANT_BOOL ActivateSimplifiedAssembly;
    __declspec(property(get=GetSimplificationType))
    enum SimplifiedAssemblyMode SimplificationType;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetSimplifiedModel))
    IDispatchPtr SimplifiedModel;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetActivateSimplifiedAssembly ( );
    void PutActivateSimplifiedAssembly (
        VARIANT_BOOL _arg1 );
    enum SimplifiedAssemblyMode GetSimplificationType ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT UpdateSimplifiedAssembly ( );
    HRESULT DeleteSimplifiedAssembly ( );
    HRESULT EditVisibleFaces (
        long NumOccurrenceExclude,
        SAFEARRAY * * OccurrenceExclude,
        double dExcludeRangeRatio,
        long NumOccurrenceInclude,
        SAFEARRAY * * OccurrenceInclude,
        enum VisibilityBasedSimplifiedAssemblyCopyType CopyType );
    HRESULT GetVisibleFaceInputs (
        long * NumOccurrenceExclude,
        SAFEARRAY * * OccurrenceExclude,
        double * dExcludeRangeRatio,
        long * NumOccurrenceInclude,
        SAFEARRAY * * OccurrenceInclude,
        enum VisibilityBasedSimplifiedAssemblyCopyType * CopyType );
    HRESULT SaveSimplifiedAssemblyAs (
        _bstr_t SaveFileName );
    IDispatchPtr GetSimplifiedModel ( );
};

enum SimplifiedAssemblyMode
{
    seSimplifiedAssemblyModeUnknown = 0,
    seSimplifiedAssemblyModeModeled = 1,
    seSimplifiedAssemblyModeVisibleFaces = 2
};

enum VisibilityBasedSimplifiedAssemblyCopyType
{
    seVisibilityBasedSimplifiedAssemblyCopyTypeFaces = 0,
    seVisibilityBasedSimplifiedAssemblyCopyTypeBodies = 1
};

struct __declspec(uuid("d55dde80-57f5-407b-8688-e517b867ff47"))
_ISimplifiedAssembliesAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetAddVisible))
    SimplifiedAssemblyPtr AddVisible[][][][][][];
    __declspec(property(get=GetAddModel))
    SimplifiedAssemblyPtr AddModel;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    SimplifiedAssemblyPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    SimplifiedAssemblyPtr GetAddVisible (
        long NumOccurrenceExclude,
        SAFEARRAY * * OccurrenceExclude,
        double dExcludeRangeRatio,
        long NumOccurrenceInclude,
        SAFEARRAY * * OccurrenceInclude,
        enum VisibilityBasedSimplifiedAssemblyCopyType CopyType );
    SimplifiedAssemblyPtr GetAddModel ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct SimplifiedAssembly * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get_AddVisible (
        /*[in]*/ long NumOccurrenceExclude,
        /*[in]*/ SAFEARRAY * * OccurrenceExclude,
        /*[in]*/ double dExcludeRangeRatio,
        /*[in]*/ long NumOccurrenceInclude,
        /*[in]*/ SAFEARRAY * * OccurrenceInclude,
        /*[in]*/ enum VisibilityBasedSimplifiedAssemblyCopyType CopyType,
        /*[out,retval]*/ struct SimplifiedAssembly * * ref ) = 0;
      virtual HRESULT __stdcall get_AddModel (
        /*[out,retval]*/ struct SimplifiedAssembly * * Reference ) = 0;
};

struct __declspec(uuid("9245f921-3184-4d8d-97fa-3cd285a5e8ec"))
_ISimplifiedAssemblyAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetActivateSimplifiedAssembly,put=PutActivateSimplifiedAssembly))
    VARIANT_BOOL ActivateSimplifiedAssembly;
    __declspec(property(get=GetSimplificationType))
    enum SimplifiedAssemblyMode SimplificationType;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetSimplifiedModel))
    IDispatchPtr SimplifiedModel;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetActivateSimplifiedAssembly ( );
    void PutActivateSimplifiedAssembly (
        VARIANT_BOOL bActivate );
    enum SimplifiedAssemblyMode GetSimplificationType ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT UpdateSimplifiedAssembly ( );
    HRESULT DeleteSimplifiedAssembly ( );
    HRESULT EditVisibleFaces (
        long NumOccurrenceExclude,
        SAFEARRAY * * OccurrenceExclude,
        double dExcludeRangeRatio,
        long NumOccurrenceInclude,
        SAFEARRAY * * OccurrenceInclude,
        enum VisibilityBasedSimplifiedAssemblyCopyType CopyType );
    HRESULT GetVisibleFaceInputs (
        long * NumOccurrenceExclude,
        SAFEARRAY * * OccurrenceExclude,
        double * dExcludeRangeRatio,
        long * NumOccurrenceInclude,
        SAFEARRAY * * OccurrenceInclude,
        enum VisibilityBasedSimplifiedAssemblyCopyType * CopyType );
    HRESULT SaveSimplifiedAssemblyAs (
        _bstr_t SaveFileName );
    IDispatchPtr GetSimplifiedModel ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_ActivateSimplifiedAssembly (
        /*[out,retval]*/ VARIANT_BOOL * bActivate ) = 0;
      virtual HRESULT __stdcall put_ActivateSimplifiedAssembly (
        /*[in]*/ VARIANT_BOOL bActivate ) = 0;
      virtual HRESULT __stdcall get_SimplificationType (
        /*[out,retval]*/ enum SimplifiedAssemblyMode * simType ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall raw_UpdateSimplifiedAssembly ( ) = 0;
      virtual HRESULT __stdcall raw_DeleteSimplifiedAssembly ( ) = 0;
      virtual HRESULT __stdcall raw_EditVisibleFaces (
        /*[in]*/ long NumOccurrenceExclude,
        /*[in]*/ SAFEARRAY * * OccurrenceExclude,
        /*[in]*/ double dExcludeRangeRatio,
        /*[in]*/ long NumOccurrenceInclude,
        /*[in]*/ SAFEARRAY * * OccurrenceInclude,
        /*[in]*/ enum VisibilityBasedSimplifiedAssemblyCopyType CopyType ) = 0;
      virtual HRESULT __stdcall raw_GetVisibleFaceInputs (
        /*[out]*/ long * NumOccurrenceExclude,
        /*[in,out]*/ SAFEARRAY * * OccurrenceExclude,
        /*[out]*/ double * dExcludeRangeRatio,
        /*[out]*/ long * NumOccurrenceInclude,
        /*[in,out]*/ SAFEARRAY * * OccurrenceInclude,
        /*[in,out]*/ enum VisibilityBasedSimplifiedAssemblyCopyType * CopyType ) = 0;
      virtual HRESULT __stdcall raw_SaveSimplifiedAssemblyAs (
        /*[in]*/ BSTR SaveFileName ) = 0;
      virtual HRESULT __stdcall get_SimplifiedModel (
        /*[out,retval]*/ IDispatch * * partDoc ) = 0;
};

enum CloneComponentOptions
{
    seRepairUnsatisfiedRelationships = 0,
    seDoNotCreateRelationships = 2,
    seCreateGroundRelationships = 3
};

enum CloneMatchTypeOptions
{
    CloneMatchTypeAutomatic = 0,
    CloneMatchTypeExact = 1
};

struct __declspec(uuid("9c46df3c-efa7-4cd7-a32a-fd5634366917"))
InternalComponents : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetShowBodyFeaturesOnly,put=PutShowBodyFeaturesOnly))
    VARIANT_BOOL ShowBodyFeaturesOnly;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    InternalComponentPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    HRESULT DeleteInternalComponent (
        _bstr_t InternalComponentName );
    IDispatchPtr CreateInternalComponent (
        enum InternalComponentTypeConstant TypeConstant,
        _bstr_t InternalComponentName,
        VARIANT_BOOL GroundContraint,
        struct InternalComponent * * InternalComponent,
        IDispatch * ParentLocalComponent,
        const _variant_t & MaterialLibraryName = vtMissing,
        const _variant_t & MaterialName = vtMissing );
    void PutShowBodyFeaturesOnly (
        VARIANT_BOOL _arg1 );
    VARIANT_BOOL GetShowBodyFeaturesOnly ( );
};

struct __declspec(uuid("85537af3-8543-4305-abbf-a126affe2d26"))
_IInternalComponentsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetShowBodyFeaturesOnly,put=PutShowBodyFeaturesOnly))
    VARIANT_BOOL ShowBodyFeaturesOnly;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    InternalComponentPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    IUnknownPtr Get_NewEnum ( );
    HRESULT DeleteInternalComponent (
        _bstr_t InternalComponentName );
    IDispatchPtr CreateInternalComponent (
        enum InternalComponentTypeConstant TypeConstant,
        _bstr_t InternalComponentName,
        VARIANT_BOOL GroundContraint,
        struct InternalComponent * * InternalComponent,
        IDispatch * ParentLocalComponent,
        const _variant_t & MaterialLibraryName = vtMissing,
        const _variant_t & MaterialName = vtMissing );
    void PutShowBodyFeaturesOnly (
        VARIANT_BOOL BodyFeaturesOnly );
    VARIANT_BOOL GetShowBodyFeaturesOnly ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct InternalComponent * * Item ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall raw_DeleteInternalComponent (
        /*[in]*/ BSTR InternalComponentName ) = 0;
      virtual HRESULT __stdcall raw_CreateInternalComponent (
        /*[in]*/ enum InternalComponentTypeConstant TypeConstant,
        /*[in]*/ BSTR InternalComponentName,
        /*[in]*/ VARIANT_BOOL GroundContraint,
        /*[out]*/ struct InternalComponent * * InternalComponent,
        /*[in]*/ IDispatch * ParentLocalComponent,
        /*[in]*/ VARIANT MaterialLibraryName,
        /*[in]*/ VARIANT MaterialName,
        /*[out,retval]*/ IDispatch * * InternalComponentReference ) = 0;
      virtual HRESULT __stdcall put_ShowBodyFeaturesOnly (
        /*[in]*/ VARIANT_BOOL BodyFeaturesOnly ) = 0;
      virtual HRESULT __stdcall get_ShowBodyFeaturesOnly (
        /*[out,retval]*/ VARIANT_BOOL * BodyFeaturesOnly ) = 0;
};

struct __declspec(uuid("e0222ce6-8bdc-4f59-8b8f-0c61b0327e11"))
EndCaps : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    EndCapPtr Item (
        const _variant_t & Index );
    long GetCount ( );
    EndCapPtr Add (
        long NumSegments,
        SAFEARRAY * SegmentIds,
        _bstr_t MaterialName,
        VARIANT_BOOL CreateECBasedOnCrossSection,
        VARIANT_BOOL Inset,
        double InsetValue,
        VARIANT_BOOL Offset,
        double OffsetValue,
        VARIANT_BOOL RevOffset,
        VARIANT_BOOL CornerTreatment,
        double ChamferFilletValue,
        double Thickness,
        VARIANT_BOOL Inward,
        enum EndCapTreatmentConstants EndCapTreatment );
    EndCapPtr AddEx (
        long NumSegments,
        SAFEARRAY * SegmentIds,
        _bstr_t MaterialName,
        VARIANT_BOOL CreateECBasedOnCrossSection,
        VARIANT_BOOL Inset,
        double InsetValue,
        VARIANT_BOOL Offset,
        double OffsetValue,
        VARIANT_BOOL RevOffset,
        VARIANT_BOOL CornerTreatment,
        double ChamferFilletValue,
        double Thickness,
        enum EndCapTypeConstants eEndCapType,
        enum EndCapTreatmentConstants EndCapTreatment );
    HRESULT Delete (
        struct EndCap * EndCap );
};

struct __declspec(uuid("cf304da2-a129-437e-8bbc-e76b146181bd"))
EndCap : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetMaterial,put=PutMaterial))
    _bstr_t Material;
    __declspec(property(get=GetThickness,put=PutThickness))
    double Thickness;
    __declspec(property(get=GetEndCapType,put=PutEndCapType))
    enum EndCapTypeConstants EndCapType;
    __declspec(property(get=GetIsEndCapCreatedBasedOnCrossSection,put=PutIsEndCapCreatedBasedOnCrossSection))
    VARIANT_BOOL IsEndCapCreatedBasedOnCrossSection;
    __declspec(property(get=GetChamfer,put=PutChamfer))
    double Chamfer;
    __declspec(property(get=GetFillet,put=PutFillet))
    double Fillet;
    __declspec(property(get=GetInset,put=PutInset))
    double Inset;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    _bstr_t GetMaterial ( );
    void PutMaterial (
        _bstr_t _arg1 );
    double GetThickness ( );
    void PutThickness (
        double _arg1 );
    enum EndCapTypeConstants GetEndCapType ( );
    void PutEndCapType (
        enum EndCapTypeConstants _arg1 );
    VARIANT_BOOL GetIsEndCapCreatedBasedOnCrossSection ( );
    void PutIsEndCapCreatedBasedOnCrossSection (
        VARIANT_BOOL _arg1 );
    double GetChamfer ( );
    void PutChamfer (
        double _arg1 );
    double GetFillet ( );
    void PutFillet (
        double _arg1 );
    double GetInset ( );
    void PutInset (
        double _arg1 );
    HRESULT ApplyOffset (
        double dOffset,
        VARIANT_BOOL bCreatedBasedOnCrossSection,
        VARIANT_BOOL bReverseOffset,
        enum EndCapTypeConstants eEndCapType );
    HRESULT GetOffsetDetails (
        double * dOffset,
        VARIANT_BOOL * bIsCreatedBasedOnCrossSection,
        VARIANT_BOOL * bIsReverseOffset,
        enum EndCapTypeConstants * eEndCapType );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
};

enum EndCapTypeConstants
{
    Inward = 0,
    Outward = 1,
    FrameInward = 2
};

struct __declspec(uuid("cebefdee-007f-4829-ad6f-a03bb0cecf6e"))
_IEndCapAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetMaterial,put=PutMaterial))
    _bstr_t Material;
    __declspec(property(get=GetThickness,put=PutThickness))
    double Thickness;
    __declspec(property(get=GetEndCapType,put=PutEndCapType))
    enum EndCapTypeConstants EndCapType;
    __declspec(property(get=GetIsEndCapCreatedBasedOnCrossSection,put=PutIsEndCapCreatedBasedOnCrossSection))
    VARIANT_BOOL IsEndCapCreatedBasedOnCrossSection;
    __declspec(property(get=GetChamfer,put=PutChamfer))
    double Chamfer;
    __declspec(property(get=GetFillet,put=PutFillet))
    double Fillet;
    __declspec(property(get=GetInset,put=PutInset))
    double Inset;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    _bstr_t GetMaterial ( );
    void PutMaterial (
        _bstr_t bsMaterial );
    double GetThickness ( );
    void PutThickness (
        double dThickness );
    enum EndCapTypeConstants GetEndCapType ( );
    void PutEndCapType (
        enum EndCapTypeConstants eEndCapType );
    VARIANT_BOOL GetIsEndCapCreatedBasedOnCrossSection ( );
    void PutIsEndCapCreatedBasedOnCrossSection (
        VARIANT_BOOL bIsEndCapCreatedBasedOnCrossSection );
    double GetChamfer ( );
    void PutChamfer (
        double dChamfer );
    double GetFillet ( );
    void PutFillet (
        double dFillet );
    double GetInset ( );
    void PutInset (
        double dInset );
    HRESULT ApplyOffset (
        double dOffset,
        VARIANT_BOOL bCreatedBasedOnCrossSection,
        VARIANT_BOOL bReverseOffset,
        enum EndCapTypeConstants eEndCapType );
    HRESULT GetOffsetDetails (
        double * dOffset,
        VARIANT_BOOL * bIsCreatedBasedOnCrossSection,
        VARIANT_BOOL * bIsReverseOffset,
        enum EndCapTypeConstants * eEndCapType );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Material (
        /*[out,retval]*/ BSTR * bsMaterial ) = 0;
      virtual HRESULT __stdcall put_Material (
        /*[in]*/ BSTR bsMaterial ) = 0;
      virtual HRESULT __stdcall get_Thickness (
        /*[out,retval]*/ double * dThickness ) = 0;
      virtual HRESULT __stdcall put_Thickness (
        /*[in]*/ double dThickness ) = 0;
      virtual HRESULT __stdcall get_EndCapType (
        /*[out,retval]*/ enum EndCapTypeConstants * eEndCapType ) = 0;
      virtual HRESULT __stdcall put_EndCapType (
        /*[in]*/ enum EndCapTypeConstants eEndCapType ) = 0;
      virtual HRESULT __stdcall get_IsEndCapCreatedBasedOnCrossSection (
        /*[out,retval]*/ VARIANT_BOOL * bIsEndCapCreatedBasedOnCrossSection ) = 0;
      virtual HRESULT __stdcall put_IsEndCapCreatedBasedOnCrossSection (
        /*[in]*/ VARIANT_BOOL bIsEndCapCreatedBasedOnCrossSection ) = 0;
      virtual HRESULT __stdcall get_Chamfer (
        /*[out,retval]*/ double * dChamfer ) = 0;
      virtual HRESULT __stdcall put_Chamfer (
        /*[in]*/ double dChamfer ) = 0;
      virtual HRESULT __stdcall get_Fillet (
        /*[out,retval]*/ double * dFillet ) = 0;
      virtual HRESULT __stdcall put_Fillet (
        /*[in]*/ double dFillet ) = 0;
      virtual HRESULT __stdcall get_Inset (
        /*[out,retval]*/ double * dInset ) = 0;
      virtual HRESULT __stdcall put_Inset (
        /*[in]*/ double dInset ) = 0;
      virtual HRESULT __stdcall raw_ApplyOffset (
        /*[in]*/ double dOffset,
        /*[in]*/ VARIANT_BOOL bCreatedBasedOnCrossSection,
        /*[in]*/ VARIANT_BOOL bReverseOffset,
        /*[in]*/ enum EndCapTypeConstants eEndCapType ) = 0;
      virtual HRESULT __stdcall raw_GetOffsetDetails (
        /*[out]*/ double * dOffset,
        /*[out]*/ VARIANT_BOOL * bIsCreatedBasedOnCrossSection,
        /*[out]*/ VARIANT_BOOL * bIsReverseOffset,
        /*[out]*/ enum EndCapTypeConstants * eEndCapType ) = 0;
      virtual HRESULT __stdcall raw_GetSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_AddSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_DeleteSuppressionVariable ( ) = 0;
      virtual HRESULT __stdcall raw_HasSuppressionVariable (
        /*[out,retval]*/ VARIANT_BOOL * IsSuppressionVariablePresent ) = 0;
};

enum EndCapTreatmentConstants
{
    NoCornerTreatment = 0,
    ApplyChamfer = 1,
    ApplyFillet = 2
};

struct __declspec(uuid("48b679bc-931b-4353-9833-dca42ff4ab8f"))
_IEndCapsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    EndCapPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );
    long GetCount ( );
    EndCapPtr Add (
        long NumSegments,
        SAFEARRAY * SegmentIds,
        _bstr_t MaterialName,
        VARIANT_BOOL CreateECBasedOnCrossSection,
        VARIANT_BOOL Inset,
        double InsetValue,
        VARIANT_BOOL Offset,
        double OffsetValue,
        VARIANT_BOOL RevOffset,
        VARIANT_BOOL CornerTreatment,
        double ChamferFilletValue,
        double Thickness,
        VARIANT_BOOL Inward,
        enum EndCapTreatmentConstants EndCapTreatment );
    EndCapPtr AddEx (
        long NumSegments,
        SAFEARRAY * SegmentIds,
        _bstr_t MaterialName,
        VARIANT_BOOL CreateECBasedOnCrossSection,
        VARIANT_BOOL Inset,
        double InsetValue,
        VARIANT_BOOL Offset,
        double OffsetValue,
        VARIANT_BOOL RevOffset,
        VARIANT_BOOL CornerTreatment,
        double ChamferFilletValue,
        double Thickness,
        enum EndCapTypeConstants eEndCapType,
        enum EndCapTreatmentConstants EndCapTreatment );
    HRESULT Delete (
        struct EndCap * EndCap );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct EndCap * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ long NumSegments,
        /*[in]*/ SAFEARRAY * SegmentIds,
        /*[in]*/ BSTR MaterialName,
        /*[in]*/ VARIANT_BOOL CreateECBasedOnCrossSection,
        /*[in]*/ VARIANT_BOOL Inset,
        /*[in]*/ double InsetValue,
        /*[in]*/ VARIANT_BOOL Offset,
        /*[in]*/ double OffsetValue,
        /*[in]*/ VARIANT_BOOL RevOffset,
        /*[in]*/ VARIANT_BOOL CornerTreatment,
        /*[in]*/ double ChamferFilletValue,
        /*[in]*/ double Thickness,
        /*[in]*/ VARIANT_BOOL Inward,
        /*[in]*/ enum EndCapTreatmentConstants EndCapTreatment,
        /*[out,retval]*/ struct EndCap * * EndCap ) = 0;
      virtual HRESULT __stdcall raw_AddEx (
        /*[in]*/ long NumSegments,
        /*[in]*/ SAFEARRAY * SegmentIds,
        /*[in]*/ BSTR MaterialName,
        /*[in]*/ VARIANT_BOOL CreateECBasedOnCrossSection,
        /*[in]*/ VARIANT_BOOL Inset,
        /*[in]*/ double InsetValue,
        /*[in]*/ VARIANT_BOOL Offset,
        /*[in]*/ double OffsetValue,
        /*[in]*/ VARIANT_BOOL RevOffset,
        /*[in]*/ VARIANT_BOOL CornerTreatment,
        /*[in]*/ double ChamferFilletValue,
        /*[in]*/ double Thickness,
        /*[in]*/ enum EndCapTypeConstants eEndCapType,
        /*[in]*/ enum EndCapTreatmentConstants EndCapTreatment,
        /*[out,retval]*/ struct EndCap * * EndCap ) = 0;
      virtual HRESULT __stdcall raw_Delete (
        /*[in]*/ struct EndCap * EndCap ) = 0;
};

enum DragComponentAnalysisOptionConstants
{
    seNoAnalysis = 0,
    seDetectCollisions = 1
};

enum DragComponentCollisionOptionConstants
{
    seDetectCollisionsEncounteredBySelectedPartOrSubassemblyOnly = 0,
    seDetectCollisionsAmongAllAnalyzedPartsOrSubassemblies = 1
};

struct __declspec(uuid("2052b07c-7514-46ac-ba34-39d0d12a4cc7"))
SuppressComponent : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetOccurrenceID))
    long OccurrenceID;
    __declspec(property(get=GetOccurrenceFileName))
    _bstr_t OccurrenceFileName;
    __declspec(property(get=GetOccurrenceDocument))
    IUnknownPtr OccurrenceDocument;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    HRESULT UnSuppress ( );
    HRESULT Delete ( );
    _bstr_t GetName ( );
    long GetOccurrenceID ( );
    _bstr_t GetOccurrenceFileName ( );
    IUnknownPtr GetOccurrenceDocument ( );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
};

struct __declspec(uuid("8c0abaef-77b5-41a8-9cd7-85d4896fb2ff"))
_ISuppressComponentAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetOccurrenceID))
    long OccurrenceID;
    __declspec(property(get=GetOccurrenceFileName))
    _bstr_t OccurrenceFileName;
    __declspec(property(get=GetOccurrenceDocument))
    IUnknownPtr OccurrenceDocument;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    HRESULT UnSuppress ( );
    HRESULT Delete ( );
    _bstr_t GetName ( );
    long GetOccurrenceID ( );
    _bstr_t GetOccurrenceFileName ( );
    IUnknownPtr GetOccurrenceDocument ( );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall raw_UnSuppress ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_OccurrenceID (
        /*[out,retval]*/ long * ID ) = 0;
      virtual HRESULT __stdcall get_OccurrenceFileName (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_OccurrenceDocument (
        /*[out,retval]*/ IUnknown * * OccDoc ) = 0;
      virtual HRESULT __stdcall raw_GetSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_AddSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_DeleteSuppressionVariable ( ) = 0;
      virtual HRESULT __stdcall raw_HasSuppressionVariable (
        /*[out,retval]*/ VARIANT_BOOL * IsSuppressionVariablePresent ) = 0;
};

enum AutoExplodeSelectionTypeConstants
{
    seTopLevelAssembly = 0,
    seSubassembly = 1
};

enum AutoExplodeTechniqueConstants
{
    seBySubassemblyLevel = 0,
    seByIndividualPart = 1
};

struct __declspec(uuid("ed61c38f-2a77-4d03-b270-7d93297cff7a"))
AsmCADDirects : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    AsmCADDirectPtr Add (
        _bstr_t AsmCopyFileName );
    AsmCADDirectPtr Item (
        const _variant_t & Index );
};

struct __declspec(uuid("c7c063a2-bedb-4a2a-9dea-09f14f9f292e"))
AsmCADDirect : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Update ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t _arg1 );
    HRESULT BreakFeatureLink ( );
    HRESULT UpdateFeature ( );
    HRESULT ChangeSourceFeature (
        _bstr_t OldPath,
        _bstr_t NewPath );
    _bstr_t SourcePath ( );
};

struct __declspec(uuid("f207efdf-caa2-4918-800d-28036b279f2a"))
_IAsmCADDirectsAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=Get_NewEnum))
    IUnknownPtr _NewEnum;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    AsmCADDirectPtr Add (
        _bstr_t AsmCopyFileName );
    AsmCADDirectPtr Item (
        const _variant_t & Index );
    IUnknownPtr Get_NewEnum ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR AsmCopyFileName,
        /*[out,retval]*/ struct AsmCADDirect * * ppOutAsmCADDirectFeature ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct AsmCADDirect * * Item ) = 0;
      virtual HRESULT __stdcall get__NewEnum (
        /*[out,retval]*/ IUnknown * * pEnum ) = 0;
};

struct __declspec(uuid("5a4a0650-b5fc-4307-af57-4cc578072bc3"))
_IAsmCADDirectAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;

    //
    // Wrapper methods for error-handling
    //

    TGFramework::ApplicationPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Update ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    HRESULT BreakFeatureLink ( );
    HRESULT UpdateFeature ( );
    HRESULT ChangeSourceFeature (
        _bstr_t OldPath,
        _bstr_t NewPath );
    _bstr_t SourcePath ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Update ( ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall raw_BreakFeatureLink ( ) = 0;
      virtual HRESULT __stdcall raw_UpdateFeature ( ) = 0;
      virtual HRESULT __stdcall raw_ChangeSourceFeature (
        /*[in]*/ BSTR OldPath,
        /*[in]*/ BSTR NewPath ) = 0;
      virtual HRESULT __stdcall raw_SourcePath (
        /*[out,retval]*/ BSTR * Name ) = 0;
};

enum AssemblyFileOpenPartActivationOptions
{
    seAssemblyFileOpenPartActivation_ActivateAll = 0,
    seAssemblyFileOpenPartActivation_InactivateAll = 1,
    seAssemblyFileOpenPartActivation_LastSaved = 2
};

enum AssemblyFileOpenSimplificationOptions
{
    seAssemblyFileOpenSimplification_AllSimplified = 0,
    seAssemblyFileOpenSimplification_AllDesigned = 1,
    seAssemblyFileOpenSimplification_LastSaved = 2
};

enum AssemblyFileOpenActivateChangedPartOptions
{
    seAssemblyFileOpenActivateChangedPart_Prompt = 0,
    seAssemblyFileOpenActivateChangedPart_Activate = 1,
    seAssemblyFileOpenActivateChangedPart_Inactivate = 1
};

struct __declspec(uuid("95135f03-015c-11d2-be0c-080036b4d502"))
_IAssemblyDocumentAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetAttributeQuery))
    TGFramework::AttributeQueryPtr AttributeQuery;
    __declspec(property(get=GetApplication))
    TGFramework::ApplicationPtr Application;
    __declspec(property(get=GetFullName))
    _bstr_t FullName;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetParent))
    TGFramework::ApplicationPtr Parent;
    __declspec(property(get=GetPath))
    _bstr_t Path;
    __declspec(property(get=GetVariables))
    IDispatchPtr Variables;
    __declspec(property(get=GetAsmRefPlanes))
    AsmRefPlanesPtr AsmRefPlanes;
    __declspec(property(get=GetReadOnly,put=PutReadOnly))
    VARIANT_BOOL ReadOnly;
    __declspec(property(get=GetAssemblyRecomputeEvents))
    IUnknownPtr AssemblyRecomputeEvents;
    __declspec(property(get=GetCoordinateSystems))
    TGPart::CoordinateSystemsPtr CoordinateSystems;
    __declspec(property(get=GetLayouts))
    LayoutsPtr Layouts;
    __declspec(property(get=GetLineSegments))
    LineSegmentsPtr LineSegments;
    __declspec(property(get=GetSegments))
    SegmentsPtr Segments;
    __declspec(property(get=GetSensors))
    TGFramework::SensorsPtr Sensors;
    __declspec(property(get=GetRoutingSlip))
    IDispatchPtr RoutingSlip;
    __declspec(property(get=GetCutawaysCount))
    long CutawaysCount;
    __declspec(property(get=GetExplosionsCount))
    long ExplosionsCount;
    __declspec(property(get=GetArcSegments))
    ArcSegmentsPtr ArcSegments;
    __declspec(property(get=GetSegmentRelations3d))
    SegmentRelations3dPtr SegmentRelations3d;
    __declspec(property(get=GetQueries))
    QueriesPtr Queries;
    __declspec(property(get=GetRelationshipsSelectSet))
    TGFramework::SelectSetPtr RelationshipsSelectSet;
    __declspec(property(get=GetAssemblyFamilyMembers))
    AssemblyFamilyMembersPtr AssemblyFamilyMembers;
    __declspec(property(get=GetIsFileFamilyByDocument))
    VARIANT_BOOL IsFileFamilyByDocument;
    __declspec(property(get=GetSelectSet))
    TGFramework::SelectSetPtr SelectSet;
    __declspec(property(get=GetSummaryInfo))
    IDispatchPtr SummaryInfo;
    __declspec(property(get=GetWindows))
    TGFramework::WindowsPtr Windows;
    __declspec(property(get=GetNamedViews))
    TGFramework::NamedViewsPtr NamedViews;
    __declspec(property(get=GetAssemblyPatterns))
    AssemblyPatternsPtr AssemblyPatterns;
    __declspec(property(get=GetProperties))
    IDispatchPtr Properties;
    __declspec(property(get=GetConfigurations))
    ConfigurationsPtr Configurations;
    __declspec(property(get=GetViewStyles))
    IDispatchPtr ViewStyles;
    __declspec(property(get=GetIsTemplate,put=PutIsTemplate))
    VARIANT_BOOL IsTemplate;
    __declspec(property(get=GetWireRuns))
    WireRunsPtr WireRuns;
    __declspec(property(get=GetWirePaths))
    WirePathsPtr WirePaths;
    __declspec(property(get=GetAssemblyProperties))
    AssemblyPropertiesPtr AssemblyProperties;
    __declspec(property(get=GetCurveSegments))
    CurveSegmentsPtr CurveSegments;
    __declspec(property(get=GetStatus,put=PutStatus))
    enum TGFramework::DocumentStatus Status;
    __declspec(property(get=GetBlocks))
    TGPart::SketchBlocksPtr Blocks;
    __declspec(property(get=GetGeometricVersion))
    long GeometricVersion;
    __declspec(property(get=GetIsGeometricVersionDirty))
    VARIANT_BOOL IsGeometricVersionDirty;
    __declspec(property(get=GetDimensionStyles))
    IDispatchPtr DimensionStyles;
    __declspec(property(get=GetVirtualComponentOccurrences))
    VirtualComponentOccurrencesPtr VirtualComponentOccurrences;
    __declspec(property(get=GetUnitsOfMeasure))
    TGFramework::UnitsOfMeasurePtr UnitsOfMeasure;
    __declspec(property(get=GetHidePreviousLevel,put=PutHidePreviousLevel))
    VARIANT_BOOL HidePreviousLevel;
    __declspec(property(get=GetActiveSketch))
    IDispatchPtr ActiveSketch;
    __declspec(property(get=GetType))
    enum TGFramework::DocumentTypeConstants Type;
    __declspec(property(get=GetIsAssemblySimplified))
    VARIANT_BOOL IsAssemblySimplified;
    __declspec(property(get=GetDocumentEvents))
    IUnknownPtr DocumentEvents;
    __declspec(property(get=GetRootStorage))
    IUnknownPtr RootStorage;
    __declspec(property(get=GetStructuralFrames))
    StructuralFramesPtr StructuralFrames;
    __declspec(property(get=GetAddInsStorage))
    IUnknownPtr AddInsStorage[][];
    __declspec(property(get=GetHasCapturedRelationships))
    VARIANT_BOOL HasCapturedRelationships;
    __declspec(property(get=GetAssemblyFeatures))
    AssemblyFeaturesPtr AssemblyFeatures;
    __declspec(property(get=GetAssemblyDrivenPartFeatures))
    AssemblyDrivenPartFeaturesPtr AssemblyDrivenPartFeatures;
    __declspec(property(get=GetCapturedRelationshipCount))
    long CapturedRelationshipCount;
    __declspec(property(get=GetDirty,put=PutDirty))
    VARIANT_BOOL Dirty;
    __declspec(property(get=GetPipes))
    PipesPtr Pipes;
    __declspec(property(get=GetCreatedVersion))
    _bstr_t CreatedVersion;
    __declspec(property(get=GetLastSavedVersion))
    _bstr_t LastSavedVersion;
    __declspec(property(get=GetHighlightSets))
    TGFramework::HighlightSetsPtr HighlightSets;
    __declspec(property(get=GetInPlaceActivated))
    VARIANT_BOOL InPlaceActivated;
    __declspec(property(get=GetIsFileAlternatePositionByDocument))
    VARIANT_BOOL IsFileAlternatePositionByDocument;
    __declspec(property(get=GetComponentLayouts))
    ComponentLayoutsPtr ComponentLayouts;
    __declspec(property(get=GetPaths))
    PathsPtr Paths;
    __declspec(property(get=GetHarnesses))
    HarnessesPtr Harnesses;
    __declspec(property(get=GetLayers))
    TGFramework::LayersPtr Layers;
    __declspec(property(get=GetUndoSteps,put=PutUndoSteps))
    long UndoSteps;
    __declspec(property(get=GetProfileUndoSteps,put=PutProfileUndoSteps))
    long ProfileUndoSteps;
    __declspec(property(get=GetLabelWeldDataCollection))
    TGPart::LabelWeldDataCollectionPtr LabelWeldDataCollection;
    __declspec(property(get=GetWeldmentAssembly,put=PutWeldmentAssembly))
    VARIANT_BOOL WeldmentAssembly;
    __declspec(property(get=GetWeldmentAssemblyBeadMaterial,put=PutWeldmentAssemblyBeadMaterial))
    _bstr_t WeldmentAssemblyBeadMaterial;
    __declspec(property(get=GetWeldmentAssemblyBeadDensity,put=PutWeldmentAssemblyBeadDensity))
    double WeldmentAssemblyBeadDensity;
    __declspec(property(get=GetActivateSimplifiedAssembly,put=PutActivateSimplifiedAssembly))
    VARIANT_BOOL ActivateSimplifiedAssembly;
    __declspec(property(get=GetHoleDataCollection))
    TGPart::HoleDataCollectionPtr HoleDataCollection;
    __declspec(property(get=GetIsSimplifyStateActive))
    VARIANT_BOOL IsSimplifyStateActive;
    __declspec(property(get=GetIsInsightFile))
    VARIANT_BOOL IsInsightFile;
    __declspec(property(get=GetAssemblyBodies))
    AssemblyBodiesPtr AssemblyBodies;
    __declspec(property(get=GetZones))
    ZonesPtr Zones;
    __declspec(property(get=GetFastenerSystems))
    FastenerSystemsPtr FastenerSystems;
    __declspec(property(get=GetTextStyles))
    IDispatchPtr TextStyles;
    __declspec(property(get=GetAssemblyGroups))
    AssemblyGroupsPtr AssemblyGroups;
    __declspec(property(get=GetTextCharStyles))
    IDispatchPtr TextCharStyles;
    __declspec(property(get=GetPMI))
    IDispatchPtr PMI;
    __declspec(property(get=GetStudyOwner))
    TGPart::StudyOwnerPtr StudyOwner;
    __declspec(property(get=GetDisplayName))
    _bstr_t DisplayName;
    __declspec(property(get=GetInterpartLinks))
    IDispatchPtr InterpartLinks;
    __declspec(property(get=GetItemNumbers))
    ItemNumbersPtr ItemNumbers;
    __declspec(property(get=GetConstructions))
    TGPart::ConstructionsPtr Constructions;
    __declspec(property(get=GetLinearStyles))
    IDispatchPtr LinearStyles;
    __declspec(property(get=GetFillStyles))
    IDispatchPtr FillStyles;
    __declspec(property(get=GetHatchPatternStyles))
    IDispatchPtr HatchPatternStyles;
    __declspec(property(get=GetAssemblyFamilyEvents))
    IUnknownPtr AssemblyFamilyEvents;
    __declspec(property(get=GetSectionViews))
    TGFramework::SectionViewsPtr SectionViews;
    __declspec(property(get=GetIsMultiCADDriven))
    VARIANT_BOOL IsMultiCADDriven;
    __declspec(property(get=GetAssemblyCopies))
    AssemblyCopiesPtr AssemblyCopies;
    __declspec(property(get=GetAssemblyMirrors))
    AssemblyMirrorsPtr AssemblyMirrors;
    __declspec(property(get=GetSimplifiedAssemblies))
    SimplifiedAssembliesPtr SimplifiedAssemblies;
    __declspec(property(get=GetAssemblyChangeEvents))
    IUnknownPtr AssemblyChangeEvents;
    __declspec(property(get=GetInterDocumentUpdate))
    TGFramework::InterDocumentUpdatePtr InterDocumentUpdate;
    __declspec(property(get=GetSketches3D))
    TGPart::Sketches3DPtr Sketches3D;
    __declspec(property(get=GetParts))
    PartsPtr Parts;
    __declspec(property(get=GetRelations3d))
    Relations3dPtr Relations3d;
    __declspec(property(get=GetPhysicalProperties))
    PhysicalPropertiesPtr PhysicalProperties;
    __declspec(property(get=GetFaceStyles))
    IDispatchPtr FaceStyles;
    __declspec(property(get=GetOccurrences))
    OccurrencesPtr Occurrences;
    __declspec(property(get=GetAssemblyConfigurationChangeEvents))
    IUnknownPtr AssemblyConfigurationChangeEvents;
    __declspec(property(get=GetAssemblyFamilyEvents2))
    IUnknownPtr AssemblyFamilyEvents2;
    __declspec(property(get=GetActiveConfiguration))
    _bstr_t ActiveConfiguration;
    __declspec(property(get=GetAssemblyPhysicalPropertiesChangeEvents))
    IUnknownPtr AssemblyPhysicalPropertiesChangeEvents;
    __declspec(property(get=GetSteeringWheel))
    TGFramework::SteeringWheelPtr SteeringWheel;
    __declspec(property(get=GetPerformanceMode,put=PutPerformanceMode))
    VARIANT_BOOL PerformanceMode;
    __declspec(property(get=GetHasMissingFiles))
    VARIANT_BOOL HasMissingFiles;
    __declspec(property(get=GetInternalComponents))
    InternalComponentsPtr InternalComponents;
    __declspec(property(get=GetEndCaps))
    EndCapsPtr EndCaps;
    __declspec(property(get=GetDecals))
    TGPart::DecalsPtr Decals;
    __declspec(property(get=GetAsmCADDirects))
    AsmCADDirectsPtr AsmCADDirects;
    __declspec(property(get=GetModelingInAssembly))
    VARIANT_BOOL ModelingInAssembly;
    __declspec(property(get=GetAssemblyPreview))
    VARIANT_BOOL AssemblyPreview;
    __declspec(property(get=GetReferencePointClouds))
    TGPart::ReferencePointCloudsPtr ReferencePointClouds;
    __declspec(property(get=GetProfileSets))
    TGPart::ProfileSetsPtr ProfileSets;
    __declspec(property(get=GetAssemblyModel))
    TGPart::ModelPtr AssemblyModel;

    //
    // Wrapper methods for error-handling
    //

    HRESULT Activate ( );
    TGFramework::ApplicationPtr GetApplication ( );
    HRESULT Close (
        const _variant_t & SaveChanges = vtMissing,
        const _variant_t & FileName = vtMissing,
        const _variant_t & RouteWorkbook = vtMissing );
    _bstr_t GetFullName ( );
    _bstr_t GetName ( );
    TGFramework::ApplicationPtr GetParent ( );
    _bstr_t GetPath ( );
    HRESULT PrintOut (
        const _variant_t & Printer = vtMissing,
        const _variant_t & NumCopies = vtMissing,
        const _variant_t & Orientation = vtMissing,
        const _variant_t & PaperSize = vtMissing,
        const _variant_t & Scale = vtMissing,
        const _variant_t & PrintToFile = vtMissing,
        const _variant_t & OutputFileName = vtMissing,
        const _variant_t & PrintRange = vtMissing,
        const _variant_t & Sheets = vtMissing,
        const _variant_t & ColorAsBlack = vtMissing,
        const _variant_t & Collate = vtMissing );
    VARIANT_BOOL GetReadOnly ( );
    IDispatchPtr GetRoutingSlip ( );
    HRESULT Save ( );
    HRESULT SaveAs (
        _bstr_t NewName,
        const _variant_t & IsATemplate = vtMissing,
        const _variant_t & FileFormat = vtMissing,
        const _variant_t & ReadOnlyEnforced = vtMissing,
        const _variant_t & ReadOnlyRecommended = vtMissing,
        const _variant_t & NewStatus = vtMissing,
        const _variant_t & CreateBackup = vtMissing,
        const _variant_t & UpdateLinkInContainer = vtMissing,
        const _variant_t & UpdateAllLinksInContainer = vtMissing );
    HRESULT SaveCopyAs (
        _bstr_t Name );
    HRESULT SaveAsJT (
        _bstr_t NewName,
        const _variant_t & Include_PreciseGeom = vtMissing,
        const _variant_t & Prod_Structure_Option = vtMissing,
        const _variant_t & Export_PMI = vtMissing,
        const _variant_t & Export_CoordinateSystem = vtMissing,
        const _variant_t & Export_3DBodies = vtMissing,
        const _variant_t & NumberofLODs = vtMissing,
        const _variant_t & JTFileUnit = vtMissing,
        const _variant_t & Write_Which_Files = vtMissing,
        const _variant_t & Use_Simplified_TopAsm = vtMissing,
        const _variant_t & Use_Simplified_SubAsm = vtMissing,
        const _variant_t & Use_Simplified_Part = vtMissing,
        const _variant_t & EnableDefaultOutputPath = vtMissing,
        const _variant_t & IncludeSEProperties = vtMissing,
        const _variant_t & Export_VisiblePartsOnly = vtMissing,
        const _variant_t & Export_VisibleConstructionsOnly = vtMissing,
        const _variant_t & RemoveUnsafeCharacters = vtMissing,
        const _variant_t & ExportSEPartFileAsSingleJTFile = vtMissing );
    _bstr_t SaveAsBIDM (
        _bstr_t FilePath,
        _bstr_t DocumentNumber,
        _bstr_t Revision,
        _bstr_t Title );
    _bstr_t ReviseBIDM (
        _bstr_t FilePath,
        _bstr_t Revision,
        _bstr_t Title );
    TGFramework::SelectSetPtr GetSelectSet ( );
    HRESULT SendMail (
        const _variant_t & Recipients = vtMissing,
        const _variant_t & Subject = vtMissing,
        const _variant_t & ReturnReceipt = vtMissing );
    IDispatchPtr GetSummaryInfo ( );
    TGFramework::WindowsPtr GetWindows ( );
    IDispatchPtr GetProperties ( );
    VARIANT_BOOL GetIsTemplate ( );
    void PutIsTemplate (
        VARIANT_BOOL IsTemplate );
    enum TGFramework::DocumentStatus GetStatus ( );
    void PutStatus (
        enum TGFramework::DocumentStatus Status );
    HRESULT EditProperties ( );
    TGFramework::UnitsOfMeasurePtr GetUnitsOfMeasure ( );
    IDispatchPtr GetActiveSketch ( );
    enum TGFramework::DocumentTypeConstants GetType ( );
    IUnknownPtr GetDocumentEvents ( );
    IUnknownPtr GetRootStorage ( );
    IUnknownPtr GetAddInsStorage (
        _bstr_t Name,
        long grfMode );
    VARIANT_BOOL GetDirty ( );
    void PutDirty (
        VARIANT_BOOL Dirty );
    TGFramework::AttributeQueryPtr GetAttributeQuery ( );
    _bstr_t GetCreatedVersion ( );
    _bstr_t GetLastSavedVersion ( );
    TGFramework::HighlightSetsPtr GetHighlightSets ( );
    VARIANT_BOOL GetInPlaceActivated ( );
    HRESULT SeekWriteAccess (
        VARIANT_BOOL * WriteAccess );
    long GetUndoSteps ( );
    void PutUndoSteps (
        long NumberOfUndoSteps );
    HRESULT CreatePreview ( );
    void PutReadOnly (
        VARIANT_BOOL ReadOnly );
    HRESULT SeekReadOnlyAccess (
        VARIANT_BOOL * ReadOnlyAccess );
    HRESULT ImportStyles2 (
        enum TGFramework::seStyleTypeConstants StyleType,
        VARIANT_BOOL bReplace,
        IDispatch * pSrcDocument );
    VARIANT_BOOL GetIsInsightFile ( );
    TGFramework::NamedViewsPtr GetNamedViews ( );
    HRESULT GetRegisteredCustomPropertiesBiDM (
        VARIANT * varPropInfo );
    _bstr_t SaveAsWithCustomPropertiesBIDM (
        _bstr_t FilePath,
        _bstr_t DocumentNumber,
        _bstr_t Revision,
        _bstr_t Title,
        const _variant_t & varPropInfo );
    _bstr_t ReviseWithCustomPropertiesBIDM (
        _bstr_t FilePath,
        _bstr_t Revision,
        _bstr_t Title,
        const _variant_t & varPropInfo );
    HRESULT SaveAsPRC (
        _bstr_t FileName );
    IDispatchPtr GetVariables ( );
    IDispatchPtr GetInterpartLinks ( );
    HRESULT FreezeAllInterpartLinks ( );
    HRESULT BreakAllInterpartLinks ( );
    HRESULT ThawAllInterpartLinks ( );
    HRESULT HasInterpartLinks (
        VARIANT_BOOL * pbHasInterpartLinks );
    HRESULT GetInContextAssemblyNameForInterpartLinks (
        BSTR * pbstrAssemblyName );
    _variant_t NewWindow (
        const _variant_t & NewWindowOptions = vtMissing,
        const _variant_t & Environment = vtMissing );
    HRESULT NewNavigatorWindow ( );
    PartsPtr GetParts ( );
    Relations3dPtr GetRelations3d ( );
    PhysicalPropertiesPtr GetPhysicalProperties ( );
    IDispatchPtr GetFaceStyles ( );
    IDispatchPtr CreateReference (
        struct Occurrence * Occurrence,
        const _variant_t & Entity );
    OccurrencesPtr GetOccurrences ( );
    AsmRefPlanesPtr GetAsmRefPlanes ( );
    HRESULT CheckInterference (
        long NumElementsSet1,
        SAFEARRAY * * Set1,
        enum InterferenceStatusConstants * Status,
        const _variant_t & ComparisonMethod,
        const _variant_t & NumElementsSet2,
        const _variant_t & Set2,
        const _variant_t & AddInterferenceAsOccurrence,
        const _variant_t & ReportFilename,
        const _variant_t & ReportType,
        VARIANT * NumInterferences,
        VARIANT * InterferingPartsSet1,
        VARIANT * InterferingPartsOtherSet,
        VARIANT * ConfirmedInterference,
        VARIANT * InterferenceOccurrence,
        const _variant_t & IgnoreThreadInterferences = vtMissing );
    HRESULT BindKeyToObject (
        SAFEARRAY * * ReferenceKey,
        IDispatch * * Object );
    TGPart::CoordinateSystemsPtr GetCoordinateSystems ( );
    TGPart::StudyOwnerPtr GetStudyOwner ( );
    HRESULT MinimumDistance (
        IDispatch * Element1,
        IDispatch * Element2,
        double * Distance,
        SAFEARRAY * * Point1,
        SAFEARRAY * * Point2 );
    IUnknownPtr GetAssemblyRecomputeEvents ( );
    LayoutsPtr GetLayouts ( );
    LineSegmentsPtr GetLineSegments ( );
    SegmentsPtr GetSegments ( );
    HRESULT GetGlobalParameter (
        enum AssemblyGlobalConstants Parameter,
        VARIANT * Value );
    HRESULT SetGlobalParameter (
        enum AssemblyGlobalConstants Parameter,
        const _variant_t & Value );
    TGFramework::SensorsPtr GetSensors ( );
    long GetCutawaysCount ( );
    long GetExplosionsCount ( );
    ArcSegmentsPtr GetArcSegments ( );
    SegmentRelations3dPtr GetSegmentRelations3d ( );
    QueriesPtr GetQueries ( );
    TGFramework::SelectSetPtr GetRelationshipsSelectSet ( );
    AssemblyFamilyMembersPtr GetAssemblyFamilyMembers ( );
    VARIANT_BOOL GetIsFileFamilyByDocument ( );
    VARIANT_BOOL GetIsFileAlternatePositionByDocument ( );
    HRESULT CreateFamilyFile (
        _bstr_t FirstMemberName,
        _bstr_t SecondMemberName,
        VARIANT_BOOL bCreateAlternatePosition );
    HRESULT DisperseSubassembly (
        IDispatch * Subassembly,
        VARIANT_BOOL bAllOccurrences );
    HRESULT TransferOccurrences (
        SAFEARRAY * * OccurrencesToTransfer,
        const _variant_t & Subassembly = vtMissing );
    OccurrencePtr BundleOccurrences (
        SAFEARRAY * * OccurrencesToTransfer,
        _bstr_t OccurrenceFileName,
        const _variant_t & TemplateFileName = vtMissing,
        const _variant_t & Subassembly = vtMissing );
    AssemblyPatternsPtr GetAssemblyPatterns ( );
    HRESULT MeasureAngle (
        IDispatch * Element1,
        IDispatch * Element2,
        double * TrueAngle,
        double * ApparentAngle,
        const _variant_t & Element3 = vtMissing );
    HRESULT NormalDistance (
        IDispatch * Element1,
        IDispatch * Element2,
        double * TrueDistance,
        double * ApparentDistance,
        double * DeltaX,
        double * DeltaY,
        double * DeltaZ,
        const _variant_t & CoordinateSystem = vtMissing );
    ConfigurationsPtr GetConfigurations ( );
    HRESULT RenameFile (
        _bstr_t OldPath,
        _bstr_t NewPath );
    HRESULT SetExternalPaths (
        SAFEARRAY * * VecUnopenedPath );
    HRESULT UpdateExternalPaths ( );
    IDispatchPtr GetViewStyles ( );
    HRESULT ImportStyles (
        _bstr_t FileName,
        const _variant_t & Overwrite = vtMissing );
    WireRunsPtr GetWireRuns ( );
    WirePathsPtr GetWirePaths ( );
    AssemblyPropertiesPtr GetAssemblyProperties ( );
    CurveSegmentsPtr GetCurveSegments ( );
    HRESULT GenerateWireReport (
        enum AssemblyReportTypeConstants ReportType,
        const _variant_t & FileNameToSaveReport,
        int FieldsToGenerate );
    HRESULT ActivateAll ( );
    HRESULT UpdateAll ( );
    HRESULT GetContainerDocumentAndMatrixOfIPADoc (
        IDispatch * * ContainerDocument,
        SAFEARRAY * * Matrix );
    HRESULT CopySketch (
        IDispatch * SourceLayoutOrSketch,
        IDispatch * TargetPartOrAssembly,
        VARIANT_BOOL bAssociativeCopy,
        VARIANT * pvCopySketchErrorStatus );
    long GetGeometricVersion ( );
    VARIANT_BOOL GetIsGeometricVersionDirty ( );
    IDispatchPtr GetDimensionStyles ( );
    TGFramework::LayersPtr GetLayers ( );
    TGPart::MeasureVariablePtr AddMeasureVariable (
        enum TGPart::MeasureVariableTypeConstants Type,
        enum TGPart::MeasureVariableValueConstants ValueType,
        IDispatch * Geom1,
        IDispatch * Geom2,
        const _variant_t & Geom3 = vtMissing );
    VirtualComponentOccurrencesPtr GetVirtualComponentOccurrences ( );
    HRESULT PublishVirtualComponents ( );
    VARIANT_BOOL GetHidePreviousLevel ( );
    void PutHidePreviousLevel (
        VARIANT_BOOL bHidePreviousLevel );
    long GetProfileUndoSteps ( );
    void PutProfileUndoSteps (
        long NumberOfUndoSteps );
    HRESULT CreateOrEditSimplifiedAssembly (
        long NumOccurrenceExclude,
        SAFEARRAY * * OccurrenceExclude,
        double dExcludeRangeRatio,
        long NumOccurrenceInclude,
        SAFEARRAY * * OccurrenceInclude );
    HRESULT GetSimplifiedAssemblyInputs (
        long * NumOccurrenceExclude,
        SAFEARRAY * * OccurrenceExclude,
        double * dExcludeRangeRatio,
        long * NumOccurrenceInclude,
        SAFEARRAY * * OccurrenceInclude );
    HRESULT UpdateSimplifiedAssembly ( );
    VARIANT_BOOL GetIsAssemblySimplified ( );
    HRESULT DeleteSimplifiedAssembly ( );
    HRESULT SaveSimplifiedAssemblyAs (
        _bstr_t SaveFileName );
    VARIANT_BOOL GetIsSimplifyStateActive ( );
    StructuralFramesPtr GetStructuralFrames ( );
    VARIANT_BOOL GetHasCapturedRelationships ( );
    AssemblyFeaturesPtr GetAssemblyFeatures ( );
    AssemblyDrivenPartFeaturesPtr GetAssemblyDrivenPartFeatures ( );
    long GetCapturedRelationshipCount ( );
    HRESULT GetCapturedRelationshipInformation (
        SAFEARRAY * * RelationshipTypes,
        SAFEARRAY * * OffsetTypes,
        SAFEARRAY * * Offsets,
        VARIANT * Faces );
    PipesPtr GetPipes ( );
    ComponentLayoutsPtr GetComponentLayouts ( );
    PathsPtr GetPaths ( );
    HRESULT UpdateDocument (
        const _variant_t & FutureUse1 = vtMissing,
        const _variant_t & FutureUse2 = vtMissing );
    HarnessesPtr GetHarnesses ( );
    TGPart::LabelWeldDataCollectionPtr GetLabelWeldDataCollection ( );
    void PutWeldmentAssembly (
        VARIANT_BOOL IsWeldmentAssembly );
    VARIANT_BOOL GetWeldmentAssembly ( );
    void PutWeldmentAssemblyBeadMaterial (
        _bstr_t BeadMaterial );
    _bstr_t GetWeldmentAssemblyBeadMaterial ( );
    void PutWeldmentAssemblyBeadDensity (
        double BeadDensity );
    double GetWeldmentAssemblyBeadDensity ( );
    HRESULT GetBaseStyle (
        enum AssemblyBaseStylesConstants BaseStyleType,
        struct TGFramework::FaceStyle * * BaseStyle );
    HRESULT SetBaseStyle (
        enum AssemblyBaseStylesConstants BaseStyleType,
        struct TGFramework::FaceStyle * BaseStyle );
    HRESULT SaveModelAs (
        IDispatch * Occurrence,
        _bstr_t SaveFileName );
    void PutActivateSimplifiedAssembly (
        VARIANT_BOOL bActivate );
    VARIANT_BOOL GetActivateSimplifiedAssembly ( );
    TGPart::HoleDataCollectionPtr GetHoleDataCollection ( );
    HRESULT GenerateWireHarnessReport (
        enum AssemblyWireHarnessReportTypeConstants ReportType,
        const _variant_t & FileNameToSaveReport = vtMissing,
        const _variant_t & Selection = vtMissing,
        const _variant_t & Window = vtMissing,
        const _variant_t & NumberOfReportProperties = vtMissing,
        const _variant_t & AssemblyReportProperties = vtMissing,
        const _variant_t & NumberOfSortItems = vtMissing,
        const _variant_t & SortProperties = vtMissing,
        const _variant_t & SortOrder = vtMissing,
        const _variant_t & Justification = vtMissing,
        const _variant_t & UpdateTemplate = vtMissing );
    AssemblyBodiesPtr GetAssemblyBodies ( );
    IDispatchPtr CreateReference2 (
        IDispatch * Object,
        const _variant_t & Entity );
    HRESULT UpdatePathfinder (
        enum AssemblyPathfinderUpdateConstants UpdateType );
    ZonesPtr GetZones ( );
    HRESULT UpdateStructureCache (
        enum UpdateStructureCacheConstants UpdateType );
    HRESULT DeleteStructureCache ( );
    FastenerSystemsPtr GetFastenerSystems ( );
    AssemblyGroupsPtr GetAssemblyGroups ( );
    HRESULT CheckInterference2 (
        long NumElementsSet1,
        SAFEARRAY * * Set1,
        enum InterferenceStatusConstants * Status,
        const _variant_t & ComparisonMethod,
        const _variant_t & NumElementsSet2,
        const _variant_t & Set2,
        const _variant_t & AddInterferenceAsOccurrence,
        const _variant_t & ReportFilename,
        const _variant_t & ReportType,
        VARIANT * NumInterferences,
        VARIANT * InterferingPartsSet1,
        VARIANT * InterferingPartsOtherSet,
        VARIANT * ConfirmedInterference,
        VARIANT * InterferenceOccurrence,
        const _variant_t & IgnoreSameNominalDiaConstant = vtMissing,
        const _variant_t & IgnoreNonThreadVsThreadConstant = vtMissing );
    HRESULT CheckInterference3 (
        long NumElementsSet1,
        SAFEARRAY * * Set1,
        enum InterferenceStatusConstants * Status,
        const _variant_t & ComparisonMethod,
        const _variant_t & NumElementsSet2,
        const _variant_t & Set2,
        const _variant_t & AddInterferenceAsOccurrence,
        const _variant_t & ReportFilename,
        const _variant_t & ReportType,
        VARIANT * NumInterferences,
        VARIANT * InterferingPartsSet1,
        VARIANT * InterferingPartsOtherSet,
        VARIANT * ConfirmedInterference,
        VARIANT * InterferenceOccurrence,
        const _variant_t & IgnoreSameNominalDiaConstant,
        const _variant_t & IgnoreNonThreadVsThreadConstant,
        VARIANT_BOOL bAllowConstructions,
        VARIANT_BOOL bShowInterferenceVolume );
    HRESULT TranslateMultipleOccurrences (
        long lNumberOfOccurrences,
        SAFEARRAY * * Occurrences,
        enum MoveMultipleMoveTypeConstants MoveType,
        enum MoveMultipleRelationshipConstants RelationshipMaintenance,
        double FromX,
        double FromY,
        double FromZ,
        double ToX,
        double ToY,
        double ToZ,
        VARIANT * MovedOrCopiedOccurrences );
    HRESULT RotateMultipleOccurrences (
        long lNumberOfOccurrences,
        SAFEARRAY * * Occurrences,
        enum MoveMultipleMoveTypeConstants MoveType,
        enum MoveMultipleRelationshipConstants RelationshipMaintenance,
        double AxisX,
        double AxisY,
        double AxisZ,
        double Angle,
        VARIANT * MovedOrCopiedOccurrences );
    HRESULT GoalSeek (
        _bstr_t NameTargetVariable,
        _bstr_t NameVariableToChange,
        double dTargetValue,
        double dTimeLimitInSecs,
        long NumIterationsLimit,
        double * dTimeElapsed,
        long * NumIterations,
        VARIANT_BOOL * TimeLimitExceeded,
        VARIANT_BOOL * IterationsLimitExceeded );
    IDispatchPtr GetPMI ( );
    HRESULT PMI_ByModelState (
        IDispatch * * PMIObj,
        enum TGPart::PMIModelStateConstants PMIModelState );
    _bstr_t GetDisplayName ( );
    ItemNumbersPtr GetItemNumbers ( );
    TGPart::ConstructionsPtr GetConstructions ( );
    HRESULT GetContainerDocumentAndOccurrenceOfIPADoc (
        IDispatch * * ContainerDocument,
        IDispatch * * IPAOccurrence );
    HRESULT GetTopDocumentAndSubOccurrenceOfIPADoc (
        IDispatch * * TopDocument,
        IDispatch * * IPASubOccurrence );
    IDispatchPtr GetLinearStyles ( );
    IDispatchPtr GetFillStyles ( );
    IDispatchPtr GetHatchPatternStyles ( );
    IUnknownPtr GetAssemblyFamilyEvents ( );
    IUnknownPtr GetAssemblyFamilyEvents2 ( );
    TGFramework::SectionViewsPtr GetSectionViews ( );
    HRESULT Range (
        double * x_min,
        double * y_min,
        double * z_min,
        double * x_max,
        double * y_max,
        double * z_max );
    HRESULT ReplaceComponents (
        SAFEARRAY * * TargetComponents,
        _bstr_t ReplacementFilePath,
        enum ConstraintReplacementConstants ConstraintReplacementOption );
    VARIANT_BOOL GetIsMultiCADDriven ( );
    AssemblyCopiesPtr GetAssemblyCopies ( );
    AssemblyMirrorsPtr GetAssemblyMirrors ( );
    SimplifiedAssembliesPtr GetSimplifiedAssemblies ( );
    IUnknownPtr GetAssemblyChangeEvents ( );
    IUnknownPtr GetAssemblyConfigurationChangeEvents ( );
    HRESULT PathfinderScrollToSelection ( );
    TGFramework::InterDocumentUpdatePtr GetInterDocumentUpdate ( );
    TGPart::Sketches3DPtr GetSketches3D ( );
    HRESULT MeasureDistance (
        IDispatch * Element1,
        IDispatch * Element2,
        enum TGPart::MeasureDistanceTypeConstants DistanceType,
        double * Distance,
        double * DX,
        double * DY,
        double * DZ,
        SAFEARRAY * * Point1,
        SAFEARRAY * * Point2 );
    HRESULT MeasureAngleEx (
        IDispatch * Element1,
        IDispatch * Element2,
        IDispatch * Element3,
        double * Angle1,
        double * Angle2,
        double * Angle3,
        double * Angle4 );
    HRESULT InquireElement (
        IDispatch * Element,
        SAFEARRAY * * InPoint,
        const _variant_t & CoordinateSystem,
        SAFEARRAY * * Point,
        double * SurfaceArea,
        double * Volume,
        double * Length );
    HRESULT GetDrivenDrivingInfo (
        IDispatch * Element,
        VARIANT * DrivenOccurrencesArray,
        VARIANT * DrivingOccurrencesArray );
    _bstr_t GetActiveConfiguration ( );
    TGPart::SketchBlocksPtr GetBlocks ( );
    IUnknownPtr GetAssemblyPhysicalPropertiesChangeEvents ( );
    IDispatchPtr GetTextStyles ( );
    IDispatchPtr GetTextCharStyles ( );
    HRESULT CreateCloneComponents (
        SAFEARRAY * * ComponentsToClone,
        SAFEARRAY * * ReferenceGeometryFaces,
        SAFEARRAY * * CloneEnviornment,
        enum CloneComponentOptions CloneOptions,
        VARIANT_BOOL bCreateGroup,
        enum CloneMatchTypeOptions CloneMatchType,
        long * ErrorStatus );
    HRESULT Get3dPrintInfo (
        int * iNumberOfTriangles,
        int * iNumberOfPoints,
        int * iNumberOfEdges,
        double * dMeshSurfaceArea,
        double * dMeshVolume,
        double * dFileSize,
        double * dExportToleranceValue,
        double * dSurfacePlaneAngTol,
        enum TGPart::Print3DFileType Type );
    HRESULT PublishVirtualComponentsBIDM (
        const _variant_t & ListOfDocumentNumbers,
        const _variant_t & ListOfRevisionIDs,
        const _variant_t & ListOfTitles = vtMissing );
    HRESULT LoadUOMPreferences (
        VARIANT_BOOL UpdateUomGlobals );
    void PutName (
        _bstr_t Name );
    TGFramework::SteeringWheelPtr GetSteeringWheel ( );
    _bstr_t SaveModelAsBiDM (
        IDispatch * Occurrence,
        _bstr_t FilePath,
        _bstr_t DocumentNumber,
        _bstr_t Revision,
        _bstr_t Title );
    void PutPerformanceMode (
        VARIANT_BOOL pbUsePerformanceMode );
    VARIANT_BOOL GetPerformanceMode ( );
    VARIANT_BOOL GetHasMissingFiles ( );
    HRESULT GetMissingFilesInfo (
        VARIANT * missingFilesAndObjects );
    HRESULT CopytoPMI (
        IDispatch * featureObj,
        enum TGPart::seCopytoPMIConstants Type );
    InternalComponentsPtr GetInternalComponents ( );
    EndCapsPtr GetEndCaps ( );
    HRESULT DragComponentTranslation (
        IDispatch * OccurrenceToDrag,
        enum DragComponentAnalysisOptionConstants AnalysisOption,
        enum DragComponentCollisionOptionConstants CollisionOption,
        double Distance,
        VARIANT_BOOL ConsiderMovingParts,
        VARIANT_BOOL ConsiderInactiveParts,
        VARIANT_BOOL MoveGroundedParts,
        double DirectionX,
        double DirectionY,
        double DirectionZ,
        double Sensitivity,
        IDispatch * EdgeOrAxis,
        VARIANT_BOOL * CollisionFound,
        SAFEARRAY * * CollidingPart );
    HRESULT DragComponentRotation (
        IDispatch * OccurrenceToDrag,
        enum DragComponentAnalysisOptionConstants AnalysisOption,
        enum DragComponentCollisionOptionConstants CollisionOption,
        double Angle,
        VARIANT_BOOL ConsiderMovingParts,
        VARIANT_BOOL ConsiderInactiveParts,
        VARIANT_BOOL MoveGroundedParts,
        double DirectionX,
        double DirectionY,
        double DirectionZ,
        double Sensitivity,
        IDispatch * EdgeOrAxis,
        VARIANT_BOOL * CollisionFound,
        SAFEARRAY * * CollidingPart );
    HRESULT BeginCachedSolve ( );
    HRESULT EndCachedSolve ( );
    HRESULT SetSuppressComponent (
        IDispatch * OccurrenceToSuppress,
        struct SuppressComponent * * SuppressComponent );
    HRESULT GetSuppressedComponents (
        enum AssemblyComponentTypeConstants ComponentType,
        long * SuppressedComponentCount,
        SAFEARRAY * * SuppressedComponents );
    HRESULT CheckInterference4 (
        long NumElementsSet1,
        SAFEARRAY * * Set1,
        enum InterferenceStatusConstants * Status,
        const _variant_t & ComparisonMethod,
        const _variant_t & NumElementsSet2,
        const _variant_t & Set2,
        const _variant_t & AddInterferenceAsOccurrence,
        const _variant_t & ReportFilename,
        const _variant_t & ReportType,
        VARIANT * NumInterferences,
        VARIANT * InterferingPartsSet1,
        VARIANT * InterferingPartsOtherSet,
        VARIANT * ConfirmedInterference,
        VARIANT * InterferenceOccurrence,
        const _variant_t & IgnoreSameNominalDiaConstant,
        const _variant_t & IgnoreNonThreadVsThreadConstant,
        VARIANT_BOOL ShowIntersectionVolume );
    TGPart::DecalsPtr GetDecals ( );
    HRESULT AutoExplode (
        enum AutoExplodeSelectionTypeConstants AutoExplodeSelectionType,
        VARIANT_BOOL BindAllSubassemblies,
        enum AutoExplodeTechniqueConstants ExplodeTechnique,
        BSTR * ErrorCode,
        double SpreadDistance,
        IDispatch * Subassembly );
    AsmCADDirectsPtr GetAsmCADDirects ( );
    VARIANT_BOOL GetModelingInAssembly ( );
    VARIANT_BOOL GetAssemblyPreview ( );
    HRESULT EditAssembly ( );
    HRESULT EditAssemblyWithOptions (
        enum AssemblyFileOpenPartActivationOptions ePartActivation,
        enum AssemblyFileOpenSimplificationOptions ePartSimplification,
        enum AssemblyFileOpenSimplificationOptions eSubassemblySimplification,
        enum AssemblyFileOpenActivateChangedPartOptions eActivateChangedParts );
    TGPart::ReferencePointCloudsPtr GetReferencePointClouds ( );
    TGPart::ProfileSetsPtr GetProfileSets ( );
    TGPart::ModelPtr GetAssemblyModel ( );
    HRESULT PublishInternalComponents (
        _bstr_t bstrFileLocation,
        _bstr_t bstrPartTemplatePath,
        _bstr_t bstrSheetmetalTemplatePath,
        _bstr_t bstrAsmTemplatePath,
        _bstr_t bstrMaterial );
    HRESULT ArrangeDimensionsInSelectSet (
        double dStackPitchMultiplier,
        VARIANT_BOOL bAssociative );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Activate ( ) = 0;
      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct TGFramework::Application * * Application ) = 0;
      virtual HRESULT __stdcall raw_Close (
        /*[in]*/ VARIANT SaveChanges = vtMissing,
        /*[in]*/ VARIANT FileName = vtMissing,
        /*[in]*/ VARIANT RouteWorkbook = vtMissing ) = 0;
      virtual HRESULT __stdcall get_FullName (
        /*[out,retval]*/ BSTR * FullName ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ struct TGFramework::Application * * Parent ) = 0;
      virtual HRESULT __stdcall get_Path (
        /*[out,retval]*/ BSTR * Path ) = 0;
      virtual HRESULT __stdcall raw_PrintOut (
        /*[in]*/ VARIANT Printer = vtMissing,
        /*[in]*/ VARIANT NumCopies = vtMissing,
        /*[in]*/ VARIANT Orientation = vtMissing,
        /*[in]*/ VARIANT PaperSize = vtMissing,
        /*[in]*/ VARIANT Scale = vtMissing,
        /*[in]*/ VARIANT PrintToFile = vtMissing,
        /*[in]*/ VARIANT OutputFileName = vtMissing,
        /*[in]*/ VARIANT PrintRange = vtMissing,
        /*[in]*/ VARIANT Sheets = vtMissing,
        /*[in]*/ VARIANT ColorAsBlack = vtMissing,
        /*[in]*/ VARIANT Collate = vtMissing ) = 0;
      virtual HRESULT __stdcall get_ReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * ReadOnly ) = 0;
      virtual HRESULT __stdcall get_RoutingSlip (
        /*[out,retval]*/ IDispatch * * RoutingSlip ) = 0;
      virtual HRESULT __stdcall raw_Save ( ) = 0;
      virtual HRESULT __stdcall raw_SaveAs (
        /*[in]*/ BSTR NewName,
        /*[in]*/ VARIANT IsATemplate = vtMissing,
        /*[in]*/ VARIANT FileFormat = vtMissing,
        /*[in]*/ VARIANT ReadOnlyEnforced = vtMissing,
        /*[in]*/ VARIANT ReadOnlyRecommended = vtMissing,
        /*[in]*/ VARIANT NewStatus = vtMissing,
        /*[in]*/ VARIANT CreateBackup = vtMissing,
        /*[in]*/ VARIANT UpdateLinkInContainer = vtMissing,
        /*[in]*/ VARIANT UpdateAllLinksInContainer = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_SaveCopyAs (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall raw_SaveAsJT (
        /*[in]*/ BSTR NewName,
        /*[in]*/ VARIANT Include_PreciseGeom = vtMissing,
        /*[in]*/ VARIANT Prod_Structure_Option = vtMissing,
        /*[in]*/ VARIANT Export_PMI = vtMissing,
        /*[in]*/ VARIANT Export_CoordinateSystem = vtMissing,
        /*[in]*/ VARIANT Export_3DBodies = vtMissing,
        /*[in]*/ VARIANT NumberofLODs = vtMissing,
        /*[in]*/ VARIANT JTFileUnit = vtMissing,
        /*[in]*/ VARIANT Write_Which_Files = vtMissing,
        /*[in]*/ VARIANT Use_Simplified_TopAsm = vtMissing,
        /*[in]*/ VARIANT Use_Simplified_SubAsm = vtMissing,
        /*[in]*/ VARIANT Use_Simplified_Part = vtMissing,
        /*[in]*/ VARIANT EnableDefaultOutputPath = vtMissing,
        /*[in]*/ VARIANT IncludeSEProperties = vtMissing,
        /*[in]*/ VARIANT Export_VisiblePartsOnly = vtMissing,
        /*[in]*/ VARIANT Export_VisibleConstructionsOnly = vtMissing,
        /*[in]*/ VARIANT RemoveUnsafeCharacters = vtMissing,
        /*[in]*/ VARIANT ExportSEPartFileAsSingleJTFile = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_SaveAsBIDM (
        /*[in]*/ BSTR FilePath,
        /*[in]*/ BSTR DocumentNumber,
        /*[in]*/ BSTR Revision,
        /*[in]*/ BSTR Title,
        /*[out,retval]*/ BSTR * NewFileName ) = 0;
      virtual HRESULT __stdcall raw_ReviseBIDM (
        /*[in]*/ BSTR FilePath,
        /*[in]*/ BSTR Revision,
        /*[in]*/ BSTR Title,
        /*[out,retval]*/ BSTR * NewFileName ) = 0;
      virtual HRESULT __stdcall get_SelectSet (
        /*[out,retval]*/ struct TGFramework::SelectSet * * SelectSet ) = 0;
      virtual HRESULT __stdcall raw_SendMail (
        /*[in]*/ VARIANT Recipients = vtMissing,
        /*[in]*/ VARIANT Subject = vtMissing,
        /*[in]*/ VARIANT ReturnReceipt = vtMissing ) = 0;
      virtual HRESULT __stdcall get_SummaryInfo (
        /*[out,retval]*/ IDispatch * * SummaryInfo ) = 0;
      virtual HRESULT __stdcall get_Windows (
        /*[out,retval]*/ struct TGFramework::Windows * * Windows ) = 0;
      virtual HRESULT __stdcall get_Properties (
        /*[out,retval]*/ IDispatch * * Properties ) = 0;
      virtual HRESULT __stdcall get_IsTemplate (
        /*[out,retval]*/ VARIANT_BOOL * IsTemplate ) = 0;
      virtual HRESULT __stdcall put_IsTemplate (
        /*[in]*/ VARIANT_BOOL IsTemplate ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum TGFramework::DocumentStatus * Status ) = 0;
      virtual HRESULT __stdcall put_Status (
        /*[in]*/ enum TGFramework::DocumentStatus Status ) = 0;
      virtual HRESULT __stdcall raw_EditProperties ( ) = 0;
      virtual HRESULT __stdcall get_UnitsOfMeasure (
        /*[out,retval]*/ struct TGFramework::UnitsOfMeasure * * UnitsOfMeasurement ) = 0;
      virtual HRESULT __stdcall get_ActiveSketch (
        /*[out,retval]*/ IDispatch * * ActiveSketch ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::DocumentTypeConstants * Type ) = 0;
      virtual HRESULT __stdcall get_DocumentEvents (
        /*[out,retval]*/ struct IUnknown * * Events ) = 0;
      virtual HRESULT __stdcall get_RootStorage (
        /*[out,retval]*/ IUnknown * * RootStorageUnknown ) = 0;
      virtual HRESULT __stdcall get_AddInsStorage (
        /*[in]*/ BSTR Name,
        /*[in]*/ long grfMode,
        /*[out,retval]*/ IUnknown * * AddInsStorageUnknown ) = 0;
      virtual HRESULT __stdcall get_Dirty (
        /*[out,retval]*/ VARIANT_BOOL * Dirty ) = 0;
      virtual HRESULT __stdcall put_Dirty (
        /*[in]*/ VARIANT_BOOL Dirty ) = 0;
      virtual HRESULT __stdcall get_AttributeQuery (
        /*[out,retval]*/ struct TGFramework::AttributeQuery * * AttributeQuery ) = 0;
      virtual HRESULT __stdcall get_CreatedVersion (
        /*[out,retval]*/ BSTR * Version ) = 0;
      virtual HRESULT __stdcall get_LastSavedVersion (
        /*[out,retval]*/ BSTR * Version ) = 0;
      virtual HRESULT __stdcall get_HighlightSets (
        /*[out,retval]*/ struct TGFramework::HighlightSets * * HighlightSets ) = 0;
      virtual HRESULT __stdcall get_InPlaceActivated (
        /*[out,retval]*/ VARIANT_BOOL * InPlaceActivated ) = 0;
      virtual HRESULT __stdcall raw_SeekWriteAccess (
        /*[out]*/ VARIANT_BOOL * WriteAccess ) = 0;
      virtual HRESULT __stdcall get_UndoSteps (
        /*[out,retval]*/ long * NumberOfUndoSteps ) = 0;
      virtual HRESULT __stdcall put_UndoSteps (
        /*[in]*/ long NumberOfUndoSteps ) = 0;
      virtual HRESULT __stdcall raw_CreatePreview ( ) = 0;
      virtual HRESULT __stdcall put_ReadOnly (
        /*[in]*/ VARIANT_BOOL ReadOnly ) = 0;
      virtual HRESULT __stdcall raw_SeekReadOnlyAccess (
        /*[out]*/ VARIANT_BOOL * ReadOnlyAccess ) = 0;
      virtual HRESULT __stdcall raw_ImportStyles2 (
        /*[in]*/ enum TGFramework::seStyleTypeConstants StyleType,
        /*[in]*/ VARIANT_BOOL bReplace,
        /*[in]*/ IDispatch * pSrcDocument ) = 0;
      virtual HRESULT __stdcall get_IsInsightFile (
        /*[out,retval]*/ VARIANT_BOOL * IsInsight ) = 0;
      virtual HRESULT __stdcall get_NamedViews (
        /*[out,retval]*/ struct TGFramework::NamedViews * * NamedViews ) = 0;
      virtual HRESULT __stdcall raw_GetRegisteredCustomPropertiesBiDM (
        /*[out]*/ VARIANT * varPropInfo ) = 0;
      virtual HRESULT __stdcall raw_SaveAsWithCustomPropertiesBIDM (
        /*[in]*/ BSTR FilePath,
        /*[in]*/ BSTR DocumentNumber,
        /*[in]*/ BSTR Revision,
        /*[in]*/ BSTR Title,
        /*[in]*/ VARIANT varPropInfo,
        /*[out,retval]*/ BSTR * NewFileName ) = 0;
      virtual HRESULT __stdcall raw_ReviseWithCustomPropertiesBIDM (
        /*[in]*/ BSTR FilePath,
        /*[in]*/ BSTR Revision,
        /*[in]*/ BSTR Title,
        /*[in]*/ VARIANT varPropInfo,
        /*[out,retval]*/ BSTR * NewFileName ) = 0;
      virtual HRESULT __stdcall raw_SaveAsPRC (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall get_Variables (
        /*[out,retval]*/ IDispatch * * Vars ) = 0;
      virtual HRESULT __stdcall get_InterpartLinks (
        /*[out,retval]*/ IDispatch * * InterpartLinks ) = 0;
      virtual HRESULT __stdcall raw_FreezeAllInterpartLinks ( ) = 0;
      virtual HRESULT __stdcall raw_BreakAllInterpartLinks ( ) = 0;
      virtual HRESULT __stdcall raw_ThawAllInterpartLinks ( ) = 0;
      virtual HRESULT __stdcall raw_HasInterpartLinks (
        VARIANT_BOOL * pbHasInterpartLinks ) = 0;
      virtual HRESULT __stdcall raw_GetInContextAssemblyNameForInterpartLinks (
        BSTR * pbstrAssemblyName ) = 0;
      virtual HRESULT __stdcall raw_NewWindow (
        /*[in]*/ VARIANT NewWindowOptions,
        /*[in]*/ VARIANT Environment,
        /*[out,retval]*/ VARIANT * Window ) = 0;
      virtual HRESULT __stdcall raw_NewNavigatorWindow ( ) = 0;
      virtual HRESULT __stdcall get_Parts (
        /*[out,retval]*/ struct Parts * * Parts ) = 0;
      virtual HRESULT __stdcall get_Relations3d (
        /*[out,retval]*/ struct Relations3d * * Relations3d ) = 0;
      virtual HRESULT __stdcall get_PhysicalProperties (
        /*[out,retval]*/ struct PhysicalProperties * * PhysicalProperties ) = 0;
      virtual HRESULT __stdcall get_FaceStyles (
        /*[out,retval]*/ IDispatch * * FaceStyles ) = 0;
      virtual HRESULT __stdcall raw_CreateReference (
        /*[in]*/ struct Occurrence * Occurrence,
        /*[in]*/ VARIANT Entity,
        /*[out,retval]*/ IDispatch * * Reference ) = 0;
      virtual HRESULT __stdcall get_Occurrences (
        /*[out,retval]*/ struct Occurrences * * Occurrences ) = 0;
      virtual HRESULT __stdcall get_AsmRefPlanes (
        /*[out,retval]*/ struct AsmRefPlanes * * AsmRefPlanes ) = 0;
      virtual HRESULT __stdcall raw_CheckInterference (
        /*[in]*/ long NumElementsSet1,
        /*[in]*/ SAFEARRAY * * Set1,
        /*[out]*/ enum InterferenceStatusConstants * Status,
        /*[in]*/ VARIANT ComparisonMethod,
        /*[in]*/ VARIANT NumElementsSet2,
        /*[in]*/ VARIANT Set2,
        /*[in]*/ VARIANT AddInterferenceAsOccurrence,
        /*[in]*/ VARIANT ReportFilename,
        /*[in]*/ VARIANT ReportType,
        /*[out]*/ VARIANT * NumInterferences,
        /*[in,out]*/ VARIANT * InterferingPartsSet1,
        /*[in,out]*/ VARIANT * InterferingPartsOtherSet,
        /*[in,out]*/ VARIANT * ConfirmedInterference,
        /*[out]*/ VARIANT * InterferenceOccurrence,
        /*[in]*/ VARIANT IgnoreThreadInterferences = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_BindKeyToObject (
        /*[in,out]*/ SAFEARRAY * * ReferenceKey,
        /*[out]*/ IDispatch * * Object ) = 0;
      virtual HRESULT __stdcall get_CoordinateSystems (
        /*[out,retval]*/ struct TGPart::CoordinateSystems * * CoordinateSystems ) = 0;
      virtual HRESULT __stdcall get_StudyOwner (
        /*[out,retval]*/ struct TGPart::StudyOwner * * ppStudyOwner ) = 0;
      virtual HRESULT __stdcall raw_MinimumDistance (
        /*[in]*/ IDispatch * Element1,
        /*[in]*/ IDispatch * Element2,
        /*[out]*/ double * Distance,
        /*[in,out]*/ SAFEARRAY * * Point1,
        /*[in,out]*/ SAFEARRAY * * Point2 ) = 0;
      virtual HRESULT __stdcall get_AssemblyRecomputeEvents (
        /*[out,retval]*/ struct IUnknown * * AssemblyRecomputeEvents ) = 0;
      virtual HRESULT __stdcall get_Layouts (
        /*[out,retval]*/ struct Layouts * * Layouts ) = 0;
      virtual HRESULT __stdcall get_LineSegments (
        /*[out,retval]*/ struct LineSegments * * LineSegments ) = 0;
      virtual HRESULT __stdcall get_Segments (
        /*[out,retval]*/ struct Segments * * Segments ) = 0;
      virtual HRESULT __stdcall raw_GetGlobalParameter (
        /*[in]*/ enum AssemblyGlobalConstants Parameter,
        /*[out]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall raw_SetGlobalParameter (
        /*[in]*/ enum AssemblyGlobalConstants Parameter,
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall get_Sensors (
        /*[out,retval]*/ struct TGFramework::Sensors * * Sensors ) = 0;
      virtual HRESULT __stdcall get_CutawaysCount (
        /*[out,retval]*/ long * CutawaysCount ) = 0;
      virtual HRESULT __stdcall get_ExplosionsCount (
        /*[out,retval]*/ long * ExplosionsCount ) = 0;
      virtual HRESULT __stdcall get_ArcSegments (
        /*[out,retval]*/ struct ArcSegments * * ArcSegments ) = 0;
      virtual HRESULT __stdcall get_SegmentRelations3d (
        /*[out,retval]*/ struct SegmentRelations3d * * SegmentRelations3d ) = 0;
      virtual HRESULT __stdcall get_Queries (
        /*[out,retval]*/ struct Queries * * Queries ) = 0;
      virtual HRESULT __stdcall get_RelationshipsSelectSet (
        /*[out,retval]*/ struct TGFramework::SelectSet * * RelationshipsSelectSet ) = 0;
      virtual HRESULT __stdcall get_AssemblyFamilyMembers (
        /*[out,retval]*/ struct AssemblyFamilyMembers * * FOAManager ) = 0;
      virtual HRESULT __stdcall get_IsFileFamilyByDocument (
        /*[out,retval]*/ VARIANT_BOOL * bIsFileFamily ) = 0;
      virtual HRESULT __stdcall get_IsFileAlternatePositionByDocument (
        /*[out,retval]*/ VARIANT_BOOL * bIsFileAP ) = 0;
      virtual HRESULT __stdcall raw_CreateFamilyFile (
        /*[in]*/ BSTR FirstMemberName,
        /*[in]*/ BSTR SecondMemberName,
        /*[in]*/ VARIANT_BOOL bCreateAlternatePosition ) = 0;
      virtual HRESULT __stdcall raw_DisperseSubassembly (
        /*[in]*/ IDispatch * Subassembly,
        /*[in]*/ VARIANT_BOOL bAllOccurrences ) = 0;
      virtual HRESULT __stdcall raw_TransferOccurrences (
        /*[in]*/ SAFEARRAY * * OccurrencesToTransfer,
        /*[in]*/ VARIANT Subassembly = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_BundleOccurrences (
        /*[in]*/ SAFEARRAY * * OccurrencesToTransfer,
        /*[in]*/ BSTR OccurrenceFileName,
        /*[in]*/ VARIANT TemplateFileName,
        /*[in]*/ VARIANT Subassembly,
        /*[out,retval]*/ struct Occurrence * * NewOccurrence ) = 0;
      virtual HRESULT __stdcall get_AssemblyPatterns (
        /*[out,retval]*/ struct AssemblyPatterns * * Patterns ) = 0;
      virtual HRESULT __stdcall raw_MeasureAngle (
        /*[in]*/ IDispatch * Element1,
        /*[in]*/ IDispatch * Element2,
        /*[out]*/ double * TrueAngle,
        /*[out]*/ double * ApparentAngle,
        /*[in]*/ VARIANT Element3 = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_NormalDistance (
        /*[in]*/ IDispatch * Element1,
        /*[in]*/ IDispatch * Element2,
        /*[out]*/ double * TrueDistance,
        /*[out]*/ double * ApparentDistance,
        /*[out]*/ double * DeltaX,
        /*[out]*/ double * DeltaY,
        /*[out]*/ double * DeltaZ,
        /*[in]*/ VARIANT CoordinateSystem = vtMissing ) = 0;
      virtual HRESULT __stdcall get_Configurations (
        /*[out,retval]*/ struct Configurations * * Configurations ) = 0;
      virtual HRESULT __stdcall raw_RenameFile (
        /*[in]*/ BSTR OldPath,
        /*[in]*/ BSTR NewPath ) = 0;
      virtual HRESULT __stdcall raw_SetExternalPaths (
        /*[in]*/ SAFEARRAY * * VecUnopenedPath ) = 0;
      virtual HRESULT __stdcall raw_UpdateExternalPaths ( ) = 0;
      virtual HRESULT __stdcall get_ViewStyles (
        /*[out,retval]*/ IDispatch * * ViewStyles ) = 0;
      virtual HRESULT __stdcall raw_ImportStyles (
        /*[in]*/ BSTR FileName,
        /*[in]*/ VARIANT Overwrite = vtMissing ) = 0;
      virtual HRESULT __stdcall get_WireRuns (
        /*[out,retval]*/ struct WireRuns * * WireRuns ) = 0;
      virtual HRESULT __stdcall get_WirePaths (
        /*[out,retval]*/ struct WirePaths * * WirePaths ) = 0;
      virtual HRESULT __stdcall get_AssemblyProperties (
        /*[out,retval]*/ struct AssemblyProperties * * AsmPropertyManager ) = 0;
      virtual HRESULT __stdcall get_CurveSegments (
        /*[out,retval]*/ struct CurveSegments * * CurveSegments ) = 0;
      virtual HRESULT __stdcall raw_GenerateWireReport (
        /*[in]*/ enum AssemblyReportTypeConstants ReportType,
        /*[in]*/ VARIANT FileNameToSaveReport,
        /*[in]*/ int FieldsToGenerate ) = 0;
      virtual HRESULT __stdcall raw_ActivateAll ( ) = 0;
      virtual HRESULT __stdcall raw_UpdateAll ( ) = 0;
      virtual HRESULT __stdcall raw_GetContainerDocumentAndMatrixOfIPADoc (
        /*[out]*/ IDispatch * * ContainerDocument,
        /*[in,out]*/ SAFEARRAY * * Matrix ) = 0;
      virtual HRESULT __stdcall raw_CopySketch (
        /*[in]*/ IDispatch * SourceLayoutOrSketch,
        /*[in]*/ IDispatch * TargetPartOrAssembly,
        /*[in]*/ VARIANT_BOOL bAssociativeCopy,
        /*[out]*/ VARIANT * pvCopySketchErrorStatus ) = 0;
      virtual HRESULT __stdcall get_GeometricVersion (
        /*[out,retval]*/ long * GeometricVersion ) = 0;
      virtual HRESULT __stdcall get_IsGeometricVersionDirty (
        /*[out,retval]*/ VARIANT_BOOL * IsGeometricVersionDirty ) = 0;
      virtual HRESULT __stdcall get_DimensionStyles (
        /*[out,retval]*/ IDispatch * * DimensionStyles ) = 0;
      virtual HRESULT __stdcall get_Layers (
        /*[out,retval]*/ struct TGFramework::Layers * * Layers ) = 0;
      virtual HRESULT __stdcall raw_AddMeasureVariable (
        /*[in]*/ enum TGPart::MeasureVariableTypeConstants Type,
        /*[in]*/ enum TGPart::MeasureVariableValueConstants ValueType,
        /*[in]*/ IDispatch * Geom1,
        /*[in]*/ IDispatch * Geom2,
        /*[in]*/ VARIANT Geom3,
        /*[out,retval]*/ struct TGPart::MeasureVariable * * MeasureVariable ) = 0;
      virtual HRESULT __stdcall get_VirtualComponentOccurrences (
        /*[out,retval]*/ struct VirtualComponentOccurrences * * VirtualComponentOccurrences ) = 0;
      virtual HRESULT __stdcall raw_PublishVirtualComponents ( ) = 0;
      virtual HRESULT __stdcall get_HidePreviousLevel (
        /*[out,retval]*/ VARIANT_BOOL * bHidePreviousLevel ) = 0;
      virtual HRESULT __stdcall put_HidePreviousLevel (
        /*[in]*/ VARIANT_BOOL bHidePreviousLevel ) = 0;
      virtual HRESULT __stdcall get_ProfileUndoSteps (
        /*[out,retval]*/ long * NumberOfUndoSteps ) = 0;
      virtual HRESULT __stdcall put_ProfileUndoSteps (
        /*[in]*/ long NumberOfUndoSteps ) = 0;
      virtual HRESULT __stdcall raw_CreateOrEditSimplifiedAssembly (
        /*[in]*/ long NumOccurrenceExclude,
        /*[in]*/ SAFEARRAY * * OccurrenceExclude,
        /*[in]*/ double dExcludeRangeRatio,
        /*[in]*/ long NumOccurrenceInclude,
        /*[in]*/ SAFEARRAY * * OccurrenceInclude ) = 0;
      virtual HRESULT __stdcall raw_GetSimplifiedAssemblyInputs (
        /*[out]*/ long * NumOccurrenceExclude,
        /*[in,out]*/ SAFEARRAY * * OccurrenceExclude,
        /*[out]*/ double * dExcludeRangeRatio,
        /*[out]*/ long * NumOccurrenceInclude,
        /*[in,out]*/ SAFEARRAY * * OccurrenceInclude ) = 0;
      virtual HRESULT __stdcall raw_UpdateSimplifiedAssembly ( ) = 0;
      virtual HRESULT __stdcall get_IsAssemblySimplified (
        /*[out,retval]*/ VARIANT_BOOL * IsAssemblySimplified ) = 0;
      virtual HRESULT __stdcall raw_DeleteSimplifiedAssembly ( ) = 0;
      virtual HRESULT __stdcall raw_SaveSimplifiedAssemblyAs (
        /*[in]*/ BSTR SaveFileName ) = 0;
      virtual HRESULT __stdcall get_IsSimplifyStateActive (
        /*[out,retval]*/ VARIANT_BOOL * IsSimplifyStateActive ) = 0;
      virtual HRESULT __stdcall get_StructuralFrames (
        /*[out,retval]*/ struct StructuralFrames * * StructuralFrames ) = 0;
      virtual HRESULT __stdcall get_HasCapturedRelationships (
        /*[out,retval]*/ VARIANT_BOOL * bHasCapturedRelationships ) = 0;
      virtual HRESULT __stdcall get_AssemblyFeatures (
        /*[out,retval]*/ struct AssemblyFeatures * * AssemblyFeatures ) = 0;
      virtual HRESULT __stdcall get_AssemblyDrivenPartFeatures (
        /*[out,retval]*/ struct AssemblyDrivenPartFeatures * * AssemblyDrivenPartFeatures ) = 0;
      virtual HRESULT __stdcall get_CapturedRelationshipCount (
        /*[out,retval]*/ long * CapturedRelationshipCount ) = 0;
      virtual HRESULT __stdcall raw_GetCapturedRelationshipInformation (
        /*[out]*/ SAFEARRAY * * RelationshipTypes,
        /*[out]*/ SAFEARRAY * * OffsetTypes,
        /*[out]*/ SAFEARRAY * * Offsets,
        /*[out]*/ VARIANT * Faces ) = 0;
      virtual HRESULT __stdcall get_Pipes (
        /*[out,retval]*/ struct Pipes * * PipeManager ) = 0;
      virtual HRESULT __stdcall get_ComponentLayouts (
        /*[out,retval]*/ struct ComponentLayouts * * ComponentLayouts ) = 0;
      virtual HRESULT __stdcall get_Paths (
        /*[out,retval]*/ struct Paths * * Paths ) = 0;
      virtual HRESULT __stdcall raw_UpdateDocument (
        /*[in]*/ VARIANT FutureUse1 = vtMissing,
        /*[in]*/ VARIANT FutureUse2 = vtMissing ) = 0;
      virtual HRESULT __stdcall get_Harnesses (
        /*[out,retval]*/ struct Harnesses * * Harnesses ) = 0;
      virtual HRESULT __stdcall get_LabelWeldDataCollection (
        /*[out,retval]*/ struct TGPart::LabelWeldDataCollection * * ppLabelWeldDataCollection ) = 0;
      virtual HRESULT __stdcall put_WeldmentAssembly (
        /*[in]*/ VARIANT_BOOL IsWeldmentAssembly ) = 0;
      virtual HRESULT __stdcall get_WeldmentAssembly (
        /*[out,retval]*/ VARIANT_BOOL * IsWeldmentAssembly ) = 0;
      virtual HRESULT __stdcall put_WeldmentAssemblyBeadMaterial (
        /*[in]*/ BSTR BeadMaterial ) = 0;
      virtual HRESULT __stdcall get_WeldmentAssemblyBeadMaterial (
        /*[out,retval]*/ BSTR * BeadMaterial ) = 0;
      virtual HRESULT __stdcall put_WeldmentAssemblyBeadDensity (
        /*[in]*/ double BeadDensity ) = 0;
      virtual HRESULT __stdcall get_WeldmentAssemblyBeadDensity (
        /*[out,retval]*/ double * BeadDensity ) = 0;
      virtual HRESULT __stdcall raw_GetBaseStyle (
        /*[in]*/ enum AssemblyBaseStylesConstants BaseStyleType,
        /*[out]*/ struct TGFramework::FaceStyle * * BaseStyle ) = 0;
      virtual HRESULT __stdcall raw_SetBaseStyle (
        /*[in]*/ enum AssemblyBaseStylesConstants BaseStyleType,
        /*[in]*/ struct TGFramework::FaceStyle * BaseStyle ) = 0;
      virtual HRESULT __stdcall raw_SaveModelAs (
        /*[in]*/ IDispatch * Occurrence,
        /*[in]*/ BSTR SaveFileName ) = 0;
      virtual HRESULT __stdcall put_ActivateSimplifiedAssembly (
        /*[in]*/ VARIANT_BOOL bActivate ) = 0;
      virtual HRESULT __stdcall get_ActivateSimplifiedAssembly (
        /*[out,retval]*/ VARIANT_BOOL * bActivate ) = 0;
      virtual HRESULT __stdcall get_HoleDataCollection (
        /*[out,retval]*/ struct TGPart::HoleDataCollection * * ppHoleDataCollection ) = 0;
      virtual HRESULT __stdcall raw_GenerateWireHarnessReport (
        /*[in]*/ enum AssemblyWireHarnessReportTypeConstants ReportType,
        /*[in]*/ VARIANT FileNameToSaveReport = vtMissing,
        /*[in]*/ VARIANT Selection = vtMissing,
        /*[in]*/ VARIANT Window = vtMissing,
        /*[in]*/ VARIANT NumberOfReportProperties = vtMissing,
        /*[in]*/ VARIANT AssemblyReportProperties = vtMissing,
        /*[in]*/ VARIANT NumberOfSortItems = vtMissing,
        /*[in]*/ VARIANT SortProperties = vtMissing,
        /*[in]*/ VARIANT SortOrder = vtMissing,
        /*[in]*/ VARIANT Justification = vtMissing,
        /*[in]*/ VARIANT UpdateTemplate = vtMissing ) = 0;
      virtual HRESULT __stdcall get_AssemblyBodies (
        /*[out,retval]*/ struct AssemblyBodies * * ppAssemblyBodies ) = 0;
      virtual HRESULT __stdcall raw_CreateReference2 (
        /*[in]*/ IDispatch * Object,
        /*[in]*/ VARIANT Entity,
        /*[out,retval]*/ IDispatch * * Reference ) = 0;
      virtual HRESULT __stdcall raw_UpdatePathfinder (
        enum AssemblyPathfinderUpdateConstants UpdateType ) = 0;
      virtual HRESULT __stdcall get_Zones (
        /*[out,retval]*/ struct Zones * * ppZones ) = 0;
      virtual HRESULT __stdcall raw_UpdateStructureCache (
        enum UpdateStructureCacheConstants UpdateType ) = 0;
      virtual HRESULT __stdcall raw_DeleteStructureCache ( ) = 0;
      virtual HRESULT __stdcall get_FastenerSystems (
        /*[out,retval]*/ struct FastenerSystems * * syst ) = 0;
      virtual HRESULT __stdcall get_AssemblyGroups (
        /*[out,retval]*/ struct AssemblyGroups * * AssemblyGroups ) = 0;
      virtual HRESULT __stdcall raw_CheckInterference2 (
        /*[in]*/ long NumElementsSet1,
        /*[in]*/ SAFEARRAY * * Set1,
        /*[out]*/ enum InterferenceStatusConstants * Status,
        /*[in]*/ VARIANT ComparisonMethod,
        /*[in]*/ VARIANT NumElementsSet2,
        /*[in]*/ VARIANT Set2,
        /*[in]*/ VARIANT AddInterferenceAsOccurrence,
        /*[in]*/ VARIANT ReportFilename,
        /*[in]*/ VARIANT ReportType,
        /*[out]*/ VARIANT * NumInterferences,
        /*[in,out]*/ VARIANT * InterferingPartsSet1,
        /*[in,out]*/ VARIANT * InterferingPartsOtherSet,
        /*[in,out]*/ VARIANT * ConfirmedInterference,
        /*[out]*/ VARIANT * InterferenceOccurrence,
        /*[in]*/ VARIANT IgnoreSameNominalDiaConstant = vtMissing,
        /*[in]*/ VARIANT IgnoreNonThreadVsThreadConstant = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_CheckInterference3 (
        /*[in]*/ long NumElementsSet1,
        /*[in]*/ SAFEARRAY * * Set1,
        /*[out]*/ enum InterferenceStatusConstants * Status,
        /*[in]*/ VARIANT ComparisonMethod,
        /*[in]*/ VARIANT NumElementsSet2,
        /*[in]*/ VARIANT Set2,
        /*[in]*/ VARIANT AddInterferenceAsOccurrence,
        /*[in]*/ VARIANT ReportFilename,
        /*[in]*/ VARIANT ReportType,
        /*[out]*/ VARIANT * NumInterferences,
        /*[in,out]*/ VARIANT * InterferingPartsSet1,
        /*[in,out]*/ VARIANT * InterferingPartsOtherSet,
        /*[in,out]*/ VARIANT * ConfirmedInterference,
        /*[out]*/ VARIANT * InterferenceOccurrence,
        /*[in]*/ VARIANT IgnoreSameNominalDiaConstant,
        /*[in]*/ VARIANT IgnoreNonThreadVsThreadConstant,
        /*[in]*/ VARIANT_BOOL bAllowConstructions,
        /*[in]*/ VARIANT_BOOL bShowInterferenceVolume ) = 0;
      virtual HRESULT __stdcall raw_TranslateMultipleOccurrences (
        /*[in]*/ long lNumberOfOccurrences,
        /*[in]*/ SAFEARRAY * * Occurrences,
        /*[in]*/ enum MoveMultipleMoveTypeConstants MoveType,
        /*[in]*/ enum MoveMultipleRelationshipConstants RelationshipMaintenance,
        /*[in]*/ double FromX,
        /*[in]*/ double FromY,
        /*[in]*/ double FromZ,
        /*[in]*/ double ToX,
        /*[in]*/ double ToY,
        /*[in]*/ double ToZ,
        /*[out]*/ VARIANT * MovedOrCopiedOccurrences ) = 0;
      virtual HRESULT __stdcall raw_RotateMultipleOccurrences (
        /*[in]*/ long lNumberOfOccurrences,
        /*[in]*/ SAFEARRAY * * Occurrences,
        /*[in]*/ enum MoveMultipleMoveTypeConstants MoveType,
        /*[in]*/ enum MoveMultipleRelationshipConstants RelationshipMaintenance,
        /*[in]*/ double AxisX,
        /*[in]*/ double AxisY,
        /*[in]*/ double AxisZ,
        /*[in]*/ double Angle,
        /*[out]*/ VARIANT * MovedOrCopiedOccurrences ) = 0;
      virtual HRESULT __stdcall raw_GoalSeek (
        /*[in]*/ BSTR NameTargetVariable,
        /*[in]*/ BSTR NameVariableToChange,
        /*[in]*/ double dTargetValue,
        /*[in]*/ double dTimeLimitInSecs,
        /*[in]*/ long NumIterationsLimit,
        /*[out]*/ double * dTimeElapsed,
        /*[out]*/ long * NumIterations,
        /*[out]*/ VARIANT_BOOL * TimeLimitExceeded,
        /*[out]*/ VARIANT_BOOL * IterationsLimitExceeded ) = 0;
      virtual HRESULT __stdcall get_PMI (
        /*[out,retval]*/ IDispatch * * pPMI ) = 0;
      virtual HRESULT __stdcall raw_PMI_ByModelState (
        /*[out]*/ IDispatch * * PMIObj,
        /*[in]*/ enum TGPart::PMIModelStateConstants PMIModelState ) = 0;
      virtual HRESULT __stdcall get_DisplayName (
        /*[out,retval]*/ BSTR * DisplayName ) = 0;
      virtual HRESULT __stdcall get_ItemNumbers (
        /*[out,retval]*/ struct ItemNumbers * * AsmItemNumbers ) = 0;
      virtual HRESULT __stdcall get_Constructions (
        /*[out,retval]*/ struct TGPart::Constructions * * Constructions ) = 0;
      virtual HRESULT __stdcall raw_GetContainerDocumentAndOccurrenceOfIPADoc (
        /*[out]*/ IDispatch * * ContainerDocument,
        /*[out]*/ IDispatch * * IPAOccurrence ) = 0;
      virtual HRESULT __stdcall raw_GetTopDocumentAndSubOccurrenceOfIPADoc (
        /*[out]*/ IDispatch * * TopDocument,
        /*[out]*/ IDispatch * * IPASubOccurrence ) = 0;
      virtual HRESULT __stdcall get_LinearStyles (
        /*[out,retval]*/ IDispatch * * LinearStyles ) = 0;
      virtual HRESULT __stdcall get_FillStyles (
        /*[out,retval]*/ IDispatch * * FillStyles ) = 0;
      virtual HRESULT __stdcall get_HatchPatternStyles (
        /*[out,retval]*/ IDispatch * * HatchPatternStyles ) = 0;
      virtual HRESULT __stdcall get_AssemblyFamilyEvents (
        /*[out,retval]*/ struct IUnknown * * AssemblyFamilyEvents ) = 0;
      virtual HRESULT __stdcall get_AssemblyFamilyEvents2 (
        /*[out,retval]*/ struct IUnknown * * AssemblyFamilyEvents2 ) = 0;
      virtual HRESULT __stdcall get_SectionViews (
        /*[out,retval]*/ struct TGFramework::SectionViews * * ppSectionViews ) = 0;
      virtual HRESULT __stdcall raw_Range (
        /*[out]*/ double * x_min,
        /*[out]*/ double * y_min,
        /*[out]*/ double * z_min,
        /*[out]*/ double * x_max,
        /*[out]*/ double * y_max,
        /*[out]*/ double * z_max ) = 0;
      virtual HRESULT __stdcall raw_ReplaceComponents (
        /*[in]*/ SAFEARRAY * * TargetComponents,
        /*[in]*/ BSTR ReplacementFilePath,
        /*[in]*/ enum ConstraintReplacementConstants ConstraintReplacementOption ) = 0;
      virtual HRESULT __stdcall get_IsMultiCADDriven (
        /*[out,retval]*/ VARIANT_BOOL * bIsForeign ) = 0;
      virtual HRESULT __stdcall get_AssemblyCopies (
        /*[out,retval]*/ struct AssemblyCopies * * Copies ) = 0;
      virtual HRESULT __stdcall get_AssemblyMirrors (
        /*[out,retval]*/ struct AssemblyMirrors * * Copies ) = 0;
      virtual HRESULT __stdcall get_SimplifiedAssemblies (
        /*[out,retval]*/ struct SimplifiedAssemblies * * simplAsms ) = 0;
      virtual HRESULT __stdcall get_AssemblyChangeEvents (
        /*[out,retval]*/ struct IUnknown * * AssemblyChangeEvents ) = 0;
      virtual HRESULT __stdcall get_AssemblyConfigurationChangeEvents (
        /*[out,retval]*/ struct IUnknown * * AssemblyConfigurationChangeEvents ) = 0;
      virtual HRESULT __stdcall raw_PathfinderScrollToSelection ( ) = 0;
      virtual HRESULT __stdcall get_InterDocumentUpdate (
        /*[out,retval]*/ struct TGFramework::InterDocumentUpdate * * result ) = 0;
      virtual HRESULT __stdcall get_Sketches3D (
        /*[out,retval]*/ struct TGPart::Sketches3D * * Sketches3D ) = 0;
      virtual HRESULT __stdcall raw_MeasureDistance (
        /*[in]*/ IDispatch * Element1,
        /*[in]*/ IDispatch * Element2,
        /*[in]*/ enum TGPart::MeasureDistanceTypeConstants DistanceType,
        /*[out]*/ double * Distance,
        /*[out]*/ double * DX,
        /*[out]*/ double * DY,
        /*[out]*/ double * DZ,
        /*[in,out]*/ SAFEARRAY * * Point1,
        /*[in,out]*/ SAFEARRAY * * Point2 ) = 0;
      virtual HRESULT __stdcall raw_MeasureAngleEx (
        /*[in]*/ IDispatch * Element1,
        /*[in]*/ IDispatch * Element2,
        /*[in]*/ IDispatch * Element3,
        /*[out]*/ double * Angle1,
        /*[out]*/ double * Angle2,
        /*[out]*/ double * Angle3,
        /*[out]*/ double * Angle4 ) = 0;
      virtual HRESULT __stdcall raw_InquireElement (
        /*[in]*/ IDispatch * Element,
        /*[in]*/ SAFEARRAY * * InPoint,
        /*[in]*/ VARIANT CoordinateSystem,
        /*[in,out]*/ SAFEARRAY * * Point,
        /*[out]*/ double * SurfaceArea,
        /*[out]*/ double * Volume,
        /*[out]*/ double * Length ) = 0;
      virtual HRESULT __stdcall raw_GetDrivenDrivingInfo (
        /*[in]*/ IDispatch * Element,
        /*[out]*/ VARIANT * DrivenOccurrencesArray,
        /*[out]*/ VARIANT * DrivingOccurrencesArray ) = 0;
      virtual HRESULT __stdcall get_ActiveConfiguration (
        /*[out,retval]*/ BSTR * bstrActiveConfiguration ) = 0;
      virtual HRESULT __stdcall get_Blocks (
        /*[out,retval]*/ struct TGPart::SketchBlocks * * Blocks ) = 0;
      virtual HRESULT __stdcall get_AssemblyPhysicalPropertiesChangeEvents (
        /*[out,retval]*/ struct IUnknown * * AssemblyPhysicalPropertiesChangeEvents ) = 0;
      virtual HRESULT __stdcall get_TextStyles (
        /*[out,retval]*/ IDispatch * * TextStyles ) = 0;
      virtual HRESULT __stdcall get_TextCharStyles (
        /*[out,retval]*/ IDispatch * * TextCharStyles ) = 0;
      virtual HRESULT __stdcall raw_CreateCloneComponents (
        /*[in]*/ SAFEARRAY * * ComponentsToClone,
        /*[in]*/ SAFEARRAY * * ReferenceGeometryFaces,
        /*[in]*/ SAFEARRAY * * CloneEnviornment,
        /*[in]*/ enum CloneComponentOptions CloneOptions,
        /*[in]*/ VARIANT_BOOL bCreateGroup,
        /*[in]*/ enum CloneMatchTypeOptions CloneMatchType,
        /*[out]*/ long * ErrorStatus ) = 0;
      virtual HRESULT __stdcall raw_Get3dPrintInfo (
        /*[out]*/ int * iNumberOfTriangles,
        /*[out]*/ int * iNumberOfPoints,
        /*[out]*/ int * iNumberOfEdges,
        /*[out]*/ double * dMeshSurfaceArea,
        /*[out]*/ double * dMeshVolume,
        /*[out]*/ double * dFileSize,
        /*[out]*/ double * dExportToleranceValue,
        /*[out]*/ double * dSurfacePlaneAngTol,
        /*[in]*/ enum TGPart::Print3DFileType Type ) = 0;
      virtual HRESULT __stdcall raw_PublishVirtualComponentsBIDM (
        /*[in]*/ VARIANT ListOfDocumentNumbers,
        /*[in]*/ VARIANT ListOfRevisionIDs,
        /*[in]*/ VARIANT ListOfTitles = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_LoadUOMPreferences (
        /*[in]*/ VARIANT_BOOL UpdateUomGlobals ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_SteeringWheel (
        /*[out,retval]*/ struct TGFramework::SteeringWheel * * SteeringWheel ) = 0;
      virtual HRESULT __stdcall raw_SaveModelAsBiDM (
        /*[in]*/ IDispatch * Occurrence,
        /*[in]*/ BSTR FilePath,
        /*[in]*/ BSTR DocumentNumber,
        /*[in]*/ BSTR Revision,
        /*[in]*/ BSTR Title,
        /*[out,retval]*/ BSTR * NewFileName ) = 0;
      virtual HRESULT __stdcall put_PerformanceMode (
        /*[in]*/ VARIANT_BOOL pbUsePerformanceMode ) = 0;
      virtual HRESULT __stdcall get_PerformanceMode (
        /*[out,retval]*/ VARIANT_BOOL * pbUsePerformanceMode ) = 0;
      virtual HRESULT __stdcall get_HasMissingFiles (
        /*[out,retval]*/ VARIANT_BOOL * bIsMissingFiles ) = 0;
      virtual HRESULT __stdcall raw_GetMissingFilesInfo (
        /*[out]*/ VARIANT * missingFilesAndObjects ) = 0;
      virtual HRESULT __stdcall raw_CopytoPMI (
        /*[in]*/ IDispatch * featureObj,
        /*[in]*/ enum TGPart::seCopytoPMIConstants Type ) = 0;
      virtual HRESULT __stdcall get_InternalComponents (
        /*[out,retval]*/ struct InternalComponents * * InternalComponentManager ) = 0;
      virtual HRESULT __stdcall get_EndCaps (
        /*[out,retval]*/ struct EndCaps * * EndCaps ) = 0;
      virtual HRESULT __stdcall raw_DragComponentTranslation (
        /*[in]*/ IDispatch * OccurrenceToDrag,
        /*[in]*/ enum DragComponentAnalysisOptionConstants AnalysisOption,
        /*[in]*/ enum DragComponentCollisionOptionConstants CollisionOption,
        /*[in]*/ double Distance,
        /*[in]*/ VARIANT_BOOL ConsiderMovingParts,
        /*[in]*/ VARIANT_BOOL ConsiderInactiveParts,
        /*[in]*/ VARIANT_BOOL MoveGroundedParts,
        /*[in]*/ double DirectionX,
        /*[in]*/ double DirectionY,
        /*[in]*/ double DirectionZ,
        /*[in]*/ double Sensitivity,
        /*[in]*/ IDispatch * EdgeOrAxis,
        /*[out]*/ VARIANT_BOOL * CollisionFound,
        /*[out]*/ SAFEARRAY * * CollidingPart ) = 0;
      virtual HRESULT __stdcall raw_DragComponentRotation (
        /*[in]*/ IDispatch * OccurrenceToDrag,
        /*[in]*/ enum DragComponentAnalysisOptionConstants AnalysisOption,
        /*[in]*/ enum DragComponentCollisionOptionConstants CollisionOption,
        /*[in]*/ double Angle,
        /*[in]*/ VARIANT_BOOL ConsiderMovingParts,
        /*[in]*/ VARIANT_BOOL ConsiderInactiveParts,
        /*[in]*/ VARIANT_BOOL MoveGroundedParts,
        /*[in]*/ double DirectionX,
        /*[in]*/ double DirectionY,
        /*[in]*/ double DirectionZ,
        /*[in]*/ double Sensitivity,
        /*[in]*/ IDispatch * EdgeOrAxis,
        /*[out]*/ VARIANT_BOOL * CollisionFound,
        /*[out]*/ SAFEARRAY * * CollidingPart ) = 0;
      virtual HRESULT __stdcall raw_BeginCachedSolve ( ) = 0;
      virtual HRESULT __stdcall raw_EndCachedSolve ( ) = 0;
      virtual HRESULT __stdcall raw_SetSuppressComponent (
        /*[in]*/ IDispatch * OccurrenceToSuppress,
        /*[out]*/ struct SuppressComponent * * SuppressComponent ) = 0;
      virtual HRESULT __stdcall raw_GetSuppressedComponents (
        /*[in]*/ enum AssemblyComponentTypeConstants ComponentType,
        /*[out]*/ long * SuppressedComponentCount,
        /*[out]*/ SAFEARRAY * * SuppressedComponents ) = 0;
      virtual HRESULT __stdcall raw_CheckInterference4 (
        /*[in]*/ long NumElementsSet1,
        /*[in]*/ SAFEARRAY * * Set1,
        /*[out]*/ enum InterferenceStatusConstants * Status,
        /*[in]*/ VARIANT ComparisonMethod,
        /*[in]*/ VARIANT NumElementsSet2,
        /*[in]*/ VARIANT Set2,
        /*[in]*/ VARIANT AddInterferenceAsOccurrence,
        /*[in]*/ VARIANT ReportFilename,
        /*[in]*/ VARIANT ReportType,
        /*[out]*/ VARIANT * NumInterferences,
        /*[in,out]*/ VARIANT * InterferingPartsSet1,
        /*[in,out]*/ VARIANT * InterferingPartsOtherSet,
        /*[in,out]*/ VARIANT * ConfirmedInterference,
        /*[out]*/ VARIANT * InterferenceOccurrence,
        /*[in]*/ VARIANT IgnoreSameNominalDiaConstant,
        /*[in]*/ VARIANT IgnoreNonThreadVsThreadConstant,
        /*[in]*/ VARIANT_BOOL ShowIntersectionVolume ) = 0;
      virtual HRESULT __stdcall get_Decals (
        /*[out,retval]*/ struct TGPart::Decals * * Decals ) = 0;
      virtual HRESULT __stdcall raw_AutoExplode (
        /*[in]*/ enum AutoExplodeSelectionTypeConstants AutoExplodeSelectionType,
        /*[in]*/ VARIANT_BOOL BindAllSubassemblies,
        /*[in]*/ enum AutoExplodeTechniqueConstants ExplodeTechnique,
        /*[out]*/ BSTR * ErrorCode,
        /*[in]*/ double SpreadDistance,
        /*[in]*/ IDispatch * Subassembly ) = 0;
      virtual HRESULT __stdcall get_AsmCADDirects (
        /*[out,retval]*/ struct AsmCADDirects * * AsmCADDirects ) = 0;
      virtual HRESULT __stdcall get_ModelingInAssembly (
        /*[out,retval]*/ VARIANT_BOOL * IsModelingInAssembly ) = 0;
      virtual HRESULT __stdcall get_AssemblyPreview (
        /*[out,retval]*/ VARIANT_BOOL * IsAssemblyPreview ) = 0;
      virtual HRESULT __stdcall raw_EditAssembly ( ) = 0;
      virtual HRESULT __stdcall raw_EditAssemblyWithOptions (
        /*[in]*/ enum AssemblyFileOpenPartActivationOptions ePartActivation,
        /*[in]*/ enum AssemblyFileOpenSimplificationOptions ePartSimplification,
        /*[in]*/ enum AssemblyFileOpenSimplificationOptions eSubassemblySimplification,
        /*[in]*/ enum AssemblyFileOpenActivateChangedPartOptions eActivateChangedParts ) = 0;
      virtual HRESULT __stdcall get_ReferencePointClouds (
        /*[out,retval]*/ struct TGPart::ReferencePointClouds * * ReferencePointClouds ) = 0;
      virtual HRESULT __stdcall get_ProfileSets (
        /*[out,retval]*/ struct TGPart::ProfileSets * * ProfileSets ) = 0;
      virtual HRESULT __stdcall get_AssemblyModel (
        /*[out,retval]*/ struct TGPart::Model * * ppAssemblyModel ) = 0;
      virtual HRESULT __stdcall raw_PublishInternalComponents (
        /*[in]*/ BSTR bstrFileLocation,
        /*[in]*/ BSTR bstrPartTemplatePath,
        /*[in]*/ BSTR bstrSheetmetalTemplatePath,
        /*[in]*/ BSTR bstrAsmTemplatePath,
        /*[in]*/ BSTR bstrMaterial ) = 0;
      virtual HRESULT __stdcall raw_ArrangeDimensionsInSelectSet (
        /*[in]*/ double dStackPitchMultiplier,
        /*[in]*/ VARIANT_BOOL bAssociative ) = 0;
};

struct __declspec(uuid("95135f48-015c-11d2-be0c-080036b4d502"))
_IGroundRelation3dAuto : IUnknown
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum Relation3dStatusConstants Status;
    __declspec(property(get=GetPart))
    PartPtr Part;
    __declspec(property(get=GetOccurrence))
    OccurrencePtr Occurrence;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetDetailedStatus))
    enum Relation3dDetailedStatusConstants DetailedStatus;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum Relation3dStatusConstants GetStatus ( );
    enum Relation3dDetailedStatusConstants GetDetailedStatus ( );
    PartPtr GetPart ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    OccurrencePtr GetOccurrence ( );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL bSuppress );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ IDispatch * * Application ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum TGFramework::ObjectType * Type ) = 0;
      virtual HRESULT __stdcall raw_Select (
        /*[in]*/ VARIANT_BOOL Replace ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum Relation3dStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall get_DetailedStatus (
        /*[out,retval]*/ enum Relation3dDetailedStatusConstants * Status ) = 0;
      virtual HRESULT __stdcall get_Part (
        /*[out,retval]*/ struct Part * * Part ) = 0;
      virtual HRESULT __stdcall get_AttributeSets (
        /*[out,retval]*/ IDispatch * * AttributeSets ) = 0;
      virtual HRESULT __stdcall get_IsAttributeSetPresent (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ VARIANT_BOOL * IsAttributeSetPresent ) = 0;
      virtual HRESULT __stdcall get_Occurrence (
        /*[out,retval]*/ struct Occurrence * * Occurrence ) = 0;
      virtual HRESULT __stdcall get_Suppress (
        /*[out,retval]*/ VARIANT_BOOL * bSuppress ) = 0;
      virtual HRESULT __stdcall put_Suppress (
        /*[in]*/ VARIANT_BOOL bSuppress ) = 0;
      virtual HRESULT __stdcall raw_GetSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_AddSuppressionVariable (
        /*[out,retval]*/ struct TGPart::SuppressVariable * * SuppressionVariable ) = 0;
      virtual HRESULT __stdcall raw_DeleteSuppressionVariable ( ) = 0;
      virtual HRESULT __stdcall raw_HasSuppressionVariable (
        /*[out,retval]*/ VARIANT_BOOL * IsSuppressionVariablePresent ) = 0;
};

struct __declspec(uuid("6d4cc840-9b76-11ce-a2ab-08003601b7ad"))
GroundRelation3d : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    IDispatchPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetType))
    enum TGFramework::ObjectType Type;
    __declspec(property(get=GetStatus))
    enum Relation3dStatusConstants Status;
    __declspec(property(get=GetPart))
    PartPtr Part;
    __declspec(property(get=GetOccurrence))
    OccurrencePtr Occurrence;
    __declspec(property(get=GetSuppress,put=PutSuppress))
    VARIANT_BOOL Suppress;
    __declspec(property(get=GetDetailedStatus))
    enum Relation3dDetailedStatusConstants DetailedStatus;
    __declspec(property(get=GetAttributeSets))
    IDispatchPtr AttributeSets;
    __declspec(property(get=GetIsAttributeSetPresent))
    VARIANT_BOOL IsAttributeSetPresent[];

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    IDispatchPtr GetApplication ( );
    IDispatchPtr GetParent ( );
    HRESULT Delete ( );
    long GetIndex ( );
    enum TGFramework::ObjectType GetType ( );
    HRESULT Select (
        VARIANT_BOOL Replace );
    enum Relation3dStatusConstants GetStatus ( );
    enum Relation3dDetailedStatusConstants GetDetailedStatus ( );
    PartPtr GetPart ( );
    IDispatchPtr GetAttributeSets ( );
    VARIANT_BOOL GetIsAttributeSetPresent (
        _bstr_t Name );
    OccurrencePtr GetOccurrence ( );
    VARIANT_BOOL GetSuppress ( );
    void PutSuppress (
        VARIANT_BOOL _arg1 );
    TGPart::SuppressVariablePtr GetSuppressionVariable ( );
    TGPart::SuppressVariablePtr AddSuppressionVariable ( );
    HRESULT DeleteSuppressionVariable ( );
    VARIANT_BOOL HasSuppressionVariable ( );
};

//
// Function implementation mapping
//

#pragma start_map_region("D:\visualstudio\project\TGCAD\TGCAD\x64\Debug\tgassembly.tli")
__declspec(implementation_key(1)) IDispatchPtr Parts::GetApplication ( );
__declspec(implementation_key(2)) long Parts::GetCount ( );
__declspec(implementation_key(3)) IDispatchPtr Parts::GetParent ( );
__declspec(implementation_key(4)) PartPtr Parts::Item ( const _variant_t & Index );
__declspec(implementation_key(5)) PartPtr Parts::AddByFilename ( _bstr_t PartFileName );
__declspec(implementation_key(6)) PartPtr Parts::AddWithTransform ( _bstr_t PartFileName, double OriginX, double OriginY, double OriginZ, double AngleX, double AngleY, double AngleZ );
__declspec(implementation_key(7)) PartPtr Parts::AddWithMatrix ( _bstr_t PartFileName, SAFEARRAY * * Matrix );
__declspec(implementation_key(8)) IDispatchPtr Part::GetApplication ( );
__declspec(implementation_key(9)) IDispatchPtr Part::GetParent ( );
__declspec(implementation_key(10)) HRESULT Part::Delete ( );
__declspec(implementation_key(11)) long Part::GetIndex ( );
__declspec(implementation_key(12)) _bstr_t Part::GetName ( );
__declspec(implementation_key(13)) void Part::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(14)) _bstr_t Part::GetPartFileName ( );
__declspec(implementation_key(15)) IDispatchPtr Part::GetPartDocument ( );
__declspec(implementation_key(16)) VARIANT_BOOL Part::GetReferenceOnly ( );
__declspec(implementation_key(17)) void Part::PutReferenceOnly ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(18)) VARIANT_BOOL Part::GetSubassembly ( );
__declspec(implementation_key(19)) enum TGFramework::ObjectType Part::GetType ( );
__declspec(implementation_key(20)) long Part::GetQuantity ( );
__declspec(implementation_key(21)) void Part::PutQuantity ( long _arg1 );
__declspec(implementation_key(22)) VARIANT_BOOL Part::GetVisible ( );
__declspec(implementation_key(23)) void Part::PutVisible ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(24)) HRESULT Part::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(25)) VARIANT_BOOL Part::GetLocatable ( );
__declspec(implementation_key(26)) void Part::PutLocatable ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(27)) HRESULT Part::PutTransform ( double OriginX, double OriginY, double OriginZ, double AngleX, double AngleY, double AngleZ );
__declspec(implementation_key(28)) HRESULT Part::GetTransform ( double * OriginX, double * OriginY, double * OriginZ, double * AngleX, double * AngleY, double * AngleZ );
__declspec(implementation_key(29)) enum PartStatusConstants Part::GetStatus ( );
__declspec(implementation_key(30)) HRESULT Part::PutOrigin ( double OriginX, double OriginY, double OriginZ );
__declspec(implementation_key(31)) HRESULT Part::GetOrigin ( double * OriginX, double * OriginY, double * OriginZ );
__declspec(implementation_key(32)) HRESULT Part::Move ( double DeltaX, double DeltaY, double DeltaZ );
__declspec(implementation_key(33)) HRESULT Part::Rotate ( double AxisX1, double AxisY1, double AxisZ1, double AxisX2, double AxisY2, double AxisZ2, double Angle );
__declspec(implementation_key(34)) IDispatchPtr Part::GetRelations3d ( );
__declspec(implementation_key(35)) HRESULT Part::PutMatrix ( SAFEARRAY * * Matrix, VARIANT_BOOL Replace );
__declspec(implementation_key(36)) HRESULT Part::GetMatrix ( SAFEARRAY * * Matrix );
__declspec(implementation_key(37)) VARIANT_BOOL Part::GetIncludeInBom ( );
__declspec(implementation_key(38)) void Part::PutIncludeInBom ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(39)) VARIANT_BOOL Part::GetDisplayInDrawings ( );
__declspec(implementation_key(40)) void Part::PutDisplayInDrawings ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(41)) VARIANT_BOOL Part::GetDisplayInSubAssembly ( );
__declspec(implementation_key(42)) void Part::PutDisplayInSubAssembly ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(43)) VARIANT_BOOL Part::GetIncludeInPhysicalProperties ( );
__declspec(implementation_key(44)) void Part::PutIncludeInPhysicalProperties ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(45)) VARIANT_BOOL Part::GetIsForeign ( );
__declspec(implementation_key(46)) HRESULT Part::Replace ( _bstr_t NewPartFileName, VARIANT_BOOL ReplaceAll );
__declspec(implementation_key(47)) _bstr_t Part::GetStyle ( );
__declspec(implementation_key(48)) void Part::PutStyle ( _bstr_t _arg1 );
__declspec(implementation_key(49)) IDispatchPtr Part::GetFaceStyle ( );
__declspec(implementation_key(50)) void Part::PutFaceStyle ( IDispatch * _arg1 );
__declspec(implementation_key(51)) HRESULT Part::MakeWritable ( );
__declspec(implementation_key(52)) IDispatchPtr Part::GetAttributeSets ( );
__declspec(implementation_key(53)) VARIANT_BOOL Part::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(54)) IDispatchPtr _IPartsAuto::GetApplication ( );
__declspec(implementation_key(55)) long _IPartsAuto::GetCount ( );
__declspec(implementation_key(56)) IDispatchPtr _IPartsAuto::GetParent ( );
__declspec(implementation_key(57)) PartPtr _IPartsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(58)) IUnknownPtr _IPartsAuto::Get_NewEnum ( );
__declspec(implementation_key(59)) PartPtr _IPartsAuto::AddByFilename ( _bstr_t PartFileName );
__declspec(implementation_key(60)) PartPtr _IPartsAuto::AddWithTransform ( _bstr_t PartFileName, double OriginX, double OriginY, double OriginZ, double AngleX, double AngleY, double AngleZ );
__declspec(implementation_key(61)) PartPtr _IPartsAuto::AddWithMatrix ( _bstr_t PartFileName, SAFEARRAY * * Matrix );
__declspec(implementation_key(62)) IDispatchPtr _IPartAuto::GetApplication ( );
__declspec(implementation_key(63)) IDispatchPtr _IPartAuto::GetParent ( );
__declspec(implementation_key(64)) HRESULT _IPartAuto::Delete ( );
__declspec(implementation_key(65)) long _IPartAuto::GetIndex ( );
__declspec(implementation_key(66)) _bstr_t _IPartAuto::GetName ( );
__declspec(implementation_key(67)) void _IPartAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(68)) _bstr_t _IPartAuto::GetPartFileName ( );
__declspec(implementation_key(69)) IDispatchPtr _IPartAuto::GetPartDocument ( );
__declspec(implementation_key(70)) VARIANT_BOOL _IPartAuto::GetReferenceOnly ( );
__declspec(implementation_key(71)) void _IPartAuto::PutReferenceOnly ( VARIANT_BOOL RefOnly );
__declspec(implementation_key(72)) VARIANT_BOOL _IPartAuto::GetSubassembly ( );
__declspec(implementation_key(73)) enum TGFramework::ObjectType _IPartAuto::GetType ( );
__declspec(implementation_key(74)) long _IPartAuto::GetQuantity ( );
__declspec(implementation_key(75)) void _IPartAuto::PutQuantity ( long Quantity );
__declspec(implementation_key(76)) VARIANT_BOOL _IPartAuto::GetVisible ( );
__declspec(implementation_key(77)) void _IPartAuto::PutVisible ( VARIANT_BOOL Visible );
__declspec(implementation_key(78)) HRESULT _IPartAuto::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(79)) VARIANT_BOOL _IPartAuto::GetLocatable ( );
__declspec(implementation_key(80)) void _IPartAuto::PutLocatable ( VARIANT_BOOL Locatable );
__declspec(implementation_key(81)) HRESULT _IPartAuto::PutTransform ( double OriginX, double OriginY, double OriginZ, double AngleX, double AngleY, double AngleZ );
__declspec(implementation_key(82)) HRESULT _IPartAuto::GetTransform ( double * OriginX, double * OriginY, double * OriginZ, double * AngleX, double * AngleY, double * AngleZ );
__declspec(implementation_key(83)) enum PartStatusConstants _IPartAuto::GetStatus ( );
__declspec(implementation_key(84)) HRESULT _IPartAuto::PutOrigin ( double OriginX, double OriginY, double OriginZ );
__declspec(implementation_key(85)) HRESULT _IPartAuto::GetOrigin ( double * OriginX, double * OriginY, double * OriginZ );
__declspec(implementation_key(86)) HRESULT _IPartAuto::Move ( double DeltaX, double DeltaY, double DeltaZ );
__declspec(implementation_key(87)) HRESULT _IPartAuto::Rotate ( double AxisX1, double AxisY1, double AxisZ1, double AxisX2, double AxisY2, double AxisZ2, double Angle );
__declspec(implementation_key(88)) IDispatchPtr _IPartAuto::GetRelations3d ( );
__declspec(implementation_key(89)) HRESULT _IPartAuto::PutMatrix ( SAFEARRAY * * Matrix, VARIANT_BOOL Replace );
__declspec(implementation_key(90)) HRESULT _IPartAuto::GetMatrix ( SAFEARRAY * * Matrix );
__declspec(implementation_key(91)) VARIANT_BOOL _IPartAuto::GetIncludeInBom ( );
__declspec(implementation_key(92)) void _IPartAuto::PutIncludeInBom ( VARIANT_BOOL IncludeInBom );
__declspec(implementation_key(93)) VARIANT_BOOL _IPartAuto::GetDisplayInDrawings ( );
__declspec(implementation_key(94)) void _IPartAuto::PutDisplayInDrawings ( VARIANT_BOOL DisplayInDrawings );
__declspec(implementation_key(95)) VARIANT_BOOL _IPartAuto::GetDisplayInSubAssembly ( );
__declspec(implementation_key(96)) void _IPartAuto::PutDisplayInSubAssembly ( VARIANT_BOOL DisplayInSubAssembly );
__declspec(implementation_key(97)) VARIANT_BOOL _IPartAuto::GetIncludeInPhysicalProperties ( );
__declspec(implementation_key(98)) void _IPartAuto::PutIncludeInPhysicalProperties ( VARIANT_BOOL IncludeInPhysicalProperties );
__declspec(implementation_key(99)) VARIANT_BOOL _IPartAuto::GetIsForeign ( );
__declspec(implementation_key(100)) HRESULT _IPartAuto::Replace ( _bstr_t NewPartFileName, VARIANT_BOOL ReplaceAll );
__declspec(implementation_key(101)) _bstr_t _IPartAuto::GetStyle ( );
__declspec(implementation_key(102)) void _IPartAuto::PutStyle ( _bstr_t Style );
__declspec(implementation_key(103)) IDispatchPtr _IPartAuto::GetFaceStyle ( );
__declspec(implementation_key(104)) void _IPartAuto::PutFaceStyle ( IDispatch * FaceStyle );
__declspec(implementation_key(105)) HRESULT _IPartAuto::MakeWritable ( );
__declspec(implementation_key(106)) IDispatchPtr _IPartAuto::GetAttributeSets ( );
__declspec(implementation_key(107)) VARIANT_BOOL _IPartAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(108)) IDispatchPtr Relations3d::GetApplication ( );
__declspec(implementation_key(109)) long Relations3d::GetCount ( );
__declspec(implementation_key(110)) IDispatchPtr Relations3d::GetParent ( );
__declspec(implementation_key(111)) IDispatchPtr Relations3d::Item ( const _variant_t & Index );
__declspec(implementation_key(112)) IDispatchPtr Relations3d::AddGround ( struct Occurrence * Occurrence );
__declspec(implementation_key(113)) PlanarRelation3dPtr Relations3d::AddPlanar ( IDispatch * Plane1, IDispatch * Plane2, VARIANT_BOOL NormalsAligned, SAFEARRAY * * ConstrainingPoint1, SAFEARRAY * * ConstrainingPoint2 );
__declspec(implementation_key(114)) AxialRelation3dPtr Relations3d::AddAxial ( IDispatch * Axis1, IDispatch * Axis2, VARIANT_BOOL NormalsAligned );
__declspec(implementation_key(115)) PointRelation3dPtr Relations3d::AddPoint ( IDispatch * PointGeometry, enum Relation3dGeometryConstants PointKeyPoint, IDispatch * ConnectGeometry, const _variant_t & ConnectKeyPoint );
__declspec(implementation_key(116)) AngularRelation3dPtr Relations3d::AddAngular ( IDispatch * Element1, IDispatch * Element2, VARIANT_BOOL ReverseElement1Direction, VARIANT_BOOL ReverseElement2Direction, IDispatch * MeasureElement1, IDispatch * MeasureElement2, double Angle, VARIANT_BOOL MeasureToPositiveSide, VARIANT_BOOL MeasureFromPositiveSide, VARIANT_BOOL MeasureCCW );
__declspec(implementation_key(117)) PointRelation3dPtr Relations3d::AddPointWithInferredGeometry ( IDispatch * PointGeometry, IDispatch * SketchPoint );
__declspec(implementation_key(118)) AxialRelation3dPtr Relations3d::AddAxialWithParallelOffset ( IDispatch * Axis1, IDispatch * Axis2, VARIANT_BOOL FixedOffset, double Offset );
__declspec(implementation_key(119)) TangentRelation3dPtr Relations3d::AddTangent ( IDispatch * Element1, IDispatch * Element2, SAFEARRAY * * ConstrainingPoint1, SAFEARRAY * * ConstrainingPoint2, double Offset, VARIANT_BOOL IsHalfSpacePositive );
__declspec(implementation_key(120)) GearRelation3dPtr Relations3d::AddGear ( IDispatch * Element1, IDispatch * Element2, enum Relation3dGearTypeConstants GearType, enum Relation3dGearRatioTypeConstants RatioType, double GearRatio1, double GearRatio2, VARIANT_BOOL Flip );
__declspec(implementation_key(121)) CenterPlaneRelation3dPtr Relations3d::AddCenterPlane ( IDispatch * PlacementElement1, IDispatch * PlacementElement2, IDispatch * TargetElement1, IDispatch * TargetElement2, SAFEARRAY * * PlacementConstrainingPoint1, SAFEARRAY * * PlacementConstrainingPoint2, SAFEARRAY * * TargetConstrainingPoint1, SAFEARRAY * * TargetConstrainingPoint2 );
__declspec(implementation_key(122)) RigidSetRelation3dPtr Relations3d::AddRigidSet ( long OccurrenceCount, SAFEARRAY * * Occurrences );
__declspec(implementation_key(123)) CamFollowerRelation3dPtr Relations3d::AddPlanarCam ( IDispatch * ConstrainingFollowerElement, SAFEARRAY * * ConstrainingCamFaces );
__declspec(implementation_key(124)) CamFollowerRelation3dPtr Relations3d::AddBarrelCam ( IDispatch * ConstrainingFollowerElement, SAFEARRAY * * ConstrainingCamEdges );
__declspec(implementation_key(125)) PathRelation3dPtr Relations3d::AddPath ( IDispatch * ConstrainingFollowerElement, SAFEARRAY * * ConstrainingCamEdges );
__declspec(implementation_key(126)) CoordinateSystemRelation3dPtr Relations3d::AddCoordinateSystem ( IDispatch * pCoordSystem1, IDispatch * pCoordSystem2 );
__declspec(implementation_key(127)) SlotRelation3dPtr Relations3d::AddSlot ( IDispatch * pSlotElement, IDispatch * pPinElement, enum Relation3dSlotOffsetTypeConstants eSlotOffsetType, double dOffset );
__declspec(implementation_key(128)) IDispatchPtr Occurrence::GetApplication ( );
__declspec(implementation_key(129)) IDispatchPtr Occurrence::GetParent ( );
__declspec(implementation_key(130)) HRESULT Occurrence::Delete ( );
__declspec(implementation_key(131)) long Occurrence::GetIndex ( );
__declspec(implementation_key(132)) _bstr_t Occurrence::GetName ( );
__declspec(implementation_key(133)) void Occurrence::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(134)) _bstr_t Occurrence::GetPartFileName ( );
__declspec(implementation_key(135)) IDispatchPtr Occurrence::GetPartDocument ( );
__declspec(implementation_key(136)) VARIANT_BOOL Occurrence::GetReferenceOnly ( );
__declspec(implementation_key(137)) void Occurrence::PutReferenceOnly ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(138)) VARIANT_BOOL Occurrence::GetSubassembly ( );
__declspec(implementation_key(139)) enum TGFramework::ObjectType Occurrence::GetType ( );
__declspec(implementation_key(140)) long Occurrence::GetQuantity ( );
__declspec(implementation_key(141)) void Occurrence::PutQuantity ( long _arg1 );
__declspec(implementation_key(142)) VARIANT_BOOL Occurrence::GetVisible ( );
__declspec(implementation_key(143)) void Occurrence::PutVisible ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(144)) HRESULT Occurrence::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(145)) VARIANT_BOOL Occurrence::GetLocatable ( );
__declspec(implementation_key(146)) void Occurrence::PutLocatable ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(147)) HRESULT Occurrence::PutTransform ( double OriginX, double OriginY, double OriginZ, double AngleX, double AngleY, double AngleZ );
__declspec(implementation_key(148)) HRESULT Occurrence::GetTransform ( double * OriginX, double * OriginY, double * OriginZ, double * AngleX, double * AngleY, double * AngleZ );
__declspec(implementation_key(149)) enum OccurrenceStatusConstants Occurrence::GetStatus ( );
__declspec(implementation_key(150)) HRESULT Occurrence::PutOrigin ( double OriginX, double OriginY, double OriginZ );
__declspec(implementation_key(151)) HRESULT Occurrence::GetOrigin ( double * OriginX, double * OriginY, double * OriginZ );
__declspec(implementation_key(152)) HRESULT Occurrence::Move ( double DeltaX, double DeltaY, double DeltaZ );
__declspec(implementation_key(153)) HRESULT Occurrence::Rotate ( double AxisX1, double AxisY1, double AxisZ1, double AxisX2, double AxisY2, double AxisZ2, double Angle );
__declspec(implementation_key(154)) IDispatchPtr Occurrence::GetRelations3d ( );
__declspec(implementation_key(155)) HRESULT Occurrence::PutMatrix ( SAFEARRAY * * Matrix, VARIANT_BOOL Replace );
__declspec(implementation_key(156)) HRESULT Occurrence::GetMatrix ( SAFEARRAY * * Matrix );
__declspec(implementation_key(157)) VARIANT_BOOL Occurrence::GetIncludeInBom ( );
__declspec(implementation_key(158)) void Occurrence::PutIncludeInBom ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(159)) VARIANT_BOOL Occurrence::GetDisplayInDrawings ( );
__declspec(implementation_key(160)) void Occurrence::PutDisplayInDrawings ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(161)) VARIANT_BOOL Occurrence::GetDisplayInSubAssembly ( );
__declspec(implementation_key(162)) void Occurrence::PutDisplayInSubAssembly ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(163)) VARIANT_BOOL Occurrence::GetIncludeInPhysicalProperties ( );
__declspec(implementation_key(164)) void Occurrence::PutIncludeInPhysicalProperties ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(165)) VARIANT_BOOL Occurrence::GetIsForeign ( );
__declspec(implementation_key(166)) HRESULT Occurrence::Replace ( _bstr_t NewOccurrenceFileName, VARIANT_BOOL ReplaceAll, const _variant_t & NewFamilyMemberName );
__declspec(implementation_key(167)) VARIANT_BOOL Occurrence::RenameFileName ( _bstr_t NewOccurrenceFileName );
__declspec(implementation_key(168)) HRESULT Occurrence::Mirror ( IDispatch * pPlane );
__declspec(implementation_key(169)) _bstr_t Occurrence::GetStyle ( );
__declspec(implementation_key(170)) void Occurrence::PutStyle ( _bstr_t _arg1 );
__declspec(implementation_key(171)) IDispatchPtr Occurrence::GetFaceStyle ( );
__declspec(implementation_key(172)) void Occurrence::PutFaceStyle ( IDispatch * _arg1 );
__declspec(implementation_key(173)) HRESULT Occurrence::MakeWritable ( );
__declspec(implementation_key(174)) IDispatchPtr Occurrence::GetAttributeSets ( );
__declspec(implementation_key(175)) VARIANT_BOOL Occurrence::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(176)) _bstr_t Occurrence::GetOccurrenceFileName ( );
__declspec(implementation_key(177)) IDispatchPtr Occurrence::GetOccurrenceDocument ( );
__declspec(implementation_key(178)) void Occurrence::PutActivate ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(179)) VARIANT_BOOL Occurrence::GetActivate ( );
__declspec(implementation_key(180)) AssemblyDocumentPtr Occurrence::GetTopLevelDocument ( );
__declspec(implementation_key(181)) HRESULT Occurrence::GetReferenceKey ( SAFEARRAY * * ReferenceKey, VARIANT * KeySize );
__declspec(implementation_key(182)) SubOccurrencesPtr Occurrence::GetSubOccurrences ( );
__declspec(implementation_key(183)) HRESULT Occurrence::CreateTopologyReference ( SAFEARRAY * * ReferenceKey, struct TopologyReference * * TopologyReference );
__declspec(implementation_key(184)) VARIANT_BOOL Occurrence::IsTube ( );
__declspec(implementation_key(185)) TubePtr Occurrence::GetTube ( );
__declspec(implementation_key(186)) double Occurrence::GetNongraphicQuantity ( );
__declspec(implementation_key(187)) void Occurrence::PutNongraphicQuantity ( double _arg1 );
__declspec(implementation_key(188)) VARIANT_BOOL Occurrence::GetIsNongraphic ( );
__declspec(implementation_key(189)) VARIANT_BOOL Occurrence::GetHasNongraphicQuantity ( );
__declspec(implementation_key(190)) long Occurrence::GetNongraphicPrecision ( );
__declspec(implementation_key(191)) _bstr_t Occurrence::GetNongraphicDescription ( );
__declspec(implementation_key(192)) VARIANT_BOOL Occurrence::GetIsFamilyOfAssembly ( );
__declspec(implementation_key(193)) HRESULT Occurrence::SwapFamilyMember ( _bstr_t MemberName, VARIANT_BOOL SwapAllOccurrences );
__declspec(implementation_key(194)) void Occurrence::PutUseSimplified ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(195)) VARIANT_BOOL Occurrence::GetUseSimplified ( );
__declspec(implementation_key(196)) VARIANT_BOOL Occurrence::GetDisplayReferencePlanes ( );
__declspec(implementation_key(197)) void Occurrence::PutDisplayReferencePlanes ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(198)) VARIANT_BOOL Occurrence::GetDisplayCoordinateSystems ( );
__declspec(implementation_key(199)) void Occurrence::PutDisplayCoordinateSystems ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(200)) VARIANT_BOOL Occurrence::GetDisplayConstructions ( );
__declspec(implementation_key(201)) void Occurrence::PutDisplayConstructions ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(202)) VARIANT_BOOL Occurrence::GetDisplayConstrCurves ( );
__declspec(implementation_key(203)) void Occurrence::PutDisplayConstrCurves ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(204)) VARIANT_BOOL Occurrence::GetDisplayReferenceAxes ( );
__declspec(implementation_key(205)) void Occurrence::PutDisplayReferenceAxes ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(206)) VARIANT_BOOL Occurrence::GetDisplaySketches ( );
__declspec(implementation_key(207)) void Occurrence::PutDisplaySketches ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(208)) VARIANT_BOOL Occurrence::GetDisplayAsLastSaved ( );
__declspec(implementation_key(209)) void Occurrence::PutDisplayAsLastSaved ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(210)) void Occurrence::PutAdjustable ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(211)) VARIANT_BOOL Occurrence::GetAdjustable ( );
__declspec(implementation_key(212)) IDispatchPtr Occurrence::GetFaceStyle2 ( VARIANT_BOOL vbHonourPrefs );
__declspec(implementation_key(213)) AdjustablePartPtr Occurrence::MakeAdjustablePart ( );
__declspec(implementation_key(214)) AdjustablePartPtr Occurrence::GetAdjustablePart ( );
__declspec(implementation_key(215)) VARIANT_BOOL Occurrence::GetIsAdjustablePart ( );
__declspec(implementation_key(216)) VARIANT_BOOL Occurrence::IsAlternateComponent ( );
__declspec(implementation_key(217)) HRESULT Occurrence::AddAlternateComponent ( _bstr_t AlternateComponentFileName );
__declspec(implementation_key(218)) HRESULT Occurrence::RemoveAlternateComponent ( _bstr_t AlternateComponentFileName );
__declspec(implementation_key(219)) HRESULT Occurrence::RemoveAllAlternateComponents ( );
__declspec(implementation_key(220)) HRESULT Occurrence::GetAllAlternateComponents ( long * AlternateComponentCount, SAFEARRAY * * AlternateComponentFileNames );
__declspec(implementation_key(221)) VARIANT_BOOL Occurrence::GetHasBodyOverride ( );
__declspec(implementation_key(222)) IDispatchPtr Occurrence::GetBody ( );
__declspec(implementation_key(223)) HRESULT Occurrence::GetSimplifiedBodies ( long * NumBodies, SAFEARRAY * * SimplifiedBodies );
__declspec(implementation_key(224)) VARIANT_BOOL Occurrence::GetIsPatterned ( );
__declspec(implementation_key(225)) VARIANT_BOOL Occurrence::GetIsPatternItem ( );
__declspec(implementation_key(226)) HRESULT Occurrence::CaptureRelationships ( long RelationshipCount, SAFEARRAY * * RelationshipsToCapture );
__declspec(implementation_key(227)) HRESULT Occurrence::ClearCapturedRelationships ( );
__declspec(implementation_key(228)) HRESULT Occurrence::GetBodyInversionMatrix ( SAFEARRAY * * InvMatrix );
__declspec(implementation_key(229)) VARIANT_BOOL Occurrence::GetIncludeInInterference ( );
__declspec(implementation_key(230)) void Occurrence::PutIncludeInInterference ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(231)) VARIANT_BOOL Occurrence::GetDisplayAsReference ( );
__declspec(implementation_key(232)) void Occurrence::PutDisplayAsReference ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(233)) SubassemblyBodiesPtr Occurrence::GetSubassemblyBodies ( );
__declspec(implementation_key(234)) HRESULT Occurrence::GetExplodeMatrix ( SAFEARRAY * * Matrix );
__declspec(implementation_key(235)) HRESULT Occurrence::RemoveOverrideBody ( );
__declspec(implementation_key(236)) HRESULT Occurrence::GetRangeBox ( SAFEARRAY * * MinRangePoint, SAFEARRAY * * MaxRangePoint );
__declspec(implementation_key(237)) HRESULT Occurrence::RetrieveHoleLocation ( );
__declspec(implementation_key(238)) HRESULT Occurrence::DeleteHoleLocation ( );
__declspec(implementation_key(239)) HRESULT Occurrence::GetInterpartDrivingOccurrences ( long * NumDrivingOccurrences, SAFEARRAY * * DrivingOccurrences );
__declspec(implementation_key(240)) HRESULT Occurrence::GetInterpartDrivenOccurrences ( long * NumDrivenOccurrences, SAFEARRAY * * DrivenOccurrences );
__declspec(implementation_key(241)) int Occurrence::GetItemNumber ( );
__declspec(implementation_key(242)) void Occurrence::PutItemNumber ( int _arg1 );
__declspec(implementation_key(243)) VARIANT_BOOL Occurrence::GetReferencePlanesVisible ( );
__declspec(implementation_key(244)) void Occurrence::PutReferencePlanesVisible ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(245)) VARIANT_BOOL Occurrence::GetCoordinateSystemsVisible ( );
__declspec(implementation_key(246)) void Occurrence::PutCoordinateSystemsVisible ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(247)) VARIANT_BOOL Occurrence::GetSketchesVisible ( );
__declspec(implementation_key(248)) void Occurrence::PutSketchesVisible ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(249)) HRESULT Occurrence::CreateTopologyReferenceToBodyOverride ( SAFEARRAY * * ReferenceKey, struct TopologyReference * * TopologyReference );
__declspec(implementation_key(250)) HRESULT Occurrence::ResetName ( );
__declspec(implementation_key(251)) VARIANT_BOOL Occurrence::GetHasUserDefinedName ( );
__declspec(implementation_key(252)) VARIANT_BOOL Occurrence::GetIsStructuralFrameItem ( );
__declspec(implementation_key(253)) VARIANT_BOOL Occurrence::GetIsWire ( );
__declspec(implementation_key(254)) VARIANT_BOOL Occurrence::GetIsPipeFitting ( );
__declspec(implementation_key(255)) VARIANT_BOOL Occurrence::GetIsPipeSegment ( );
__declspec(implementation_key(256)) VARIANT_BOOL Occurrence::GetIsFastenerSystemItem ( );
__declspec(implementation_key(257)) HRESULT Occurrence::Range ( double * x_min, double * y_min, double * z_min, double * x_max, double * y_max, double * z_max );
__declspec(implementation_key(258)) VARIANT_BOOL Occurrence::GetDisplayCenterline ( );
__declspec(implementation_key(259)) void Occurrence::PutDisplayCenterline ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(260)) enum TGFramework::ObjectType Occurrence::GetNodeType ( );
__declspec(implementation_key(261)) VARIANT_BOOL Occurrence::GetIsCopy ( );
__declspec(implementation_key(262)) VARIANT_BOOL Occurrence::GetIsFamilyOfParts ( );
__declspec(implementation_key(263)) HRESULT Occurrence::GetSimplifiedBodies2 ( long * NumBodies, SAFEARRAY * * SimplifiedBodies, SAFEARRAY * * Transforms );
__declspec(implementation_key(264)) VARIANT_BOOL Occurrence::FileMissing ( );
__declspec(implementation_key(265)) VARIANT_BOOL Occurrence::RecheckMissingFile ( );
__declspec(implementation_key(266)) VARIANT_BOOL Occurrence::GetDisplayLiveSections ( );
__declspec(implementation_key(267)) void Occurrence::PutDisplayLiveSections ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(268)) VARIANT_BOOL Occurrence::GetDisplayDimensions ( );
__declspec(implementation_key(269)) void Occurrence::PutDisplayDimensions ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(270)) VARIANT_BOOL Occurrence::GetDisplayAnnotations ( );
__declspec(implementation_key(271)) void Occurrence::PutDisplayAnnotations ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(272)) VARIANT_BOOL Occurrence::GetDisplayDesignBody ( );
__declspec(implementation_key(273)) void Occurrence::PutDisplayDesignBody ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(274)) _bstr_t Occurrence::GetCustomPropertyValue ( _bstr_t CustomPropertyName );
__declspec(implementation_key(275)) void Occurrence::PutCustomPropertyValue ( _bstr_t CustomPropertyName, _bstr_t _arg2 );
__declspec(implementation_key(276)) HRESULT Occurrence::FrameSaveAs ( _bstr_t FileName );
__declspec(implementation_key(277)) HRESULT Occurrence::FrameSaveAsTranslated ( _bstr_t FileName );
__declspec(implementation_key(278)) HRESULT Occurrence::PutStyleUsePartStyle ( );
__declspec(implementation_key(279)) HRESULT Occurrence::PutStyleNone ( );
__declspec(implementation_key(280)) VARIANT_BOOL Occurrence::GetStyleNone ( );
__declspec(implementation_key(281)) VARIANT_BOOL Occurrence::GetStyleUsePartStyle ( );
__declspec(implementation_key(282)) _bstr_t Occurrence::FrameSaveAsBiDM ( _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title );
__declspec(implementation_key(283)) IDispatchPtr Occurrence::BindKeyToTopology ( VARIANT_BOOL BodyOverride, SAFEARRAY * * ReferenceKey );
__declspec(implementation_key(284)) long Occurrence::GetOccurrenceID ( );
__declspec(implementation_key(285)) HRESULT Occurrence::GetSectionedFacetData ( long PartID, enum OccurrenceSectionedFacetDataConstants * FacetDataPresence, long * FacetCount, SAFEARRAY * * Points, SAFEARRAY * * Normals, SAFEARRAY * * TextureCoords, SAFEARRAY * * StyleIDs, SAFEARRAY * * FaceIDs );
__declspec(implementation_key(286)) HRESULT Occurrence::CutLength ( double * dCutLength );
__declspec(implementation_key(287)) HRESULT Occurrence::MiterCut ( double * MiterCut1, double * MiterCut2 );
__declspec(implementation_key(288)) HRESULT Occurrence::SideFaceEndAngle ( double * SideFaceEndAngle1, double * SideFaceEndAngle2 );
__declspec(implementation_key(289)) HRESULT Occurrence::EndFaceEndAngle ( double * EndFaceEndAngle1, double * EndFaceEndAngle2 );
__declspec(implementation_key(290)) VARIANT_BOOL Occurrence::GetIsInternalComponent ( );
__declspec(implementation_key(291)) InternalComponentPtr Occurrence::GetInternalComponent ( );
__declspec(implementation_key(292)) TGPart::SuppressVariablePtr Occurrence::GetSuppressionVariable ( );
__declspec(implementation_key(293)) TGPart::SuppressVariablePtr Occurrence::AddSuppressionVariable ( );
__declspec(implementation_key(294)) HRESULT Occurrence::DeleteSuppressionVariable ( );
__declspec(implementation_key(295)) VARIANT_BOOL Occurrence::HasSuppressionVariable ( );
__declspec(implementation_key(296)) HRESULT AssemblyDocument::Activate ( );
__declspec(implementation_key(297)) TGFramework::ApplicationPtr AssemblyDocument::GetApplication ( );
__declspec(implementation_key(298)) HRESULT AssemblyDocument::Close ( const _variant_t & SaveChanges, const _variant_t & FileName, const _variant_t & RouteWorkbook );
__declspec(implementation_key(299)) _bstr_t AssemblyDocument::GetFullName ( );
__declspec(implementation_key(300)) _bstr_t AssemblyDocument::GetName ( );
__declspec(implementation_key(301)) TGFramework::ApplicationPtr AssemblyDocument::GetParent ( );
__declspec(implementation_key(302)) _bstr_t AssemblyDocument::GetPath ( );
__declspec(implementation_key(303)) HRESULT AssemblyDocument::PrintOut ( const _variant_t & Printer, const _variant_t & NumCopies, const _variant_t & Orientation, const _variant_t & PaperSize, const _variant_t & Scale, const _variant_t & PrintToFile, const _variant_t & OutputFileName, const _variant_t & PrintRange, const _variant_t & Sheets, const _variant_t & ColorAsBlack, const _variant_t & Collate );
__declspec(implementation_key(304)) VARIANT_BOOL AssemblyDocument::GetReadOnly ( );
__declspec(implementation_key(305)) IDispatchPtr AssemblyDocument::GetRoutingSlip ( );
__declspec(implementation_key(306)) HRESULT AssemblyDocument::Save ( );
__declspec(implementation_key(307)) HRESULT AssemblyDocument::SaveAs ( _bstr_t NewName, const _variant_t & IsATemplate, const _variant_t & FileFormat, const _variant_t & ReadOnlyEnforced, const _variant_t & ReadOnlyRecommended, const _variant_t & NewStatus, const _variant_t & CreateBackup, const _variant_t & UpdateLinkInContainer, const _variant_t & UpdateAllLinksInContainer );
__declspec(implementation_key(308)) HRESULT AssemblyDocument::SaveCopyAs ( _bstr_t Name );
__declspec(implementation_key(309)) HRESULT AssemblyDocument::SaveAsJT ( _bstr_t NewName, const _variant_t & Include_PreciseGeom, const _variant_t & Prod_Structure_Option, const _variant_t & Export_PMI, const _variant_t & Export_CoordinateSystem, const _variant_t & Export_3DBodies, const _variant_t & NumberofLODs, const _variant_t & JTFileUnit, const _variant_t & Write_Which_Files, const _variant_t & Use_Simplified_TopAsm, const _variant_t & Use_Simplified_SubAsm, const _variant_t & Use_Simplified_Part, const _variant_t & EnableDefaultOutputPath, const _variant_t & IncludeSEProperties, const _variant_t & Export_VisiblePartsOnly, const _variant_t & Export_VisibleConstructionsOnly, const _variant_t & RemoveUnsafeCharacters, const _variant_t & ExportSEPartFileAsSingleJTFile );
__declspec(implementation_key(310)) _bstr_t AssemblyDocument::SaveAsBIDM ( _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title );
__declspec(implementation_key(311)) _bstr_t AssemblyDocument::ReviseBIDM ( _bstr_t FilePath, _bstr_t Revision, _bstr_t Title );
__declspec(implementation_key(312)) TGFramework::SelectSetPtr AssemblyDocument::GetSelectSet ( );
__declspec(implementation_key(313)) HRESULT AssemblyDocument::SendMail ( const _variant_t & Recipients, const _variant_t & Subject, const _variant_t & ReturnReceipt );
__declspec(implementation_key(314)) IDispatchPtr AssemblyDocument::GetSummaryInfo ( );
__declspec(implementation_key(315)) TGFramework::WindowsPtr AssemblyDocument::GetWindows ( );
__declspec(implementation_key(316)) IDispatchPtr AssemblyDocument::GetProperties ( );
__declspec(implementation_key(317)) VARIANT_BOOL AssemblyDocument::GetIsTemplate ( );
__declspec(implementation_key(318)) void AssemblyDocument::PutIsTemplate ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(319)) enum TGFramework::DocumentStatus AssemblyDocument::GetStatus ( );
__declspec(implementation_key(320)) void AssemblyDocument::PutStatus ( enum TGFramework::DocumentStatus _arg1 );
__declspec(implementation_key(321)) HRESULT AssemblyDocument::EditProperties ( );
__declspec(implementation_key(322)) TGFramework::UnitsOfMeasurePtr AssemblyDocument::GetUnitsOfMeasure ( );
__declspec(implementation_key(323)) IDispatchPtr AssemblyDocument::GetActiveSketch ( );
__declspec(implementation_key(324)) enum TGFramework::DocumentTypeConstants AssemblyDocument::GetType ( );
__declspec(implementation_key(325)) IUnknownPtr AssemblyDocument::GetDocumentEvents ( );
__declspec(implementation_key(326)) IUnknownPtr AssemblyDocument::GetRootStorage ( );
__declspec(implementation_key(327)) IUnknownPtr AssemblyDocument::GetAddInsStorage ( _bstr_t Name, long grfMode );
__declspec(implementation_key(328)) VARIANT_BOOL AssemblyDocument::GetDirty ( );
__declspec(implementation_key(329)) void AssemblyDocument::PutDirty ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(330)) TGFramework::AttributeQueryPtr AssemblyDocument::GetAttributeQuery ( );
__declspec(implementation_key(331)) _bstr_t AssemblyDocument::GetCreatedVersion ( );
__declspec(implementation_key(332)) _bstr_t AssemblyDocument::GetLastSavedVersion ( );
__declspec(implementation_key(333)) TGFramework::HighlightSetsPtr AssemblyDocument::GetHighlightSets ( );
__declspec(implementation_key(334)) VARIANT_BOOL AssemblyDocument::GetInPlaceActivated ( );
__declspec(implementation_key(335)) HRESULT AssemblyDocument::SeekWriteAccess ( VARIANT_BOOL * WriteAccess );
__declspec(implementation_key(336)) long AssemblyDocument::GetUndoSteps ( );
__declspec(implementation_key(337)) void AssemblyDocument::PutUndoSteps ( long _arg1 );
__declspec(implementation_key(338)) HRESULT AssemblyDocument::CreatePreview ( );
__declspec(implementation_key(339)) void AssemblyDocument::PutReadOnly ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(340)) HRESULT AssemblyDocument::SeekReadOnlyAccess ( VARIANT_BOOL * ReadOnlyAccess );
__declspec(implementation_key(341)) HRESULT AssemblyDocument::ImportStyles2 ( enum TGFramework::seStyleTypeConstants StyleType, VARIANT_BOOL bReplace, IDispatch * pSrcDocument );
__declspec(implementation_key(342)) VARIANT_BOOL AssemblyDocument::GetIsInsightFile ( );
__declspec(implementation_key(343)) TGFramework::NamedViewsPtr AssemblyDocument::GetNamedViews ( );
__declspec(implementation_key(344)) HRESULT AssemblyDocument::GetRegisteredCustomPropertiesBiDM ( VARIANT * varPropInfo );
__declspec(implementation_key(345)) _bstr_t AssemblyDocument::SaveAsWithCustomPropertiesBIDM ( _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title, const _variant_t & varPropInfo );
__declspec(implementation_key(346)) _bstr_t AssemblyDocument::ReviseWithCustomPropertiesBIDM ( _bstr_t FilePath, _bstr_t Revision, _bstr_t Title, const _variant_t & varPropInfo );
__declspec(implementation_key(347)) HRESULT AssemblyDocument::SaveAsPRC ( _bstr_t FileName );
__declspec(implementation_key(348)) IDispatchPtr AssemblyDocument::GetVariables ( );
__declspec(implementation_key(349)) IDispatchPtr AssemblyDocument::GetInterpartLinks ( );
__declspec(implementation_key(350)) HRESULT AssemblyDocument::FreezeAllInterpartLinks ( );
__declspec(implementation_key(351)) HRESULT AssemblyDocument::BreakAllInterpartLinks ( );
__declspec(implementation_key(352)) HRESULT AssemblyDocument::ThawAllInterpartLinks ( );
__declspec(implementation_key(353)) HRESULT AssemblyDocument::HasInterpartLinks ( VARIANT_BOOL * pbHasInterpartLinks );
__declspec(implementation_key(354)) HRESULT AssemblyDocument::GetInContextAssemblyNameForInterpartLinks ( BSTR * pbstrAssemblyName );
__declspec(implementation_key(355)) _variant_t AssemblyDocument::NewWindow ( const _variant_t & NewWindowOptions, const _variant_t & Environment );
__declspec(implementation_key(356)) HRESULT AssemblyDocument::NewNavigatorWindow ( );
__declspec(implementation_key(357)) PartsPtr AssemblyDocument::GetParts ( );
__declspec(implementation_key(358)) Relations3dPtr AssemblyDocument::GetRelations3d ( );
__declspec(implementation_key(359)) PhysicalPropertiesPtr AssemblyDocument::GetPhysicalProperties ( );
__declspec(implementation_key(360)) IDispatchPtr AssemblyDocument::GetFaceStyles ( );
__declspec(implementation_key(361)) IDispatchPtr AssemblyDocument::CreateReference ( struct Occurrence * Occurrence, const _variant_t & Entity );
__declspec(implementation_key(362)) OccurrencesPtr AssemblyDocument::GetOccurrences ( );
__declspec(implementation_key(363)) AsmRefPlanesPtr AssemblyDocument::GetAsmRefPlanes ( );
__declspec(implementation_key(364)) HRESULT AssemblyDocument::CheckInterference ( long NumElementsSet1, SAFEARRAY * * Set1, enum InterferenceStatusConstants * Status, const _variant_t & ComparisonMethod, const _variant_t & NumElementsSet2, const _variant_t & Set2, const _variant_t & AddInterferenceAsOccurrence, const _variant_t & ReportFilename, const _variant_t & ReportType, VARIANT * NumInterferences, VARIANT * InterferingPartsSet1, VARIANT * InterferingPartsOtherSet, VARIANT * ConfirmedInterference, VARIANT * InterferenceOccurrence, const _variant_t & IgnoreThreadInterferences );
__declspec(implementation_key(365)) HRESULT AssemblyDocument::BindKeyToObject ( SAFEARRAY * * ReferenceKey, IDispatch * * Object );
__declspec(implementation_key(366)) TGPart::CoordinateSystemsPtr AssemblyDocument::GetCoordinateSystems ( );
__declspec(implementation_key(367)) TGPart::StudyOwnerPtr AssemblyDocument::GetStudyOwner ( );
__declspec(implementation_key(368)) HRESULT AssemblyDocument::MinimumDistance ( IDispatch * Element1, IDispatch * Element2, double * Distance, SAFEARRAY * * Point1, SAFEARRAY * * Point2 );
__declspec(implementation_key(369)) IUnknownPtr AssemblyDocument::GetAssemblyRecomputeEvents ( );
__declspec(implementation_key(370)) LayoutsPtr AssemblyDocument::GetLayouts ( );
__declspec(implementation_key(371)) LineSegmentsPtr AssemblyDocument::GetLineSegments ( );
__declspec(implementation_key(372)) SegmentsPtr AssemblyDocument::GetSegments ( );
__declspec(implementation_key(373)) HRESULT AssemblyDocument::GetGlobalParameter ( enum AssemblyGlobalConstants Parameter, VARIANT * Value );
__declspec(implementation_key(374)) HRESULT AssemblyDocument::SetGlobalParameter ( enum AssemblyGlobalConstants Parameter, const _variant_t & Value );
__declspec(implementation_key(375)) TGFramework::SensorsPtr AssemblyDocument::GetSensors ( );
__declspec(implementation_key(376)) long AssemblyDocument::GetCutawaysCount ( );
__declspec(implementation_key(377)) long AssemblyDocument::GetExplosionsCount ( );
__declspec(implementation_key(378)) ArcSegmentsPtr AssemblyDocument::GetArcSegments ( );
__declspec(implementation_key(379)) SegmentRelations3dPtr AssemblyDocument::GetSegmentRelations3d ( );
__declspec(implementation_key(380)) QueriesPtr AssemblyDocument::GetQueries ( );
__declspec(implementation_key(381)) TGFramework::SelectSetPtr AssemblyDocument::GetRelationshipsSelectSet ( );
__declspec(implementation_key(382)) AssemblyFamilyMembersPtr AssemblyDocument::GetAssemblyFamilyMembers ( );
__declspec(implementation_key(383)) VARIANT_BOOL AssemblyDocument::GetIsFileFamilyByDocument ( );
__declspec(implementation_key(384)) VARIANT_BOOL AssemblyDocument::GetIsFileAlternatePositionByDocument ( );
__declspec(implementation_key(385)) HRESULT AssemblyDocument::CreateFamilyFile ( _bstr_t FirstMemberName, _bstr_t SecondMemberName, VARIANT_BOOL bCreateAlternatePosition );
__declspec(implementation_key(386)) HRESULT AssemblyDocument::DisperseSubassembly ( IDispatch * Subassembly, VARIANT_BOOL bAllOccurrences );
__declspec(implementation_key(387)) HRESULT AssemblyDocument::TransferOccurrences ( SAFEARRAY * * OccurrencesToTransfer, const _variant_t & Subassembly );
__declspec(implementation_key(388)) OccurrencePtr AssemblyDocument::BundleOccurrences ( SAFEARRAY * * OccurrencesToTransfer, _bstr_t OccurrenceFileName, const _variant_t & TemplateFileName, const _variant_t & Subassembly );
__declspec(implementation_key(389)) AssemblyPatternsPtr AssemblyDocument::GetAssemblyPatterns ( );
__declspec(implementation_key(390)) HRESULT AssemblyDocument::MeasureAngle ( IDispatch * Element1, IDispatch * Element2, double * TrueAngle, double * ApparentAngle, const _variant_t & Element3 );
__declspec(implementation_key(391)) HRESULT AssemblyDocument::NormalDistance ( IDispatch * Element1, IDispatch * Element2, double * TrueDistance, double * ApparentDistance, double * DeltaX, double * DeltaY, double * DeltaZ, const _variant_t & CoordinateSystem );
__declspec(implementation_key(392)) ConfigurationsPtr AssemblyDocument::GetConfigurations ( );
__declspec(implementation_key(393)) HRESULT AssemblyDocument::RenameFile ( _bstr_t OldPath, _bstr_t NewPath );
__declspec(implementation_key(394)) HRESULT AssemblyDocument::SetExternalPaths ( SAFEARRAY * * VecUnopenedPath );
__declspec(implementation_key(395)) HRESULT AssemblyDocument::UpdateExternalPaths ( );
__declspec(implementation_key(396)) IDispatchPtr AssemblyDocument::GetViewStyles ( );
__declspec(implementation_key(397)) HRESULT AssemblyDocument::ImportStyles ( _bstr_t FileName, const _variant_t & Overwrite );
__declspec(implementation_key(398)) WireRunsPtr AssemblyDocument::GetWireRuns ( );
__declspec(implementation_key(399)) WirePathsPtr AssemblyDocument::GetWirePaths ( );
__declspec(implementation_key(400)) AssemblyPropertiesPtr AssemblyDocument::GetAssemblyProperties ( );
__declspec(implementation_key(401)) CurveSegmentsPtr AssemblyDocument::GetCurveSegments ( );
__declspec(implementation_key(402)) HRESULT AssemblyDocument::GenerateWireReport ( enum AssemblyReportTypeConstants ReportType, const _variant_t & FileNameToSaveReport, int FieldsToGenerate );
__declspec(implementation_key(403)) HRESULT AssemblyDocument::ActivateAll ( );
__declspec(implementation_key(404)) HRESULT AssemblyDocument::UpdateAll ( );
__declspec(implementation_key(405)) HRESULT AssemblyDocument::GetContainerDocumentAndMatrixOfIPADoc ( IDispatch * * ContainerDocument, SAFEARRAY * * Matrix );
__declspec(implementation_key(406)) HRESULT AssemblyDocument::CopySketch ( IDispatch * SourceLayoutOrSketch, IDispatch * TargetPartOrAssembly, VARIANT_BOOL bAssociativeCopy, VARIANT * pvCopySketchErrorStatus );
__declspec(implementation_key(407)) long AssemblyDocument::GetGeometricVersion ( );
__declspec(implementation_key(408)) VARIANT_BOOL AssemblyDocument::GetIsGeometricVersionDirty ( );
__declspec(implementation_key(409)) IDispatchPtr AssemblyDocument::GetDimensionStyles ( );
__declspec(implementation_key(410)) TGFramework::LayersPtr AssemblyDocument::GetLayers ( );
__declspec(implementation_key(411)) TGPart::MeasureVariablePtr AssemblyDocument::AddMeasureVariable ( enum TGPart::MeasureVariableTypeConstants Type, enum TGPart::MeasureVariableValueConstants ValueType, IDispatch * Geom1, IDispatch * Geom2, const _variant_t & Geom3 );
__declspec(implementation_key(412)) VirtualComponentOccurrencesPtr AssemblyDocument::GetVirtualComponentOccurrences ( );
__declspec(implementation_key(413)) HRESULT AssemblyDocument::PublishVirtualComponents ( );
__declspec(implementation_key(414)) VARIANT_BOOL AssemblyDocument::GetHidePreviousLevel ( );
__declspec(implementation_key(415)) void AssemblyDocument::PutHidePreviousLevel ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(416)) long AssemblyDocument::GetProfileUndoSteps ( );
__declspec(implementation_key(417)) void AssemblyDocument::PutProfileUndoSteps ( long _arg1 );
__declspec(implementation_key(418)) HRESULT AssemblyDocument::CreateOrEditSimplifiedAssembly ( long NumOccurrenceExclude, SAFEARRAY * * OccurrenceExclude, double dExcludeRangeRatio, long NumOccurrenceInclude, SAFEARRAY * * OccurrenceInclude );
__declspec(implementation_key(419)) HRESULT AssemblyDocument::GetSimplifiedAssemblyInputs ( long * NumOccurrenceExclude, SAFEARRAY * * OccurrenceExclude, double * dExcludeRangeRatio, long * NumOccurrenceInclude, SAFEARRAY * * OccurrenceInclude );
__declspec(implementation_key(420)) HRESULT AssemblyDocument::UpdateSimplifiedAssembly ( );
__declspec(implementation_key(421)) VARIANT_BOOL AssemblyDocument::GetIsAssemblySimplified ( );
__declspec(implementation_key(422)) HRESULT AssemblyDocument::DeleteSimplifiedAssembly ( );
__declspec(implementation_key(423)) HRESULT AssemblyDocument::SaveSimplifiedAssemblyAs ( _bstr_t SaveFileName );
__declspec(implementation_key(424)) VARIANT_BOOL AssemblyDocument::GetIsSimplifyStateActive ( );
__declspec(implementation_key(425)) StructuralFramesPtr AssemblyDocument::GetStructuralFrames ( );
__declspec(implementation_key(426)) VARIANT_BOOL AssemblyDocument::GetHasCapturedRelationships ( );
__declspec(implementation_key(427)) AssemblyFeaturesPtr AssemblyDocument::GetAssemblyFeatures ( );
__declspec(implementation_key(428)) AssemblyDrivenPartFeaturesPtr AssemblyDocument::GetAssemblyDrivenPartFeatures ( );
__declspec(implementation_key(429)) long AssemblyDocument::GetCapturedRelationshipCount ( );
__declspec(implementation_key(430)) HRESULT AssemblyDocument::GetCapturedRelationshipInformation ( SAFEARRAY * * RelationshipTypes, SAFEARRAY * * OffsetTypes, SAFEARRAY * * Offsets, VARIANT * Faces );
__declspec(implementation_key(431)) PipesPtr AssemblyDocument::GetPipes ( );
__declspec(implementation_key(432)) ComponentLayoutsPtr AssemblyDocument::GetComponentLayouts ( );
__declspec(implementation_key(433)) PathsPtr AssemblyDocument::GetPaths ( );
__declspec(implementation_key(434)) HRESULT AssemblyDocument::UpdateDocument ( const _variant_t & FutureUse1, const _variant_t & FutureUse2 );
__declspec(implementation_key(435)) HarnessesPtr AssemblyDocument::GetHarnesses ( );
__declspec(implementation_key(436)) TGPart::LabelWeldDataCollectionPtr AssemblyDocument::GetLabelWeldDataCollection ( );
__declspec(implementation_key(437)) void AssemblyDocument::PutWeldmentAssembly ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(438)) VARIANT_BOOL AssemblyDocument::GetWeldmentAssembly ( );
__declspec(implementation_key(439)) void AssemblyDocument::PutWeldmentAssemblyBeadMaterial ( _bstr_t _arg1 );
__declspec(implementation_key(440)) _bstr_t AssemblyDocument::GetWeldmentAssemblyBeadMaterial ( );
__declspec(implementation_key(441)) void AssemblyDocument::PutWeldmentAssemblyBeadDensity ( double _arg1 );
__declspec(implementation_key(442)) double AssemblyDocument::GetWeldmentAssemblyBeadDensity ( );
__declspec(implementation_key(443)) HRESULT AssemblyDocument::GetBaseStyle ( enum AssemblyBaseStylesConstants BaseStyleType, struct TGFramework::FaceStyle * * BaseStyle );
__declspec(implementation_key(444)) HRESULT AssemblyDocument::SetBaseStyle ( enum AssemblyBaseStylesConstants BaseStyleType, struct TGFramework::FaceStyle * BaseStyle );
__declspec(implementation_key(445)) HRESULT AssemblyDocument::SaveModelAs ( IDispatch * Occurrence, _bstr_t SaveFileName );
__declspec(implementation_key(446)) void AssemblyDocument::PutActivateSimplifiedAssembly ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(447)) VARIANT_BOOL AssemblyDocument::GetActivateSimplifiedAssembly ( );
__declspec(implementation_key(448)) TGPart::HoleDataCollectionPtr AssemblyDocument::GetHoleDataCollection ( );
__declspec(implementation_key(449)) HRESULT AssemblyDocument::GenerateWireHarnessReport ( enum AssemblyWireHarnessReportTypeConstants ReportType, const _variant_t & FileNameToSaveReport, const _variant_t & Selection, const _variant_t & Window, const _variant_t & NumberOfReportProperties, const _variant_t & AssemblyReportProperties, const _variant_t & NumberOfSortItems, const _variant_t & SortProperties, const _variant_t & SortOrder, const _variant_t & Justification, const _variant_t & UpdateTemplate );
__declspec(implementation_key(450)) AssemblyBodiesPtr AssemblyDocument::GetAssemblyBodies ( );
__declspec(implementation_key(451)) IDispatchPtr AssemblyDocument::CreateReference2 ( IDispatch * Object, const _variant_t & Entity );
__declspec(implementation_key(452)) HRESULT AssemblyDocument::UpdatePathfinder ( enum AssemblyPathfinderUpdateConstants UpdateType );
__declspec(implementation_key(453)) ZonesPtr AssemblyDocument::GetZones ( );
__declspec(implementation_key(454)) HRESULT AssemblyDocument::UpdateStructureCache ( enum UpdateStructureCacheConstants UpdateType );
__declspec(implementation_key(455)) HRESULT AssemblyDocument::DeleteStructureCache ( );
__declspec(implementation_key(456)) FastenerSystemsPtr AssemblyDocument::GetFastenerSystems ( );
__declspec(implementation_key(457)) AssemblyGroupsPtr AssemblyDocument::GetAssemblyGroups ( );
__declspec(implementation_key(458)) HRESULT AssemblyDocument::CheckInterference2 ( long NumElementsSet1, SAFEARRAY * * Set1, enum InterferenceStatusConstants * Status, const _variant_t & ComparisonMethod, const _variant_t & NumElementsSet2, const _variant_t & Set2, const _variant_t & AddInterferenceAsOccurrence, const _variant_t & ReportFilename, const _variant_t & ReportType, VARIANT * NumInterferences, VARIANT * InterferingPartsSet1, VARIANT * InterferingPartsOtherSet, VARIANT * ConfirmedInterference, VARIANT * InterferenceOccurrence, const _variant_t & IgnoreSameNominalDiaConstant, const _variant_t & IgnoreNonThreadVsThreadConstant );
__declspec(implementation_key(459)) HRESULT AssemblyDocument::CheckInterference3 ( long NumElementsSet1, SAFEARRAY * * Set1, enum InterferenceStatusConstants * Status, const _variant_t & ComparisonMethod, const _variant_t & NumElementsSet2, const _variant_t & Set2, const _variant_t & AddInterferenceAsOccurrence, const _variant_t & ReportFilename, const _variant_t & ReportType, VARIANT * NumInterferences, VARIANT * InterferingPartsSet1, VARIANT * InterferingPartsOtherSet, VARIANT * ConfirmedInterference, VARIANT * InterferenceOccurrence, const _variant_t & IgnoreSameNominalDiaConstant, const _variant_t & IgnoreNonThreadVsThreadConstant, VARIANT_BOOL bAllowConstructions, VARIANT_BOOL bShowInterferenceVolume );
__declspec(implementation_key(460)) HRESULT AssemblyDocument::TranslateMultipleOccurrences ( long lNumberOfOccurrences, SAFEARRAY * * Occurrences, enum MoveMultipleMoveTypeConstants MoveType, enum MoveMultipleRelationshipConstants RelationshipMaintenance, double FromX, double FromY, double FromZ, double ToX, double ToY, double ToZ, VARIANT * MovedOrCopiedOccurrences );
__declspec(implementation_key(461)) HRESULT AssemblyDocument::RotateMultipleOccurrences ( long lNumberOfOccurrences, SAFEARRAY * * Occurrences, enum MoveMultipleMoveTypeConstants MoveType, enum MoveMultipleRelationshipConstants RelationshipMaintenance, double AxisX, double AxisY, double AxisZ, double Angle, VARIANT * MovedOrCopiedOccurrences );
__declspec(implementation_key(462)) HRESULT AssemblyDocument::GoalSeek ( _bstr_t NameTargetVariable, _bstr_t NameVariableToChange, double dTargetValue, double dTimeLimitInSecs, long NumIterationsLimit, double * dTimeElapsed, long * NumIterations, VARIANT_BOOL * TimeLimitExceeded, VARIANT_BOOL * IterationsLimitExceeded );
__declspec(implementation_key(463)) IDispatchPtr AssemblyDocument::GetPMI ( );
__declspec(implementation_key(464)) HRESULT AssemblyDocument::PMI_ByModelState ( IDispatch * * PMIObj, enum TGPart::PMIModelStateConstants PMIModelState );
__declspec(implementation_key(465)) _bstr_t AssemblyDocument::GetDisplayName ( );
__declspec(implementation_key(466)) ItemNumbersPtr AssemblyDocument::GetItemNumbers ( );
__declspec(implementation_key(467)) TGPart::ConstructionsPtr AssemblyDocument::GetConstructions ( );
__declspec(implementation_key(468)) HRESULT AssemblyDocument::GetContainerDocumentAndOccurrenceOfIPADoc ( IDispatch * * ContainerDocument, IDispatch * * IPAOccurrence );
__declspec(implementation_key(469)) HRESULT AssemblyDocument::GetTopDocumentAndSubOccurrenceOfIPADoc ( IDispatch * * TopDocument, IDispatch * * IPASubOccurrence );
__declspec(implementation_key(470)) IDispatchPtr AssemblyDocument::GetLinearStyles ( );
__declspec(implementation_key(471)) IDispatchPtr AssemblyDocument::GetFillStyles ( );
__declspec(implementation_key(472)) IDispatchPtr AssemblyDocument::GetHatchPatternStyles ( );
__declspec(implementation_key(473)) IUnknownPtr AssemblyDocument::GetAssemblyFamilyEvents ( );
__declspec(implementation_key(474)) IUnknownPtr AssemblyDocument::GetAssemblyFamilyEvents2 ( );
__declspec(implementation_key(475)) TGFramework::SectionViewsPtr AssemblyDocument::GetSectionViews ( );
__declspec(implementation_key(476)) HRESULT AssemblyDocument::Range ( double * x_min, double * y_min, double * z_min, double * x_max, double * y_max, double * z_max );
__declspec(implementation_key(477)) HRESULT AssemblyDocument::ReplaceComponents ( SAFEARRAY * * TargetComponents, _bstr_t ReplacementFilePath, enum ConstraintReplacementConstants ConstraintReplacementOption );
__declspec(implementation_key(478)) VARIANT_BOOL AssemblyDocument::GetIsMultiCADDriven ( );
__declspec(implementation_key(479)) AssemblyCopiesPtr AssemblyDocument::GetAssemblyCopies ( );
__declspec(implementation_key(480)) AssemblyMirrorsPtr AssemblyDocument::GetAssemblyMirrors ( );
__declspec(implementation_key(481)) SimplifiedAssembliesPtr AssemblyDocument::GetSimplifiedAssemblies ( );
__declspec(implementation_key(482)) IUnknownPtr AssemblyDocument::GetAssemblyChangeEvents ( );
__declspec(implementation_key(483)) IUnknownPtr AssemblyDocument::GetAssemblyConfigurationChangeEvents ( );
__declspec(implementation_key(484)) HRESULT AssemblyDocument::PathfinderScrollToSelection ( );
__declspec(implementation_key(485)) TGFramework::InterDocumentUpdatePtr AssemblyDocument::GetInterDocumentUpdate ( );
__declspec(implementation_key(486)) TGPart::Sketches3DPtr AssemblyDocument::GetSketches3D ( );
__declspec(implementation_key(487)) HRESULT AssemblyDocument::MeasureDistance ( IDispatch * Element1, IDispatch * Element2, enum TGPart::MeasureDistanceTypeConstants DistanceType, double * Distance, double * DX, double * DY, double * DZ, SAFEARRAY * * Point1, SAFEARRAY * * Point2 );
__declspec(implementation_key(488)) HRESULT AssemblyDocument::MeasureAngleEx ( IDispatch * Element1, IDispatch * Element2, IDispatch * Element3, double * Angle1, double * Angle2, double * Angle3, double * Angle4 );
__declspec(implementation_key(489)) HRESULT AssemblyDocument::InquireElement ( IDispatch * Element, SAFEARRAY * * InPoint, const _variant_t & CoordinateSystem, SAFEARRAY * * Point, double * SurfaceArea, double * Volume, double * Length );
__declspec(implementation_key(490)) HRESULT AssemblyDocument::GetDrivenDrivingInfo ( IDispatch * Element, VARIANT * DrivenOccurrencesArray, VARIANT * DrivingOccurrencesArray );
__declspec(implementation_key(491)) _bstr_t AssemblyDocument::GetActiveConfiguration ( );
__declspec(implementation_key(492)) TGPart::SketchBlocksPtr AssemblyDocument::GetBlocks ( );
__declspec(implementation_key(493)) IUnknownPtr AssemblyDocument::GetAssemblyPhysicalPropertiesChangeEvents ( );
__declspec(implementation_key(494)) IDispatchPtr AssemblyDocument::GetTextStyles ( );
__declspec(implementation_key(495)) IDispatchPtr AssemblyDocument::GetTextCharStyles ( );
__declspec(implementation_key(496)) HRESULT AssemblyDocument::CreateCloneComponents ( SAFEARRAY * * ComponentsToClone, SAFEARRAY * * ReferenceGeometryFaces, SAFEARRAY * * CloneEnviornment, enum CloneComponentOptions CloneOptions, VARIANT_BOOL bCreateGroup, enum CloneMatchTypeOptions CloneMatchType, long * ErrorStatus );
__declspec(implementation_key(497)) HRESULT AssemblyDocument::Get3dPrintInfo ( int * iNumberOfTriangles, int * iNumberOfPoints, int * iNumberOfEdges, double * dMeshSurfaceArea, double * dMeshVolume, double * dFileSize, double * dExportToleranceValue, double * dSurfacePlaneAngTol, enum TGPart::Print3DFileType Type );
__declspec(implementation_key(498)) HRESULT AssemblyDocument::PublishVirtualComponentsBIDM ( const _variant_t & ListOfDocumentNumbers, const _variant_t & ListOfRevisionIDs, const _variant_t & ListOfTitles );
__declspec(implementation_key(499)) HRESULT AssemblyDocument::LoadUOMPreferences ( VARIANT_BOOL UpdateUomGlobals );
__declspec(implementation_key(500)) void AssemblyDocument::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(501)) TGFramework::SteeringWheelPtr AssemblyDocument::GetSteeringWheel ( );
__declspec(implementation_key(502)) _bstr_t AssemblyDocument::SaveModelAsBiDM ( IDispatch * Occurrence, _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title );
__declspec(implementation_key(503)) void AssemblyDocument::PutPerformanceMode ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(504)) VARIANT_BOOL AssemblyDocument::GetPerformanceMode ( );
__declspec(implementation_key(505)) VARIANT_BOOL AssemblyDocument::GetHasMissingFiles ( );
__declspec(implementation_key(506)) HRESULT AssemblyDocument::GetMissingFilesInfo ( VARIANT * missingFilesAndObjects );
__declspec(implementation_key(507)) HRESULT AssemblyDocument::CopytoPMI ( IDispatch * featureObj, enum TGPart::seCopytoPMIConstants Type );
__declspec(implementation_key(508)) InternalComponentsPtr AssemblyDocument::GetInternalComponents ( );
__declspec(implementation_key(509)) EndCapsPtr AssemblyDocument::GetEndCaps ( );
__declspec(implementation_key(510)) HRESULT AssemblyDocument::DragComponentTranslation ( IDispatch * OccurrenceToDrag, enum DragComponentAnalysisOptionConstants AnalysisOption, enum DragComponentCollisionOptionConstants CollisionOption, double Distance, VARIANT_BOOL ConsiderMovingParts, VARIANT_BOOL ConsiderInactiveParts, VARIANT_BOOL MoveGroundedParts, double DirectionX, double DirectionY, double DirectionZ, double Sensitivity, IDispatch * EdgeOrAxis, VARIANT_BOOL * CollisionFound, SAFEARRAY * * CollidingPart );
__declspec(implementation_key(511)) HRESULT AssemblyDocument::DragComponentRotation ( IDispatch * OccurrenceToDrag, enum DragComponentAnalysisOptionConstants AnalysisOption, enum DragComponentCollisionOptionConstants CollisionOption, double Angle, VARIANT_BOOL ConsiderMovingParts, VARIANT_BOOL ConsiderInactiveParts, VARIANT_BOOL MoveGroundedParts, double DirectionX, double DirectionY, double DirectionZ, double Sensitivity, IDispatch * EdgeOrAxis, VARIANT_BOOL * CollisionFound, SAFEARRAY * * CollidingPart );
__declspec(implementation_key(512)) HRESULT AssemblyDocument::BeginCachedSolve ( );
__declspec(implementation_key(513)) HRESULT AssemblyDocument::EndCachedSolve ( );
__declspec(implementation_key(514)) HRESULT AssemblyDocument::SetSuppressComponent ( IDispatch * OccurrenceToSuppress, struct SuppressComponent * * SuppressComponent );
__declspec(implementation_key(515)) HRESULT AssemblyDocument::GetSuppressedComponents ( enum AssemblyComponentTypeConstants ComponentType, long * SuppressedComponentCount, SAFEARRAY * * SuppressedComponents );
__declspec(implementation_key(516)) HRESULT AssemblyDocument::CheckInterference4 ( long NumElementsSet1, SAFEARRAY * * Set1, enum InterferenceStatusConstants * Status, const _variant_t & ComparisonMethod, const _variant_t & NumElementsSet2, const _variant_t & Set2, const _variant_t & AddInterferenceAsOccurrence, const _variant_t & ReportFilename, const _variant_t & ReportType, VARIANT * NumInterferences, VARIANT * InterferingPartsSet1, VARIANT * InterferingPartsOtherSet, VARIANT * ConfirmedInterference, VARIANT * InterferenceOccurrence, const _variant_t & IgnoreSameNominalDiaConstant, const _variant_t & IgnoreNonThreadVsThreadConstant, VARIANT_BOOL ShowIntersectionVolume );
__declspec(implementation_key(517)) TGPart::DecalsPtr AssemblyDocument::GetDecals ( );
__declspec(implementation_key(518)) HRESULT AssemblyDocument::AutoExplode ( enum AutoExplodeSelectionTypeConstants AutoExplodeSelectionType, VARIANT_BOOL BindAllSubassemblies, enum AutoExplodeTechniqueConstants ExplodeTechnique, BSTR * ErrorCode, double SpreadDistance, IDispatch * Subassembly );
__declspec(implementation_key(519)) AsmCADDirectsPtr AssemblyDocument::GetAsmCADDirects ( );
__declspec(implementation_key(520)) VARIANT_BOOL AssemblyDocument::GetModelingInAssembly ( );
__declspec(implementation_key(521)) VARIANT_BOOL AssemblyDocument::GetAssemblyPreview ( );
__declspec(implementation_key(522)) HRESULT AssemblyDocument::EditAssembly ( );
__declspec(implementation_key(523)) HRESULT AssemblyDocument::EditAssemblyWithOptions ( enum AssemblyFileOpenPartActivationOptions ePartActivation, enum AssemblyFileOpenSimplificationOptions ePartSimplification, enum AssemblyFileOpenSimplificationOptions eSubassemblySimplification, enum AssemblyFileOpenActivateChangedPartOptions eActivateChangedParts );
__declspec(implementation_key(524)) TGPart::ReferencePointCloudsPtr AssemblyDocument::GetReferencePointClouds ( );
__declspec(implementation_key(525)) TGPart::ProfileSetsPtr AssemblyDocument::GetProfileSets ( );
__declspec(implementation_key(526)) TGPart::ModelPtr AssemblyDocument::GetAssemblyModel ( );
__declspec(implementation_key(527)) HRESULT AssemblyDocument::PublishInternalComponents ( _bstr_t bstrFileLocation, _bstr_t bstrPartTemplatePath, _bstr_t bstrSheetmetalTemplatePath, _bstr_t bstrAsmTemplatePath, _bstr_t bstrMaterial );
__declspec(implementation_key(528)) HRESULT AssemblyDocument::ArrangeDimensionsInSelectSet ( double dStackPitchMultiplier, VARIANT_BOOL bAssociative );
__declspec(implementation_key(529)) SubOccurrencePtr SubOccurrences::Item ( const _variant_t & Index );
__declspec(implementation_key(530)) TGFramework::ApplicationPtr SubOccurrences::GetApplication ( );
__declspec(implementation_key(531)) long SubOccurrences::GetCount ( );
__declspec(implementation_key(532)) IDispatchPtr SubOccurrences::GetParent ( );
__declspec(implementation_key(533)) TGFramework::ApplicationPtr SubOccurrence::GetApplication ( );
__declspec(implementation_key(534)) IDispatchPtr SubOccurrence::GetParent ( );
__declspec(implementation_key(535)) AssemblyDocumentPtr SubOccurrence::GetTopLevelDocument ( );
__declspec(implementation_key(536)) IDispatchPtr SubOccurrence::GetSubOccurrenceDocument ( );
__declspec(implementation_key(537)) _bstr_t SubOccurrence::GetSubOccurrenceFileName ( );
__declspec(implementation_key(538)) HRESULT SubOccurrence::GetReferenceKey ( SAFEARRAY * * ReferenceKey, VARIANT * KeySize );
__declspec(implementation_key(539)) SubOccurrencesPtr SubOccurrence::GetSubOccurrences ( );
__declspec(implementation_key(540)) HRESULT SubOccurrence::GetMatrix ( SAFEARRAY * * Matrix );
__declspec(implementation_key(541)) HRESULT SubOccurrence::CreateTopologyReference ( SAFEARRAY * * ReferenceKey, struct TopologyReference * * TopologyReference );
__declspec(implementation_key(542)) VARIANT_BOOL SubOccurrence::GetSubassembly ( );
__declspec(implementation_key(543)) enum TGFramework::ObjectType SubOccurrence::GetType ( );
__declspec(implementation_key(544)) _bstr_t SubOccurrence::GetName ( );
__declspec(implementation_key(545)) HRESULT SubOccurrence::GetMaterial ( SAFEARRAY * * DiffuseColor, SAFEARRAY * * AmbientColor, SAFEARRAY * * SpecularColor, SAFEARRAY * * EmissionColor, double * Shininess, double * Opacity );
__declspec(implementation_key(546)) VARIANT_BOOL SubOccurrence::GetVisible ( );
__declspec(implementation_key(547)) void SubOccurrence::PutVisible ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(548)) VARIANT_BOOL SubOccurrence::GetUseSimplified ( );
__declspec(implementation_key(549)) void SubOccurrence::PutUseSimplified ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(550)) VARIANT_BOOL SubOccurrence::GetDisplayReferencePlanes ( );
__declspec(implementation_key(551)) void SubOccurrence::PutDisplayReferencePlanes ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(552)) VARIANT_BOOL SubOccurrence::GetDisplayCoordinateSystems ( );
__declspec(implementation_key(553)) void SubOccurrence::PutDisplayCoordinateSystems ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(554)) VARIANT_BOOL SubOccurrence::GetDisplayConstructions ( );
__declspec(implementation_key(555)) void SubOccurrence::PutDisplayConstructions ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(556)) VARIANT_BOOL SubOccurrence::GetDisplayConstrCurves ( );
__declspec(implementation_key(557)) void SubOccurrence::PutDisplayConstrCurves ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(558)) VARIANT_BOOL SubOccurrence::GetDisplayReferenceAxes ( );
__declspec(implementation_key(559)) void SubOccurrence::PutDisplayReferenceAxes ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(560)) VARIANT_BOOL SubOccurrence::GetDisplaySketches ( );
__declspec(implementation_key(561)) void SubOccurrence::PutDisplaySketches ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(562)) VARIANT_BOOL SubOccurrence::GetDisplayAsLastSaved ( );
__declspec(implementation_key(563)) void SubOccurrence::PutDisplayAsLastSaved ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(564)) void SubOccurrence::PutAdjustable ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(565)) VARIANT_BOOL SubOccurrence::GetAdjustable ( );
__declspec(implementation_key(566)) HRESULT SubOccurrence::PutMatrix ( SAFEARRAY * * Matrix, VARIANT_BOOL Replace );
__declspec(implementation_key(567)) OccurrencePtr SubOccurrence::GetThisAsOccurrence ( );
__declspec(implementation_key(568)) VARIANT_BOOL SubOccurrence::GetHasBodyOverride ( );
__declspec(implementation_key(569)) IDispatchPtr SubOccurrence::GetBody ( );
__declspec(implementation_key(570)) HRESULT SubOccurrence::GetSimplifiedBodies ( long * NumBodies, SAFEARRAY * * SimplifiedBodies );
__declspec(implementation_key(571)) VARIANT_BOOL SubOccurrence::GetIsPatterned ( );
__declspec(implementation_key(572)) VARIANT_BOOL SubOccurrence::GetIsPatternItem ( );
__declspec(implementation_key(573)) HRESULT SubOccurrence::GetBodyInversionMatrix ( SAFEARRAY * * InvMatrix );
__declspec(implementation_key(574)) AdjustablePartPtr SubOccurrence::MakeAdjustablePart ( );
__declspec(implementation_key(575)) AdjustablePartPtr SubOccurrence::GetAdjustablePart ( );
__declspec(implementation_key(576)) VARIANT_BOOL SubOccurrence::GetIsAdjustablePart ( );
__declspec(implementation_key(577)) SubassemblyBodiesPtr SubOccurrence::GetSubassemblyBodies ( );
__declspec(implementation_key(578)) HRESULT SubOccurrence::GetExplodeMatrix ( SAFEARRAY * * Matrix );
__declspec(implementation_key(579)) HRESULT SubOccurrence::RemoveOverrideBody ( );
__declspec(implementation_key(580)) HRESULT SubOccurrence::GetRangeBox ( SAFEARRAY * * MinRangePoint, SAFEARRAY * * MaxRangePoint );
__declspec(implementation_key(581)) HRESULT SubOccurrence::GetInterpartDrivingOccurrences ( long * NumDrivingOccurrences, SAFEARRAY * * DrivingOccurrences );
__declspec(implementation_key(582)) HRESULT SubOccurrence::GetInterpartDrivenOccurrences ( long * NumDrivenOccurrences, SAFEARRAY * * DrivenOccurrences );
__declspec(implementation_key(583)) int SubOccurrence::GetItemNumber ( );
__declspec(implementation_key(584)) void SubOccurrence::PutItemNumber ( int _arg1 );
__declspec(implementation_key(585)) VARIANT_BOOL SubOccurrence::GetReferencePlanesVisible ( );
__declspec(implementation_key(586)) void SubOccurrence::PutReferencePlanesVisible ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(587)) VARIANT_BOOL SubOccurrence::GetCoordinateSystemsVisible ( );
__declspec(implementation_key(588)) void SubOccurrence::PutCoordinateSystemsVisible ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(589)) VARIANT_BOOL SubOccurrence::GetSketchesVisible ( );
__declspec(implementation_key(590)) void SubOccurrence::PutSketchesVisible ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(591)) HRESULT SubOccurrence::CreateTopologyReferenceToBodyOverride ( SAFEARRAY * * ReferenceKey, struct TopologyReference * * TopologyReference );
__declspec(implementation_key(592)) HRESULT SubOccurrence::Range ( double * x_min, double * y_min, double * z_min, double * x_max, double * y_max, double * z_max );
__declspec(implementation_key(593)) VARIANT_BOOL SubOccurrence::GetDisplayCenterline ( );
__declspec(implementation_key(594)) void SubOccurrence::PutDisplayCenterline ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(595)) TGFramework::ReferencePtr SubOccurrence::GetReference ( );
__declspec(implementation_key(596)) enum TGFramework::ObjectType SubOccurrence::GetNodeType ( );
__declspec(implementation_key(597)) VARIANT_BOOL SubOccurrence::FileMissing ( );
__declspec(implementation_key(598)) VARIANT_BOOL SubOccurrence::RecheckMissingFile ( );
__declspec(implementation_key(599)) VARIANT_BOOL SubOccurrence::GetDisplayLiveSections ( );
__declspec(implementation_key(600)) void SubOccurrence::PutDisplayLiveSections ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(601)) VARIANT_BOOL SubOccurrence::GetDisplayDimensions ( );
__declspec(implementation_key(602)) void SubOccurrence::PutDisplayDimensions ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(603)) VARIANT_BOOL SubOccurrence::GetDisplayAnnotations ( );
__declspec(implementation_key(604)) void SubOccurrence::PutDisplayAnnotations ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(605)) VARIANT_BOOL SubOccurrence::GetDisplayDesignBody ( );
__declspec(implementation_key(606)) void SubOccurrence::PutDisplayDesignBody ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(607)) VARIANT_BOOL SubOccurrence::GetHideInDrawing ( );
__declspec(implementation_key(608)) void SubOccurrence::PutHideInDrawing ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(609)) VARIANT_BOOL SubOccurrence::GetHideInSubassembly ( );
__declspec(implementation_key(610)) void SubOccurrence::PutHideInSubassembly ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(611)) VARIANT_BOOL SubOccurrence::GetLocatable ( );
__declspec(implementation_key(612)) void SubOccurrence::PutLocatable ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(613)) VARIANT_BOOL SubOccurrence::GetDisplayAsDraftReference ( );
__declspec(implementation_key(614)) void SubOccurrence::PutDisplayAsDraftReference ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(615)) VARIANT_BOOL SubOccurrence::GetExcludeFromPhysicalProperties ( );
__declspec(implementation_key(616)) void SubOccurrence::PutExcludeFromPhysicalProperties ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(617)) VARIANT_BOOL SubOccurrence::GetExcludeFromReports ( );
__declspec(implementation_key(618)) void SubOccurrence::PutExcludeFromReports ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(619)) VARIANT_BOOL SubOccurrence::GetExcludeFromInterference ( );
__declspec(implementation_key(620)) void SubOccurrence::PutExcludeFromInterference ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(621)) _bstr_t SubOccurrence::GetCustomPropertyValue ( _bstr_t CustomPropertyName );
__declspec(implementation_key(622)) void SubOccurrence::PutCustomPropertyValue ( _bstr_t CustomPropertyName, _bstr_t _arg2 );
__declspec(implementation_key(623)) IDispatchPtr SubOccurrence::GetFaceStyle ( );
__declspec(implementation_key(624)) void SubOccurrence::PutFaceStyle ( IDispatch * _arg1 );
__declspec(implementation_key(625)) IDispatchPtr SubOccurrence::GetFaceStyle2 ( VARIANT_BOOL vbHonourPrefs );
__declspec(implementation_key(626)) HRESULT SubOccurrence::PutStyleUsePartStyle ( );
__declspec(implementation_key(627)) HRESULT SubOccurrence::PutStyleNone ( );
__declspec(implementation_key(628)) VARIANT_BOOL SubOccurrence::GetStyleNone ( );
__declspec(implementation_key(629)) VARIANT_BOOL SubOccurrence::GetStyleUsePartStyle ( );
__declspec(implementation_key(630)) _bstr_t SubOccurrence::GetStyle ( );
__declspec(implementation_key(631)) void SubOccurrence::PutStyle ( _bstr_t _arg1 );
__declspec(implementation_key(632)) IDispatchPtr SubOccurrence::BindKeyToTopology ( VARIANT_BOOL BodyOverride, SAFEARRAY * * ReferenceKey );
__declspec(implementation_key(633)) HRESULT SubOccurrence::GetSectionedFacetData ( long PartID, enum OccurrenceSectionedFacetDataConstants * FacetDataPresence, long * FacetCount, SAFEARRAY * * Points, SAFEARRAY * * Normals, SAFEARRAY * * TextureCoords, SAFEARRAY * * StyleIDs, SAFEARRAY * * FaceIDs );
__declspec(implementation_key(634)) VARIANT_BOOL SubOccurrence::GetIsInternalComponent ( );
__declspec(implementation_key(635)) InternalComponentPtr SubOccurrence::GetInternalComponent ( );
__declspec(implementation_key(636)) SubOccurrencePtr _ISubOccurrencesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(637)) IUnknownPtr _ISubOccurrencesAuto::Get_NewEnum ( );
__declspec(implementation_key(638)) TGFramework::ApplicationPtr _ISubOccurrencesAuto::GetApplication ( );
__declspec(implementation_key(639)) long _ISubOccurrencesAuto::GetCount ( );
__declspec(implementation_key(640)) IDispatchPtr _ISubOccurrencesAuto::GetParent ( );
__declspec(implementation_key(641)) TGFramework::ApplicationPtr TopologyReference::GetApplication ( );
__declspec(implementation_key(642)) IDispatchPtr TopologyReference::GetParent ( );
__declspec(implementation_key(643)) IDispatchPtr TopologyReference::GetObject ( );
__declspec(implementation_key(644)) HRESULT TopologyReference::GetMatrix ( SAFEARRAY * * Matrix );
__declspec(implementation_key(645)) HRESULT TopologyReference::GetReferenceKey ( SAFEARRAY * * ReferenceKey, VARIANT * KeySize );
__declspec(implementation_key(646)) enum TGFramework::ObjectType TopologyReference::GetType ( );
__declspec(implementation_key(647)) HRESULT TopologyReference::GetOccurrencesInPath ( IDispatch * * TopOccurrence, long * NumSubOccurrencesInPath, long * NumBoundSubOccurrencesInPath, SAFEARRAY * * BoundSubOccurrencesInPath );
__declspec(implementation_key(648)) TGFramework::ApplicationPtr _ITopologyReferenceAuto::GetApplication ( );
__declspec(implementation_key(649)) IDispatchPtr _ITopologyReferenceAuto::GetParent ( );
__declspec(implementation_key(650)) IDispatchPtr _ITopologyReferenceAuto::GetObject ( );
__declspec(implementation_key(651)) HRESULT _ITopologyReferenceAuto::GetMatrix ( SAFEARRAY * * Matrix );
__declspec(implementation_key(652)) HRESULT _ITopologyReferenceAuto::GetReferenceKey ( SAFEARRAY * * ReferenceKey, VARIANT * KeySize );
__declspec(implementation_key(653)) enum TGFramework::ObjectType _ITopologyReferenceAuto::GetType ( );
__declspec(implementation_key(654)) HRESULT _ITopologyReferenceAuto::GetOccurrencesInPath ( IDispatch * * TopOccurrence, long * NumSubOccurrencesInPath, long * NumBoundSubOccurrencesInPath, SAFEARRAY * * BoundSubOccurrencesInPath );
__declspec(implementation_key(655)) TGFramework::ApplicationPtr AdjustablePart::GetApplication ( );
__declspec(implementation_key(656)) IDispatchPtr AdjustablePart::GetParent ( );
__declspec(implementation_key(657)) OccurrencePtr AdjustablePart::GetOccurrence ( );
__declspec(implementation_key(658)) HRESULT AdjustablePart::GetAdjustables ( long NumberOfEntries, SAFEARRAY * * PartVariables, SAFEARRAY * * AsmVariables );
__declspec(implementation_key(659)) HRESULT AdjustablePart::SetAdjustables ( long NumberOfEntries, SAFEARRAY * * PartVariables, SAFEARRAY * * AsmVariables );
__declspec(implementation_key(660)) HRESULT AdjustablePart::Delete ( );
__declspec(implementation_key(661)) VARIANT_BOOL AdjustablePart::GetAdjustToFit ( );
__declspec(implementation_key(662)) void AdjustablePart::PutAdjustToFit ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(663)) TubePtr AdjustablePart::GetTube ( );
__declspec(implementation_key(664)) IDispatchPtr AdjustablePart::GetAttributeSets ( );
__declspec(implementation_key(665)) VARIANT_BOOL AdjustablePart::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(666)) TGFramework::ApplicationPtr Tube::GetApplication ( );
__declspec(implementation_key(667)) IDispatchPtr Tube::GetParent ( );
__declspec(implementation_key(668)) HRESULT Tube::Path ( long * NumElementsInPath, VARIANT * Path, VARIANT * Reversed );
__declspec(implementation_key(669)) _bstr_t Tube::GetPartFileName ( );
__declspec(implementation_key(670)) HRESULT Tube::AddSegment ( IDispatch * TubeSegment, enum TubeSegmentAdditionStatusConstants * Status );
__declspec(implementation_key(671)) HRESULT Tube::RemoveSegment ( IDispatch * TubeSegment, enum TubeSegmentRemovalStatusConstants * Status );
__declspec(implementation_key(672)) double Tube::GetInsideArea ( );
__declspec(implementation_key(673)) double Tube::GetInsideVolume ( );
__declspec(implementation_key(674)) VARIANT_BOOL Tube::GetIsSolid ( );
__declspec(implementation_key(675)) void Tube::PutIsSolid ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(676)) double Tube::GetDefaultBendRadius ( );
__declspec(implementation_key(677)) void Tube::PutDefaultBendRadius ( double _arg1 );
__declspec(implementation_key(678)) VARIANT_BOOL Tube::GetUsesGlobalBendRadius ( );
__declspec(implementation_key(679)) void Tube::PutUsesGlobalBendRadius ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(680)) HRESULT Tube::IsBendRadiusOverridden ( IDispatch * Segment1, IDispatch * Segment2, VARIANT_BOOL * IsOverridden );
__declspec(implementation_key(681)) HRESULT Tube::GetBendRadius ( IDispatch * Segment1, IDispatch * Segment2, double * BendRadius );
__declspec(implementation_key(682)) HRESULT Tube::SetBendRadius ( IDispatch * Segment1, IDispatch * Segment2, double BendRadius );
__declspec(implementation_key(683)) VARIANT_BOOL Tube::GetUsesGlobalOuterDiameter ( );
__declspec(implementation_key(684)) void Tube::PutUsesGlobalOuterDiameter ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(685)) VARIANT_BOOL Tube::GetUsesGlobalMinimumFlatLength ( );
__declspec(implementation_key(686)) void Tube::PutUsesGlobalMinimumFlatLength ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(687)) VARIANT_BOOL Tube::GetUsesGlobalWallThickness ( );
__declspec(implementation_key(688)) void Tube::PutUsesGlobalWallThickness ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(689)) double Tube::GetMinimumFlatLength ( );
__declspec(implementation_key(690)) void Tube::PutMinimumFlatLength ( double _arg1 );
__declspec(implementation_key(691)) double Tube::GetWallThickness ( );
__declspec(implementation_key(692)) void Tube::PutWallThickness ( double _arg1 );
__declspec(implementation_key(693)) HRESULT Tube::BendTable ( VARIANT * CutLength, VARIANT * NumOfBends, VARIANT * FeedLength, VARIANT * RotationAngle, VARIANT * BendRadius, VARIANT * ReverseBendOrder, const _variant_t & SaveToFileName, VARIANT * BendAngle );
__declspec(implementation_key(694)) HRESULT Tube::GetEndTreatment ( VARIANT_BOOL StartOrEnd, VARIANT * EndTreatmentType, VARIANT * InsideDiameter, VARIANT * OutsideDiameter, VARIANT * Depth, VARIANT * Radius, VARIANT * Angle );
__declspec(implementation_key(695)) HRESULT Tube::SetEndTreatment ( VARIANT_BOOL StartOrEnd, const _variant_t & EndTreatmentType, const _variant_t & InsideDiameter, const _variant_t & OutsideDiameter, const _variant_t & Depth, const _variant_t & Radius, const _variant_t & Angle );
__declspec(implementation_key(696)) void Tube::PutOuterDiameter ( double _arg1 );
__declspec(implementation_key(697)) double Tube::GetOuterDiameter ( );
__declspec(implementation_key(698)) void Tube::PutMaterial ( struct TGFramework::FaceStyle * _arg1 );
__declspec(implementation_key(699)) TGFramework::FaceStylePtr Tube::GetMaterial ( );
__declspec(implementation_key(700)) IDispatchPtr Tube::GetAttributeSets ( );
__declspec(implementation_key(701)) VARIANT_BOOL Tube::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(702)) HRESULT Tube::GetTubePropertyNameAndValueByPid ( enum TubePropertyPidConstants TubePropertyPid, BSTR * TubePropertyName, BSTR * TubePropertyValue );
__declspec(implementation_key(703)) HRESULT Tube::UpdateTubeFileProperties ( );
__declspec(implementation_key(704)) double Tube::GetExtentStart ( );
__declspec(implementation_key(705)) void Tube::PutExtentStart ( double _arg1 );
__declspec(implementation_key(706)) double Tube::GetExtentEnd ( );
__declspec(implementation_key(707)) void Tube::PutExtentEnd ( double _arg1 );
__declspec(implementation_key(708)) HRESULT Tube::GetPathSegmentsRelations ( long * NumSegmentRelations, VARIANT * SegmentRelations );
__declspec(implementation_key(709)) HRESULT Tube::IsFrozen ( VARIANT_BOOL * bFrozen );
__declspec(implementation_key(710)) HRESULT Tube::IsLinked ( VARIANT_BOOL * bLinked );
__declspec(implementation_key(711)) HRESULT Tube::Freeze ( );
__declspec(implementation_key(712)) HRESULT Tube::Thaw ( );
__declspec(implementation_key(713)) HRESULT Tube::BreakLink ( );
__declspec(implementation_key(714)) void Tube::PutTubeMaterial ( _bstr_t _arg1 );
__declspec(implementation_key(715)) _bstr_t Tube::GetTubeMaterial ( );
__declspec(implementation_key(716)) TGFramework::ApplicationPtr _IAdjustablePartAuto::GetApplication ( );
__declspec(implementation_key(717)) IDispatchPtr _IAdjustablePartAuto::GetParent ( );
__declspec(implementation_key(718)) OccurrencePtr _IAdjustablePartAuto::GetOccurrence ( );
__declspec(implementation_key(719)) HRESULT _IAdjustablePartAuto::GetAdjustables ( long NumberOfEntries, SAFEARRAY * * PartVariables, SAFEARRAY * * AsmVariables );
__declspec(implementation_key(720)) HRESULT _IAdjustablePartAuto::SetAdjustables ( long NumberOfEntries, SAFEARRAY * * PartVariables, SAFEARRAY * * AsmVariables );
__declspec(implementation_key(721)) HRESULT _IAdjustablePartAuto::Delete ( );
__declspec(implementation_key(722)) VARIANT_BOOL _IAdjustablePartAuto::GetAdjustToFit ( );
__declspec(implementation_key(723)) void _IAdjustablePartAuto::PutAdjustToFit ( VARIANT_BOOL AdjustToFit );
__declspec(implementation_key(724)) TubePtr _IAdjustablePartAuto::GetTube ( );
__declspec(implementation_key(725)) IDispatchPtr _IAdjustablePartAuto::GetAttributeSets ( );
__declspec(implementation_key(726)) VARIANT_BOOL _IAdjustablePartAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(727)) TGFramework::ApplicationPtr _ITubeAuto::GetApplication ( );
__declspec(implementation_key(728)) IDispatchPtr _ITubeAuto::GetParent ( );
__declspec(implementation_key(729)) HRESULT _ITubeAuto::Path ( long * NumElementsInPath, VARIANT * Path, VARIANT * Reversed );
__declspec(implementation_key(730)) _bstr_t _ITubeAuto::GetPartFileName ( );
__declspec(implementation_key(731)) HRESULT _ITubeAuto::AddSegment ( IDispatch * TubeSegment, enum TubeSegmentAdditionStatusConstants * Status );
__declspec(implementation_key(732)) HRESULT _ITubeAuto::RemoveSegment ( IDispatch * TubeSegment, enum TubeSegmentRemovalStatusConstants * Status );
__declspec(implementation_key(733)) double _ITubeAuto::GetInsideArea ( );
__declspec(implementation_key(734)) double _ITubeAuto::GetInsideVolume ( );
__declspec(implementation_key(735)) VARIANT_BOOL _ITubeAuto::GetIsSolid ( );
__declspec(implementation_key(736)) void _ITubeAuto::PutIsSolid ( VARIANT_BOOL IsSolid );
__declspec(implementation_key(737)) double _ITubeAuto::GetDefaultBendRadius ( );
__declspec(implementation_key(738)) void _ITubeAuto::PutDefaultBendRadius ( double DefaultBendRadius );
__declspec(implementation_key(739)) VARIANT_BOOL _ITubeAuto::GetUsesGlobalBendRadius ( );
__declspec(implementation_key(740)) void _ITubeAuto::PutUsesGlobalBendRadius ( VARIANT_BOOL UsesDefaultBendRadius );
__declspec(implementation_key(741)) HRESULT _ITubeAuto::IsBendRadiusOverridden ( IDispatch * Segment1, IDispatch * Segment2, VARIANT_BOOL * IsOverridden );
__declspec(implementation_key(742)) HRESULT _ITubeAuto::GetBendRadius ( IDispatch * Segment1, IDispatch * Segment2, double * BendRadius );
__declspec(implementation_key(743)) HRESULT _ITubeAuto::SetBendRadius ( IDispatch * Segment1, IDispatch * Segment2, double BendRadius );
__declspec(implementation_key(744)) VARIANT_BOOL _ITubeAuto::GetUsesGlobalOuterDiameter ( );
__declspec(implementation_key(745)) void _ITubeAuto::PutUsesGlobalOuterDiameter ( VARIANT_BOOL UsesOuterDiameter );
__declspec(implementation_key(746)) VARIANT_BOOL _ITubeAuto::GetUsesGlobalMinimumFlatLength ( );
__declspec(implementation_key(747)) void _ITubeAuto::PutUsesGlobalMinimumFlatLength ( VARIANT_BOOL UsesGlobalMinimumFlatLength );
__declspec(implementation_key(748)) VARIANT_BOOL _ITubeAuto::GetUsesGlobalWallThickness ( );
__declspec(implementation_key(749)) void _ITubeAuto::PutUsesGlobalWallThickness ( VARIANT_BOOL UsesGlobalWallThickness );
__declspec(implementation_key(750)) double _ITubeAuto::GetMinimumFlatLength ( );
__declspec(implementation_key(751)) void _ITubeAuto::PutMinimumFlatLength ( double MinimumFlatLength );
__declspec(implementation_key(752)) double _ITubeAuto::GetWallThickness ( );
__declspec(implementation_key(753)) void _ITubeAuto::PutWallThickness ( double WallThickness );
__declspec(implementation_key(754)) HRESULT _ITubeAuto::BendTable ( VARIANT * CutLength, VARIANT * NumOfBends, VARIANT * FeedLength, VARIANT * RotationAngle, VARIANT * BendRadius, VARIANT * ReverseBendOrder, const _variant_t & SaveToFileName, VARIANT * BendAngle );
__declspec(implementation_key(755)) HRESULT _ITubeAuto::GetEndTreatment ( VARIANT_BOOL StartOrEnd, VARIANT * EndTreatmentType, VARIANT * InsideDiameter, VARIANT * OutsideDiameter, VARIANT * Depth, VARIANT * Radius, VARIANT * Angle );
__declspec(implementation_key(756)) HRESULT _ITubeAuto::SetEndTreatment ( VARIANT_BOOL StartOrEnd, const _variant_t & EndTreatmentType, const _variant_t & InsideDiameter, const _variant_t & OutsideDiameter, const _variant_t & Depth, const _variant_t & Radius, const _variant_t & Angle );
__declspec(implementation_key(757)) void _ITubeAuto::PutOuterDiameter ( double OuterDiameter );
__declspec(implementation_key(758)) double _ITubeAuto::GetOuterDiameter ( );
__declspec(implementation_key(759)) void _ITubeAuto::PutMaterial ( struct TGFramework::FaceStyle * Material );
__declspec(implementation_key(760)) TGFramework::FaceStylePtr _ITubeAuto::GetMaterial ( );
__declspec(implementation_key(761)) IDispatchPtr _ITubeAuto::GetAttributeSets ( );
__declspec(implementation_key(762)) VARIANT_BOOL _ITubeAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(763)) HRESULT _ITubeAuto::GetTubePropertyNameAndValueByPid ( enum TubePropertyPidConstants TubePropertyPid, BSTR * TubePropertyName, BSTR * TubePropertyValue );
__declspec(implementation_key(764)) HRESULT _ITubeAuto::UpdateTubeFileProperties ( );
__declspec(implementation_key(765)) double _ITubeAuto::GetExtentStart ( );
__declspec(implementation_key(766)) void _ITubeAuto::PutExtentStart ( double ExtentStart );
__declspec(implementation_key(767)) double _ITubeAuto::GetExtentEnd ( );
__declspec(implementation_key(768)) void _ITubeAuto::PutExtentEnd ( double ExtentEnd );
__declspec(implementation_key(769)) HRESULT _ITubeAuto::GetPathSegmentsRelations ( long * NumSegmentRelations, VARIANT * SegmentRelations );
__declspec(implementation_key(770)) HRESULT _ITubeAuto::IsFrozen ( VARIANT_BOOL * bFrozen );
__declspec(implementation_key(771)) HRESULT _ITubeAuto::IsLinked ( VARIANT_BOOL * bLinked );
__declspec(implementation_key(772)) HRESULT _ITubeAuto::Freeze ( );
__declspec(implementation_key(773)) HRESULT _ITubeAuto::Thaw ( );
__declspec(implementation_key(774)) HRESULT _ITubeAuto::BreakLink ( );
__declspec(implementation_key(775)) void _ITubeAuto::PutTubeMaterial ( _bstr_t pbstrMaterialName );
__declspec(implementation_key(776)) _bstr_t _ITubeAuto::GetTubeMaterial ( );
__declspec(implementation_key(777)) SubassemblyBodyPtr SubassemblyBodies::Item ( const _variant_t & Index );
__declspec(implementation_key(778)) TGFramework::ApplicationPtr SubassemblyBodies::GetApplication ( );
__declspec(implementation_key(779)) long SubassemblyBodies::GetCount ( );
__declspec(implementation_key(780)) IDispatchPtr SubassemblyBodies::GetParent ( );
__declspec(implementation_key(781)) IDispatchPtr SubassemblyBodies::GetAttributeSets ( );
__declspec(implementation_key(782)) VARIANT_BOOL SubassemblyBodies::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(783)) TGFramework::ApplicationPtr SubassemblyBody::GetApplication ( );
__declspec(implementation_key(784)) IDispatchPtr SubassemblyBody::GetParent ( );
__declspec(implementation_key(785)) _bstr_t SubassemblyBody::GetName ( );
__declspec(implementation_key(786)) enum TGFramework::ObjectType SubassemblyBody::GetType ( );
__declspec(implementation_key(787)) IDispatchPtr SubassemblyBody::GetAttributeSets ( );
__declspec(implementation_key(788)) VARIANT_BOOL SubassemblyBody::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(789)) AssemblyDocumentPtr SubassemblyBody::GetTopLevelDocument ( );
__declspec(implementation_key(790)) HRESULT SubassemblyBody::GetReferenceKey ( SAFEARRAY * * ReferenceKey, VARIANT * KeySize );
__declspec(implementation_key(791)) IDispatchPtr SubassemblyBody::GetBody ( );
__declspec(implementation_key(792)) HRESULT SubassemblyBody::GetMaterial ( SAFEARRAY * * DiffuseColor, SAFEARRAY * * AmbientColor, SAFEARRAY * * SpecularColor, SAFEARRAY * * EmissionColor, double * Shininess, double * Opacity );
__declspec(implementation_key(793)) VARIANT_BOOL SubassemblyBody::GetVisible ( );
__declspec(implementation_key(794)) void SubassemblyBody::PutVisible ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(795)) enum seAssemblyBodyTypeConstants SubassemblyBody::GetAssemblyBodyType ( );
__declspec(implementation_key(796)) AssemblyBodyPtr SubassemblyBody::GetThisAsAssemblyBody ( );
__declspec(implementation_key(797)) TGFramework::ReferencePtr SubassemblyBody::GetReference ( );
__declspec(implementation_key(798)) HRESULT SubassemblyBody::GetSectionedFacetData ( enum OccurrenceSectionedFacetDataConstants * FacetDataPresence, long * FacetCount, SAFEARRAY * * Points, SAFEARRAY * * Normals, SAFEARRAY * * TextureCoords, SAFEARRAY * * StyleIDs, SAFEARRAY * * FaceIDs );
__declspec(implementation_key(799)) SubassemblyBodyPtr _ISubassemblyBodiesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(800)) IUnknownPtr _ISubassemblyBodiesAuto::Get_NewEnum ( );
__declspec(implementation_key(801)) TGFramework::ApplicationPtr _ISubassemblyBodiesAuto::GetApplication ( );
__declspec(implementation_key(802)) long _ISubassemblyBodiesAuto::GetCount ( );
__declspec(implementation_key(803)) IDispatchPtr _ISubassemblyBodiesAuto::GetParent ( );
__declspec(implementation_key(804)) IDispatchPtr _ISubassemblyBodiesAuto::GetAttributeSets ( );
__declspec(implementation_key(805)) VARIANT_BOOL _ISubassemblyBodiesAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(806)) TGFramework::ApplicationPtr AssemblyBody::GetApplication ( );
__declspec(implementation_key(807)) IDispatchPtr AssemblyBody::GetParent ( );
__declspec(implementation_key(808)) _bstr_t AssemblyBody::GetName ( );
__declspec(implementation_key(809)) enum TGFramework::ObjectType AssemblyBody::GetType ( );
__declspec(implementation_key(810)) VARIANT_BOOL AssemblyBody::GetVisible ( );
__declspec(implementation_key(811)) void AssemblyBody::PutVisible ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(812)) _bstr_t AssemblyBody::GetStyle ( );
__declspec(implementation_key(813)) void AssemblyBody::PutStyle ( _bstr_t _arg1 );
__declspec(implementation_key(814)) IDispatchPtr AssemblyBody::GetFaceStyle ( );
__declspec(implementation_key(815)) void AssemblyBody::PutFaceStyle ( IDispatch * _arg1 );
__declspec(implementation_key(816)) IDispatchPtr AssemblyBody::GetAttributeSets ( );
__declspec(implementation_key(817)) VARIANT_BOOL AssemblyBody::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(818)) AssemblyDocumentPtr AssemblyBody::GetTopLevelDocument ( );
__declspec(implementation_key(819)) HRESULT AssemblyBody::GetReferenceKey ( SAFEARRAY * * ReferenceKey, VARIANT * KeySize );
__declspec(implementation_key(820)) IDispatchPtr AssemblyBody::GetFaceStyle2 ( VARIANT_BOOL vbHonourPrefs );
__declspec(implementation_key(821)) IDispatchPtr AssemblyBody::GetBody ( );
__declspec(implementation_key(822)) enum seAssemblyBodyTypeConstants AssemblyBody::GetAssemblyBodyType ( );
__declspec(implementation_key(823)) HRESULT AssemblyBody::Mirror ( IDispatch * pPlane );
__declspec(implementation_key(824)) HRESULT AssemblyBody::GetSectionedFacetData ( enum OccurrenceSectionedFacetDataConstants * FacetDataPresence, long * FacetCount, SAFEARRAY * * Points, SAFEARRAY * * Normals, SAFEARRAY * * TextureCoords, SAFEARRAY * * StyleIDs, SAFEARRAY * * FaceIDs );
__declspec(implementation_key(825)) TGFramework::ApplicationPtr _ISubassemblyBodyAuto::GetApplication ( );
__declspec(implementation_key(826)) IDispatchPtr _ISubassemblyBodyAuto::GetParent ( );
__declspec(implementation_key(827)) _bstr_t _ISubassemblyBodyAuto::GetName ( );
__declspec(implementation_key(828)) enum TGFramework::ObjectType _ISubassemblyBodyAuto::GetType ( );
__declspec(implementation_key(829)) IDispatchPtr _ISubassemblyBodyAuto::GetAttributeSets ( );
__declspec(implementation_key(830)) VARIANT_BOOL _ISubassemblyBodyAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(831)) AssemblyDocumentPtr _ISubassemblyBodyAuto::GetTopLevelDocument ( );
__declspec(implementation_key(832)) HRESULT _ISubassemblyBodyAuto::GetReferenceKey ( SAFEARRAY * * ReferenceKey, VARIANT * KeySize );
__declspec(implementation_key(833)) IDispatchPtr _ISubassemblyBodyAuto::GetBody ( );
__declspec(implementation_key(834)) HRESULT _ISubassemblyBodyAuto::GetMaterial ( SAFEARRAY * * DiffuseColor, SAFEARRAY * * AmbientColor, SAFEARRAY * * SpecularColor, SAFEARRAY * * EmissionColor, double * Shininess, double * Opacity );
__declspec(implementation_key(835)) VARIANT_BOOL _ISubassemblyBodyAuto::GetVisible ( );
__declspec(implementation_key(836)) void _ISubassemblyBodyAuto::PutVisible ( VARIANT_BOOL pbVisible );
__declspec(implementation_key(837)) enum seAssemblyBodyTypeConstants _ISubassemblyBodyAuto::GetAssemblyBodyType ( );
__declspec(implementation_key(838)) AssemblyBodyPtr _ISubassemblyBodyAuto::GetThisAsAssemblyBody ( );
__declspec(implementation_key(839)) TGFramework::ReferencePtr _ISubassemblyBodyAuto::GetReference ( );
__declspec(implementation_key(840)) HRESULT _ISubassemblyBodyAuto::GetSectionedFacetData ( enum OccurrenceSectionedFacetDataConstants * FacetDataPresence, long * FacetCount, SAFEARRAY * * Points, SAFEARRAY * * Normals, SAFEARRAY * * TextureCoords, SAFEARRAY * * StyleIDs, SAFEARRAY * * FaceIDs );
__declspec(implementation_key(841)) TGFramework::ApplicationPtr _IAssemblyBodyAuto::GetApplication ( );
__declspec(implementation_key(842)) IDispatchPtr _IAssemblyBodyAuto::GetParent ( );
__declspec(implementation_key(843)) _bstr_t _IAssemblyBodyAuto::GetName ( );
__declspec(implementation_key(844)) enum TGFramework::ObjectType _IAssemblyBodyAuto::GetType ( );
__declspec(implementation_key(845)) VARIANT_BOOL _IAssemblyBodyAuto::GetVisible ( );
__declspec(implementation_key(846)) void _IAssemblyBodyAuto::PutVisible ( VARIANT_BOOL Visible );
__declspec(implementation_key(847)) _bstr_t _IAssemblyBodyAuto::GetStyle ( );
__declspec(implementation_key(848)) void _IAssemblyBodyAuto::PutStyle ( _bstr_t Style );
__declspec(implementation_key(849)) IDispatchPtr _IAssemblyBodyAuto::GetFaceStyle ( );
__declspec(implementation_key(850)) void _IAssemblyBodyAuto::PutFaceStyle ( IDispatch * FaceStyle );
__declspec(implementation_key(851)) IDispatchPtr _IAssemblyBodyAuto::GetAttributeSets ( );
__declspec(implementation_key(852)) VARIANT_BOOL _IAssemblyBodyAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(853)) AssemblyDocumentPtr _IAssemblyBodyAuto::GetTopLevelDocument ( );
__declspec(implementation_key(854)) HRESULT _IAssemblyBodyAuto::GetReferenceKey ( SAFEARRAY * * ReferenceKey, VARIANT * KeySize );
__declspec(implementation_key(855)) IDispatchPtr _IAssemblyBodyAuto::GetFaceStyle2 ( VARIANT_BOOL vbHonourPrefs );
__declspec(implementation_key(856)) IDispatchPtr _IAssemblyBodyAuto::GetBody ( );
__declspec(implementation_key(857)) enum seAssemblyBodyTypeConstants _IAssemblyBodyAuto::GetAssemblyBodyType ( );
__declspec(implementation_key(858)) HRESULT _IAssemblyBodyAuto::Mirror ( IDispatch * pPlane );
__declspec(implementation_key(859)) HRESULT _IAssemblyBodyAuto::GetSectionedFacetData ( enum OccurrenceSectionedFacetDataConstants * FacetDataPresence, long * FacetCount, SAFEARRAY * * Points, SAFEARRAY * * Normals, SAFEARRAY * * TextureCoords, SAFEARRAY * * StyleIDs, SAFEARRAY * * FaceIDs );
__declspec(implementation_key(860)) TGFramework::ApplicationPtr InternalComponent::GetApplication ( );
__declspec(implementation_key(861)) IDispatchPtr InternalComponent::GetParent ( );
__declspec(implementation_key(862)) _bstr_t InternalComponent::GetName ( );
__declspec(implementation_key(863)) void InternalComponent::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(864)) enum InternalComponentTypeConstant InternalComponent::GetType ( );
__declspec(implementation_key(865)) HRESULT InternalComponent::Optimize ( );
__declspec(implementation_key(866)) HRESULT InternalComponent::DeleteBodies ( );
__declspec(implementation_key(867)) long InternalComponent::GetCount ( );
__declspec(implementation_key(868)) HRESULT InternalComponent::GetBodies ( long * NumberOfBodies, SAFEARRAY * * Bodies );
__declspec(implementation_key(869)) TGPart::ModelsPtr InternalComponent::GetModels ( );
__declspec(implementation_key(870)) TGPart::ConstructionsPtr InternalComponent::GetConstructions ( );
__declspec(implementation_key(871)) HRESULT InternalComponent::EditStart ( );
__declspec(implementation_key(872)) HRESULT InternalComponent::EditEnd ( );
__declspec(implementation_key(873)) HRESULT InternalComponent::MoveBody ( IDispatch * BodyProxy );
__declspec(implementation_key(874)) HRESULT InternalComponent::MakeActive ( );
__declspec(implementation_key(875)) VARIANT_BOOL InternalComponent::IsActive ( );
__declspec(implementation_key(876)) HRESULT InternalComponent::GetSheetMetalParameter ( enum TGPart::SheetMetalGlobalConstants Parameter, VARIANT * Value );
__declspec(implementation_key(877)) HRESULT InternalComponent::SetSheetMetalParameter ( enum TGPart::SheetMetalGlobalConstants Parameter, const _variant_t & Value );
__declspec(implementation_key(878)) enum TGPart::ModelingModeConstants InternalComponent::GetModelingMode ( );
__declspec(implementation_key(879)) void InternalComponent::PutModelingMode ( enum TGPart::ModelingModeConstants _arg1 );
__declspec(implementation_key(880)) TGPart::SketchsPtr InternalComponent::GetSketches ( );
__declspec(implementation_key(881)) TGPart::ProfileSetsPtr InternalComponent::GetProfileSets ( );
__declspec(implementation_key(882)) TGPart::RefPlanesPtr InternalComponent::GetPartRefPlanes ( );
__declspec(implementation_key(883)) TGPart::RefAxesPtr InternalComponent::GetRefAxes ( );
__declspec(implementation_key(884)) TGPart::BendTablePtr InternalComponent::GetBendTable ( );
__declspec(implementation_key(885)) TGPart::UsedSketchesPtr InternalComponent::GetUsedSketches ( );
__declspec(implementation_key(886)) TGPart::UserDefinedSetsPtr InternalComponent::GetUserDefinedSets ( );
__declspec(implementation_key(887)) TGPart::ConstraintsPtr InternalComponent::GetConstraints ( );
__declspec(implementation_key(888)) VARIANT_BOOL InternalComponent::GetDisableMoveToSynchronous ( );
__declspec(implementation_key(889)) void InternalComponent::PutDisableMoveToSynchronous ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(890)) HRESULT InternalComponent::Separate ( long NumberOfFeatures, SAFEARRAY * * Features );
__declspec(implementation_key(891)) HRESULT InternalComponent::Break ( long NumberOfFeatures, SAFEARRAY * * Features );
__declspec(implementation_key(892)) HRESULT InternalComponent::MoveToSynchronous ( IDispatch * pFeatureUnk, VARIANT_BOOL bIgnoreWarnings, VARIANT_BOOL bExtendSelection, long * NumberOfFeaturesCausingError, SAFEARRAY * * ErrorMessageArray, long * NumberOfFeaturesCausingWarning, SAFEARRAY * * WarningMessageArray, double * VolumeDifference );
__declspec(implementation_key(893)) HRESULT InternalComponent::TransformToSynchronousSheetmetal ( IDispatch * pRefFace, long nEdgeNum, SAFEARRAY * * EdgesArray, const _variant_t & BRType, double dBRWidth, double dBRLength, double dBendRadius, double dNeutralFactor );
__declspec(implementation_key(894)) HRESULT InternalComponent::GetCurrentMaterialName ( BSTR * bstrMaterialName );
__declspec(implementation_key(895)) HRESULT InternalComponent::GetCurrentGageName ( BSTR * bstrGageName );
__declspec(implementation_key(896)) HRESULT InternalComponent::GetOODStatusofMaterialAndGage ( VARIANT_BOOL * vbMaterialPropOOD, VARIANT_BOOL * vbGagePropOOD );
__declspec(implementation_key(897)) HRESULT InternalComponent::GetPhysicalProperties ( int * Status, double * Density, double * Accuracy, double * Volume, double * Area, double * Mass, SAFEARRAY * * CenterOfGravity, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMomentsOfInteria, SAFEARRAY * * PrincipalMomentsOfInteria, SAFEARRAY * * PrincipalAxes, SAFEARRAY * * RadiiOfGyration, double * RelativeAccuracyAchieved );
__declspec(implementation_key(898)) IDispatchPtr _IOccurrenceAuto::GetApplication ( );
__declspec(implementation_key(899)) IDispatchPtr _IOccurrenceAuto::GetParent ( );
__declspec(implementation_key(900)) HRESULT _IOccurrenceAuto::Delete ( );
__declspec(implementation_key(901)) long _IOccurrenceAuto::GetIndex ( );
__declspec(implementation_key(902)) _bstr_t _IOccurrenceAuto::GetName ( );
__declspec(implementation_key(903)) void _IOccurrenceAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(904)) _bstr_t _IOccurrenceAuto::GetPartFileName ( );
__declspec(implementation_key(905)) IDispatchPtr _IOccurrenceAuto::GetPartDocument ( );
__declspec(implementation_key(906)) VARIANT_BOOL _IOccurrenceAuto::GetReferenceOnly ( );
__declspec(implementation_key(907)) void _IOccurrenceAuto::PutReferenceOnly ( VARIANT_BOOL RefOnly );
__declspec(implementation_key(908)) VARIANT_BOOL _IOccurrenceAuto::GetSubassembly ( );
__declspec(implementation_key(909)) enum TGFramework::ObjectType _IOccurrenceAuto::GetType ( );
__declspec(implementation_key(910)) long _IOccurrenceAuto::GetQuantity ( );
__declspec(implementation_key(911)) void _IOccurrenceAuto::PutQuantity ( long Quantity );
__declspec(implementation_key(912)) VARIANT_BOOL _IOccurrenceAuto::GetVisible ( );
__declspec(implementation_key(913)) void _IOccurrenceAuto::PutVisible ( VARIANT_BOOL Visible );
__declspec(implementation_key(914)) HRESULT _IOccurrenceAuto::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(915)) VARIANT_BOOL _IOccurrenceAuto::GetLocatable ( );
__declspec(implementation_key(916)) void _IOccurrenceAuto::PutLocatable ( VARIANT_BOOL Locatable );
__declspec(implementation_key(917)) HRESULT _IOccurrenceAuto::PutTransform ( double OriginX, double OriginY, double OriginZ, double AngleX, double AngleY, double AngleZ );
__declspec(implementation_key(918)) HRESULT _IOccurrenceAuto::GetTransform ( double * OriginX, double * OriginY, double * OriginZ, double * AngleX, double * AngleY, double * AngleZ );
__declspec(implementation_key(919)) enum OccurrenceStatusConstants _IOccurrenceAuto::GetStatus ( );
__declspec(implementation_key(920)) HRESULT _IOccurrenceAuto::PutOrigin ( double OriginX, double OriginY, double OriginZ );
__declspec(implementation_key(921)) HRESULT _IOccurrenceAuto::GetOrigin ( double * OriginX, double * OriginY, double * OriginZ );
__declspec(implementation_key(922)) HRESULT _IOccurrenceAuto::Move ( double DeltaX, double DeltaY, double DeltaZ );
__declspec(implementation_key(923)) HRESULT _IOccurrenceAuto::Rotate ( double AxisX1, double AxisY1, double AxisZ1, double AxisX2, double AxisY2, double AxisZ2, double Angle );
__declspec(implementation_key(924)) IDispatchPtr _IOccurrenceAuto::GetRelations3d ( );
__declspec(implementation_key(925)) HRESULT _IOccurrenceAuto::PutMatrix ( SAFEARRAY * * Matrix, VARIANT_BOOL Replace );
__declspec(implementation_key(926)) HRESULT _IOccurrenceAuto::GetMatrix ( SAFEARRAY * * Matrix );
__declspec(implementation_key(927)) VARIANT_BOOL _IOccurrenceAuto::GetIncludeInBom ( );
__declspec(implementation_key(928)) void _IOccurrenceAuto::PutIncludeInBom ( VARIANT_BOOL IncludeInBom );
__declspec(implementation_key(929)) VARIANT_BOOL _IOccurrenceAuto::GetDisplayInDrawings ( );
__declspec(implementation_key(930)) void _IOccurrenceAuto::PutDisplayInDrawings ( VARIANT_BOOL DisplayInDrawings );
__declspec(implementation_key(931)) VARIANT_BOOL _IOccurrenceAuto::GetDisplayInSubAssembly ( );
__declspec(implementation_key(932)) void _IOccurrenceAuto::PutDisplayInSubAssembly ( VARIANT_BOOL DisplayInSubAssembly );
__declspec(implementation_key(933)) VARIANT_BOOL _IOccurrenceAuto::GetIncludeInPhysicalProperties ( );
__declspec(implementation_key(934)) void _IOccurrenceAuto::PutIncludeInPhysicalProperties ( VARIANT_BOOL IncludeInPhysicalProperties );
__declspec(implementation_key(935)) VARIANT_BOOL _IOccurrenceAuto::GetIsForeign ( );
__declspec(implementation_key(936)) HRESULT _IOccurrenceAuto::Replace ( _bstr_t NewOccurrenceFileName, VARIANT_BOOL ReplaceAll, const _variant_t & NewFamilyMemberName );
__declspec(implementation_key(937)) VARIANT_BOOL _IOccurrenceAuto::RenameFileName ( _bstr_t NewOccurrenceFileName );
__declspec(implementation_key(938)) HRESULT _IOccurrenceAuto::Mirror ( IDispatch * pPlane );
__declspec(implementation_key(939)) _bstr_t _IOccurrenceAuto::GetStyle ( );
__declspec(implementation_key(940)) void _IOccurrenceAuto::PutStyle ( _bstr_t Style );
__declspec(implementation_key(941)) IDispatchPtr _IOccurrenceAuto::GetFaceStyle ( );
__declspec(implementation_key(942)) void _IOccurrenceAuto::PutFaceStyle ( IDispatch * FaceStyle );
__declspec(implementation_key(943)) HRESULT _IOccurrenceAuto::MakeWritable ( );
__declspec(implementation_key(944)) IDispatchPtr _IOccurrenceAuto::GetAttributeSets ( );
__declspec(implementation_key(945)) VARIANT_BOOL _IOccurrenceAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(946)) _bstr_t _IOccurrenceAuto::GetOccurrenceFileName ( );
__declspec(implementation_key(947)) IDispatchPtr _IOccurrenceAuto::GetOccurrenceDocument ( );
__declspec(implementation_key(948)) void _IOccurrenceAuto::PutActivate ( VARIANT_BOOL bActivate );
__declspec(implementation_key(949)) VARIANT_BOOL _IOccurrenceAuto::GetActivate ( );
__declspec(implementation_key(950)) AssemblyDocumentPtr _IOccurrenceAuto::GetTopLevelDocument ( );
__declspec(implementation_key(951)) HRESULT _IOccurrenceAuto::GetReferenceKey ( SAFEARRAY * * ReferenceKey, VARIANT * KeySize );
__declspec(implementation_key(952)) SubOccurrencesPtr _IOccurrenceAuto::GetSubOccurrences ( );
__declspec(implementation_key(953)) HRESULT _IOccurrenceAuto::CreateTopologyReference ( SAFEARRAY * * ReferenceKey, struct TopologyReference * * TopologyReference );
__declspec(implementation_key(954)) VARIANT_BOOL _IOccurrenceAuto::IsTube ( );
__declspec(implementation_key(955)) TubePtr _IOccurrenceAuto::GetTube ( );
__declspec(implementation_key(956)) double _IOccurrenceAuto::GetNongraphicQuantity ( );
__declspec(implementation_key(957)) void _IOccurrenceAuto::PutNongraphicQuantity ( double NongraphicQuantity );
__declspec(implementation_key(958)) VARIANT_BOOL _IOccurrenceAuto::GetIsNongraphic ( );
__declspec(implementation_key(959)) VARIANT_BOOL _IOccurrenceAuto::GetHasNongraphicQuantity ( );
__declspec(implementation_key(960)) long _IOccurrenceAuto::GetNongraphicPrecision ( );
__declspec(implementation_key(961)) _bstr_t _IOccurrenceAuto::GetNongraphicDescription ( );
__declspec(implementation_key(962)) VARIANT_BOOL _IOccurrenceAuto::GetIsFamilyOfAssembly ( );
__declspec(implementation_key(963)) HRESULT _IOccurrenceAuto::SwapFamilyMember ( _bstr_t MemberName, VARIANT_BOOL SwapAllOccurrences );
__declspec(implementation_key(964)) void _IOccurrenceAuto::PutUseSimplified ( VARIANT_BOOL UseSimplified );
__declspec(implementation_key(965)) VARIANT_BOOL _IOccurrenceAuto::GetUseSimplified ( );
__declspec(implementation_key(966)) VARIANT_BOOL _IOccurrenceAuto::GetDisplayReferencePlanes ( );
__declspec(implementation_key(967)) void _IOccurrenceAuto::PutDisplayReferencePlanes ( VARIANT_BOOL DisplayReferencePlanes );
__declspec(implementation_key(968)) VARIANT_BOOL _IOccurrenceAuto::GetDisplayCoordinateSystems ( );
__declspec(implementation_key(969)) void _IOccurrenceAuto::PutDisplayCoordinateSystems ( VARIANT_BOOL DisplayCoordinateSystems );
__declspec(implementation_key(970)) VARIANT_BOOL _IOccurrenceAuto::GetDisplayConstructions ( );
__declspec(implementation_key(971)) void _IOccurrenceAuto::PutDisplayConstructions ( VARIANT_BOOL DisplayConstructions );
__declspec(implementation_key(972)) VARIANT_BOOL _IOccurrenceAuto::GetDisplayConstrCurves ( );
__declspec(implementation_key(973)) void _IOccurrenceAuto::PutDisplayConstrCurves ( VARIANT_BOOL DisplayConstrCurves );
__declspec(implementation_key(974)) VARIANT_BOOL _IOccurrenceAuto::GetDisplayReferenceAxes ( );
__declspec(implementation_key(975)) void _IOccurrenceAuto::PutDisplayReferenceAxes ( VARIANT_BOOL DisplayReferenceAxes );
__declspec(implementation_key(976)) VARIANT_BOOL _IOccurrenceAuto::GetDisplaySketches ( );
__declspec(implementation_key(977)) void _IOccurrenceAuto::PutDisplaySketches ( VARIANT_BOOL DisplaySketches );
__declspec(implementation_key(978)) VARIANT_BOOL _IOccurrenceAuto::GetDisplayAsLastSaved ( );
__declspec(implementation_key(979)) void _IOccurrenceAuto::PutDisplayAsLastSaved ( VARIANT_BOOL DisplayAsLastSaved );
__declspec(implementation_key(980)) void _IOccurrenceAuto::PutAdjustable ( VARIANT_BOOL Adjustable );
__declspec(implementation_key(981)) VARIANT_BOOL _IOccurrenceAuto::GetAdjustable ( );
__declspec(implementation_key(982)) IDispatchPtr _IOccurrenceAuto::GetFaceStyle2 ( VARIANT_BOOL vbHonourPrefs );
__declspec(implementation_key(983)) AdjustablePartPtr _IOccurrenceAuto::MakeAdjustablePart ( );
__declspec(implementation_key(984)) AdjustablePartPtr _IOccurrenceAuto::GetAdjustablePart ( );
__declspec(implementation_key(985)) VARIANT_BOOL _IOccurrenceAuto::GetIsAdjustablePart ( );
__declspec(implementation_key(986)) VARIANT_BOOL _IOccurrenceAuto::IsAlternateComponent ( );
__declspec(implementation_key(987)) HRESULT _IOccurrenceAuto::AddAlternateComponent ( _bstr_t AlternateComponentFileName );
__declspec(implementation_key(988)) HRESULT _IOccurrenceAuto::RemoveAlternateComponent ( _bstr_t AlternateComponentFileName );
__declspec(implementation_key(989)) HRESULT _IOccurrenceAuto::RemoveAllAlternateComponents ( );
__declspec(implementation_key(990)) HRESULT _IOccurrenceAuto::GetAllAlternateComponents ( long * AlternateComponentCount, SAFEARRAY * * AlternateComponentFileNames );
__declspec(implementation_key(991)) VARIANT_BOOL _IOccurrenceAuto::GetHasBodyOverride ( );
__declspec(implementation_key(992)) IDispatchPtr _IOccurrenceAuto::GetBody ( );
__declspec(implementation_key(993)) HRESULT _IOccurrenceAuto::GetSimplifiedBodies ( long * NumBodies, SAFEARRAY * * SimplifiedBodies );
__declspec(implementation_key(994)) VARIANT_BOOL _IOccurrenceAuto::GetIsPatterned ( );
__declspec(implementation_key(995)) VARIANT_BOOL _IOccurrenceAuto::GetIsPatternItem ( );
__declspec(implementation_key(996)) HRESULT _IOccurrenceAuto::CaptureRelationships ( long RelationshipCount, SAFEARRAY * * RelationshipsToCapture );
__declspec(implementation_key(997)) HRESULT _IOccurrenceAuto::ClearCapturedRelationships ( );
__declspec(implementation_key(998)) HRESULT _IOccurrenceAuto::GetBodyInversionMatrix ( SAFEARRAY * * InvMatrix );
__declspec(implementation_key(999)) VARIANT_BOOL _IOccurrenceAuto::GetIncludeInInterference ( );
__declspec(implementation_key(1000)) void _IOccurrenceAuto::PutIncludeInInterference ( VARIANT_BOOL IncludeInInterference );
__declspec(implementation_key(1001)) VARIANT_BOOL _IOccurrenceAuto::GetDisplayAsReference ( );
__declspec(implementation_key(1002)) void _IOccurrenceAuto::PutDisplayAsReference ( VARIANT_BOOL DisplayAsReference );
__declspec(implementation_key(1003)) SubassemblyBodiesPtr _IOccurrenceAuto::GetSubassemblyBodies ( );
__declspec(implementation_key(1004)) HRESULT _IOccurrenceAuto::GetExplodeMatrix ( SAFEARRAY * * Matrix );
__declspec(implementation_key(1005)) HRESULT _IOccurrenceAuto::RemoveOverrideBody ( );
__declspec(implementation_key(1006)) HRESULT _IOccurrenceAuto::GetRangeBox ( SAFEARRAY * * MinRangePoint, SAFEARRAY * * MaxRangePoint );
__declspec(implementation_key(1007)) HRESULT _IOccurrenceAuto::RetrieveHoleLocation ( );
__declspec(implementation_key(1008)) HRESULT _IOccurrenceAuto::DeleteHoleLocation ( );
__declspec(implementation_key(1009)) HRESULT _IOccurrenceAuto::GetInterpartDrivingOccurrences ( long * NumDrivingOccurrences, SAFEARRAY * * DrivingOccurrences );
__declspec(implementation_key(1010)) HRESULT _IOccurrenceAuto::GetInterpartDrivenOccurrences ( long * NumDrivenOccurrences, SAFEARRAY * * DrivenOccurrences );
__declspec(implementation_key(1011)) int _IOccurrenceAuto::GetItemNumber ( );
__declspec(implementation_key(1012)) void _IOccurrenceAuto::PutItemNumber ( int pnItemNumber );
__declspec(implementation_key(1013)) VARIANT_BOOL _IOccurrenceAuto::GetReferencePlanesVisible ( );
__declspec(implementation_key(1014)) void _IOccurrenceAuto::PutReferencePlanesVisible ( VARIANT_BOOL Visible );
__declspec(implementation_key(1015)) VARIANT_BOOL _IOccurrenceAuto::GetCoordinateSystemsVisible ( );
__declspec(implementation_key(1016)) void _IOccurrenceAuto::PutCoordinateSystemsVisible ( VARIANT_BOOL Visible );
__declspec(implementation_key(1017)) VARIANT_BOOL _IOccurrenceAuto::GetSketchesVisible ( );
__declspec(implementation_key(1018)) void _IOccurrenceAuto::PutSketchesVisible ( VARIANT_BOOL Visible );
__declspec(implementation_key(1019)) HRESULT _IOccurrenceAuto::CreateTopologyReferenceToBodyOverride ( SAFEARRAY * * ReferenceKey, struct TopologyReference * * TopologyReference );
__declspec(implementation_key(1020)) HRESULT _IOccurrenceAuto::ResetName ( );
__declspec(implementation_key(1021)) VARIANT_BOOL _IOccurrenceAuto::GetHasUserDefinedName ( );
__declspec(implementation_key(1022)) VARIANT_BOOL _IOccurrenceAuto::GetIsStructuralFrameItem ( );
__declspec(implementation_key(1023)) VARIANT_BOOL _IOccurrenceAuto::GetIsWire ( );
__declspec(implementation_key(1024)) VARIANT_BOOL _IOccurrenceAuto::GetIsPipeFitting ( );
__declspec(implementation_key(1025)) VARIANT_BOOL _IOccurrenceAuto::GetIsPipeSegment ( );
__declspec(implementation_key(1026)) VARIANT_BOOL _IOccurrenceAuto::GetIsFastenerSystemItem ( );
__declspec(implementation_key(1027)) HRESULT _IOccurrenceAuto::Range ( double * x_min, double * y_min, double * z_min, double * x_max, double * y_max, double * z_max );
__declspec(implementation_key(1028)) VARIANT_BOOL _IOccurrenceAuto::GetDisplayCenterline ( );
__declspec(implementation_key(1029)) void _IOccurrenceAuto::PutDisplayCenterline ( VARIANT_BOOL DisplayCenterline );
__declspec(implementation_key(1030)) enum TGFramework::ObjectType _IOccurrenceAuto::GetNodeType ( );
__declspec(implementation_key(1031)) VARIANT_BOOL _IOccurrenceAuto::GetIsCopy ( );
__declspec(implementation_key(1032)) VARIANT_BOOL _IOccurrenceAuto::GetIsFamilyOfParts ( );
__declspec(implementation_key(1033)) HRESULT _IOccurrenceAuto::GetSimplifiedBodies2 ( long * NumBodies, SAFEARRAY * * SimplifiedBodies, SAFEARRAY * * Transforms );
__declspec(implementation_key(1034)) VARIANT_BOOL _IOccurrenceAuto::FileMissing ( );
__declspec(implementation_key(1035)) VARIANT_BOOL _IOccurrenceAuto::RecheckMissingFile ( );
__declspec(implementation_key(1036)) VARIANT_BOOL _IOccurrenceAuto::GetDisplayLiveSections ( );
__declspec(implementation_key(1037)) void _IOccurrenceAuto::PutDisplayLiveSections ( VARIANT_BOOL Display );
__declspec(implementation_key(1038)) VARIANT_BOOL _IOccurrenceAuto::GetDisplayDimensions ( );
__declspec(implementation_key(1039)) void _IOccurrenceAuto::PutDisplayDimensions ( VARIANT_BOOL Display );
__declspec(implementation_key(1040)) VARIANT_BOOL _IOccurrenceAuto::GetDisplayAnnotations ( );
__declspec(implementation_key(1041)) void _IOccurrenceAuto::PutDisplayAnnotations ( VARIANT_BOOL Display );
__declspec(implementation_key(1042)) VARIANT_BOOL _IOccurrenceAuto::GetDisplayDesignBody ( );
__declspec(implementation_key(1043)) void _IOccurrenceAuto::PutDisplayDesignBody ( VARIANT_BOOL Display );
__declspec(implementation_key(1044)) _bstr_t _IOccurrenceAuto::GetCustomPropertyValue ( _bstr_t CustomPropertyName );
__declspec(implementation_key(1045)) void _IOccurrenceAuto::PutCustomPropertyValue ( _bstr_t CustomPropertyName, _bstr_t CustomPropertyValue );
__declspec(implementation_key(1046)) HRESULT _IOccurrenceAuto::FrameSaveAs ( _bstr_t FileName );
__declspec(implementation_key(1047)) HRESULT _IOccurrenceAuto::FrameSaveAsTranslated ( _bstr_t FileName );
__declspec(implementation_key(1048)) HRESULT _IOccurrenceAuto::PutStyleUsePartStyle ( );
__declspec(implementation_key(1049)) HRESULT _IOccurrenceAuto::PutStyleNone ( );
__declspec(implementation_key(1050)) VARIANT_BOOL _IOccurrenceAuto::GetStyleNone ( );
__declspec(implementation_key(1051)) VARIANT_BOOL _IOccurrenceAuto::GetStyleUsePartStyle ( );
__declspec(implementation_key(1052)) _bstr_t _IOccurrenceAuto::FrameSaveAsBiDM ( _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title );
__declspec(implementation_key(1053)) IDispatchPtr _IOccurrenceAuto::BindKeyToTopology ( VARIANT_BOOL BodyOverride, SAFEARRAY * * ReferenceKey );
__declspec(implementation_key(1054)) long _IOccurrenceAuto::GetOccurrenceID ( );
__declspec(implementation_key(1055)) HRESULT _IOccurrenceAuto::GetSectionedFacetData ( long PartID, enum OccurrenceSectionedFacetDataConstants * FacetDataPresence, long * FacetCount, SAFEARRAY * * Points, SAFEARRAY * * Normals, SAFEARRAY * * TextureCoords, SAFEARRAY * * StyleIDs, SAFEARRAY * * FaceIDs );
__declspec(implementation_key(1056)) HRESULT _IOccurrenceAuto::CutLength ( double * dCutLength );
__declspec(implementation_key(1057)) HRESULT _IOccurrenceAuto::MiterCut ( double * MiterCut1, double * MiterCut2 );
__declspec(implementation_key(1058)) HRESULT _IOccurrenceAuto::SideFaceEndAngle ( double * SideFaceEndAngle1, double * SideFaceEndAngle2 );
__declspec(implementation_key(1059)) HRESULT _IOccurrenceAuto::EndFaceEndAngle ( double * EndFaceEndAngle1, double * EndFaceEndAngle2 );
__declspec(implementation_key(1060)) VARIANT_BOOL _IOccurrenceAuto::GetIsInternalComponent ( );
__declspec(implementation_key(1061)) InternalComponentPtr _IOccurrenceAuto::GetInternalComponent ( );
__declspec(implementation_key(1062)) TGPart::SuppressVariablePtr _IOccurrenceAuto::GetSuppressionVariable ( );
__declspec(implementation_key(1063)) TGPart::SuppressVariablePtr _IOccurrenceAuto::AddSuppressionVariable ( );
__declspec(implementation_key(1064)) HRESULT _IOccurrenceAuto::DeleteSuppressionVariable ( );
__declspec(implementation_key(1065)) VARIANT_BOOL _IOccurrenceAuto::HasSuppressionVariable ( );
__declspec(implementation_key(1066)) TGFramework::ApplicationPtr _ISubOccurrenceAuto::GetApplication ( );
__declspec(implementation_key(1067)) IDispatchPtr _ISubOccurrenceAuto::GetParent ( );
__declspec(implementation_key(1068)) AssemblyDocumentPtr _ISubOccurrenceAuto::GetTopLevelDocument ( );
__declspec(implementation_key(1069)) IDispatchPtr _ISubOccurrenceAuto::GetSubOccurrenceDocument ( );
__declspec(implementation_key(1070)) _bstr_t _ISubOccurrenceAuto::GetSubOccurrenceFileName ( );
__declspec(implementation_key(1071)) HRESULT _ISubOccurrenceAuto::GetReferenceKey ( SAFEARRAY * * ReferenceKey, VARIANT * KeySize );
__declspec(implementation_key(1072)) SubOccurrencesPtr _ISubOccurrenceAuto::GetSubOccurrences ( );
__declspec(implementation_key(1073)) HRESULT _ISubOccurrenceAuto::GetMatrix ( SAFEARRAY * * Matrix );
__declspec(implementation_key(1074)) HRESULT _ISubOccurrenceAuto::CreateTopologyReference ( SAFEARRAY * * ReferenceKey, struct TopologyReference * * TopologyReference );
__declspec(implementation_key(1075)) VARIANT_BOOL _ISubOccurrenceAuto::GetSubassembly ( );
__declspec(implementation_key(1076)) enum TGFramework::ObjectType _ISubOccurrenceAuto::GetType ( );
__declspec(implementation_key(1077)) _bstr_t _ISubOccurrenceAuto::GetName ( );
__declspec(implementation_key(1078)) HRESULT _ISubOccurrenceAuto::GetMaterial ( SAFEARRAY * * DiffuseColor, SAFEARRAY * * AmbientColor, SAFEARRAY * * SpecularColor, SAFEARRAY * * EmissionColor, double * Shininess, double * Opacity );
__declspec(implementation_key(1079)) VARIANT_BOOL _ISubOccurrenceAuto::GetVisible ( );
__declspec(implementation_key(1080)) void _ISubOccurrenceAuto::PutVisible ( VARIANT_BOOL pbVisible );
__declspec(implementation_key(1081)) VARIANT_BOOL _ISubOccurrenceAuto::GetUseSimplified ( );
__declspec(implementation_key(1082)) void _ISubOccurrenceAuto::PutUseSimplified ( VARIANT_BOOL pbUseSimplified );
__declspec(implementation_key(1083)) VARIANT_BOOL _ISubOccurrenceAuto::GetDisplayReferencePlanes ( );
__declspec(implementation_key(1084)) void _ISubOccurrenceAuto::PutDisplayReferencePlanes ( VARIANT_BOOL pbDisplayReferencePlanes );
__declspec(implementation_key(1085)) VARIANT_BOOL _ISubOccurrenceAuto::GetDisplayCoordinateSystems ( );
__declspec(implementation_key(1086)) void _ISubOccurrenceAuto::PutDisplayCoordinateSystems ( VARIANT_BOOL pbDisplayCoordinateSystems );
__declspec(implementation_key(1087)) VARIANT_BOOL _ISubOccurrenceAuto::GetDisplayConstructions ( );
__declspec(implementation_key(1088)) void _ISubOccurrenceAuto::PutDisplayConstructions ( VARIANT_BOOL pbDisplayConstructions );
__declspec(implementation_key(1089)) VARIANT_BOOL _ISubOccurrenceAuto::GetDisplayConstrCurves ( );
__declspec(implementation_key(1090)) void _ISubOccurrenceAuto::PutDisplayConstrCurves ( VARIANT_BOOL pbDisplayConstrCurves );
__declspec(implementation_key(1091)) VARIANT_BOOL _ISubOccurrenceAuto::GetDisplayReferenceAxes ( );
__declspec(implementation_key(1092)) void _ISubOccurrenceAuto::PutDisplayReferenceAxes ( VARIANT_BOOL pbDisplayReferenceAxes );
__declspec(implementation_key(1093)) VARIANT_BOOL _ISubOccurrenceAuto::GetDisplaySketches ( );
__declspec(implementation_key(1094)) void _ISubOccurrenceAuto::PutDisplaySketches ( VARIANT_BOOL pbDisplaySketches );
__declspec(implementation_key(1095)) VARIANT_BOOL _ISubOccurrenceAuto::GetDisplayAsLastSaved ( );
__declspec(implementation_key(1096)) void _ISubOccurrenceAuto::PutDisplayAsLastSaved ( VARIANT_BOOL pbDisplayAsLastSaved );
__declspec(implementation_key(1097)) void _ISubOccurrenceAuto::PutAdjustable ( VARIANT_BOOL Adjustable );
__declspec(implementation_key(1098)) VARIANT_BOOL _ISubOccurrenceAuto::GetAdjustable ( );
__declspec(implementation_key(1099)) HRESULT _ISubOccurrenceAuto::PutMatrix ( SAFEARRAY * * Matrix, VARIANT_BOOL Replace );
__declspec(implementation_key(1100)) OccurrencePtr _ISubOccurrenceAuto::GetThisAsOccurrence ( );
__declspec(implementation_key(1101)) VARIANT_BOOL _ISubOccurrenceAuto::GetHasBodyOverride ( );
__declspec(implementation_key(1102)) IDispatchPtr _ISubOccurrenceAuto::GetBody ( );
__declspec(implementation_key(1103)) HRESULT _ISubOccurrenceAuto::GetSimplifiedBodies ( long * NumBodies, SAFEARRAY * * SimplifiedBodies );
__declspec(implementation_key(1104)) VARIANT_BOOL _ISubOccurrenceAuto::GetIsPatterned ( );
__declspec(implementation_key(1105)) VARIANT_BOOL _ISubOccurrenceAuto::GetIsPatternItem ( );
__declspec(implementation_key(1106)) HRESULT _ISubOccurrenceAuto::GetBodyInversionMatrix ( SAFEARRAY * * InvMatrix );
__declspec(implementation_key(1107)) AdjustablePartPtr _ISubOccurrenceAuto::MakeAdjustablePart ( );
__declspec(implementation_key(1108)) AdjustablePartPtr _ISubOccurrenceAuto::GetAdjustablePart ( );
__declspec(implementation_key(1109)) VARIANT_BOOL _ISubOccurrenceAuto::GetIsAdjustablePart ( );
__declspec(implementation_key(1110)) SubassemblyBodiesPtr _ISubOccurrenceAuto::GetSubassemblyBodies ( );
__declspec(implementation_key(1111)) HRESULT _ISubOccurrenceAuto::GetExplodeMatrix ( SAFEARRAY * * Matrix );
__declspec(implementation_key(1112)) HRESULT _ISubOccurrenceAuto::RemoveOverrideBody ( );
__declspec(implementation_key(1113)) HRESULT _ISubOccurrenceAuto::GetRangeBox ( SAFEARRAY * * MinRangePoint, SAFEARRAY * * MaxRangePoint );
__declspec(implementation_key(1114)) HRESULT _ISubOccurrenceAuto::GetInterpartDrivingOccurrences ( long * NumDrivingOccurrences, SAFEARRAY * * DrivingOccurrences );
__declspec(implementation_key(1115)) HRESULT _ISubOccurrenceAuto::GetInterpartDrivenOccurrences ( long * NumDrivenOccurrences, SAFEARRAY * * DrivenOccurrences );
__declspec(implementation_key(1116)) int _ISubOccurrenceAuto::GetItemNumber ( );
__declspec(implementation_key(1117)) void _ISubOccurrenceAuto::PutItemNumber ( int pnItemNumber );
__declspec(implementation_key(1118)) VARIANT_BOOL _ISubOccurrenceAuto::GetReferencePlanesVisible ( );
__declspec(implementation_key(1119)) void _ISubOccurrenceAuto::PutReferencePlanesVisible ( VARIANT_BOOL pbVisible );
__declspec(implementation_key(1120)) VARIANT_BOOL _ISubOccurrenceAuto::GetCoordinateSystemsVisible ( );
__declspec(implementation_key(1121)) void _ISubOccurrenceAuto::PutCoordinateSystemsVisible ( VARIANT_BOOL pbVisible );
__declspec(implementation_key(1122)) VARIANT_BOOL _ISubOccurrenceAuto::GetSketchesVisible ( );
__declspec(implementation_key(1123)) void _ISubOccurrenceAuto::PutSketchesVisible ( VARIANT_BOOL pbVisible );
__declspec(implementation_key(1124)) HRESULT _ISubOccurrenceAuto::CreateTopologyReferenceToBodyOverride ( SAFEARRAY * * ReferenceKey, struct TopologyReference * * TopologyReference );
__declspec(implementation_key(1125)) HRESULT _ISubOccurrenceAuto::Range ( double * x_min, double * y_min, double * z_min, double * x_max, double * y_max, double * z_max );
__declspec(implementation_key(1126)) VARIANT_BOOL _ISubOccurrenceAuto::GetDisplayCenterline ( );
__declspec(implementation_key(1127)) void _ISubOccurrenceAuto::PutDisplayCenterline ( VARIANT_BOOL bCenterline );
__declspec(implementation_key(1128)) TGFramework::ReferencePtr _ISubOccurrenceAuto::GetReference ( );
__declspec(implementation_key(1129)) enum TGFramework::ObjectType _ISubOccurrenceAuto::GetNodeType ( );
__declspec(implementation_key(1130)) VARIANT_BOOL _ISubOccurrenceAuto::FileMissing ( );
__declspec(implementation_key(1131)) VARIANT_BOOL _ISubOccurrenceAuto::RecheckMissingFile ( );
__declspec(implementation_key(1132)) VARIANT_BOOL _ISubOccurrenceAuto::GetDisplayLiveSections ( );
__declspec(implementation_key(1133)) void _ISubOccurrenceAuto::PutDisplayLiveSections ( VARIANT_BOOL Display );
__declspec(implementation_key(1134)) VARIANT_BOOL _ISubOccurrenceAuto::GetDisplayDimensions ( );
__declspec(implementation_key(1135)) void _ISubOccurrenceAuto::PutDisplayDimensions ( VARIANT_BOOL Display );
__declspec(implementation_key(1136)) VARIANT_BOOL _ISubOccurrenceAuto::GetDisplayAnnotations ( );
__declspec(implementation_key(1137)) void _ISubOccurrenceAuto::PutDisplayAnnotations ( VARIANT_BOOL Display );
__declspec(implementation_key(1138)) VARIANT_BOOL _ISubOccurrenceAuto::GetDisplayDesignBody ( );
__declspec(implementation_key(1139)) void _ISubOccurrenceAuto::PutDisplayDesignBody ( VARIANT_BOOL Display );
__declspec(implementation_key(1140)) VARIANT_BOOL _ISubOccurrenceAuto::GetHideInDrawing ( );
__declspec(implementation_key(1141)) void _ISubOccurrenceAuto::PutHideInDrawing ( VARIANT_BOOL pvbHideInDwg );
__declspec(implementation_key(1142)) VARIANT_BOOL _ISubOccurrenceAuto::GetHideInSubassembly ( );
__declspec(implementation_key(1143)) void _ISubOccurrenceAuto::PutHideInSubassembly ( VARIANT_BOOL pvbHideInSub );
__declspec(implementation_key(1144)) VARIANT_BOOL _ISubOccurrenceAuto::GetLocatable ( );
__declspec(implementation_key(1145)) void _ISubOccurrenceAuto::PutLocatable ( VARIANT_BOOL pvbLocatable );
__declspec(implementation_key(1146)) VARIANT_BOOL _ISubOccurrenceAuto::GetDisplayAsDraftReference ( );
__declspec(implementation_key(1147)) void _ISubOccurrenceAuto::PutDisplayAsDraftReference ( VARIANT_BOOL pvbDisplayAsDraftRef );
__declspec(implementation_key(1148)) VARIANT_BOOL _ISubOccurrenceAuto::GetExcludeFromPhysicalProperties ( );
__declspec(implementation_key(1149)) void _ISubOccurrenceAuto::PutExcludeFromPhysicalProperties ( VARIANT_BOOL pvbExcludeFromPhysProps );
__declspec(implementation_key(1150)) VARIANT_BOOL _ISubOccurrenceAuto::GetExcludeFromReports ( );
__declspec(implementation_key(1151)) void _ISubOccurrenceAuto::PutExcludeFromReports ( VARIANT_BOOL pvExcludeFromReports );
__declspec(implementation_key(1152)) VARIANT_BOOL _ISubOccurrenceAuto::GetExcludeFromInterference ( );
__declspec(implementation_key(1153)) void _ISubOccurrenceAuto::PutExcludeFromInterference ( VARIANT_BOOL pvbExcludeFromInterferenceAnalysis );
__declspec(implementation_key(1154)) _bstr_t _ISubOccurrenceAuto::GetCustomPropertyValue ( _bstr_t CustomPropertyName );
__declspec(implementation_key(1155)) void _ISubOccurrenceAuto::PutCustomPropertyValue ( _bstr_t CustomPropertyName, _bstr_t CustomPropertyValue );
__declspec(implementation_key(1156)) IDispatchPtr _ISubOccurrenceAuto::GetFaceStyle ( );
__declspec(implementation_key(1157)) void _ISubOccurrenceAuto::PutFaceStyle ( IDispatch * FaceStyle );
__declspec(implementation_key(1158)) IDispatchPtr _ISubOccurrenceAuto::GetFaceStyle2 ( VARIANT_BOOL vbHonourPrefs );
__declspec(implementation_key(1159)) HRESULT _ISubOccurrenceAuto::PutStyleUsePartStyle ( );
__declspec(implementation_key(1160)) HRESULT _ISubOccurrenceAuto::PutStyleNone ( );
__declspec(implementation_key(1161)) VARIANT_BOOL _ISubOccurrenceAuto::GetStyleNone ( );
__declspec(implementation_key(1162)) VARIANT_BOOL _ISubOccurrenceAuto::GetStyleUsePartStyle ( );
__declspec(implementation_key(1163)) _bstr_t _ISubOccurrenceAuto::GetStyle ( );
__declspec(implementation_key(1164)) void _ISubOccurrenceAuto::PutStyle ( _bstr_t Style );
__declspec(implementation_key(1165)) IDispatchPtr _ISubOccurrenceAuto::BindKeyToTopology ( VARIANT_BOOL BodyOverride, SAFEARRAY * * ReferenceKey );
__declspec(implementation_key(1166)) HRESULT _ISubOccurrenceAuto::GetSectionedFacetData ( long PartID, enum OccurrenceSectionedFacetDataConstants * FacetDataPresence, long * FacetCount, SAFEARRAY * * Points, SAFEARRAY * * Normals, SAFEARRAY * * TextureCoords, SAFEARRAY * * StyleIDs, SAFEARRAY * * FaceIDs );
__declspec(implementation_key(1167)) VARIANT_BOOL _ISubOccurrenceAuto::GetIsInternalComponent ( );
__declspec(implementation_key(1168)) InternalComponentPtr _ISubOccurrenceAuto::GetInternalComponent ( );
__declspec(implementation_key(1169)) TGFramework::ApplicationPtr _IInternalComponentAuto::GetApplication ( );
__declspec(implementation_key(1170)) IDispatchPtr _IInternalComponentAuto::GetParent ( );
__declspec(implementation_key(1171)) _bstr_t _IInternalComponentAuto::GetName ( );
__declspec(implementation_key(1172)) void _IInternalComponentAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(1173)) enum InternalComponentTypeConstant _IInternalComponentAuto::GetType ( );
__declspec(implementation_key(1174)) HRESULT _IInternalComponentAuto::Optimize ( );
__declspec(implementation_key(1175)) HRESULT _IInternalComponentAuto::DeleteBodies ( );
__declspec(implementation_key(1176)) long _IInternalComponentAuto::GetCount ( );
__declspec(implementation_key(1177)) HRESULT _IInternalComponentAuto::GetBodies ( long * NumberOfBodies, SAFEARRAY * * Bodies );
__declspec(implementation_key(1178)) TGPart::ModelsPtr _IInternalComponentAuto::GetModels ( );
__declspec(implementation_key(1179)) TGPart::ConstructionsPtr _IInternalComponentAuto::GetConstructions ( );
__declspec(implementation_key(1180)) HRESULT _IInternalComponentAuto::EditStart ( );
__declspec(implementation_key(1181)) HRESULT _IInternalComponentAuto::EditEnd ( );
__declspec(implementation_key(1182)) HRESULT _IInternalComponentAuto::MoveBody ( IDispatch * BodyProxy );
__declspec(implementation_key(1183)) HRESULT _IInternalComponentAuto::MakeActive ( );
__declspec(implementation_key(1184)) VARIANT_BOOL _IInternalComponentAuto::IsActive ( );
__declspec(implementation_key(1185)) HRESULT _IInternalComponentAuto::GetSheetMetalParameter ( enum TGPart::SheetMetalGlobalConstants Parameter, VARIANT * Value );
__declspec(implementation_key(1186)) HRESULT _IInternalComponentAuto::SetSheetMetalParameter ( enum TGPart::SheetMetalGlobalConstants Parameter, const _variant_t & Value );
__declspec(implementation_key(1187)) enum TGPart::ModelingModeConstants _IInternalComponentAuto::GetModelingMode ( );
__declspec(implementation_key(1188)) void _IInternalComponentAuto::PutModelingMode ( enum TGPart::ModelingModeConstants Mode );
__declspec(implementation_key(1189)) TGPart::SketchsPtr _IInternalComponentAuto::GetSketches ( );
__declspec(implementation_key(1190)) TGPart::ProfileSetsPtr _IInternalComponentAuto::GetProfileSets ( );
__declspec(implementation_key(1191)) TGPart::RefPlanesPtr _IInternalComponentAuto::GetPartRefPlanes ( );
__declspec(implementation_key(1192)) TGPart::RefAxesPtr _IInternalComponentAuto::GetRefAxes ( );
__declspec(implementation_key(1193)) TGPart::BendTablePtr _IInternalComponentAuto::GetBendTable ( );
__declspec(implementation_key(1194)) TGPart::UsedSketchesPtr _IInternalComponentAuto::GetUsedSketches ( );
__declspec(implementation_key(1195)) TGPart::UserDefinedSetsPtr _IInternalComponentAuto::GetUserDefinedSets ( );
__declspec(implementation_key(1196)) TGPart::ConstraintsPtr _IInternalComponentAuto::GetConstraints ( );
__declspec(implementation_key(1197)) VARIANT_BOOL _IInternalComponentAuto::GetDisableMoveToSynchronous ( );
__declspec(implementation_key(1198)) void _IInternalComponentAuto::PutDisableMoveToSynchronous ( VARIANT_BOOL bDisable );
__declspec(implementation_key(1199)) HRESULT _IInternalComponentAuto::Separate ( long NumberOfFeatures, SAFEARRAY * * Features );
__declspec(implementation_key(1200)) HRESULT _IInternalComponentAuto::Break ( long NumberOfFeatures, SAFEARRAY * * Features );
__declspec(implementation_key(1201)) HRESULT _IInternalComponentAuto::MoveToSynchronous ( IDispatch * pFeatureUnk, VARIANT_BOOL bIgnoreWarnings, VARIANT_BOOL bExtendSelection, long * NumberOfFeaturesCausingError, SAFEARRAY * * ErrorMessageArray, long * NumberOfFeaturesCausingWarning, SAFEARRAY * * WarningMessageArray, double * VolumeDifference );
__declspec(implementation_key(1202)) HRESULT _IInternalComponentAuto::TransformToSynchronousSheetmetal ( IDispatch * pRefFace, long nEdgeNum, SAFEARRAY * * EdgesArray, const _variant_t & BRType, double dBRWidth, double dBRLength, double dBendRadius, double dNeutralFactor );
__declspec(implementation_key(1203)) HRESULT _IInternalComponentAuto::GetCurrentMaterialName ( BSTR * bstrMaterialName );
__declspec(implementation_key(1204)) HRESULT _IInternalComponentAuto::GetCurrentGageName ( BSTR * bstrGageName );
__declspec(implementation_key(1205)) HRESULT _IInternalComponentAuto::GetOODStatusofMaterialAndGage ( VARIANT_BOOL * vbMaterialPropOOD, VARIANT_BOOL * vbGagePropOOD );
__declspec(implementation_key(1206)) HRESULT _IInternalComponentAuto::GetPhysicalProperties ( int * Status, double * Density, double * Accuracy, double * Volume, double * Area, double * Mass, SAFEARRAY * * CenterOfGravity, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMomentsOfInteria, SAFEARRAY * * PrincipalMomentsOfInteria, SAFEARRAY * * PrincipalAxes, SAFEARRAY * * RadiiOfGyration, double * RelativeAccuracyAchieved );
__declspec(implementation_key(1207)) IDispatchPtr PlanarRelation3d::GetApplication ( );
__declspec(implementation_key(1208)) IDispatchPtr PlanarRelation3d::GetParent ( );
__declspec(implementation_key(1209)) HRESULT PlanarRelation3d::Delete ( );
__declspec(implementation_key(1210)) long PlanarRelation3d::GetIndex ( );
__declspec(implementation_key(1211)) enum TGFramework::ObjectType PlanarRelation3d::GetType ( );
__declspec(implementation_key(1212)) HRESULT PlanarRelation3d::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(1213)) enum Relation3dStatusConstants PlanarRelation3d::GetStatus ( );
__declspec(implementation_key(1214)) enum Relation3dDetailedStatusConstants PlanarRelation3d::GetDetailedStatus ( );
__declspec(implementation_key(1215)) PartPtr PlanarRelation3d::GetPart1 ( );
__declspec(implementation_key(1216)) PartPtr PlanarRelation3d::GetPart2 ( );
__declspec(implementation_key(1217)) HRESULT PlanarRelation3d::GetGeometry1 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ );
__declspec(implementation_key(1218)) HRESULT PlanarRelation3d::GetGeometry2 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ );
__declspec(implementation_key(1219)) VARIANT_BOOL PlanarRelation3d::GetFixedOffset ( );
__declspec(implementation_key(1220)) void PlanarRelation3d::PutFixedOffset ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1221)) double PlanarRelation3d::GetOffset ( );
__declspec(implementation_key(1222)) void PlanarRelation3d::PutOffset ( double _arg1 );
__declspec(implementation_key(1223)) VARIANT_BOOL PlanarRelation3d::GetNormalsAligned ( );
__declspec(implementation_key(1224)) IDispatchPtr PlanarRelation3d::GetAttributeSets ( );
__declspec(implementation_key(1225)) VARIANT_BOOL PlanarRelation3d::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1226)) OccurrencePtr PlanarRelation3d::GetOccurrence1 ( );
__declspec(implementation_key(1227)) OccurrencePtr PlanarRelation3d::GetOccurrence2 ( );
__declspec(implementation_key(1228)) void PlanarRelation3d::PutNormalsAligned ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1229)) VARIANT_BOOL PlanarRelation3d::GetSuppress ( );
__declspec(implementation_key(1230)) void PlanarRelation3d::PutSuppress ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1231)) IDispatchPtr PlanarRelation3d::GetElement1 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1232)) IDispatchPtr PlanarRelation3d::GetElement2 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1233)) VARIANT_BOOL PlanarRelation3d::GetRangedOffset ( );
__declspec(implementation_key(1234)) void PlanarRelation3d::PutRangedOffset ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1235)) double PlanarRelation3d::GetRangeLow ( );
__declspec(implementation_key(1236)) void PlanarRelation3d::PutRangeLow ( double _arg1 );
__declspec(implementation_key(1237)) double PlanarRelation3d::GetRangeHigh ( );
__declspec(implementation_key(1238)) void PlanarRelation3d::PutRangeHigh ( double _arg1 );
__declspec(implementation_key(1239)) TGPart::SuppressVariablePtr PlanarRelation3d::GetSuppressionVariable ( );
__declspec(implementation_key(1240)) TGPart::SuppressVariablePtr PlanarRelation3d::AddSuppressionVariable ( );
__declspec(implementation_key(1241)) HRESULT PlanarRelation3d::DeleteSuppressionVariable ( );
__declspec(implementation_key(1242)) VARIANT_BOOL PlanarRelation3d::HasSuppressionVariable ( );
__declspec(implementation_key(1243)) IDispatchPtr _IPlanarRelation3dAuto::GetApplication ( );
__declspec(implementation_key(1244)) IDispatchPtr _IPlanarRelation3dAuto::GetParent ( );
__declspec(implementation_key(1245)) HRESULT _IPlanarRelation3dAuto::Delete ( );
__declspec(implementation_key(1246)) long _IPlanarRelation3dAuto::GetIndex ( );
__declspec(implementation_key(1247)) enum TGFramework::ObjectType _IPlanarRelation3dAuto::GetType ( );
__declspec(implementation_key(1248)) HRESULT _IPlanarRelation3dAuto::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(1249)) enum Relation3dStatusConstants _IPlanarRelation3dAuto::GetStatus ( );
__declspec(implementation_key(1250)) enum Relation3dDetailedStatusConstants _IPlanarRelation3dAuto::GetDetailedStatus ( );
__declspec(implementation_key(1251)) PartPtr _IPlanarRelation3dAuto::GetPart1 ( );
__declspec(implementation_key(1252)) PartPtr _IPlanarRelation3dAuto::GetPart2 ( );
__declspec(implementation_key(1253)) HRESULT _IPlanarRelation3dAuto::GetGeometry1 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ );
__declspec(implementation_key(1254)) HRESULT _IPlanarRelation3dAuto::GetGeometry2 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ );
__declspec(implementation_key(1255)) VARIANT_BOOL _IPlanarRelation3dAuto::GetFixedOffset ( );
__declspec(implementation_key(1256)) void _IPlanarRelation3dAuto::PutFixedOffset ( VARIANT_BOOL FixedOffset );
__declspec(implementation_key(1257)) double _IPlanarRelation3dAuto::GetOffset ( );
__declspec(implementation_key(1258)) void _IPlanarRelation3dAuto::PutOffset ( double Offset );
__declspec(implementation_key(1259)) VARIANT_BOOL _IPlanarRelation3dAuto::GetNormalsAligned ( );
__declspec(implementation_key(1260)) IDispatchPtr _IPlanarRelation3dAuto::GetAttributeSets ( );
__declspec(implementation_key(1261)) VARIANT_BOOL _IPlanarRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1262)) OccurrencePtr _IPlanarRelation3dAuto::GetOccurrence1 ( );
__declspec(implementation_key(1263)) OccurrencePtr _IPlanarRelation3dAuto::GetOccurrence2 ( );
__declspec(implementation_key(1264)) void _IPlanarRelation3dAuto::PutNormalsAligned ( VARIANT_BOOL NormalsAligned );
__declspec(implementation_key(1265)) VARIANT_BOOL _IPlanarRelation3dAuto::GetSuppress ( );
__declspec(implementation_key(1266)) void _IPlanarRelation3dAuto::PutSuppress ( VARIANT_BOOL bSuppress );
__declspec(implementation_key(1267)) IDispatchPtr _IPlanarRelation3dAuto::GetElement1 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1268)) IDispatchPtr _IPlanarRelation3dAuto::GetElement2 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1269)) VARIANT_BOOL _IPlanarRelation3dAuto::GetRangedOffset ( );
__declspec(implementation_key(1270)) void _IPlanarRelation3dAuto::PutRangedOffset ( VARIANT_BOOL RangedOffset );
__declspec(implementation_key(1271)) double _IPlanarRelation3dAuto::GetRangeLow ( );
__declspec(implementation_key(1272)) void _IPlanarRelation3dAuto::PutRangeLow ( double RangeLow );
__declspec(implementation_key(1273)) double _IPlanarRelation3dAuto::GetRangeHigh ( );
__declspec(implementation_key(1274)) void _IPlanarRelation3dAuto::PutRangeHigh ( double RangeHigh );
__declspec(implementation_key(1275)) TGPart::SuppressVariablePtr _IPlanarRelation3dAuto::GetSuppressionVariable ( );
__declspec(implementation_key(1276)) TGPart::SuppressVariablePtr _IPlanarRelation3dAuto::AddSuppressionVariable ( );
__declspec(implementation_key(1277)) HRESULT _IPlanarRelation3dAuto::DeleteSuppressionVariable ( );
__declspec(implementation_key(1278)) VARIANT_BOOL _IPlanarRelation3dAuto::HasSuppressionVariable ( );
__declspec(implementation_key(1279)) IDispatchPtr AxialRelation3d::GetApplication ( );
__declspec(implementation_key(1280)) IDispatchPtr AxialRelation3d::GetParent ( );
__declspec(implementation_key(1281)) HRESULT AxialRelation3d::Delete ( );
__declspec(implementation_key(1282)) long AxialRelation3d::GetIndex ( );
__declspec(implementation_key(1283)) enum TGFramework::ObjectType AxialRelation3d::GetType ( );
__declspec(implementation_key(1284)) HRESULT AxialRelation3d::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(1285)) enum Relation3dStatusConstants AxialRelation3d::GetStatus ( );
__declspec(implementation_key(1286)) enum Relation3dDetailedStatusConstants AxialRelation3d::GetDetailedStatus ( );
__declspec(implementation_key(1287)) PartPtr AxialRelation3d::GetPart1 ( );
__declspec(implementation_key(1288)) PartPtr AxialRelation3d::GetPart2 ( );
__declspec(implementation_key(1289)) HRESULT AxialRelation3d::GetGeometry1 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ );
__declspec(implementation_key(1290)) HRESULT AxialRelation3d::GetGeometry2 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ );
__declspec(implementation_key(1291)) VARIANT_BOOL AxialRelation3d::GetFixedRotate ( );
__declspec(implementation_key(1292)) void AxialRelation3d::PutFixedRotate ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1293)) IDispatchPtr AxialRelation3d::GetAttributeSets ( );
__declspec(implementation_key(1294)) VARIANT_BOOL AxialRelation3d::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1295)) OccurrencePtr AxialRelation3d::GetOccurrence1 ( );
__declspec(implementation_key(1296)) OccurrencePtr AxialRelation3d::GetOccurrence2 ( );
__declspec(implementation_key(1297)) VARIANT_BOOL AxialRelation3d::GetSuppress ( );
__declspec(implementation_key(1298)) void AxialRelation3d::PutSuppress ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1299)) IDispatchPtr AxialRelation3d::GetElement1 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1300)) IDispatchPtr AxialRelation3d::GetElement2 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1301)) VARIANT_BOOL AxialRelation3d::GetParallelOffset ( );
__declspec(implementation_key(1302)) void AxialRelation3d::PutParallelOffset ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1303)) VARIANT_BOOL AxialRelation3d::GetFixedParallelOffset ( );
__declspec(implementation_key(1304)) void AxialRelation3d::PutFixedParallelOffset ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1305)) double AxialRelation3d::GetOffset ( );
__declspec(implementation_key(1306)) void AxialRelation3d::PutOffset ( double _arg1 );
__declspec(implementation_key(1307)) enum Relation3dOrientationConstants AxialRelation3d::GetOrientation ( );
__declspec(implementation_key(1308)) void AxialRelation3d::PutOrientation ( enum Relation3dOrientationConstants _arg1 );
__declspec(implementation_key(1309)) HRESULT AxialRelation3d::Flip ( );
__declspec(implementation_key(1310)) VARIANT_BOOL AxialRelation3d::GetRangedOffset ( );
__declspec(implementation_key(1311)) void AxialRelation3d::PutRangedOffset ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1312)) double AxialRelation3d::GetRangeLow ( );
__declspec(implementation_key(1313)) void AxialRelation3d::PutRangeLow ( double _arg1 );
__declspec(implementation_key(1314)) double AxialRelation3d::GetRangeHigh ( );
__declspec(implementation_key(1315)) void AxialRelation3d::PutRangeHigh ( double _arg1 );
__declspec(implementation_key(1316)) TGPart::SuppressVariablePtr AxialRelation3d::GetSuppressionVariable ( );
__declspec(implementation_key(1317)) TGPart::SuppressVariablePtr AxialRelation3d::AddSuppressionVariable ( );
__declspec(implementation_key(1318)) HRESULT AxialRelation3d::DeleteSuppressionVariable ( );
__declspec(implementation_key(1319)) VARIANT_BOOL AxialRelation3d::HasSuppressionVariable ( );
__declspec(implementation_key(1320)) IDispatchPtr _IAxialRelation3dAuto::GetApplication ( );
__declspec(implementation_key(1321)) IDispatchPtr _IAxialRelation3dAuto::GetParent ( );
__declspec(implementation_key(1322)) HRESULT _IAxialRelation3dAuto::Delete ( );
__declspec(implementation_key(1323)) long _IAxialRelation3dAuto::GetIndex ( );
__declspec(implementation_key(1324)) enum TGFramework::ObjectType _IAxialRelation3dAuto::GetType ( );
__declspec(implementation_key(1325)) HRESULT _IAxialRelation3dAuto::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(1326)) enum Relation3dStatusConstants _IAxialRelation3dAuto::GetStatus ( );
__declspec(implementation_key(1327)) enum Relation3dDetailedStatusConstants _IAxialRelation3dAuto::GetDetailedStatus ( );
__declspec(implementation_key(1328)) PartPtr _IAxialRelation3dAuto::GetPart1 ( );
__declspec(implementation_key(1329)) PartPtr _IAxialRelation3dAuto::GetPart2 ( );
__declspec(implementation_key(1330)) HRESULT _IAxialRelation3dAuto::GetGeometry1 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ );
__declspec(implementation_key(1331)) HRESULT _IAxialRelation3dAuto::GetGeometry2 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ );
__declspec(implementation_key(1332)) VARIANT_BOOL _IAxialRelation3dAuto::GetFixedRotate ( );
__declspec(implementation_key(1333)) void _IAxialRelation3dAuto::PutFixedRotate ( VARIANT_BOOL FixedRotate );
__declspec(implementation_key(1334)) IDispatchPtr _IAxialRelation3dAuto::GetAttributeSets ( );
__declspec(implementation_key(1335)) VARIANT_BOOL _IAxialRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1336)) OccurrencePtr _IAxialRelation3dAuto::GetOccurrence1 ( );
__declspec(implementation_key(1337)) OccurrencePtr _IAxialRelation3dAuto::GetOccurrence2 ( );
__declspec(implementation_key(1338)) VARIANT_BOOL _IAxialRelation3dAuto::GetSuppress ( );
__declspec(implementation_key(1339)) void _IAxialRelation3dAuto::PutSuppress ( VARIANT_BOOL bSuppress );
__declspec(implementation_key(1340)) IDispatchPtr _IAxialRelation3dAuto::GetElement1 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1341)) IDispatchPtr _IAxialRelation3dAuto::GetElement2 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1342)) VARIANT_BOOL _IAxialRelation3dAuto::GetParallelOffset ( );
__declspec(implementation_key(1343)) void _IAxialRelation3dAuto::PutParallelOffset ( VARIANT_BOOL ParallelOffset );
__declspec(implementation_key(1344)) VARIANT_BOOL _IAxialRelation3dAuto::GetFixedParallelOffset ( );
__declspec(implementation_key(1345)) void _IAxialRelation3dAuto::PutFixedParallelOffset ( VARIANT_BOOL FixedParallelOffset );
__declspec(implementation_key(1346)) double _IAxialRelation3dAuto::GetOffset ( );
__declspec(implementation_key(1347)) void _IAxialRelation3dAuto::PutOffset ( double Offset );
__declspec(implementation_key(1348)) enum Relation3dOrientationConstants _IAxialRelation3dAuto::GetOrientation ( );
__declspec(implementation_key(1349)) void _IAxialRelation3dAuto::PutOrientation ( enum Relation3dOrientationConstants Orientation );
__declspec(implementation_key(1350)) HRESULT _IAxialRelation3dAuto::Flip ( );
__declspec(implementation_key(1351)) VARIANT_BOOL _IAxialRelation3dAuto::GetRangedOffset ( );
__declspec(implementation_key(1352)) void _IAxialRelation3dAuto::PutRangedOffset ( VARIANT_BOOL RangedOffset );
__declspec(implementation_key(1353)) double _IAxialRelation3dAuto::GetRangeLow ( );
__declspec(implementation_key(1354)) void _IAxialRelation3dAuto::PutRangeLow ( double RangeLow );
__declspec(implementation_key(1355)) double _IAxialRelation3dAuto::GetRangeHigh ( );
__declspec(implementation_key(1356)) void _IAxialRelation3dAuto::PutRangeHigh ( double RangeHigh );
__declspec(implementation_key(1357)) TGPart::SuppressVariablePtr _IAxialRelation3dAuto::GetSuppressionVariable ( );
__declspec(implementation_key(1358)) TGPart::SuppressVariablePtr _IAxialRelation3dAuto::AddSuppressionVariable ( );
__declspec(implementation_key(1359)) HRESULT _IAxialRelation3dAuto::DeleteSuppressionVariable ( );
__declspec(implementation_key(1360)) VARIANT_BOOL _IAxialRelation3dAuto::HasSuppressionVariable ( );
__declspec(implementation_key(1361)) IDispatchPtr PointRelation3d::GetApplication ( );
__declspec(implementation_key(1362)) IDispatchPtr PointRelation3d::GetParent ( );
__declspec(implementation_key(1363)) HRESULT PointRelation3d::Delete ( );
__declspec(implementation_key(1364)) long PointRelation3d::GetIndex ( );
__declspec(implementation_key(1365)) enum TGFramework::ObjectType PointRelation3d::GetType ( );
__declspec(implementation_key(1366)) HRESULT PointRelation3d::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(1367)) enum Relation3dStatusConstants PointRelation3d::GetStatus ( );
__declspec(implementation_key(1368)) enum Relation3dDetailedStatusConstants PointRelation3d::GetDetailedStatus ( );
__declspec(implementation_key(1369)) PartPtr PointRelation3d::GetPart1 ( );
__declspec(implementation_key(1370)) PartPtr PointRelation3d::GetPart2 ( );
__declspec(implementation_key(1371)) HRESULT PointRelation3d::GetGeometry1 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ );
__declspec(implementation_key(1372)) HRESULT PointRelation3d::GetGeometry2 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ );
__declspec(implementation_key(1373)) IDispatchPtr PointRelation3d::GetAttributeSets ( );
__declspec(implementation_key(1374)) VARIANT_BOOL PointRelation3d::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1375)) OccurrencePtr PointRelation3d::GetOccurrence1 ( );
__declspec(implementation_key(1376)) OccurrencePtr PointRelation3d::GetOccurrence2 ( );
__declspec(implementation_key(1377)) VARIANT_BOOL PointRelation3d::GetSuppress ( );
__declspec(implementation_key(1378)) void PointRelation3d::PutSuppress ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1379)) IDispatchPtr PointRelation3d::GetElement1 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1380)) IDispatchPtr PointRelation3d::GetElement2 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1381)) VARIANT_BOOL PointRelation3d::GetRangedOffset ( );
__declspec(implementation_key(1382)) void PointRelation3d::PutRangedOffset ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1383)) double PointRelation3d::GetRangeLow ( );
__declspec(implementation_key(1384)) void PointRelation3d::PutRangeLow ( double _arg1 );
__declspec(implementation_key(1385)) double PointRelation3d::GetRangeHigh ( );
__declspec(implementation_key(1386)) void PointRelation3d::PutRangeHigh ( double _arg1 );
__declspec(implementation_key(1387)) TGPart::SuppressVariablePtr PointRelation3d::GetSuppressionVariable ( );
__declspec(implementation_key(1388)) TGPart::SuppressVariablePtr PointRelation3d::AddSuppressionVariable ( );
__declspec(implementation_key(1389)) HRESULT PointRelation3d::DeleteSuppressionVariable ( );
__declspec(implementation_key(1390)) VARIANT_BOOL PointRelation3d::HasSuppressionVariable ( );
__declspec(implementation_key(1391)) IDispatchPtr _IPointRelation3dAuto::GetApplication ( );
__declspec(implementation_key(1392)) IDispatchPtr _IPointRelation3dAuto::GetParent ( );
__declspec(implementation_key(1393)) HRESULT _IPointRelation3dAuto::Delete ( );
__declspec(implementation_key(1394)) long _IPointRelation3dAuto::GetIndex ( );
__declspec(implementation_key(1395)) enum TGFramework::ObjectType _IPointRelation3dAuto::GetType ( );
__declspec(implementation_key(1396)) HRESULT _IPointRelation3dAuto::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(1397)) enum Relation3dStatusConstants _IPointRelation3dAuto::GetStatus ( );
__declspec(implementation_key(1398)) enum Relation3dDetailedStatusConstants _IPointRelation3dAuto::GetDetailedStatus ( );
__declspec(implementation_key(1399)) PartPtr _IPointRelation3dAuto::GetPart1 ( );
__declspec(implementation_key(1400)) PartPtr _IPointRelation3dAuto::GetPart2 ( );
__declspec(implementation_key(1401)) HRESULT _IPointRelation3dAuto::GetGeometry1 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ );
__declspec(implementation_key(1402)) HRESULT _IPointRelation3dAuto::GetGeometry2 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ );
__declspec(implementation_key(1403)) IDispatchPtr _IPointRelation3dAuto::GetAttributeSets ( );
__declspec(implementation_key(1404)) VARIANT_BOOL _IPointRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1405)) OccurrencePtr _IPointRelation3dAuto::GetOccurrence1 ( );
__declspec(implementation_key(1406)) OccurrencePtr _IPointRelation3dAuto::GetOccurrence2 ( );
__declspec(implementation_key(1407)) VARIANT_BOOL _IPointRelation3dAuto::GetSuppress ( );
__declspec(implementation_key(1408)) void _IPointRelation3dAuto::PutSuppress ( VARIANT_BOOL bSuppress );
__declspec(implementation_key(1409)) IDispatchPtr _IPointRelation3dAuto::GetElement1 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1410)) IDispatchPtr _IPointRelation3dAuto::GetElement2 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1411)) VARIANT_BOOL _IPointRelation3dAuto::GetRangedOffset ( );
__declspec(implementation_key(1412)) void _IPointRelation3dAuto::PutRangedOffset ( VARIANT_BOOL RangedOffset );
__declspec(implementation_key(1413)) double _IPointRelation3dAuto::GetRangeLow ( );
__declspec(implementation_key(1414)) void _IPointRelation3dAuto::PutRangeLow ( double RangeLow );
__declspec(implementation_key(1415)) double _IPointRelation3dAuto::GetRangeHigh ( );
__declspec(implementation_key(1416)) void _IPointRelation3dAuto::PutRangeHigh ( double RangeHigh );
__declspec(implementation_key(1417)) TGPart::SuppressVariablePtr _IPointRelation3dAuto::GetSuppressionVariable ( );
__declspec(implementation_key(1418)) TGPart::SuppressVariablePtr _IPointRelation3dAuto::AddSuppressionVariable ( );
__declspec(implementation_key(1419)) HRESULT _IPointRelation3dAuto::DeleteSuppressionVariable ( );
__declspec(implementation_key(1420)) VARIANT_BOOL _IPointRelation3dAuto::HasSuppressionVariable ( );
__declspec(implementation_key(1421)) IDispatchPtr AngularRelation3d::GetApplication ( );
__declspec(implementation_key(1422)) IDispatchPtr AngularRelation3d::GetParent ( );
__declspec(implementation_key(1423)) HRESULT AngularRelation3d::Delete ( );
__declspec(implementation_key(1424)) long AngularRelation3d::GetIndex ( );
__declspec(implementation_key(1425)) enum TGFramework::ObjectType AngularRelation3d::GetType ( );
__declspec(implementation_key(1426)) HRESULT AngularRelation3d::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(1427)) enum Relation3dStatusConstants AngularRelation3d::GetStatus ( );
__declspec(implementation_key(1428)) enum Relation3dDetailedStatusConstants AngularRelation3d::GetDetailedStatus ( );
__declspec(implementation_key(1429)) PartPtr AngularRelation3d::GetPart1 ( );
__declspec(implementation_key(1430)) PartPtr AngularRelation3d::GetPart2 ( );
__declspec(implementation_key(1431)) HRESULT AngularRelation3d::GetGeometry1 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ );
__declspec(implementation_key(1432)) HRESULT AngularRelation3d::GetGeometry2 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ );
__declspec(implementation_key(1433)) double AngularRelation3d::GetAngle ( );
__declspec(implementation_key(1434)) void AngularRelation3d::PutAngle ( double _arg1 );
__declspec(implementation_key(1435)) HRESULT AngularRelation3d::GetDefinition ( VARIANT_BOOL * ToPlane1PositiveSide, VARIANT_BOOL * FromPlane2PositiveSide, VARIANT_BOOL * CounterClockWise, double * VectorX, double * VectorY, double * VectorZ );
__declspec(implementation_key(1436)) IDispatchPtr AngularRelation3d::GetAttributeSets ( );
__declspec(implementation_key(1437)) VARIANT_BOOL AngularRelation3d::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1438)) OccurrencePtr AngularRelation3d::GetOccurrence1 ( );
__declspec(implementation_key(1439)) OccurrencePtr AngularRelation3d::GetOccurrence2 ( );
__declspec(implementation_key(1440)) VARIANT_BOOL AngularRelation3d::GetSuppress ( );
__declspec(implementation_key(1441)) void AngularRelation3d::PutSuppress ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1442)) IDispatchPtr AngularRelation3d::GetElement1 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1443)) IDispatchPtr AngularRelation3d::GetElement2 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1444)) VARIANT_BOOL AngularRelation3d::GetRangedAngle ( );
__declspec(implementation_key(1445)) void AngularRelation3d::PutRangedAngle ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1446)) double AngularRelation3d::GetRangeLow ( );
__declspec(implementation_key(1447)) void AngularRelation3d::PutRangeLow ( double _arg1 );
__declspec(implementation_key(1448)) double AngularRelation3d::GetRangeHigh ( );
__declspec(implementation_key(1449)) void AngularRelation3d::PutRangeHigh ( double _arg1 );
__declspec(implementation_key(1450)) TGPart::SuppressVariablePtr AngularRelation3d::GetSuppressionVariable ( );
__declspec(implementation_key(1451)) TGPart::SuppressVariablePtr AngularRelation3d::AddSuppressionVariable ( );
__declspec(implementation_key(1452)) HRESULT AngularRelation3d::DeleteSuppressionVariable ( );
__declspec(implementation_key(1453)) VARIANT_BOOL AngularRelation3d::HasSuppressionVariable ( );
__declspec(implementation_key(1454)) IDispatchPtr _IAngularRelation3dAuto::GetApplication ( );
__declspec(implementation_key(1455)) IDispatchPtr _IAngularRelation3dAuto::GetParent ( );
__declspec(implementation_key(1456)) HRESULT _IAngularRelation3dAuto::Delete ( );
__declspec(implementation_key(1457)) long _IAngularRelation3dAuto::GetIndex ( );
__declspec(implementation_key(1458)) enum TGFramework::ObjectType _IAngularRelation3dAuto::GetType ( );
__declspec(implementation_key(1459)) HRESULT _IAngularRelation3dAuto::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(1460)) enum Relation3dStatusConstants _IAngularRelation3dAuto::GetStatus ( );
__declspec(implementation_key(1461)) enum Relation3dDetailedStatusConstants _IAngularRelation3dAuto::GetDetailedStatus ( );
__declspec(implementation_key(1462)) PartPtr _IAngularRelation3dAuto::GetPart1 ( );
__declspec(implementation_key(1463)) PartPtr _IAngularRelation3dAuto::GetPart2 ( );
__declspec(implementation_key(1464)) HRESULT _IAngularRelation3dAuto::GetGeometry1 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ );
__declspec(implementation_key(1465)) HRESULT _IAngularRelation3dAuto::GetGeometry2 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ );
__declspec(implementation_key(1466)) double _IAngularRelation3dAuto::GetAngle ( );
__declspec(implementation_key(1467)) void _IAngularRelation3dAuto::PutAngle ( double Angle );
__declspec(implementation_key(1468)) HRESULT _IAngularRelation3dAuto::GetDefinition ( VARIANT_BOOL * ToPlane1PositiveSide, VARIANT_BOOL * FromPlane2PositiveSide, VARIANT_BOOL * CounterClockWise, double * VectorX, double * VectorY, double * VectorZ );
__declspec(implementation_key(1469)) IDispatchPtr _IAngularRelation3dAuto::GetAttributeSets ( );
__declspec(implementation_key(1470)) VARIANT_BOOL _IAngularRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1471)) OccurrencePtr _IAngularRelation3dAuto::GetOccurrence1 ( );
__declspec(implementation_key(1472)) OccurrencePtr _IAngularRelation3dAuto::GetOccurrence2 ( );
__declspec(implementation_key(1473)) VARIANT_BOOL _IAngularRelation3dAuto::GetSuppress ( );
__declspec(implementation_key(1474)) void _IAngularRelation3dAuto::PutSuppress ( VARIANT_BOOL bSuppress );
__declspec(implementation_key(1475)) IDispatchPtr _IAngularRelation3dAuto::GetElement1 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1476)) IDispatchPtr _IAngularRelation3dAuto::GetElement2 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1477)) VARIANT_BOOL _IAngularRelation3dAuto::GetRangedAngle ( );
__declspec(implementation_key(1478)) void _IAngularRelation3dAuto::PutRangedAngle ( VARIANT_BOOL RangedAngle );
__declspec(implementation_key(1479)) double _IAngularRelation3dAuto::GetRangeLow ( );
__declspec(implementation_key(1480)) void _IAngularRelation3dAuto::PutRangeLow ( double RangeLow );
__declspec(implementation_key(1481)) double _IAngularRelation3dAuto::GetRangeHigh ( );
__declspec(implementation_key(1482)) void _IAngularRelation3dAuto::PutRangeHigh ( double RangeHigh );
__declspec(implementation_key(1483)) TGPart::SuppressVariablePtr _IAngularRelation3dAuto::GetSuppressionVariable ( );
__declspec(implementation_key(1484)) TGPart::SuppressVariablePtr _IAngularRelation3dAuto::AddSuppressionVariable ( );
__declspec(implementation_key(1485)) HRESULT _IAngularRelation3dAuto::DeleteSuppressionVariable ( );
__declspec(implementation_key(1486)) VARIANT_BOOL _IAngularRelation3dAuto::HasSuppressionVariable ( );
__declspec(implementation_key(1487)) IDispatchPtr TangentRelation3d::GetApplication ( );
__declspec(implementation_key(1488)) IDispatchPtr TangentRelation3d::GetParent ( );
__declspec(implementation_key(1489)) HRESULT TangentRelation3d::Delete ( );
__declspec(implementation_key(1490)) long TangentRelation3d::GetIndex ( );
__declspec(implementation_key(1491)) enum TGFramework::ObjectType TangentRelation3d::GetType ( );
__declspec(implementation_key(1492)) HRESULT TangentRelation3d::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(1493)) enum Relation3dStatusConstants TangentRelation3d::GetStatus ( );
__declspec(implementation_key(1494)) enum Relation3dDetailedStatusConstants TangentRelation3d::GetDetailedStatus ( );
__declspec(implementation_key(1495)) HRESULT TangentRelation3d::GetGeometry1 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ );
__declspec(implementation_key(1496)) HRESULT TangentRelation3d::GetGeometry2 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ );
__declspec(implementation_key(1497)) OccurrencePtr TangentRelation3d::GetOccurrence1 ( );
__declspec(implementation_key(1498)) OccurrencePtr TangentRelation3d::GetOccurrence2 ( );
__declspec(implementation_key(1499)) VARIANT_BOOL TangentRelation3d::GetSuppress ( );
__declspec(implementation_key(1500)) void TangentRelation3d::PutSuppress ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1501)) double TangentRelation3d::GetOffset ( );
__declspec(implementation_key(1502)) void TangentRelation3d::PutOffset ( double _arg1 );
__declspec(implementation_key(1503)) VARIANT_BOOL TangentRelation3d::GetHalfSpacePositive ( );
__declspec(implementation_key(1504)) IDispatchPtr TangentRelation3d::GetAttributeSets ( );
__declspec(implementation_key(1505)) VARIANT_BOOL TangentRelation3d::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1506)) IDispatchPtr TangentRelation3d::GetElement1 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1507)) IDispatchPtr TangentRelation3d::GetElement2 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1508)) VARIANT_BOOL TangentRelation3d::GetRangedOffset ( );
__declspec(implementation_key(1509)) void TangentRelation3d::PutRangedOffset ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1510)) double TangentRelation3d::GetRangeLow ( );
__declspec(implementation_key(1511)) void TangentRelation3d::PutRangeLow ( double _arg1 );
__declspec(implementation_key(1512)) double TangentRelation3d::GetRangeHigh ( );
__declspec(implementation_key(1513)) void TangentRelation3d::PutRangeHigh ( double _arg1 );
__declspec(implementation_key(1514)) TGPart::SuppressVariablePtr TangentRelation3d::GetSuppressionVariable ( );
__declspec(implementation_key(1515)) TGPart::SuppressVariablePtr TangentRelation3d::AddSuppressionVariable ( );
__declspec(implementation_key(1516)) HRESULT TangentRelation3d::DeleteSuppressionVariable ( );
__declspec(implementation_key(1517)) VARIANT_BOOL TangentRelation3d::HasSuppressionVariable ( );
__declspec(implementation_key(1518)) IDispatchPtr _ITangentRelation3dAuto::GetApplication ( );
__declspec(implementation_key(1519)) IDispatchPtr _ITangentRelation3dAuto::GetParent ( );
__declspec(implementation_key(1520)) HRESULT _ITangentRelation3dAuto::Delete ( );
__declspec(implementation_key(1521)) long _ITangentRelation3dAuto::GetIndex ( );
__declspec(implementation_key(1522)) enum TGFramework::ObjectType _ITangentRelation3dAuto::GetType ( );
__declspec(implementation_key(1523)) HRESULT _ITangentRelation3dAuto::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(1524)) enum Relation3dStatusConstants _ITangentRelation3dAuto::GetStatus ( );
__declspec(implementation_key(1525)) enum Relation3dDetailedStatusConstants _ITangentRelation3dAuto::GetDetailedStatus ( );
__declspec(implementation_key(1526)) HRESULT _ITangentRelation3dAuto::GetGeometry1 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ );
__declspec(implementation_key(1527)) HRESULT _ITangentRelation3dAuto::GetGeometry2 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ );
__declspec(implementation_key(1528)) OccurrencePtr _ITangentRelation3dAuto::GetOccurrence1 ( );
__declspec(implementation_key(1529)) OccurrencePtr _ITangentRelation3dAuto::GetOccurrence2 ( );
__declspec(implementation_key(1530)) VARIANT_BOOL _ITangentRelation3dAuto::GetSuppress ( );
__declspec(implementation_key(1531)) void _ITangentRelation3dAuto::PutSuppress ( VARIANT_BOOL bSuppress );
__declspec(implementation_key(1532)) double _ITangentRelation3dAuto::GetOffset ( );
__declspec(implementation_key(1533)) void _ITangentRelation3dAuto::PutOffset ( double Offset );
__declspec(implementation_key(1534)) VARIANT_BOOL _ITangentRelation3dAuto::GetHalfSpacePositive ( );
__declspec(implementation_key(1535)) IDispatchPtr _ITangentRelation3dAuto::GetAttributeSets ( );
__declspec(implementation_key(1536)) VARIANT_BOOL _ITangentRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1537)) IDispatchPtr _ITangentRelation3dAuto::GetElement1 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1538)) IDispatchPtr _ITangentRelation3dAuto::GetElement2 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1539)) VARIANT_BOOL _ITangentRelation3dAuto::GetRangedOffset ( );
__declspec(implementation_key(1540)) void _ITangentRelation3dAuto::PutRangedOffset ( VARIANT_BOOL RangedOffset );
__declspec(implementation_key(1541)) double _ITangentRelation3dAuto::GetRangeLow ( );
__declspec(implementation_key(1542)) void _ITangentRelation3dAuto::PutRangeLow ( double RangeLow );
__declspec(implementation_key(1543)) double _ITangentRelation3dAuto::GetRangeHigh ( );
__declspec(implementation_key(1544)) void _ITangentRelation3dAuto::PutRangeHigh ( double RangeHigh );
__declspec(implementation_key(1545)) TGPart::SuppressVariablePtr _ITangentRelation3dAuto::GetSuppressionVariable ( );
__declspec(implementation_key(1546)) TGPart::SuppressVariablePtr _ITangentRelation3dAuto::AddSuppressionVariable ( );
__declspec(implementation_key(1547)) HRESULT _ITangentRelation3dAuto::DeleteSuppressionVariable ( );
__declspec(implementation_key(1548)) VARIANT_BOOL _ITangentRelation3dAuto::HasSuppressionVariable ( );
__declspec(implementation_key(1549)) IDispatchPtr GearRelation3d::GetApplication ( );
__declspec(implementation_key(1550)) IDispatchPtr GearRelation3d::GetParent ( );
__declspec(implementation_key(1551)) HRESULT GearRelation3d::Delete ( );
__declspec(implementation_key(1552)) long GearRelation3d::GetIndex ( );
__declspec(implementation_key(1553)) enum TGFramework::ObjectType GearRelation3d::GetType ( );
__declspec(implementation_key(1554)) HRESULT GearRelation3d::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(1555)) enum Relation3dStatusConstants GearRelation3d::GetStatus ( );
__declspec(implementation_key(1556)) enum Relation3dDetailedStatusConstants GearRelation3d::GetDetailedStatus ( );
__declspec(implementation_key(1557)) OccurrencePtr GearRelation3d::GetOccurrence1 ( );
__declspec(implementation_key(1558)) OccurrencePtr GearRelation3d::GetOccurrence2 ( );
__declspec(implementation_key(1559)) VARIANT_BOOL GearRelation3d::GetSuppress ( );
__declspec(implementation_key(1560)) void GearRelation3d::PutSuppress ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1561)) IDispatchPtr GearRelation3d::GetElement1 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1562)) IDispatchPtr GearRelation3d::GetElement2 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1563)) HRESULT GearRelation3d::GetGeometry1 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ );
__declspec(implementation_key(1564)) HRESULT GearRelation3d::GetGeometry2 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ );
__declspec(implementation_key(1565)) double GearRelation3d::GetRatioValue1 ( );
__declspec(implementation_key(1566)) void GearRelation3d::PutRatioValue1 ( double _arg1 );
__declspec(implementation_key(1567)) double GearRelation3d::GetRatioValue2 ( );
__declspec(implementation_key(1568)) void GearRelation3d::PutRatioValue2 ( double _arg1 );
__declspec(implementation_key(1569)) HRESULT GearRelation3d::Flip ( );
__declspec(implementation_key(1570)) IDispatchPtr GearRelation3d::GetAttributeSets ( );
__declspec(implementation_key(1571)) VARIANT_BOOL GearRelation3d::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1572)) TGPart::SuppressVariablePtr GearRelation3d::GetSuppressionVariable ( );
__declspec(implementation_key(1573)) TGPart::SuppressVariablePtr GearRelation3d::AddSuppressionVariable ( );
__declspec(implementation_key(1574)) HRESULT GearRelation3d::DeleteSuppressionVariable ( );
__declspec(implementation_key(1575)) VARIANT_BOOL GearRelation3d::HasSuppressionVariable ( );
__declspec(implementation_key(1576)) IDispatchPtr _IGearRelation3dAuto::GetApplication ( );
__declspec(implementation_key(1577)) IDispatchPtr _IGearRelation3dAuto::GetParent ( );
__declspec(implementation_key(1578)) HRESULT _IGearRelation3dAuto::Delete ( );
__declspec(implementation_key(1579)) long _IGearRelation3dAuto::GetIndex ( );
__declspec(implementation_key(1580)) enum TGFramework::ObjectType _IGearRelation3dAuto::GetType ( );
__declspec(implementation_key(1581)) HRESULT _IGearRelation3dAuto::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(1582)) enum Relation3dStatusConstants _IGearRelation3dAuto::GetStatus ( );
__declspec(implementation_key(1583)) enum Relation3dDetailedStatusConstants _IGearRelation3dAuto::GetDetailedStatus ( );
__declspec(implementation_key(1584)) OccurrencePtr _IGearRelation3dAuto::GetOccurrence1 ( );
__declspec(implementation_key(1585)) OccurrencePtr _IGearRelation3dAuto::GetOccurrence2 ( );
__declspec(implementation_key(1586)) VARIANT_BOOL _IGearRelation3dAuto::GetSuppress ( );
__declspec(implementation_key(1587)) void _IGearRelation3dAuto::PutSuppress ( VARIANT_BOOL bSuppress );
__declspec(implementation_key(1588)) IDispatchPtr _IGearRelation3dAuto::GetElement1 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1589)) IDispatchPtr _IGearRelation3dAuto::GetElement2 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1590)) HRESULT _IGearRelation3dAuto::GetGeometry1 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ );
__declspec(implementation_key(1591)) HRESULT _IGearRelation3dAuto::GetGeometry2 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ );
__declspec(implementation_key(1592)) double _IGearRelation3dAuto::GetRatioValue1 ( );
__declspec(implementation_key(1593)) void _IGearRelation3dAuto::PutRatioValue1 ( double RatioValue1 );
__declspec(implementation_key(1594)) double _IGearRelation3dAuto::GetRatioValue2 ( );
__declspec(implementation_key(1595)) void _IGearRelation3dAuto::PutRatioValue2 ( double RatioValue2 );
__declspec(implementation_key(1596)) HRESULT _IGearRelation3dAuto::Flip ( );
__declspec(implementation_key(1597)) IDispatchPtr _IGearRelation3dAuto::GetAttributeSets ( );
__declspec(implementation_key(1598)) VARIANT_BOOL _IGearRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1599)) TGPart::SuppressVariablePtr _IGearRelation3dAuto::GetSuppressionVariable ( );
__declspec(implementation_key(1600)) TGPart::SuppressVariablePtr _IGearRelation3dAuto::AddSuppressionVariable ( );
__declspec(implementation_key(1601)) HRESULT _IGearRelation3dAuto::DeleteSuppressionVariable ( );
__declspec(implementation_key(1602)) VARIANT_BOOL _IGearRelation3dAuto::HasSuppressionVariable ( );
__declspec(implementation_key(1603)) IDispatchPtr CenterPlaneRelation3d::GetApplication ( );
__declspec(implementation_key(1604)) IDispatchPtr CenterPlaneRelation3d::GetParent ( );
__declspec(implementation_key(1605)) HRESULT CenterPlaneRelation3d::Delete ( );
__declspec(implementation_key(1606)) long CenterPlaneRelation3d::GetIndex ( );
__declspec(implementation_key(1607)) enum TGFramework::ObjectType CenterPlaneRelation3d::GetType ( );
__declspec(implementation_key(1608)) HRESULT CenterPlaneRelation3d::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(1609)) enum Relation3dStatusConstants CenterPlaneRelation3d::GetStatus ( );
__declspec(implementation_key(1610)) enum Relation3dDetailedStatusConstants CenterPlaneRelation3d::GetDetailedStatus ( );
__declspec(implementation_key(1611)) VARIANT_BOOL CenterPlaneRelation3d::GetSuppress ( );
__declspec(implementation_key(1612)) void CenterPlaneRelation3d::PutSuppress ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1613)) HRESULT CenterPlaneRelation3d::Flip ( );
__declspec(implementation_key(1614)) IDispatchPtr CenterPlaneRelation3d::GetElement1 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1615)) IDispatchPtr CenterPlaneRelation3d::GetElement2 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1616)) IDispatchPtr CenterPlaneRelation3d::GetElement3 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1617)) IDispatchPtr CenterPlaneRelation3d::GetElement4 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1618)) IDispatchPtr CenterPlaneRelation3d::GetAttributeSets ( );
__declspec(implementation_key(1619)) VARIANT_BOOL CenterPlaneRelation3d::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1620)) TGPart::SuppressVariablePtr CenterPlaneRelation3d::GetSuppressionVariable ( );
__declspec(implementation_key(1621)) TGPart::SuppressVariablePtr CenterPlaneRelation3d::AddSuppressionVariable ( );
__declspec(implementation_key(1622)) HRESULT CenterPlaneRelation3d::DeleteSuppressionVariable ( );
__declspec(implementation_key(1623)) VARIANT_BOOL CenterPlaneRelation3d::HasSuppressionVariable ( );
__declspec(implementation_key(1624)) IDispatchPtr _ICenterPlaneRelation3dAuto::GetApplication ( );
__declspec(implementation_key(1625)) IDispatchPtr _ICenterPlaneRelation3dAuto::GetParent ( );
__declspec(implementation_key(1626)) HRESULT _ICenterPlaneRelation3dAuto::Delete ( );
__declspec(implementation_key(1627)) long _ICenterPlaneRelation3dAuto::GetIndex ( );
__declspec(implementation_key(1628)) enum TGFramework::ObjectType _ICenterPlaneRelation3dAuto::GetType ( );
__declspec(implementation_key(1629)) HRESULT _ICenterPlaneRelation3dAuto::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(1630)) enum Relation3dStatusConstants _ICenterPlaneRelation3dAuto::GetStatus ( );
__declspec(implementation_key(1631)) enum Relation3dDetailedStatusConstants _ICenterPlaneRelation3dAuto::GetDetailedStatus ( );
__declspec(implementation_key(1632)) VARIANT_BOOL _ICenterPlaneRelation3dAuto::GetSuppress ( );
__declspec(implementation_key(1633)) void _ICenterPlaneRelation3dAuto::PutSuppress ( VARIANT_BOOL bSuppress );
__declspec(implementation_key(1634)) HRESULT _ICenterPlaneRelation3dAuto::Flip ( );
__declspec(implementation_key(1635)) IDispatchPtr _ICenterPlaneRelation3dAuto::GetElement1 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1636)) IDispatchPtr _ICenterPlaneRelation3dAuto::GetElement2 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1637)) IDispatchPtr _ICenterPlaneRelation3dAuto::GetElement3 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1638)) IDispatchPtr _ICenterPlaneRelation3dAuto::GetElement4 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1639)) IDispatchPtr _ICenterPlaneRelation3dAuto::GetAttributeSets ( );
__declspec(implementation_key(1640)) VARIANT_BOOL _ICenterPlaneRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1641)) TGPart::SuppressVariablePtr _ICenterPlaneRelation3dAuto::GetSuppressionVariable ( );
__declspec(implementation_key(1642)) TGPart::SuppressVariablePtr _ICenterPlaneRelation3dAuto::AddSuppressionVariable ( );
__declspec(implementation_key(1643)) HRESULT _ICenterPlaneRelation3dAuto::DeleteSuppressionVariable ( );
__declspec(implementation_key(1644)) VARIANT_BOOL _ICenterPlaneRelation3dAuto::HasSuppressionVariable ( );
__declspec(implementation_key(1645)) IDispatchPtr RigidSetRelation3d::GetApplication ( );
__declspec(implementation_key(1646)) IDispatchPtr RigidSetRelation3d::GetParent ( );
__declspec(implementation_key(1647)) HRESULT RigidSetRelation3d::Delete ( );
__declspec(implementation_key(1648)) long RigidSetRelation3d::GetIndex ( );
__declspec(implementation_key(1649)) enum TGFramework::ObjectType RigidSetRelation3d::GetType ( );
__declspec(implementation_key(1650)) HRESULT RigidSetRelation3d::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(1651)) enum Relation3dStatusConstants RigidSetRelation3d::GetStatus ( );
__declspec(implementation_key(1652)) enum Relation3dDetailedStatusConstants RigidSetRelation3d::GetDetailedStatus ( );
__declspec(implementation_key(1653)) VARIANT_BOOL RigidSetRelation3d::GetSuppress ( );
__declspec(implementation_key(1654)) void RigidSetRelation3d::PutSuppress ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1655)) HRESULT RigidSetRelation3d::AddOccurrence ( IDispatch * Occurrence );
__declspec(implementation_key(1656)) HRESULT RigidSetRelation3d::RemoveOccurrence ( IDispatch * Occurrence );
__declspec(implementation_key(1657)) VARIANT_BOOL RigidSetRelation3d::GetIsMember ( IDispatch * Occurrence );
__declspec(implementation_key(1658)) long RigidSetRelation3d::GetOccurrenceCount ( );
__declspec(implementation_key(1659)) SAFEARRAY * RigidSetRelation3d::GetOccurrences ( );
__declspec(implementation_key(1660)) IDispatchPtr RigidSetRelation3d::GetAttributeSets ( );
__declspec(implementation_key(1661)) VARIANT_BOOL RigidSetRelation3d::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1662)) TGPart::SuppressVariablePtr RigidSetRelation3d::GetSuppressionVariable ( );
__declspec(implementation_key(1663)) TGPart::SuppressVariablePtr RigidSetRelation3d::AddSuppressionVariable ( );
__declspec(implementation_key(1664)) HRESULT RigidSetRelation3d::DeleteSuppressionVariable ( );
__declspec(implementation_key(1665)) VARIANT_BOOL RigidSetRelation3d::HasSuppressionVariable ( );
__declspec(implementation_key(1666)) IDispatchPtr _IRigidSetRelation3dAuto::GetApplication ( );
__declspec(implementation_key(1667)) IDispatchPtr _IRigidSetRelation3dAuto::GetParent ( );
__declspec(implementation_key(1668)) HRESULT _IRigidSetRelation3dAuto::Delete ( );
__declspec(implementation_key(1669)) long _IRigidSetRelation3dAuto::GetIndex ( );
__declspec(implementation_key(1670)) enum TGFramework::ObjectType _IRigidSetRelation3dAuto::GetType ( );
__declspec(implementation_key(1671)) HRESULT _IRigidSetRelation3dAuto::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(1672)) enum Relation3dStatusConstants _IRigidSetRelation3dAuto::GetStatus ( );
__declspec(implementation_key(1673)) enum Relation3dDetailedStatusConstants _IRigidSetRelation3dAuto::GetDetailedStatus ( );
__declspec(implementation_key(1674)) VARIANT_BOOL _IRigidSetRelation3dAuto::GetSuppress ( );
__declspec(implementation_key(1675)) void _IRigidSetRelation3dAuto::PutSuppress ( VARIANT_BOOL bSuppress );
__declspec(implementation_key(1676)) HRESULT _IRigidSetRelation3dAuto::AddOccurrence ( IDispatch * Occurrence );
__declspec(implementation_key(1677)) HRESULT _IRigidSetRelation3dAuto::RemoveOccurrence ( IDispatch * Occurrence );
__declspec(implementation_key(1678)) VARIANT_BOOL _IRigidSetRelation3dAuto::GetIsMember ( IDispatch * Occurrence );
__declspec(implementation_key(1679)) long _IRigidSetRelation3dAuto::GetOccurrenceCount ( );
__declspec(implementation_key(1680)) SAFEARRAY * _IRigidSetRelation3dAuto::GetOccurrences ( );
__declspec(implementation_key(1681)) IDispatchPtr _IRigidSetRelation3dAuto::GetAttributeSets ( );
__declspec(implementation_key(1682)) VARIANT_BOOL _IRigidSetRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1683)) TGPart::SuppressVariablePtr _IRigidSetRelation3dAuto::GetSuppressionVariable ( );
__declspec(implementation_key(1684)) TGPart::SuppressVariablePtr _IRigidSetRelation3dAuto::AddSuppressionVariable ( );
__declspec(implementation_key(1685)) HRESULT _IRigidSetRelation3dAuto::DeleteSuppressionVariable ( );
__declspec(implementation_key(1686)) VARIANT_BOOL _IRigidSetRelation3dAuto::HasSuppressionVariable ( );
__declspec(implementation_key(1687)) IDispatchPtr CamFollowerRelation3d::GetApplication ( );
__declspec(implementation_key(1688)) IDispatchPtr CamFollowerRelation3d::GetParent ( );
__declspec(implementation_key(1689)) HRESULT CamFollowerRelation3d::Delete ( );
__declspec(implementation_key(1690)) long CamFollowerRelation3d::GetIndex ( );
__declspec(implementation_key(1691)) enum TGFramework::ObjectType CamFollowerRelation3d::GetType ( );
__declspec(implementation_key(1692)) HRESULT CamFollowerRelation3d::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(1693)) enum Relation3dStatusConstants CamFollowerRelation3d::GetStatus ( );
__declspec(implementation_key(1694)) enum Relation3dDetailedStatusConstants CamFollowerRelation3d::GetDetailedStatus ( );
__declspec(implementation_key(1695)) OccurrencePtr CamFollowerRelation3d::GetOccurrence1 ( );
__declspec(implementation_key(1696)) OccurrencePtr CamFollowerRelation3d::GetOccurrence2 ( );
__declspec(implementation_key(1697)) VARIANT_BOOL CamFollowerRelation3d::GetSuppress ( );
__declspec(implementation_key(1698)) void CamFollowerRelation3d::PutSuppress ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1699)) IDispatchPtr CamFollowerRelation3d::GetAttributeSets ( );
__declspec(implementation_key(1700)) VARIANT_BOOL CamFollowerRelation3d::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1701)) TGPart::SuppressVariablePtr CamFollowerRelation3d::GetSuppressionVariable ( );
__declspec(implementation_key(1702)) TGPart::SuppressVariablePtr CamFollowerRelation3d::AddSuppressionVariable ( );
__declspec(implementation_key(1703)) HRESULT CamFollowerRelation3d::DeleteSuppressionVariable ( );
__declspec(implementation_key(1704)) VARIANT_BOOL CamFollowerRelation3d::HasSuppressionVariable ( );
__declspec(implementation_key(1705)) IDispatchPtr _ICamFollowerRelation3dAuto::GetApplication ( );
__declspec(implementation_key(1706)) IDispatchPtr _ICamFollowerRelation3dAuto::GetParent ( );
__declspec(implementation_key(1707)) HRESULT _ICamFollowerRelation3dAuto::Delete ( );
__declspec(implementation_key(1708)) long _ICamFollowerRelation3dAuto::GetIndex ( );
__declspec(implementation_key(1709)) enum TGFramework::ObjectType _ICamFollowerRelation3dAuto::GetType ( );
__declspec(implementation_key(1710)) HRESULT _ICamFollowerRelation3dAuto::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(1711)) enum Relation3dStatusConstants _ICamFollowerRelation3dAuto::GetStatus ( );
__declspec(implementation_key(1712)) enum Relation3dDetailedStatusConstants _ICamFollowerRelation3dAuto::GetDetailedStatus ( );
__declspec(implementation_key(1713)) OccurrencePtr _ICamFollowerRelation3dAuto::GetOccurrence1 ( );
__declspec(implementation_key(1714)) OccurrencePtr _ICamFollowerRelation3dAuto::GetOccurrence2 ( );
__declspec(implementation_key(1715)) VARIANT_BOOL _ICamFollowerRelation3dAuto::GetSuppress ( );
__declspec(implementation_key(1716)) void _ICamFollowerRelation3dAuto::PutSuppress ( VARIANT_BOOL bSuppress );
__declspec(implementation_key(1717)) IDispatchPtr _ICamFollowerRelation3dAuto::GetAttributeSets ( );
__declspec(implementation_key(1718)) VARIANT_BOOL _ICamFollowerRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1719)) TGPart::SuppressVariablePtr _ICamFollowerRelation3dAuto::GetSuppressionVariable ( );
__declspec(implementation_key(1720)) TGPart::SuppressVariablePtr _ICamFollowerRelation3dAuto::AddSuppressionVariable ( );
__declspec(implementation_key(1721)) HRESULT _ICamFollowerRelation3dAuto::DeleteSuppressionVariable ( );
__declspec(implementation_key(1722)) VARIANT_BOOL _ICamFollowerRelation3dAuto::HasSuppressionVariable ( );
__declspec(implementation_key(1723)) IDispatchPtr PathRelation3d::GetApplication ( );
__declspec(implementation_key(1724)) IDispatchPtr PathRelation3d::GetParent ( );
__declspec(implementation_key(1725)) HRESULT PathRelation3d::Delete ( );
__declspec(implementation_key(1726)) long PathRelation3d::GetIndex ( );
__declspec(implementation_key(1727)) enum TGFramework::ObjectType PathRelation3d::GetType ( );
__declspec(implementation_key(1728)) HRESULT PathRelation3d::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(1729)) enum Relation3dStatusConstants PathRelation3d::GetStatus ( );
__declspec(implementation_key(1730)) enum Relation3dDetailedStatusConstants PathRelation3d::GetDetailedStatus ( );
__declspec(implementation_key(1731)) OccurrencePtr PathRelation3d::GetOccurrence1 ( );
__declspec(implementation_key(1732)) OccurrencePtr PathRelation3d::GetOccurrence2 ( );
__declspec(implementation_key(1733)) VARIANT_BOOL PathRelation3d::GetSuppress ( );
__declspec(implementation_key(1734)) void PathRelation3d::PutSuppress ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1735)) IDispatchPtr PathRelation3d::GetAttributeSets ( );
__declspec(implementation_key(1736)) VARIANT_BOOL PathRelation3d::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1737)) TGPart::SuppressVariablePtr PathRelation3d::GetSuppressionVariable ( );
__declspec(implementation_key(1738)) TGPart::SuppressVariablePtr PathRelation3d::AddSuppressionVariable ( );
__declspec(implementation_key(1739)) HRESULT PathRelation3d::DeleteSuppressionVariable ( );
__declspec(implementation_key(1740)) VARIANT_BOOL PathRelation3d::HasSuppressionVariable ( );
__declspec(implementation_key(1741)) IDispatchPtr _IPathRelation3dAuto::GetApplication ( );
__declspec(implementation_key(1742)) IDispatchPtr _IPathRelation3dAuto::GetParent ( );
__declspec(implementation_key(1743)) HRESULT _IPathRelation3dAuto::Delete ( );
__declspec(implementation_key(1744)) long _IPathRelation3dAuto::GetIndex ( );
__declspec(implementation_key(1745)) enum TGFramework::ObjectType _IPathRelation3dAuto::GetType ( );
__declspec(implementation_key(1746)) HRESULT _IPathRelation3dAuto::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(1747)) enum Relation3dStatusConstants _IPathRelation3dAuto::GetStatus ( );
__declspec(implementation_key(1748)) enum Relation3dDetailedStatusConstants _IPathRelation3dAuto::GetDetailedStatus ( );
__declspec(implementation_key(1749)) OccurrencePtr _IPathRelation3dAuto::GetOccurrence1 ( );
__declspec(implementation_key(1750)) OccurrencePtr _IPathRelation3dAuto::GetOccurrence2 ( );
__declspec(implementation_key(1751)) VARIANT_BOOL _IPathRelation3dAuto::GetSuppress ( );
__declspec(implementation_key(1752)) void _IPathRelation3dAuto::PutSuppress ( VARIANT_BOOL bSuppress );
__declspec(implementation_key(1753)) IDispatchPtr _IPathRelation3dAuto::GetAttributeSets ( );
__declspec(implementation_key(1754)) VARIANT_BOOL _IPathRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1755)) TGPart::SuppressVariablePtr _IPathRelation3dAuto::GetSuppressionVariable ( );
__declspec(implementation_key(1756)) TGPart::SuppressVariablePtr _IPathRelation3dAuto::AddSuppressionVariable ( );
__declspec(implementation_key(1757)) HRESULT _IPathRelation3dAuto::DeleteSuppressionVariable ( );
__declspec(implementation_key(1758)) VARIANT_BOOL _IPathRelation3dAuto::HasSuppressionVariable ( );
__declspec(implementation_key(1759)) IDispatchPtr CoordinateSystemRelation3d::GetApplication ( );
__declspec(implementation_key(1760)) IDispatchPtr CoordinateSystemRelation3d::GetParent ( );
__declspec(implementation_key(1761)) HRESULT CoordinateSystemRelation3d::Delete ( );
__declspec(implementation_key(1762)) long CoordinateSystemRelation3d::GetIndex ( );
__declspec(implementation_key(1763)) enum TGFramework::ObjectType CoordinateSystemRelation3d::GetType ( );
__declspec(implementation_key(1764)) HRESULT CoordinateSystemRelation3d::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(1765)) enum Relation3dStatusConstants CoordinateSystemRelation3d::GetStatus ( );
__declspec(implementation_key(1766)) enum Relation3dDetailedStatusConstants CoordinateSystemRelation3d::GetDetailedStatus ( );
__declspec(implementation_key(1767)) PartPtr CoordinateSystemRelation3d::GetPart1 ( );
__declspec(implementation_key(1768)) PartPtr CoordinateSystemRelation3d::GetPart2 ( );
__declspec(implementation_key(1769)) HRESULT CoordinateSystemRelation3d::GetGeometry1 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ );
__declspec(implementation_key(1770)) HRESULT CoordinateSystemRelation3d::GetGeometry2 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ );
__declspec(implementation_key(1771)) VARIANT_BOOL CoordinateSystemRelation3d::GetSuppress ( );
__declspec(implementation_key(1772)) void CoordinateSystemRelation3d::PutSuppress ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1773)) IDispatchPtr CoordinateSystemRelation3d::GetElement1 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1774)) IDispatchPtr CoordinateSystemRelation3d::GetElement2 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1775)) IDispatchPtr CoordinateSystemRelation3d::GetAttributeSets ( );
__declspec(implementation_key(1776)) VARIANT_BOOL CoordinateSystemRelation3d::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1777)) TGPart::SuppressVariablePtr CoordinateSystemRelation3d::GetSuppressionVariable ( );
__declspec(implementation_key(1778)) TGPart::SuppressVariablePtr CoordinateSystemRelation3d::AddSuppressionVariable ( );
__declspec(implementation_key(1779)) HRESULT CoordinateSystemRelation3d::DeleteSuppressionVariable ( );
__declspec(implementation_key(1780)) VARIANT_BOOL CoordinateSystemRelation3d::HasSuppressionVariable ( );
__declspec(implementation_key(1781)) IDispatchPtr _ICoordinateSystemRelation3dAuto::GetApplication ( );
__declspec(implementation_key(1782)) IDispatchPtr _ICoordinateSystemRelation3dAuto::GetParent ( );
__declspec(implementation_key(1783)) HRESULT _ICoordinateSystemRelation3dAuto::Delete ( );
__declspec(implementation_key(1784)) long _ICoordinateSystemRelation3dAuto::GetIndex ( );
__declspec(implementation_key(1785)) enum TGFramework::ObjectType _ICoordinateSystemRelation3dAuto::GetType ( );
__declspec(implementation_key(1786)) HRESULT _ICoordinateSystemRelation3dAuto::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(1787)) enum Relation3dStatusConstants _ICoordinateSystemRelation3dAuto::GetStatus ( );
__declspec(implementation_key(1788)) enum Relation3dDetailedStatusConstants _ICoordinateSystemRelation3dAuto::GetDetailedStatus ( );
__declspec(implementation_key(1789)) PartPtr _ICoordinateSystemRelation3dAuto::GetPart1 ( );
__declspec(implementation_key(1790)) PartPtr _ICoordinateSystemRelation3dAuto::GetPart2 ( );
__declspec(implementation_key(1791)) HRESULT _ICoordinateSystemRelation3dAuto::GetGeometry1 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ );
__declspec(implementation_key(1792)) HRESULT _ICoordinateSystemRelation3dAuto::GetGeometry2 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ );
__declspec(implementation_key(1793)) VARIANT_BOOL _ICoordinateSystemRelation3dAuto::GetSuppress ( );
__declspec(implementation_key(1794)) void _ICoordinateSystemRelation3dAuto::PutSuppress ( VARIANT_BOOL bSuppress );
__declspec(implementation_key(1795)) IDispatchPtr _ICoordinateSystemRelation3dAuto::GetElement1 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1796)) IDispatchPtr _ICoordinateSystemRelation3dAuto::GetElement2 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1797)) IDispatchPtr _ICoordinateSystemRelation3dAuto::GetAttributeSets ( );
__declspec(implementation_key(1798)) VARIANT_BOOL _ICoordinateSystemRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1799)) TGPart::SuppressVariablePtr _ICoordinateSystemRelation3dAuto::GetSuppressionVariable ( );
__declspec(implementation_key(1800)) TGPart::SuppressVariablePtr _ICoordinateSystemRelation3dAuto::AddSuppressionVariable ( );
__declspec(implementation_key(1801)) HRESULT _ICoordinateSystemRelation3dAuto::DeleteSuppressionVariable ( );
__declspec(implementation_key(1802)) VARIANT_BOOL _ICoordinateSystemRelation3dAuto::HasSuppressionVariable ( );
__declspec(implementation_key(1803)) IDispatchPtr SlotRelation3d::GetApplication ( );
__declspec(implementation_key(1804)) IDispatchPtr SlotRelation3d::GetParent ( );
__declspec(implementation_key(1805)) HRESULT SlotRelation3d::Delete ( );
__declspec(implementation_key(1806)) long SlotRelation3d::GetIndex ( );
__declspec(implementation_key(1807)) enum TGFramework::ObjectType SlotRelation3d::GetType ( );
__declspec(implementation_key(1808)) HRESULT SlotRelation3d::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(1809)) enum Relation3dStatusConstants SlotRelation3d::GetStatus ( );
__declspec(implementation_key(1810)) enum Relation3dDetailedStatusConstants SlotRelation3d::GetDetailedStatus ( );
__declspec(implementation_key(1811)) OccurrencePtr SlotRelation3d::GetOccurrence1 ( );
__declspec(implementation_key(1812)) OccurrencePtr SlotRelation3d::GetOccurrence2 ( );
__declspec(implementation_key(1813)) HRESULT SlotRelation3d::GetGeometry1 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ );
__declspec(implementation_key(1814)) HRESULT SlotRelation3d::GetGeometry2 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ );
__declspec(implementation_key(1815)) VARIANT_BOOL SlotRelation3d::GetSuppress ( );
__declspec(implementation_key(1816)) void SlotRelation3d::PutSuppress ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1817)) IDispatchPtr SlotRelation3d::GetElement1 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1818)) IDispatchPtr SlotRelation3d::GetElement2 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1819)) double SlotRelation3d::GetOffsetValue ( );
__declspec(implementation_key(1820)) void SlotRelation3d::PutOffsetValue ( double _arg1 );
__declspec(implementation_key(1821)) enum Relation3dSlotOffsetTypeConstants SlotRelation3d::GetOffsetType ( );
__declspec(implementation_key(1822)) void SlotRelation3d::PutOffsetType ( enum Relation3dSlotOffsetTypeConstants _arg1 );
__declspec(implementation_key(1823)) double SlotRelation3d::GetSlotPathLength ( );
__declspec(implementation_key(1824)) IDispatchPtr SlotRelation3d::GetAttributeSets ( );
__declspec(implementation_key(1825)) VARIANT_BOOL SlotRelation3d::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1826)) TGPart::SuppressVariablePtr SlotRelation3d::GetSuppressionVariable ( );
__declspec(implementation_key(1827)) TGPart::SuppressVariablePtr SlotRelation3d::AddSuppressionVariable ( );
__declspec(implementation_key(1828)) HRESULT SlotRelation3d::DeleteSuppressionVariable ( );
__declspec(implementation_key(1829)) VARIANT_BOOL SlotRelation3d::HasSuppressionVariable ( );
__declspec(implementation_key(1830)) IDispatchPtr _IRelations3dAuto::GetApplication ( );
__declspec(implementation_key(1831)) long _IRelations3dAuto::GetCount ( );
__declspec(implementation_key(1832)) IDispatchPtr _IRelations3dAuto::GetParent ( );
__declspec(implementation_key(1833)) IDispatchPtr _IRelations3dAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(1834)) IUnknownPtr _IRelations3dAuto::Get_NewEnum ( );
__declspec(implementation_key(1835)) IDispatchPtr _IRelations3dAuto::AddGround ( struct Occurrence * Occurrence );
__declspec(implementation_key(1836)) PlanarRelation3dPtr _IRelations3dAuto::AddPlanar ( IDispatch * Plane1, IDispatch * Plane2, VARIANT_BOOL NormalsAligned, SAFEARRAY * * ConstrainingPoint1, SAFEARRAY * * ConstrainingPoint2 );
__declspec(implementation_key(1837)) AxialRelation3dPtr _IRelations3dAuto::AddAxial ( IDispatch * Axis1, IDispatch * Axis2, VARIANT_BOOL NormalsAligned );
__declspec(implementation_key(1838)) PointRelation3dPtr _IRelations3dAuto::AddPoint ( IDispatch * PointGeometry, enum Relation3dGeometryConstants PointKeyPoint, IDispatch * ConnectGeometry, const _variant_t & ConnectKeyPoint );
__declspec(implementation_key(1839)) AngularRelation3dPtr _IRelations3dAuto::AddAngular ( IDispatch * Element1, IDispatch * Element2, VARIANT_BOOL ReverseElement1Direction, VARIANT_BOOL ReverseElement2Direction, IDispatch * MeasureElement1, IDispatch * MeasureElement2, double Angle, VARIANT_BOOL MeasureToPositiveSide, VARIANT_BOOL MeasureFromPositiveSide, VARIANT_BOOL MeasureCCW );
__declspec(implementation_key(1840)) PointRelation3dPtr _IRelations3dAuto::AddPointWithInferredGeometry ( IDispatch * PointGeometry, IDispatch * SketchPoint );
__declspec(implementation_key(1841)) AxialRelation3dPtr _IRelations3dAuto::AddAxialWithParallelOffset ( IDispatch * Axis1, IDispatch * Axis2, VARIANT_BOOL FixedOffset, double Offset );
__declspec(implementation_key(1842)) TangentRelation3dPtr _IRelations3dAuto::AddTangent ( IDispatch * Element1, IDispatch * Element2, SAFEARRAY * * ConstrainingPoint1, SAFEARRAY * * ConstrainingPoint2, double Offset, VARIANT_BOOL IsHalfSpacePositive );
__declspec(implementation_key(1843)) GearRelation3dPtr _IRelations3dAuto::AddGear ( IDispatch * Element1, IDispatch * Element2, enum Relation3dGearTypeConstants GearType, enum Relation3dGearRatioTypeConstants RatioType, double GearRatio1, double GearRatio2, VARIANT_BOOL Flip );
__declspec(implementation_key(1844)) CenterPlaneRelation3dPtr _IRelations3dAuto::AddCenterPlane ( IDispatch * PlacementElement1, IDispatch * PlacementElement2, IDispatch * TargetElement1, IDispatch * TargetElement2, SAFEARRAY * * PlacementConstrainingPoint1, SAFEARRAY * * PlacementConstrainingPoint2, SAFEARRAY * * TargetConstrainingPoint1, SAFEARRAY * * TargetConstrainingPoint2 );
__declspec(implementation_key(1845)) RigidSetRelation3dPtr _IRelations3dAuto::AddRigidSet ( long OccurrenceCount, SAFEARRAY * * Occurrences );
__declspec(implementation_key(1846)) CamFollowerRelation3dPtr _IRelations3dAuto::AddPlanarCam ( IDispatch * ConstrainingFollowerElement, SAFEARRAY * * ConstrainingCamFaces );
__declspec(implementation_key(1847)) CamFollowerRelation3dPtr _IRelations3dAuto::AddBarrelCam ( IDispatch * ConstrainingFollowerElement, SAFEARRAY * * ConstrainingCamEdges );
__declspec(implementation_key(1848)) PathRelation3dPtr _IRelations3dAuto::AddPath ( IDispatch * ConstrainingFollowerElement, SAFEARRAY * * ConstrainingCamEdges );
__declspec(implementation_key(1849)) CoordinateSystemRelation3dPtr _IRelations3dAuto::AddCoordinateSystem ( IDispatch * pCoordSystem1, IDispatch * pCoordSystem2 );
__declspec(implementation_key(1850)) SlotRelation3dPtr _IRelations3dAuto::AddSlot ( IDispatch * pSlotElement, IDispatch * pPinElement, enum Relation3dSlotOffsetTypeConstants eSlotOffsetType, double dOffset );
__declspec(implementation_key(1851)) IDispatchPtr _ISlotRelation3dAuto_TG::GetApplication ( );
__declspec(implementation_key(1852)) IDispatchPtr _ISlotRelation3dAuto_TG::GetParent ( );
__declspec(implementation_key(1853)) HRESULT _ISlotRelation3dAuto_TG::Delete ( );
__declspec(implementation_key(1854)) long _ISlotRelation3dAuto_TG::GetIndex ( );
__declspec(implementation_key(1855)) enum TGFramework::ObjectType _ISlotRelation3dAuto_TG::GetType ( );
__declspec(implementation_key(1856)) HRESULT _ISlotRelation3dAuto_TG::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(1857)) enum Relation3dStatusConstants _ISlotRelation3dAuto_TG::GetStatus ( );
__declspec(implementation_key(1858)) enum Relation3dDetailedStatusConstants _ISlotRelation3dAuto_TG::GetDetailedStatus ( );
__declspec(implementation_key(1859)) OccurrencePtr _ISlotRelation3dAuto_TG::GetOccurrence1 ( );
__declspec(implementation_key(1860)) OccurrencePtr _ISlotRelation3dAuto_TG::GetOccurrence2 ( );
__declspec(implementation_key(1861)) HRESULT _ISlotRelation3dAuto_TG::GetGeometry1 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ );
__declspec(implementation_key(1862)) HRESULT _ISlotRelation3dAuto_TG::GetGeometry2 ( long * GeometryType, double * PointX, double * PointY, double * PointZ, double * VectorX, double * VectorY, double * VectorZ );
__declspec(implementation_key(1863)) VARIANT_BOOL _ISlotRelation3dAuto_TG::GetSuppress ( );
__declspec(implementation_key(1864)) void _ISlotRelation3dAuto_TG::PutSuppress ( VARIANT_BOOL bSuppress );
__declspec(implementation_key(1865)) IDispatchPtr _ISlotRelation3dAuto_TG::GetElement1 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1866)) IDispatchPtr _ISlotRelation3dAuto_TG::GetElement2 ( VARIANT_BOOL * IsTopologyReference );
__declspec(implementation_key(1867)) double _ISlotRelation3dAuto_TG::GetOffsetValue ( );
__declspec(implementation_key(1868)) void _ISlotRelation3dAuto_TG::PutOffsetValue ( double Offset );
__declspec(implementation_key(1869)) enum Relation3dSlotOffsetTypeConstants _ISlotRelation3dAuto_TG::GetOffsetType ( );
__declspec(implementation_key(1870)) void _ISlotRelation3dAuto_TG::PutOffsetType ( enum Relation3dSlotOffsetTypeConstants eSlotOffsetType );
__declspec(implementation_key(1871)) double _ISlotRelation3dAuto_TG::GetSlotPathLength ( );
__declspec(implementation_key(1872)) IDispatchPtr _ISlotRelation3dAuto_TG::GetAttributeSets ( );
__declspec(implementation_key(1873)) VARIANT_BOOL _ISlotRelation3dAuto_TG::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1874)) TGPart::SuppressVariablePtr _ISlotRelation3dAuto_TG::GetSuppressionVariable ( );
__declspec(implementation_key(1875)) TGPart::SuppressVariablePtr _ISlotRelation3dAuto_TG::AddSuppressionVariable ( );
__declspec(implementation_key(1876)) HRESULT _ISlotRelation3dAuto_TG::DeleteSuppressionVariable ( );
__declspec(implementation_key(1877)) VARIANT_BOOL _ISlotRelation3dAuto_TG::HasSuppressionVariable ( );
__declspec(implementation_key(1878)) IDispatchPtr PhysicalProperties::GetApplication ( );
__declspec(implementation_key(1879)) IDispatchPtr PhysicalProperties::GetParent ( );
__declspec(implementation_key(1880)) VARIANT_BOOL PhysicalProperties::GetDisplayCenterOfMass ( );
__declspec(implementation_key(1881)) void PhysicalProperties::PutDisplayCenterOfMass ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1882)) VARIANT_BOOL PhysicalProperties::GetDisplayCenterOfVolume ( );
__declspec(implementation_key(1883)) void PhysicalProperties::PutDisplayCenterOfVolume ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1884)) VARIANT_BOOL PhysicalProperties::GetDisplayPrincipalAxes ( );
__declspec(implementation_key(1885)) void PhysicalProperties::PutDisplayPrincipalAxes ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1886)) HRESULT PhysicalProperties::WriteToFile ( _bstr_t FileName );
__declspec(implementation_key(1887)) HRESULT PhysicalProperties::GetAssemblyPhysicalProperties ( double * Mass, double * Volume, double * Area, SAFEARRAY * * CenterOfMass, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMoments, SAFEARRAY * * PrincipalAxis1, SAFEARRAY * * PrincipalAxis2, SAFEARRAY * * PrincipalAxis3, SAFEARRAY * * PrincipalMoments, SAFEARRAY * * RadiiOfGyration, VARIANT_BOOL * IsSick, VARIANT_BOOL * UpdateStatus );
__declspec(implementation_key(1888)) HRESULT PhysicalProperties::GetAssemblyPhysicalProperties1 ( double * Mass, double * Volume, double * Area, SAFEARRAY * * CenterOfMass, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMoments, SAFEARRAY * * PrincipalAxis1, SAFEARRAY * * PrincipalAxis2, SAFEARRAY * * PrincipalAxis3, SAFEARRAY * * PrincipalMoments, SAFEARRAY * * RadiiOfGyration, VARIANT_BOOL * IsSick, VARIANT_BOOL * UpdateStatus, double * OverrideMass );
__declspec(implementation_key(1889)) HRESULT PhysicalProperties::GetSelectSetPhysicalProperties ( double * Mass, double * Volume, double * Area, SAFEARRAY * * CenterOfMass, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMoments, SAFEARRAY * * PrincipalAxis1, SAFEARRAY * * PrincipalAxis2, SAFEARRAY * * PrincipalAxis3, SAFEARRAY * * PrincipalMoments, SAFEARRAY * * RadiiOfGyration );
__declspec(implementation_key(1890)) VARIANT_BOOL PhysicalProperties::GetIsUpToDate ( );
__declspec(implementation_key(1891)) HRESULT PhysicalProperties::Update ( );
__declspec(implementation_key(1892)) HRESULT PhysicalProperties::GetAsmPhysicalPropsRelativeToCoordSystem ( IDispatch * CoordinateSystem, double * Mass, double * Volume, double * Area, SAFEARRAY * * CenterOfMass, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMoments, SAFEARRAY * * PrincipalAxis1, SAFEARRAY * * PrincipalAxis2, SAFEARRAY * * PrincipalAxis3, SAFEARRAY * * PrincipalMoments, SAFEARRAY * * RadiiOfGyration, VARIANT_BOOL * IsSick, VARIANT_BOOL * UpdateStatus );
__declspec(implementation_key(1893)) HRESULT PhysicalProperties::GetSelectSetPhysicalPropsRelativeToCoordSystem ( IDispatch * CoordinateSystem, double * Mass, double * Volume, double * Area, SAFEARRAY * * CenterOfMass, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMoments, SAFEARRAY * * PrincipalAxis1, SAFEARRAY * * PrincipalAxis2, SAFEARRAY * * PrincipalAxis3, SAFEARRAY * * PrincipalMoments, SAFEARRAY * * RadiiOfGyration );
__declspec(implementation_key(1894)) VARIANT_BOOL PhysicalProperties::GetUserDefinedPropertiesStatus ( );
__declspec(implementation_key(1895)) void PhysicalProperties::PutUserDefinedPropertiesStatus ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1896)) VARIANT_BOOL PhysicalProperties::GetUpdateOnFileSaveStatus ( );
__declspec(implementation_key(1897)) void PhysicalProperties::PutUpdateOnFileSaveStatus ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1898)) HRESULT PhysicalProperties::SetUserDefinedAssemblyPhysicalProperties ( double * Volume, double * Area, double * Mass, SAFEARRAY * * CenterOfMass, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMoments, SAFEARRAY * * PrincipalMoments, SAFEARRAY * * PrincipalAxis1, SAFEARRAY * * PrincipalAxis2, SAFEARRAY * * PrincipalAxis3, SAFEARRAY * * RadiiOfGyration, double * OverrideMass );
__declspec(implementation_key(1899)) VARIANT_BOOL PhysicalProperties::GetUseQuantityOverrideMass ( );
__declspec(implementation_key(1900)) void PhysicalProperties::PutUseQuantityOverrideMass ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1901)) HRESULT PhysicalProperties::UpdateV2 ( SAFEARRAY * * ParFileNamesWithoutDensity );
__declspec(implementation_key(1902)) HRESULT PhysicalProperties::GetAssemblyPhysicalPropertiesInstantly ( double * Mass, double * Volume, double * Area, SAFEARRAY * * CenterOfMass, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMoments, SAFEARRAY * * PrincipalAxis1, SAFEARRAY * * PrincipalAxis2, SAFEARRAY * * PrincipalAxis3, SAFEARRAY * * PrincipalMoments, SAFEARRAY * * RadiiOfGyration, VARIANT_BOOL * IsSick, VARIANT_BOOL * UpdateStatus, SAFEARRAY * * ParFileNamesWithoutDensity );
__declspec(implementation_key(1903)) HRESULT PhysicalProperties::GetAssemblyPhysicalPropertiesWithOverrideMassInstantly ( double * Mass, double * Volume, double * Area, SAFEARRAY * * CenterOfMass, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMoments, SAFEARRAY * * PrincipalAxis1, SAFEARRAY * * PrincipalAxis2, SAFEARRAY * * PrincipalAxis3, SAFEARRAY * * PrincipalMoments, SAFEARRAY * * RadiiOfGyration, VARIANT_BOOL * IsSick, VARIANT_BOOL * UpdateStatus, SAFEARRAY * * ParFileNamesWithoutDensity, double * OverrideMass );
__declspec(implementation_key(1904)) IDispatchPtr _IPhysicalPropertiesAuto::GetApplication ( );
__declspec(implementation_key(1905)) IDispatchPtr _IPhysicalPropertiesAuto::GetParent ( );
__declspec(implementation_key(1906)) VARIANT_BOOL _IPhysicalPropertiesAuto::GetDisplayCenterOfMass ( );
__declspec(implementation_key(1907)) void _IPhysicalPropertiesAuto::PutDisplayCenterOfMass ( VARIANT_BOOL Display );
__declspec(implementation_key(1908)) VARIANT_BOOL _IPhysicalPropertiesAuto::GetDisplayCenterOfVolume ( );
__declspec(implementation_key(1909)) void _IPhysicalPropertiesAuto::PutDisplayCenterOfVolume ( VARIANT_BOOL Display );
__declspec(implementation_key(1910)) VARIANT_BOOL _IPhysicalPropertiesAuto::GetDisplayPrincipalAxes ( );
__declspec(implementation_key(1911)) void _IPhysicalPropertiesAuto::PutDisplayPrincipalAxes ( VARIANT_BOOL Display );
__declspec(implementation_key(1912)) HRESULT _IPhysicalPropertiesAuto::WriteToFile ( _bstr_t FileName );
__declspec(implementation_key(1913)) HRESULT _IPhysicalPropertiesAuto::GetAssemblyPhysicalProperties ( double * Mass, double * Volume, double * Area, SAFEARRAY * * CenterOfMass, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMoments, SAFEARRAY * * PrincipalAxis1, SAFEARRAY * * PrincipalAxis2, SAFEARRAY * * PrincipalAxis3, SAFEARRAY * * PrincipalMoments, SAFEARRAY * * RadiiOfGyration, VARIANT_BOOL * IsSick, VARIANT_BOOL * UpdateStatus );
__declspec(implementation_key(1914)) HRESULT _IPhysicalPropertiesAuto::GetAssemblyPhysicalProperties1 ( double * Mass, double * Volume, double * Area, SAFEARRAY * * CenterOfMass, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMoments, SAFEARRAY * * PrincipalAxis1, SAFEARRAY * * PrincipalAxis2, SAFEARRAY * * PrincipalAxis3, SAFEARRAY * * PrincipalMoments, SAFEARRAY * * RadiiOfGyration, VARIANT_BOOL * IsSick, VARIANT_BOOL * UpdateStatus, double * OverrideMass );
__declspec(implementation_key(1915)) HRESULT _IPhysicalPropertiesAuto::GetSelectSetPhysicalProperties ( double * Mass, double * Volume, double * Area, SAFEARRAY * * CenterOfMass, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMoments, SAFEARRAY * * PrincipalAxis1, SAFEARRAY * * PrincipalAxis2, SAFEARRAY * * PrincipalAxis3, SAFEARRAY * * PrincipalMoments, SAFEARRAY * * RadiiOfGyration );
__declspec(implementation_key(1916)) VARIANT_BOOL _IPhysicalPropertiesAuto::GetIsUpToDate ( );
__declspec(implementation_key(1917)) HRESULT _IPhysicalPropertiesAuto::Update ( );
__declspec(implementation_key(1918)) HRESULT _IPhysicalPropertiesAuto::GetAsmPhysicalPropsRelativeToCoordSystem ( IDispatch * CoordinateSystem, double * Mass, double * Volume, double * Area, SAFEARRAY * * CenterOfMass, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMoments, SAFEARRAY * * PrincipalAxis1, SAFEARRAY * * PrincipalAxis2, SAFEARRAY * * PrincipalAxis3, SAFEARRAY * * PrincipalMoments, SAFEARRAY * * RadiiOfGyration, VARIANT_BOOL * IsSick, VARIANT_BOOL * UpdateStatus );
__declspec(implementation_key(1919)) HRESULT _IPhysicalPropertiesAuto::GetSelectSetPhysicalPropsRelativeToCoordSystem ( IDispatch * CoordinateSystem, double * Mass, double * Volume, double * Area, SAFEARRAY * * CenterOfMass, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMoments, SAFEARRAY * * PrincipalAxis1, SAFEARRAY * * PrincipalAxis2, SAFEARRAY * * PrincipalAxis3, SAFEARRAY * * PrincipalMoments, SAFEARRAY * * RadiiOfGyration );
__declspec(implementation_key(1920)) VARIANT_BOOL _IPhysicalPropertiesAuto::GetUserDefinedPropertiesStatus ( );
__declspec(implementation_key(1921)) void _IPhysicalPropertiesAuto::PutUserDefinedPropertiesStatus ( VARIANT_BOOL Status );
__declspec(implementation_key(1922)) VARIANT_BOOL _IPhysicalPropertiesAuto::GetUpdateOnFileSaveStatus ( );
__declspec(implementation_key(1923)) void _IPhysicalPropertiesAuto::PutUpdateOnFileSaveStatus ( VARIANT_BOOL Status );
__declspec(implementation_key(1924)) HRESULT _IPhysicalPropertiesAuto::SetUserDefinedAssemblyPhysicalProperties ( double * Volume, double * Area, double * Mass, SAFEARRAY * * CenterOfMass, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMoments, SAFEARRAY * * PrincipalMoments, SAFEARRAY * * PrincipalAxis1, SAFEARRAY * * PrincipalAxis2, SAFEARRAY * * PrincipalAxis3, SAFEARRAY * * RadiiOfGyration, double * OverrideMass );
__declspec(implementation_key(1925)) VARIANT_BOOL _IPhysicalPropertiesAuto::GetUseQuantityOverrideMass ( );
__declspec(implementation_key(1926)) void _IPhysicalPropertiesAuto::PutUseQuantityOverrideMass ( VARIANT_BOOL UseQuantityOverrideMass );
__declspec(implementation_key(1927)) HRESULT _IPhysicalPropertiesAuto::UpdateV2 ( SAFEARRAY * * ParFileNamesWithoutDensity );
__declspec(implementation_key(1928)) HRESULT _IPhysicalPropertiesAuto::GetAssemblyPhysicalPropertiesInstantly ( double * Mass, double * Volume, double * Area, SAFEARRAY * * CenterOfMass, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMoments, SAFEARRAY * * PrincipalAxis1, SAFEARRAY * * PrincipalAxis2, SAFEARRAY * * PrincipalAxis3, SAFEARRAY * * PrincipalMoments, SAFEARRAY * * RadiiOfGyration, VARIANT_BOOL * IsSick, VARIANT_BOOL * UpdateStatus, SAFEARRAY * * ParFileNamesWithoutDensity );
__declspec(implementation_key(1929)) HRESULT _IPhysicalPropertiesAuto::GetAssemblyPhysicalPropertiesWithOverrideMassInstantly ( double * Mass, double * Volume, double * Area, SAFEARRAY * * CenterOfMass, SAFEARRAY * * CenterOfVolume, SAFEARRAY * * GlobalMoments, SAFEARRAY * * PrincipalAxis1, SAFEARRAY * * PrincipalAxis2, SAFEARRAY * * PrincipalAxis3, SAFEARRAY * * PrincipalMoments, SAFEARRAY * * RadiiOfGyration, VARIANT_BOOL * IsSick, VARIANT_BOOL * UpdateStatus, SAFEARRAY * * ParFileNamesWithoutDensity, double * OverrideMass );
__declspec(implementation_key(1930)) IDispatchPtr Occurrences::GetApplication ( );
__declspec(implementation_key(1931)) long Occurrences::GetCount ( );
__declspec(implementation_key(1932)) IDispatchPtr Occurrences::GetParent ( );
__declspec(implementation_key(1933)) OccurrencePtr Occurrences::Item ( const _variant_t & Index );
__declspec(implementation_key(1934)) OccurrencePtr Occurrences::AddByFilename ( _bstr_t OccurrenceFileName, const _variant_t & UseSimplifiedPart );
__declspec(implementation_key(1935)) OccurrencePtr Occurrences::AddWithTransform ( _bstr_t OccurrenceFileName, double OriginX, double OriginY, double OriginZ, double AngleX, double AngleY, double AngleZ );
__declspec(implementation_key(1936)) OccurrencePtr Occurrences::AddWithMatrix ( _bstr_t OccurrenceFileName, SAFEARRAY * * Matrix );
__declspec(implementation_key(1937)) OccurrencePtr Occurrences::AddTube ( SAFEARRAY * * TubeSegments, BSTR * PartFileName, const _variant_t & TemplateFileName, const _variant_t & IsSolid, const _variant_t & Material, const _variant_t & BendRadius, const _variant_t & OuterDiameter, const _variant_t & MinimumFlatLength, const _variant_t & WallThickness, const _variant_t & ExtendStart, const _variant_t & ExtendEnd, const _variant_t & AddConnectRelations, const _variant_t & StartEndTreatmentType, const _variant_t & StartEndTreatmentInsideDiameter, const _variant_t & StartEndTreatmentOutsideDiameter, const _variant_t & StartEndTreatmentRadius, const _variant_t & StartEndTreatmentDepth, const _variant_t & StartEndTreatmentAngle, const _variant_t & EndEndTreatmentType, const _variant_t & EndEndTreatmentInsideDiameter, const _variant_t & EndEndTreatmentOutsideDiameter, const _variant_t & EndEndTreatmentRadius, const _variant_t & EndEndTreatmentDepth, const _variant_t & EndEndTreatmentAngle );
__declspec(implementation_key(1938)) OccurrencePtr Occurrences::AddTubeBIDM ( SAFEARRAY * * TubeSegments, _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t RevisionID, _bstr_t Title, BSTR * NewFileName, const _variant_t & TemplateFileName, const _variant_t & IsSolid, const _variant_t & Material, const _variant_t & BendRadius, const _variant_t & OuterDiameter, const _variant_t & MinimumFlatLength, const _variant_t & WallThickness, const _variant_t & ExtendStart, const _variant_t & ExtendEnd, const _variant_t & AddConnectRelations, const _variant_t & StartEndTreatmentType, const _variant_t & StartEndTreatmentInsideDiameter, const _variant_t & StartEndTreatmentOutsideDiameter, const _variant_t & StartEndTreatmentRadius, const _variant_t & StartEndTreatmentDepth, const _variant_t & StartEndTreatmentAngle, const _variant_t & EndEndTreatmentType, const _variant_t & EndEndTreatmentInsideDiameter, const _variant_t & EndEndTreatmentOutsideDiameter, const _variant_t & EndEndTreatmentRadius, const _variant_t & EndEndTreatmentDepth, const _variant_t & EndEndTreatmentAngle );
__declspec(implementation_key(1939)) OccurrencePtr Occurrences::AddFamilyByFilename ( _bstr_t OccurrenceFileName, _bstr_t MemberName );
__declspec(implementation_key(1940)) OccurrencePtr Occurrences::AddFamilyWithTransform ( _bstr_t OccurrenceFileName, double OriginX, double OriginY, double OriginZ, double AngleX, double AngleY, double AngleZ, _bstr_t MemberName );
__declspec(implementation_key(1941)) OccurrencePtr Occurrences::AddFamilyWithMatrix ( _bstr_t OccurrenceFileName, SAFEARRAY * * Matrix, _bstr_t MemberName );
__declspec(implementation_key(1942)) OccurrencePtr Occurrences::AddByTemplate ( _bstr_t OccurrenceFileName, const _variant_t & TemplateFileName );
__declspec(implementation_key(1943)) HRESULT Occurrences::ReorderOccurrence ( IDispatch * OccurrenceToReorder, IDispatch * TargetOccurrence, VARIANT_BOOL AfterTarget );
__declspec(implementation_key(1944)) enum TGFramework::ObjectType Occurrences::GetType ( );
__declspec(implementation_key(1945)) IDispatchPtr Occurrences::GetAttributeSets ( );
__declspec(implementation_key(1946)) VARIANT_BOOL Occurrences::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1947)) OccurrencePtr Occurrences::AddAsAdjustablePart ( _bstr_t OccurrenceFileName );
__declspec(implementation_key(1948)) OccurrencePtr Occurrences::GetOccurrence ( long ID );
__declspec(implementation_key(1949)) IDispatchPtr _IOccurrencesAuto::GetApplication ( );
__declspec(implementation_key(1950)) long _IOccurrencesAuto::GetCount ( );
__declspec(implementation_key(1951)) IDispatchPtr _IOccurrencesAuto::GetParent ( );
__declspec(implementation_key(1952)) OccurrencePtr _IOccurrencesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(1953)) IUnknownPtr _IOccurrencesAuto::Get_NewEnum ( );
__declspec(implementation_key(1954)) OccurrencePtr _IOccurrencesAuto::AddByFilename ( _bstr_t OccurrenceFileName, const _variant_t & UseSimplifiedPart );
__declspec(implementation_key(1955)) OccurrencePtr _IOccurrencesAuto::AddWithTransform ( _bstr_t OccurrenceFileName, double OriginX, double OriginY, double OriginZ, double AngleX, double AngleY, double AngleZ );
__declspec(implementation_key(1956)) OccurrencePtr _IOccurrencesAuto::AddWithMatrix ( _bstr_t OccurrenceFileName, SAFEARRAY * * Matrix );
__declspec(implementation_key(1957)) OccurrencePtr _IOccurrencesAuto::AddTube ( SAFEARRAY * * TubeSegments, BSTR * PartFileName, const _variant_t & TemplateFileName, const _variant_t & IsSolid, const _variant_t & Material, const _variant_t & BendRadius, const _variant_t & OuterDiameter, const _variant_t & MinimumFlatLength, const _variant_t & WallThickness, const _variant_t & ExtendStart, const _variant_t & ExtendEnd, const _variant_t & AddConnectRelations, const _variant_t & StartEndTreatmentType, const _variant_t & StartEndTreatmentInsideDiameter, const _variant_t & StartEndTreatmentOutsideDiameter, const _variant_t & StartEndTreatmentRadius, const _variant_t & StartEndTreatmentDepth, const _variant_t & StartEndTreatmentAngle, const _variant_t & EndEndTreatmentType, const _variant_t & EndEndTreatmentInsideDiameter, const _variant_t & EndEndTreatmentOutsideDiameter, const _variant_t & EndEndTreatmentRadius, const _variant_t & EndEndTreatmentDepth, const _variant_t & EndEndTreatmentAngle );
__declspec(implementation_key(1958)) OccurrencePtr _IOccurrencesAuto::AddTubeBIDM ( SAFEARRAY * * TubeSegments, _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t RevisionID, _bstr_t Title, BSTR * NewFileName, const _variant_t & TemplateFileName, const _variant_t & IsSolid, const _variant_t & Material, const _variant_t & BendRadius, const _variant_t & OuterDiameter, const _variant_t & MinimumFlatLength, const _variant_t & WallThickness, const _variant_t & ExtendStart, const _variant_t & ExtendEnd, const _variant_t & AddConnectRelations, const _variant_t & StartEndTreatmentType, const _variant_t & StartEndTreatmentInsideDiameter, const _variant_t & StartEndTreatmentOutsideDiameter, const _variant_t & StartEndTreatmentRadius, const _variant_t & StartEndTreatmentDepth, const _variant_t & StartEndTreatmentAngle, const _variant_t & EndEndTreatmentType, const _variant_t & EndEndTreatmentInsideDiameter, const _variant_t & EndEndTreatmentOutsideDiameter, const _variant_t & EndEndTreatmentRadius, const _variant_t & EndEndTreatmentDepth, const _variant_t & EndEndTreatmentAngle );
__declspec(implementation_key(1959)) OccurrencePtr _IOccurrencesAuto::AddFamilyByFilename ( _bstr_t OccurrenceFileName, _bstr_t MemberName );
__declspec(implementation_key(1960)) OccurrencePtr _IOccurrencesAuto::AddFamilyWithTransform ( _bstr_t OccurrenceFileName, double OriginX, double OriginY, double OriginZ, double AngleX, double AngleY, double AngleZ, _bstr_t MemberName );
__declspec(implementation_key(1961)) OccurrencePtr _IOccurrencesAuto::AddFamilyWithMatrix ( _bstr_t OccurrenceFileName, SAFEARRAY * * Matrix, _bstr_t MemberName );
__declspec(implementation_key(1962)) OccurrencePtr _IOccurrencesAuto::AddByTemplate ( _bstr_t OccurrenceFileName, const _variant_t & TemplateFileName );
__declspec(implementation_key(1963)) HRESULT _IOccurrencesAuto::ReorderOccurrence ( IDispatch * OccurrenceToReorder, IDispatch * TargetOccurrence, VARIANT_BOOL AfterTarget );
__declspec(implementation_key(1964)) enum TGFramework::ObjectType _IOccurrencesAuto::GetType ( );
__declspec(implementation_key(1965)) IDispatchPtr _IOccurrencesAuto::GetAttributeSets ( );
__declspec(implementation_key(1966)) VARIANT_BOOL _IOccurrencesAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(1967)) OccurrencePtr _IOccurrencesAuto::AddAsAdjustablePart ( _bstr_t OccurrenceFileName );
__declspec(implementation_key(1968)) OccurrencePtr _IOccurrencesAuto::GetOccurrence ( long ID );
__declspec(implementation_key(1969)) TGFramework::ApplicationPtr AsmRefPlanes::GetApplication ( );
__declspec(implementation_key(1970)) IDispatchPtr AsmRefPlanes::GetParent ( );
__declspec(implementation_key(1971)) long AsmRefPlanes::GetCount ( );
__declspec(implementation_key(1972)) AsmRefPlanePtr AsmRefPlanes::Item ( const _variant_t & Index );
__declspec(implementation_key(1973)) AsmRefPlanePtr AsmRefPlanes::AddParallelByDistance ( IDispatch * ParentPlane, double Distance, const _variant_t & NormalSide, const _variant_t & Pivot, const _variant_t & PivotOrigin, const _variant_t & Local );
__declspec(implementation_key(1974)) AsmRefPlanePtr AsmRefPlanes::AddMiddlePlaneByTwoPlanes ( IDispatch * ParentPlane, IDispatch * ParentPlaneTwo, const _variant_t & PivotParallel, const _variant_t & PivotOriginParallel, enum TGPart::ReferenceElementConstants PivotOriginAngular );
__declspec(implementation_key(1975)) AsmRefPlanePtr AsmRefPlanes::AddAngularByAngle ( IDispatch * ParentPlane, double Angle, IDispatch * Pivot, enum TGPart::ReferenceElementConstants PivotOrigin, const _variant_t & NormalSide, const _variant_t & Local );
__declspec(implementation_key(1976)) AsmRefPlanePtr AsmRefPlanes::AddBy3Points ( IDispatch * RootPoint, IDispatch * SecondXAxisPoint, IDispatch * ThirdPoint );
__declspec(implementation_key(1977)) AsmRefPlanePtr AsmRefPlanes::AddNormalToCurveAtDistanceAlongCurve ( IDispatch * Parent, IDispatch * OrientationPlane, double Distance, double XAxisRotation, enum TGPart::ReferenceElementConstants normalOrientation, enum TGPart::ReferenceElementConstants distanceOrigin );
__declspec(implementation_key(1978)) AsmRefPlanePtr AsmRefPlanes::AddNormalToCurveAtArcLengthRatio ( IDispatch * Parent, IDispatch * OrientationPlane, double ArcLengthRatio, double XAxisRotation, enum TGPart::ReferenceElementConstants normalOrientation, enum TGPart::ReferenceElementConstants arcLengthRatioOrigin );
__declspec(implementation_key(1979)) AsmRefPlanePtr AsmRefPlanes::AddNormalToCurveAtKeyPoint ( IDispatch * Parent, IDispatch * OrientationPlane, IDispatch * Keypoint, double XAxisRotation, enum TGPart::ReferenceElementConstants normalOrientation, enum TGPart::ReferenceElementConstants selectedCurveEnd );
__declspec(implementation_key(1980)) VARIANT_BOOL AsmRefPlanes::GetVisible ( );
__declspec(implementation_key(1981)) void AsmRefPlanes::PutVisible ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(1982)) AsmRefPlanePtr AsmRefPlanes::AddTangentToCylinderOrConeAtAngleEx ( IDispatch * Face, IDispatch * ParentPlane, double AngleOfRotation, double XAxisAngle, enum TGPart::FeaturePropertyConstants ExtentSide, enum TGPart::ReferenceElementConstants normalOrientation, const _variant_t & Local );
__declspec(implementation_key(1983)) AsmRefPlanePtr AsmRefPlanes::AddTangentToCylinderOrConeAtKeyPointEx ( IDispatch * Face, IDispatch * ParentPlane, IDispatch * Keypoint, enum TGFramework::KeyPointType KeyPointTypeConstant, double XAxisAngle, enum TGPart::FeaturePropertyConstants ExtentSide, enum TGPart::ReferenceElementConstants normalOrientation, const _variant_t & Local );
__declspec(implementation_key(1984)) AsmRefPlanePtr AsmRefPlanes::AddTangentToCurvedSurfaceAtKeyPointEx ( IDispatch * Face, IDispatch * ParentPlane, IDispatch * Keypoint, enum TGFramework::KeyPointType KeyPointTypeConstant, double XAxisAngle, enum TGPart::ReferenceElementConstants normalOrientation, const _variant_t & Local );
__declspec(implementation_key(1985)) AsmRefPlanePtr AsmRefPlanes::AddParallelByDistanceEx ( IDispatch * ParentPlane, double Distance, const _variant_t & NormalSide, const _variant_t & Pivot, const _variant_t & PivotOrigin, const _variant_t & Local );
__declspec(implementation_key(1986)) AsmRefPlanePtr AsmRefPlanes::AddAngularByAngleEx ( IDispatch * ParentPlane, double Angle, IDispatch * Pivot, enum TGPart::ReferenceElementConstants PivotOrigin, const _variant_t & NormalSide, const _variant_t & Local );
__declspec(implementation_key(1987)) AsmRefPlanePtr AsmRefPlanes::AddBy3PointsEx ( IDispatch * RootPoint, IDispatch * SecondXAxisPoint, IDispatch * ThirdPoint, const _variant_t & Local );
__declspec(implementation_key(1988)) AsmRefPlanePtr AsmRefPlanes::AddNormalToCurveAtDistanceAlongCurveEx ( IDispatch * Parent, IDispatch * OrientationPlane, double Distance, double XAxisRotation, enum TGPart::ReferenceElementConstants normalOrientation, enum TGPart::ReferenceElementConstants distanceOrigin, const _variant_t & Local );
__declspec(implementation_key(1989)) AsmRefPlanePtr AsmRefPlanes::AddNormalToCurveAtArcLengthRatioEx ( IDispatch * Parent, IDispatch * OrientationPlane, double ArcLengthRatio, double XAxisRotation, enum TGPart::ReferenceElementConstants normalOrientation, enum TGPart::ReferenceElementConstants arcLengthRatioOrigin, const _variant_t & Local );
__declspec(implementation_key(1990)) AsmRefPlanePtr AsmRefPlanes::AddNormalToCurveAtKeyPointEx ( IDispatch * Parent, IDispatch * OrientationPlane, IDispatch * Keypoint, double XAxisRotation, enum TGPart::ReferenceElementConstants normalOrientation, enum TGPart::ReferenceElementConstants selectedCurveEnd, const _variant_t & Local );
__declspec(implementation_key(1991)) TGFramework::ApplicationPtr AsmRefPlane::GetApplication ( );
__declspec(implementation_key(1992)) IDispatchPtr AsmRefPlane::GetParent ( );
__declspec(implementation_key(1993)) _bstr_t AsmRefPlane::GetName ( );
__declspec(implementation_key(1994)) void AsmRefPlane::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(1995)) HRESULT AsmRefPlane::GetNormal ( SAFEARRAY * * Normal );
__declspec(implementation_key(1996)) HRESULT AsmRefPlane::GetRootPoint ( SAFEARRAY * * RootPoint );
__declspec(implementation_key(1997)) HRESULT AsmRefPlane::GetReferenceDirection ( SAFEARRAY * * RefDir );
__declspec(implementation_key(1998)) VARIANT_BOOL AsmRefPlane::GetGlobal ( );
__declspec(implementation_key(1999)) void AsmRefPlane::PutVisible ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2000)) VARIANT_BOOL AsmRefPlane::GetVisible ( );
__declspec(implementation_key(2001)) enum TGFramework::ObjectType AsmRefPlane::GetType ( );
__declspec(implementation_key(2002)) HRESULT AsmRefPlane::ResizeRefPlaneByDirDist ( VARIANT_BOOL bAlongX, int idx, double dist );
__declspec(implementation_key(2003)) HRESULT AsmRefPlane::AutoResizeRefPlane ( );
__declspec(implementation_key(2004)) enum TGPart::FeatureStatusConstants AsmRefPlane::GetStatus ( VARIANT * Description );
__declspec(implementation_key(2005)) IDispatchPtr AsmRefPlane::GetAttributeSets ( );
__declspec(implementation_key(2006)) VARIANT_BOOL AsmRefPlane::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(2007)) HRESULT AsmRefPlane::Delete ( );
__declspec(implementation_key(2008)) SAFEARRAY * AsmRefPlane::GetParentRelations ( );
__declspec(implementation_key(2009)) double AsmRefPlane::GetTangentAngle ( );
__declspec(implementation_key(2010)) void AsmRefPlane::PutTangentAngle ( double _arg1 );
__declspec(implementation_key(2011)) TGFramework::ApplicationPtr _IAsmRefPlanesAuto::GetApplication ( );
__declspec(implementation_key(2012)) IDispatchPtr _IAsmRefPlanesAuto::GetParent ( );
__declspec(implementation_key(2013)) long _IAsmRefPlanesAuto::GetCount ( );
__declspec(implementation_key(2014)) IUnknownPtr _IAsmRefPlanesAuto::Get_NewEnum ( );
__declspec(implementation_key(2015)) AsmRefPlanePtr _IAsmRefPlanesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(2016)) AsmRefPlanePtr _IAsmRefPlanesAuto::AddParallelByDistance ( IDispatch * ParentPlane, double Distance, const _variant_t & NormalSide, const _variant_t & Pivot, const _variant_t & PivotOrigin, const _variant_t & Local );
__declspec(implementation_key(2017)) AsmRefPlanePtr _IAsmRefPlanesAuto::AddMiddlePlaneByTwoPlanes ( IDispatch * ParentPlane, IDispatch * ParentPlaneTwo, const _variant_t & PivotParallel, const _variant_t & PivotOriginParallel, enum TGPart::ReferenceElementConstants PivotOriginAngular );
__declspec(implementation_key(2018)) AsmRefPlanePtr _IAsmRefPlanesAuto::AddAngularByAngle ( IDispatch * ParentPlane, double Angle, IDispatch * Pivot, enum TGPart::ReferenceElementConstants PivotOrigin, const _variant_t & NormalSide, const _variant_t & Local );
__declspec(implementation_key(2019)) AsmRefPlanePtr _IAsmRefPlanesAuto::AddBy3Points ( IDispatch * RootPoint, IDispatch * SecondXAxisPoint, IDispatch * ThirdPoint );
__declspec(implementation_key(2020)) AsmRefPlanePtr _IAsmRefPlanesAuto::AddNormalToCurveAtDistanceAlongCurve ( IDispatch * Parent, IDispatch * OrientationPlane, double Distance, double XAxisRotation, enum TGPart::ReferenceElementConstants normalOrientation, enum TGPart::ReferenceElementConstants distanceOrigin );
__declspec(implementation_key(2021)) AsmRefPlanePtr _IAsmRefPlanesAuto::AddNormalToCurveAtArcLengthRatio ( IDispatch * Parent, IDispatch * OrientationPlane, double ArcLengthRatio, double XAxisRotation, enum TGPart::ReferenceElementConstants normalOrientation, enum TGPart::ReferenceElementConstants arcLengthRatioOrigin );
__declspec(implementation_key(2022)) AsmRefPlanePtr _IAsmRefPlanesAuto::AddNormalToCurveAtKeyPoint ( IDispatch * Parent, IDispatch * OrientationPlane, IDispatch * Keypoint, double XAxisRotation, enum TGPart::ReferenceElementConstants normalOrientation, enum TGPart::ReferenceElementConstants selectedCurveEnd );
__declspec(implementation_key(2023)) VARIANT_BOOL _IAsmRefPlanesAuto::GetVisible ( );
__declspec(implementation_key(2024)) void _IAsmRefPlanesAuto::PutVisible ( VARIANT_BOOL pbVisible );
__declspec(implementation_key(2025)) AsmRefPlanePtr _IAsmRefPlanesAuto::AddTangentToCylinderOrConeAtAngleEx ( IDispatch * Face, IDispatch * ParentPlane, double AngleOfRotation, double XAxisAngle, enum TGPart::FeaturePropertyConstants ExtentSide, enum TGPart::ReferenceElementConstants normalOrientation, const _variant_t & Local );
__declspec(implementation_key(2026)) AsmRefPlanePtr _IAsmRefPlanesAuto::AddTangentToCylinderOrConeAtKeyPointEx ( IDispatch * Face, IDispatch * ParentPlane, IDispatch * Keypoint, enum TGFramework::KeyPointType KeyPointTypeConstant, double XAxisAngle, enum TGPart::FeaturePropertyConstants ExtentSide, enum TGPart::ReferenceElementConstants normalOrientation, const _variant_t & Local );
__declspec(implementation_key(2027)) AsmRefPlanePtr _IAsmRefPlanesAuto::AddTangentToCurvedSurfaceAtKeyPointEx ( IDispatch * Face, IDispatch * ParentPlane, IDispatch * Keypoint, enum TGFramework::KeyPointType KeyPointTypeConstant, double XAxisAngle, enum TGPart::ReferenceElementConstants normalOrientation, const _variant_t & Local );
__declspec(implementation_key(2028)) AsmRefPlanePtr _IAsmRefPlanesAuto::AddParallelByDistanceEx ( IDispatch * ParentPlane, double Distance, const _variant_t & NormalSide, const _variant_t & Pivot, const _variant_t & PivotOrigin, const _variant_t & Local );
__declspec(implementation_key(2029)) AsmRefPlanePtr _IAsmRefPlanesAuto::AddAngularByAngleEx ( IDispatch * ParentPlane, double Angle, IDispatch * Pivot, enum TGPart::ReferenceElementConstants PivotOrigin, const _variant_t & NormalSide, const _variant_t & Local );
__declspec(implementation_key(2030)) AsmRefPlanePtr _IAsmRefPlanesAuto::AddBy3PointsEx ( IDispatch * RootPoint, IDispatch * SecondXAxisPoint, IDispatch * ThirdPoint, const _variant_t & Local );
__declspec(implementation_key(2031)) AsmRefPlanePtr _IAsmRefPlanesAuto::AddNormalToCurveAtDistanceAlongCurveEx ( IDispatch * Parent, IDispatch * OrientationPlane, double Distance, double XAxisRotation, enum TGPart::ReferenceElementConstants normalOrientation, enum TGPart::ReferenceElementConstants distanceOrigin, const _variant_t & Local );
__declspec(implementation_key(2032)) AsmRefPlanePtr _IAsmRefPlanesAuto::AddNormalToCurveAtArcLengthRatioEx ( IDispatch * Parent, IDispatch * OrientationPlane, double ArcLengthRatio, double XAxisRotation, enum TGPart::ReferenceElementConstants normalOrientation, enum TGPart::ReferenceElementConstants arcLengthRatioOrigin, const _variant_t & Local );
__declspec(implementation_key(2033)) AsmRefPlanePtr _IAsmRefPlanesAuto::AddNormalToCurveAtKeyPointEx ( IDispatch * Parent, IDispatch * OrientationPlane, IDispatch * Keypoint, double XAxisRotation, enum TGPart::ReferenceElementConstants normalOrientation, enum TGPart::ReferenceElementConstants selectedCurveEnd, const _variant_t & Local );
__declspec(implementation_key(2034)) TGFramework::ApplicationPtr _IAsmRefPlaneAuto::GetApplication ( );
__declspec(implementation_key(2035)) IDispatchPtr _IAsmRefPlaneAuto::GetParent ( );
__declspec(implementation_key(2036)) _bstr_t _IAsmRefPlaneAuto::GetName ( );
__declspec(implementation_key(2037)) void _IAsmRefPlaneAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(2038)) HRESULT _IAsmRefPlaneAuto::GetNormal ( SAFEARRAY * * Normal );
__declspec(implementation_key(2039)) HRESULT _IAsmRefPlaneAuto::GetRootPoint ( SAFEARRAY * * RootPoint );
__declspec(implementation_key(2040)) HRESULT _IAsmRefPlaneAuto::GetReferenceDirection ( SAFEARRAY * * RefDir );
__declspec(implementation_key(2041)) VARIANT_BOOL _IAsmRefPlaneAuto::GetGlobal ( );
__declspec(implementation_key(2042)) void _IAsmRefPlaneAuto::PutVisible ( VARIANT_BOOL Visible );
__declspec(implementation_key(2043)) VARIANT_BOOL _IAsmRefPlaneAuto::GetVisible ( );
__declspec(implementation_key(2044)) enum TGFramework::ObjectType _IAsmRefPlaneAuto::GetType ( );
__declspec(implementation_key(2045)) HRESULT _IAsmRefPlaneAuto::ResizeRefPlaneByDirDist ( VARIANT_BOOL bAlongX, int idx, double dist );
__declspec(implementation_key(2046)) HRESULT _IAsmRefPlaneAuto::AutoResizeRefPlane ( );
__declspec(implementation_key(2047)) enum TGPart::FeatureStatusConstants _IAsmRefPlaneAuto::GetStatus ( VARIANT * Description );
__declspec(implementation_key(2048)) IDispatchPtr _IAsmRefPlaneAuto::GetAttributeSets ( );
__declspec(implementation_key(2049)) VARIANT_BOOL _IAsmRefPlaneAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(2050)) HRESULT _IAsmRefPlaneAuto::Delete ( );
__declspec(implementation_key(2051)) SAFEARRAY * _IAsmRefPlaneAuto::GetParentRelations ( );
__declspec(implementation_key(2052)) double _IAsmRefPlaneAuto::GetTangentAngle ( );
__declspec(implementation_key(2053)) void _IAsmRefPlaneAuto::PutTangentAngle ( double dAngle );
__declspec(implementation_key(2054)) LayoutPtr Layouts::Item ( const _variant_t & Index );
__declspec(implementation_key(2055)) TGFramework::ApplicationPtr Layouts::GetApplication ( );
__declspec(implementation_key(2056)) IDispatchPtr Layouts::GetParent ( );
__declspec(implementation_key(2057)) long Layouts::GetCount ( );
__declspec(implementation_key(2058)) LayoutPtr Layouts::Add ( struct AsmRefPlane * AsmRefPlane, const _variant_t & ReturnExisting, VARIANT * Status );
__declspec(implementation_key(2059)) LayoutPtr Layouts::AddByTearOff ( SAFEARRAY * * ProfileCurveBodyEdges, IDispatch * TearOffSketchPlane, VARIANT_BOOL bAssociative, VARIANT_BOOL bCopy, VARIANT * Status );
__declspec(implementation_key(2060)) VARIANT_BOOL Layouts::GetVisible ( );
__declspec(implementation_key(2061)) void Layouts::PutVisible ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2062)) TGFramework::ApplicationPtr Layout::GetApplication ( );
__declspec(implementation_key(2063)) HRESULT Layout::Delete ( );
__declspec(implementation_key(2064)) IDispatchPtr Layout::GetParent ( );
__declspec(implementation_key(2065)) IDispatchPtr Layout::GetProfile ( );
__declspec(implementation_key(2066)) _bstr_t Layout::GetName ( );
__declspec(implementation_key(2067)) void Layout::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(2068)) AsmRefPlanePtr Layout::GetRefPlane ( );
__declspec(implementation_key(2069)) enum TGFramework::ObjectType Layout::GetType ( );
__declspec(implementation_key(2070)) IDispatchPtr Layout::GetAttributeSets ( );
__declspec(implementation_key(2071)) VARIANT_BOOL Layout::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(2072)) VARIANT_BOOL Layout::GetShowSketchColors ( );
__declspec(implementation_key(2073)) void Layout::PutShowSketchColors ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2074)) _bstr_t Layout::GetStyle ( );
__declspec(implementation_key(2075)) void Layout::PutStyle ( _bstr_t _arg1 );
__declspec(implementation_key(2076)) enum TGPart::FeatureStatusConstants Layout::GetStatus ( VARIANT * Description );
__declspec(implementation_key(2077)) LayoutPtr _ILayoutsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(2078)) IUnknownPtr _ILayoutsAuto::Get_NewEnum ( );
__declspec(implementation_key(2079)) TGFramework::ApplicationPtr _ILayoutsAuto::GetApplication ( );
__declspec(implementation_key(2080)) IDispatchPtr _ILayoutsAuto::GetParent ( );
__declspec(implementation_key(2081)) long _ILayoutsAuto::GetCount ( );
__declspec(implementation_key(2082)) LayoutPtr _ILayoutsAuto::Add ( struct AsmRefPlane * AsmRefPlane, const _variant_t & ReturnExisting, VARIANT * Status );
__declspec(implementation_key(2083)) LayoutPtr _ILayoutsAuto::AddByTearOff ( SAFEARRAY * * ProfileCurveBodyEdges, IDispatch * TearOffSketchPlane, VARIANT_BOOL bAssociative, VARIANT_BOOL bCopy, VARIANT * Status );
__declspec(implementation_key(2084)) VARIANT_BOOL _ILayoutsAuto::GetVisible ( );
__declspec(implementation_key(2085)) void _ILayoutsAuto::PutVisible ( VARIANT_BOOL pbVisible );
__declspec(implementation_key(2086)) TGFramework::ApplicationPtr _ILayoutAuto::GetApplication ( );
__declspec(implementation_key(2087)) HRESULT _ILayoutAuto::Delete ( );
__declspec(implementation_key(2088)) IDispatchPtr _ILayoutAuto::GetParent ( );
__declspec(implementation_key(2089)) IDispatchPtr _ILayoutAuto::GetProfile ( );
__declspec(implementation_key(2090)) _bstr_t _ILayoutAuto::GetName ( );
__declspec(implementation_key(2091)) void _ILayoutAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(2092)) AsmRefPlanePtr _ILayoutAuto::GetRefPlane ( );
__declspec(implementation_key(2093)) enum TGFramework::ObjectType _ILayoutAuto::GetType ( );
__declspec(implementation_key(2094)) IDispatchPtr _ILayoutAuto::GetAttributeSets ( );
__declspec(implementation_key(2095)) VARIANT_BOOL _ILayoutAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(2096)) VARIANT_BOOL _ILayoutAuto::GetShowSketchColors ( );
__declspec(implementation_key(2097)) void _ILayoutAuto::PutShowSketchColors ( VARIANT_BOOL ShowSketchColors );
__declspec(implementation_key(2098)) _bstr_t _ILayoutAuto::GetStyle ( );
__declspec(implementation_key(2099)) void _ILayoutAuto::PutStyle ( _bstr_t Style );
__declspec(implementation_key(2100)) enum TGPart::FeatureStatusConstants _ILayoutAuto::GetStatus ( VARIANT * Description );
__declspec(implementation_key(2101)) LineSegmentPtr LineSegments::Item ( const _variant_t & Index );
__declspec(implementation_key(2102)) TGFramework::ApplicationPtr LineSegments::GetApplication ( );
__declspec(implementation_key(2103)) long LineSegments::GetCount ( );
__declspec(implementation_key(2104)) IDispatchPtr LineSegments::GetParent ( );
__declspec(implementation_key(2105)) LineSegmentPtr LineSegments::Add ( SAFEARRAY * * StartPoint, SAFEARRAY * * EndPoint );
__declspec(implementation_key(2106)) TGFramework::ApplicationPtr LineSegment::GetApplication ( );
__declspec(implementation_key(2107)) IDispatchPtr LineSegment::GetParent ( );
__declspec(implementation_key(2108)) IDispatchPtr LineSegment::GetAttributeSets ( );
__declspec(implementation_key(2109)) VARIANT_BOOL LineSegment::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(2110)) HRESULT LineSegment::GetStartPoint ( double * x, double * y, double * z );
__declspec(implementation_key(2111)) HRESULT LineSegment::GetEndPoint ( double * x, double * y, double * z );
__declspec(implementation_key(2112)) HRESULT LineSegment::SetStartPoint ( double * x, double * y, double * z );
__declspec(implementation_key(2113)) HRESULT LineSegment::SetEndPoint ( double * x, double * y, double * z );
__declspec(implementation_key(2114)) enum TGFramework::ObjectType LineSegment::GetType ( );
__declspec(implementation_key(2115)) HRESULT LineSegment::SplitAtPoint ( double x, double y, double z, VARIANT * OtherSplitElement );
__declspec(implementation_key(2116)) LineSegmentPtr _ILineSegmentsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(2117)) IUnknownPtr _ILineSegmentsAuto::Get_NewEnum ( );
__declspec(implementation_key(2118)) TGFramework::ApplicationPtr _ILineSegmentsAuto::GetApplication ( );
__declspec(implementation_key(2119)) long _ILineSegmentsAuto::GetCount ( );
__declspec(implementation_key(2120)) IDispatchPtr _ILineSegmentsAuto::GetParent ( );
__declspec(implementation_key(2121)) LineSegmentPtr _ILineSegmentsAuto::Add ( SAFEARRAY * * StartPoint, SAFEARRAY * * EndPoint );
__declspec(implementation_key(2122)) TGFramework::ApplicationPtr _ILineSegmentAuto::GetApplication ( );
__declspec(implementation_key(2123)) IDispatchPtr _ILineSegmentAuto::GetParent ( );
__declspec(implementation_key(2124)) IDispatchPtr _ILineSegmentAuto::GetAttributeSets ( );
__declspec(implementation_key(2125)) VARIANT_BOOL _ILineSegmentAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(2126)) HRESULT _ILineSegmentAuto::GetStartPoint ( double * x, double * y, double * z );
__declspec(implementation_key(2127)) HRESULT _ILineSegmentAuto::GetEndPoint ( double * x, double * y, double * z );
__declspec(implementation_key(2128)) HRESULT _ILineSegmentAuto::SetStartPoint ( double * x, double * y, double * z );
__declspec(implementation_key(2129)) HRESULT _ILineSegmentAuto::SetEndPoint ( double * x, double * y, double * z );
__declspec(implementation_key(2130)) enum TGFramework::ObjectType _ILineSegmentAuto::GetType ( );
__declspec(implementation_key(2131)) HRESULT _ILineSegmentAuto::SplitAtPoint ( double x, double y, double z, VARIANT * OtherSplitElement );
__declspec(implementation_key(2132)) IDispatchPtr Segments::Item ( const _variant_t & Index );
__declspec(implementation_key(2133)) TGFramework::ApplicationPtr Segments::GetApplication ( );
__declspec(implementation_key(2134)) long Segments::GetCount ( );
__declspec(implementation_key(2135)) IDispatchPtr Segments::GetParent ( );
__declspec(implementation_key(2136)) IDispatchPtr _ISegmentsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(2137)) IUnknownPtr _ISegmentsAuto::Get_NewEnum ( );
__declspec(implementation_key(2138)) TGFramework::ApplicationPtr _ISegmentsAuto::GetApplication ( );
__declspec(implementation_key(2139)) long _ISegmentsAuto::GetCount ( );
__declspec(implementation_key(2140)) IDispatchPtr _ISegmentsAuto::GetParent ( );
__declspec(implementation_key(2141)) TGFramework::ApplicationPtr ArcSegments::GetApplication ( );
__declspec(implementation_key(2142)) IDispatchPtr ArcSegments::GetParent ( );
__declspec(implementation_key(2143)) ArcSegmentPtr ArcSegments::Item ( const _variant_t & Index );
__declspec(implementation_key(2144)) long ArcSegments::GetCount ( );
__declspec(implementation_key(2145)) ArcSegmentPtr ArcSegments::Add ( SAFEARRAY * * StartPoint, SAFEARRAY * * EndPoint, SAFEARRAY * * PlanePoint );
__declspec(implementation_key(2146)) TGFramework::ApplicationPtr ArcSegment::GetApplication ( );
__declspec(implementation_key(2147)) IDispatchPtr ArcSegment::GetParent ( );
__declspec(implementation_key(2148)) IDispatchPtr ArcSegment::GetAttributeSets ( );
__declspec(implementation_key(2149)) VARIANT_BOOL ArcSegment::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(2150)) enum TGFramework::ObjectType ArcSegment::GetType ( );
__declspec(implementation_key(2151)) HRESULT ArcSegment::GetStartPoint ( double * x, double * y, double * z );
__declspec(implementation_key(2152)) HRESULT ArcSegment::SetStartPoint ( double x, double y, double z );
__declspec(implementation_key(2153)) HRESULT ArcSegment::GetEndPoint ( double * x, double * y, double * z );
__declspec(implementation_key(2154)) HRESULT ArcSegment::SetEndPoint ( double x, double y, double z );
__declspec(implementation_key(2155)) double ArcSegment::GetRadius ( );
__declspec(implementation_key(2156)) void ArcSegment::PutRadius ( double _arg1 );
__declspec(implementation_key(2157)) double ArcSegment::GetSweepAngle ( );
__declspec(implementation_key(2158)) void ArcSegment::PutSweepAngle ( double _arg1 );
__declspec(implementation_key(2159)) TGFramework::ApplicationPtr _IArcSegmentsAuto::GetApplication ( );
__declspec(implementation_key(2160)) IDispatchPtr _IArcSegmentsAuto::GetParent ( );
__declspec(implementation_key(2161)) ArcSegmentPtr _IArcSegmentsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(2162)) IUnknownPtr _IArcSegmentsAuto::Get_NewEnum ( );
__declspec(implementation_key(2163)) long _IArcSegmentsAuto::GetCount ( );
__declspec(implementation_key(2164)) ArcSegmentPtr _IArcSegmentsAuto::Add ( SAFEARRAY * * StartPoint, SAFEARRAY * * EndPoint, SAFEARRAY * * PlanePoint );
__declspec(implementation_key(2165)) TGFramework::ApplicationPtr _IArcSegmentAuto::GetApplication ( );
__declspec(implementation_key(2166)) IDispatchPtr _IArcSegmentAuto::GetParent ( );
__declspec(implementation_key(2167)) IDispatchPtr _IArcSegmentAuto::GetAttributeSets ( );
__declspec(implementation_key(2168)) VARIANT_BOOL _IArcSegmentAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(2169)) enum TGFramework::ObjectType _IArcSegmentAuto::GetType ( );
__declspec(implementation_key(2170)) HRESULT _IArcSegmentAuto::GetStartPoint ( double * x, double * y, double * z );
__declspec(implementation_key(2171)) HRESULT _IArcSegmentAuto::SetStartPoint ( double x, double y, double z );
__declspec(implementation_key(2172)) HRESULT _IArcSegmentAuto::GetEndPoint ( double * x, double * y, double * z );
__declspec(implementation_key(2173)) HRESULT _IArcSegmentAuto::SetEndPoint ( double x, double y, double z );
__declspec(implementation_key(2174)) double _IArcSegmentAuto::GetRadius ( );
__declspec(implementation_key(2175)) void _IArcSegmentAuto::PutRadius ( double Radius );
__declspec(implementation_key(2176)) double _IArcSegmentAuto::GetSweepAngle ( );
__declspec(implementation_key(2177)) void _IArcSegmentAuto::PutSweepAngle ( double SweepAngle );
__declspec(implementation_key(2178)) IDispatchPtr SegmentRelations3d::GetApplication ( );
__declspec(implementation_key(2179)) long SegmentRelations3d::GetCount ( );
__declspec(implementation_key(2180)) IDispatchPtr SegmentRelations3d::GetParent ( );
__declspec(implementation_key(2181)) IDispatchPtr SegmentRelations3d::Item ( const _variant_t & Index );
__declspec(implementation_key(2182)) SegmentDirectionRelation3dPtr SegmentRelations3d::AddSegmentDirection ( IDispatch * Element1, enum SegmentRelation3dGeometryConstants SegmentGeometryType1, IDispatch * Element2, enum SegmentRelation3dGeometryConstants SegmentGeometryType2, enum SegmentRelation3dDirectionConstants SegmentDirectionType );
__declspec(implementation_key(2183)) SegmentDistanceRelation3dPtr SegmentRelations3d::AddSegmentDistance ( IDispatch * Element1, enum SegmentRelation3dGeometryConstants SegmentGeometryType1, IDispatch * Element2, enum SegmentRelation3dGeometryConstants SegmentGeometryType2, IDispatch * RefPlane, enum SegmentRelation3dDistanceConstants SegmentDistanceType, double Distance );
__declspec(implementation_key(2184)) SegmentRadiusRelation3dPtr SegmentRelations3d::AddSegmentRadius ( IDispatch * Element, double Radius );
__declspec(implementation_key(2185)) SegmentAngularRelation3dPtr SegmentRelations3d::AddSegmentAngular ( IDispatch * Element1, enum SegmentRelation3dGeometryConstants SegmentGeometryType1, IDispatch * Element2, enum SegmentRelation3dGeometryConstants SegmentGeometryType2, double Angle, VARIANT_BOOL vbSegAngleFromPositiveDir, VARIANT_BOOL vbSegAngleToPositiveDir, VARIANT_BOOL vbSegAngleCCW );
__declspec(implementation_key(2186)) SegmentPointRelation3dPtr SegmentRelations3d::AddSegmentPoint ( IDispatch * Element1, enum SegmentRelation3dGeometryConstants SegmentGeometryType1, IDispatch * Element2, enum SegmentRelation3dGeometryConstants SegmentGeometryType2 );
__declspec(implementation_key(2187)) SegmentTangentRelation3dPtr SegmentRelations3d::AddSegmentTangent ( IDispatch * Element1, IDispatch * Element2 );
__declspec(implementation_key(2188)) IDispatchPtr SegmentDirectionRelation3d::GetApplication ( );
__declspec(implementation_key(2189)) IDispatchPtr SegmentDirectionRelation3d::GetParent ( );
__declspec(implementation_key(2190)) HRESULT SegmentDirectionRelation3d::Delete ( );
__declspec(implementation_key(2191)) long SegmentDirectionRelation3d::GetIndex ( );
__declspec(implementation_key(2192)) enum TGFramework::ObjectType SegmentDirectionRelation3d::GetType ( );
__declspec(implementation_key(2193)) HRESULT SegmentDirectionRelation3d::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(2194)) enum SegmentRelation3dStatusConstants SegmentDirectionRelation3d::GetStatus ( );
__declspec(implementation_key(2195)) HRESULT SegmentDirectionRelation3d::GetElement1 ( IDispatch * * Element1, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType );
__declspec(implementation_key(2196)) HRESULT SegmentDirectionRelation3d::GetElement2 ( IDispatch * * Element2, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType );
__declspec(implementation_key(2197)) enum SegmentRelation3dDirectionConstants SegmentDirectionRelation3d::GetDirectionType ( );
__declspec(implementation_key(2198)) IDispatchPtr SegmentDirectionRelation3d::GetAttributeSets ( );
__declspec(implementation_key(2199)) VARIANT_BOOL SegmentDirectionRelation3d::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(2200)) IDispatchPtr _ISegmentDirectionRelation3dAuto::GetApplication ( );
__declspec(implementation_key(2201)) IDispatchPtr _ISegmentDirectionRelation3dAuto::GetParent ( );
__declspec(implementation_key(2202)) HRESULT _ISegmentDirectionRelation3dAuto::Delete ( );
__declspec(implementation_key(2203)) long _ISegmentDirectionRelation3dAuto::GetIndex ( );
__declspec(implementation_key(2204)) enum TGFramework::ObjectType _ISegmentDirectionRelation3dAuto::GetType ( );
__declspec(implementation_key(2205)) HRESULT _ISegmentDirectionRelation3dAuto::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(2206)) enum SegmentRelation3dStatusConstants _ISegmentDirectionRelation3dAuto::GetStatus ( );
__declspec(implementation_key(2207)) HRESULT _ISegmentDirectionRelation3dAuto::GetElement1 ( IDispatch * * Element1, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType );
__declspec(implementation_key(2208)) HRESULT _ISegmentDirectionRelation3dAuto::GetElement2 ( IDispatch * * Element2, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType );
__declspec(implementation_key(2209)) enum SegmentRelation3dDirectionConstants _ISegmentDirectionRelation3dAuto::GetDirectionType ( );
__declspec(implementation_key(2210)) IDispatchPtr _ISegmentDirectionRelation3dAuto::GetAttributeSets ( );
__declspec(implementation_key(2211)) VARIANT_BOOL _ISegmentDirectionRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(2212)) IDispatchPtr SegmentDistanceRelation3d::GetApplication ( );
__declspec(implementation_key(2213)) IDispatchPtr SegmentDistanceRelation3d::GetParent ( );
__declspec(implementation_key(2214)) HRESULT SegmentDistanceRelation3d::Delete ( );
__declspec(implementation_key(2215)) long SegmentDistanceRelation3d::GetIndex ( );
__declspec(implementation_key(2216)) enum TGFramework::ObjectType SegmentDistanceRelation3d::GetType ( );
__declspec(implementation_key(2217)) HRESULT SegmentDistanceRelation3d::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(2218)) enum SegmentRelation3dStatusConstants SegmentDistanceRelation3d::GetStatus ( );
__declspec(implementation_key(2219)) double SegmentDistanceRelation3d::GetDistance ( );
__declspec(implementation_key(2220)) void SegmentDistanceRelation3d::PutDistance ( double _arg1 );
__declspec(implementation_key(2221)) IDispatchPtr SegmentDistanceRelation3d::GetAttributeSets ( );
__declspec(implementation_key(2222)) VARIANT_BOOL SegmentDistanceRelation3d::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(2223)) HRESULT SegmentDistanceRelation3d::GetElement1 ( IDispatch * * Element1, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType );
__declspec(implementation_key(2224)) HRESULT SegmentDistanceRelation3d::GetElement2 ( IDispatch * * Element2, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType );
__declspec(implementation_key(2225)) HRESULT SegmentDistanceRelation3d::GetElement3 ( IDispatch * * Element3, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType );
__declspec(implementation_key(2226)) enum SegmentRelation3dDistanceConstants SegmentDistanceRelation3d::GetDistanceType ( );
__declspec(implementation_key(2227)) IDispatchPtr SegmentDistanceRelation3d::GetDimension ( );
__declspec(implementation_key(2228)) IDispatchPtr _ISegmentDistanceRelation3dAuto::GetApplication ( );
__declspec(implementation_key(2229)) IDispatchPtr _ISegmentDistanceRelation3dAuto::GetParent ( );
__declspec(implementation_key(2230)) HRESULT _ISegmentDistanceRelation3dAuto::Delete ( );
__declspec(implementation_key(2231)) long _ISegmentDistanceRelation3dAuto::GetIndex ( );
__declspec(implementation_key(2232)) enum TGFramework::ObjectType _ISegmentDistanceRelation3dAuto::GetType ( );
__declspec(implementation_key(2233)) HRESULT _ISegmentDistanceRelation3dAuto::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(2234)) enum SegmentRelation3dStatusConstants _ISegmentDistanceRelation3dAuto::GetStatus ( );
__declspec(implementation_key(2235)) double _ISegmentDistanceRelation3dAuto::GetDistance ( );
__declspec(implementation_key(2236)) void _ISegmentDistanceRelation3dAuto::PutDistance ( double Distance );
__declspec(implementation_key(2237)) IDispatchPtr _ISegmentDistanceRelation3dAuto::GetAttributeSets ( );
__declspec(implementation_key(2238)) VARIANT_BOOL _ISegmentDistanceRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(2239)) HRESULT _ISegmentDistanceRelation3dAuto::GetElement1 ( IDispatch * * Element1, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType );
__declspec(implementation_key(2240)) HRESULT _ISegmentDistanceRelation3dAuto::GetElement2 ( IDispatch * * Element2, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType );
__declspec(implementation_key(2241)) HRESULT _ISegmentDistanceRelation3dAuto::GetElement3 ( IDispatch * * Element3, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType );
__declspec(implementation_key(2242)) enum SegmentRelation3dDistanceConstants _ISegmentDistanceRelation3dAuto::GetDistanceType ( );
__declspec(implementation_key(2243)) IDispatchPtr _ISegmentDistanceRelation3dAuto::GetDimension ( );
__declspec(implementation_key(2244)) IDispatchPtr SegmentRadiusRelation3d::GetApplication ( );
__declspec(implementation_key(2245)) IDispatchPtr SegmentRadiusRelation3d::GetParent ( );
__declspec(implementation_key(2246)) HRESULT SegmentRadiusRelation3d::Delete ( );
__declspec(implementation_key(2247)) long SegmentRadiusRelation3d::GetIndex ( );
__declspec(implementation_key(2248)) enum TGFramework::ObjectType SegmentRadiusRelation3d::GetType ( );
__declspec(implementation_key(2249)) HRESULT SegmentRadiusRelation3d::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(2250)) enum SegmentRelation3dStatusConstants SegmentRadiusRelation3d::GetStatus ( );
__declspec(implementation_key(2251)) double SegmentRadiusRelation3d::GetRadius ( );
__declspec(implementation_key(2252)) void SegmentRadiusRelation3d::PutRadius ( double _arg1 );
__declspec(implementation_key(2253)) ArcSegmentPtr SegmentRadiusRelation3d::GetArcSegment ( );
__declspec(implementation_key(2254)) IDispatchPtr SegmentRadiusRelation3d::GetAttributeSets ( );
__declspec(implementation_key(2255)) VARIANT_BOOL SegmentRadiusRelation3d::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(2256)) HRESULT SegmentRadiusRelation3d::GetElement1 ( IDispatch * * Element1, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType );
__declspec(implementation_key(2257)) IDispatchPtr SegmentRadiusRelation3d::GetDimension ( );
__declspec(implementation_key(2258)) IDispatchPtr _ISegmentRadiusRelation3dAuto::GetApplication ( );
__declspec(implementation_key(2259)) IDispatchPtr _ISegmentRadiusRelation3dAuto::GetParent ( );
__declspec(implementation_key(2260)) HRESULT _ISegmentRadiusRelation3dAuto::Delete ( );
__declspec(implementation_key(2261)) long _ISegmentRadiusRelation3dAuto::GetIndex ( );
__declspec(implementation_key(2262)) enum TGFramework::ObjectType _ISegmentRadiusRelation3dAuto::GetType ( );
__declspec(implementation_key(2263)) HRESULT _ISegmentRadiusRelation3dAuto::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(2264)) enum SegmentRelation3dStatusConstants _ISegmentRadiusRelation3dAuto::GetStatus ( );
__declspec(implementation_key(2265)) double _ISegmentRadiusRelation3dAuto::GetRadius ( );
__declspec(implementation_key(2266)) void _ISegmentRadiusRelation3dAuto::PutRadius ( double Radius );
__declspec(implementation_key(2267)) ArcSegmentPtr _ISegmentRadiusRelation3dAuto::GetArcSegment ( );
__declspec(implementation_key(2268)) IDispatchPtr _ISegmentRadiusRelation3dAuto::GetAttributeSets ( );
__declspec(implementation_key(2269)) VARIANT_BOOL _ISegmentRadiusRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(2270)) HRESULT _ISegmentRadiusRelation3dAuto::GetElement1 ( IDispatch * * Element1, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType );
__declspec(implementation_key(2271)) IDispatchPtr _ISegmentRadiusRelation3dAuto::GetDimension ( );
__declspec(implementation_key(2272)) IDispatchPtr SegmentAngularRelation3d::GetApplication ( );
__declspec(implementation_key(2273)) IDispatchPtr SegmentAngularRelation3d::GetParent ( );
__declspec(implementation_key(2274)) HRESULT SegmentAngularRelation3d::Delete ( );
__declspec(implementation_key(2275)) long SegmentAngularRelation3d::GetIndex ( );
__declspec(implementation_key(2276)) enum TGFramework::ObjectType SegmentAngularRelation3d::GetType ( );
__declspec(implementation_key(2277)) HRESULT SegmentAngularRelation3d::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(2278)) enum SegmentRelation3dStatusConstants SegmentAngularRelation3d::GetStatus ( );
__declspec(implementation_key(2279)) double SegmentAngularRelation3d::GetAngle ( );
__declspec(implementation_key(2280)) void SegmentAngularRelation3d::PutAngle ( double _arg1 );
__declspec(implementation_key(2281)) IDispatchPtr SegmentAngularRelation3d::GetAttributeSets ( );
__declspec(implementation_key(2282)) VARIANT_BOOL SegmentAngularRelation3d::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(2283)) HRESULT SegmentAngularRelation3d::GetElement1 ( IDispatch * * Element1, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType );
__declspec(implementation_key(2284)) HRESULT SegmentAngularRelation3d::GetElement2 ( IDispatch * * Element2, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType );
__declspec(implementation_key(2285)) VARIANT_BOOL SegmentAngularRelation3d::GetAngleFromPositiveDirection ( );
__declspec(implementation_key(2286)) VARIANT_BOOL SegmentAngularRelation3d::GetAngleToPositiveDirection ( );
__declspec(implementation_key(2287)) VARIANT_BOOL SegmentAngularRelation3d::GetAngleCounterclockwise ( );
__declspec(implementation_key(2288)) IDispatchPtr SegmentAngularRelation3d::GetDimension ( );
__declspec(implementation_key(2289)) IDispatchPtr _ISegmentAngularRelation3dAuto::GetApplication ( );
__declspec(implementation_key(2290)) IDispatchPtr _ISegmentAngularRelation3dAuto::GetParent ( );
__declspec(implementation_key(2291)) HRESULT _ISegmentAngularRelation3dAuto::Delete ( );
__declspec(implementation_key(2292)) long _ISegmentAngularRelation3dAuto::GetIndex ( );
__declspec(implementation_key(2293)) enum TGFramework::ObjectType _ISegmentAngularRelation3dAuto::GetType ( );
__declspec(implementation_key(2294)) HRESULT _ISegmentAngularRelation3dAuto::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(2295)) enum SegmentRelation3dStatusConstants _ISegmentAngularRelation3dAuto::GetStatus ( );
__declspec(implementation_key(2296)) double _ISegmentAngularRelation3dAuto::GetAngle ( );
__declspec(implementation_key(2297)) void _ISegmentAngularRelation3dAuto::PutAngle ( double Angle );
__declspec(implementation_key(2298)) IDispatchPtr _ISegmentAngularRelation3dAuto::GetAttributeSets ( );
__declspec(implementation_key(2299)) VARIANT_BOOL _ISegmentAngularRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(2300)) HRESULT _ISegmentAngularRelation3dAuto::GetElement1 ( IDispatch * * Element1, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType );
__declspec(implementation_key(2301)) HRESULT _ISegmentAngularRelation3dAuto::GetElement2 ( IDispatch * * Element2, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType );
__declspec(implementation_key(2302)) VARIANT_BOOL _ISegmentAngularRelation3dAuto::GetAngleFromPositiveDirection ( );
__declspec(implementation_key(2303)) VARIANT_BOOL _ISegmentAngularRelation3dAuto::GetAngleToPositiveDirection ( );
__declspec(implementation_key(2304)) VARIANT_BOOL _ISegmentAngularRelation3dAuto::GetAngleCounterclockwise ( );
__declspec(implementation_key(2305)) IDispatchPtr _ISegmentAngularRelation3dAuto::GetDimension ( );
__declspec(implementation_key(2306)) IDispatchPtr SegmentPointRelation3d::GetApplication ( );
__declspec(implementation_key(2307)) IDispatchPtr SegmentPointRelation3d::GetParent ( );
__declspec(implementation_key(2308)) HRESULT SegmentPointRelation3d::Delete ( );
__declspec(implementation_key(2309)) long SegmentPointRelation3d::GetIndex ( );
__declspec(implementation_key(2310)) enum TGFramework::ObjectType SegmentPointRelation3d::GetType ( );
__declspec(implementation_key(2311)) HRESULT SegmentPointRelation3d::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(2312)) enum SegmentRelation3dStatusConstants SegmentPointRelation3d::GetStatus ( );
__declspec(implementation_key(2313)) IDispatchPtr SegmentPointRelation3d::GetAttributeSets ( );
__declspec(implementation_key(2314)) VARIANT_BOOL SegmentPointRelation3d::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(2315)) HRESULT SegmentPointRelation3d::GetElement1 ( IDispatch * * Element1, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType );
__declspec(implementation_key(2316)) HRESULT SegmentPointRelation3d::GetElement2 ( IDispatch * * Element2, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType );
__declspec(implementation_key(2317)) IDispatchPtr _ISegmentPointRelation3dAuto::GetApplication ( );
__declspec(implementation_key(2318)) IDispatchPtr _ISegmentPointRelation3dAuto::GetParent ( );
__declspec(implementation_key(2319)) HRESULT _ISegmentPointRelation3dAuto::Delete ( );
__declspec(implementation_key(2320)) long _ISegmentPointRelation3dAuto::GetIndex ( );
__declspec(implementation_key(2321)) enum TGFramework::ObjectType _ISegmentPointRelation3dAuto::GetType ( );
__declspec(implementation_key(2322)) HRESULT _ISegmentPointRelation3dAuto::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(2323)) enum SegmentRelation3dStatusConstants _ISegmentPointRelation3dAuto::GetStatus ( );
__declspec(implementation_key(2324)) IDispatchPtr _ISegmentPointRelation3dAuto::GetAttributeSets ( );
__declspec(implementation_key(2325)) VARIANT_BOOL _ISegmentPointRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(2326)) HRESULT _ISegmentPointRelation3dAuto::GetElement1 ( IDispatch * * Element1, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType );
__declspec(implementation_key(2327)) HRESULT _ISegmentPointRelation3dAuto::GetElement2 ( IDispatch * * Element2, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType );
__declspec(implementation_key(2328)) IDispatchPtr SegmentTangentRelation3d::GetApplication ( );
__declspec(implementation_key(2329)) IDispatchPtr SegmentTangentRelation3d::GetParent ( );
__declspec(implementation_key(2330)) HRESULT SegmentTangentRelation3d::Delete ( );
__declspec(implementation_key(2331)) long SegmentTangentRelation3d::GetIndex ( );
__declspec(implementation_key(2332)) enum TGFramework::ObjectType SegmentTangentRelation3d::GetType ( );
__declspec(implementation_key(2333)) HRESULT SegmentTangentRelation3d::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(2334)) enum SegmentRelation3dStatusConstants SegmentTangentRelation3d::GetStatus ( );
__declspec(implementation_key(2335)) IDispatchPtr SegmentTangentRelation3d::GetAttributeSets ( );
__declspec(implementation_key(2336)) VARIANT_BOOL SegmentTangentRelation3d::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(2337)) HRESULT SegmentTangentRelation3d::GetElement1 ( IDispatch * * Element1, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType );
__declspec(implementation_key(2338)) HRESULT SegmentTangentRelation3d::GetElement2 ( IDispatch * * Element2, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType );
__declspec(implementation_key(2339)) IDispatchPtr _ISegmentRelations3dAuto::GetApplication ( );
__declspec(implementation_key(2340)) long _ISegmentRelations3dAuto::GetCount ( );
__declspec(implementation_key(2341)) IDispatchPtr _ISegmentRelations3dAuto::GetParent ( );
__declspec(implementation_key(2342)) IDispatchPtr _ISegmentRelations3dAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(2343)) IUnknownPtr _ISegmentRelations3dAuto::Get_NewEnum ( );
__declspec(implementation_key(2344)) SegmentDirectionRelation3dPtr _ISegmentRelations3dAuto::AddSegmentDirection ( IDispatch * Element1, enum SegmentRelation3dGeometryConstants SegmentGeometryType1, IDispatch * Element2, enum SegmentRelation3dGeometryConstants SegmentGeometryType2, enum SegmentRelation3dDirectionConstants SegmentDirectionType );
__declspec(implementation_key(2345)) SegmentDistanceRelation3dPtr _ISegmentRelations3dAuto::AddSegmentDistance ( IDispatch * Element1, enum SegmentRelation3dGeometryConstants SegmentGeometryType1, IDispatch * Element2, enum SegmentRelation3dGeometryConstants SegmentGeometryType2, IDispatch * RefPlane, enum SegmentRelation3dDistanceConstants SegmentDistanceType, double Distance );
__declspec(implementation_key(2346)) SegmentRadiusRelation3dPtr _ISegmentRelations3dAuto::AddSegmentRadius ( IDispatch * Element, double Radius );
__declspec(implementation_key(2347)) SegmentAngularRelation3dPtr _ISegmentRelations3dAuto::AddSegmentAngular ( IDispatch * Element1, enum SegmentRelation3dGeometryConstants SegmentGeometryType1, IDispatch * Element2, enum SegmentRelation3dGeometryConstants SegmentGeometryType2, double Angle, VARIANT_BOOL vbSegAngleFromPositiveDir, VARIANT_BOOL vbSegAngleToPositiveDir, VARIANT_BOOL vbSegAngleCCW );
__declspec(implementation_key(2348)) SegmentPointRelation3dPtr _ISegmentRelations3dAuto::AddSegmentPoint ( IDispatch * Element1, enum SegmentRelation3dGeometryConstants SegmentGeometryType1, IDispatch * Element2, enum SegmentRelation3dGeometryConstants SegmentGeometryType2 );
__declspec(implementation_key(2349)) SegmentTangentRelation3dPtr _ISegmentRelations3dAuto::AddSegmentTangent ( IDispatch * Element1, IDispatch * Element2 );
__declspec(implementation_key(2350)) IDispatchPtr _ISegmentTangentRelation3dAuto::GetApplication ( );
__declspec(implementation_key(2351)) IDispatchPtr _ISegmentTangentRelation3dAuto::GetParent ( );
__declspec(implementation_key(2352)) HRESULT _ISegmentTangentRelation3dAuto::Delete ( );
__declspec(implementation_key(2353)) long _ISegmentTangentRelation3dAuto::GetIndex ( );
__declspec(implementation_key(2354)) enum TGFramework::ObjectType _ISegmentTangentRelation3dAuto::GetType ( );
__declspec(implementation_key(2355)) HRESULT _ISegmentTangentRelation3dAuto::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(2356)) enum SegmentRelation3dStatusConstants _ISegmentTangentRelation3dAuto::GetStatus ( );
__declspec(implementation_key(2357)) IDispatchPtr _ISegmentTangentRelation3dAuto::GetAttributeSets ( );
__declspec(implementation_key(2358)) VARIANT_BOOL _ISegmentTangentRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(2359)) HRESULT _ISegmentTangentRelation3dAuto::GetElement1 ( IDispatch * * Element1, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType );
__declspec(implementation_key(2360)) HRESULT _ISegmentTangentRelation3dAuto::GetElement2 ( IDispatch * * Element2, enum TGFramework::ObjectType * Type, enum SegmentRelation3dGeometryConstants * GeometryType );
__declspec(implementation_key(2361)) TGFramework::ApplicationPtr Queries::GetApplication ( );
__declspec(implementation_key(2362)) IDispatchPtr Queries::GetParent ( );
__declspec(implementation_key(2363)) long Queries::GetCount ( );
__declspec(implementation_key(2364)) QueryPtr Queries::Item ( const _variant_t & Index );
__declspec(implementation_key(2365)) QueryPtr Queries::Add ( _bstr_t QueryName );
__declspec(implementation_key(2366)) HRESULT Queries::Remove ( _bstr_t QueryName );
__declspec(implementation_key(2367)) HRESULT Queries::Rename ( _bstr_t OldQueryName, _bstr_t NewQueryName );
__declspec(implementation_key(2368)) HRESULT Queries::Cut ( _bstr_t QueryName );
__declspec(implementation_key(2369)) QueryPtr Queries::Paste ( _bstr_t QueryName );
__declspec(implementation_key(2370)) _bstr_t Queries::GetQueryName ( struct Query * Query );
__declspec(implementation_key(2371)) QueryPtr Queries::GetQuickQuery ( );
__declspec(implementation_key(2372)) TGFramework::ApplicationPtr Query::GetApplication ( );
__declspec(implementation_key(2373)) IDispatchPtr Query::GetParent ( );
__declspec(implementation_key(2374)) enum QueryScopeConstants Query::GetScope ( );
__declspec(implementation_key(2375)) void Query::PutScope ( enum QueryScopeConstants _arg1 );
__declspec(implementation_key(2376)) VARIANT_BOOL Query::GetSearchSubassemblies ( );
__declspec(implementation_key(2377)) void Query::PutSearchSubassemblies ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2378)) VARIANT_BOOL Query::GetLoadSubassemblies ( );
__declspec(implementation_key(2379)) void Query::PutLoadSubassemblies ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2380)) long Query::GetCriteriaCount ( );
__declspec(implementation_key(2381)) _variant_t Query::GetCriteria ( );
__declspec(implementation_key(2382)) HRESULT Query::AddCriteria ( enum QueryPropertyConstants QueryProperty, _bstr_t CustomPropertyName, enum QueryConditionConstants QueryCondition, const _variant_t & Value );
__declspec(implementation_key(2383)) HRESULT Query::RemoveCriteria ( enum QueryPropertyConstants QueryProperty, _bstr_t CustomPropertyName, enum QueryConditionConstants QueryCondition, const _variant_t & Value );
__declspec(implementation_key(2384)) HRESULT Query::RemoveAllCriteria ( );
__declspec(implementation_key(2385)) long Query::GetMatchesCount ( );
__declspec(implementation_key(2386)) HRESULT Query::CopyToClipboard ( );
__declspec(implementation_key(2387)) HRESULT Query::PopulateFromClipboard ( );
__declspec(implementation_key(2388)) TGFramework::ApplicationPtr _IQueriesAuto::GetApplication ( );
__declspec(implementation_key(2389)) IDispatchPtr _IQueriesAuto::GetParent ( );
__declspec(implementation_key(2390)) long _IQueriesAuto::GetCount ( );
__declspec(implementation_key(2391)) QueryPtr _IQueriesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(2392)) IUnknownPtr _IQueriesAuto::Get_NewEnum ( );
__declspec(implementation_key(2393)) QueryPtr _IQueriesAuto::Add ( _bstr_t QueryName );
__declspec(implementation_key(2394)) HRESULT _IQueriesAuto::Remove ( _bstr_t QueryName );
__declspec(implementation_key(2395)) HRESULT _IQueriesAuto::Rename ( _bstr_t OldQueryName, _bstr_t NewQueryName );
__declspec(implementation_key(2396)) HRESULT _IQueriesAuto::Cut ( _bstr_t QueryName );
__declspec(implementation_key(2397)) QueryPtr _IQueriesAuto::Paste ( _bstr_t QueryName );
__declspec(implementation_key(2398)) _bstr_t _IQueriesAuto::GetQueryName ( struct Query * Query );
__declspec(implementation_key(2399)) QueryPtr _IQueriesAuto::GetQuickQuery ( );
__declspec(implementation_key(2400)) TGFramework::ApplicationPtr _IQueryAuto::GetApplication ( );
__declspec(implementation_key(2401)) IDispatchPtr _IQueryAuto::GetParent ( );
__declspec(implementation_key(2402)) enum QueryScopeConstants _IQueryAuto::GetScope ( );
__declspec(implementation_key(2403)) void _IQueryAuto::PutScope ( enum QueryScopeConstants Scope );
__declspec(implementation_key(2404)) VARIANT_BOOL _IQueryAuto::GetSearchSubassemblies ( );
__declspec(implementation_key(2405)) void _IQueryAuto::PutSearchSubassemblies ( VARIANT_BOOL SearchSubassemblies );
__declspec(implementation_key(2406)) VARIANT_BOOL _IQueryAuto::GetLoadSubassemblies ( );
__declspec(implementation_key(2407)) void _IQueryAuto::PutLoadSubassemblies ( VARIANT_BOOL LoadSubassemblies );
__declspec(implementation_key(2408)) long _IQueryAuto::GetCriteriaCount ( );
__declspec(implementation_key(2409)) _variant_t _IQueryAuto::GetCriteria ( );
__declspec(implementation_key(2410)) HRESULT _IQueryAuto::AddCriteria ( enum QueryPropertyConstants QueryProperty, _bstr_t CustomPropertyName, enum QueryConditionConstants QueryCondition, const _variant_t & Value );
__declspec(implementation_key(2411)) HRESULT _IQueryAuto::RemoveCriteria ( enum QueryPropertyConstants QueryProperty, _bstr_t CustomPropertyName, enum QueryConditionConstants QueryCondition, const _variant_t & Value );
__declspec(implementation_key(2412)) HRESULT _IQueryAuto::RemoveAllCriteria ( );
__declspec(implementation_key(2413)) long _IQueryAuto::GetMatchesCount ( );
__declspec(implementation_key(2414)) HRESULT _IQueryAuto::CopyToClipboard ( );
__declspec(implementation_key(2415)) HRESULT _IQueryAuto::PopulateFromClipboard ( );
__declspec(implementation_key(2416)) TGFramework::ApplicationPtr AssemblyFamilyMembers::GetApplication ( );
__declspec(implementation_key(2417)) IDispatchPtr AssemblyFamilyMembers::GetParent ( );
__declspec(implementation_key(2418)) AssemblyFamilyMemberPtr AssemblyFamilyMembers::Item ( const _variant_t & Index );
__declspec(implementation_key(2419)) long AssemblyFamilyMembers::GetCount ( );
__declspec(implementation_key(2420)) AssemblyFamilyMemberPtr AssemblyFamilyMembers::NewMember ( _bstr_t MemberName );
__declspec(implementation_key(2421)) HRESULT AssemblyFamilyMembers::DeleteMember ( _bstr_t MemberName );
__declspec(implementation_key(2422)) HRESULT AssemblyFamilyMembers::ActivateMember ( _bstr_t MemberName );
__declspec(implementation_key(2423)) HRESULT AssemblyFamilyMembers::SaveMember ( _bstr_t MemberName, _bstr_t FileNameWithPath );
__declspec(implementation_key(2424)) void AssemblyFamilyMembers::PutGlobalEditMode ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2425)) VARIANT_BOOL AssemblyFamilyMembers::GetGlobalEditMode ( );
__declspec(implementation_key(2426)) HRESULT AssemblyFamilyMembers::AddVariable ( IDispatch * Variable );
__declspec(implementation_key(2427)) HRESULT AssemblyFamilyMembers::RemoveVariable ( IDispatch * Variable );
__declspec(implementation_key(2428)) IDispatchPtr AssemblyFamilyMembers::GetVariable ( int Index );
__declspec(implementation_key(2429)) long AssemblyFamilyMembers::GetVariableCount ( );
__declspec(implementation_key(2430)) HRESULT AssemblyFamilyMembers::SaveAllMembers ( VARIANT_BOOL ChangeGeometricVersion );
__declspec(implementation_key(2431)) _bstr_t AssemblyFamilyMembers::GetActiveMember ( );
__declspec(implementation_key(2432)) enum AlternateAssemblyTypeConstants AssemblyFamilyMembers::GetAlternateAssemblyType ( );
__declspec(implementation_key(2433)) HRESULT AssemblyFamilyMembers::RenameMember ( _bstr_t CurrentMemberName, _bstr_t NewMemberName );
__declspec(implementation_key(2434)) _bstr_t AssemblyFamilyMembers::SaveMemberBiDM ( _bstr_t MemberName, _bstr_t FileNameWithPath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title );
__declspec(implementation_key(2435)) HRESULT AssemblyFamilyMembers::SetMembersToPopulate ( long NumMembers, SAFEARRAY * pMembersToPopulate );
__declspec(implementation_key(2436)) HRESULT AssemblyFamilyMembers::SavePopulatedMembers ( );
__declspec(implementation_key(2437)) TGFramework::ApplicationPtr AssemblyFamilyMember::GetApplication ( );
__declspec(implementation_key(2438)) IDispatchPtr AssemblyFamilyMember::GetParent ( );
__declspec(implementation_key(2439)) HRESULT AssemblyFamilyMember::RemoveExcludedAttachment ( IDispatch * AttachmentToRemove );
__declspec(implementation_key(2440)) HRESULT AssemblyFamilyMember::RemoveExcludedRelationship ( IDispatch * ConstraintToRemove );
__declspec(implementation_key(2441)) HRESULT AssemblyFamilyMember::AddOccurrence ( IDispatch * Occurrence, _bstr_t MemberName );
__declspec(implementation_key(2442)) HRESULT AssemblyFamilyMember::SetVariableValue ( IDispatch * Variable, double ValueToSet );
__declspec(implementation_key(2443)) _bstr_t AssemblyFamilyMember::GetMemberProperties ( enum AssemblyFamilyMemberPropertyConstants PropertyID );
__declspec(implementation_key(2444)) HRESULT AssemblyFamilyMember::SetMemberProperties ( enum AssemblyFamilyMemberPropertyConstants PropertyID, _bstr_t PropertyString );
__declspec(implementation_key(2445)) _bstr_t AssemblyFamilyMember::GetMemberName ( );
__declspec(implementation_key(2446)) HRESULT AssemblyFamilyMember::IncludeObject ( IDispatch * ObjectToInclude );
__declspec(implementation_key(2447)) HRESULT AssemblyFamilyMember::ExcludeObject ( IDispatch * ObjectToExclude );
__declspec(implementation_key(2448)) IDispatchPtr AssemblyFamilyMember::GetProperties ( );
__declspec(implementation_key(2449)) VARIANT_BOOL AssemblyFamilyMember::GetEnablePopulate ( );
__declspec(implementation_key(2450)) void AssemblyFamilyMember::PutEnablePopulate ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2451)) enum AssemblyFamilyMemberStatusConstants AssemblyFamilyMember::GetMemberStatus ( );
__declspec(implementation_key(2452)) VARIANT_BOOL AssemblyFamilyMember::GetSkipUpdateDuringSave ( );
__declspec(implementation_key(2453)) void AssemblyFamilyMember::PutSkipUpdateDuringSave ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2454)) HRESULT AssemblyFamilyMember::GetSuppressedComponentsOfMember ( enum AssemblyComponentTypeConstants ComponentType, long * SuppressedComponentCount, SAFEARRAY * * SuppressedComponents );
__declspec(implementation_key(2455)) TGFramework::ApplicationPtr _IAssemblyFamilyMemberAuto::GetApplication ( );
__declspec(implementation_key(2456)) IDispatchPtr _IAssemblyFamilyMemberAuto::GetParent ( );
__declspec(implementation_key(2457)) HRESULT _IAssemblyFamilyMemberAuto::RemoveExcludedAttachment ( IDispatch * AttachmentToRemove );
__declspec(implementation_key(2458)) HRESULT _IAssemblyFamilyMemberAuto::RemoveExcludedRelationship ( IDispatch * ConstraintToRemove );
__declspec(implementation_key(2459)) HRESULT _IAssemblyFamilyMemberAuto::AddOccurrence ( IDispatch * Occurrence, _bstr_t MemberName );
__declspec(implementation_key(2460)) HRESULT _IAssemblyFamilyMemberAuto::SetVariableValue ( IDispatch * Variable, double ValueToSet );
__declspec(implementation_key(2461)) _bstr_t _IAssemblyFamilyMemberAuto::GetMemberProperties ( enum AssemblyFamilyMemberPropertyConstants PropertyID );
__declspec(implementation_key(2462)) HRESULT _IAssemblyFamilyMemberAuto::SetMemberProperties ( enum AssemblyFamilyMemberPropertyConstants PropertyID, _bstr_t PropertyString );
__declspec(implementation_key(2463)) _bstr_t _IAssemblyFamilyMemberAuto::GetMemberName ( );
__declspec(implementation_key(2464)) HRESULT _IAssemblyFamilyMemberAuto::IncludeObject ( IDispatch * ObjectToInclude );
__declspec(implementation_key(2465)) HRESULT _IAssemblyFamilyMemberAuto::ExcludeObject ( IDispatch * ObjectToExclude );
__declspec(implementation_key(2466)) IDispatchPtr _IAssemblyFamilyMemberAuto::GetProperties ( );
__declspec(implementation_key(2467)) VARIANT_BOOL _IAssemblyFamilyMemberAuto::GetEnablePopulate ( );
__declspec(implementation_key(2468)) void _IAssemblyFamilyMemberAuto::PutEnablePopulate ( VARIANT_BOOL EnablePopulate );
__declspec(implementation_key(2469)) enum AssemblyFamilyMemberStatusConstants _IAssemblyFamilyMemberAuto::GetMemberStatus ( );
__declspec(implementation_key(2470)) VARIANT_BOOL _IAssemblyFamilyMemberAuto::GetSkipUpdateDuringSave ( );
__declspec(implementation_key(2471)) void _IAssemblyFamilyMemberAuto::PutSkipUpdateDuringSave ( VARIANT_BOOL SkipUpdate );
__declspec(implementation_key(2472)) HRESULT _IAssemblyFamilyMemberAuto::GetSuppressedComponentsOfMember ( enum AssemblyComponentTypeConstants ComponentType, long * SuppressedComponentCount, SAFEARRAY * * SuppressedComponents );
__declspec(implementation_key(2473)) TGFramework::ApplicationPtr _IAssemblyFamilyMembersAuto::GetApplication ( );
__declspec(implementation_key(2474)) IDispatchPtr _IAssemblyFamilyMembersAuto::GetParent ( );
__declspec(implementation_key(2475)) AssemblyFamilyMemberPtr _IAssemblyFamilyMembersAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(2476)) long _IAssemblyFamilyMembersAuto::GetCount ( );
__declspec(implementation_key(2477)) IUnknownPtr _IAssemblyFamilyMembersAuto::Get_NewEnum ( );
__declspec(implementation_key(2478)) AssemblyFamilyMemberPtr _IAssemblyFamilyMembersAuto::NewMember ( _bstr_t MemberName );
__declspec(implementation_key(2479)) HRESULT _IAssemblyFamilyMembersAuto::DeleteMember ( _bstr_t MemberName );
__declspec(implementation_key(2480)) HRESULT _IAssemblyFamilyMembersAuto::ActivateMember ( _bstr_t MemberName );
__declspec(implementation_key(2481)) HRESULT _IAssemblyFamilyMembersAuto::SaveMember ( _bstr_t MemberName, _bstr_t FileNameWithPath );
__declspec(implementation_key(2482)) void _IAssemblyFamilyMembersAuto::PutGlobalEditMode ( VARIANT_BOOL GlobalEdit );
__declspec(implementation_key(2483)) VARIANT_BOOL _IAssemblyFamilyMembersAuto::GetGlobalEditMode ( );
__declspec(implementation_key(2484)) HRESULT _IAssemblyFamilyMembersAuto::AddVariable ( IDispatch * Variable );
__declspec(implementation_key(2485)) HRESULT _IAssemblyFamilyMembersAuto::RemoveVariable ( IDispatch * Variable );
__declspec(implementation_key(2486)) IDispatchPtr _IAssemblyFamilyMembersAuto::GetVariable ( int Index );
__declspec(implementation_key(2487)) long _IAssemblyFamilyMembersAuto::GetVariableCount ( );
__declspec(implementation_key(2488)) HRESULT _IAssemblyFamilyMembersAuto::SaveAllMembers ( VARIANT_BOOL ChangeGeometricVersion );
__declspec(implementation_key(2489)) _bstr_t _IAssemblyFamilyMembersAuto::GetActiveMember ( );
__declspec(implementation_key(2490)) enum AlternateAssemblyTypeConstants _IAssemblyFamilyMembersAuto::GetAlternateAssemblyType ( );
__declspec(implementation_key(2491)) HRESULT _IAssemblyFamilyMembersAuto::RenameMember ( _bstr_t CurrentMemberName, _bstr_t NewMemberName );
__declspec(implementation_key(2492)) _bstr_t _IAssemblyFamilyMembersAuto::SaveMemberBiDM ( _bstr_t MemberName, _bstr_t FileNameWithPath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title );
__declspec(implementation_key(2493)) HRESULT _IAssemblyFamilyMembersAuto::SetMembersToPopulate ( long NumMembers, SAFEARRAY * pMembersToPopulate );
__declspec(implementation_key(2494)) HRESULT _IAssemblyFamilyMembersAuto::SavePopulatedMembers ( );
__declspec(implementation_key(2495)) TGFramework::ApplicationPtr AssemblyPatterns::GetApplication ( );
__declspec(implementation_key(2496)) IDispatchPtr AssemblyPatterns::GetParent ( );
__declspec(implementation_key(2497)) AssemblyPatternPtr AssemblyPatterns::Item ( const _variant_t & Index );
__declspec(implementation_key(2498)) long AssemblyPatterns::GetCount ( );
__declspec(implementation_key(2499)) AssemblyPatternPtr AssemblyPatterns::Find ( _bstr_t PatternName );
__declspec(implementation_key(2500)) HRESULT AssemblyPatterns::Delete ( _bstr_t PatternName );
__declspec(implementation_key(2501)) HRESULT AssemblyPatterns::Drop ( _bstr_t PatternName );
__declspec(implementation_key(2502)) AssemblyPatternPtr AssemblyPatterns::Create ( _bstr_t PatternName, SAFEARRAY * * MasterOccurrences, IDispatch * FeaturePattern, IDispatch * ReferenceFeature );
__declspec(implementation_key(2503)) AssemblyPatternPtr AssemblyPatterns::CreateAlongCurve ( long NumberOfMasters, SAFEARRAY * * MasterOccs, long NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1, double AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1, long NumberOfOccurrencesForCurves1, double OccurrenceSpacingForCurves1, long NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2, double AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2, long NumberOfOccurrencesForCurves2, double OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants TransformType, enum TGPart::PatternTransformRotateTypeConstants TransformRotateType, IDispatch * TransformPlaneOrSurface, _bstr_t bstrName, const _variant_t & FutureUse1, const _variant_t & FutureUse2, const _variant_t & FutureUse3 );
__declspec(implementation_key(2504)) AssemblyPatternPtr AssemblyPatterns::CreateDuplicate ( _bstr_t PatternName, long NumberOfMasters, SAFEARRAY * * MasterOccurrences, IDispatch * FromOccurrence, long NumberOfToOccurrences, SAFEARRAY * * ToOccurrences );
__declspec(implementation_key(2505)) AssemblyPatternPtr AssemblyPatterns::CreateAlongCurveEx ( long NumberOfMasters, SAFEARRAY * * MasterOccs, long NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1, double AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1, long NumberOfOccurrencesForCurves1, double OccurrenceSpacingForCurves1, long NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2, double AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2, long NumberOfOccurrencesForCurves2, double OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants TransformType, enum TGPart::PatternTransformRotateTypeConstants TransformRotateType, IDispatch * TransformPlaneOrSurface, _bstr_t bstrName, long lSkipCount, const _variant_t & FutureUse2, const _variant_t & FutureUse3 );
__declspec(implementation_key(2506)) AssemblyPatternPtr AssemblyPatterns::CreateEx ( _bstr_t PatternName, SAFEARRAY * * SourceOccurrences, IDispatch * FeaturePattern, IDispatch * ReferenceFeature );
__declspec(implementation_key(2507)) AssemblyPatternPtr AssemblyPatterns::CreateAlongCurveEx2 ( long NumberOfSources, SAFEARRAY * * SourceOccs, long NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1, double AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1, long NumberOfOccurrencesForCurves1, double OccurrenceSpacingForCurves1, long NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2, double AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2, long NumberOfOccurrencesForCurves2, double OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants TransformType, enum TGPart::PatternTransformRotateTypeConstants TransformRotateType, IDispatch * TransformPlaneOrSurface, _bstr_t bstrName, const _variant_t & FutureUse1, const _variant_t & FutureUse2, const _variant_t & FutureUse3 );
__declspec(implementation_key(2508)) AssemblyPatternPtr AssemblyPatterns::CreateDuplicateEx ( _bstr_t PatternName, long NumberOfSources, SAFEARRAY * * SourceOccurrences, IDispatch * FromOccurrence, long NumberOfToOccurrences, SAFEARRAY * * ToOccurrences );
__declspec(implementation_key(2509)) AssemblyPatternPtr AssemblyPatterns::CreateAlongCurveEx3 ( long NumberOfSources, SAFEARRAY * * SourceOccs, long NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1, double AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1, long NumberOfOccurrencesForCurves1, double OccurrenceSpacingForCurves1, long NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2, double AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2, long NumberOfOccurrencesForCurves2, double OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants TransformType, enum TGPart::PatternTransformRotateTypeConstants TransformRotateType, IDispatch * TransformPlaneOrSurface, _bstr_t bstrName, long lSkipCount, const _variant_t & FutureUse2, const _variant_t & FutureUse3 );
__declspec(implementation_key(2510)) AssemblyPatternPtr AssemblyPatterns::CreateAlongCircleWithOccurrences ( long lNumberOfSources, SAFEARRAY * * SourceOccs, IDispatch * Axis, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCircle, enum PatternOffsetTypeConstants PatternOffsetTypeForCircle, VARIANT_BOOL bIsFullCircle, double dSweep, long lNumberOfOccurrencesForCircle, double dSpacing, enum TGPart::PatternTransformTypeConstants TransformType, long lNumberOfSuppressIDs, SAFEARRAY * * SuppressIDs, _bstr_t bstrName, const _variant_t & FutureUse1, const _variant_t & FutureUse2 );
__declspec(implementation_key(2511)) AssemblyPatternPtr AssemblyPatterns::CreateAlongLineWithOccurrences ( long lNumberOfSources, SAFEARRAY * * SourceOccs, IDispatch * DirectionElement1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForLine1, enum TGPart::LinearPatternMethodConstants DirectionMethod1, long lCount1, double dDistance1, IDispatch * DirectionElement2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForLine2, enum TGPart::LinearPatternMethodConstants DirectionMethod2, long lCount2, double dDistance2, long lNumberOfSuppressIDs, SAFEARRAY * * SuppressIDs, _bstr_t bstrName );
__declspec(implementation_key(2512)) TGFramework::ApplicationPtr AssemblyPattern::GetApplication ( );
__declspec(implementation_key(2513)) IDispatchPtr AssemblyPattern::GetParent ( );
__declspec(implementation_key(2514)) AssemblyPatternOccurrencePtr AssemblyPattern::Item ( const _variant_t & Index );
__declspec(implementation_key(2515)) long AssemblyPattern::GetCount ( );
__declspec(implementation_key(2516)) _bstr_t AssemblyPattern::GetName ( );
__declspec(implementation_key(2517)) void AssemblyPattern::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(2518)) VARIANT_BOOL AssemblyPattern::GetVisible ( );
__declspec(implementation_key(2519)) void AssemblyPattern::PutVisible ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2520)) HRESULT AssemblyPattern::GetInputs ( SAFEARRAY * * MasterOccurrences, IDispatch * * FeaturePattern, SAFEARRAY * * ReferenceFeatures );
__declspec(implementation_key(2521)) HRESULT AssemblyPattern::Edit ( SAFEARRAY * * MasterOccurrences, IDispatch * FeaturePattern, IDispatch * ReferenceFeature, _bstr_t Name );
__declspec(implementation_key(2522)) HRESULT AssemblyPattern::GetOccurrences ( SAFEARRAY * * Occurrences );
__declspec(implementation_key(2523)) enum AssemblyPatternTypeConstants AssemblyPattern::PatternType ( );
__declspec(implementation_key(2524)) HRESULT AssemblyPattern::EditDuplicate ( long NumberOfMasters, SAFEARRAY * * MasterOccurrences, IDispatch * FromOccurrence, long NumberOfToOccurrences, SAFEARRAY * * ToOccurrences, _bstr_t Name );
__declspec(implementation_key(2525)) HRESULT AssemblyPattern::EditAlongCurve ( long NumberOfMasters, SAFEARRAY * * MasterOccs, long NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1, double AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1, long NumberOfOccurrencesForCurves1, double OccurrenceSpacingForCurves1, long NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2, double AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2, long NumberOfOccurrencesForCurves2, double OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants TransformType, enum TGPart::PatternTransformRotateTypeConstants TransformRotateType, IDispatch * TransformPlaneOrSurface, _bstr_t Name, const _variant_t & FutureUse1, const _variant_t & FutureUse2, const _variant_t & FutureUse3 );
__declspec(implementation_key(2526)) HRESULT AssemblyPattern::EditAlongCurveEx ( long NumberOfMasters, SAFEARRAY * * MasterOccs, long NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1, double AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1, long NumberOfOccurrencesForCurves1, double OccurrenceSpacingForCurves1, long NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2, double AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2, long NumberOfOccurrencesForCurves2, double OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants TransformType, enum TGPart::PatternTransformRotateTypeConstants TransformRotateType, IDispatch * TransformPlaneOrSurface, _bstr_t Name, long lSkipCount, const _variant_t & FutureUse2, const _variant_t & FutureUse3 );
__declspec(implementation_key(2527)) HRESULT AssemblyPattern::GetPatternData ( long * NumberOfMasters, SAFEARRAY * * MasterOccs, long * NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants * AnchorSideForCurves1, double * AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants * PatternOffsetTypeForCurves1, long * NumberOfOccurrencesForCurves1, double * OccurrenceSpacingForCurves1, long * NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants * AnchorSideForCurves2, double * AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants * PatternOffsetTypeForCurves2, long * NumberOfOccurrencesForCurves2, double * OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants * TransformType, enum TGPart::PatternTransformRotateTypeConstants * TransformRotateType, IDispatch * * TransformPlaneOrSurface, BSTR * Name, long * SkipCount );
__declspec(implementation_key(2528)) HRESULT AssemblyPattern::GetInputsEx ( SAFEARRAY * * SourceOccurrences, IDispatch * * FeaturePattern, SAFEARRAY * * ReferenceFeatures );
__declspec(implementation_key(2529)) HRESULT AssemblyPattern::EditEx ( SAFEARRAY * * SourceOccurrences, IDispatch * FeaturePattern, IDispatch * ReferenceFeature, _bstr_t Name );
__declspec(implementation_key(2530)) HRESULT AssemblyPattern::EditDuplicateEx ( long NumberOfSources, SAFEARRAY * * SourceOccurrences, IDispatch * FromOccurrence, long NumberOfToOccurrences, SAFEARRAY * * ToOccurrences, _bstr_t Name );
__declspec(implementation_key(2531)) HRESULT AssemblyPattern::EditAlongCurveEx2 ( long NumberOfSources, SAFEARRAY * * SourceOccs, long NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1, double AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1, long NumberOfOccurrencesForCurves1, double OccurrenceSpacingForCurves1, long NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2, double AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2, long NumberOfOccurrencesForCurves2, double OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants TransformType, enum TGPart::PatternTransformRotateTypeConstants TransformRotateType, IDispatch * TransformPlaneOrSurface, _bstr_t Name, const _variant_t & FutureUse1, const _variant_t & FutureUse2, const _variant_t & FutureUse3 );
__declspec(implementation_key(2532)) HRESULT AssemblyPattern::EditAlongCurveEx3 ( long NumberOfSources, SAFEARRAY * * SourceOccs, long NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1, double AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1, long NumberOfOccurrencesForCurves1, double OccurrenceSpacingForCurves1, long NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2, double AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2, long NumberOfOccurrencesForCurves2, double OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants TransformType, enum TGPart::PatternTransformRotateTypeConstants TransformRotateType, IDispatch * TransformPlaneOrSurface, _bstr_t Name, long lSkipCount, const _variant_t & FutureUse2, const _variant_t & FutureUse3 );
__declspec(implementation_key(2533)) HRESULT AssemblyPattern::GetPatternDataEx ( long * NumberOfSources, SAFEARRAY * * SourceOccs, long * NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants * AnchorSideForCurves1, double * AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants * PatternOffsetTypeForCurves1, long * NumberOfOccurrencesForCurves1, double * OccurrenceSpacingForCurves1, long * NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants * AnchorSideForCurves2, double * AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants * PatternOffsetTypeForCurves2, long * NumberOfOccurrencesForCurves2, double * OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants * TransformType, enum TGPart::PatternTransformRotateTypeConstants * TransformRotateType, IDispatch * * TransformPlaneOrSurface, BSTR * Name, long * SkipCount );
__declspec(implementation_key(2534)) HRESULT AssemblyPattern::EditAlongCircleWithOccurrences ( long lNumberOfSources, SAFEARRAY * * SourceOccs, IDispatch * Axis, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCircle, enum PatternOffsetTypeConstants PatternOffsetTypeForCircle, VARIANT_BOOL bIsFullCircle, double dSweep, long lNumberOfOccurrencesForCircle, double dSpacing, enum TGPart::PatternTransformTypeConstants TransformType, long lNumberOfSuppressIDs, SAFEARRAY * * SuppressIDs, _bstr_t bstrName, const _variant_t & FutureUse1, const _variant_t & FutureUse2 );
__declspec(implementation_key(2535)) HRESULT AssemblyPattern::EditAlongLineWithOccurrences ( long lNumberOfSources, SAFEARRAY * * SourceOccs, IDispatch * DirectionElement1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForLine1, enum TGPart::LinearPatternMethodConstants DirectionMethod1, long lCount1, double dDistance1, IDispatch * DirectionElement2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForLine2, enum TGPart::LinearPatternMethodConstants DirectionMethod2, long lCount2, double dDistance2, long lNumberOfSuppressIDs, SAFEARRAY * * SuppressIDs, _bstr_t bstrName );
__declspec(implementation_key(2536)) TGFramework::ApplicationPtr AssemblyPatternOccurrence::GetApplication ( );
__declspec(implementation_key(2537)) IDispatchPtr AssemblyPatternOccurrence::GetParent ( );
__declspec(implementation_key(2538)) _bstr_t AssemblyPatternOccurrence::GetName ( );
__declspec(implementation_key(2539)) void AssemblyPatternOccurrence::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(2540)) VARIANT_BOOL AssemblyPatternOccurrence::GetVisible ( );
__declspec(implementation_key(2541)) void AssemblyPatternOccurrence::PutVisible ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2542)) HRESULT AssemblyPatternOccurrence::GetOccurrences ( SAFEARRAY * * Occurrences );
__declspec(implementation_key(2543)) HRESULT AssemblyPatternOccurrence::GetPosition ( long * Row, long * Col );
__declspec(implementation_key(2544)) VARIANT_BOOL AssemblyPatternOccurrence::GetSuppress ( );
__declspec(implementation_key(2545)) void AssemblyPatternOccurrence::PutSuppress ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2546)) TGFramework::ApplicationPtr _IAssemblyPatternOccurrenceAuto::GetApplication ( );
__declspec(implementation_key(2547)) IDispatchPtr _IAssemblyPatternOccurrenceAuto::GetParent ( );
__declspec(implementation_key(2548)) _bstr_t _IAssemblyPatternOccurrenceAuto::GetName ( );
__declspec(implementation_key(2549)) void _IAssemblyPatternOccurrenceAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(2550)) VARIANT_BOOL _IAssemblyPatternOccurrenceAuto::GetVisible ( );
__declspec(implementation_key(2551)) void _IAssemblyPatternOccurrenceAuto::PutVisible ( VARIANT_BOOL Visible );
__declspec(implementation_key(2552)) HRESULT _IAssemblyPatternOccurrenceAuto::GetOccurrences ( SAFEARRAY * * Occurrences );
__declspec(implementation_key(2553)) HRESULT _IAssemblyPatternOccurrenceAuto::GetPosition ( long * Row, long * Col );
__declspec(implementation_key(2554)) VARIANT_BOOL _IAssemblyPatternOccurrenceAuto::GetSuppress ( );
__declspec(implementation_key(2555)) void _IAssemblyPatternOccurrenceAuto::PutSuppress ( VARIANT_BOOL Suppress );
__declspec(implementation_key(2556)) TGFramework::ApplicationPtr _IAssemblyPatternsAuto::GetApplication ( );
__declspec(implementation_key(2557)) IDispatchPtr _IAssemblyPatternsAuto::GetParent ( );
__declspec(implementation_key(2558)) AssemblyPatternPtr _IAssemblyPatternsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(2559)) long _IAssemblyPatternsAuto::GetCount ( );
__declspec(implementation_key(2560)) IUnknownPtr _IAssemblyPatternsAuto::Get_NewEnum ( );
__declspec(implementation_key(2561)) AssemblyPatternPtr _IAssemblyPatternsAuto::Find ( _bstr_t PatternName );
__declspec(implementation_key(2562)) HRESULT _IAssemblyPatternsAuto::Delete ( _bstr_t PatternName );
__declspec(implementation_key(2563)) HRESULT _IAssemblyPatternsAuto::Drop ( _bstr_t PatternName );
__declspec(implementation_key(2564)) AssemblyPatternPtr _IAssemblyPatternsAuto::Create ( _bstr_t PatternName, SAFEARRAY * * MasterOccurrences, IDispatch * FeaturePattern, IDispatch * ReferenceFeature );
__declspec(implementation_key(2565)) AssemblyPatternPtr _IAssemblyPatternsAuto::CreateAlongCurve ( long NumberOfMasters, SAFEARRAY * * MasterOccs, long NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1, double AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1, long NumberOfOccurrencesForCurves1, double OccurrenceSpacingForCurves1, long NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2, double AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2, long NumberOfOccurrencesForCurves2, double OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants TransformType, enum TGPart::PatternTransformRotateTypeConstants TransformRotateType, IDispatch * TransformPlaneOrSurface, _bstr_t bstrName, const _variant_t & FutureUse1, const _variant_t & FutureUse2, const _variant_t & FutureUse3 );
__declspec(implementation_key(2566)) AssemblyPatternPtr _IAssemblyPatternsAuto::CreateDuplicate ( _bstr_t PatternName, long NumberOfMasters, SAFEARRAY * * MasterOccurrences, IDispatch * FromOccurrence, long NumberOfToOccurrences, SAFEARRAY * * ToOccurrences );
__declspec(implementation_key(2567)) AssemblyPatternPtr _IAssemblyPatternsAuto::CreateAlongCurveEx ( long NumberOfMasters, SAFEARRAY * * MasterOccs, long NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1, double AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1, long NumberOfOccurrencesForCurves1, double OccurrenceSpacingForCurves1, long NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2, double AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2, long NumberOfOccurrencesForCurves2, double OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants TransformType, enum TGPart::PatternTransformRotateTypeConstants TransformRotateType, IDispatch * TransformPlaneOrSurface, _bstr_t bstrName, long lSkipCount, const _variant_t & FutureUse2, const _variant_t & FutureUse3 );
__declspec(implementation_key(2568)) AssemblyPatternPtr _IAssemblyPatternsAuto::CreateEx ( _bstr_t PatternName, SAFEARRAY * * SourceOccurrences, IDispatch * FeaturePattern, IDispatch * ReferenceFeature );
__declspec(implementation_key(2569)) AssemblyPatternPtr _IAssemblyPatternsAuto::CreateAlongCurveEx2 ( long NumberOfSources, SAFEARRAY * * SourceOccs, long NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1, double AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1, long NumberOfOccurrencesForCurves1, double OccurrenceSpacingForCurves1, long NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2, double AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2, long NumberOfOccurrencesForCurves2, double OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants TransformType, enum TGPart::PatternTransformRotateTypeConstants TransformRotateType, IDispatch * TransformPlaneOrSurface, _bstr_t bstrName, const _variant_t & FutureUse1, const _variant_t & FutureUse2, const _variant_t & FutureUse3 );
__declspec(implementation_key(2570)) AssemblyPatternPtr _IAssemblyPatternsAuto::CreateDuplicateEx ( _bstr_t PatternName, long NumberOfSources, SAFEARRAY * * SourceOccurrences, IDispatch * FromOccurrence, long NumberOfToOccurrences, SAFEARRAY * * ToOccurrences );
__declspec(implementation_key(2571)) AssemblyPatternPtr _IAssemblyPatternsAuto::CreateAlongCurveEx3 ( long NumberOfSources, SAFEARRAY * * SourceOccs, long NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1, double AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1, long NumberOfOccurrencesForCurves1, double OccurrenceSpacingForCurves1, long NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2, double AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2, long NumberOfOccurrencesForCurves2, double OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants TransformType, enum TGPart::PatternTransformRotateTypeConstants TransformRotateType, IDispatch * TransformPlaneOrSurface, _bstr_t bstrName, long lSkipCount, const _variant_t & FutureUse2, const _variant_t & FutureUse3 );
__declspec(implementation_key(2572)) AssemblyPatternPtr _IAssemblyPatternsAuto::CreateAlongCircleWithOccurrences ( long lNumberOfSources, SAFEARRAY * * SourceOccs, IDispatch * Axis, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCircle, enum PatternOffsetTypeConstants PatternOffsetTypeForCircle, VARIANT_BOOL bIsFullCircle, double dSweep, long lNumberOfOccurrencesForCircle, double dSpacing, enum TGPart::PatternTransformTypeConstants TransformType, long lNumberOfSuppressIDs, SAFEARRAY * * SuppressIDs, _bstr_t bstrName, const _variant_t & FutureUse1, const _variant_t & FutureUse2 );
__declspec(implementation_key(2573)) AssemblyPatternPtr _IAssemblyPatternsAuto::CreateAlongLineWithOccurrences ( long lNumberOfSources, SAFEARRAY * * SourceOccs, IDispatch * DirectionElement1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForLine1, enum TGPart::LinearPatternMethodConstants DirectionMethod1, long lCount1, double dDistance1, IDispatch * DirectionElement2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForLine2, enum TGPart::LinearPatternMethodConstants DirectionMethod2, long lCount2, double dDistance2, long lNumberOfSuppressIDs, SAFEARRAY * * SuppressIDs, _bstr_t bstrName );
__declspec(implementation_key(2574)) TGFramework::ApplicationPtr _IAssemblyPatternAuto::GetApplication ( );
__declspec(implementation_key(2575)) IDispatchPtr _IAssemblyPatternAuto::GetParent ( );
__declspec(implementation_key(2576)) AssemblyPatternOccurrencePtr _IAssemblyPatternAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(2577)) long _IAssemblyPatternAuto::GetCount ( );
__declspec(implementation_key(2578)) IUnknownPtr _IAssemblyPatternAuto::Get_NewEnum ( );
__declspec(implementation_key(2579)) _bstr_t _IAssemblyPatternAuto::GetName ( );
__declspec(implementation_key(2580)) void _IAssemblyPatternAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(2581)) VARIANT_BOOL _IAssemblyPatternAuto::GetVisible ( );
__declspec(implementation_key(2582)) void _IAssemblyPatternAuto::PutVisible ( VARIANT_BOOL Visible );
__declspec(implementation_key(2583)) HRESULT _IAssemblyPatternAuto::GetInputs ( SAFEARRAY * * MasterOccurrences, IDispatch * * FeaturePattern, SAFEARRAY * * ReferenceFeatures );
__declspec(implementation_key(2584)) HRESULT _IAssemblyPatternAuto::Edit ( SAFEARRAY * * MasterOccurrences, IDispatch * FeaturePattern, IDispatch * ReferenceFeature, _bstr_t Name );
__declspec(implementation_key(2585)) HRESULT _IAssemblyPatternAuto::GetOccurrences ( SAFEARRAY * * Occurrences );
__declspec(implementation_key(2586)) enum AssemblyPatternTypeConstants _IAssemblyPatternAuto::PatternType ( );
__declspec(implementation_key(2587)) HRESULT _IAssemblyPatternAuto::EditDuplicate ( long NumberOfMasters, SAFEARRAY * * MasterOccurrences, IDispatch * FromOccurrence, long NumberOfToOccurrences, SAFEARRAY * * ToOccurrences, _bstr_t Name );
__declspec(implementation_key(2588)) HRESULT _IAssemblyPatternAuto::EditAlongCurve ( long NumberOfMasters, SAFEARRAY * * MasterOccs, long NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1, double AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1, long NumberOfOccurrencesForCurves1, double OccurrenceSpacingForCurves1, long NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2, double AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2, long NumberOfOccurrencesForCurves2, double OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants TransformType, enum TGPart::PatternTransformRotateTypeConstants TransformRotateType, IDispatch * TransformPlaneOrSurface, _bstr_t Name, const _variant_t & FutureUse1, const _variant_t & FutureUse2, const _variant_t & FutureUse3 );
__declspec(implementation_key(2589)) HRESULT _IAssemblyPatternAuto::EditAlongCurveEx ( long NumberOfMasters, SAFEARRAY * * MasterOccs, long NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1, double AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1, long NumberOfOccurrencesForCurves1, double OccurrenceSpacingForCurves1, long NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2, double AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2, long NumberOfOccurrencesForCurves2, double OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants TransformType, enum TGPart::PatternTransformRotateTypeConstants TransformRotateType, IDispatch * TransformPlaneOrSurface, _bstr_t Name, long lSkipCount, const _variant_t & FutureUse2, const _variant_t & FutureUse3 );
__declspec(implementation_key(2590)) HRESULT _IAssemblyPatternAuto::GetPatternData ( long * NumberOfMasters, SAFEARRAY * * MasterOccs, long * NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants * AnchorSideForCurves1, double * AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants * PatternOffsetTypeForCurves1, long * NumberOfOccurrencesForCurves1, double * OccurrenceSpacingForCurves1, long * NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants * AnchorSideForCurves2, double * AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants * PatternOffsetTypeForCurves2, long * NumberOfOccurrencesForCurves2, double * OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants * TransformType, enum TGPart::PatternTransformRotateTypeConstants * TransformRotateType, IDispatch * * TransformPlaneOrSurface, BSTR * Name, long * SkipCount );
__declspec(implementation_key(2591)) HRESULT _IAssemblyPatternAuto::GetInputsEx ( SAFEARRAY * * SourceOccurrences, IDispatch * * FeaturePattern, SAFEARRAY * * ReferenceFeatures );
__declspec(implementation_key(2592)) HRESULT _IAssemblyPatternAuto::EditEx ( SAFEARRAY * * SourceOccurrences, IDispatch * FeaturePattern, IDispatch * ReferenceFeature, _bstr_t Name );
__declspec(implementation_key(2593)) HRESULT _IAssemblyPatternAuto::EditDuplicateEx ( long NumberOfSources, SAFEARRAY * * SourceOccurrences, IDispatch * FromOccurrence, long NumberOfToOccurrences, SAFEARRAY * * ToOccurrences, _bstr_t Name );
__declspec(implementation_key(2594)) HRESULT _IAssemblyPatternAuto::EditAlongCurveEx2 ( long NumberOfSources, SAFEARRAY * * SourceOccs, long NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1, double AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1, long NumberOfOccurrencesForCurves1, double OccurrenceSpacingForCurves1, long NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2, double AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2, long NumberOfOccurrencesForCurves2, double OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants TransformType, enum TGPart::PatternTransformRotateTypeConstants TransformRotateType, IDispatch * TransformPlaneOrSurface, _bstr_t Name, const _variant_t & FutureUse1, const _variant_t & FutureUse2, const _variant_t & FutureUse3 );
__declspec(implementation_key(2595)) HRESULT _IAssemblyPatternAuto::EditAlongCurveEx3 ( long NumberOfSources, SAFEARRAY * * SourceOccs, long NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves1, double AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves1, long NumberOfOccurrencesForCurves1, double OccurrenceSpacingForCurves1, long NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCurves2, double AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants PatternOffsetTypeForCurves2, long NumberOfOccurrencesForCurves2, double OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants TransformType, enum TGPart::PatternTransformRotateTypeConstants TransformRotateType, IDispatch * TransformPlaneOrSurface, _bstr_t Name, long lSkipCount, const _variant_t & FutureUse2, const _variant_t & FutureUse3 );
__declspec(implementation_key(2596)) HRESULT _IAssemblyPatternAuto::GetPatternDataEx ( long * NumberOfSources, SAFEARRAY * * SourceOccs, long * NumberOfCurves1, SAFEARRAY * * Curves1, IDispatch * * AnchorPointForCurves1, enum TGPart::PatternCurveAnchorSideConstants * AnchorSideForCurves1, double * AnchorAtDistanceForCurves1, enum PatternOffsetTypeConstants * PatternOffsetTypeForCurves1, long * NumberOfOccurrencesForCurves1, double * OccurrenceSpacingForCurves1, long * NumberOfCurves2, SAFEARRAY * * Curves2, IDispatch * * AnchorPointForCurves2, enum TGPart::PatternCurveAnchorSideConstants * AnchorSideForCurves2, double * AnchorAtDistanceForCurves2, enum PatternOffsetTypeConstants * PatternOffsetTypeForCurves2, long * NumberOfOccurrencesForCurves2, double * OccurrenceSpacingForCurves2, enum TGPart::PatternTransformTypeConstants * TransformType, enum TGPart::PatternTransformRotateTypeConstants * TransformRotateType, IDispatch * * TransformPlaneOrSurface, BSTR * Name, long * SkipCount );
__declspec(implementation_key(2597)) HRESULT _IAssemblyPatternAuto::EditAlongCircleWithOccurrences ( long lNumberOfSources, SAFEARRAY * * SourceOccs, IDispatch * Axis, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForCircle, enum PatternOffsetTypeConstants PatternOffsetTypeForCircle, VARIANT_BOOL bIsFullCircle, double dSweep, long lNumberOfOccurrencesForCircle, double dSpacing, enum TGPart::PatternTransformTypeConstants TransformType, long lNumberOfSuppressIDs, SAFEARRAY * * SuppressIDs, _bstr_t bstrName, const _variant_t & FutureUse1, const _variant_t & FutureUse2 );
__declspec(implementation_key(2598)) HRESULT _IAssemblyPatternAuto::EditAlongLineWithOccurrences ( long lNumberOfSources, SAFEARRAY * * SourceOccs, IDispatch * DirectionElement1, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForLine1, enum TGPart::LinearPatternMethodConstants DirectionMethod1, long lCount1, double dDistance1, IDispatch * DirectionElement2, enum TGPart::PatternCurveAnchorSideConstants AnchorSideForLine2, enum TGPart::LinearPatternMethodConstants DirectionMethod2, long lCount2, double dDistance2, long lNumberOfSuppressIDs, SAFEARRAY * * SuppressIDs, _bstr_t bstrName );
__declspec(implementation_key(2599)) TGFramework::ApplicationPtr Configurations::GetApplication ( );
__declspec(implementation_key(2600)) IDispatchPtr Configurations::GetParent ( );
__declspec(implementation_key(2601)) long Configurations::GetCount ( );
__declspec(implementation_key(2602)) ConfigurationPtr Configurations::Item ( const _variant_t & Index );
__declspec(implementation_key(2603)) HRESULT Configurations::Apply ( const _variant_t & Index, const _variant_t & ActivationOverride, const _variant_t & SimplifyOverride );
__declspec(implementation_key(2604)) ConfigurationPtr Configurations::Add ( _bstr_t Name );
__declspec(implementation_key(2605)) ConfigurationPtr Configurations::AddDerivedConfig ( int nConfig, int nZones, int nQueries, VARIANT * ppsaConfigList, VARIANT * ppsaZoneList, VARIANT * ppsaQueryList, _bstr_t bstrNewConfigName );
__declspec(implementation_key(2606)) VARIANT_BOOL Configurations::GetDirty ( );
__declspec(implementation_key(2607)) HRESULT Configurations::Save ( );
__declspec(implementation_key(2608)) HRESULT Configurations::GetConfigComponentList ( _bstr_t bstrConfigName, SAFEARRAY * * bstrActiveComponentList );
__declspec(implementation_key(2609)) TGFramework::ApplicationPtr Configuration::GetApplication ( );
__declspec(implementation_key(2610)) IDispatchPtr Configuration::GetParent ( );
__declspec(implementation_key(2611)) HRESULT Configuration::Apply ( const _variant_t & ActivationOverride, const _variant_t & SimplifyOverride );
__declspec(implementation_key(2612)) _bstr_t Configuration::GetName ( );
__declspec(implementation_key(2613)) enum TGFramework::ObjectType Configuration::GetType ( );
__declspec(implementation_key(2614)) enum ConfigurationTypeConstants Configuration::GetConfigurationType ( );
__declspec(implementation_key(2615)) HRESULT Configuration::Delete ( );
__declspec(implementation_key(2616)) HRESULT Configuration::Update ( );
__declspec(implementation_key(2617)) HRESULT Configuration::Save ( );
__declspec(implementation_key(2618)) TGFramework::ApplicationPtr _IConfigurationsAuto::GetApplication ( );
__declspec(implementation_key(2619)) IDispatchPtr _IConfigurationsAuto::GetParent ( );
__declspec(implementation_key(2620)) long _IConfigurationsAuto::GetCount ( );
__declspec(implementation_key(2621)) ConfigurationPtr _IConfigurationsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(2622)) IUnknownPtr _IConfigurationsAuto::Get_NewEnum ( );
__declspec(implementation_key(2623)) HRESULT _IConfigurationsAuto::Apply ( const _variant_t & Index, const _variant_t & ActivationOverride, const _variant_t & SimplifyOverride );
__declspec(implementation_key(2624)) ConfigurationPtr _IConfigurationsAuto::Add ( _bstr_t Name );
__declspec(implementation_key(2625)) ConfigurationPtr _IConfigurationsAuto::AddDerivedConfig ( int nConfig, int nZones, int nQueries, VARIANT * ppsaConfigList, VARIANT * ppsaZoneList, VARIANT * ppsaQueryList, _bstr_t bstrNewConfigName );
__declspec(implementation_key(2626)) VARIANT_BOOL _IConfigurationsAuto::GetDirty ( );
__declspec(implementation_key(2627)) HRESULT _IConfigurationsAuto::Save ( );
__declspec(implementation_key(2628)) HRESULT _IConfigurationsAuto::GetConfigComponentList ( _bstr_t bstrConfigName, SAFEARRAY * * bstrActiveComponentList );
__declspec(implementation_key(2629)) TGFramework::ApplicationPtr _IConfigurationAuto::GetApplication ( );
__declspec(implementation_key(2630)) IDispatchPtr _IConfigurationAuto::GetParent ( );
__declspec(implementation_key(2631)) HRESULT _IConfigurationAuto::Apply ( const _variant_t & ActivationOverride, const _variant_t & SimplifyOverride );
__declspec(implementation_key(2632)) _bstr_t _IConfigurationAuto::GetName ( );
__declspec(implementation_key(2633)) enum TGFramework::ObjectType _IConfigurationAuto::GetType ( );
__declspec(implementation_key(2634)) enum ConfigurationTypeConstants _IConfigurationAuto::GetConfigurationType ( );
__declspec(implementation_key(2635)) HRESULT _IConfigurationAuto::Delete ( );
__declspec(implementation_key(2636)) HRESULT _IConfigurationAuto::Update ( );
__declspec(implementation_key(2637)) HRESULT _IConfigurationAuto::Save ( );
__declspec(implementation_key(2638)) TGFramework::ApplicationPtr WireRuns::GetApplication ( );
__declspec(implementation_key(2639)) IDispatchPtr WireRuns::GetParent ( );
__declspec(implementation_key(2640)) WireRunPtr WireRuns::Item ( const _variant_t & Index );
__declspec(implementation_key(2641)) long WireRuns::GetCount ( );
__declspec(implementation_key(2642)) WireRunPtr WireRuns::Add ( _bstr_t PartFileName, const _variant_t & PartTemplateFileName, const _variant_t & PartFileDirectory );
__declspec(implementation_key(2643)) HRESULT WireRuns::Delete ( struct WireRun * WireRun );
__declspec(implementation_key(2644)) TGFramework::ApplicationPtr WireRun::GetApplication ( );
__declspec(implementation_key(2645)) IDispatchPtr WireRun::GetParent ( );
__declspec(implementation_key(2646)) HRESULT WireRun::AddWirePath ( struct WirePath * WirePath );
__declspec(implementation_key(2647)) HRESULT WireRun::RemoveWirePath ( struct WirePath * WirePath );
__declspec(implementation_key(2648)) WireRunPathsPtr WireRun::GetWirePaths ( );
__declspec(implementation_key(2649)) void WireRun::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(2650)) _bstr_t WireRun::GetName ( );
__declspec(implementation_key(2651)) void WireRun::PutVisible ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2652)) VARIANT_BOOL WireRun::GetVisible ( );
__declspec(implementation_key(2653)) OccurrencePtr WireRun::GetOccurrence ( );
__declspec(implementation_key(2654)) HRESULT WireRun::IsFrozen ( VARIANT_BOOL * bFrozen );
__declspec(implementation_key(2655)) HRESULT WireRun::IsLinked ( VARIANT_BOOL * bLinked );
__declspec(implementation_key(2656)) HRESULT WireRun::Freeze ( );
__declspec(implementation_key(2657)) HRESULT WireRun::Thaw ( );
__declspec(implementation_key(2658)) HRESULT WireRun::BreakLink ( );
__declspec(implementation_key(2659)) TGFramework::ApplicationPtr _IWireRunsAuto::GetApplication ( );
__declspec(implementation_key(2660)) IDispatchPtr _IWireRunsAuto::GetParent ( );
__declspec(implementation_key(2661)) WireRunPtr _IWireRunsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(2662)) long _IWireRunsAuto::GetCount ( );
__declspec(implementation_key(2663)) IUnknownPtr _IWireRunsAuto::Get_NewEnum ( );
__declspec(implementation_key(2664)) WireRunPtr _IWireRunsAuto::Add ( _bstr_t PartFileName, const _variant_t & PartTemplateFileName, const _variant_t & PartFileDirectory );
__declspec(implementation_key(2665)) HRESULT _IWireRunsAuto::Delete ( struct WireRun * WireRun );
__declspec(implementation_key(2666)) TGFramework::ApplicationPtr WirePath::GetApplication ( );
__declspec(implementation_key(2667)) IDispatchPtr WirePath::GetParent ( );
__declspec(implementation_key(2668)) HRESULT WirePath::AddSegment ( IDispatch * Segment, enum TubeSegmentAdditionStatusConstants * Status );
__declspec(implementation_key(2669)) HRESULT WirePath::RemoveSegment ( IDispatch * Segment, enum TubeSegmentRemovalStatusConstants * Status );
__declspec(implementation_key(2670)) WirePathSegmentsPtr WirePath::GetSegments ( );
__declspec(implementation_key(2671)) void WirePath::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(2672)) _bstr_t WirePath::GetName ( );
__declspec(implementation_key(2673)) void WirePath::PutColor ( long _arg1 );
__declspec(implementation_key(2674)) long WirePath::GetColor ( );
__declspec(implementation_key(2675)) void WirePath::PutColorName ( _bstr_t _arg1 );
__declspec(implementation_key(2676)) _bstr_t WirePath::GetColorName ( );
__declspec(implementation_key(2677)) void WirePath::PutMaterial ( _bstr_t _arg1 );
__declspec(implementation_key(2678)) _bstr_t WirePath::GetMaterial ( );
__declspec(implementation_key(2679)) void WirePath::PutDiameter ( double _arg1 );
__declspec(implementation_key(2680)) double WirePath::GetDiameter ( );
__declspec(implementation_key(2681)) void WirePath::PutLength ( double _arg1 );
__declspec(implementation_key(2682)) double WirePath::GetLength ( );
__declspec(implementation_key(2683)) void WirePath::PutStartConnector ( _bstr_t _arg1 );
__declspec(implementation_key(2684)) _bstr_t WirePath::GetStartConnector ( );
__declspec(implementation_key(2685)) void WirePath::PutEndConnector ( _bstr_t _arg1 );
__declspec(implementation_key(2686)) _bstr_t WirePath::GetEndConnector ( );
__declspec(implementation_key(2687)) void WirePath::PutVisible ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(2688)) VARIANT_BOOL WirePath::GetVisible ( );
__declspec(implementation_key(2689)) AssemblyPropertyPtr WirePath::GetAssemblyProperty ( );
__declspec(implementation_key(2690)) enum WirePathConstants WirePath::GetType ( );
__declspec(implementation_key(2691)) void WirePath::PutType ( enum WirePathConstants _arg1 );
__declspec(implementation_key(2692)) WirePathPtr WirePath::GetCableMaster ( );
__declspec(implementation_key(2693)) HRESULT WirePath::AddCableMember ( struct WirePath * WirePath );
__declspec(implementation_key(2694)) HRESULT WirePath::RemoveCableMember ( struct WirePath * WirePath );
__declspec(implementation_key(2695)) HRESULT WirePath::SetCableMemberIndex ( struct WirePath * WirePath, long Index );
__declspec(implementation_key(2696)) HRESULT WirePath::GetCableMemberIndex ( struct WirePath * WirePath, long * Index );
__declspec(implementation_key(2697)) WirePathCableMembersPtr WirePath::GetCableMembers ( );
__declspec(implementation_key(2698)) WirePathPtr WirePath::GetCableSource ( );
__declspec(implementation_key(2699)) enum WirePathConstantsEx WirePath::GetTypeEx ( );
__declspec(implementation_key(2700)) void WirePath::PutTypeEx ( enum WirePathConstantsEx _arg1 );
__declspec(implementation_key(2701)) TGFramework::ApplicationPtr WirePathSegments::GetApplication ( );
__declspec(implementation_key(2702)) IDispatchPtr WirePathSegments::GetParent ( );
__declspec(implementation_key(2703)) IDispatchPtr WirePathSegments::Item ( const _variant_t & Index );
__declspec(implementation_key(2704)) long WirePathSegments::GetCount ( );
__declspec(implementation_key(2705)) TGFramework::ApplicationPtr _IWirePathSegmentsAuto::GetApplication ( );
__declspec(implementation_key(2706)) IDispatchPtr _IWirePathSegmentsAuto::GetParent ( );
__declspec(implementation_key(2707)) IDispatchPtr _IWirePathSegmentsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(2708)) long _IWirePathSegmentsAuto::GetCount ( );
__declspec(implementation_key(2709)) IUnknownPtr _IWirePathSegmentsAuto::Get_NewEnum ( );
__declspec(implementation_key(2710)) TGFramework::ApplicationPtr AssemblyProperty::GetApplication ( );
__declspec(implementation_key(2711)) IDispatchPtr AssemblyProperty::GetParent ( );
__declspec(implementation_key(2712)) _bstr_t AssemblyProperty::GetName ( );
__declspec(implementation_key(2713)) void AssemblyProperty::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(2714)) HRESULT AssemblyProperty::AddPropertyItem ( _bstr_t ItemName, enum TGPart::PropertyTypeConstants ItemType, const _variant_t & ItemValue );
__declspec(implementation_key(2715)) HRESULT AssemblyProperty::DeletePropertyItem ( _bstr_t ItemName );
__declspec(implementation_key(2716)) HRESULT AssemblyProperty::DeleteAllItems ( );
__declspec(implementation_key(2717)) long AssemblyProperty::GetCount ( );
__declspec(implementation_key(2718)) _bstr_t AssemblyProperty::GetNameByIndex ( long IndexOfItem );
__declspec(implementation_key(2719)) _variant_t AssemblyProperty::GetItemValue ( _bstr_t ItemName );
__declspec(implementation_key(2720)) enum TGPart::PropertyTypeConstants AssemblyProperty::GetItemType ( _bstr_t ItemName );
__declspec(implementation_key(2721)) HRESULT AssemblyProperty::UpdateItemValue ( _bstr_t CurrentItemName, enum TGPart::PropertyTypeConstants CurrentItemType, const _variant_t & NewItemValue );
__declspec(implementation_key(2722)) HRESULT AssemblyProperty::GetDefaultValues ( long * NumberOfEntries, SAFEARRAY * * DefaultValues );
__declspec(implementation_key(2723)) TGFramework::ApplicationPtr _IAssemblyPropertyAuto::GetApplication ( );
__declspec(implementation_key(2724)) IDispatchPtr _IAssemblyPropertyAuto::GetParent ( );
__declspec(implementation_key(2725)) _bstr_t _IAssemblyPropertyAuto::GetName ( );
__declspec(implementation_key(2726)) void _IAssemblyPropertyAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(2727)) HRESULT _IAssemblyPropertyAuto::AddPropertyItem ( _bstr_t ItemName, enum TGPart::PropertyTypeConstants ItemType, const _variant_t & ItemValue );
__declspec(implementation_key(2728)) HRESULT _IAssemblyPropertyAuto::DeletePropertyItem ( _bstr_t ItemName );
__declspec(implementation_key(2729)) HRESULT _IAssemblyPropertyAuto::DeleteAllItems ( );
__declspec(implementation_key(2730)) long _IAssemblyPropertyAuto::GetCount ( );
__declspec(implementation_key(2731)) _bstr_t _IAssemblyPropertyAuto::GetNameByIndex ( long IndexOfItem );
__declspec(implementation_key(2732)) _variant_t _IAssemblyPropertyAuto::GetItemValue ( _bstr_t ItemName );
__declspec(implementation_key(2733)) enum TGPart::PropertyTypeConstants _IAssemblyPropertyAuto::GetItemType ( _bstr_t ItemName );
__declspec(implementation_key(2734)) HRESULT _IAssemblyPropertyAuto::UpdateItemValue ( _bstr_t CurrentItemName, enum TGPart::PropertyTypeConstants CurrentItemType, const _variant_t & NewItemValue );
__declspec(implementation_key(2735)) HRESULT _IAssemblyPropertyAuto::GetDefaultValues ( long * NumberOfEntries, SAFEARRAY * * DefaultValues );
__declspec(implementation_key(2736)) TGFramework::ApplicationPtr WirePathCableMembers::GetApplication ( );
__declspec(implementation_key(2737)) IDispatchPtr WirePathCableMembers::GetParent ( );
__declspec(implementation_key(2738)) WirePathPtr WirePathCableMembers::Item ( const _variant_t & Index );
__declspec(implementation_key(2739)) long WirePathCableMembers::GetCount ( );
__declspec(implementation_key(2740)) TGFramework::ApplicationPtr _IWirePathCableMembersAuto::GetApplication ( );
__declspec(implementation_key(2741)) IDispatchPtr _IWirePathCableMembersAuto::GetParent ( );
__declspec(implementation_key(2742)) WirePathPtr _IWirePathCableMembersAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(2743)) long _IWirePathCableMembersAuto::GetCount ( );
__declspec(implementation_key(2744)) IUnknownPtr _IWirePathCableMembersAuto::Get_NewEnum ( );
__declspec(implementation_key(2745)) TGFramework::ApplicationPtr _IWirePathAuto::GetApplication ( );
__declspec(implementation_key(2746)) IDispatchPtr _IWirePathAuto::GetParent ( );
__declspec(implementation_key(2747)) HRESULT _IWirePathAuto::AddSegment ( IDispatch * Segment, enum TubeSegmentAdditionStatusConstants * Status );
__declspec(implementation_key(2748)) HRESULT _IWirePathAuto::RemoveSegment ( IDispatch * Segment, enum TubeSegmentRemovalStatusConstants * Status );
__declspec(implementation_key(2749)) WirePathSegmentsPtr _IWirePathAuto::GetSegments ( );
__declspec(implementation_key(2750)) void _IWirePathAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(2751)) _bstr_t _IWirePathAuto::GetName ( );
__declspec(implementation_key(2752)) void _IWirePathAuto::PutColor ( long Color );
__declspec(implementation_key(2753)) long _IWirePathAuto::GetColor ( );
__declspec(implementation_key(2754)) void _IWirePathAuto::PutColorName ( _bstr_t ColorName );
__declspec(implementation_key(2755)) _bstr_t _IWirePathAuto::GetColorName ( );
__declspec(implementation_key(2756)) void _IWirePathAuto::PutMaterial ( _bstr_t Material );
__declspec(implementation_key(2757)) _bstr_t _IWirePathAuto::GetMaterial ( );
__declspec(implementation_key(2758)) void _IWirePathAuto::PutDiameter ( double Diameter );
__declspec(implementation_key(2759)) double _IWirePathAuto::GetDiameter ( );
__declspec(implementation_key(2760)) void _IWirePathAuto::PutLength ( double Length );
__declspec(implementation_key(2761)) double _IWirePathAuto::GetLength ( );
__declspec(implementation_key(2762)) void _IWirePathAuto::PutStartConnector ( _bstr_t StartConnector );
__declspec(implementation_key(2763)) _bstr_t _IWirePathAuto::GetStartConnector ( );
__declspec(implementation_key(2764)) void _IWirePathAuto::PutEndConnector ( _bstr_t EndConnector );
__declspec(implementation_key(2765)) _bstr_t _IWirePathAuto::GetEndConnector ( );
__declspec(implementation_key(2766)) void _IWirePathAuto::PutVisible ( VARIANT_BOOL Visible );
__declspec(implementation_key(2767)) VARIANT_BOOL _IWirePathAuto::GetVisible ( );
__declspec(implementation_key(2768)) AssemblyPropertyPtr _IWirePathAuto::GetAssemblyProperty ( );
__declspec(implementation_key(2769)) enum WirePathConstants _IWirePathAuto::GetType ( );
__declspec(implementation_key(2770)) void _IWirePathAuto::PutType ( enum WirePathConstants Type );
__declspec(implementation_key(2771)) WirePathPtr _IWirePathAuto::GetCableMaster ( );
__declspec(implementation_key(2772)) HRESULT _IWirePathAuto::AddCableMember ( struct WirePath * WirePath );
__declspec(implementation_key(2773)) HRESULT _IWirePathAuto::RemoveCableMember ( struct WirePath * WirePath );
__declspec(implementation_key(2774)) HRESULT _IWirePathAuto::SetCableMemberIndex ( struct WirePath * WirePath, long Index );
__declspec(implementation_key(2775)) HRESULT _IWirePathAuto::GetCableMemberIndex ( struct WirePath * WirePath, long * Index );
__declspec(implementation_key(2776)) WirePathCableMembersPtr _IWirePathAuto::GetCableMembers ( );
__declspec(implementation_key(2777)) WirePathPtr _IWirePathAuto::GetCableSource ( );
__declspec(implementation_key(2778)) enum WirePathConstantsEx _IWirePathAuto::GetTypeEx ( );
__declspec(implementation_key(2779)) void _IWirePathAuto::PutTypeEx ( enum WirePathConstantsEx TypeEx );
__declspec(implementation_key(2780)) TGFramework::ApplicationPtr WireRunPaths::GetApplication ( );
__declspec(implementation_key(2781)) IDispatchPtr WireRunPaths::GetParent ( );
__declspec(implementation_key(2782)) WirePathPtr WireRunPaths::Item ( const _variant_t & Index );
__declspec(implementation_key(2783)) long WireRunPaths::GetCount ( );
__declspec(implementation_key(2784)) TGFramework::ApplicationPtr _IWireRunAuto::GetApplication ( );
__declspec(implementation_key(2785)) IDispatchPtr _IWireRunAuto::GetParent ( );
__declspec(implementation_key(2786)) HRESULT _IWireRunAuto::AddWirePath ( struct WirePath * WirePath );
__declspec(implementation_key(2787)) HRESULT _IWireRunAuto::RemoveWirePath ( struct WirePath * WirePath );
__declspec(implementation_key(2788)) WireRunPathsPtr _IWireRunAuto::GetWirePaths ( );
__declspec(implementation_key(2789)) void _IWireRunAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(2790)) _bstr_t _IWireRunAuto::GetName ( );
__declspec(implementation_key(2791)) void _IWireRunAuto::PutVisible ( VARIANT_BOOL Visible );
__declspec(implementation_key(2792)) VARIANT_BOOL _IWireRunAuto::GetVisible ( );
__declspec(implementation_key(2793)) OccurrencePtr _IWireRunAuto::GetOccurrence ( );
__declspec(implementation_key(2794)) HRESULT _IWireRunAuto::IsFrozen ( VARIANT_BOOL * bFrozen );
__declspec(implementation_key(2795)) HRESULT _IWireRunAuto::IsLinked ( VARIANT_BOOL * bLinked );
__declspec(implementation_key(2796)) HRESULT _IWireRunAuto::Freeze ( );
__declspec(implementation_key(2797)) HRESULT _IWireRunAuto::Thaw ( );
__declspec(implementation_key(2798)) HRESULT _IWireRunAuto::BreakLink ( );
__declspec(implementation_key(2799)) TGFramework::ApplicationPtr _IWireRunPathsAuto::GetApplication ( );
__declspec(implementation_key(2800)) IDispatchPtr _IWireRunPathsAuto::GetParent ( );
__declspec(implementation_key(2801)) WirePathPtr _IWireRunPathsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(2802)) long _IWireRunPathsAuto::GetCount ( );
__declspec(implementation_key(2803)) IUnknownPtr _IWireRunPathsAuto::Get_NewEnum ( );
__declspec(implementation_key(2804)) TGFramework::ApplicationPtr WirePaths::GetApplication ( );
__declspec(implementation_key(2805)) IDispatchPtr WirePaths::GetParent ( );
__declspec(implementation_key(2806)) WirePathPtr WirePaths::Item ( const _variant_t & Index );
__declspec(implementation_key(2807)) long WirePaths::GetCount ( );
__declspec(implementation_key(2808)) WirePathPtr WirePaths::Add ( _bstr_t Name );
__declspec(implementation_key(2809)) HRESULT WirePaths::Delete ( struct WirePath * WirePath );
__declspec(implementation_key(2810)) TGFramework::ApplicationPtr _IWirePathsAuto::GetApplication ( );
__declspec(implementation_key(2811)) IDispatchPtr _IWirePathsAuto::GetParent ( );
__declspec(implementation_key(2812)) WirePathPtr _IWirePathsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(2813)) long _IWirePathsAuto::GetCount ( );
__declspec(implementation_key(2814)) IUnknownPtr _IWirePathsAuto::Get_NewEnum ( );
__declspec(implementation_key(2815)) WirePathPtr _IWirePathsAuto::Add ( _bstr_t Name );
__declspec(implementation_key(2816)) HRESULT _IWirePathsAuto::Delete ( struct WirePath * WirePath );
__declspec(implementation_key(2817)) TGFramework::ApplicationPtr AssemblyProperties::GetApplication ( );
__declspec(implementation_key(2818)) IDispatchPtr AssemblyProperties::GetParent ( );
__declspec(implementation_key(2819)) AssemblyPropertyPtr AssemblyProperties::Item ( const _variant_t & Index );
__declspec(implementation_key(2820)) long AssemblyProperties::GetCount ( );
__declspec(implementation_key(2821)) AssemblyPropertyPtr AssemblyProperties::AddProperty ( _bstr_t MemberName );
__declspec(implementation_key(2822)) DefaultCustomOccurrencePropertiesPtr AssemblyProperties::GetDefaultCustomOccurrenceProperties ( );
__declspec(implementation_key(2823)) HRESULT AssemblyProperties::LoadCustomOccurrenceProperties ( );
__declspec(implementation_key(2824)) HRESULT AssemblyProperties::DeleteCustomOccurrenceProperties ( SAFEARRAY * * CustomOccurrencePropertyNames );
__declspec(implementation_key(2825)) TGFramework::ApplicationPtr DefaultCustomOccurrenceProperties::GetApplication ( );
__declspec(implementation_key(2826)) IDispatchPtr DefaultCustomOccurrenceProperties::GetParent ( );
__declspec(implementation_key(2827)) AssemblyPropertyPtr DefaultCustomOccurrenceProperties::Item ( const _variant_t & Index );
__declspec(implementation_key(2828)) long DefaultCustomOccurrenceProperties::GetCount ( );
__declspec(implementation_key(2829)) TGFramework::ApplicationPtr _IAssemblyPropertiesAuto::GetApplication ( );
__declspec(implementation_key(2830)) IDispatchPtr _IAssemblyPropertiesAuto::GetParent ( );
__declspec(implementation_key(2831)) AssemblyPropertyPtr _IAssemblyPropertiesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(2832)) long _IAssemblyPropertiesAuto::GetCount ( );
__declspec(implementation_key(2833)) IUnknownPtr _IAssemblyPropertiesAuto::Get_NewEnum ( );
__declspec(implementation_key(2834)) AssemblyPropertyPtr _IAssemblyPropertiesAuto::AddProperty ( _bstr_t MemberName );
__declspec(implementation_key(2835)) DefaultCustomOccurrencePropertiesPtr _IAssemblyPropertiesAuto::GetDefaultCustomOccurrenceProperties ( );
__declspec(implementation_key(2836)) HRESULT _IAssemblyPropertiesAuto::LoadCustomOccurrenceProperties ( );
__declspec(implementation_key(2837)) HRESULT _IAssemblyPropertiesAuto::DeleteCustomOccurrenceProperties ( SAFEARRAY * * CustomOccurrencePropertyNames );
__declspec(implementation_key(2838)) TGFramework::ApplicationPtr _IDefaultCustomOccurrencePropertiesAuto::GetApplication ( );
__declspec(implementation_key(2839)) IDispatchPtr _IDefaultCustomOccurrencePropertiesAuto::GetParent ( );
__declspec(implementation_key(2840)) AssemblyPropertyPtr _IDefaultCustomOccurrencePropertiesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(2841)) long _IDefaultCustomOccurrencePropertiesAuto::GetCount ( );
__declspec(implementation_key(2842)) IUnknownPtr _IDefaultCustomOccurrencePropertiesAuto::Get_NewEnum ( );
__declspec(implementation_key(2843)) TGFramework::ApplicationPtr CurveSegments::GetApplication ( );
__declspec(implementation_key(2844)) IDispatchPtr CurveSegments::GetParent ( );
__declspec(implementation_key(2845)) CurveSegmentPtr CurveSegments::Item ( const _variant_t & Index );
__declspec(implementation_key(2846)) long CurveSegments::GetCount ( );
__declspec(implementation_key(2847)) CurveSegmentPtr CurveSegments::Add ( long PathSegmentsCount, SAFEARRAY * * PathSegments, enum CurveSegmentValidationConstants * Validation );
__declspec(implementation_key(2848)) TGFramework::ApplicationPtr CurveSegment::GetApplication ( );
__declspec(implementation_key(2849)) IDispatchPtr CurveSegment::GetParent ( );
__declspec(implementation_key(2850)) IDispatchPtr CurveSegment::GetAttributeSets ( );
__declspec(implementation_key(2851)) VARIANT_BOOL CurveSegment::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(2852)) enum TGFramework::ObjectType CurveSegment::GetType ( );
__declspec(implementation_key(2853)) enum CurveSegmentValidationConstants CurveSegment::GetValidation ( );
__declspec(implementation_key(2854)) enum CurveSegmentWhichKeypointsConstants CurveSegment::GetWhichKeypoints ( );
__declspec(implementation_key(2855)) void CurveSegment::PutWhichKeypoints ( enum CurveSegmentWhichKeypointsConstants _arg1 );
__declspec(implementation_key(2856)) double CurveSegment::GetStartDerivativeMagnitude ( );
__declspec(implementation_key(2857)) void CurveSegment::PutStartDerivativeMagnitude ( double _arg1 );
__declspec(implementation_key(2858)) double CurveSegment::GetEndDerivativeMagnitude ( );
__declspec(implementation_key(2859)) void CurveSegment::PutEndDerivativeMagnitude ( double _arg1 );
__declspec(implementation_key(2860)) HRESULT CurveSegment::AddPathSegment ( IDispatch * pPathSegment, enum CurveSegmentPathAdditionStatusConstants * AdditionStatus );
__declspec(implementation_key(2861)) HRESULT CurveSegment::RemovePathSegment ( IDispatch * pPathSegment, enum CurveSegmentPathRemovalStatusConstants * RemovalStatus );
__declspec(implementation_key(2862)) HRESULT CurveSegment::ShowPathSegments ( );
__declspec(implementation_key(2863)) HRESULT CurveSegment::HidePathSegments ( );
__declspec(implementation_key(2864)) IDispatchPtr CurveSegment::GetPathSegment ( const _variant_t & Index );
__declspec(implementation_key(2865)) long CurveSegment::GetPathSegmentsCount ( );
__declspec(implementation_key(2866)) HRESULT CurveSegment::Delete ( );
__declspec(implementation_key(2867)) TGFramework::ApplicationPtr _ICurveSegmentsAuto::GetApplication ( );
__declspec(implementation_key(2868)) IDispatchPtr _ICurveSegmentsAuto::GetParent ( );
__declspec(implementation_key(2869)) CurveSegmentPtr _ICurveSegmentsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(2870)) IUnknownPtr _ICurveSegmentsAuto::Get_NewEnum ( );
__declspec(implementation_key(2871)) long _ICurveSegmentsAuto::GetCount ( );
__declspec(implementation_key(2872)) CurveSegmentPtr _ICurveSegmentsAuto::Add ( long PathSegmentsCount, SAFEARRAY * * PathSegments, enum CurveSegmentValidationConstants * Validation );
__declspec(implementation_key(2873)) TGFramework::ApplicationPtr _ICurveSegmentAuto::GetApplication ( );
__declspec(implementation_key(2874)) IDispatchPtr _ICurveSegmentAuto::GetParent ( );
__declspec(implementation_key(2875)) IDispatchPtr _ICurveSegmentAuto::GetAttributeSets ( );
__declspec(implementation_key(2876)) VARIANT_BOOL _ICurveSegmentAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(2877)) enum TGFramework::ObjectType _ICurveSegmentAuto::GetType ( );
__declspec(implementation_key(2878)) enum CurveSegmentValidationConstants _ICurveSegmentAuto::GetValidation ( );
__declspec(implementation_key(2879)) enum CurveSegmentWhichKeypointsConstants _ICurveSegmentAuto::GetWhichKeypoints ( );
__declspec(implementation_key(2880)) void _ICurveSegmentAuto::PutWhichKeypoints ( enum CurveSegmentWhichKeypointsConstants WhichKeypoints );
__declspec(implementation_key(2881)) double _ICurveSegmentAuto::GetStartDerivativeMagnitude ( );
__declspec(implementation_key(2882)) void _ICurveSegmentAuto::PutStartDerivativeMagnitude ( double StartDerivativeMagnitude );
__declspec(implementation_key(2883)) double _ICurveSegmentAuto::GetEndDerivativeMagnitude ( );
__declspec(implementation_key(2884)) void _ICurveSegmentAuto::PutEndDerivativeMagnitude ( double EndDerivativeMagnitude );
__declspec(implementation_key(2885)) HRESULT _ICurveSegmentAuto::AddPathSegment ( IDispatch * pPathSegment, enum CurveSegmentPathAdditionStatusConstants * AdditionStatus );
__declspec(implementation_key(2886)) HRESULT _ICurveSegmentAuto::RemovePathSegment ( IDispatch * pPathSegment, enum CurveSegmentPathRemovalStatusConstants * RemovalStatus );
__declspec(implementation_key(2887)) HRESULT _ICurveSegmentAuto::ShowPathSegments ( );
__declspec(implementation_key(2888)) HRESULT _ICurveSegmentAuto::HidePathSegments ( );
__declspec(implementation_key(2889)) IDispatchPtr _ICurveSegmentAuto::GetPathSegment ( const _variant_t & Index );
__declspec(implementation_key(2890)) long _ICurveSegmentAuto::GetPathSegmentsCount ( );
__declspec(implementation_key(2891)) HRESULT _ICurveSegmentAuto::Delete ( );
__declspec(implementation_key(2892)) TGFramework::ApplicationPtr VirtualComponentOccurrences::GetApplication ( );
__declspec(implementation_key(2893)) IDispatchPtr VirtualComponentOccurrences::GetParent ( );
__declspec(implementation_key(2894)) VirtualComponentOccurrencePtr VirtualComponentOccurrences::Item ( const _variant_t & Index );
__declspec(implementation_key(2895)) long VirtualComponentOccurrences::GetCount ( );
__declspec(implementation_key(2896)) VirtualComponentOccurrencePtr VirtualComponentOccurrences::Add ( _bstr_t VirtualComponentName, enum VirtualComponentTypeConstants VirtualComponentType, enum VirtualComponentStatusConstants * ComponentStatusConstants );
__declspec(implementation_key(2897)) VirtualComponentOccurrencePtr VirtualComponentOccurrences::AddAsPreDefined ( _bstr_t FileName, enum VirtualComponentStatusConstants * ComponentStatusConstants );
__declspec(implementation_key(2898)) VirtualComponentOccurrencePtr VirtualComponentOccurrences::AddBIDM ( _bstr_t bstrDocumentNumber, _bstr_t bstrRevisionID, enum VirtualComponentTypeConstants VirtualComponentType, enum VirtualComponentStatusConstants * ComponentStatusConstants );
__declspec(implementation_key(2899)) TGFramework::ApplicationPtr VirtualComponentOccurrence::GetApplication ( );
__declspec(implementation_key(2900)) IDispatchPtr VirtualComponentOccurrence::GetParent ( );
__declspec(implementation_key(2901)) IDispatchPtr VirtualComponentOccurrence::GetAttributeSets ( );
__declspec(implementation_key(2902)) VARIANT_BOOL VirtualComponentOccurrence::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(2903)) enum TGFramework::ObjectType VirtualComponentOccurrence::GetType ( );
__declspec(implementation_key(2904)) HRESULT VirtualComponentOccurrence::Delete ( );
__declspec(implementation_key(2905)) _bstr_t VirtualComponentOccurrence::GetName ( );
__declspec(implementation_key(2906)) VirtualComponentPtr VirtualComponentOccurrence::GetVirtualComponent ( );
__declspec(implementation_key(2907)) HRESULT VirtualComponentOccurrence::MoveTo ( struct VirtualComponent * VirtualComponent );
__declspec(implementation_key(2908)) VARIANT_BOOL VirtualComponentOccurrence::GetIsPositioned ( );
__declspec(implementation_key(2909)) HRESULT VirtualComponentOccurrence::IsMaster ( VARIANT_BOOL * IsMaster, VARIANT * ppMasterOccurrence );
__declspec(implementation_key(2910)) VARIANT_BOOL VirtualComponentOccurrence::GetIsPreDefined ( );
__declspec(implementation_key(2911)) HRESULT VirtualComponentOccurrence::ReplaceComponent ( _bstr_t FileName, VARIANT_BOOL ReplaceAll, VARIANT * ComponentStatusConstants );
__declspec(implementation_key(2912)) HRESULT VirtualComponentOccurrence::PositionComponent ( IDispatch * pProfile, double x, double y, const _variant_t & Angle, VARIANT * ComponentStatusConstants );
__declspec(implementation_key(2913)) HRESULT VirtualComponentOccurrence::SetViewDefinition ( enum VirtualComponentPublishConstants PublishOn, const _variant_t & SketchName );
__declspec(implementation_key(2914)) HRESULT VirtualComponentOccurrence::GetViewDefinition ( enum VirtualComponentPublishConstants * PublishOn, VARIANT * SketchName );
__declspec(implementation_key(2915)) HRESULT VirtualComponentOccurrence::SetOrigin ( double x, double y );
__declspec(implementation_key(2916)) HRESULT VirtualComponentOccurrence::GetOrigin ( double * x, double * y );
__declspec(implementation_key(2917)) HRESULT VirtualComponentOccurrence::SetOriginByKeypoints ( IDispatch * Object1, enum TGFramework::KeyPointType KeyPointTypeConstant1, IDispatch * Object2, enum TGFramework::KeyPointType KeyPointTypeConstant2 );
__declspec(implementation_key(2918)) HRESULT VirtualComponentOccurrence::GetOriginByKeypoints ( IDispatch * * Object1, enum TGFramework::KeyPointType * KeyPointTypeConstant1, IDispatch * * Object2, enum TGFramework::KeyPointType * KeyPointTypeConstant2 );
__declspec(implementation_key(2919)) void VirtualComponentOccurrence::PutAngle ( double _arg1 );
__declspec(implementation_key(2920)) double VirtualComponentOccurrence::GetAngle ( );
__declspec(implementation_key(2921)) HRESULT VirtualComponentOccurrence::Show ( );
__declspec(implementation_key(2922)) HRESULT VirtualComponentOccurrence::ShowAll ( );
__declspec(implementation_key(2923)) HRESULT VirtualComponentOccurrence::Hide ( );
__declspec(implementation_key(2924)) HRESULT VirtualComponentOccurrence::HideAll ( );
__declspec(implementation_key(2925)) VARIANT_BOOL VirtualComponentOccurrence::IsVisible ( );
__declspec(implementation_key(2926)) HRESULT VirtualComponentOccurrence::IsSource ( VARIANT_BOOL * IsSource, VARIANT * ppSourceOccurrence );
__declspec(implementation_key(2927)) TGFramework::ApplicationPtr VirtualComponent::GetApplication ( );
__declspec(implementation_key(2928)) IDispatchPtr VirtualComponent::GetParent ( );
__declspec(implementation_key(2929)) IDispatchPtr VirtualComponent::GetAttributeSets ( );
__declspec(implementation_key(2930)) VARIANT_BOOL VirtualComponent::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(2931)) enum TGFramework::ObjectType VirtualComponent::GetType ( );
__declspec(implementation_key(2932)) HRESULT VirtualComponent::Delete ( );
__declspec(implementation_key(2933)) _bstr_t VirtualComponent::GetName ( );
__declspec(implementation_key(2934)) void VirtualComponent::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(2935)) enum VirtualComponentTypeConstants VirtualComponent::GetVirtualComponentType ( );
__declspec(implementation_key(2936)) IDispatchPtr VirtualComponent::GetProperties ( );
__declspec(implementation_key(2937)) VirtualComponentOccurrencesPtr VirtualComponent::GetVirtualComponentOccurrences ( );
__declspec(implementation_key(2938)) _bstr_t VirtualComponent::GetPublishPath ( );
__declspec(implementation_key(2939)) void VirtualComponent::PutPublishPath ( _bstr_t _arg1 );
__declspec(implementation_key(2940)) _bstr_t VirtualComponent::GetTemplateName ( );
__declspec(implementation_key(2941)) void VirtualComponent::PutTemplateName ( _bstr_t _arg1 );
__declspec(implementation_key(2942)) HRESULT VirtualComponent::SetGeometry ( long NumElements, SAFEARRAY * * GeomElements );
__declspec(implementation_key(2943)) HRESULT VirtualComponent::GetGeometry ( long * NumElements, SAFEARRAY * * GeomElements );
__declspec(implementation_key(2944)) HRESULT VirtualComponent::RemoveGeometry ( long NumElements, SAFEARRAY * * GeomElements );
__declspec(implementation_key(2945)) HRESULT VirtualComponent::UpdateComponent ( VARIANT * ComponentStatusConstants );
__declspec(implementation_key(2946)) TGFramework::ApplicationPtr _IVirtualComponentAuto::GetApplication ( );
__declspec(implementation_key(2947)) IDispatchPtr _IVirtualComponentAuto::GetParent ( );
__declspec(implementation_key(2948)) IDispatchPtr _IVirtualComponentAuto::GetAttributeSets ( );
__declspec(implementation_key(2949)) VARIANT_BOOL _IVirtualComponentAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(2950)) enum TGFramework::ObjectType _IVirtualComponentAuto::GetType ( );
__declspec(implementation_key(2951)) HRESULT _IVirtualComponentAuto::Delete ( );
__declspec(implementation_key(2952)) _bstr_t _IVirtualComponentAuto::GetName ( );
__declspec(implementation_key(2953)) void _IVirtualComponentAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(2954)) enum VirtualComponentTypeConstants _IVirtualComponentAuto::GetVirtualComponentType ( );
__declspec(implementation_key(2955)) IDispatchPtr _IVirtualComponentAuto::GetProperties ( );
__declspec(implementation_key(2956)) VirtualComponentOccurrencesPtr _IVirtualComponentAuto::GetVirtualComponentOccurrences ( );
__declspec(implementation_key(2957)) _bstr_t _IVirtualComponentAuto::GetPublishPath ( );
__declspec(implementation_key(2958)) void _IVirtualComponentAuto::PutPublishPath ( _bstr_t PublishPath );
__declspec(implementation_key(2959)) _bstr_t _IVirtualComponentAuto::GetTemplateName ( );
__declspec(implementation_key(2960)) void _IVirtualComponentAuto::PutTemplateName ( _bstr_t TemplateName );
__declspec(implementation_key(2961)) HRESULT _IVirtualComponentAuto::SetGeometry ( long NumElements, SAFEARRAY * * GeomElements );
__declspec(implementation_key(2962)) HRESULT _IVirtualComponentAuto::GetGeometry ( long * NumElements, SAFEARRAY * * GeomElements );
__declspec(implementation_key(2963)) HRESULT _IVirtualComponentAuto::RemoveGeometry ( long NumElements, SAFEARRAY * * GeomElements );
__declspec(implementation_key(2964)) HRESULT _IVirtualComponentAuto::UpdateComponent ( VARIANT * ComponentStatusConstants );
__declspec(implementation_key(2965)) TGFramework::ApplicationPtr _IVirtualComponentOccurrenceAuto::GetApplication ( );
__declspec(implementation_key(2966)) IDispatchPtr _IVirtualComponentOccurrenceAuto::GetParent ( );
__declspec(implementation_key(2967)) IDispatchPtr _IVirtualComponentOccurrenceAuto::GetAttributeSets ( );
__declspec(implementation_key(2968)) VARIANT_BOOL _IVirtualComponentOccurrenceAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(2969)) enum TGFramework::ObjectType _IVirtualComponentOccurrenceAuto::GetType ( );
__declspec(implementation_key(2970)) HRESULT _IVirtualComponentOccurrenceAuto::Delete ( );
__declspec(implementation_key(2971)) _bstr_t _IVirtualComponentOccurrenceAuto::GetName ( );
__declspec(implementation_key(2972)) VirtualComponentPtr _IVirtualComponentOccurrenceAuto::GetVirtualComponent ( );
__declspec(implementation_key(2973)) HRESULT _IVirtualComponentOccurrenceAuto::MoveTo ( struct VirtualComponent * VirtualComponent );
__declspec(implementation_key(2974)) VARIANT_BOOL _IVirtualComponentOccurrenceAuto::GetIsPositioned ( );
__declspec(implementation_key(2975)) HRESULT _IVirtualComponentOccurrenceAuto::IsMaster ( VARIANT_BOOL * IsMaster, VARIANT * ppMasterOccurrence );
__declspec(implementation_key(2976)) VARIANT_BOOL _IVirtualComponentOccurrenceAuto::GetIsPreDefined ( );
__declspec(implementation_key(2977)) HRESULT _IVirtualComponentOccurrenceAuto::ReplaceComponent ( _bstr_t FileName, VARIANT_BOOL ReplaceAll, VARIANT * ComponentStatusConstants );
__declspec(implementation_key(2978)) HRESULT _IVirtualComponentOccurrenceAuto::PositionComponent ( IDispatch * pProfile, double x, double y, const _variant_t & Angle, VARIANT * ComponentStatusConstants );
__declspec(implementation_key(2979)) HRESULT _IVirtualComponentOccurrenceAuto::SetViewDefinition ( enum VirtualComponentPublishConstants PublishOn, const _variant_t & SketchName );
__declspec(implementation_key(2980)) HRESULT _IVirtualComponentOccurrenceAuto::GetViewDefinition ( enum VirtualComponentPublishConstants * PublishOn, VARIANT * SketchName );
__declspec(implementation_key(2981)) HRESULT _IVirtualComponentOccurrenceAuto::SetOrigin ( double x, double y );
__declspec(implementation_key(2982)) HRESULT _IVirtualComponentOccurrenceAuto::GetOrigin ( double * x, double * y );
__declspec(implementation_key(2983)) HRESULT _IVirtualComponentOccurrenceAuto::SetOriginByKeypoints ( IDispatch * Object1, enum TGFramework::KeyPointType KeyPointTypeConstant1, IDispatch * Object2, enum TGFramework::KeyPointType KeyPointTypeConstant2 );
__declspec(implementation_key(2984)) HRESULT _IVirtualComponentOccurrenceAuto::GetOriginByKeypoints ( IDispatch * * Object1, enum TGFramework::KeyPointType * KeyPointTypeConstant1, IDispatch * * Object2, enum TGFramework::KeyPointType * KeyPointTypeConstant2 );
__declspec(implementation_key(2985)) void _IVirtualComponentOccurrenceAuto::PutAngle ( double dAngle );
__declspec(implementation_key(2986)) double _IVirtualComponentOccurrenceAuto::GetAngle ( );
__declspec(implementation_key(2987)) HRESULT _IVirtualComponentOccurrenceAuto::Show ( );
__declspec(implementation_key(2988)) HRESULT _IVirtualComponentOccurrenceAuto::ShowAll ( );
__declspec(implementation_key(2989)) HRESULT _IVirtualComponentOccurrenceAuto::Hide ( );
__declspec(implementation_key(2990)) HRESULT _IVirtualComponentOccurrenceAuto::HideAll ( );
__declspec(implementation_key(2991)) VARIANT_BOOL _IVirtualComponentOccurrenceAuto::IsVisible ( );
__declspec(implementation_key(2992)) HRESULT _IVirtualComponentOccurrenceAuto::IsSource ( VARIANT_BOOL * IsSource, VARIANT * ppSourceOccurrence );
__declspec(implementation_key(2993)) TGFramework::ApplicationPtr _IVirtualComponentOccurrencesAuto::GetApplication ( );
__declspec(implementation_key(2994)) IDispatchPtr _IVirtualComponentOccurrencesAuto::GetParent ( );
__declspec(implementation_key(2995)) VirtualComponentOccurrencePtr _IVirtualComponentOccurrencesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(2996)) IUnknownPtr _IVirtualComponentOccurrencesAuto::Get_NewEnum ( );
__declspec(implementation_key(2997)) long _IVirtualComponentOccurrencesAuto::GetCount ( );
__declspec(implementation_key(2998)) VirtualComponentOccurrencePtr _IVirtualComponentOccurrencesAuto::Add ( _bstr_t VirtualComponentName, enum VirtualComponentTypeConstants VirtualComponentType, enum VirtualComponentStatusConstants * ComponentStatusConstants );
__declspec(implementation_key(2999)) VirtualComponentOccurrencePtr _IVirtualComponentOccurrencesAuto::AddAsPreDefined ( _bstr_t FileName, enum VirtualComponentStatusConstants * ComponentStatusConstants );
__declspec(implementation_key(3000)) VirtualComponentOccurrencePtr _IVirtualComponentOccurrencesAuto::AddBIDM ( _bstr_t bstrDocumentNumber, _bstr_t bstrRevisionID, enum VirtualComponentTypeConstants VirtualComponentType, enum VirtualComponentStatusConstants * ComponentStatusConstants );
__declspec(implementation_key(3001)) TGFramework::ApplicationPtr StructuralFrames::GetApplication ( );
__declspec(implementation_key(3002)) IDispatchPtr StructuralFrames::GetParent ( );
__declspec(implementation_key(3003)) StructuralFramePtr StructuralFrames::Item ( const _variant_t & Index );
__declspec(implementation_key(3004)) long StructuralFrames::GetCount ( );
__declspec(implementation_key(3005)) StructuralFramePtr StructuralFrames::Add ( _bstr_t PartFileName, long NumPaths, SAFEARRAY * * Path, const _variant_t & GlobalEndConditions, const _variant_t & GlobalEndConditionValue, const _variant_t & AutoPosition );
__declspec(implementation_key(3006)) StructuralFramePtr StructuralFrames::AddByOrientation ( _bstr_t PartFileName, _bstr_t CoOrdinateSystemName, long NumPaths, SAFEARRAY * * Path, const _variant_t & PreferredOrientationPlane, const _variant_t & GlobalEndConditions, const _variant_t & GlobalEndConditionValue, const _variant_t & AutoPosition );
__declspec(implementation_key(3007)) HRESULT StructuralFrames::Delete ( struct StructuralFrame * StructuralFrame );
__declspec(implementation_key(3008)) HRESULT StructuralFrames::FrameSaveAs ( _bstr_t FileName );
__declspec(implementation_key(3009)) HRESULT StructuralFrames::FrameSaveAsTranslated ( _bstr_t FileName );
__declspec(implementation_key(3010)) _bstr_t StructuralFrames::FrameSaveAsBiDM ( _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title );
__declspec(implementation_key(3011)) StructuralFramePtr StructuralFrames::GetStructuralFrameByOccurrence ( IDispatch * Occurrence );
__declspec(implementation_key(3012)) StructuralFramePtr StructuralFrames::AddWithSplitOnIntersection ( _bstr_t PartFileName, long NumPaths, SAFEARRAY * * Path, const _variant_t & PreferredOrientationPlane, const _variant_t & GlobalEndConditions, const _variant_t & GlobalEndConditionValue, const _variant_t & AutoPosition, _bstr_t CoOrdinateSystemName );
__declspec(implementation_key(3013)) TGFramework::ApplicationPtr StructuralFrame::GetApplication ( );
__declspec(implementation_key(3014)) IDispatchPtr StructuralFrame::GetParent ( );
__declspec(implementation_key(3015)) void StructuralFrame::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(3016)) _bstr_t StructuralFrame::GetName ( );
__declspec(implementation_key(3017)) HRESULT StructuralFrame::GetGlobalEndCondition ( enum StructuralFrameEndConditionConstants * EndCondition, VARIANT * dValue );
__declspec(implementation_key(3018)) HRESULT StructuralFrame::SetGlobalEndCondition ( enum StructuralFrameEndConditionConstants EndCondition, const _variant_t & dValue );
__declspec(implementation_key(3019)) VARIANT_BOOL StructuralFrame::GetAutoPosition ( );
__declspec(implementation_key(3020)) void StructuralFrame::PutAutoPosition ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3021)) _bstr_t StructuralFrame::GetGlobalDocument ( );
__declspec(implementation_key(3022)) void StructuralFrame::PutGlobalDocument ( _bstr_t _arg1 );
__declspec(implementation_key(3023)) HRESULT StructuralFrame::SetFramePath ( long NumPathSegments, SAFEARRAY * * PathSegments );
__declspec(implementation_key(3024)) HRESULT StructuralFrame::GetFramePath ( long * NumPathSegments, SAFEARRAY * * PathSegments );
__declspec(implementation_key(3025)) HRESULT StructuralFrame::GetSections ( long * NumSections, SAFEARRAY * * Sections );
__declspec(implementation_key(3026)) HRESULT StructuralFrame::GetRedefineSectionPlacement ( long SectionId, VARIANT * Rotation, VARIANT * XDistance, VARIANT * YDistance );
__declspec(implementation_key(3027)) HRESULT StructuralFrame::SetRedefineSectionPlacement ( long SectionId, const _variant_t & Rotation, const _variant_t & XDistance, const _variant_t & YDistance );
__declspec(implementation_key(3028)) HRESULT StructuralFrame::GetRedefineSectionDocument ( long SectionId, BSTR * PartFileDocument );
__declspec(implementation_key(3029)) HRESULT StructuralFrame::SetRedefineSectionDocument ( long SectionId, _bstr_t PartFileDocument );
__declspec(implementation_key(3030)) HRESULT StructuralFrame::GetOverrideEndCondition ( long NumSegments, SAFEARRAY * SegmentIds, enum StructuralFrameEndConditionConstants * EndCondition, VARIANT * dValue );
__declspec(implementation_key(3031)) HRESULT StructuralFrame::SetOverrideEndCondition ( long NumSegments, SAFEARRAY * SegmentIds, enum StructuralFrameEndConditionConstants EndCondition, const _variant_t & dValue );
__declspec(implementation_key(3032)) VARIANT_BOOL StructuralFrame::GetVisible ( );
__declspec(implementation_key(3033)) void StructuralFrame::PutVisible ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3034)) HRESULT StructuralFrame::CutLength ( double * dCutLength, VARIANT * bExactLength );
__declspec(implementation_key(3035)) HRESULT StructuralFrame::SegmentCutLength ( long SectionId, double * dCutLength, VARIANT * bExactLength );
__declspec(implementation_key(3036)) HRESULT StructuralFrame::GetFramePathObjects ( long * NumPathSegments, SAFEARRAY * * PathSegments );
__declspec(implementation_key(3037)) HRESULT StructuralFrame::ReturnPathForGivenSectionID ( long SectionId, VARIANT * PathId, VARIANT * PathAsObject );
__declspec(implementation_key(3038)) HRESULT StructuralFrame::ReturnOccurrenceForGivenSectionID ( long SectionId, VARIANT * OccurrenceID, VARIANT * OccurrenceAsObject );
__declspec(implementation_key(3039)) HRESULT StructuralFrame::GetPlaneOrientationForGivenSectionID ( long SectionId, VARIANT * XOffset, VARIANT * YOffset, VARIANT * ZOffset, VARIANT * XRotation, VARIANT * YRotation, VARIANT * ZRotation );
__declspec(implementation_key(3040)) HRESULT StructuralFrame::GetSetionIDObject ( long SectionId, IDispatch * * ProfileObject );
__declspec(implementation_key(3041)) HRESULT StructuralFrame::RetrieveHoleLocation ( );
__declspec(implementation_key(3042)) HRESULT StructuralFrame::DeleteHoleLocation ( );
__declspec(implementation_key(3043)) VARIANT_BOOL StructuralFrame::GetSingleFrameForCollinearPaths ( );
__declspec(implementation_key(3044)) void StructuralFrame::PutSingleFrameForCollinearPaths ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3045)) VARIANT_BOOL StructuralFrame::GetSingleFrameForTangentialPaths ( );
__declspec(implementation_key(3046)) void StructuralFrame::PutSingleFrameForTangentialPaths ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3047)) HRESULT StructuralFrame::AssociateLegacyFrameToCrossSection ( );
__declspec(implementation_key(3048)) HRESULT StructuralFrame::MiterCut ( long SectionId, double * MiterCut1, double * MiterCut2 );
__declspec(implementation_key(3049)) HRESULT StructuralFrame::FrameSaveAs ( _bstr_t FileName );
__declspec(implementation_key(3050)) HRESULT StructuralFrame::FrameSaveAsTranslated ( _bstr_t FileName );
__declspec(implementation_key(3051)) _bstr_t StructuralFrame::FrameSaveAsBiDM ( _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title );
__declspec(implementation_key(3052)) double StructuralFrame::GetWeldGap ( );
__declspec(implementation_key(3053)) void StructuralFrame::PutWeldGap ( double _arg1 );
__declspec(implementation_key(3054)) HRESULT StructuralFrame::SideFaceEndAngle ( long SectionId, double * SideFaceEndAngle1, double * SideFaceEndAngle2 );
__declspec(implementation_key(3055)) HRESULT StructuralFrame::EndFaceEndAngle ( long SectionId, double * EndFaceEndAngle1, double * EndFaceEndAngle2 );
__declspec(implementation_key(3056)) HRESULT StructuralFrame::GetOverrideEndConditionEx ( long NumSegments, SAFEARRAY * SegmentIds, enum StructuralFrameEndConditionConstants * EndCondition, VARIANT * dValueEndConditionOrWeldGap, VARIANT_BOOL * bApplyWeldGap );
__declspec(implementation_key(3057)) HRESULT StructuralFrame::SetOverrideEndConditionEx ( long NumSegments, SAFEARRAY * SegmentIds, enum StructuralFrameEndConditionConstants EndCondition, const _variant_t & dValueEndConditionOrWeldGap, VARIANT_BOOL bApplyWeldGap );
__declspec(implementation_key(3058)) VARIANT_BOOL StructuralFrame::GetSplitPath ( );
__declspec(implementation_key(3059)) HRESULT StructuralFrame::ApplyExtendTrimToTools ( long NumTargetSegments, SAFEARRAY * TargetSegmentIds, enum StructuralFrameExtendTrimPositionConstants Position, long NumTools, SAFEARRAY * * Tools );
__declspec(implementation_key(3060)) TGPart::SuppressVariablePtr StructuralFrame::GetSuppressionVariable ( );
__declspec(implementation_key(3061)) TGPart::SuppressVariablePtr StructuralFrame::AddSuppressionVariable ( );
__declspec(implementation_key(3062)) HRESULT StructuralFrame::DeleteSuppressionVariable ( );
__declspec(implementation_key(3063)) VARIANT_BOOL StructuralFrame::HasSuppressionVariable ( );
__declspec(implementation_key(3064)) TGFramework::ApplicationPtr _IStructuralFramesAuto::GetApplication ( );
__declspec(implementation_key(3065)) IDispatchPtr _IStructuralFramesAuto::GetParent ( );
__declspec(implementation_key(3066)) StructuralFramePtr _IStructuralFramesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(3067)) long _IStructuralFramesAuto::GetCount ( );
__declspec(implementation_key(3068)) IUnknownPtr _IStructuralFramesAuto::Get_NewEnum ( );
__declspec(implementation_key(3069)) StructuralFramePtr _IStructuralFramesAuto::Add ( _bstr_t PartFileName, long NumPaths, SAFEARRAY * * Path, const _variant_t & GlobalEndConditions, const _variant_t & GlobalEndConditionValue, const _variant_t & AutoPosition );
__declspec(implementation_key(3070)) StructuralFramePtr _IStructuralFramesAuto::AddByOrientation ( _bstr_t PartFileName, _bstr_t CoOrdinateSystemName, long NumPaths, SAFEARRAY * * Path, const _variant_t & PreferredOrientationPlane, const _variant_t & GlobalEndConditions, const _variant_t & GlobalEndConditionValue, const _variant_t & AutoPosition );
__declspec(implementation_key(3071)) HRESULT _IStructuralFramesAuto::Delete ( struct StructuralFrame * StructuralFrame );
__declspec(implementation_key(3072)) HRESULT _IStructuralFramesAuto::FrameSaveAs ( _bstr_t FileName );
__declspec(implementation_key(3073)) HRESULT _IStructuralFramesAuto::FrameSaveAsTranslated ( _bstr_t FileName );
__declspec(implementation_key(3074)) _bstr_t _IStructuralFramesAuto::FrameSaveAsBiDM ( _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title );
__declspec(implementation_key(3075)) StructuralFramePtr _IStructuralFramesAuto::GetStructuralFrameByOccurrence ( IDispatch * Occurrence );
__declspec(implementation_key(3076)) StructuralFramePtr _IStructuralFramesAuto::AddWithSplitOnIntersection ( _bstr_t PartFileName, long NumPaths, SAFEARRAY * * Path, const _variant_t & PreferredOrientationPlane, const _variant_t & GlobalEndConditions, const _variant_t & GlobalEndConditionValue, const _variant_t & AutoPosition, _bstr_t CoOrdinateSystemName );
__declspec(implementation_key(3077)) TGFramework::ApplicationPtr _IStructuralFrameAuto::GetApplication ( );
__declspec(implementation_key(3078)) IDispatchPtr _IStructuralFrameAuto::GetParent ( );
__declspec(implementation_key(3079)) void _IStructuralFrameAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(3080)) _bstr_t _IStructuralFrameAuto::GetName ( );
__declspec(implementation_key(3081)) HRESULT _IStructuralFrameAuto::GetGlobalEndCondition ( enum StructuralFrameEndConditionConstants * EndCondition, VARIANT * dValue );
__declspec(implementation_key(3082)) HRESULT _IStructuralFrameAuto::SetGlobalEndCondition ( enum StructuralFrameEndConditionConstants EndCondition, const _variant_t & dValue );
__declspec(implementation_key(3083)) VARIANT_BOOL _IStructuralFrameAuto::GetAutoPosition ( );
__declspec(implementation_key(3084)) void _IStructuralFrameAuto::PutAutoPosition ( VARIANT_BOOL bAutoPosition );
__declspec(implementation_key(3085)) _bstr_t _IStructuralFrameAuto::GetGlobalDocument ( );
__declspec(implementation_key(3086)) void _IStructuralFrameAuto::PutGlobalDocument ( _bstr_t PartFileDocument );
__declspec(implementation_key(3087)) HRESULT _IStructuralFrameAuto::SetFramePath ( long NumPathSegments, SAFEARRAY * * PathSegments );
__declspec(implementation_key(3088)) HRESULT _IStructuralFrameAuto::GetFramePath ( long * NumPathSegments, SAFEARRAY * * PathSegments );
__declspec(implementation_key(3089)) HRESULT _IStructuralFrameAuto::GetSections ( long * NumSections, SAFEARRAY * * Sections );
__declspec(implementation_key(3090)) HRESULT _IStructuralFrameAuto::GetRedefineSectionPlacement ( long SectionId, VARIANT * Rotation, VARIANT * XDistance, VARIANT * YDistance );
__declspec(implementation_key(3091)) HRESULT _IStructuralFrameAuto::SetRedefineSectionPlacement ( long SectionId, const _variant_t & Rotation, const _variant_t & XDistance, const _variant_t & YDistance );
__declspec(implementation_key(3092)) HRESULT _IStructuralFrameAuto::GetRedefineSectionDocument ( long SectionId, BSTR * PartFileDocument );
__declspec(implementation_key(3093)) HRESULT _IStructuralFrameAuto::SetRedefineSectionDocument ( long SectionId, _bstr_t PartFileDocument );
__declspec(implementation_key(3094)) HRESULT _IStructuralFrameAuto::GetOverrideEndCondition ( long NumSegments, SAFEARRAY * SegmentIds, enum StructuralFrameEndConditionConstants * EndCondition, VARIANT * dValue );
__declspec(implementation_key(3095)) HRESULT _IStructuralFrameAuto::SetOverrideEndCondition ( long NumSegments, SAFEARRAY * SegmentIds, enum StructuralFrameEndConditionConstants EndCondition, const _variant_t & dValue );
__declspec(implementation_key(3096)) VARIANT_BOOL _IStructuralFrameAuto::GetVisible ( );
__declspec(implementation_key(3097)) void _IStructuralFrameAuto::PutVisible ( VARIANT_BOOL bVisible );
__declspec(implementation_key(3098)) HRESULT _IStructuralFrameAuto::CutLength ( double * dCutLength, VARIANT * bExactLength );
__declspec(implementation_key(3099)) HRESULT _IStructuralFrameAuto::SegmentCutLength ( long SectionId, double * dCutLength, VARIANT * bExactLength );
__declspec(implementation_key(3100)) HRESULT _IStructuralFrameAuto::GetFramePathObjects ( long * NumPathSegments, SAFEARRAY * * PathSegments );
__declspec(implementation_key(3101)) HRESULT _IStructuralFrameAuto::ReturnPathForGivenSectionID ( long SectionId, VARIANT * PathId, VARIANT * PathAsObject );
__declspec(implementation_key(3102)) HRESULT _IStructuralFrameAuto::ReturnOccurrenceForGivenSectionID ( long SectionId, VARIANT * OccurrenceID, VARIANT * OccurrenceAsObject );
__declspec(implementation_key(3103)) HRESULT _IStructuralFrameAuto::GetPlaneOrientationForGivenSectionID ( long SectionId, VARIANT * XOffset, VARIANT * YOffset, VARIANT * ZOffset, VARIANT * XRotation, VARIANT * YRotation, VARIANT * ZRotation );
__declspec(implementation_key(3104)) HRESULT _IStructuralFrameAuto::GetSetionIDObject ( long SectionId, IDispatch * * ProfileObject );
__declspec(implementation_key(3105)) HRESULT _IStructuralFrameAuto::RetrieveHoleLocation ( );
__declspec(implementation_key(3106)) HRESULT _IStructuralFrameAuto::DeleteHoleLocation ( );
__declspec(implementation_key(3107)) VARIANT_BOOL _IStructuralFrameAuto::GetSingleFrameForCollinearPaths ( );
__declspec(implementation_key(3108)) void _IStructuralFrameAuto::PutSingleFrameForCollinearPaths ( VARIANT_BOOL bSingleFrameForCollinearPaths );
__declspec(implementation_key(3109)) VARIANT_BOOL _IStructuralFrameAuto::GetSingleFrameForTangentialPaths ( );
__declspec(implementation_key(3110)) void _IStructuralFrameAuto::PutSingleFrameForTangentialPaths ( VARIANT_BOOL bSingleFrameForTangentialPaths );
__declspec(implementation_key(3111)) HRESULT _IStructuralFrameAuto::AssociateLegacyFrameToCrossSection ( );
__declspec(implementation_key(3112)) HRESULT _IStructuralFrameAuto::MiterCut ( long SectionId, double * MiterCut1, double * MiterCut2 );
__declspec(implementation_key(3113)) HRESULT _IStructuralFrameAuto::FrameSaveAs ( _bstr_t FileName );
__declspec(implementation_key(3114)) HRESULT _IStructuralFrameAuto::FrameSaveAsTranslated ( _bstr_t FileName );
__declspec(implementation_key(3115)) _bstr_t _IStructuralFrameAuto::FrameSaveAsBiDM ( _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title );
__declspec(implementation_key(3116)) double _IStructuralFrameAuto::GetWeldGap ( );
__declspec(implementation_key(3117)) void _IStructuralFrameAuto::PutWeldGap ( double dWeldGap );
__declspec(implementation_key(3118)) HRESULT _IStructuralFrameAuto::SideFaceEndAngle ( long SectionId, double * SideFaceEndAngle1, double * SideFaceEndAngle2 );
__declspec(implementation_key(3119)) HRESULT _IStructuralFrameAuto::EndFaceEndAngle ( long SectionId, double * EndFaceEndAngle1, double * EndFaceEndAngle2 );
__declspec(implementation_key(3120)) HRESULT _IStructuralFrameAuto::GetOverrideEndConditionEx ( long NumSegments, SAFEARRAY * SegmentIds, enum StructuralFrameEndConditionConstants * EndCondition, VARIANT * dValueEndConditionOrWeldGap, VARIANT_BOOL * bApplyWeldGap );
__declspec(implementation_key(3121)) HRESULT _IStructuralFrameAuto::SetOverrideEndConditionEx ( long NumSegments, SAFEARRAY * SegmentIds, enum StructuralFrameEndConditionConstants EndCondition, const _variant_t & dValueEndConditionOrWeldGap, VARIANT_BOOL bApplyWeldGap );
__declspec(implementation_key(3122)) VARIANT_BOOL _IStructuralFrameAuto::GetSplitPath ( );
__declspec(implementation_key(3123)) HRESULT _IStructuralFrameAuto::ApplyExtendTrimToTools ( long NumTargetSegments, SAFEARRAY * TargetSegmentIds, enum StructuralFrameExtendTrimPositionConstants Position, long NumTools, SAFEARRAY * * Tools );
__declspec(implementation_key(3124)) TGPart::SuppressVariablePtr _IStructuralFrameAuto::GetSuppressionVariable ( );
__declspec(implementation_key(3125)) TGPart::SuppressVariablePtr _IStructuralFrameAuto::AddSuppressionVariable ( );
__declspec(implementation_key(3126)) HRESULT _IStructuralFrameAuto::DeleteSuppressionVariable ( );
__declspec(implementation_key(3127)) VARIANT_BOOL _IStructuralFrameAuto::HasSuppressionVariable ( );
__declspec(implementation_key(3128)) TGFramework::ApplicationPtr AssemblyFeatures::GetApplication ( );
__declspec(implementation_key(3129)) IDispatchPtr AssemblyFeatures::GetParent ( );
__declspec(implementation_key(3130)) AssemblyFeaturesExtrudedCutoutsPtr AssemblyFeatures::GetAssemblyFeaturesExtrudedCutouts ( );
__declspec(implementation_key(3131)) AssemblyFeaturesRevolvedCutoutsPtr AssemblyFeatures::GetAssemblyFeaturesRevolvedCutouts ( );
__declspec(implementation_key(3132)) AssemblyFeaturesHolesPtr AssemblyFeatures::GetAssemblyFeaturesHoles ( );
__declspec(implementation_key(3133)) AssemblyFeaturesMirrorsPtr AssemblyFeatures::GetAssemblyFeaturesMirrors ( );
__declspec(implementation_key(3134)) AssemblyFeaturesPatternsPtr AssemblyFeatures::GetAssemblyFeaturesPatterns ( );
__declspec(implementation_key(3135)) AssemblyFilletWeldsPtr AssemblyFeatures::GetFilletWelds ( );
__declspec(implementation_key(3136)) AFGrooveWeldsPtr AssemblyFeatures::GetGrooveWelds ( );
__declspec(implementation_key(3137)) AssemblyFeaturesSweptProtrusionsPtr AssemblyFeatures::GetAssemblyFeaturesSweptProtrusions ( );
__declspec(implementation_key(3138)) AssemblyStitchWeldsPtr AssemblyFeatures::GetStitchWelds ( );
__declspec(implementation_key(3139)) AssemblyThreadsPtr AssemblyFeatures::GetThreads ( );
__declspec(implementation_key(3140)) AssemblyFeaturesExtrudedProtrusionsPtr AssemblyFeatures::GetExtrudedProtrusions ( );
__declspec(implementation_key(3141)) AssemblyFeaturesRevolvedProtrusionsPtr AssemblyFeatures::GetRevolvedProtrusions ( );
__declspec(implementation_key(3142)) HRESULT AssemblyFeatures::Recompute ( long options );
__declspec(implementation_key(3143)) AssemblyLabelWeldsPtr AssemblyFeatures::GetLabelWelds ( );
__declspec(implementation_key(3144)) TGFramework::ApplicationPtr AssemblyFeaturesExtrudedCutouts::GetApplication ( );
__declspec(implementation_key(3145)) IDispatchPtr AssemblyFeaturesExtrudedCutouts::GetParent ( );
__declspec(implementation_key(3146)) AssemblyFeaturesExtrudedCutoutPtr AssemblyFeaturesExtrudedCutouts::Item ( const _variant_t & Index );
__declspec(implementation_key(3147)) long AssemblyFeaturesExtrudedCutouts::GetCount ( );
__declspec(implementation_key(3148)) AssemblyFeaturesExtrudedCutoutPtr AssemblyFeaturesExtrudedCutouts::Add ( long nNumScopeParts, SAFEARRAY * * pScopeParts, long nNumProfiles, SAFEARRAY * * pProfiles, enum TGPart::FeaturePropertyConstants ExtentType, enum TGPart::FeaturePropertyConstants * pExtentSide, enum TGPart::FeaturePropertyConstants profileSide, double * pdDistance, IUnknown * pKeyPoint, enum TGPart::KeyPointExtentConstants * pKeyPointFlags, IUnknown * pFromSurfOrPlane, IUnknown * pToSurfOrPlane );
__declspec(implementation_key(3149)) TGFramework::ApplicationPtr AssemblyFeaturesExtrudedCutout::GetApplication ( );
__declspec(implementation_key(3150)) IDispatchPtr AssemblyFeaturesExtrudedCutout::GetParent ( );
__declspec(implementation_key(3151)) double AssemblyFeaturesExtrudedCutout::GetDepth ( );
__declspec(implementation_key(3152)) HRESULT AssemblyFeaturesExtrudedCutout::SetDepth ( double nDepth );
__declspec(implementation_key(3153)) enum TGPart::FeaturePropertyConstants AssemblyFeaturesExtrudedCutout::GetExtentSide ( );
__declspec(implementation_key(3154)) HRESULT AssemblyFeaturesExtrudedCutout::SetExtentSide ( enum TGPart::FeaturePropertyConstants ExtentSide );
__declspec(implementation_key(3155)) enum TGPart::FeaturePropertyConstants AssemblyFeaturesExtrudedCutout::GetExtentType ( );
__declspec(implementation_key(3156)) HRESULT AssemblyFeaturesExtrudedCutout::SetExtentType ( enum TGPart::FeaturePropertyConstants ExtentType );
__declspec(implementation_key(3157)) enum TGPart::FeaturePropertyConstants AssemblyFeaturesExtrudedCutout::GetProfileSide ( );
__declspec(implementation_key(3158)) HRESULT AssemblyFeaturesExtrudedCutout::SetProfileSide ( enum TGPart::FeaturePropertyConstants profileSide );
__declspec(implementation_key(3159)) HRESULT AssemblyFeaturesExtrudedCutout::GetProfiles ( long * NumProfiles, SAFEARRAY * * ppProfiles );
__declspec(implementation_key(3160)) HRESULT AssemblyFeaturesExtrudedCutout::SetProfiles ( long NumProfiles, SAFEARRAY * pProfiles );
__declspec(implementation_key(3161)) HRESULT AssemblyFeaturesExtrudedCutout::SetFromPlane ( IUnknown * FromPlane );
__declspec(implementation_key(3162)) IUnknownPtr AssemblyFeaturesExtrudedCutout::GetFromPlane ( );
__declspec(implementation_key(3163)) HRESULT AssemblyFeaturesExtrudedCutout::SetToPlane ( IUnknown * ToPlane );
__declspec(implementation_key(3164)) IUnknownPtr AssemblyFeaturesExtrudedCutout::GetToPlane ( );
__declspec(implementation_key(3165)) HRESULT AssemblyFeaturesExtrudedCutout::SetScopeParts ( long NumScopeParts, SAFEARRAY * pScopeParts );
__declspec(implementation_key(3166)) HRESULT AssemblyFeaturesExtrudedCutout::GetScopeParts ( long * NumScopeParts, SAFEARRAY * * pScopeParts );
__declspec(implementation_key(3167)) _bstr_t AssemblyFeaturesExtrudedCutout::GetName ( );
__declspec(implementation_key(3168)) void AssemblyFeaturesExtrudedCutout::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(3169)) IDispatchPtr AssemblyFeaturesExtrudedCutout::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(3170)) IDispatchPtr AssemblyFeaturesExtrudedCutout::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(3171)) IDispatchPtr AssemblyFeaturesExtrudedCutout::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(3172)) HRESULT AssemblyFeaturesExtrudedCutout::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 );
__declspec(implementation_key(3173)) VARIANT_BOOL AssemblyFeaturesExtrudedCutout::GetSuppress ( );
__declspec(implementation_key(3174)) void AssemblyFeaturesExtrudedCutout::PutSuppress ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3175)) HRESULT AssemblyFeaturesExtrudedCutout::Delete ( );
__declspec(implementation_key(3176)) HRESULT AssemblyFeaturesExtrudedCutout::RollToFeature ( );
__declspec(implementation_key(3177)) IDispatchPtr AssemblyFeaturesExtrudedCutout::GetEdgesForScopePart ( IUnknown * pScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(3178)) IDispatchPtr AssemblyFeaturesExtrudedCutout::GetFacesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(3179)) IDispatchPtr AssemblyFeaturesExtrudedCutout::GetFacesByRayForScopePart ( IUnknown * pScopePart, double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(3180)) enum TGPart::FeatureStatusConstants AssemblyFeaturesExtrudedCutout::GetStatus ( VARIANT * Description );
__declspec(implementation_key(3181)) TGPart::SuppressVariablePtr AssemblyFeaturesExtrudedCutout::GetSuppressionVariable ( );
__declspec(implementation_key(3182)) TGPart::SuppressVariablePtr AssemblyFeaturesExtrudedCutout::AddSuppressionVariable ( );
__declspec(implementation_key(3183)) HRESULT AssemblyFeaturesExtrudedCutout::DeleteSuppressionVariable ( );
__declspec(implementation_key(3184)) VARIANT_BOOL AssemblyFeaturesExtrudedCutout::HasSuppressionVariable ( );
__declspec(implementation_key(3185)) enum TGPart::FeatureTypeConstants AssemblyFeaturesExtrudedCutout::GetFeatureType ( );
__declspec(implementation_key(3186)) TGFramework::ApplicationPtr _IAssemblyFeaturesExtrudedCutoutsAuto::GetApplication ( );
__declspec(implementation_key(3187)) IDispatchPtr _IAssemblyFeaturesExtrudedCutoutsAuto::GetParent ( );
__declspec(implementation_key(3188)) AssemblyFeaturesExtrudedCutoutPtr _IAssemblyFeaturesExtrudedCutoutsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(3189)) IUnknownPtr _IAssemblyFeaturesExtrudedCutoutsAuto::Get_NewEnum ( );
__declspec(implementation_key(3190)) long _IAssemblyFeaturesExtrudedCutoutsAuto::GetCount ( );
__declspec(implementation_key(3191)) AssemblyFeaturesExtrudedCutoutPtr _IAssemblyFeaturesExtrudedCutoutsAuto::Add ( long nNumScopeParts, SAFEARRAY * * pScopeParts, long nNumProfiles, SAFEARRAY * * pProfiles, enum TGPart::FeaturePropertyConstants ExtentType, enum TGPart::FeaturePropertyConstants * pExtentSide, enum TGPart::FeaturePropertyConstants profileSide, double * pdDistance, IUnknown * pKeyPoint, enum TGPart::KeyPointExtentConstants * pKeyPointFlags, IUnknown * pFromSurfOrPlane, IUnknown * pToSurfOrPlane );
__declspec(implementation_key(3192)) TGFramework::ApplicationPtr _IAssemblyFeaturesExtrudedCutoutAuto::GetApplication ( );
__declspec(implementation_key(3193)) IDispatchPtr _IAssemblyFeaturesExtrudedCutoutAuto::GetParent ( );
__declspec(implementation_key(3194)) double _IAssemblyFeaturesExtrudedCutoutAuto::GetDepth ( );
__declspec(implementation_key(3195)) HRESULT _IAssemblyFeaturesExtrudedCutoutAuto::SetDepth ( double nDepth );
__declspec(implementation_key(3196)) enum TGPart::FeaturePropertyConstants _IAssemblyFeaturesExtrudedCutoutAuto::GetExtentSide ( );
__declspec(implementation_key(3197)) HRESULT _IAssemblyFeaturesExtrudedCutoutAuto::SetExtentSide ( enum TGPart::FeaturePropertyConstants ExtentSide );
__declspec(implementation_key(3198)) enum TGPart::FeaturePropertyConstants _IAssemblyFeaturesExtrudedCutoutAuto::GetExtentType ( );
__declspec(implementation_key(3199)) HRESULT _IAssemblyFeaturesExtrudedCutoutAuto::SetExtentType ( enum TGPart::FeaturePropertyConstants ExtentType );
__declspec(implementation_key(3200)) enum TGPart::FeaturePropertyConstants _IAssemblyFeaturesExtrudedCutoutAuto::GetProfileSide ( );
__declspec(implementation_key(3201)) HRESULT _IAssemblyFeaturesExtrudedCutoutAuto::SetProfileSide ( enum TGPart::FeaturePropertyConstants profileSide );
__declspec(implementation_key(3202)) HRESULT _IAssemblyFeaturesExtrudedCutoutAuto::GetProfiles ( long * NumProfiles, SAFEARRAY * * ppProfiles );
__declspec(implementation_key(3203)) HRESULT _IAssemblyFeaturesExtrudedCutoutAuto::SetProfiles ( long NumProfiles, SAFEARRAY * pProfiles );
__declspec(implementation_key(3204)) HRESULT _IAssemblyFeaturesExtrudedCutoutAuto::SetFromPlane ( IUnknown * FromPlane );
__declspec(implementation_key(3205)) IUnknownPtr _IAssemblyFeaturesExtrudedCutoutAuto::GetFromPlane ( );
__declspec(implementation_key(3206)) HRESULT _IAssemblyFeaturesExtrudedCutoutAuto::SetToPlane ( IUnknown * ToPlane );
__declspec(implementation_key(3207)) IUnknownPtr _IAssemblyFeaturesExtrudedCutoutAuto::GetToPlane ( );
__declspec(implementation_key(3208)) HRESULT _IAssemblyFeaturesExtrudedCutoutAuto::SetScopeParts ( long NumScopeParts, SAFEARRAY * pScopeParts );
__declspec(implementation_key(3209)) HRESULT _IAssemblyFeaturesExtrudedCutoutAuto::GetScopeParts ( long * NumScopeParts, SAFEARRAY * * pScopeParts );
__declspec(implementation_key(3210)) _bstr_t _IAssemblyFeaturesExtrudedCutoutAuto::GetName ( );
__declspec(implementation_key(3211)) void _IAssemblyFeaturesExtrudedCutoutAuto::PutName ( _bstr_t featureName );
__declspec(implementation_key(3212)) IDispatchPtr _IAssemblyFeaturesExtrudedCutoutAuto::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(3213)) IDispatchPtr _IAssemblyFeaturesExtrudedCutoutAuto::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(3214)) IDispatchPtr _IAssemblyFeaturesExtrudedCutoutAuto::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(3215)) HRESULT _IAssemblyFeaturesExtrudedCutoutAuto::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 );
__declspec(implementation_key(3216)) VARIANT_BOOL _IAssemblyFeaturesExtrudedCutoutAuto::GetSuppress ( );
__declspec(implementation_key(3217)) void _IAssemblyFeaturesExtrudedCutoutAuto::PutSuppress ( VARIANT_BOOL Suppress );
__declspec(implementation_key(3218)) HRESULT _IAssemblyFeaturesExtrudedCutoutAuto::Delete ( );
__declspec(implementation_key(3219)) HRESULT _IAssemblyFeaturesExtrudedCutoutAuto::RollToFeature ( );
__declspec(implementation_key(3220)) IDispatchPtr _IAssemblyFeaturesExtrudedCutoutAuto::GetEdgesForScopePart ( IUnknown * pScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(3221)) IDispatchPtr _IAssemblyFeaturesExtrudedCutoutAuto::GetFacesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(3222)) IDispatchPtr _IAssemblyFeaturesExtrudedCutoutAuto::GetFacesByRayForScopePart ( IUnknown * pScopePart, double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(3223)) enum TGPart::FeatureStatusConstants _IAssemblyFeaturesExtrudedCutoutAuto::GetStatus ( VARIANT * Description );
__declspec(implementation_key(3224)) TGPart::SuppressVariablePtr _IAssemblyFeaturesExtrudedCutoutAuto::GetSuppressionVariable ( );
__declspec(implementation_key(3225)) TGPart::SuppressVariablePtr _IAssemblyFeaturesExtrudedCutoutAuto::AddSuppressionVariable ( );
__declspec(implementation_key(3226)) HRESULT _IAssemblyFeaturesExtrudedCutoutAuto::DeleteSuppressionVariable ( );
__declspec(implementation_key(3227)) VARIANT_BOOL _IAssemblyFeaturesExtrudedCutoutAuto::HasSuppressionVariable ( );
__declspec(implementation_key(3228)) enum TGPart::FeatureTypeConstants _IAssemblyFeaturesExtrudedCutoutAuto::GetFeatureType ( );
__declspec(implementation_key(3229)) TGFramework::ApplicationPtr AssemblyFeaturesRevolvedCutouts::GetApplication ( );
__declspec(implementation_key(3230)) IDispatchPtr AssemblyFeaturesRevolvedCutouts::GetParent ( );
__declspec(implementation_key(3231)) AssemblyFeaturesRevolvedCutoutPtr AssemblyFeaturesRevolvedCutouts::Item ( const _variant_t & Index );
__declspec(implementation_key(3232)) long AssemblyFeaturesRevolvedCutouts::GetCount ( );
__declspec(implementation_key(3233)) AssemblyFeaturesRevolvedCutoutPtr AssemblyFeaturesRevolvedCutouts::Add ( long nNumScopeParts, SAFEARRAY * * pScopeParts, long nNumProfiles, SAFEARRAY * * pProfiles, IUnknown * pRefAxis, enum TGPart::FeaturePropertyConstants ExtentType, enum TGPart::FeaturePropertyConstants ExtentSide, enum TGPart::FeaturePropertyConstants profileSide, double * pdAngle, IUnknown * KeyPointOrTangentFace, enum TGPart::KeyPointExtentConstants * KeyPointFlags, IUnknown * pFromSurface, IUnknown * pToSurface );
__declspec(implementation_key(3234)) TGFramework::ApplicationPtr AssemblyFeaturesRevolvedCutout::GetApplication ( );
__declspec(implementation_key(3235)) IDispatchPtr AssemblyFeaturesRevolvedCutout::GetParent ( );
__declspec(implementation_key(3236)) double AssemblyFeaturesRevolvedCutout::GetAngle ( );
__declspec(implementation_key(3237)) HRESULT AssemblyFeaturesRevolvedCutout::SetAngle ( double nAngle );
__declspec(implementation_key(3238)) IUnknownPtr AssemblyFeaturesRevolvedCutout::GetReferenceAxis ( );
__declspec(implementation_key(3239)) HRESULT AssemblyFeaturesRevolvedCutout::SetReferenceAxis ( IUnknown * ReferenceAxis );
__declspec(implementation_key(3240)) enum TGPart::FeaturePropertyConstants AssemblyFeaturesRevolvedCutout::GetExtentSide ( );
__declspec(implementation_key(3241)) HRESULT AssemblyFeaturesRevolvedCutout::SetExtentSide ( enum TGPart::FeaturePropertyConstants ExtentSide );
__declspec(implementation_key(3242)) enum TGPart::FeaturePropertyConstants AssemblyFeaturesRevolvedCutout::GetExtentType ( );
__declspec(implementation_key(3243)) HRESULT AssemblyFeaturesRevolvedCutout::SetExtentType ( enum TGPart::FeaturePropertyConstants ExtentType );
__declspec(implementation_key(3244)) enum TGPart::FeaturePropertyConstants AssemblyFeaturesRevolvedCutout::GetProfileSide ( );
__declspec(implementation_key(3245)) HRESULT AssemblyFeaturesRevolvedCutout::SetProfileSide ( enum TGPart::FeaturePropertyConstants profileSide );
__declspec(implementation_key(3246)) HRESULT AssemblyFeaturesRevolvedCutout::GetProfiles ( long * NumProfiles, SAFEARRAY * * ppProfiles );
__declspec(implementation_key(3247)) HRESULT AssemblyFeaturesRevolvedCutout::SetProfiles ( long NumProfiles, SAFEARRAY * pProfiles );
__declspec(implementation_key(3248)) HRESULT AssemblyFeaturesRevolvedCutout::SetScopeParts ( long NumScopeParts, SAFEARRAY * pScopeParts );
__declspec(implementation_key(3249)) HRESULT AssemblyFeaturesRevolvedCutout::GetScopeParts ( long * NumScopeParts, SAFEARRAY * * pScopeParts );
__declspec(implementation_key(3250)) _bstr_t AssemblyFeaturesRevolvedCutout::GetName ( );
__declspec(implementation_key(3251)) void AssemblyFeaturesRevolvedCutout::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(3252)) IDispatchPtr AssemblyFeaturesRevolvedCutout::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(3253)) IDispatchPtr AssemblyFeaturesRevolvedCutout::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(3254)) IDispatchPtr AssemblyFeaturesRevolvedCutout::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(3255)) HRESULT AssemblyFeaturesRevolvedCutout::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 );
__declspec(implementation_key(3256)) VARIANT_BOOL AssemblyFeaturesRevolvedCutout::GetSuppress ( );
__declspec(implementation_key(3257)) void AssemblyFeaturesRevolvedCutout::PutSuppress ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3258)) HRESULT AssemblyFeaturesRevolvedCutout::Delete ( );
__declspec(implementation_key(3259)) HRESULT AssemblyFeaturesRevolvedCutout::RollToFeature ( );
__declspec(implementation_key(3260)) IDispatchPtr AssemblyFeaturesRevolvedCutout::GetEdgesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(3261)) IDispatchPtr AssemblyFeaturesRevolvedCutout::GetFacesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(3262)) IDispatchPtr AssemblyFeaturesRevolvedCutout::GetFacesByRayForScopePart ( IUnknown * ScopePart, double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(3263)) enum TGPart::FeatureStatusConstants AssemblyFeaturesRevolvedCutout::GetStatus ( VARIANT * Description );
__declspec(implementation_key(3264)) TGPart::SuppressVariablePtr AssemblyFeaturesRevolvedCutout::GetSuppressionVariable ( );
__declspec(implementation_key(3265)) TGPart::SuppressVariablePtr AssemblyFeaturesRevolvedCutout::AddSuppressionVariable ( );
__declspec(implementation_key(3266)) HRESULT AssemblyFeaturesRevolvedCutout::DeleteSuppressionVariable ( );
__declspec(implementation_key(3267)) VARIANT_BOOL AssemblyFeaturesRevolvedCutout::HasSuppressionVariable ( );
__declspec(implementation_key(3268)) enum TGPart::FeatureTypeConstants AssemblyFeaturesRevolvedCutout::GetFeatureType ( );
__declspec(implementation_key(3269)) TGFramework::ApplicationPtr _IAssemblyFeaturesRevolvedCutoutsAuto::GetApplication ( );
__declspec(implementation_key(3270)) IDispatchPtr _IAssemblyFeaturesRevolvedCutoutsAuto::GetParent ( );
__declspec(implementation_key(3271)) AssemblyFeaturesRevolvedCutoutPtr _IAssemblyFeaturesRevolvedCutoutsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(3272)) IUnknownPtr _IAssemblyFeaturesRevolvedCutoutsAuto::Get_NewEnum ( );
__declspec(implementation_key(3273)) long _IAssemblyFeaturesRevolvedCutoutsAuto::GetCount ( );
__declspec(implementation_key(3274)) AssemblyFeaturesRevolvedCutoutPtr _IAssemblyFeaturesRevolvedCutoutsAuto::Add ( long nNumScopeParts, SAFEARRAY * * pScopeParts, long nNumProfiles, SAFEARRAY * * pProfiles, IUnknown * pRefAxis, enum TGPart::FeaturePropertyConstants ExtentType, enum TGPart::FeaturePropertyConstants ExtentSide, enum TGPart::FeaturePropertyConstants profileSide, double * pdAngle, IUnknown * KeyPointOrTangentFace, enum TGPart::KeyPointExtentConstants * KeyPointFlags, IUnknown * pFromSurface, IUnknown * pToSurface );
__declspec(implementation_key(3275)) TGFramework::ApplicationPtr _IAssemblyFeaturesRevolvedCutoutAuto::GetApplication ( );
__declspec(implementation_key(3276)) IDispatchPtr _IAssemblyFeaturesRevolvedCutoutAuto::GetParent ( );
__declspec(implementation_key(3277)) double _IAssemblyFeaturesRevolvedCutoutAuto::GetAngle ( );
__declspec(implementation_key(3278)) HRESULT _IAssemblyFeaturesRevolvedCutoutAuto::SetAngle ( double nAngle );
__declspec(implementation_key(3279)) IUnknownPtr _IAssemblyFeaturesRevolvedCutoutAuto::GetReferenceAxis ( );
__declspec(implementation_key(3280)) HRESULT _IAssemblyFeaturesRevolvedCutoutAuto::SetReferenceAxis ( IUnknown * ReferenceAxis );
__declspec(implementation_key(3281)) enum TGPart::FeaturePropertyConstants _IAssemblyFeaturesRevolvedCutoutAuto::GetExtentSide ( );
__declspec(implementation_key(3282)) HRESULT _IAssemblyFeaturesRevolvedCutoutAuto::SetExtentSide ( enum TGPart::FeaturePropertyConstants ExtentSide );
__declspec(implementation_key(3283)) enum TGPart::FeaturePropertyConstants _IAssemblyFeaturesRevolvedCutoutAuto::GetExtentType ( );
__declspec(implementation_key(3284)) HRESULT _IAssemblyFeaturesRevolvedCutoutAuto::SetExtentType ( enum TGPart::FeaturePropertyConstants ExtentType );
__declspec(implementation_key(3285)) enum TGPart::FeaturePropertyConstants _IAssemblyFeaturesRevolvedCutoutAuto::GetProfileSide ( );
__declspec(implementation_key(3286)) HRESULT _IAssemblyFeaturesRevolvedCutoutAuto::SetProfileSide ( enum TGPart::FeaturePropertyConstants profileSide );
__declspec(implementation_key(3287)) HRESULT _IAssemblyFeaturesRevolvedCutoutAuto::GetProfiles ( long * NumProfiles, SAFEARRAY * * ppProfiles );
__declspec(implementation_key(3288)) HRESULT _IAssemblyFeaturesRevolvedCutoutAuto::SetProfiles ( long NumProfiles, SAFEARRAY * pProfiles );
__declspec(implementation_key(3289)) HRESULT _IAssemblyFeaturesRevolvedCutoutAuto::SetScopeParts ( long NumScopeParts, SAFEARRAY * pScopeParts );
__declspec(implementation_key(3290)) HRESULT _IAssemblyFeaturesRevolvedCutoutAuto::GetScopeParts ( long * NumScopeParts, SAFEARRAY * * pScopeParts );
__declspec(implementation_key(3291)) _bstr_t _IAssemblyFeaturesRevolvedCutoutAuto::GetName ( );
__declspec(implementation_key(3292)) void _IAssemblyFeaturesRevolvedCutoutAuto::PutName ( _bstr_t featureName );
__declspec(implementation_key(3293)) IDispatchPtr _IAssemblyFeaturesRevolvedCutoutAuto::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(3294)) IDispatchPtr _IAssemblyFeaturesRevolvedCutoutAuto::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(3295)) IDispatchPtr _IAssemblyFeaturesRevolvedCutoutAuto::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(3296)) HRESULT _IAssemblyFeaturesRevolvedCutoutAuto::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 );
__declspec(implementation_key(3297)) VARIANT_BOOL _IAssemblyFeaturesRevolvedCutoutAuto::GetSuppress ( );
__declspec(implementation_key(3298)) void _IAssemblyFeaturesRevolvedCutoutAuto::PutSuppress ( VARIANT_BOOL Suppress );
__declspec(implementation_key(3299)) HRESULT _IAssemblyFeaturesRevolvedCutoutAuto::Delete ( );
__declspec(implementation_key(3300)) HRESULT _IAssemblyFeaturesRevolvedCutoutAuto::RollToFeature ( );
__declspec(implementation_key(3301)) IDispatchPtr _IAssemblyFeaturesRevolvedCutoutAuto::GetEdgesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(3302)) IDispatchPtr _IAssemblyFeaturesRevolvedCutoutAuto::GetFacesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(3303)) IDispatchPtr _IAssemblyFeaturesRevolvedCutoutAuto::GetFacesByRayForScopePart ( IUnknown * ScopePart, double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(3304)) enum TGPart::FeatureStatusConstants _IAssemblyFeaturesRevolvedCutoutAuto::GetStatus ( VARIANT * Description );
__declspec(implementation_key(3305)) TGPart::SuppressVariablePtr _IAssemblyFeaturesRevolvedCutoutAuto::GetSuppressionVariable ( );
__declspec(implementation_key(3306)) TGPart::SuppressVariablePtr _IAssemblyFeaturesRevolvedCutoutAuto::AddSuppressionVariable ( );
__declspec(implementation_key(3307)) HRESULT _IAssemblyFeaturesRevolvedCutoutAuto::DeleteSuppressionVariable ( );
__declspec(implementation_key(3308)) VARIANT_BOOL _IAssemblyFeaturesRevolvedCutoutAuto::HasSuppressionVariable ( );
__declspec(implementation_key(3309)) enum TGPart::FeatureTypeConstants _IAssemblyFeaturesRevolvedCutoutAuto::GetFeatureType ( );
__declspec(implementation_key(3310)) TGFramework::ApplicationPtr AssemblyFeaturesHoles::GetApplication ( );
__declspec(implementation_key(3311)) IDispatchPtr AssemblyFeaturesHoles::GetParent ( );
__declspec(implementation_key(3312)) AssemblyFeaturesHolePtr AssemblyFeaturesHoles::Item ( const _variant_t & Index );
__declspec(implementation_key(3313)) long AssemblyFeaturesHoles::GetCount ( );
__declspec(implementation_key(3314)) AssemblyFeaturesHolePtr AssemblyFeaturesHoles::Add ( unsigned long nNumScopeParts, SAFEARRAY * * pScopeParts, unsigned long nNumProfiles, SAFEARRAY * * pProfiles, enum TGPart::FeaturePropertyConstants * pExtentSide, IUnknown * pHoledata, enum TGPart::FeaturePropertyConstants ExtentType, double * pHoleDepth, IUnknown * pFromSurfOrPlane, IUnknown * pToSurfOrPlane, IUnknown * pKeyPoint, enum TGPart::KeyPointExtentConstants * pKeyPointFlags );
__declspec(implementation_key(3315)) TGFramework::ApplicationPtr AssemblyFeaturesHole::GetApplication ( );
__declspec(implementation_key(3316)) IDispatchPtr AssemblyFeaturesHole::GetParent ( );
__declspec(implementation_key(3317)) double AssemblyFeaturesHole::GetDepth ( );
__declspec(implementation_key(3318)) HRESULT AssemblyFeaturesHole::SetDepth ( double nDepth );
__declspec(implementation_key(3319)) enum TGPart::FeaturePropertyConstants AssemblyFeaturesHole::GetExtentSide ( );
__declspec(implementation_key(3320)) HRESULT AssemblyFeaturesHole::SetExtentSide ( enum TGPart::FeaturePropertyConstants ExtentSide );
__declspec(implementation_key(3321)) enum TGPart::FeaturePropertyConstants AssemblyFeaturesHole::GetExtentType ( );
__declspec(implementation_key(3322)) HRESULT AssemblyFeaturesHole::SetExtentType ( enum TGPart::FeaturePropertyConstants ExtentType );
__declspec(implementation_key(3323)) IUnknownPtr AssemblyFeaturesHole::GetHoleData ( );
__declspec(implementation_key(3324)) HRESULT AssemblyFeaturesHole::SetHoleData ( IUnknown * Holedata );
__declspec(implementation_key(3325)) HRESULT AssemblyFeaturesHole::GetProfiles ( long * NumProfiles, SAFEARRAY * * ppProfiles );
__declspec(implementation_key(3326)) HRESULT AssemblyFeaturesHole::SetProfiles ( long NumProfiles, SAFEARRAY * pProfiles );
__declspec(implementation_key(3327)) HRESULT AssemblyFeaturesHole::SetFromPlane ( IUnknown * FromPlane );
__declspec(implementation_key(3328)) IUnknownPtr AssemblyFeaturesHole::GetFromPlane ( );
__declspec(implementation_key(3329)) HRESULT AssemblyFeaturesHole::SetToPlane ( IUnknown * ToPlane );
__declspec(implementation_key(3330)) IUnknownPtr AssemblyFeaturesHole::GetToPlane ( );
__declspec(implementation_key(3331)) HRESULT AssemblyFeaturesHole::SetScopeParts ( long NumScopeParts, SAFEARRAY * pScopeParts );
__declspec(implementation_key(3332)) HRESULT AssemblyFeaturesHole::GetScopeParts ( long * NumScopeParts, SAFEARRAY * * pScopeParts );
__declspec(implementation_key(3333)) _bstr_t AssemblyFeaturesHole::GetName ( );
__declspec(implementation_key(3334)) void AssemblyFeaturesHole::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(3335)) IDispatchPtr AssemblyFeaturesHole::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(3336)) IDispatchPtr AssemblyFeaturesHole::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(3337)) IDispatchPtr AssemblyFeaturesHole::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(3338)) HRESULT AssemblyFeaturesHole::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 );
__declspec(implementation_key(3339)) VARIANT_BOOL AssemblyFeaturesHole::GetSuppress ( );
__declspec(implementation_key(3340)) void AssemblyFeaturesHole::PutSuppress ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3341)) HRESULT AssemblyFeaturesHole::Delete ( );
__declspec(implementation_key(3342)) HRESULT AssemblyFeaturesHole::RollToFeature ( );
__declspec(implementation_key(3343)) IDispatchPtr AssemblyFeaturesHole::GetEdgesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(3344)) IDispatchPtr AssemblyFeaturesHole::GetFacesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(3345)) IDispatchPtr AssemblyFeaturesHole::GetFacesByRayForScopePart ( IUnknown * ScopePart, double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(3346)) enum TGPart::FeatureStatusConstants AssemblyFeaturesHole::GetStatus ( VARIANT * Description );
__declspec(implementation_key(3347)) TGPart::SuppressVariablePtr AssemblyFeaturesHole::GetSuppressionVariable ( );
__declspec(implementation_key(3348)) TGPart::SuppressVariablePtr AssemblyFeaturesHole::AddSuppressionVariable ( );
__declspec(implementation_key(3349)) HRESULT AssemblyFeaturesHole::DeleteSuppressionVariable ( );
__declspec(implementation_key(3350)) VARIANT_BOOL AssemblyFeaturesHole::HasSuppressionVariable ( );
__declspec(implementation_key(3351)) enum TGPart::FeatureTypeConstants AssemblyFeaturesHole::GetFeatureType ( );
__declspec(implementation_key(3352)) TGFramework::ApplicationPtr _IAssemblyFeaturesHolesAuto::GetApplication ( );
__declspec(implementation_key(3353)) IDispatchPtr _IAssemblyFeaturesHolesAuto::GetParent ( );
__declspec(implementation_key(3354)) AssemblyFeaturesHolePtr _IAssemblyFeaturesHolesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(3355)) IUnknownPtr _IAssemblyFeaturesHolesAuto::Get_NewEnum ( );
__declspec(implementation_key(3356)) long _IAssemblyFeaturesHolesAuto::GetCount ( );
__declspec(implementation_key(3357)) AssemblyFeaturesHolePtr _IAssemblyFeaturesHolesAuto::Add ( unsigned long nNumScopeParts, SAFEARRAY * * pScopeParts, unsigned long nNumProfiles, SAFEARRAY * * pProfiles, enum TGPart::FeaturePropertyConstants * pExtentSide, IUnknown * pHoledata, enum TGPart::FeaturePropertyConstants ExtentType, double * pHoleDepth, IUnknown * pFromSurfOrPlane, IUnknown * pToSurfOrPlane, IUnknown * pKeyPoint, enum TGPart::KeyPointExtentConstants * pKeyPointFlags );
__declspec(implementation_key(3358)) TGFramework::ApplicationPtr _IAssemblyFeaturesHoleAuto::GetApplication ( );
__declspec(implementation_key(3359)) IDispatchPtr _IAssemblyFeaturesHoleAuto::GetParent ( );
__declspec(implementation_key(3360)) double _IAssemblyFeaturesHoleAuto::GetDepth ( );
__declspec(implementation_key(3361)) HRESULT _IAssemblyFeaturesHoleAuto::SetDepth ( double nDepth );
__declspec(implementation_key(3362)) enum TGPart::FeaturePropertyConstants _IAssemblyFeaturesHoleAuto::GetExtentSide ( );
__declspec(implementation_key(3363)) HRESULT _IAssemblyFeaturesHoleAuto::SetExtentSide ( enum TGPart::FeaturePropertyConstants ExtentSide );
__declspec(implementation_key(3364)) enum TGPart::FeaturePropertyConstants _IAssemblyFeaturesHoleAuto::GetExtentType ( );
__declspec(implementation_key(3365)) HRESULT _IAssemblyFeaturesHoleAuto::SetExtentType ( enum TGPart::FeaturePropertyConstants ExtentType );
__declspec(implementation_key(3366)) IUnknownPtr _IAssemblyFeaturesHoleAuto::GetHoleData ( );
__declspec(implementation_key(3367)) HRESULT _IAssemblyFeaturesHoleAuto::SetHoleData ( IUnknown * Holedata );
__declspec(implementation_key(3368)) HRESULT _IAssemblyFeaturesHoleAuto::GetProfiles ( long * NumProfiles, SAFEARRAY * * ppProfiles );
__declspec(implementation_key(3369)) HRESULT _IAssemblyFeaturesHoleAuto::SetProfiles ( long NumProfiles, SAFEARRAY * pProfiles );
__declspec(implementation_key(3370)) HRESULT _IAssemblyFeaturesHoleAuto::SetFromPlane ( IUnknown * FromPlane );
__declspec(implementation_key(3371)) IUnknownPtr _IAssemblyFeaturesHoleAuto::GetFromPlane ( );
__declspec(implementation_key(3372)) HRESULT _IAssemblyFeaturesHoleAuto::SetToPlane ( IUnknown * ToPlane );
__declspec(implementation_key(3373)) IUnknownPtr _IAssemblyFeaturesHoleAuto::GetToPlane ( );
__declspec(implementation_key(3374)) HRESULT _IAssemblyFeaturesHoleAuto::SetScopeParts ( long NumScopeParts, SAFEARRAY * pScopeParts );
__declspec(implementation_key(3375)) HRESULT _IAssemblyFeaturesHoleAuto::GetScopeParts ( long * NumScopeParts, SAFEARRAY * * pScopeParts );
__declspec(implementation_key(3376)) _bstr_t _IAssemblyFeaturesHoleAuto::GetName ( );
__declspec(implementation_key(3377)) void _IAssemblyFeaturesHoleAuto::PutName ( _bstr_t featureName );
__declspec(implementation_key(3378)) IDispatchPtr _IAssemblyFeaturesHoleAuto::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(3379)) IDispatchPtr _IAssemblyFeaturesHoleAuto::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(3380)) IDispatchPtr _IAssemblyFeaturesHoleAuto::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(3381)) HRESULT _IAssemblyFeaturesHoleAuto::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 );
__declspec(implementation_key(3382)) VARIANT_BOOL _IAssemblyFeaturesHoleAuto::GetSuppress ( );
__declspec(implementation_key(3383)) void _IAssemblyFeaturesHoleAuto::PutSuppress ( VARIANT_BOOL Suppress );
__declspec(implementation_key(3384)) HRESULT _IAssemblyFeaturesHoleAuto::Delete ( );
__declspec(implementation_key(3385)) HRESULT _IAssemblyFeaturesHoleAuto::RollToFeature ( );
__declspec(implementation_key(3386)) IDispatchPtr _IAssemblyFeaturesHoleAuto::GetEdgesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(3387)) IDispatchPtr _IAssemblyFeaturesHoleAuto::GetFacesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(3388)) IDispatchPtr _IAssemblyFeaturesHoleAuto::GetFacesByRayForScopePart ( IUnknown * ScopePart, double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(3389)) enum TGPart::FeatureStatusConstants _IAssemblyFeaturesHoleAuto::GetStatus ( VARIANT * Description );
__declspec(implementation_key(3390)) TGPart::SuppressVariablePtr _IAssemblyFeaturesHoleAuto::GetSuppressionVariable ( );
__declspec(implementation_key(3391)) TGPart::SuppressVariablePtr _IAssemblyFeaturesHoleAuto::AddSuppressionVariable ( );
__declspec(implementation_key(3392)) HRESULT _IAssemblyFeaturesHoleAuto::DeleteSuppressionVariable ( );
__declspec(implementation_key(3393)) VARIANT_BOOL _IAssemblyFeaturesHoleAuto::HasSuppressionVariable ( );
__declspec(implementation_key(3394)) enum TGPart::FeatureTypeConstants _IAssemblyFeaturesHoleAuto::GetFeatureType ( );
__declspec(implementation_key(3395)) TGFramework::ApplicationPtr AssemblyFeaturesMirrors::GetApplication ( );
__declspec(implementation_key(3396)) IDispatchPtr AssemblyFeaturesMirrors::GetParent ( );
__declspec(implementation_key(3397)) AssemblyFeaturesMirrorPtr AssemblyFeaturesMirrors::Item ( const _variant_t & Index );
__declspec(implementation_key(3398)) long AssemblyFeaturesMirrors::GetCount ( );
__declspec(implementation_key(3399)) AssemblyFeaturesMirrorPtr AssemblyFeaturesMirrors::Add ( long NumberOfFeatures, SAFEARRAY * * ppFeaturesArray, IUnknown * pMirrorPlane, enum TGPart::FeaturePropertyConstants MirrorType );
__declspec(implementation_key(3400)) TGFramework::ApplicationPtr AssemblyFeaturesMirror::GetApplication ( );
__declspec(implementation_key(3401)) IDispatchPtr AssemblyFeaturesMirror::GetParent ( );
__declspec(implementation_key(3402)) HRESULT AssemblyFeaturesMirror::SetPlane ( IUnknown * Plane );
__declspec(implementation_key(3403)) IUnknownPtr AssemblyFeaturesMirror::GetPlane ( );
__declspec(implementation_key(3404)) HRESULT AssemblyFeaturesMirror::GetParentFeatures ( long * NumParentFeatures, SAFEARRAY * * ppParentFeatures );
__declspec(implementation_key(3405)) HRESULT AssemblyFeaturesMirror::SetParentFeatures ( long NumParentFeatures, SAFEARRAY * pParentFeatures );
__declspec(implementation_key(3406)) enum TGPart::FeaturePropertyConstants AssemblyFeaturesMirror::GetMirrorType ( );
__declspec(implementation_key(3407)) HRESULT AssemblyFeaturesMirror::SetMirrorType ( enum TGPart::FeaturePropertyConstants MirrorType );
__declspec(implementation_key(3408)) _bstr_t AssemblyFeaturesMirror::GetName ( );
__declspec(implementation_key(3409)) void AssemblyFeaturesMirror::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(3410)) IDispatchPtr AssemblyFeaturesMirror::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(3411)) IDispatchPtr AssemblyFeaturesMirror::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(3412)) IDispatchPtr AssemblyFeaturesMirror::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(3413)) HRESULT AssemblyFeaturesMirror::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 );
__declspec(implementation_key(3414)) VARIANT_BOOL AssemblyFeaturesMirror::GetSuppress ( );
__declspec(implementation_key(3415)) void AssemblyFeaturesMirror::PutSuppress ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3416)) HRESULT AssemblyFeaturesMirror::Delete ( );
__declspec(implementation_key(3417)) HRESULT AssemblyFeaturesMirror::RollToFeature ( );
__declspec(implementation_key(3418)) IDispatchPtr AssemblyFeaturesMirror::GetEdgesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(3419)) IDispatchPtr AssemblyFeaturesMirror::GetFacesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(3420)) IDispatchPtr AssemblyFeaturesMirror::GetFacesByRayForScopePart ( IUnknown * ScopePart, double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(3421)) enum TGPart::FeatureStatusConstants AssemblyFeaturesMirror::GetStatus ( VARIANT * Description );
__declspec(implementation_key(3422)) TGPart::SuppressVariablePtr AssemblyFeaturesMirror::GetSuppressionVariable ( );
__declspec(implementation_key(3423)) TGPart::SuppressVariablePtr AssemblyFeaturesMirror::AddSuppressionVariable ( );
__declspec(implementation_key(3424)) HRESULT AssemblyFeaturesMirror::DeleteSuppressionVariable ( );
__declspec(implementation_key(3425)) VARIANT_BOOL AssemblyFeaturesMirror::HasSuppressionVariable ( );
__declspec(implementation_key(3426)) enum TGPart::FeatureTypeConstants AssemblyFeaturesMirror::GetFeatureType ( );
__declspec(implementation_key(3427)) TGFramework::ApplicationPtr _IAssemblyFeaturesMirrorsAuto::GetApplication ( );
__declspec(implementation_key(3428)) IDispatchPtr _IAssemblyFeaturesMirrorsAuto::GetParent ( );
__declspec(implementation_key(3429)) AssemblyFeaturesMirrorPtr _IAssemblyFeaturesMirrorsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(3430)) IUnknownPtr _IAssemblyFeaturesMirrorsAuto::Get_NewEnum ( );
__declspec(implementation_key(3431)) long _IAssemblyFeaturesMirrorsAuto::GetCount ( );
__declspec(implementation_key(3432)) AssemblyFeaturesMirrorPtr _IAssemblyFeaturesMirrorsAuto::Add ( long NumberOfFeatures, SAFEARRAY * * ppFeaturesArray, IUnknown * pMirrorPlane, enum TGPart::FeaturePropertyConstants MirrorType );
__declspec(implementation_key(3433)) TGFramework::ApplicationPtr _IAssemblyFeaturesMirrorAuto::GetApplication ( );
__declspec(implementation_key(3434)) IDispatchPtr _IAssemblyFeaturesMirrorAuto::GetParent ( );
__declspec(implementation_key(3435)) HRESULT _IAssemblyFeaturesMirrorAuto::SetPlane ( IUnknown * Plane );
__declspec(implementation_key(3436)) IUnknownPtr _IAssemblyFeaturesMirrorAuto::GetPlane ( );
__declspec(implementation_key(3437)) HRESULT _IAssemblyFeaturesMirrorAuto::GetParentFeatures ( long * NumParentFeatures, SAFEARRAY * * ppParentFeatures );
__declspec(implementation_key(3438)) HRESULT _IAssemblyFeaturesMirrorAuto::SetParentFeatures ( long NumParentFeatures, SAFEARRAY * pParentFeatures );
__declspec(implementation_key(3439)) enum TGPart::FeaturePropertyConstants _IAssemblyFeaturesMirrorAuto::GetMirrorType ( );
__declspec(implementation_key(3440)) HRESULT _IAssemblyFeaturesMirrorAuto::SetMirrorType ( enum TGPart::FeaturePropertyConstants MirrorType );
__declspec(implementation_key(3441)) _bstr_t _IAssemblyFeaturesMirrorAuto::GetName ( );
__declspec(implementation_key(3442)) void _IAssemblyFeaturesMirrorAuto::PutName ( _bstr_t featureName );
__declspec(implementation_key(3443)) IDispatchPtr _IAssemblyFeaturesMirrorAuto::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(3444)) IDispatchPtr _IAssemblyFeaturesMirrorAuto::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(3445)) IDispatchPtr _IAssemblyFeaturesMirrorAuto::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(3446)) HRESULT _IAssemblyFeaturesMirrorAuto::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 );
__declspec(implementation_key(3447)) VARIANT_BOOL _IAssemblyFeaturesMirrorAuto::GetSuppress ( );
__declspec(implementation_key(3448)) void _IAssemblyFeaturesMirrorAuto::PutSuppress ( VARIANT_BOOL Suppress );
__declspec(implementation_key(3449)) HRESULT _IAssemblyFeaturesMirrorAuto::Delete ( );
__declspec(implementation_key(3450)) HRESULT _IAssemblyFeaturesMirrorAuto::RollToFeature ( );
__declspec(implementation_key(3451)) IDispatchPtr _IAssemblyFeaturesMirrorAuto::GetEdgesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(3452)) IDispatchPtr _IAssemblyFeaturesMirrorAuto::GetFacesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(3453)) IDispatchPtr _IAssemblyFeaturesMirrorAuto::GetFacesByRayForScopePart ( IUnknown * ScopePart, double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(3454)) enum TGPart::FeatureStatusConstants _IAssemblyFeaturesMirrorAuto::GetStatus ( VARIANT * Description );
__declspec(implementation_key(3455)) TGPart::SuppressVariablePtr _IAssemblyFeaturesMirrorAuto::GetSuppressionVariable ( );
__declspec(implementation_key(3456)) TGPart::SuppressVariablePtr _IAssemblyFeaturesMirrorAuto::AddSuppressionVariable ( );
__declspec(implementation_key(3457)) HRESULT _IAssemblyFeaturesMirrorAuto::DeleteSuppressionVariable ( );
__declspec(implementation_key(3458)) VARIANT_BOOL _IAssemblyFeaturesMirrorAuto::HasSuppressionVariable ( );
__declspec(implementation_key(3459)) enum TGPart::FeatureTypeConstants _IAssemblyFeaturesMirrorAuto::GetFeatureType ( );
__declspec(implementation_key(3460)) TGFramework::ApplicationPtr AssemblyFeaturesPatterns::GetApplication ( );
__declspec(implementation_key(3461)) IDispatchPtr AssemblyFeaturesPatterns::GetParent ( );
__declspec(implementation_key(3462)) AssemblyFeaturesPatternPtr AssemblyFeaturesPatterns::Item ( const _variant_t & Index );
__declspec(implementation_key(3463)) long AssemblyFeaturesPatterns::GetCount ( );
__declspec(implementation_key(3464)) AssemblyFeaturesPatternPtr AssemblyFeaturesPatterns::Add ( long NumberOfFeatures, SAFEARRAY * * ppFeaturesArray, IUnknown * Profile, enum TGPart::FeaturePropertyConstants PatternType );
__declspec(implementation_key(3465)) TGFramework::ApplicationPtr AssemblyFeaturesPattern::GetApplication ( );
__declspec(implementation_key(3466)) IDispatchPtr AssemblyFeaturesPattern::GetParent ( );
__declspec(implementation_key(3467)) HRESULT AssemblyFeaturesPattern::SetProfile ( IUnknown * pProfile );
__declspec(implementation_key(3468)) IUnknownPtr AssemblyFeaturesPattern::GetProfile ( );
__declspec(implementation_key(3469)) HRESULT AssemblyFeaturesPattern::GetParentFeatures ( long * NumParentFeatures, SAFEARRAY * * ppParentFeatures );
__declspec(implementation_key(3470)) HRESULT AssemblyFeaturesPattern::SetParentFeatures ( long NumParentFeatures, SAFEARRAY * pParentFeatures );
__declspec(implementation_key(3471)) enum TGPart::FeaturePropertyConstants AssemblyFeaturesPattern::GetPatternType ( );
__declspec(implementation_key(3472)) HRESULT AssemblyFeaturesPattern::SetPatternType ( enum TGPart::FeaturePropertyConstants PatternType );
__declspec(implementation_key(3473)) _bstr_t AssemblyFeaturesPattern::GetName ( );
__declspec(implementation_key(3474)) void AssemblyFeaturesPattern::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(3475)) IDispatchPtr AssemblyFeaturesPattern::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(3476)) IDispatchPtr AssemblyFeaturesPattern::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(3477)) IDispatchPtr AssemblyFeaturesPattern::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(3478)) HRESULT AssemblyFeaturesPattern::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 );
__declspec(implementation_key(3479)) VARIANT_BOOL AssemblyFeaturesPattern::GetSuppress ( );
__declspec(implementation_key(3480)) void AssemblyFeaturesPattern::PutSuppress ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3481)) HRESULT AssemblyFeaturesPattern::Delete ( );
__declspec(implementation_key(3482)) HRESULT AssemblyFeaturesPattern::RollToFeature ( );
__declspec(implementation_key(3483)) IDispatchPtr AssemblyFeaturesPattern::GetEdgesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(3484)) IDispatchPtr AssemblyFeaturesPattern::GetFacesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(3485)) IDispatchPtr AssemblyFeaturesPattern::GetFacesByRayForScopePart ( IUnknown * ScopePart, double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(3486)) enum TGPart::FeatureStatusConstants AssemblyFeaturesPattern::GetStatus ( VARIANT * Description );
__declspec(implementation_key(3487)) TGPart::SuppressVariablePtr AssemblyFeaturesPattern::GetSuppressionVariable ( );
__declspec(implementation_key(3488)) TGPart::SuppressVariablePtr AssemblyFeaturesPattern::AddSuppressionVariable ( );
__declspec(implementation_key(3489)) HRESULT AssemblyFeaturesPattern::DeleteSuppressionVariable ( );
__declspec(implementation_key(3490)) VARIANT_BOOL AssemblyFeaturesPattern::HasSuppressionVariable ( );
__declspec(implementation_key(3491)) enum TGPart::FeatureTypeConstants AssemblyFeaturesPattern::GetFeatureType ( );
__declspec(implementation_key(3492)) TGFramework::ApplicationPtr _IAssemblyFeaturesPatternsAuto::GetApplication ( );
__declspec(implementation_key(3493)) IDispatchPtr _IAssemblyFeaturesPatternsAuto::GetParent ( );
__declspec(implementation_key(3494)) AssemblyFeaturesPatternPtr _IAssemblyFeaturesPatternsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(3495)) IUnknownPtr _IAssemblyFeaturesPatternsAuto::Get_NewEnum ( );
__declspec(implementation_key(3496)) long _IAssemblyFeaturesPatternsAuto::GetCount ( );
__declspec(implementation_key(3497)) AssemblyFeaturesPatternPtr _IAssemblyFeaturesPatternsAuto::Add ( long NumberOfFeatures, SAFEARRAY * * ppFeaturesArray, IUnknown * Profile, enum TGPart::FeaturePropertyConstants PatternType );
__declspec(implementation_key(3498)) TGFramework::ApplicationPtr _IAssemblyFeaturesPatternAuto::GetApplication ( );
__declspec(implementation_key(3499)) IDispatchPtr _IAssemblyFeaturesPatternAuto::GetParent ( );
__declspec(implementation_key(3500)) HRESULT _IAssemblyFeaturesPatternAuto::SetProfile ( IUnknown * pProfile );
__declspec(implementation_key(3501)) IUnknownPtr _IAssemblyFeaturesPatternAuto::GetProfile ( );
__declspec(implementation_key(3502)) HRESULT _IAssemblyFeaturesPatternAuto::GetParentFeatures ( long * NumParentFeatures, SAFEARRAY * * ppParentFeatures );
__declspec(implementation_key(3503)) HRESULT _IAssemblyFeaturesPatternAuto::SetParentFeatures ( long NumParentFeatures, SAFEARRAY * pParentFeatures );
__declspec(implementation_key(3504)) enum TGPart::FeaturePropertyConstants _IAssemblyFeaturesPatternAuto::GetPatternType ( );
__declspec(implementation_key(3505)) HRESULT _IAssemblyFeaturesPatternAuto::SetPatternType ( enum TGPart::FeaturePropertyConstants PatternType );
__declspec(implementation_key(3506)) _bstr_t _IAssemblyFeaturesPatternAuto::GetName ( );
__declspec(implementation_key(3507)) void _IAssemblyFeaturesPatternAuto::PutName ( _bstr_t featureName );
__declspec(implementation_key(3508)) IDispatchPtr _IAssemblyFeaturesPatternAuto::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(3509)) IDispatchPtr _IAssemblyFeaturesPatternAuto::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(3510)) IDispatchPtr _IAssemblyFeaturesPatternAuto::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(3511)) HRESULT _IAssemblyFeaturesPatternAuto::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 );
__declspec(implementation_key(3512)) VARIANT_BOOL _IAssemblyFeaturesPatternAuto::GetSuppress ( );
__declspec(implementation_key(3513)) void _IAssemblyFeaturesPatternAuto::PutSuppress ( VARIANT_BOOL Suppress );
__declspec(implementation_key(3514)) HRESULT _IAssemblyFeaturesPatternAuto::Delete ( );
__declspec(implementation_key(3515)) HRESULT _IAssemblyFeaturesPatternAuto::RollToFeature ( );
__declspec(implementation_key(3516)) IDispatchPtr _IAssemblyFeaturesPatternAuto::GetEdgesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(3517)) IDispatchPtr _IAssemblyFeaturesPatternAuto::GetFacesForScopePart ( IUnknown * ScopePart, enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(3518)) IDispatchPtr _IAssemblyFeaturesPatternAuto::GetFacesByRayForScopePart ( IUnknown * ScopePart, double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(3519)) enum TGPart::FeatureStatusConstants _IAssemblyFeaturesPatternAuto::GetStatus ( VARIANT * Description );
__declspec(implementation_key(3520)) TGPart::SuppressVariablePtr _IAssemblyFeaturesPatternAuto::GetSuppressionVariable ( );
__declspec(implementation_key(3521)) TGPart::SuppressVariablePtr _IAssemblyFeaturesPatternAuto::AddSuppressionVariable ( );
__declspec(implementation_key(3522)) HRESULT _IAssemblyFeaturesPatternAuto::DeleteSuppressionVariable ( );
__declspec(implementation_key(3523)) VARIANT_BOOL _IAssemblyFeaturesPatternAuto::HasSuppressionVariable ( );
__declspec(implementation_key(3524)) enum TGPart::FeatureTypeConstants _IAssemblyFeaturesPatternAuto::GetFeatureType ( );
__declspec(implementation_key(3525)) TGFramework::ApplicationPtr AssemblyFilletWelds::GetApplication ( );
__declspec(implementation_key(3526)) IDispatchPtr AssemblyFilletWelds::GetParent ( );
__declspec(implementation_key(3527)) AssemblyFilletWeldPtr AssemblyFilletWelds::Item ( const _variant_t & Index );
__declspec(implementation_key(3528)) long AssemblyFilletWelds::GetCount ( );
__declspec(implementation_key(3529)) AssemblyFilletWeldPtr AssemblyFilletWelds::Add ( long NumberOfBaseFaces, SAFEARRAY * * BaseFaces, long NumberOfTargetFaces, SAFEARRAY * * TargetFaces, IDispatch * pLabelWeldDataObject, enum TGPart::FilletWeldSetbackConstants eSetbackType, double dBaseThickness, double dTargetThickness );
__declspec(implementation_key(3530)) TGFramework::ApplicationPtr AssemblyFilletWeld::GetApplication ( );
__declspec(implementation_key(3531)) IDispatchPtr AssemblyFilletWeld::GetParent ( );
__declspec(implementation_key(3532)) void AssemblyFilletWeld::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(3533)) _bstr_t AssemblyFilletWeld::GetName ( );
__declspec(implementation_key(3534)) void AssemblyFilletWeld::PutVisible ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3535)) VARIANT_BOOL AssemblyFilletWeld::GetVisible ( );
__declspec(implementation_key(3536)) HRESULT AssemblyFilletWeld::Recompute ( );
__declspec(implementation_key(3537)) HRESULT AssemblyFilletWeld::Delete ( );
__declspec(implementation_key(3538)) HRESULT AssemblyFilletWeld::GoTo ( );
__declspec(implementation_key(3539)) void AssemblyFilletWeld::PutSuppress ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3540)) VARIANT_BOOL AssemblyFilletWeld::GetSuppress ( );
__declspec(implementation_key(3541)) double AssemblyFilletWeld::GetTargetThickness ( );
__declspec(implementation_key(3542)) void AssemblyFilletWeld::PutTargetThickness ( double _arg1 );
__declspec(implementation_key(3543)) double AssemblyFilletWeld::GetBaseThickness ( );
__declspec(implementation_key(3544)) void AssemblyFilletWeld::PutBaseThickness ( double _arg1 );
__declspec(implementation_key(3545)) enum TGPart::FilletWeldSetbackConstants AssemblyFilletWeld::GetSetBackType ( );
__declspec(implementation_key(3546)) void AssemblyFilletWeld::PutSetBackType ( enum TGPart::FilletWeldSetbackConstants _arg1 );
__declspec(implementation_key(3547)) IDispatchPtr AssemblyFilletWeld::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(3548)) IDispatchPtr AssemblyFilletWeld::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(3549)) IDispatchPtr AssemblyFilletWeld::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(3550)) HRESULT AssemblyFilletWeld::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 );
__declspec(implementation_key(3551)) enum TGPart::FeatureStatusConstants AssemblyFilletWeld::GetStatus ( VARIANT * Description );
__declspec(implementation_key(3552)) TGPart::SuppressVariablePtr AssemblyFilletWeld::GetSuppressionVariable ( );
__declspec(implementation_key(3553)) TGPart::SuppressVariablePtr AssemblyFilletWeld::AddSuppressionVariable ( );
__declspec(implementation_key(3554)) HRESULT AssemblyFilletWeld::DeleteSuppressionVariable ( );
__declspec(implementation_key(3555)) VARIANT_BOOL AssemblyFilletWeld::HasSuppressionVariable ( );
__declspec(implementation_key(3556)) enum TGPart::FeatureTypeConstants AssemblyFilletWeld::GetFeatureType ( );
__declspec(implementation_key(3557)) HRESULT AssemblyFilletWeld::GetLabelWeldData ( IDispatch * * Object );
__declspec(implementation_key(3558)) IDispatchPtr AssemblyFilletWeld::GetAttributeSets ( );
__declspec(implementation_key(3559)) VARIANT_BOOL AssemblyFilletWeld::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(3560)) AssemblyBodyPtr AssemblyFilletWeld::GetAssemblyBody ( );
__declspec(implementation_key(3561)) TGFramework::ApplicationPtr _IAssemblyFilletWeldsAuto::GetApplication ( );
__declspec(implementation_key(3562)) IDispatchPtr _IAssemblyFilletWeldsAuto::GetParent ( );
__declspec(implementation_key(3563)) AssemblyFilletWeldPtr _IAssemblyFilletWeldsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(3564)) long _IAssemblyFilletWeldsAuto::GetCount ( );
__declspec(implementation_key(3565)) IUnknownPtr _IAssemblyFilletWeldsAuto::Get_NewEnum ( );
__declspec(implementation_key(3566)) AssemblyFilletWeldPtr _IAssemblyFilletWeldsAuto::Add ( long NumberOfBaseFaces, SAFEARRAY * * BaseFaces, long NumberOfTargetFaces, SAFEARRAY * * TargetFaces, IDispatch * pLabelWeldDataObject, enum TGPart::FilletWeldSetbackConstants eSetbackType, double dBaseThickness, double dTargetThickness );
__declspec(implementation_key(3567)) TGFramework::ApplicationPtr _IAssemblyFilletWeldAuto::GetApplication ( );
__declspec(implementation_key(3568)) IDispatchPtr _IAssemblyFilletWeldAuto::GetParent ( );
__declspec(implementation_key(3569)) void _IAssemblyFilletWeldAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(3570)) _bstr_t _IAssemblyFilletWeldAuto::GetName ( );
__declspec(implementation_key(3571)) void _IAssemblyFilletWeldAuto::PutVisible ( VARIANT_BOOL bVisible );
__declspec(implementation_key(3572)) VARIANT_BOOL _IAssemblyFilletWeldAuto::GetVisible ( );
__declspec(implementation_key(3573)) HRESULT _IAssemblyFilletWeldAuto::Recompute ( );
__declspec(implementation_key(3574)) HRESULT _IAssemblyFilletWeldAuto::Delete ( );
__declspec(implementation_key(3575)) HRESULT _IAssemblyFilletWeldAuto::GoTo ( );
__declspec(implementation_key(3576)) void _IAssemblyFilletWeldAuto::PutSuppress ( VARIANT_BOOL pvbSuppress );
__declspec(implementation_key(3577)) VARIANT_BOOL _IAssemblyFilletWeldAuto::GetSuppress ( );
__declspec(implementation_key(3578)) double _IAssemblyFilletWeldAuto::GetTargetThickness ( );
__declspec(implementation_key(3579)) void _IAssemblyFilletWeldAuto::PutTargetThickness ( double TargetThickness );
__declspec(implementation_key(3580)) double _IAssemblyFilletWeldAuto::GetBaseThickness ( );
__declspec(implementation_key(3581)) void _IAssemblyFilletWeldAuto::PutBaseThickness ( double BaseThickness );
__declspec(implementation_key(3582)) enum TGPart::FilletWeldSetbackConstants _IAssemblyFilletWeldAuto::GetSetBackType ( );
__declspec(implementation_key(3583)) void _IAssemblyFilletWeldAuto::PutSetBackType ( enum TGPart::FilletWeldSetbackConstants pSetBackType );
__declspec(implementation_key(3584)) IDispatchPtr _IAssemblyFilletWeldAuto::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(3585)) IDispatchPtr _IAssemblyFilletWeldAuto::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(3586)) IDispatchPtr _IAssemblyFilletWeldAuto::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(3587)) HRESULT _IAssemblyFilletWeldAuto::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 );
__declspec(implementation_key(3588)) enum TGPart::FeatureStatusConstants _IAssemblyFilletWeldAuto::GetStatus ( VARIANT * Description );
__declspec(implementation_key(3589)) TGPart::SuppressVariablePtr _IAssemblyFilletWeldAuto::GetSuppressionVariable ( );
__declspec(implementation_key(3590)) TGPart::SuppressVariablePtr _IAssemblyFilletWeldAuto::AddSuppressionVariable ( );
__declspec(implementation_key(3591)) HRESULT _IAssemblyFilletWeldAuto::DeleteSuppressionVariable ( );
__declspec(implementation_key(3592)) VARIANT_BOOL _IAssemblyFilletWeldAuto::HasSuppressionVariable ( );
__declspec(implementation_key(3593)) enum TGPart::FeatureTypeConstants _IAssemblyFilletWeldAuto::GetFeatureType ( );
__declspec(implementation_key(3594)) HRESULT _IAssemblyFilletWeldAuto::GetLabelWeldData ( IDispatch * * Object );
__declspec(implementation_key(3595)) IDispatchPtr _IAssemblyFilletWeldAuto::GetAttributeSets ( );
__declspec(implementation_key(3596)) VARIANT_BOOL _IAssemblyFilletWeldAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(3597)) AssemblyBodyPtr _IAssemblyFilletWeldAuto::GetAssemblyBody ( );
__declspec(implementation_key(3598)) TGFramework::ApplicationPtr AFGrooveWelds::GetApplication ( );
__declspec(implementation_key(3599)) IDispatchPtr AFGrooveWelds::GetParent ( );
__declspec(implementation_key(3600)) AFGrooveWeldPtr AFGrooveWelds::Item ( const _variant_t & Index );
__declspec(implementation_key(3601)) long AFGrooveWelds::GetCount ( );
__declspec(implementation_key(3602)) TGFramework::ApplicationPtr AFGrooveWeld::GetApplication ( );
__declspec(implementation_key(3603)) IDispatchPtr AFGrooveWeld::GetParent ( );
__declspec(implementation_key(3604)) void AFGrooveWeld::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(3605)) _bstr_t AFGrooveWeld::GetName ( );
__declspec(implementation_key(3606)) void AFGrooveWeld::PutVisible ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3607)) VARIANT_BOOL AFGrooveWeld::GetVisible ( );
__declspec(implementation_key(3608)) HRESULT AFGrooveWeld::Recompute ( );
__declspec(implementation_key(3609)) HRESULT AFGrooveWeld::Delete ( );
__declspec(implementation_key(3610)) HRESULT AFGrooveWeld::GoTo ( );
__declspec(implementation_key(3611)) void AFGrooveWeld::PutSuppress ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3612)) VARIANT_BOOL AFGrooveWeld::GetSuppress ( );
__declspec(implementation_key(3613)) enum TGPart::FeatureStatusConstants AFGrooveWeld::GetStatus ( VARIANT * Description );
__declspec(implementation_key(3614)) TGPart::SuppressVariablePtr AFGrooveWeld::GetSuppressionVariable ( );
__declspec(implementation_key(3615)) TGPart::SuppressVariablePtr AFGrooveWeld::AddSuppressionVariable ( );
__declspec(implementation_key(3616)) HRESULT AFGrooveWeld::DeleteSuppressionVariable ( );
__declspec(implementation_key(3617)) VARIANT_BOOL AFGrooveWeld::HasSuppressionVariable ( );
__declspec(implementation_key(3618)) enum TGPart::FeatureTypeConstants AFGrooveWeld::GetFeatureType ( );
__declspec(implementation_key(3619)) AssemblyBodyPtr AFGrooveWeld::GetAssemblyBody ( );
__declspec(implementation_key(3620)) HRESULT AFGrooveWeld::GetLabelWeldData ( IDispatch * * Object );
__declspec(implementation_key(3621)) IDispatchPtr AFGrooveWeld::GetAttributeSets ( );
__declspec(implementation_key(3622)) VARIANT_BOOL AFGrooveWeld::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(3623)) TGFramework::ApplicationPtr _IAFGrooveWeldsAuto::GetApplication ( );
__declspec(implementation_key(3624)) IDispatchPtr _IAFGrooveWeldsAuto::GetParent ( );
__declspec(implementation_key(3625)) AFGrooveWeldPtr _IAFGrooveWeldsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(3626)) long _IAFGrooveWeldsAuto::GetCount ( );
__declspec(implementation_key(3627)) IUnknownPtr _IAFGrooveWeldsAuto::Get_NewEnum ( );
__declspec(implementation_key(3628)) TGFramework::ApplicationPtr _IAFGrooveWeldAuto::GetApplication ( );
__declspec(implementation_key(3629)) IDispatchPtr _IAFGrooveWeldAuto::GetParent ( );
__declspec(implementation_key(3630)) void _IAFGrooveWeldAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(3631)) _bstr_t _IAFGrooveWeldAuto::GetName ( );
__declspec(implementation_key(3632)) void _IAFGrooveWeldAuto::PutVisible ( VARIANT_BOOL bVisible );
__declspec(implementation_key(3633)) VARIANT_BOOL _IAFGrooveWeldAuto::GetVisible ( );
__declspec(implementation_key(3634)) HRESULT _IAFGrooveWeldAuto::Recompute ( );
__declspec(implementation_key(3635)) HRESULT _IAFGrooveWeldAuto::Delete ( );
__declspec(implementation_key(3636)) HRESULT _IAFGrooveWeldAuto::GoTo ( );
__declspec(implementation_key(3637)) void _IAFGrooveWeldAuto::PutSuppress ( VARIANT_BOOL pvbSuppress );
__declspec(implementation_key(3638)) VARIANT_BOOL _IAFGrooveWeldAuto::GetSuppress ( );
__declspec(implementation_key(3639)) enum TGPart::FeatureStatusConstants _IAFGrooveWeldAuto::GetStatus ( VARIANT * Description );
__declspec(implementation_key(3640)) TGPart::SuppressVariablePtr _IAFGrooveWeldAuto::GetSuppressionVariable ( );
__declspec(implementation_key(3641)) TGPart::SuppressVariablePtr _IAFGrooveWeldAuto::AddSuppressionVariable ( );
__declspec(implementation_key(3642)) HRESULT _IAFGrooveWeldAuto::DeleteSuppressionVariable ( );
__declspec(implementation_key(3643)) VARIANT_BOOL _IAFGrooveWeldAuto::HasSuppressionVariable ( );
__declspec(implementation_key(3644)) enum TGPart::FeatureTypeConstants _IAFGrooveWeldAuto::GetFeatureType ( );
__declspec(implementation_key(3645)) AssemblyBodyPtr _IAFGrooveWeldAuto::GetAssemblyBody ( );
__declspec(implementation_key(3646)) HRESULT _IAFGrooveWeldAuto::GetLabelWeldData ( IDispatch * * Object );
__declspec(implementation_key(3647)) IDispatchPtr _IAFGrooveWeldAuto::GetAttributeSets ( );
__declspec(implementation_key(3648)) VARIANT_BOOL _IAFGrooveWeldAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(3649)) TGFramework::ApplicationPtr AssemblyFeaturesSweptProtrusions::GetApplication ( );
__declspec(implementation_key(3650)) IDispatchPtr AssemblyFeaturesSweptProtrusions::GetParent ( );
__declspec(implementation_key(3651)) AssemblyFeaturesSweptProtrusionPtr AssemblyFeaturesSweptProtrusions::Item ( const _variant_t & Index );
__declspec(implementation_key(3652)) long AssemblyFeaturesSweptProtrusions::GetCount ( );
__declspec(implementation_key(3653)) AssemblyFeaturesSweptProtrusionPtr AssemblyFeaturesSweptProtrusions::Add ( long NumCurves, SAFEARRAY * * TraceCurves, long NumSections, SAFEARRAY * * CrossSections, SAFEARRAY * * Origins );
__declspec(implementation_key(3654)) TGFramework::ApplicationPtr AssemblyFeaturesSweptProtrusion::GetApplication ( );
__declspec(implementation_key(3655)) IDispatchPtr AssemblyFeaturesSweptProtrusion::GetParent ( );
__declspec(implementation_key(3656)) _bstr_t AssemblyFeaturesSweptProtrusion::GetName ( );
__declspec(implementation_key(3657)) void AssemblyFeaturesSweptProtrusion::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(3658)) IDispatchPtr AssemblyFeaturesSweptProtrusion::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(3659)) IDispatchPtr AssemblyFeaturesSweptProtrusion::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(3660)) IDispatchPtr AssemblyFeaturesSweptProtrusion::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(3661)) HRESULT AssemblyFeaturesSweptProtrusion::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 );
__declspec(implementation_key(3662)) VARIANT_BOOL AssemblyFeaturesSweptProtrusion::GetSuppress ( );
__declspec(implementation_key(3663)) void AssemblyFeaturesSweptProtrusion::PutSuppress ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3664)) HRESULT AssemblyFeaturesSweptProtrusion::Delete ( );
__declspec(implementation_key(3665)) HRESULT AssemblyFeaturesSweptProtrusion::RollToFeature ( );
__declspec(implementation_key(3666)) enum TGPart::FeatureStatusConstants AssemblyFeaturesSweptProtrusion::GetStatus ( VARIANT * Description );
__declspec(implementation_key(3667)) TGPart::SuppressVariablePtr AssemblyFeaturesSweptProtrusion::GetSuppressionVariable ( );
__declspec(implementation_key(3668)) TGPart::SuppressVariablePtr AssemblyFeaturesSweptProtrusion::AddSuppressionVariable ( );
__declspec(implementation_key(3669)) HRESULT AssemblyFeaturesSweptProtrusion::DeleteSuppressionVariable ( );
__declspec(implementation_key(3670)) VARIANT_BOOL AssemblyFeaturesSweptProtrusion::HasSuppressionVariable ( );
__declspec(implementation_key(3671)) enum TGPart::FeatureTypeConstants AssemblyFeaturesSweptProtrusion::GetFeatureType ( );
__declspec(implementation_key(3672)) AssemblyBodyPtr AssemblyFeaturesSweptProtrusion::GetAssemblyBody ( );
__declspec(implementation_key(3673)) TGFramework::ApplicationPtr _IAssemblyFeaturesSweptProtrusionsAuto::GetApplication ( );
__declspec(implementation_key(3674)) IDispatchPtr _IAssemblyFeaturesSweptProtrusionsAuto::GetParent ( );
__declspec(implementation_key(3675)) AssemblyFeaturesSweptProtrusionPtr _IAssemblyFeaturesSweptProtrusionsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(3676)) long _IAssemblyFeaturesSweptProtrusionsAuto::GetCount ( );
__declspec(implementation_key(3677)) IUnknownPtr _IAssemblyFeaturesSweptProtrusionsAuto::Get_NewEnum ( );
__declspec(implementation_key(3678)) AssemblyFeaturesSweptProtrusionPtr _IAssemblyFeaturesSweptProtrusionsAuto::Add ( long NumCurves, SAFEARRAY * * TraceCurves, long NumSections, SAFEARRAY * * CrossSections, SAFEARRAY * * Origins );
__declspec(implementation_key(3679)) TGFramework::ApplicationPtr _IAssemblyFeaturesSweptProtrusionAuto::GetApplication ( );
__declspec(implementation_key(3680)) IDispatchPtr _IAssemblyFeaturesSweptProtrusionAuto::GetParent ( );
__declspec(implementation_key(3681)) _bstr_t _IAssemblyFeaturesSweptProtrusionAuto::GetName ( );
__declspec(implementation_key(3682)) void _IAssemblyFeaturesSweptProtrusionAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(3683)) IDispatchPtr _IAssemblyFeaturesSweptProtrusionAuto::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(3684)) IDispatchPtr _IAssemblyFeaturesSweptProtrusionAuto::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(3685)) IDispatchPtr _IAssemblyFeaturesSweptProtrusionAuto::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(3686)) HRESULT _IAssemblyFeaturesSweptProtrusionAuto::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 );
__declspec(implementation_key(3687)) VARIANT_BOOL _IAssemblyFeaturesSweptProtrusionAuto::GetSuppress ( );
__declspec(implementation_key(3688)) void _IAssemblyFeaturesSweptProtrusionAuto::PutSuppress ( VARIANT_BOOL Suppress );
__declspec(implementation_key(3689)) HRESULT _IAssemblyFeaturesSweptProtrusionAuto::Delete ( );
__declspec(implementation_key(3690)) HRESULT _IAssemblyFeaturesSweptProtrusionAuto::RollToFeature ( );
__declspec(implementation_key(3691)) enum TGPart::FeatureStatusConstants _IAssemblyFeaturesSweptProtrusionAuto::GetStatus ( VARIANT * Description );
__declspec(implementation_key(3692)) TGPart::SuppressVariablePtr _IAssemblyFeaturesSweptProtrusionAuto::GetSuppressionVariable ( );
__declspec(implementation_key(3693)) TGPart::SuppressVariablePtr _IAssemblyFeaturesSweptProtrusionAuto::AddSuppressionVariable ( );
__declspec(implementation_key(3694)) HRESULT _IAssemblyFeaturesSweptProtrusionAuto::DeleteSuppressionVariable ( );
__declspec(implementation_key(3695)) VARIANT_BOOL _IAssemblyFeaturesSweptProtrusionAuto::HasSuppressionVariable ( );
__declspec(implementation_key(3696)) enum TGPart::FeatureTypeConstants _IAssemblyFeaturesSweptProtrusionAuto::GetFeatureType ( );
__declspec(implementation_key(3697)) AssemblyBodyPtr _IAssemblyFeaturesSweptProtrusionAuto::GetAssemblyBody ( );
__declspec(implementation_key(3698)) TGFramework::ApplicationPtr AssemblyStitchWelds::GetApplication ( );
__declspec(implementation_key(3699)) IDispatchPtr AssemblyStitchWelds::GetParent ( );
__declspec(implementation_key(3700)) AssemblyStitchWeldPtr AssemblyStitchWelds::Item ( const _variant_t & Index );
__declspec(implementation_key(3701)) long AssemblyStitchWelds::GetCount ( );
__declspec(implementation_key(3702)) AssemblyStitchWeldPtr AssemblyStitchWelds::Add ( long NumberOfStitchPaths, SAFEARRAY * * StitchWeldPaths, SAFEARRAY * * StartVertices, SAFEARRAY * * DirectionEdgeForClosedStitchWeldPaths, SAFEARRAY * * eStitchDirections, enum TGPart::StitchWeldType eWeldType, enum TGPart::StitchWeldAnnotationFormat eAnnotationFormat, double dStartOffsetLength, double dEndOffsetLength, double dBeadLength, double dGapLength, _bstr_t bsStyleName );
__declspec(implementation_key(3703)) TGFramework::ApplicationPtr AssemblyStitchWeld::GetApplication ( );
__declspec(implementation_key(3704)) IDispatchPtr AssemblyStitchWeld::GetParent ( );
__declspec(implementation_key(3705)) void AssemblyStitchWeld::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(3706)) _bstr_t AssemblyStitchWeld::GetName ( );
__declspec(implementation_key(3707)) void AssemblyStitchWeld::PutVisible ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3708)) VARIANT_BOOL AssemblyStitchWeld::GetVisible ( );
__declspec(implementation_key(3709)) HRESULT AssemblyStitchWeld::Recompute ( );
__declspec(implementation_key(3710)) HRESULT AssemblyStitchWeld::Delete ( );
__declspec(implementation_key(3711)) HRESULT AssemblyStitchWeld::GoTo ( );
__declspec(implementation_key(3712)) void AssemblyStitchWeld::PutSuppress ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3713)) VARIANT_BOOL AssemblyStitchWeld::GetSuppress ( );
__declspec(implementation_key(3714)) enum TGPart::StitchWeldAnnotationFormat AssemblyStitchWeld::GetAnnotationFormat ( );
__declspec(implementation_key(3715)) void AssemblyStitchWeld::PutAnnotationFormat ( enum TGPart::StitchWeldAnnotationFormat _arg1 );
__declspec(implementation_key(3716)) enum TGPart::StitchWeldType AssemblyStitchWeld::GetType ( );
__declspec(implementation_key(3717)) void AssemblyStitchWeld::PutType ( enum TGPart::StitchWeldType _arg1 );
__declspec(implementation_key(3718)) double AssemblyStitchWeld::GetStartOffset ( );
__declspec(implementation_key(3719)) void AssemblyStitchWeld::PutStartOffset ( double _arg1 );
__declspec(implementation_key(3720)) double AssemblyStitchWeld::GetEndOffset ( );
__declspec(implementation_key(3721)) void AssemblyStitchWeld::PutEndOffset ( double _arg1 );
__declspec(implementation_key(3722)) double AssemblyStitchWeld::GetBeadLength ( );
__declspec(implementation_key(3723)) void AssemblyStitchWeld::PutBeadLength ( double _arg1 );
__declspec(implementation_key(3724)) double AssemblyStitchWeld::GetGapLength ( );
__declspec(implementation_key(3725)) void AssemblyStitchWeld::PutGapLength ( double _arg1 );
__declspec(implementation_key(3726)) enum TGPart::FeatureStatusConstants AssemblyStitchWeld::GetStatus ( VARIANT * Description );
__declspec(implementation_key(3727)) TGPart::SuppressVariablePtr AssemblyStitchWeld::GetSuppressionVariable ( );
__declspec(implementation_key(3728)) TGPart::SuppressVariablePtr AssemblyStitchWeld::AddSuppressionVariable ( );
__declspec(implementation_key(3729)) HRESULT AssemblyStitchWeld::DeleteSuppressionVariable ( );
__declspec(implementation_key(3730)) VARIANT_BOOL AssemblyStitchWeld::HasSuppressionVariable ( );
__declspec(implementation_key(3731)) enum TGPart::FeatureTypeConstants AssemblyStitchWeld::GetFeatureType ( );
__declspec(implementation_key(3732)) IDispatchPtr AssemblyStitchWeld::GetAttributeSets ( );
__declspec(implementation_key(3733)) VARIANT_BOOL AssemblyStitchWeld::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(3734)) TGFramework::ApplicationPtr _IAssemblyStitchWeldsAuto::GetApplication ( );
__declspec(implementation_key(3735)) IDispatchPtr _IAssemblyStitchWeldsAuto::GetParent ( );
__declspec(implementation_key(3736)) AssemblyStitchWeldPtr _IAssemblyStitchWeldsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(3737)) long _IAssemblyStitchWeldsAuto::GetCount ( );
__declspec(implementation_key(3738)) IUnknownPtr _IAssemblyStitchWeldsAuto::Get_NewEnum ( );
__declspec(implementation_key(3739)) AssemblyStitchWeldPtr _IAssemblyStitchWeldsAuto::Add ( long NumberOfStitchPaths, SAFEARRAY * * StitchWeldPaths, SAFEARRAY * * StartVertices, SAFEARRAY * * DirectionEdgeForClosedStitchWeldPaths, SAFEARRAY * * eStitchDirections, enum TGPart::StitchWeldType eWeldType, enum TGPart::StitchWeldAnnotationFormat eAnnotationFormat, double dStartOffsetLength, double dEndOffsetLength, double dBeadLength, double dGapLength, _bstr_t bsStyleName );
__declspec(implementation_key(3740)) TGFramework::ApplicationPtr _IAssemblyStitchWeldAuto::GetApplication ( );
__declspec(implementation_key(3741)) IDispatchPtr _IAssemblyStitchWeldAuto::GetParent ( );
__declspec(implementation_key(3742)) void _IAssemblyStitchWeldAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(3743)) _bstr_t _IAssemblyStitchWeldAuto::GetName ( );
__declspec(implementation_key(3744)) void _IAssemblyStitchWeldAuto::PutVisible ( VARIANT_BOOL bVisible );
__declspec(implementation_key(3745)) VARIANT_BOOL _IAssemblyStitchWeldAuto::GetVisible ( );
__declspec(implementation_key(3746)) HRESULT _IAssemblyStitchWeldAuto::Recompute ( );
__declspec(implementation_key(3747)) HRESULT _IAssemblyStitchWeldAuto::Delete ( );
__declspec(implementation_key(3748)) HRESULT _IAssemblyStitchWeldAuto::GoTo ( );
__declspec(implementation_key(3749)) void _IAssemblyStitchWeldAuto::PutSuppress ( VARIANT_BOOL pvbSuppress );
__declspec(implementation_key(3750)) VARIANT_BOOL _IAssemblyStitchWeldAuto::GetSuppress ( );
__declspec(implementation_key(3751)) enum TGPart::StitchWeldAnnotationFormat _IAssemblyStitchWeldAuto::GetAnnotationFormat ( );
__declspec(implementation_key(3752)) void _IAssemblyStitchWeldAuto::PutAnnotationFormat ( enum TGPart::StitchWeldAnnotationFormat peAnnotationFormat );
__declspec(implementation_key(3753)) enum TGPart::StitchWeldType _IAssemblyStitchWeldAuto::GetType ( );
__declspec(implementation_key(3754)) void _IAssemblyStitchWeldAuto::PutType ( enum TGPart::StitchWeldType pWeldType );
__declspec(implementation_key(3755)) double _IAssemblyStitchWeldAuto::GetStartOffset ( );
__declspec(implementation_key(3756)) void _IAssemblyStitchWeldAuto::PutStartOffset ( double pdStartOffset );
__declspec(implementation_key(3757)) double _IAssemblyStitchWeldAuto::GetEndOffset ( );
__declspec(implementation_key(3758)) void _IAssemblyStitchWeldAuto::PutEndOffset ( double pdEndOffset );
__declspec(implementation_key(3759)) double _IAssemblyStitchWeldAuto::GetBeadLength ( );
__declspec(implementation_key(3760)) void _IAssemblyStitchWeldAuto::PutBeadLength ( double dBeadLength );
__declspec(implementation_key(3761)) double _IAssemblyStitchWeldAuto::GetGapLength ( );
__declspec(implementation_key(3762)) void _IAssemblyStitchWeldAuto::PutGapLength ( double pdGapLength );
__declspec(implementation_key(3763)) enum TGPart::FeatureStatusConstants _IAssemblyStitchWeldAuto::GetStatus ( VARIANT * Description );
__declspec(implementation_key(3764)) TGPart::SuppressVariablePtr _IAssemblyStitchWeldAuto::GetSuppressionVariable ( );
__declspec(implementation_key(3765)) TGPart::SuppressVariablePtr _IAssemblyStitchWeldAuto::AddSuppressionVariable ( );
__declspec(implementation_key(3766)) HRESULT _IAssemblyStitchWeldAuto::DeleteSuppressionVariable ( );
__declspec(implementation_key(3767)) VARIANT_BOOL _IAssemblyStitchWeldAuto::HasSuppressionVariable ( );
__declspec(implementation_key(3768)) enum TGPart::FeatureTypeConstants _IAssemblyStitchWeldAuto::GetFeatureType ( );
__declspec(implementation_key(3769)) IDispatchPtr _IAssemblyStitchWeldAuto::GetAttributeSets ( );
__declspec(implementation_key(3770)) VARIANT_BOOL _IAssemblyStitchWeldAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(3771)) TGFramework::ApplicationPtr AssemblyThreads::GetApplication ( );
__declspec(implementation_key(3772)) IDispatchPtr AssemblyThreads::GetParent ( );
__declspec(implementation_key(3773)) AssemblyThreadPtr AssemblyThreads::Item ( const _variant_t & Index );
__declspec(implementation_key(3774)) long AssemblyThreads::GetCount ( );
__declspec(implementation_key(3775)) AssemblyThreadPtr AssemblyThreads::Add ( IDispatch * Holedata, long NumberOfCylinders, SAFEARRAY * * CylinderArray, SAFEARRAY * * CylinderEndArray, SAFEARRAY * * CylinderEndTypes, const _variant_t & Reserved2 );
__declspec(implementation_key(3776)) TGFramework::ApplicationPtr AssemblyThread::GetApplication ( );
__declspec(implementation_key(3777)) IDispatchPtr AssemblyThread::GetParent ( );
__declspec(implementation_key(3778)) void AssemblyThread::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(3779)) _bstr_t AssemblyThread::GetName ( );
__declspec(implementation_key(3780)) void AssemblyThread::PutVisible ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3781)) VARIANT_BOOL AssemblyThread::GetVisible ( );
__declspec(implementation_key(3782)) HRESULT AssemblyThread::Recompute ( );
__declspec(implementation_key(3783)) HRESULT AssemblyThread::Delete ( );
__declspec(implementation_key(3784)) HRESULT AssemblyThread::GoTo ( );
__declspec(implementation_key(3785)) void AssemblyThread::PutSuppress ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3786)) VARIANT_BOOL AssemblyThread::GetSuppress ( );
__declspec(implementation_key(3787)) IDispatchPtr AssemblyThread::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(3788)) IDispatchPtr AssemblyThread::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(3789)) IDispatchPtr AssemblyThread::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(3790)) HRESULT AssemblyThread::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 );
__declspec(implementation_key(3791)) IDispatchPtr AssemblyThread::GetHoledata ( );
__declspec(implementation_key(3792)) enum TGPart::FeatureStatusConstants AssemblyThread::GetStatus ( VARIANT * Description );
__declspec(implementation_key(3793)) TGPart::SuppressVariablePtr AssemblyThread::GetSuppressionVariable ( );
__declspec(implementation_key(3794)) TGPart::SuppressVariablePtr AssemblyThread::AddSuppressionVariable ( );
__declspec(implementation_key(3795)) HRESULT AssemblyThread::DeleteSuppressionVariable ( );
__declspec(implementation_key(3796)) VARIANT_BOOL AssemblyThread::HasSuppressionVariable ( );
__declspec(implementation_key(3797)) enum TGPart::FeatureTypeConstants AssemblyThread::GetFeatureType ( );
__declspec(implementation_key(3798)) TGFramework::ApplicationPtr _IAssemblyThreadsAuto::GetApplication ( );
__declspec(implementation_key(3799)) IDispatchPtr _IAssemblyThreadsAuto::GetParent ( );
__declspec(implementation_key(3800)) AssemblyThreadPtr _IAssemblyThreadsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(3801)) long _IAssemblyThreadsAuto::GetCount ( );
__declspec(implementation_key(3802)) IUnknownPtr _IAssemblyThreadsAuto::Get_NewEnum ( );
__declspec(implementation_key(3803)) AssemblyThreadPtr _IAssemblyThreadsAuto::Add ( IDispatch * Holedata, long NumberOfCylinders, SAFEARRAY * * CylinderArray, SAFEARRAY * * CylinderEndArray, SAFEARRAY * * CylinderEndTypes, const _variant_t & Reserved2 );
__declspec(implementation_key(3804)) TGFramework::ApplicationPtr _IAssemblyThreadAuto::GetApplication ( );
__declspec(implementation_key(3805)) IDispatchPtr _IAssemblyThreadAuto::GetParent ( );
__declspec(implementation_key(3806)) void _IAssemblyThreadAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(3807)) _bstr_t _IAssemblyThreadAuto::GetName ( );
__declspec(implementation_key(3808)) void _IAssemblyThreadAuto::PutVisible ( VARIANT_BOOL bVisible );
__declspec(implementation_key(3809)) VARIANT_BOOL _IAssemblyThreadAuto::GetVisible ( );
__declspec(implementation_key(3810)) HRESULT _IAssemblyThreadAuto::Recompute ( );
__declspec(implementation_key(3811)) HRESULT _IAssemblyThreadAuto::Delete ( );
__declspec(implementation_key(3812)) HRESULT _IAssemblyThreadAuto::GoTo ( );
__declspec(implementation_key(3813)) void _IAssemblyThreadAuto::PutSuppress ( VARIANT_BOOL pvbSuppress );
__declspec(implementation_key(3814)) VARIANT_BOOL _IAssemblyThreadAuto::GetSuppress ( );
__declspec(implementation_key(3815)) IDispatchPtr _IAssemblyThreadAuto::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(3816)) IDispatchPtr _IAssemblyThreadAuto::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(3817)) IDispatchPtr _IAssemblyThreadAuto::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(3818)) HRESULT _IAssemblyThreadAuto::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 );
__declspec(implementation_key(3819)) IDispatchPtr _IAssemblyThreadAuto::GetHoledata ( );
__declspec(implementation_key(3820)) enum TGPart::FeatureStatusConstants _IAssemblyThreadAuto::GetStatus ( VARIANT * Description );
__declspec(implementation_key(3821)) TGPart::SuppressVariablePtr _IAssemblyThreadAuto::GetSuppressionVariable ( );
__declspec(implementation_key(3822)) TGPart::SuppressVariablePtr _IAssemblyThreadAuto::AddSuppressionVariable ( );
__declspec(implementation_key(3823)) HRESULT _IAssemblyThreadAuto::DeleteSuppressionVariable ( );
__declspec(implementation_key(3824)) VARIANT_BOOL _IAssemblyThreadAuto::HasSuppressionVariable ( );
__declspec(implementation_key(3825)) enum TGPart::FeatureTypeConstants _IAssemblyThreadAuto::GetFeatureType ( );
__declspec(implementation_key(3826)) TGFramework::ApplicationPtr AssemblyFeaturesExtrudedProtrusions::GetApplication ( );
__declspec(implementation_key(3827)) IDispatchPtr AssemblyFeaturesExtrudedProtrusions::GetParent ( );
__declspec(implementation_key(3828)) AssemblyFeaturesExtrudedProtrusionPtr AssemblyFeaturesExtrudedProtrusions::Item ( const _variant_t & Index );
__declspec(implementation_key(3829)) long AssemblyFeaturesExtrudedProtrusions::GetCount ( );
__declspec(implementation_key(3830)) AssemblyFeaturesExtrudedProtrusionPtr AssemblyFeaturesExtrudedProtrusions::Add ( long nNumProfiles, SAFEARRAY * * pProfiles, enum TGPart::FeaturePropertyConstants ExtentType, enum TGPart::FeaturePropertyConstants * pExtentSide, enum TGPart::FeaturePropertyConstants profileSide, double * pdDistance, IUnknown * pKeyPoint, enum TGPart::KeyPointExtentConstants * pKeyPointFlags, IUnknown * pFromSurfOrPlane, IUnknown * pToSurfOrPlane );
__declspec(implementation_key(3831)) TGFramework::ApplicationPtr AssemblyFeaturesExtrudedProtrusion::GetApplication ( );
__declspec(implementation_key(3832)) IDispatchPtr AssemblyFeaturesExtrudedProtrusion::GetParent ( );
__declspec(implementation_key(3833)) double AssemblyFeaturesExtrudedProtrusion::GetDepth ( );
__declspec(implementation_key(3834)) HRESULT AssemblyFeaturesExtrudedProtrusion::SetDepth ( double nDepth );
__declspec(implementation_key(3835)) enum TGPart::FeaturePropertyConstants AssemblyFeaturesExtrudedProtrusion::GetExtentSide ( );
__declspec(implementation_key(3836)) HRESULT AssemblyFeaturesExtrudedProtrusion::SetExtentSide ( enum TGPart::FeaturePropertyConstants ExtentSide );
__declspec(implementation_key(3837)) enum TGPart::FeaturePropertyConstants AssemblyFeaturesExtrudedProtrusion::GetExtentType ( );
__declspec(implementation_key(3838)) HRESULT AssemblyFeaturesExtrudedProtrusion::SetExtentType ( enum TGPart::FeaturePropertyConstants ExtentType );
__declspec(implementation_key(3839)) enum TGPart::FeaturePropertyConstants AssemblyFeaturesExtrudedProtrusion::GetProfileSide ( );
__declspec(implementation_key(3840)) HRESULT AssemblyFeaturesExtrudedProtrusion::SetProfileSide ( enum TGPart::FeaturePropertyConstants profileSide );
__declspec(implementation_key(3841)) HRESULT AssemblyFeaturesExtrudedProtrusion::GetProfiles ( long * NumProfiles, SAFEARRAY * * ppProfiles );
__declspec(implementation_key(3842)) HRESULT AssemblyFeaturesExtrudedProtrusion::SetProfiles ( long NumProfiles, SAFEARRAY * pProfiles );
__declspec(implementation_key(3843)) HRESULT AssemblyFeaturesExtrudedProtrusion::SetFromPlane ( IUnknown * FromPlane );
__declspec(implementation_key(3844)) IUnknownPtr AssemblyFeaturesExtrudedProtrusion::GetFromPlane ( );
__declspec(implementation_key(3845)) HRESULT AssemblyFeaturesExtrudedProtrusion::SetToPlane ( IUnknown * ToPlane );
__declspec(implementation_key(3846)) IUnknownPtr AssemblyFeaturesExtrudedProtrusion::GetToPlane ( );
__declspec(implementation_key(3847)) _bstr_t AssemblyFeaturesExtrudedProtrusion::GetName ( );
__declspec(implementation_key(3848)) void AssemblyFeaturesExtrudedProtrusion::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(3849)) IDispatchPtr AssemblyFeaturesExtrudedProtrusion::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(3850)) IDispatchPtr AssemblyFeaturesExtrudedProtrusion::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(3851)) IDispatchPtr AssemblyFeaturesExtrudedProtrusion::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(3852)) HRESULT AssemblyFeaturesExtrudedProtrusion::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 );
__declspec(implementation_key(3853)) VARIANT_BOOL AssemblyFeaturesExtrudedProtrusion::GetSuppress ( );
__declspec(implementation_key(3854)) void AssemblyFeaturesExtrudedProtrusion::PutSuppress ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3855)) HRESULT AssemblyFeaturesExtrudedProtrusion::Delete ( );
__declspec(implementation_key(3856)) HRESULT AssemblyFeaturesExtrudedProtrusion::RollToFeature ( );
__declspec(implementation_key(3857)) enum TGPart::FeatureStatusConstants AssemblyFeaturesExtrudedProtrusion::GetStatus ( VARIANT * Description );
__declspec(implementation_key(3858)) TGPart::SuppressVariablePtr AssemblyFeaturesExtrudedProtrusion::GetSuppressionVariable ( );
__declspec(implementation_key(3859)) TGPart::SuppressVariablePtr AssemblyFeaturesExtrudedProtrusion::AddSuppressionVariable ( );
__declspec(implementation_key(3860)) HRESULT AssemblyFeaturesExtrudedProtrusion::DeleteSuppressionVariable ( );
__declspec(implementation_key(3861)) VARIANT_BOOL AssemblyFeaturesExtrudedProtrusion::HasSuppressionVariable ( );
__declspec(implementation_key(3862)) enum TGPart::FeatureTypeConstants AssemblyFeaturesExtrudedProtrusion::GetFeatureType ( );
__declspec(implementation_key(3863)) AssemblyBodyPtr AssemblyFeaturesExtrudedProtrusion::GetAssemblyBody ( );
__declspec(implementation_key(3864)) TGFramework::ApplicationPtr _IAssemblyFeaturesExtrudedProtrusionsAuto::GetApplication ( );
__declspec(implementation_key(3865)) IDispatchPtr _IAssemblyFeaturesExtrudedProtrusionsAuto::GetParent ( );
__declspec(implementation_key(3866)) AssemblyFeaturesExtrudedProtrusionPtr _IAssemblyFeaturesExtrudedProtrusionsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(3867)) IUnknownPtr _IAssemblyFeaturesExtrudedProtrusionsAuto::Get_NewEnum ( );
__declspec(implementation_key(3868)) long _IAssemblyFeaturesExtrudedProtrusionsAuto::GetCount ( );
__declspec(implementation_key(3869)) AssemblyFeaturesExtrudedProtrusionPtr _IAssemblyFeaturesExtrudedProtrusionsAuto::Add ( long nNumProfiles, SAFEARRAY * * pProfiles, enum TGPart::FeaturePropertyConstants ExtentType, enum TGPart::FeaturePropertyConstants * pExtentSide, enum TGPart::FeaturePropertyConstants profileSide, double * pdDistance, IUnknown * pKeyPoint, enum TGPart::KeyPointExtentConstants * pKeyPointFlags, IUnknown * pFromSurfOrPlane, IUnknown * pToSurfOrPlane );
__declspec(implementation_key(3870)) TGFramework::ApplicationPtr _IAssemblyFeaturesExtrudedProtrusionAuto::GetApplication ( );
__declspec(implementation_key(3871)) IDispatchPtr _IAssemblyFeaturesExtrudedProtrusionAuto::GetParent ( );
__declspec(implementation_key(3872)) double _IAssemblyFeaturesExtrudedProtrusionAuto::GetDepth ( );
__declspec(implementation_key(3873)) HRESULT _IAssemblyFeaturesExtrudedProtrusionAuto::SetDepth ( double nDepth );
__declspec(implementation_key(3874)) enum TGPart::FeaturePropertyConstants _IAssemblyFeaturesExtrudedProtrusionAuto::GetExtentSide ( );
__declspec(implementation_key(3875)) HRESULT _IAssemblyFeaturesExtrudedProtrusionAuto::SetExtentSide ( enum TGPart::FeaturePropertyConstants ExtentSide );
__declspec(implementation_key(3876)) enum TGPart::FeaturePropertyConstants _IAssemblyFeaturesExtrudedProtrusionAuto::GetExtentType ( );
__declspec(implementation_key(3877)) HRESULT _IAssemblyFeaturesExtrudedProtrusionAuto::SetExtentType ( enum TGPart::FeaturePropertyConstants ExtentType );
__declspec(implementation_key(3878)) enum TGPart::FeaturePropertyConstants _IAssemblyFeaturesExtrudedProtrusionAuto::GetProfileSide ( );
__declspec(implementation_key(3879)) HRESULT _IAssemblyFeaturesExtrudedProtrusionAuto::SetProfileSide ( enum TGPart::FeaturePropertyConstants profileSide );
__declspec(implementation_key(3880)) HRESULT _IAssemblyFeaturesExtrudedProtrusionAuto::GetProfiles ( long * NumProfiles, SAFEARRAY * * ppProfiles );
__declspec(implementation_key(3881)) HRESULT _IAssemblyFeaturesExtrudedProtrusionAuto::SetProfiles ( long NumProfiles, SAFEARRAY * pProfiles );
__declspec(implementation_key(3882)) HRESULT _IAssemblyFeaturesExtrudedProtrusionAuto::SetFromPlane ( IUnknown * FromPlane );
__declspec(implementation_key(3883)) IUnknownPtr _IAssemblyFeaturesExtrudedProtrusionAuto::GetFromPlane ( );
__declspec(implementation_key(3884)) HRESULT _IAssemblyFeaturesExtrudedProtrusionAuto::SetToPlane ( IUnknown * ToPlane );
__declspec(implementation_key(3885)) IUnknownPtr _IAssemblyFeaturesExtrudedProtrusionAuto::GetToPlane ( );
__declspec(implementation_key(3886)) _bstr_t _IAssemblyFeaturesExtrudedProtrusionAuto::GetName ( );
__declspec(implementation_key(3887)) void _IAssemblyFeaturesExtrudedProtrusionAuto::PutName ( _bstr_t featureName );
__declspec(implementation_key(3888)) IDispatchPtr _IAssemblyFeaturesExtrudedProtrusionAuto::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(3889)) IDispatchPtr _IAssemblyFeaturesExtrudedProtrusionAuto::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(3890)) IDispatchPtr _IAssemblyFeaturesExtrudedProtrusionAuto::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(3891)) HRESULT _IAssemblyFeaturesExtrudedProtrusionAuto::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 );
__declspec(implementation_key(3892)) VARIANT_BOOL _IAssemblyFeaturesExtrudedProtrusionAuto::GetSuppress ( );
__declspec(implementation_key(3893)) void _IAssemblyFeaturesExtrudedProtrusionAuto::PutSuppress ( VARIANT_BOOL Suppress );
__declspec(implementation_key(3894)) HRESULT _IAssemblyFeaturesExtrudedProtrusionAuto::Delete ( );
__declspec(implementation_key(3895)) HRESULT _IAssemblyFeaturesExtrudedProtrusionAuto::RollToFeature ( );
__declspec(implementation_key(3896)) enum TGPart::FeatureStatusConstants _IAssemblyFeaturesExtrudedProtrusionAuto::GetStatus ( VARIANT * Description );
__declspec(implementation_key(3897)) TGPart::SuppressVariablePtr _IAssemblyFeaturesExtrudedProtrusionAuto::GetSuppressionVariable ( );
__declspec(implementation_key(3898)) TGPart::SuppressVariablePtr _IAssemblyFeaturesExtrudedProtrusionAuto::AddSuppressionVariable ( );
__declspec(implementation_key(3899)) HRESULT _IAssemblyFeaturesExtrudedProtrusionAuto::DeleteSuppressionVariable ( );
__declspec(implementation_key(3900)) VARIANT_BOOL _IAssemblyFeaturesExtrudedProtrusionAuto::HasSuppressionVariable ( );
__declspec(implementation_key(3901)) enum TGPart::FeatureTypeConstants _IAssemblyFeaturesExtrudedProtrusionAuto::GetFeatureType ( );
__declspec(implementation_key(3902)) AssemblyBodyPtr _IAssemblyFeaturesExtrudedProtrusionAuto::GetAssemblyBody ( );
__declspec(implementation_key(3903)) TGFramework::ApplicationPtr AssemblyFeaturesRevolvedProtrusions::GetApplication ( );
__declspec(implementation_key(3904)) IDispatchPtr AssemblyFeaturesRevolvedProtrusions::GetParent ( );
__declspec(implementation_key(3905)) AssemblyFeaturesRevolvedProtrusionPtr AssemblyFeaturesRevolvedProtrusions::Item ( const _variant_t & Index );
__declspec(implementation_key(3906)) long AssemblyFeaturesRevolvedProtrusions::GetCount ( );
__declspec(implementation_key(3907)) AssemblyFeaturesRevolvedProtrusionPtr AssemblyFeaturesRevolvedProtrusions::Add ( long nNumProfiles, SAFEARRAY * * pProfiles, IUnknown * pRefAxis, enum TGPart::FeaturePropertyConstants ExtentType, enum TGPart::FeaturePropertyConstants ExtentSide, enum TGPart::FeaturePropertyConstants profileSide, double * pdAngle, IUnknown * KeyPointOrTangentFace, enum TGPart::KeyPointExtentConstants * KeyPointFlags, IUnknown * pFromSurface, IUnknown * pToSurface );
__declspec(implementation_key(3908)) TGFramework::ApplicationPtr AssemblyFeaturesRevolvedProtrusion::GetApplication ( );
__declspec(implementation_key(3909)) IDispatchPtr AssemblyFeaturesRevolvedProtrusion::GetParent ( );
__declspec(implementation_key(3910)) double AssemblyFeaturesRevolvedProtrusion::GetAngle ( );
__declspec(implementation_key(3911)) HRESULT AssemblyFeaturesRevolvedProtrusion::SetAngle ( double nAngle );
__declspec(implementation_key(3912)) IUnknownPtr AssemblyFeaturesRevolvedProtrusion::GetReferenceAxis ( );
__declspec(implementation_key(3913)) HRESULT AssemblyFeaturesRevolvedProtrusion::SetReferenceAxis ( IUnknown * ReferenceAxis );
__declspec(implementation_key(3914)) enum TGPart::FeaturePropertyConstants AssemblyFeaturesRevolvedProtrusion::GetExtentSide ( );
__declspec(implementation_key(3915)) HRESULT AssemblyFeaturesRevolvedProtrusion::SetExtentSide ( enum TGPart::FeaturePropertyConstants ExtentSide );
__declspec(implementation_key(3916)) enum TGPart::FeaturePropertyConstants AssemblyFeaturesRevolvedProtrusion::GetExtentType ( );
__declspec(implementation_key(3917)) HRESULT AssemblyFeaturesRevolvedProtrusion::SetExtentType ( enum TGPart::FeaturePropertyConstants ExtentType );
__declspec(implementation_key(3918)) enum TGPart::FeaturePropertyConstants AssemblyFeaturesRevolvedProtrusion::GetProfileSide ( );
__declspec(implementation_key(3919)) HRESULT AssemblyFeaturesRevolvedProtrusion::SetProfileSide ( enum TGPart::FeaturePropertyConstants profileSide );
__declspec(implementation_key(3920)) HRESULT AssemblyFeaturesRevolvedProtrusion::GetProfiles ( long * NumProfiles, SAFEARRAY * * ppProfiles );
__declspec(implementation_key(3921)) HRESULT AssemblyFeaturesRevolvedProtrusion::SetProfiles ( long NumProfiles, SAFEARRAY * pProfiles );
__declspec(implementation_key(3922)) _bstr_t AssemblyFeaturesRevolvedProtrusion::GetName ( );
__declspec(implementation_key(3923)) void AssemblyFeaturesRevolvedProtrusion::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(3924)) IDispatchPtr AssemblyFeaturesRevolvedProtrusion::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(3925)) IDispatchPtr AssemblyFeaturesRevolvedProtrusion::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(3926)) IDispatchPtr AssemblyFeaturesRevolvedProtrusion::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(3927)) HRESULT AssemblyFeaturesRevolvedProtrusion::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 );
__declspec(implementation_key(3928)) VARIANT_BOOL AssemblyFeaturesRevolvedProtrusion::GetSuppress ( );
__declspec(implementation_key(3929)) void AssemblyFeaturesRevolvedProtrusion::PutSuppress ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(3930)) HRESULT AssemblyFeaturesRevolvedProtrusion::Delete ( );
__declspec(implementation_key(3931)) HRESULT AssemblyFeaturesRevolvedProtrusion::RollToFeature ( );
__declspec(implementation_key(3932)) enum TGPart::FeatureStatusConstants AssemblyFeaturesRevolvedProtrusion::GetStatus ( VARIANT * Description );
__declspec(implementation_key(3933)) TGPart::SuppressVariablePtr AssemblyFeaturesRevolvedProtrusion::GetSuppressionVariable ( );
__declspec(implementation_key(3934)) TGPart::SuppressVariablePtr AssemblyFeaturesRevolvedProtrusion::AddSuppressionVariable ( );
__declspec(implementation_key(3935)) HRESULT AssemblyFeaturesRevolvedProtrusion::DeleteSuppressionVariable ( );
__declspec(implementation_key(3936)) VARIANT_BOOL AssemblyFeaturesRevolvedProtrusion::HasSuppressionVariable ( );
__declspec(implementation_key(3937)) enum TGPart::FeatureTypeConstants AssemblyFeaturesRevolvedProtrusion::GetFeatureType ( );
__declspec(implementation_key(3938)) AssemblyBodyPtr AssemblyFeaturesRevolvedProtrusion::GetAssemblyBody ( );
__declspec(implementation_key(3939)) TGFramework::ApplicationPtr _IAssemblyFeaturesRevolvedProtrusionsAuto::GetApplication ( );
__declspec(implementation_key(3940)) IDispatchPtr _IAssemblyFeaturesRevolvedProtrusionsAuto::GetParent ( );
__declspec(implementation_key(3941)) AssemblyFeaturesRevolvedProtrusionPtr _IAssemblyFeaturesRevolvedProtrusionsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(3942)) IUnknownPtr _IAssemblyFeaturesRevolvedProtrusionsAuto::Get_NewEnum ( );
__declspec(implementation_key(3943)) long _IAssemblyFeaturesRevolvedProtrusionsAuto::GetCount ( );
__declspec(implementation_key(3944)) AssemblyFeaturesRevolvedProtrusionPtr _IAssemblyFeaturesRevolvedProtrusionsAuto::Add ( long nNumProfiles, SAFEARRAY * * pProfiles, IUnknown * pRefAxis, enum TGPart::FeaturePropertyConstants ExtentType, enum TGPart::FeaturePropertyConstants ExtentSide, enum TGPart::FeaturePropertyConstants profileSide, double * pdAngle, IUnknown * KeyPointOrTangentFace, enum TGPart::KeyPointExtentConstants * KeyPointFlags, IUnknown * pFromSurface, IUnknown * pToSurface );
__declspec(implementation_key(3945)) TGFramework::ApplicationPtr _IAssemblyFeaturesRevolvedProtrusionAuto::GetApplication ( );
__declspec(implementation_key(3946)) IDispatchPtr _IAssemblyFeaturesRevolvedProtrusionAuto::GetParent ( );
__declspec(implementation_key(3947)) double _IAssemblyFeaturesRevolvedProtrusionAuto::GetAngle ( );
__declspec(implementation_key(3948)) HRESULT _IAssemblyFeaturesRevolvedProtrusionAuto::SetAngle ( double nAngle );
__declspec(implementation_key(3949)) IUnknownPtr _IAssemblyFeaturesRevolvedProtrusionAuto::GetReferenceAxis ( );
__declspec(implementation_key(3950)) HRESULT _IAssemblyFeaturesRevolvedProtrusionAuto::SetReferenceAxis ( IUnknown * ReferenceAxis );
__declspec(implementation_key(3951)) enum TGPart::FeaturePropertyConstants _IAssemblyFeaturesRevolvedProtrusionAuto::GetExtentSide ( );
__declspec(implementation_key(3952)) HRESULT _IAssemblyFeaturesRevolvedProtrusionAuto::SetExtentSide ( enum TGPart::FeaturePropertyConstants ExtentSide );
__declspec(implementation_key(3953)) enum TGPart::FeaturePropertyConstants _IAssemblyFeaturesRevolvedProtrusionAuto::GetExtentType ( );
__declspec(implementation_key(3954)) HRESULT _IAssemblyFeaturesRevolvedProtrusionAuto::SetExtentType ( enum TGPart::FeaturePropertyConstants ExtentType );
__declspec(implementation_key(3955)) enum TGPart::FeaturePropertyConstants _IAssemblyFeaturesRevolvedProtrusionAuto::GetProfileSide ( );
__declspec(implementation_key(3956)) HRESULT _IAssemblyFeaturesRevolvedProtrusionAuto::SetProfileSide ( enum TGPart::FeaturePropertyConstants profileSide );
__declspec(implementation_key(3957)) HRESULT _IAssemblyFeaturesRevolvedProtrusionAuto::GetProfiles ( long * NumProfiles, SAFEARRAY * * ppProfiles );
__declspec(implementation_key(3958)) HRESULT _IAssemblyFeaturesRevolvedProtrusionAuto::SetProfiles ( long NumProfiles, SAFEARRAY * pProfiles );
__declspec(implementation_key(3959)) _bstr_t _IAssemblyFeaturesRevolvedProtrusionAuto::GetName ( );
__declspec(implementation_key(3960)) void _IAssemblyFeaturesRevolvedProtrusionAuto::PutName ( _bstr_t featureName );
__declspec(implementation_key(3961)) IDispatchPtr _IAssemblyFeaturesRevolvedProtrusionAuto::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(3962)) IDispatchPtr _IAssemblyFeaturesRevolvedProtrusionAuto::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(3963)) IDispatchPtr _IAssemblyFeaturesRevolvedProtrusionAuto::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(3964)) HRESULT _IAssemblyFeaturesRevolvedProtrusionAuto::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 );
__declspec(implementation_key(3965)) VARIANT_BOOL _IAssemblyFeaturesRevolvedProtrusionAuto::GetSuppress ( );
__declspec(implementation_key(3966)) void _IAssemblyFeaturesRevolvedProtrusionAuto::PutSuppress ( VARIANT_BOOL Suppress );
__declspec(implementation_key(3967)) HRESULT _IAssemblyFeaturesRevolvedProtrusionAuto::Delete ( );
__declspec(implementation_key(3968)) HRESULT _IAssemblyFeaturesRevolvedProtrusionAuto::RollToFeature ( );
__declspec(implementation_key(3969)) enum TGPart::FeatureStatusConstants _IAssemblyFeaturesRevolvedProtrusionAuto::GetStatus ( VARIANT * Description );
__declspec(implementation_key(3970)) TGPart::SuppressVariablePtr _IAssemblyFeaturesRevolvedProtrusionAuto::GetSuppressionVariable ( );
__declspec(implementation_key(3971)) TGPart::SuppressVariablePtr _IAssemblyFeaturesRevolvedProtrusionAuto::AddSuppressionVariable ( );
__declspec(implementation_key(3972)) HRESULT _IAssemblyFeaturesRevolvedProtrusionAuto::DeleteSuppressionVariable ( );
__declspec(implementation_key(3973)) VARIANT_BOOL _IAssemblyFeaturesRevolvedProtrusionAuto::HasSuppressionVariable ( );
__declspec(implementation_key(3974)) enum TGPart::FeatureTypeConstants _IAssemblyFeaturesRevolvedProtrusionAuto::GetFeatureType ( );
__declspec(implementation_key(3975)) AssemblyBodyPtr _IAssemblyFeaturesRevolvedProtrusionAuto::GetAssemblyBody ( );
__declspec(implementation_key(3976)) TGFramework::ApplicationPtr AssemblyLabelWelds::GetApplication ( );
__declspec(implementation_key(3977)) IDispatchPtr AssemblyLabelWelds::GetParent ( );
__declspec(implementation_key(3978)) AssemblyLabelWeldPtr AssemblyLabelWelds::Item ( const _variant_t & Index );
__declspec(implementation_key(3979)) long AssemblyLabelWelds::GetCount ( );
__declspec(implementation_key(3980)) AssemblyLabelWeldPtr AssemblyLabelWelds::Add ( long NumberOfEdges, SAFEARRAY * * Edges, IDispatch * pLabelWeldDataObject );
__declspec(implementation_key(3981)) IDispatchPtr AssemblyLabelWelds::GetAttributeSets ( );
__declspec(implementation_key(3982)) VARIANT_BOOL AssemblyLabelWelds::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(3983)) TGFramework::ApplicationPtr _IAssemblyFeaturesAuto::GetApplication ( );
__declspec(implementation_key(3984)) IDispatchPtr _IAssemblyFeaturesAuto::GetParent ( );
__declspec(implementation_key(3985)) AssemblyFeaturesExtrudedCutoutsPtr _IAssemblyFeaturesAuto::GetAssemblyFeaturesExtrudedCutouts ( );
__declspec(implementation_key(3986)) AssemblyFeaturesRevolvedCutoutsPtr _IAssemblyFeaturesAuto::GetAssemblyFeaturesRevolvedCutouts ( );
__declspec(implementation_key(3987)) AssemblyFeaturesHolesPtr _IAssemblyFeaturesAuto::GetAssemblyFeaturesHoles ( );
__declspec(implementation_key(3988)) AssemblyFeaturesMirrorsPtr _IAssemblyFeaturesAuto::GetAssemblyFeaturesMirrors ( );
__declspec(implementation_key(3989)) AssemblyFeaturesPatternsPtr _IAssemblyFeaturesAuto::GetAssemblyFeaturesPatterns ( );
__declspec(implementation_key(3990)) AssemblyFilletWeldsPtr _IAssemblyFeaturesAuto::GetFilletWelds ( );
__declspec(implementation_key(3991)) AFGrooveWeldsPtr _IAssemblyFeaturesAuto::GetGrooveWelds ( );
__declspec(implementation_key(3992)) AssemblyFeaturesSweptProtrusionsPtr _IAssemblyFeaturesAuto::GetAssemblyFeaturesSweptProtrusions ( );
__declspec(implementation_key(3993)) AssemblyStitchWeldsPtr _IAssemblyFeaturesAuto::GetStitchWelds ( );
__declspec(implementation_key(3994)) AssemblyThreadsPtr _IAssemblyFeaturesAuto::GetThreads ( );
__declspec(implementation_key(3995)) AssemblyFeaturesExtrudedProtrusionsPtr _IAssemblyFeaturesAuto::GetExtrudedProtrusions ( );
__declspec(implementation_key(3996)) AssemblyFeaturesRevolvedProtrusionsPtr _IAssemblyFeaturesAuto::GetRevolvedProtrusions ( );
__declspec(implementation_key(3997)) HRESULT _IAssemblyFeaturesAuto::Recompute ( long options );
__declspec(implementation_key(3998)) AssemblyLabelWeldsPtr _IAssemblyFeaturesAuto::GetLabelWelds ( );
__declspec(implementation_key(3999)) TGFramework::ApplicationPtr AssemblyLabelWeld::GetApplication ( );
__declspec(implementation_key(4000)) IDispatchPtr AssemblyLabelWeld::GetParent ( );
__declspec(implementation_key(4001)) void AssemblyLabelWeld::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(4002)) _bstr_t AssemblyLabelWeld::GetName ( );
__declspec(implementation_key(4003)) void AssemblyLabelWeld::PutVisible ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4004)) VARIANT_BOOL AssemblyLabelWeld::GetVisible ( );
__declspec(implementation_key(4005)) HRESULT AssemblyLabelWeld::Recompute ( );
__declspec(implementation_key(4006)) HRESULT AssemblyLabelWeld::Delete ( );
__declspec(implementation_key(4007)) HRESULT AssemblyLabelWeld::GoTo ( );
__declspec(implementation_key(4008)) void AssemblyLabelWeld::PutSuppress ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4009)) VARIANT_BOOL AssemblyLabelWeld::GetSuppress ( );
__declspec(implementation_key(4010)) enum TGPart::FeatureStatusConstants AssemblyLabelWeld::GetStatus ( VARIANT * Description );
__declspec(implementation_key(4011)) HRESULT AssemblyLabelWeld::GetLabelWeldData ( IDispatch * * Object );
__declspec(implementation_key(4012)) TGPart::SuppressVariablePtr AssemblyLabelWeld::GetSuppressionVariable ( );
__declspec(implementation_key(4013)) TGPart::SuppressVariablePtr AssemblyLabelWeld::AddSuppressionVariable ( );
__declspec(implementation_key(4014)) HRESULT AssemblyLabelWeld::DeleteSuppressionVariable ( );
__declspec(implementation_key(4015)) VARIANT_BOOL AssemblyLabelWeld::HasSuppressionVariable ( );
__declspec(implementation_key(4016)) IDispatchPtr AssemblyLabelWeld::GetAttributeSets ( );
__declspec(implementation_key(4017)) VARIANT_BOOL AssemblyLabelWeld::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(4018)) enum TGPart::FeatureTypeConstants AssemblyLabelWeld::GetFeatureType ( );
__declspec(implementation_key(4019)) TGFramework::ApplicationPtr _IAssemblyLabelWeldsAuto::GetApplication ( );
__declspec(implementation_key(4020)) IDispatchPtr _IAssemblyLabelWeldsAuto::GetParent ( );
__declspec(implementation_key(4021)) AssemblyLabelWeldPtr _IAssemblyLabelWeldsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(4022)) long _IAssemblyLabelWeldsAuto::GetCount ( );
__declspec(implementation_key(4023)) IUnknownPtr _IAssemblyLabelWeldsAuto::Get_NewEnum ( );
__declspec(implementation_key(4024)) AssemblyLabelWeldPtr _IAssemblyLabelWeldsAuto::Add ( long NumberOfEdges, SAFEARRAY * * Edges, IDispatch * pLabelWeldDataObject );
__declspec(implementation_key(4025)) IDispatchPtr _IAssemblyLabelWeldsAuto::GetAttributeSets ( );
__declspec(implementation_key(4026)) VARIANT_BOOL _IAssemblyLabelWeldsAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(4027)) TGFramework::ApplicationPtr _IAssemblyLabelWeldAuto::GetApplication ( );
__declspec(implementation_key(4028)) IDispatchPtr _IAssemblyLabelWeldAuto::GetParent ( );
__declspec(implementation_key(4029)) void _IAssemblyLabelWeldAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(4030)) _bstr_t _IAssemblyLabelWeldAuto::GetName ( );
__declspec(implementation_key(4031)) void _IAssemblyLabelWeldAuto::PutVisible ( VARIANT_BOOL bVisible );
__declspec(implementation_key(4032)) VARIANT_BOOL _IAssemblyLabelWeldAuto::GetVisible ( );
__declspec(implementation_key(4033)) HRESULT _IAssemblyLabelWeldAuto::Recompute ( );
__declspec(implementation_key(4034)) HRESULT _IAssemblyLabelWeldAuto::Delete ( );
__declspec(implementation_key(4035)) HRESULT _IAssemblyLabelWeldAuto::GoTo ( );
__declspec(implementation_key(4036)) void _IAssemblyLabelWeldAuto::PutSuppress ( VARIANT_BOOL pvbSuppress );
__declspec(implementation_key(4037)) VARIANT_BOOL _IAssemblyLabelWeldAuto::GetSuppress ( );
__declspec(implementation_key(4038)) enum TGPart::FeatureStatusConstants _IAssemblyLabelWeldAuto::GetStatus ( VARIANT * Description );
__declspec(implementation_key(4039)) HRESULT _IAssemblyLabelWeldAuto::GetLabelWeldData ( IDispatch * * Object );
__declspec(implementation_key(4040)) TGPart::SuppressVariablePtr _IAssemblyLabelWeldAuto::GetSuppressionVariable ( );
__declspec(implementation_key(4041)) TGPart::SuppressVariablePtr _IAssemblyLabelWeldAuto::AddSuppressionVariable ( );
__declspec(implementation_key(4042)) HRESULT _IAssemblyLabelWeldAuto::DeleteSuppressionVariable ( );
__declspec(implementation_key(4043)) VARIANT_BOOL _IAssemblyLabelWeldAuto::HasSuppressionVariable ( );
__declspec(implementation_key(4044)) IDispatchPtr _IAssemblyLabelWeldAuto::GetAttributeSets ( );
__declspec(implementation_key(4045)) VARIANT_BOOL _IAssemblyLabelWeldAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(4046)) enum TGPart::FeatureTypeConstants _IAssemblyLabelWeldAuto::GetFeatureType ( );
__declspec(implementation_key(4047)) TGFramework::ApplicationPtr AssemblyDrivenPartFeatures::GetApplication ( );
__declspec(implementation_key(4048)) IDispatchPtr AssemblyDrivenPartFeatures::GetParent ( );
__declspec(implementation_key(4049)) AssemblyDrivenPartFeaturesExtrudedCutoutsPtr AssemblyDrivenPartFeatures::GetAssemblyDrivenPartFeaturesExtrudedCutouts ( );
__declspec(implementation_key(4050)) AssemblyDrivenPartFeaturesRevolvedCutoutsPtr AssemblyDrivenPartFeatures::GetAssemblyDrivenPartFeaturesRevolvedCutouts ( );
__declspec(implementation_key(4051)) AssemblyDrivenPartFeaturesHolesPtr AssemblyDrivenPartFeatures::GetAssemblyDrivenPartFeaturesHoles ( );
__declspec(implementation_key(4052)) AssemblyDrivenPartFeaturesTrimTubesPtr AssemblyDrivenPartFeatures::GetAssemblyDrivenPartFeaturesTrimTubes ( );
__declspec(implementation_key(4053)) TGFramework::ApplicationPtr AssemblyDrivenPartFeaturesExtrudedCutouts::GetApplication ( );
__declspec(implementation_key(4054)) IDispatchPtr AssemblyDrivenPartFeaturesExtrudedCutouts::GetParent ( );
__declspec(implementation_key(4055)) AssemblyDrivenPartFeaturesExtrudedCutoutPtr AssemblyDrivenPartFeaturesExtrudedCutouts::Item ( const _variant_t & Index );
__declspec(implementation_key(4056)) long AssemblyDrivenPartFeaturesExtrudedCutouts::GetCount ( );
__declspec(implementation_key(4057)) AssemblyDrivenPartFeaturesExtrudedCutoutPtr AssemblyDrivenPartFeaturesExtrudedCutouts::Add ( long nNumScopeParts, SAFEARRAY * * pScopeParts, long nNumProfiles, SAFEARRAY * * pProfiles, enum TGPart::FeaturePropertyConstants ExtentType, enum TGPart::FeaturePropertyConstants * pExtentSide, enum TGPart::FeaturePropertyConstants profileSide, double * pdDistance, IUnknown * pKeyPoint, enum TGPart::KeyPointExtentConstants * pKeyPointFlags, IUnknown * pFromSurfOrPlane, IUnknown * pToSurfOrPlane );
__declspec(implementation_key(4058)) TGFramework::ApplicationPtr AssemblyDrivenPartFeaturesExtrudedCutout::GetApplication ( );
__declspec(implementation_key(4059)) IDispatchPtr AssemblyDrivenPartFeaturesExtrudedCutout::GetParent ( );
__declspec(implementation_key(4060)) double AssemblyDrivenPartFeaturesExtrudedCutout::GetDepth ( );
__declspec(implementation_key(4061)) HRESULT AssemblyDrivenPartFeaturesExtrudedCutout::SetDepth ( double nDepth );
__declspec(implementation_key(4062)) enum TGPart::FeaturePropertyConstants AssemblyDrivenPartFeaturesExtrudedCutout::GetExtentSide ( );
__declspec(implementation_key(4063)) HRESULT AssemblyDrivenPartFeaturesExtrudedCutout::SetExtentSide ( enum TGPart::FeaturePropertyConstants ExtentSide );
__declspec(implementation_key(4064)) enum TGPart::FeaturePropertyConstants AssemblyDrivenPartFeaturesExtrudedCutout::GetExtentType ( );
__declspec(implementation_key(4065)) HRESULT AssemblyDrivenPartFeaturesExtrudedCutout::SetExtentType ( enum TGPart::FeaturePropertyConstants ExtentType );
__declspec(implementation_key(4066)) enum TGPart::FeaturePropertyConstants AssemblyDrivenPartFeaturesExtrudedCutout::GetProfileSide ( );
__declspec(implementation_key(4067)) HRESULT AssemblyDrivenPartFeaturesExtrudedCutout::SetProfileSide ( enum TGPart::FeaturePropertyConstants profileSide );
__declspec(implementation_key(4068)) HRESULT AssemblyDrivenPartFeaturesExtrudedCutout::GetProfiles ( long * NumProfiles, SAFEARRAY * * ppProfiles );
__declspec(implementation_key(4069)) HRESULT AssemblyDrivenPartFeaturesExtrudedCutout::SetProfiles ( long NumProfiles, SAFEARRAY * pProfiles );
__declspec(implementation_key(4070)) HRESULT AssemblyDrivenPartFeaturesExtrudedCutout::SetFromPlane ( IUnknown * FromPlane );
__declspec(implementation_key(4071)) IUnknownPtr AssemblyDrivenPartFeaturesExtrudedCutout::GetFromPlane ( );
__declspec(implementation_key(4072)) HRESULT AssemblyDrivenPartFeaturesExtrudedCutout::SetToPlane ( IUnknown * ToPlane );
__declspec(implementation_key(4073)) IUnknownPtr AssemblyDrivenPartFeaturesExtrudedCutout::GetToPlane ( );
__declspec(implementation_key(4074)) HRESULT AssemblyDrivenPartFeaturesExtrudedCutout::SetScopeParts ( long NumScopeParts, SAFEARRAY * pScopeParts );
__declspec(implementation_key(4075)) HRESULT AssemblyDrivenPartFeaturesExtrudedCutout::GetScopeParts ( long * NumScopeParts, SAFEARRAY * * pScopeParts );
__declspec(implementation_key(4076)) _bstr_t AssemblyDrivenPartFeaturesExtrudedCutout::GetName ( );
__declspec(implementation_key(4077)) void AssemblyDrivenPartFeaturesExtrudedCutout::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(4078)) IDispatchPtr AssemblyDrivenPartFeaturesExtrudedCutout::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(4079)) IDispatchPtr AssemblyDrivenPartFeaturesExtrudedCutout::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(4080)) IDispatchPtr AssemblyDrivenPartFeaturesExtrudedCutout::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(4081)) HRESULT AssemblyDrivenPartFeaturesExtrudedCutout::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 );
__declspec(implementation_key(4082)) VARIANT_BOOL AssemblyDrivenPartFeaturesExtrudedCutout::GetSuppress ( );
__declspec(implementation_key(4083)) void AssemblyDrivenPartFeaturesExtrudedCutout::PutSuppress ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4084)) HRESULT AssemblyDrivenPartFeaturesExtrudedCutout::Delete ( );
__declspec(implementation_key(4085)) HRESULT AssemblyDrivenPartFeaturesExtrudedCutout::RollToFeature ( );
__declspec(implementation_key(4086)) HRESULT AssemblyDrivenPartFeaturesExtrudedCutout::GetPartFeatures ( long * NumFeatures, SAFEARRAY * * ppFeatures );
__declspec(implementation_key(4087)) enum TGPart::FeatureStatusConstants AssemblyDrivenPartFeaturesExtrudedCutout::GetStatus ( VARIANT * Description );
__declspec(implementation_key(4088)) TGFramework::ApplicationPtr _IAssemblyDrivenPartFeaturesExtrudedCutoutsAuto::GetApplication ( );
__declspec(implementation_key(4089)) IDispatchPtr _IAssemblyDrivenPartFeaturesExtrudedCutoutsAuto::GetParent ( );
__declspec(implementation_key(4090)) AssemblyDrivenPartFeaturesExtrudedCutoutPtr _IAssemblyDrivenPartFeaturesExtrudedCutoutsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(4091)) IUnknownPtr _IAssemblyDrivenPartFeaturesExtrudedCutoutsAuto::Get_NewEnum ( );
__declspec(implementation_key(4092)) long _IAssemblyDrivenPartFeaturesExtrudedCutoutsAuto::GetCount ( );
__declspec(implementation_key(4093)) AssemblyDrivenPartFeaturesExtrudedCutoutPtr _IAssemblyDrivenPartFeaturesExtrudedCutoutsAuto::Add ( long nNumScopeParts, SAFEARRAY * * pScopeParts, long nNumProfiles, SAFEARRAY * * pProfiles, enum TGPart::FeaturePropertyConstants ExtentType, enum TGPart::FeaturePropertyConstants * pExtentSide, enum TGPart::FeaturePropertyConstants profileSide, double * pdDistance, IUnknown * pKeyPoint, enum TGPart::KeyPointExtentConstants * pKeyPointFlags, IUnknown * pFromSurfOrPlane, IUnknown * pToSurfOrPlane );
__declspec(implementation_key(4094)) TGFramework::ApplicationPtr _IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::GetApplication ( );
__declspec(implementation_key(4095)) IDispatchPtr _IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::GetParent ( );
__declspec(implementation_key(4096)) double _IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::GetDepth ( );
__declspec(implementation_key(4097)) HRESULT _IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::SetDepth ( double nDepth );
__declspec(implementation_key(4098)) enum TGPart::FeaturePropertyConstants _IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::GetExtentSide ( );
__declspec(implementation_key(4099)) HRESULT _IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::SetExtentSide ( enum TGPart::FeaturePropertyConstants ExtentSide );
__declspec(implementation_key(4100)) enum TGPart::FeaturePropertyConstants _IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::GetExtentType ( );
__declspec(implementation_key(4101)) HRESULT _IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::SetExtentType ( enum TGPart::FeaturePropertyConstants ExtentType );
__declspec(implementation_key(4102)) enum TGPart::FeaturePropertyConstants _IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::GetProfileSide ( );
__declspec(implementation_key(4103)) HRESULT _IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::SetProfileSide ( enum TGPart::FeaturePropertyConstants profileSide );
__declspec(implementation_key(4104)) HRESULT _IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::GetProfiles ( long * NumProfiles, SAFEARRAY * * ppProfiles );
__declspec(implementation_key(4105)) HRESULT _IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::SetProfiles ( long NumProfiles, SAFEARRAY * pProfiles );
__declspec(implementation_key(4106)) HRESULT _IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::SetFromPlane ( IUnknown * FromPlane );
__declspec(implementation_key(4107)) IUnknownPtr _IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::GetFromPlane ( );
__declspec(implementation_key(4108)) HRESULT _IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::SetToPlane ( IUnknown * ToPlane );
__declspec(implementation_key(4109)) IUnknownPtr _IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::GetToPlane ( );
__declspec(implementation_key(4110)) HRESULT _IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::SetScopeParts ( long NumScopeParts, SAFEARRAY * pScopeParts );
__declspec(implementation_key(4111)) HRESULT _IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::GetScopeParts ( long * NumScopeParts, SAFEARRAY * * pScopeParts );
__declspec(implementation_key(4112)) _bstr_t _IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::GetName ( );
__declspec(implementation_key(4113)) void _IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::PutName ( _bstr_t featureName );
__declspec(implementation_key(4114)) IDispatchPtr _IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(4115)) IDispatchPtr _IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(4116)) IDispatchPtr _IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(4117)) HRESULT _IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 );
__declspec(implementation_key(4118)) VARIANT_BOOL _IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::GetSuppress ( );
__declspec(implementation_key(4119)) void _IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::PutSuppress ( VARIANT_BOOL Suppress );
__declspec(implementation_key(4120)) HRESULT _IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::Delete ( );
__declspec(implementation_key(4121)) HRESULT _IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::RollToFeature ( );
__declspec(implementation_key(4122)) HRESULT _IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::GetPartFeatures ( long * NumFeatures, SAFEARRAY * * ppFeatures );
__declspec(implementation_key(4123)) enum TGPart::FeatureStatusConstants _IAssemblyDrivenPartFeaturesExtrudedCutoutAuto::GetStatus ( VARIANT * Description );
__declspec(implementation_key(4124)) TGFramework::ApplicationPtr AssemblyDrivenPartFeaturesRevolvedCutouts::GetApplication ( );
__declspec(implementation_key(4125)) IDispatchPtr AssemblyDrivenPartFeaturesRevolvedCutouts::GetParent ( );
__declspec(implementation_key(4126)) AssemblyDrivenPartFeaturesRevolvedCutoutPtr AssemblyDrivenPartFeaturesRevolvedCutouts::Item ( const _variant_t & Index );
__declspec(implementation_key(4127)) long AssemblyDrivenPartFeaturesRevolvedCutouts::GetCount ( );
__declspec(implementation_key(4128)) AssemblyDrivenPartFeaturesRevolvedCutoutPtr AssemblyDrivenPartFeaturesRevolvedCutouts::Add ( long nNumScopeParts, SAFEARRAY * * pScopeParts, long nNumProfiles, SAFEARRAY * * pProfiles, IUnknown * pRefAxis, enum TGPart::FeaturePropertyConstants ExtentType, enum TGPart::FeaturePropertyConstants ExtentSide, enum TGPart::FeaturePropertyConstants profileSide, double * pdAngle, IUnknown * KeyPointOrTangentFace, enum TGPart::KeyPointExtentConstants * KeyPointFlags, IUnknown * pFromSurface, IUnknown * pToSurface );
__declspec(implementation_key(4129)) TGFramework::ApplicationPtr AssemblyDrivenPartFeaturesRevolvedCutout::GetApplication ( );
__declspec(implementation_key(4130)) IDispatchPtr AssemblyDrivenPartFeaturesRevolvedCutout::GetParent ( );
__declspec(implementation_key(4131)) double AssemblyDrivenPartFeaturesRevolvedCutout::GetAngle ( );
__declspec(implementation_key(4132)) HRESULT AssemblyDrivenPartFeaturesRevolvedCutout::SetAngle ( double nAngle );
__declspec(implementation_key(4133)) IUnknownPtr AssemblyDrivenPartFeaturesRevolvedCutout::GetReferenceAxis ( );
__declspec(implementation_key(4134)) HRESULT AssemblyDrivenPartFeaturesRevolvedCutout::SetReferenceAxis ( IUnknown * ReferenceAxis );
__declspec(implementation_key(4135)) enum TGPart::FeaturePropertyConstants AssemblyDrivenPartFeaturesRevolvedCutout::GetExtentSide ( );
__declspec(implementation_key(4136)) HRESULT AssemblyDrivenPartFeaturesRevolvedCutout::SetExtentSide ( enum TGPart::FeaturePropertyConstants ExtentSide );
__declspec(implementation_key(4137)) enum TGPart::FeaturePropertyConstants AssemblyDrivenPartFeaturesRevolvedCutout::GetExtentType ( );
__declspec(implementation_key(4138)) HRESULT AssemblyDrivenPartFeaturesRevolvedCutout::SetExtentType ( enum TGPart::FeaturePropertyConstants ExtentType );
__declspec(implementation_key(4139)) enum TGPart::FeaturePropertyConstants AssemblyDrivenPartFeaturesRevolvedCutout::GetProfileSide ( );
__declspec(implementation_key(4140)) HRESULT AssemblyDrivenPartFeaturesRevolvedCutout::SetProfileSide ( enum TGPart::FeaturePropertyConstants profileSide );
__declspec(implementation_key(4141)) HRESULT AssemblyDrivenPartFeaturesRevolvedCutout::GetProfiles ( long * NumProfiles, SAFEARRAY * * ppProfiles );
__declspec(implementation_key(4142)) HRESULT AssemblyDrivenPartFeaturesRevolvedCutout::SetProfiles ( long NumProfiles, SAFEARRAY * pProfiles );
__declspec(implementation_key(4143)) HRESULT AssemblyDrivenPartFeaturesRevolvedCutout::SetScopeParts ( long NumScopeParts, SAFEARRAY * pScopeParts );
__declspec(implementation_key(4144)) HRESULT AssemblyDrivenPartFeaturesRevolvedCutout::GetScopeParts ( long * NumScopeParts, SAFEARRAY * * pScopeParts );
__declspec(implementation_key(4145)) _bstr_t AssemblyDrivenPartFeaturesRevolvedCutout::GetName ( );
__declspec(implementation_key(4146)) void AssemblyDrivenPartFeaturesRevolvedCutout::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(4147)) IDispatchPtr AssemblyDrivenPartFeaturesRevolvedCutout::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(4148)) IDispatchPtr AssemblyDrivenPartFeaturesRevolvedCutout::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(4149)) IDispatchPtr AssemblyDrivenPartFeaturesRevolvedCutout::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(4150)) HRESULT AssemblyDrivenPartFeaturesRevolvedCutout::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 );
__declspec(implementation_key(4151)) VARIANT_BOOL AssemblyDrivenPartFeaturesRevolvedCutout::GetSuppress ( );
__declspec(implementation_key(4152)) void AssemblyDrivenPartFeaturesRevolvedCutout::PutSuppress ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4153)) HRESULT AssemblyDrivenPartFeaturesRevolvedCutout::Delete ( );
__declspec(implementation_key(4154)) HRESULT AssemblyDrivenPartFeaturesRevolvedCutout::RollToFeature ( );
__declspec(implementation_key(4155)) HRESULT AssemblyDrivenPartFeaturesRevolvedCutout::GetPartFeatures ( long * NumFeatures, SAFEARRAY * * ppFeatures );
__declspec(implementation_key(4156)) enum TGPart::FeatureStatusConstants AssemblyDrivenPartFeaturesRevolvedCutout::GetStatus ( VARIANT * Description );
__declspec(implementation_key(4157)) TGFramework::ApplicationPtr _IAssemblyDrivenPartFeaturesRevolvedCutoutsAuto::GetApplication ( );
__declspec(implementation_key(4158)) IDispatchPtr _IAssemblyDrivenPartFeaturesRevolvedCutoutsAuto::GetParent ( );
__declspec(implementation_key(4159)) AssemblyDrivenPartFeaturesRevolvedCutoutPtr _IAssemblyDrivenPartFeaturesRevolvedCutoutsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(4160)) IUnknownPtr _IAssemblyDrivenPartFeaturesRevolvedCutoutsAuto::Get_NewEnum ( );
__declspec(implementation_key(4161)) long _IAssemblyDrivenPartFeaturesRevolvedCutoutsAuto::GetCount ( );
__declspec(implementation_key(4162)) AssemblyDrivenPartFeaturesRevolvedCutoutPtr _IAssemblyDrivenPartFeaturesRevolvedCutoutsAuto::Add ( long nNumScopeParts, SAFEARRAY * * pScopeParts, long nNumProfiles, SAFEARRAY * * pProfiles, IUnknown * pRefAxis, enum TGPart::FeaturePropertyConstants ExtentType, enum TGPart::FeaturePropertyConstants ExtentSide, enum TGPart::FeaturePropertyConstants profileSide, double * pdAngle, IUnknown * KeyPointOrTangentFace, enum TGPart::KeyPointExtentConstants * KeyPointFlags, IUnknown * pFromSurface, IUnknown * pToSurface );
__declspec(implementation_key(4163)) TGFramework::ApplicationPtr _IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::GetApplication ( );
__declspec(implementation_key(4164)) IDispatchPtr _IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::GetParent ( );
__declspec(implementation_key(4165)) double _IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::GetAngle ( );
__declspec(implementation_key(4166)) HRESULT _IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::SetAngle ( double nAngle );
__declspec(implementation_key(4167)) IUnknownPtr _IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::GetReferenceAxis ( );
__declspec(implementation_key(4168)) HRESULT _IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::SetReferenceAxis ( IUnknown * ReferenceAxis );
__declspec(implementation_key(4169)) enum TGPart::FeaturePropertyConstants _IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::GetExtentSide ( );
__declspec(implementation_key(4170)) HRESULT _IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::SetExtentSide ( enum TGPart::FeaturePropertyConstants ExtentSide );
__declspec(implementation_key(4171)) enum TGPart::FeaturePropertyConstants _IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::GetExtentType ( );
__declspec(implementation_key(4172)) HRESULT _IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::SetExtentType ( enum TGPart::FeaturePropertyConstants ExtentType );
__declspec(implementation_key(4173)) enum TGPart::FeaturePropertyConstants _IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::GetProfileSide ( );
__declspec(implementation_key(4174)) HRESULT _IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::SetProfileSide ( enum TGPart::FeaturePropertyConstants profileSide );
__declspec(implementation_key(4175)) HRESULT _IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::GetProfiles ( long * NumProfiles, SAFEARRAY * * ppProfiles );
__declspec(implementation_key(4176)) HRESULT _IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::SetProfiles ( long NumProfiles, SAFEARRAY * pProfiles );
__declspec(implementation_key(4177)) HRESULT _IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::SetScopeParts ( long NumScopeParts, SAFEARRAY * pScopeParts );
__declspec(implementation_key(4178)) HRESULT _IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::GetScopeParts ( long * NumScopeParts, SAFEARRAY * * pScopeParts );
__declspec(implementation_key(4179)) _bstr_t _IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::GetName ( );
__declspec(implementation_key(4180)) void _IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::PutName ( _bstr_t featureName );
__declspec(implementation_key(4181)) IDispatchPtr _IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(4182)) IDispatchPtr _IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(4183)) IDispatchPtr _IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(4184)) HRESULT _IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 );
__declspec(implementation_key(4185)) VARIANT_BOOL _IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::GetSuppress ( );
__declspec(implementation_key(4186)) void _IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::PutSuppress ( VARIANT_BOOL Suppress );
__declspec(implementation_key(4187)) HRESULT _IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::Delete ( );
__declspec(implementation_key(4188)) HRESULT _IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::RollToFeature ( );
__declspec(implementation_key(4189)) HRESULT _IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::GetPartFeatures ( long * NumFeatures, SAFEARRAY * * ppFeatures );
__declspec(implementation_key(4190)) enum TGPart::FeatureStatusConstants _IAssemblyDrivenPartFeaturesRevolvedCutoutAuto::GetStatus ( VARIANT * Description );
__declspec(implementation_key(4191)) TGFramework::ApplicationPtr AssemblyDrivenPartFeaturesHoles::GetApplication ( );
__declspec(implementation_key(4192)) IDispatchPtr AssemblyDrivenPartFeaturesHoles::GetParent ( );
__declspec(implementation_key(4193)) AssemblyDrivenPartFeaturesHolePtr AssemblyDrivenPartFeaturesHoles::Item ( const _variant_t & Index );
__declspec(implementation_key(4194)) long AssemblyDrivenPartFeaturesHoles::GetCount ( );
__declspec(implementation_key(4195)) AssemblyDrivenPartFeaturesHolePtr AssemblyDrivenPartFeaturesHoles::Add ( unsigned long nNumScopeParts, SAFEARRAY * * pScopeParts, unsigned long nNumProfiles, SAFEARRAY * * pProfiles, enum TGPart::FeaturePropertyConstants * pExtentSide, IUnknown * pHoledata, enum TGPart::FeaturePropertyConstants ExtentType, double * pHoleDepth, IUnknown * pFromSurfOrPlane, IUnknown * pToSurfOrPlane, IUnknown * pKeyPoint, enum TGPart::KeyPointExtentConstants * pKeyPointFlags );
__declspec(implementation_key(4196)) TGFramework::ApplicationPtr AssemblyDrivenPartFeaturesHole::GetApplication ( );
__declspec(implementation_key(4197)) IDispatchPtr AssemblyDrivenPartFeaturesHole::GetParent ( );
__declspec(implementation_key(4198)) double AssemblyDrivenPartFeaturesHole::GetDepth ( );
__declspec(implementation_key(4199)) HRESULT AssemblyDrivenPartFeaturesHole::SetDepth ( double nDepth );
__declspec(implementation_key(4200)) enum TGPart::FeaturePropertyConstants AssemblyDrivenPartFeaturesHole::GetExtentSide ( );
__declspec(implementation_key(4201)) HRESULT AssemblyDrivenPartFeaturesHole::SetExtentSide ( enum TGPart::FeaturePropertyConstants ExtentSide );
__declspec(implementation_key(4202)) enum TGPart::FeaturePropertyConstants AssemblyDrivenPartFeaturesHole::GetExtentType ( );
__declspec(implementation_key(4203)) HRESULT AssemblyDrivenPartFeaturesHole::SetExtentType ( enum TGPart::FeaturePropertyConstants ExtentType );
__declspec(implementation_key(4204)) IUnknownPtr AssemblyDrivenPartFeaturesHole::GetHoleData ( );
__declspec(implementation_key(4205)) HRESULT AssemblyDrivenPartFeaturesHole::SetHoleData ( IUnknown * Holedata );
__declspec(implementation_key(4206)) HRESULT AssemblyDrivenPartFeaturesHole::GetProfiles ( long * NumProfiles, SAFEARRAY * * ppProfiles );
__declspec(implementation_key(4207)) HRESULT AssemblyDrivenPartFeaturesHole::SetProfiles ( long NumProfiles, SAFEARRAY * pProfiles );
__declspec(implementation_key(4208)) HRESULT AssemblyDrivenPartFeaturesHole::SetFromPlane ( IUnknown * FromPlane );
__declspec(implementation_key(4209)) IUnknownPtr AssemblyDrivenPartFeaturesHole::GetFromPlane ( );
__declspec(implementation_key(4210)) HRESULT AssemblyDrivenPartFeaturesHole::SetToPlane ( IUnknown * ToPlane );
__declspec(implementation_key(4211)) IUnknownPtr AssemblyDrivenPartFeaturesHole::GetToPlane ( );
__declspec(implementation_key(4212)) HRESULT AssemblyDrivenPartFeaturesHole::SetScopeParts ( long NumScopeParts, SAFEARRAY * pScopeParts );
__declspec(implementation_key(4213)) HRESULT AssemblyDrivenPartFeaturesHole::GetScopeParts ( long * NumScopeParts, SAFEARRAY * * pScopeParts );
__declspec(implementation_key(4214)) _bstr_t AssemblyDrivenPartFeaturesHole::GetName ( );
__declspec(implementation_key(4215)) void AssemblyDrivenPartFeaturesHole::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(4216)) IDispatchPtr AssemblyDrivenPartFeaturesHole::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(4217)) IDispatchPtr AssemblyDrivenPartFeaturesHole::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(4218)) IDispatchPtr AssemblyDrivenPartFeaturesHole::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(4219)) HRESULT AssemblyDrivenPartFeaturesHole::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 );
__declspec(implementation_key(4220)) VARIANT_BOOL AssemblyDrivenPartFeaturesHole::GetSuppress ( );
__declspec(implementation_key(4221)) void AssemblyDrivenPartFeaturesHole::PutSuppress ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4222)) HRESULT AssemblyDrivenPartFeaturesHole::Delete ( );
__declspec(implementation_key(4223)) HRESULT AssemblyDrivenPartFeaturesHole::RollToFeature ( );
__declspec(implementation_key(4224)) HRESULT AssemblyDrivenPartFeaturesHole::GetPartFeatures ( long * NumFeatures, SAFEARRAY * * ppFeatures );
__declspec(implementation_key(4225)) enum TGPart::FeatureStatusConstants AssemblyDrivenPartFeaturesHole::GetStatus ( VARIANT * Description );
__declspec(implementation_key(4226)) TGFramework::ApplicationPtr _IAssemblyDrivenPartFeaturesHolesAuto::GetApplication ( );
__declspec(implementation_key(4227)) IDispatchPtr _IAssemblyDrivenPartFeaturesHolesAuto::GetParent ( );
__declspec(implementation_key(4228)) AssemblyDrivenPartFeaturesHolePtr _IAssemblyDrivenPartFeaturesHolesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(4229)) IUnknownPtr _IAssemblyDrivenPartFeaturesHolesAuto::Get_NewEnum ( );
__declspec(implementation_key(4230)) long _IAssemblyDrivenPartFeaturesHolesAuto::GetCount ( );
__declspec(implementation_key(4231)) AssemblyDrivenPartFeaturesHolePtr _IAssemblyDrivenPartFeaturesHolesAuto::Add ( unsigned long nNumScopeParts, SAFEARRAY * * pScopeParts, unsigned long nNumProfiles, SAFEARRAY * * pProfiles, enum TGPart::FeaturePropertyConstants * pExtentSide, IUnknown * pHoledata, enum TGPart::FeaturePropertyConstants ExtentType, double * pHoleDepth, IUnknown * pFromSurfOrPlane, IUnknown * pToSurfOrPlane, IUnknown * pKeyPoint, enum TGPart::KeyPointExtentConstants * pKeyPointFlags );
__declspec(implementation_key(4232)) TGFramework::ApplicationPtr _IAssemblyDrivenPartFeaturesHoleAuto::GetApplication ( );
__declspec(implementation_key(4233)) IDispatchPtr _IAssemblyDrivenPartFeaturesHoleAuto::GetParent ( );
__declspec(implementation_key(4234)) double _IAssemblyDrivenPartFeaturesHoleAuto::GetDepth ( );
__declspec(implementation_key(4235)) HRESULT _IAssemblyDrivenPartFeaturesHoleAuto::SetDepth ( double nDepth );
__declspec(implementation_key(4236)) enum TGPart::FeaturePropertyConstants _IAssemblyDrivenPartFeaturesHoleAuto::GetExtentSide ( );
__declspec(implementation_key(4237)) HRESULT _IAssemblyDrivenPartFeaturesHoleAuto::SetExtentSide ( enum TGPart::FeaturePropertyConstants ExtentSide );
__declspec(implementation_key(4238)) enum TGPart::FeaturePropertyConstants _IAssemblyDrivenPartFeaturesHoleAuto::GetExtentType ( );
__declspec(implementation_key(4239)) HRESULT _IAssemblyDrivenPartFeaturesHoleAuto::SetExtentType ( enum TGPart::FeaturePropertyConstants ExtentType );
__declspec(implementation_key(4240)) IUnknownPtr _IAssemblyDrivenPartFeaturesHoleAuto::GetHoleData ( );
__declspec(implementation_key(4241)) HRESULT _IAssemblyDrivenPartFeaturesHoleAuto::SetHoleData ( IUnknown * Holedata );
__declspec(implementation_key(4242)) HRESULT _IAssemblyDrivenPartFeaturesHoleAuto::GetProfiles ( long * NumProfiles, SAFEARRAY * * ppProfiles );
__declspec(implementation_key(4243)) HRESULT _IAssemblyDrivenPartFeaturesHoleAuto::SetProfiles ( long NumProfiles, SAFEARRAY * pProfiles );
__declspec(implementation_key(4244)) HRESULT _IAssemblyDrivenPartFeaturesHoleAuto::SetFromPlane ( IUnknown * FromPlane );
__declspec(implementation_key(4245)) IUnknownPtr _IAssemblyDrivenPartFeaturesHoleAuto::GetFromPlane ( );
__declspec(implementation_key(4246)) HRESULT _IAssemblyDrivenPartFeaturesHoleAuto::SetToPlane ( IUnknown * ToPlane );
__declspec(implementation_key(4247)) IUnknownPtr _IAssemblyDrivenPartFeaturesHoleAuto::GetToPlane ( );
__declspec(implementation_key(4248)) HRESULT _IAssemblyDrivenPartFeaturesHoleAuto::SetScopeParts ( long NumScopeParts, SAFEARRAY * pScopeParts );
__declspec(implementation_key(4249)) HRESULT _IAssemblyDrivenPartFeaturesHoleAuto::GetScopeParts ( long * NumScopeParts, SAFEARRAY * * pScopeParts );
__declspec(implementation_key(4250)) _bstr_t _IAssemblyDrivenPartFeaturesHoleAuto::GetName ( );
__declspec(implementation_key(4251)) void _IAssemblyDrivenPartFeaturesHoleAuto::PutName ( _bstr_t featureName );
__declspec(implementation_key(4252)) IDispatchPtr _IAssemblyDrivenPartFeaturesHoleAuto::GetEdges ( enum TGGeometry::FeatureTopologyQueryTypeConstants EdgeType );
__declspec(implementation_key(4253)) IDispatchPtr _IAssemblyDrivenPartFeaturesHoleAuto::GetFaces ( enum TGGeometry::FeatureTopologyQueryTypeConstants FaceType );
__declspec(implementation_key(4254)) IDispatchPtr _IAssemblyDrivenPartFeaturesHoleAuto::GetFacesByRay ( double Xorigin, double Yorigin, double Zorigin, double Xdir, double Ydir, double Zdir );
__declspec(implementation_key(4255)) HRESULT _IAssemblyDrivenPartFeaturesHoleAuto::Range ( double * X1, double * Y1, double * Z1, double * X2, double * Y2, double * Z2 );
__declspec(implementation_key(4256)) VARIANT_BOOL _IAssemblyDrivenPartFeaturesHoleAuto::GetSuppress ( );
__declspec(implementation_key(4257)) void _IAssemblyDrivenPartFeaturesHoleAuto::PutSuppress ( VARIANT_BOOL Suppress );
__declspec(implementation_key(4258)) HRESULT _IAssemblyDrivenPartFeaturesHoleAuto::Delete ( );
__declspec(implementation_key(4259)) HRESULT _IAssemblyDrivenPartFeaturesHoleAuto::RollToFeature ( );
__declspec(implementation_key(4260)) HRESULT _IAssemblyDrivenPartFeaturesHoleAuto::GetPartFeatures ( long * NumFeatures, SAFEARRAY * * ppFeatures );
__declspec(implementation_key(4261)) enum TGPart::FeatureStatusConstants _IAssemblyDrivenPartFeaturesHoleAuto::GetStatus ( VARIANT * Description );
__declspec(implementation_key(4262)) TGFramework::ApplicationPtr AssemblyDrivenPartFeaturesTrimTubes::GetApplication ( );
__declspec(implementation_key(4263)) IDispatchPtr AssemblyDrivenPartFeaturesTrimTubes::GetParent ( );
__declspec(implementation_key(4264)) AssemblyDrivenPartFeaturesTrimTubePtr AssemblyDrivenPartFeaturesTrimTubes::Item ( const _variant_t & Index );
__declspec(implementation_key(4265)) long AssemblyDrivenPartFeaturesTrimTubes::GetCount ( );
__declspec(implementation_key(4266)) AssemblyDrivenPartFeaturesTrimTubePtr AssemblyDrivenPartFeaturesTrimTubes::Add ( IDispatch * pPrimaryTube, unsigned long ulNumSecondaryTubes, SAFEARRAY * * pSecondaryTubes );
__declspec(implementation_key(4267)) TGFramework::ApplicationPtr _IAssemblyDrivenPartFeaturesAuto::GetApplication ( );
__declspec(implementation_key(4268)) IDispatchPtr _IAssemblyDrivenPartFeaturesAuto::GetParent ( );
__declspec(implementation_key(4269)) AssemblyDrivenPartFeaturesExtrudedCutoutsPtr _IAssemblyDrivenPartFeaturesAuto::GetAssemblyDrivenPartFeaturesExtrudedCutouts ( );
__declspec(implementation_key(4270)) AssemblyDrivenPartFeaturesRevolvedCutoutsPtr _IAssemblyDrivenPartFeaturesAuto::GetAssemblyDrivenPartFeaturesRevolvedCutouts ( );
__declspec(implementation_key(4271)) AssemblyDrivenPartFeaturesHolesPtr _IAssemblyDrivenPartFeaturesAuto::GetAssemblyDrivenPartFeaturesHoles ( );
__declspec(implementation_key(4272)) AssemblyDrivenPartFeaturesTrimTubesPtr _IAssemblyDrivenPartFeaturesAuto::GetAssemblyDrivenPartFeaturesTrimTubes ( );
__declspec(implementation_key(4273)) TGFramework::ApplicationPtr AssemblyDrivenPartFeaturesTrimTube::GetApplication ( );
__declspec(implementation_key(4274)) IDispatchPtr AssemblyDrivenPartFeaturesTrimTube::GetParent ( );
__declspec(implementation_key(4275)) HRESULT AssemblyDrivenPartFeaturesTrimTube::SetPrimaryTube ( IDispatch * pPrimaryTube );
__declspec(implementation_key(4276)) IDispatchPtr AssemblyDrivenPartFeaturesTrimTube::GetPrimaryTube ( );
__declspec(implementation_key(4277)) HRESULT AssemblyDrivenPartFeaturesTrimTube::SetSecondaryTubes ( long NumSecondaryTubes, SAFEARRAY * pSecondaryTubes );
__declspec(implementation_key(4278)) HRESULT AssemblyDrivenPartFeaturesTrimTube::GetSecondaryTubes ( long * NumSecondaryTubes, SAFEARRAY * * pSecondaryTubes );
__declspec(implementation_key(4279)) _bstr_t AssemblyDrivenPartFeaturesTrimTube::GetName ( );
__declspec(implementation_key(4280)) void AssemblyDrivenPartFeaturesTrimTube::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(4281)) VARIANT_BOOL AssemblyDrivenPartFeaturesTrimTube::GetSuppress ( );
__declspec(implementation_key(4282)) void AssemblyDrivenPartFeaturesTrimTube::PutSuppress ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4283)) HRESULT AssemblyDrivenPartFeaturesTrimTube::Delete ( );
__declspec(implementation_key(4284)) HRESULT AssemblyDrivenPartFeaturesTrimTube::RollToFeature ( );
__declspec(implementation_key(4285)) TGFramework::ApplicationPtr _IAssemblyDrivenPartFeaturesTrimTubesAuto::GetApplication ( );
__declspec(implementation_key(4286)) IDispatchPtr _IAssemblyDrivenPartFeaturesTrimTubesAuto::GetParent ( );
__declspec(implementation_key(4287)) AssemblyDrivenPartFeaturesTrimTubePtr _IAssemblyDrivenPartFeaturesTrimTubesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(4288)) IUnknownPtr _IAssemblyDrivenPartFeaturesTrimTubesAuto::Get_NewEnum ( );
__declspec(implementation_key(4289)) long _IAssemblyDrivenPartFeaturesTrimTubesAuto::GetCount ( );
__declspec(implementation_key(4290)) AssemblyDrivenPartFeaturesTrimTubePtr _IAssemblyDrivenPartFeaturesTrimTubesAuto::Add ( IDispatch * pPrimaryTube, unsigned long ulNumSecondaryTubes, SAFEARRAY * * pSecondaryTubes );
__declspec(implementation_key(4291)) TGFramework::ApplicationPtr _IAssemblyDrivenPartFeaturesTrimTubeAuto::GetApplication ( );
__declspec(implementation_key(4292)) IDispatchPtr _IAssemblyDrivenPartFeaturesTrimTubeAuto::GetParent ( );
__declspec(implementation_key(4293)) HRESULT _IAssemblyDrivenPartFeaturesTrimTubeAuto::SetPrimaryTube ( IDispatch * pPrimaryTube );
__declspec(implementation_key(4294)) IDispatchPtr _IAssemblyDrivenPartFeaturesTrimTubeAuto::GetPrimaryTube ( );
__declspec(implementation_key(4295)) HRESULT _IAssemblyDrivenPartFeaturesTrimTubeAuto::SetSecondaryTubes ( long NumSecondaryTubes, SAFEARRAY * pSecondaryTubes );
__declspec(implementation_key(4296)) HRESULT _IAssemblyDrivenPartFeaturesTrimTubeAuto::GetSecondaryTubes ( long * NumSecondaryTubes, SAFEARRAY * * pSecondaryTubes );
__declspec(implementation_key(4297)) _bstr_t _IAssemblyDrivenPartFeaturesTrimTubeAuto::GetName ( );
__declspec(implementation_key(4298)) void _IAssemblyDrivenPartFeaturesTrimTubeAuto::PutName ( _bstr_t featureName );
__declspec(implementation_key(4299)) VARIANT_BOOL _IAssemblyDrivenPartFeaturesTrimTubeAuto::GetSuppress ( );
__declspec(implementation_key(4300)) void _IAssemblyDrivenPartFeaturesTrimTubeAuto::PutSuppress ( VARIANT_BOOL Suppress );
__declspec(implementation_key(4301)) HRESULT _IAssemblyDrivenPartFeaturesTrimTubeAuto::Delete ( );
__declspec(implementation_key(4302)) HRESULT _IAssemblyDrivenPartFeaturesTrimTubeAuto::RollToFeature ( );
__declspec(implementation_key(4303)) TGFramework::ApplicationPtr Pipes::GetApplication ( );
__declspec(implementation_key(4304)) IDispatchPtr Pipes::GetParent ( );
__declspec(implementation_key(4305)) PipePtr Pipes::Item ( const _variant_t & Index );
__declspec(implementation_key(4306)) long Pipes::GetCount ( );
__declspec(implementation_key(4307)) PipePtr Pipes::Add ( double dPipeDiameter, long NumPaths, SAFEARRAY * * Path, VARIANT_BOOL bAllowGradient, double dGradientValue, _bstr_t PipeFileName, _bstr_t ElbowFileName, _bstr_t TeeFileName, _bstr_t CrossFileName, _bstr_t CouplingFileName );
__declspec(implementation_key(4308)) TGFramework::ApplicationPtr Pipe::GetApplication ( );
__declspec(implementation_key(4309)) IDispatchPtr Pipe::GetParent ( );
__declspec(implementation_key(4310)) void Pipe::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(4311)) _bstr_t Pipe::GetName ( );
__declspec(implementation_key(4312)) void Pipe::PutVisible ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4313)) VARIANT_BOOL Pipe::GetVisible ( );
__declspec(implementation_key(4314)) HRESULT Pipe::GetPipeSegments ( long * NumPipeSegments, SAFEARRAY * * PipeSegmentOccurrences );
__declspec(implementation_key(4315)) HRESULT Pipe::GetPipeFittings ( long * NumPipeFittings, SAFEARRAY * * PipeFittingOccurrences, SAFEARRAY * * FittingTypes );
__declspec(implementation_key(4316)) HRESULT Pipe::GetPipeLengths ( long * NumPipeSegments, SAFEARRAY * * PipeSegmentOccurrences, SAFEARRAY * * LineSegments, SAFEARRAY * * PipeSegmentLength );
__declspec(implementation_key(4317)) _bstr_t Pipe::GetPipeSegmentStandard ( );
__declspec(implementation_key(4318)) void Pipe::PutPipeSegmentStandard ( _bstr_t _arg1 );
__declspec(implementation_key(4319)) _bstr_t Pipe::GetPipeFittingStandard ( );
__declspec(implementation_key(4320)) void Pipe::PutPipeFittingStandard ( _bstr_t _arg1 );
__declspec(implementation_key(4321)) enum PipeFittingEndTreatmentConstants Pipe::GetDefaultEndTreatment ( );
__declspec(implementation_key(4322)) void Pipe::PutDefaultEndTreatment ( enum PipeFittingEndTreatmentConstants _arg1 );
__declspec(implementation_key(4323)) HRESULT Pipe::Delete ( );
__declspec(implementation_key(4324)) HRESULT Pipe::RotateFittings ( SAFEARRAY * PipeFittingOccurrences, double dValue );
__declspec(implementation_key(4325)) TGPart::SuppressVariablePtr Pipe::GetSuppressionVariable ( );
__declspec(implementation_key(4326)) TGPart::SuppressVariablePtr Pipe::AddSuppressionVariable ( );
__declspec(implementation_key(4327)) HRESULT Pipe::DeleteSuppressionVariable ( );
__declspec(implementation_key(4328)) VARIANT_BOOL Pipe::HasSuppressionVariable ( );
__declspec(implementation_key(4329)) TGFramework::ApplicationPtr _IPipesAuto::GetApplication ( );
__declspec(implementation_key(4330)) IDispatchPtr _IPipesAuto::GetParent ( );
__declspec(implementation_key(4331)) PipePtr _IPipesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(4332)) long _IPipesAuto::GetCount ( );
__declspec(implementation_key(4333)) IUnknownPtr _IPipesAuto::Get_NewEnum ( );
__declspec(implementation_key(4334)) PipePtr _IPipesAuto::Add ( double dPipeDiameter, long NumPaths, SAFEARRAY * * Path, VARIANT_BOOL bAllowGradient, double dGradientValue, _bstr_t PipeFileName, _bstr_t ElbowFileName, _bstr_t TeeFileName, _bstr_t CrossFileName, _bstr_t CouplingFileName );
__declspec(implementation_key(4335)) TGFramework::ApplicationPtr _IPipeAuto::GetApplication ( );
__declspec(implementation_key(4336)) IDispatchPtr _IPipeAuto::GetParent ( );
__declspec(implementation_key(4337)) void _IPipeAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(4338)) _bstr_t _IPipeAuto::GetName ( );
__declspec(implementation_key(4339)) void _IPipeAuto::PutVisible ( VARIANT_BOOL bVisible );
__declspec(implementation_key(4340)) VARIANT_BOOL _IPipeAuto::GetVisible ( );
__declspec(implementation_key(4341)) HRESULT _IPipeAuto::GetPipeSegments ( long * NumPipeSegments, SAFEARRAY * * PipeSegmentOccurrences );
__declspec(implementation_key(4342)) HRESULT _IPipeAuto::GetPipeFittings ( long * NumPipeFittings, SAFEARRAY * * PipeFittingOccurrences, SAFEARRAY * * FittingTypes );
__declspec(implementation_key(4343)) HRESULT _IPipeAuto::GetPipeLengths ( long * NumPipeSegments, SAFEARRAY * * PipeSegmentOccurrences, SAFEARRAY * * LineSegments, SAFEARRAY * * PipeSegmentLength );
__declspec(implementation_key(4344)) _bstr_t _IPipeAuto::GetPipeSegmentStandard ( );
__declspec(implementation_key(4345)) void _IPipeAuto::PutPipeSegmentStandard ( _bstr_t PipeSegmentStandard );
__declspec(implementation_key(4346)) _bstr_t _IPipeAuto::GetPipeFittingStandard ( );
__declspec(implementation_key(4347)) void _IPipeAuto::PutPipeFittingStandard ( _bstr_t PipeFittingStandard );
__declspec(implementation_key(4348)) enum PipeFittingEndTreatmentConstants _IPipeAuto::GetDefaultEndTreatment ( );
__declspec(implementation_key(4349)) void _IPipeAuto::PutDefaultEndTreatment ( enum PipeFittingEndTreatmentConstants DefaultEndTreatment );
__declspec(implementation_key(4350)) HRESULT _IPipeAuto::Delete ( );
__declspec(implementation_key(4351)) HRESULT _IPipeAuto::RotateFittings ( SAFEARRAY * PipeFittingOccurrences, double dValue );
__declspec(implementation_key(4352)) TGPart::SuppressVariablePtr _IPipeAuto::GetSuppressionVariable ( );
__declspec(implementation_key(4353)) TGPart::SuppressVariablePtr _IPipeAuto::AddSuppressionVariable ( );
__declspec(implementation_key(4354)) HRESULT _IPipeAuto::DeleteSuppressionVariable ( );
__declspec(implementation_key(4355)) VARIANT_BOOL _IPipeAuto::HasSuppressionVariable ( );
__declspec(implementation_key(4356)) ComponentLayoutPtr ComponentLayouts::Item ( const _variant_t & Index );
__declspec(implementation_key(4357)) TGFramework::ApplicationPtr ComponentLayouts::GetApplication ( );
__declspec(implementation_key(4358)) IDispatchPtr ComponentLayouts::GetParent ( );
__declspec(implementation_key(4359)) long ComponentLayouts::GetCount ( );
__declspec(implementation_key(4360)) ComponentLayoutPtr ComponentLayouts::Add ( struct AsmRefPlane * AsmRefPlane, const _variant_t & ReturnExisting, VARIANT * Status );
__declspec(implementation_key(4361)) TGFramework::ApplicationPtr ComponentLayout::GetApplication ( );
__declspec(implementation_key(4362)) HRESULT ComponentLayout::Delete ( );
__declspec(implementation_key(4363)) IDispatchPtr ComponentLayout::GetParent ( );
__declspec(implementation_key(4364)) IDispatchPtr ComponentLayout::GetProfile ( );
__declspec(implementation_key(4365)) _bstr_t ComponentLayout::GetName ( );
__declspec(implementation_key(4366)) void ComponentLayout::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(4367)) AsmRefPlanePtr ComponentLayout::GetRefPlane ( );
__declspec(implementation_key(4368)) enum TGFramework::ObjectType ComponentLayout::GetType ( );
__declspec(implementation_key(4369)) IDispatchPtr ComponentLayout::GetAttributeSets ( );
__declspec(implementation_key(4370)) VARIANT_BOOL ComponentLayout::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(4371)) ComponentLayoutPtr _IComponentLayoutsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(4372)) IUnknownPtr _IComponentLayoutsAuto::Get_NewEnum ( );
__declspec(implementation_key(4373)) TGFramework::ApplicationPtr _IComponentLayoutsAuto::GetApplication ( );
__declspec(implementation_key(4374)) IDispatchPtr _IComponentLayoutsAuto::GetParent ( );
__declspec(implementation_key(4375)) long _IComponentLayoutsAuto::GetCount ( );
__declspec(implementation_key(4376)) ComponentLayoutPtr _IComponentLayoutsAuto::Add ( struct AsmRefPlane * AsmRefPlane, const _variant_t & ReturnExisting, VARIANT * Status );
__declspec(implementation_key(4377)) TGFramework::ApplicationPtr _IComponentLayoutAuto::GetApplication ( );
__declspec(implementation_key(4378)) HRESULT _IComponentLayoutAuto::Delete ( );
__declspec(implementation_key(4379)) IDispatchPtr _IComponentLayoutAuto::GetParent ( );
__declspec(implementation_key(4380)) IDispatchPtr _IComponentLayoutAuto::GetProfile ( );
__declspec(implementation_key(4381)) _bstr_t _IComponentLayoutAuto::GetName ( );
__declspec(implementation_key(4382)) void _IComponentLayoutAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(4383)) AsmRefPlanePtr _IComponentLayoutAuto::GetRefPlane ( );
__declspec(implementation_key(4384)) enum TGFramework::ObjectType _IComponentLayoutAuto::GetType ( );
__declspec(implementation_key(4385)) IDispatchPtr _IComponentLayoutAuto::GetAttributeSets ( );
__declspec(implementation_key(4386)) VARIANT_BOOL _IComponentLayoutAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(4387)) TGFramework::ApplicationPtr Paths::GetApplication ( );
__declspec(implementation_key(4388)) IDispatchPtr Paths::GetParent ( );
__declspec(implementation_key(4389)) PathPtr Paths::Item ( const _variant_t & Index );
__declspec(implementation_key(4390)) long Paths::GetCount ( );
__declspec(implementation_key(4391)) PathPtr Paths::Add ( long NumPoints, SAFEARRAY * * PointTypeConstants, SAFEARRAY * * EdgeSet, SAFEARRAY * * KeyPointTypeConstants, SAFEARRAY * * Array, enum TGPart::KeypointEndConditionConstants StartpointEndType, const _variant_t & EndpointEndType );
__declspec(implementation_key(4392)) TGFramework::ApplicationPtr Path::GetApplication ( );
__declspec(implementation_key(4393)) IDispatchPtr Path::GetParent ( );
__declspec(implementation_key(4394)) _bstr_t Path::GetName ( );
__declspec(implementation_key(4395)) HRESULT Path::Delete ( );
__declspec(implementation_key(4396)) long Path::GetStatus ( );
__declspec(implementation_key(4397)) HRESULT Path::InsertKeyPoint ( IDispatch * EdgeToInsert, enum TGFramework::KeyPointType KeypointConstant, long KeypointIndexToInsertBefore );
__declspec(implementation_key(4398)) HRESULT Path::InserttCylinderAxis ( IDispatch * CylinderFace, IDispatch * CylinderEdge, long KeypointIndexToInsertBefore );
__declspec(implementation_key(4399)) HRESULT Path::InsertSpacePoint ( double XPos, double YPos, double ZPos, long KeypointIndexToInsertBefore );
__declspec(implementation_key(4400)) IDispatchPtr Path::GetEndParentEdge ( );
__declspec(implementation_key(4401)) enum TGPart::KeypointEndConditionConstants Path::GetEndpointEndCondition ( );
__declspec(implementation_key(4402)) double Path::GetEndpointMagnitude ( );
__declspec(implementation_key(4403)) HRESULT Path::RemovePoint ( long KeypointIndex );
__declspec(implementation_key(4404)) IDispatchPtr Path::GetStartParentEdge ( );
__declspec(implementation_key(4405)) enum TGPart::KeypointEndConditionConstants Path::GetStartpointEndCondition ( );
__declspec(implementation_key(4406)) double Path::GetStartpointMagnitude ( );
__declspec(implementation_key(4407)) HRESULT Path::GetAllPoints ( long * NumPoints, SAFEARRAY * * PointPositions );
__declspec(implementation_key(4408)) HRESULT Path::GetEndPoints ( SAFEARRAY * * EndPointPositions );
__declspec(implementation_key(4409)) HRESULT Path::GetLength ( double * PathLength );
__declspec(implementation_key(4410)) HRESULT Path::SetFixedLength ( double dCurveLength, enum TGPart::SEFixedLengthConstraintDirection FixedLengthConstraintDirection, IDispatch * ConstraintGeometry );
__declspec(implementation_key(4411)) HRESULT Path::GetFixedLength ( double * pdCurveLength, enum TGPart::SEFixedLengthConstraintDirection * pFixedLengthConstraintDirection, IDispatch * * pConstraintGeometry );
__declspec(implementation_key(4412)) HRESULT Path::EditSpacePoint ( long KeypointIndexToEdit, double XPos, double YPos, double ZPos );
__declspec(implementation_key(4413)) HRESULT Path::SplitPath ( double XPos, double YPos, double ZPos, IDispatch * * pNewPath );
__declspec(implementation_key(4414)) TGFramework::ApplicationPtr _IPathsAuto::GetApplication ( );
__declspec(implementation_key(4415)) IDispatchPtr _IPathsAuto::GetParent ( );
__declspec(implementation_key(4416)) PathPtr _IPathsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(4417)) IUnknownPtr _IPathsAuto::Get_NewEnum ( );
__declspec(implementation_key(4418)) long _IPathsAuto::GetCount ( );
__declspec(implementation_key(4419)) PathPtr _IPathsAuto::Add ( long NumPoints, SAFEARRAY * * PointTypeConstants, SAFEARRAY * * EdgeSet, SAFEARRAY * * KeyPointTypeConstants, SAFEARRAY * * Array, enum TGPart::KeypointEndConditionConstants StartpointEndType, const _variant_t & EndpointEndType );
__declspec(implementation_key(4420)) TGFramework::ApplicationPtr _IPathAuto::GetApplication ( );
__declspec(implementation_key(4421)) IDispatchPtr _IPathAuto::GetParent ( );
__declspec(implementation_key(4422)) _bstr_t _IPathAuto::GetName ( );
__declspec(implementation_key(4423)) HRESULT _IPathAuto::Delete ( );
__declspec(implementation_key(4424)) long _IPathAuto::GetStatus ( );
__declspec(implementation_key(4425)) HRESULT _IPathAuto::InsertKeyPoint ( IDispatch * EdgeToInsert, enum TGFramework::KeyPointType KeypointConstant, long KeypointIndexToInsertBefore );
__declspec(implementation_key(4426)) HRESULT _IPathAuto::InserttCylinderAxis ( IDispatch * CylinderFace, IDispatch * CylinderEdge, long KeypointIndexToInsertBefore );
__declspec(implementation_key(4427)) HRESULT _IPathAuto::InsertSpacePoint ( double XPos, double YPos, double ZPos, long KeypointIndexToInsertBefore );
__declspec(implementation_key(4428)) IDispatchPtr _IPathAuto::GetEndParentEdge ( );
__declspec(implementation_key(4429)) enum TGPart::KeypointEndConditionConstants _IPathAuto::GetEndpointEndCondition ( );
__declspec(implementation_key(4430)) double _IPathAuto::GetEndpointMagnitude ( );
__declspec(implementation_key(4431)) HRESULT _IPathAuto::RemovePoint ( long KeypointIndex );
__declspec(implementation_key(4432)) IDispatchPtr _IPathAuto::GetStartParentEdge ( );
__declspec(implementation_key(4433)) enum TGPart::KeypointEndConditionConstants _IPathAuto::GetStartpointEndCondition ( );
__declspec(implementation_key(4434)) double _IPathAuto::GetStartpointMagnitude ( );
__declspec(implementation_key(4435)) HRESULT _IPathAuto::GetAllPoints ( long * NumPoints, SAFEARRAY * * PointPositions );
__declspec(implementation_key(4436)) HRESULT _IPathAuto::GetEndPoints ( SAFEARRAY * * EndPointPositions );
__declspec(implementation_key(4437)) HRESULT _IPathAuto::GetLength ( double * PathLength );
__declspec(implementation_key(4438)) HRESULT _IPathAuto::SetFixedLength ( double dCurveLength, enum TGPart::SEFixedLengthConstraintDirection FixedLengthConstraintDirection, IDispatch * ConstraintGeometry );
__declspec(implementation_key(4439)) HRESULT _IPathAuto::GetFixedLength ( double * pdCurveLength, enum TGPart::SEFixedLengthConstraintDirection * pFixedLengthConstraintDirection, IDispatch * * pConstraintGeometry );
__declspec(implementation_key(4440)) HRESULT _IPathAuto::EditSpacePoint ( long KeypointIndexToEdit, double XPos, double YPos, double ZPos );
__declspec(implementation_key(4441)) HRESULT _IPathAuto::SplitPath ( double XPos, double YPos, double ZPos, IDispatch * * pNewPath );
__declspec(implementation_key(4442)) TGFramework::ApplicationPtr Harnesses::GetApplication ( );
__declspec(implementation_key(4443)) IDispatchPtr Harnesses::GetParent ( );
__declspec(implementation_key(4444)) long Harnesses::GetCount ( );
__declspec(implementation_key(4445)) HarnessPtr Harnesses::Item ( const _variant_t & Index );
__declspec(implementation_key(4446)) HarnessPtr Harnesses::Add ( );
__declspec(implementation_key(4447)) HRESULT Harnesses::CreateFromNetlistImporter ( _bstr_t CompanyName, _bstr_t ComponentFilePath, _bstr_t ConnectionFilePath, const _variant_t & vbSaveHarnessImportOnFailure );
__declspec(implementation_key(4448)) TGFramework::ApplicationPtr Harness::GetApplication ( );
__declspec(implementation_key(4449)) IDispatchPtr Harness::GetParent ( );
__declspec(implementation_key(4450)) WiresPtr Harness::GetWires ( );
__declspec(implementation_key(4451)) CablesPtr Harness::GetCables ( );
__declspec(implementation_key(4452)) BundlesPtr Harness::GetBundles ( );
__declspec(implementation_key(4453)) SplicesPtr Harness::GetSplices ( );
__declspec(implementation_key(4454)) HRESULT Harness::GetTopMostConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray );
__declspec(implementation_key(4455)) HRESULT Harness::SaveAsEcad ( enum HarnessSaveAsEcadStatusConstants * HarnessSaveAsEcadStatus, _bstr_t CompanyName, const _variant_t & ComponentFilePath, const _variant_t & ConnectionFilePath );
__declspec(implementation_key(4456)) HRESULT Harness::CreatePhysicalConductor ( );
__declspec(implementation_key(4457)) HRESULT Harness::DeletePhysicalConductor ( );
__declspec(implementation_key(4458)) HRESULT Harness::SaveAsHarnessTopology ( enum SaveAsHarnessTopologyStatusConstants * SaveAsHarnessTopologyStatus, const _variant_t & HarnessFilePath );
__declspec(implementation_key(4459)) HRESULT Harness::SaveAsHarnessTopologyEx ( enum SaveAsHarnessTopologyStatusConstants * SaveAsHarnessTopologyStatus, const _variant_t & HarnessFilePath, enum SaveAsHarnessFileFormats SaveAsHarnessFileFormat );
__declspec(implementation_key(4460)) TGFramework::ApplicationPtr _IHarnessesAuto::GetApplication ( );
__declspec(implementation_key(4461)) IDispatchPtr _IHarnessesAuto::GetParent ( );
__declspec(implementation_key(4462)) long _IHarnessesAuto::GetCount ( );
__declspec(implementation_key(4463)) IUnknownPtr _IHarnessesAuto::Get_NewEnum ( );
__declspec(implementation_key(4464)) HarnessPtr _IHarnessesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(4465)) HarnessPtr _IHarnessesAuto::Add ( );
__declspec(implementation_key(4466)) HRESULT _IHarnessesAuto::CreateFromNetlistImporter ( _bstr_t CompanyName, _bstr_t ComponentFilePath, _bstr_t ConnectionFilePath, const _variant_t & vbSaveHarnessImportOnFailure );
__declspec(implementation_key(4467)) TGFramework::ApplicationPtr Wires::GetApplication ( );
__declspec(implementation_key(4468)) IDispatchPtr Wires::GetParent ( );
__declspec(implementation_key(4469)) long Wires::GetCount ( );
__declspec(implementation_key(4470)) WirePtr Wires::Item ( const _variant_t & Index );
__declspec(implementation_key(4471)) WirePtr Wires::Add ( long NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray, _bstr_t ConductorDescription );
__declspec(implementation_key(4472)) enum HarnessTypeConstants Wires::GetType ( );
__declspec(implementation_key(4473)) TGFramework::ApplicationPtr Wire::GetApplication ( );
__declspec(implementation_key(4474)) IDispatchPtr Wire::GetParent ( );
__declspec(implementation_key(4475)) IDispatchPtr Wire::GetAttributeSets ( );
__declspec(implementation_key(4476)) VARIANT_BOOL Wire::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(4477)) VARIANT_BOOL Wire::GetVisible ( );
__declspec(implementation_key(4478)) void Wire::PutVisible ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4479)) HRESULT Wire::GetPaths ( long * NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray );
__declspec(implementation_key(4480)) HRESULT Wire::GetAllPaths ( long * NumberOfPaths, SAFEARRAY * * PathArray );
__declspec(implementation_key(4481)) HRESULT Wire::GetOuterConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray );
__declspec(implementation_key(4482)) HRESULT Wire::GetTopMostConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray );
__declspec(implementation_key(4483)) HRESULT Wire::GetEndPoints ( double * dStartX, double * dStartY, double * dStartZ, double * dEndX, double * dEndY, double * dEndZ );
__declspec(implementation_key(4484)) HRESULT Wire::Remove ( long NumberOfConductors, SAFEARRAY * * ConductorArray );
__declspec(implementation_key(4485)) HRESULT Wire::Delete ( );
__declspec(implementation_key(4486)) VARIANT_BOOL Wire::GetUseGlobalAdders ( );
__declspec(implementation_key(4487)) void Wire::PutUseGlobalAdders ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4488)) HRESULT Wire::GetAdders ( double * dSlackAdder, double * dPureAdder, double * dHoleDiameterAdder, double * dBundleDiameterAdder );
__declspec(implementation_key(4489)) HRESULT Wire::SetAdders ( double dSlackAdder, double dPureAdder, double dHoleDiameterAdder, double dBundleDiameterAdder );
__declspec(implementation_key(4490)) double Wire::GetTrueLength ( );
__declspec(implementation_key(4491)) double Wire::GetCutLength ( );
__declspec(implementation_key(4492)) double Wire::GetMass ( );
__declspec(implementation_key(4493)) AssemblyPropertyPtr Wire::GetAssemblyProperty ( );
__declspec(implementation_key(4494)) enum HarnessTypeConstants Wire::GetType ( );
__declspec(implementation_key(4495)) void Wire::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(4496)) _bstr_t Wire::GetName ( );
__declspec(implementation_key(4497)) void Wire::PutColor ( long _arg1 );
__declspec(implementation_key(4498)) long Wire::GetColor ( );
__declspec(implementation_key(4499)) void Wire::PutDescription ( _bstr_t _arg1 );
__declspec(implementation_key(4500)) _bstr_t Wire::GetDescription ( );
__declspec(implementation_key(4501)) void Wire::PutOuterDiameter ( double _arg1 );
__declspec(implementation_key(4502)) double Wire::GetOuterDiameter ( );
__declspec(implementation_key(4503)) void Wire::PutPartNumber ( _bstr_t _arg1 );
__declspec(implementation_key(4504)) _bstr_t Wire::GetPartNumber ( );
__declspec(implementation_key(4505)) void Wire::PutLinearDensity ( double _arg1 );
__declspec(implementation_key(4506)) double Wire::GetLinearDensity ( );
__declspec(implementation_key(4507)) void Wire::PutMinimumBendRadius ( double _arg1 );
__declspec(implementation_key(4508)) double Wire::GetMinimumBendRadius ( );
__declspec(implementation_key(4509)) HRESULT Wire::CreatePhysicalConductor ( );
__declspec(implementation_key(4510)) HRESULT Wire::DeletePhysicalConductor ( );
__declspec(implementation_key(4511)) void Wire::PutDiameter ( double _arg1 );
__declspec(implementation_key(4512)) double Wire::GetDiameter ( );
__declspec(implementation_key(4513)) void Wire::PutGage ( _bstr_t _arg1 );
__declspec(implementation_key(4514)) _bstr_t Wire::GetGage ( );
__declspec(implementation_key(4515)) void Wire::PutMaterialType ( _bstr_t _arg1 );
__declspec(implementation_key(4516)) _bstr_t Wire::GetMaterialType ( );
__declspec(implementation_key(4517)) void Wire::PutMaterial ( _bstr_t _arg1 );
__declspec(implementation_key(4518)) _bstr_t Wire::GetMaterial ( );
__declspec(implementation_key(4519)) void Wire::PutFromTerminalName ( _bstr_t _arg1 );
__declspec(implementation_key(4520)) _bstr_t Wire::GetFromTerminalName ( );
__declspec(implementation_key(4521)) void Wire::PutToTerminalName ( _bstr_t _arg1 );
__declspec(implementation_key(4522)) _bstr_t Wire::GetToTerminalName ( );
__declspec(implementation_key(4523)) void Wire::PutFromComponentName ( _bstr_t _arg1 );
__declspec(implementation_key(4524)) _bstr_t Wire::GetFromComponentName ( );
__declspec(implementation_key(4525)) void Wire::PutToComponentName ( _bstr_t _arg1 );
__declspec(implementation_key(4526)) _bstr_t Wire::GetToComponentName ( );
__declspec(implementation_key(4527)) HRESULT Wire::Edit ( long NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray );
__declspec(implementation_key(4528)) TGFramework::ApplicationPtr _IWiresAuto::GetApplication ( );
__declspec(implementation_key(4529)) IDispatchPtr _IWiresAuto::GetParent ( );
__declspec(implementation_key(4530)) long _IWiresAuto::GetCount ( );
__declspec(implementation_key(4531)) IUnknownPtr _IWiresAuto::Get_NewEnum ( );
__declspec(implementation_key(4532)) WirePtr _IWiresAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(4533)) WirePtr _IWiresAuto::Add ( long NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray, _bstr_t ConductorDescription );
__declspec(implementation_key(4534)) enum HarnessTypeConstants _IWiresAuto::GetType ( );
__declspec(implementation_key(4535)) TGFramework::ApplicationPtr _IWireAuto::GetApplication ( );
__declspec(implementation_key(4536)) IDispatchPtr _IWireAuto::GetParent ( );
__declspec(implementation_key(4537)) IDispatchPtr _IWireAuto::GetAttributeSets ( );
__declspec(implementation_key(4538)) VARIANT_BOOL _IWireAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(4539)) VARIANT_BOOL _IWireAuto::GetVisible ( );
__declspec(implementation_key(4540)) void _IWireAuto::PutVisible ( VARIANT_BOOL Visible );
__declspec(implementation_key(4541)) HRESULT _IWireAuto::GetPaths ( long * NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray );
__declspec(implementation_key(4542)) HRESULT _IWireAuto::GetAllPaths ( long * NumberOfPaths, SAFEARRAY * * PathArray );
__declspec(implementation_key(4543)) HRESULT _IWireAuto::GetOuterConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray );
__declspec(implementation_key(4544)) HRESULT _IWireAuto::GetTopMostConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray );
__declspec(implementation_key(4545)) HRESULT _IWireAuto::GetEndPoints ( double * dStartX, double * dStartY, double * dStartZ, double * dEndX, double * dEndY, double * dEndZ );
__declspec(implementation_key(4546)) HRESULT _IWireAuto::Remove ( long NumberOfConductors, SAFEARRAY * * ConductorArray );
__declspec(implementation_key(4547)) HRESULT _IWireAuto::Delete ( );
__declspec(implementation_key(4548)) VARIANT_BOOL _IWireAuto::GetUseGlobalAdders ( );
__declspec(implementation_key(4549)) void _IWireAuto::PutUseGlobalAdders ( VARIANT_BOOL UseGlobalAdders );
__declspec(implementation_key(4550)) HRESULT _IWireAuto::GetAdders ( double * dSlackAdder, double * dPureAdder, double * dHoleDiameterAdder, double * dBundleDiameterAdder );
__declspec(implementation_key(4551)) HRESULT _IWireAuto::SetAdders ( double dSlackAdder, double dPureAdder, double dHoleDiameterAdder, double dBundleDiameterAdder );
__declspec(implementation_key(4552)) double _IWireAuto::GetTrueLength ( );
__declspec(implementation_key(4553)) double _IWireAuto::GetCutLength ( );
__declspec(implementation_key(4554)) double _IWireAuto::GetMass ( );
__declspec(implementation_key(4555)) AssemblyPropertyPtr _IWireAuto::GetAssemblyProperty ( );
__declspec(implementation_key(4556)) enum HarnessTypeConstants _IWireAuto::GetType ( );
__declspec(implementation_key(4557)) void _IWireAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(4558)) _bstr_t _IWireAuto::GetName ( );
__declspec(implementation_key(4559)) void _IWireAuto::PutColor ( long Color );
__declspec(implementation_key(4560)) long _IWireAuto::GetColor ( );
__declspec(implementation_key(4561)) void _IWireAuto::PutDescription ( _bstr_t Description );
__declspec(implementation_key(4562)) _bstr_t _IWireAuto::GetDescription ( );
__declspec(implementation_key(4563)) void _IWireAuto::PutOuterDiameter ( double OuterDiameter );
__declspec(implementation_key(4564)) double _IWireAuto::GetOuterDiameter ( );
__declspec(implementation_key(4565)) void _IWireAuto::PutPartNumber ( _bstr_t PartNumber );
__declspec(implementation_key(4566)) _bstr_t _IWireAuto::GetPartNumber ( );
__declspec(implementation_key(4567)) void _IWireAuto::PutLinearDensity ( double LinearDensity );
__declspec(implementation_key(4568)) double _IWireAuto::GetLinearDensity ( );
__declspec(implementation_key(4569)) void _IWireAuto::PutMinimumBendRadius ( double MinimumBendRadius );
__declspec(implementation_key(4570)) double _IWireAuto::GetMinimumBendRadius ( );
__declspec(implementation_key(4571)) HRESULT _IWireAuto::CreatePhysicalConductor ( );
__declspec(implementation_key(4572)) HRESULT _IWireAuto::DeletePhysicalConductor ( );
__declspec(implementation_key(4573)) void _IWireAuto::PutDiameter ( double Diameter );
__declspec(implementation_key(4574)) double _IWireAuto::GetDiameter ( );
__declspec(implementation_key(4575)) void _IWireAuto::PutGage ( _bstr_t Gage );
__declspec(implementation_key(4576)) _bstr_t _IWireAuto::GetGage ( );
__declspec(implementation_key(4577)) void _IWireAuto::PutMaterialType ( _bstr_t MaterialType );
__declspec(implementation_key(4578)) _bstr_t _IWireAuto::GetMaterialType ( );
__declspec(implementation_key(4579)) void _IWireAuto::PutMaterial ( _bstr_t Material );
__declspec(implementation_key(4580)) _bstr_t _IWireAuto::GetMaterial ( );
__declspec(implementation_key(4581)) void _IWireAuto::PutFromTerminalName ( _bstr_t Name );
__declspec(implementation_key(4582)) _bstr_t _IWireAuto::GetFromTerminalName ( );
__declspec(implementation_key(4583)) void _IWireAuto::PutToTerminalName ( _bstr_t Name );
__declspec(implementation_key(4584)) _bstr_t _IWireAuto::GetToTerminalName ( );
__declspec(implementation_key(4585)) void _IWireAuto::PutFromComponentName ( _bstr_t Name );
__declspec(implementation_key(4586)) _bstr_t _IWireAuto::GetFromComponentName ( );
__declspec(implementation_key(4587)) void _IWireAuto::PutToComponentName ( _bstr_t Name );
__declspec(implementation_key(4588)) _bstr_t _IWireAuto::GetToComponentName ( );
__declspec(implementation_key(4589)) HRESULT _IWireAuto::Edit ( long NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray );
__declspec(implementation_key(4590)) TGFramework::ApplicationPtr Cables::GetApplication ( );
__declspec(implementation_key(4591)) IDispatchPtr Cables::GetParent ( );
__declspec(implementation_key(4592)) long Cables::GetCount ( );
__declspec(implementation_key(4593)) CablePtr Cables::Item ( const _variant_t & Index );
__declspec(implementation_key(4594)) CablePtr Cables::Add ( long NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray, long NumberOfWires, SAFEARRAY * * WireArray, SAFEARRAY * * SplitPathArray, SAFEARRAY * * SplitPathDirectionArray, _bstr_t ConductorDescription );
__declspec(implementation_key(4595)) enum HarnessTypeConstants Cables::GetType ( );
__declspec(implementation_key(4596)) TGFramework::ApplicationPtr Cable::GetApplication ( );
__declspec(implementation_key(4597)) IDispatchPtr Cable::GetParent ( );
__declspec(implementation_key(4598)) IDispatchPtr Cable::GetAttributeSets ( );
__declspec(implementation_key(4599)) VARIANT_BOOL Cable::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(4600)) VARIANT_BOOL Cable::GetVisible ( );
__declspec(implementation_key(4601)) void Cable::PutVisible ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4602)) HRESULT Cable::GetPaths ( long * NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray );
__declspec(implementation_key(4603)) HRESULT Cable::GetAllPaths ( long * NumberOfPaths, SAFEARRAY * * PathArray );
__declspec(implementation_key(4604)) HRESULT Cable::GetOuterConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray );
__declspec(implementation_key(4605)) HRESULT Cable::GetTopMostConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray );
__declspec(implementation_key(4606)) HRESULT Cable::GetEndPoints ( double * dStartX, double * dStartY, double * dStartZ, double * dEndX, double * dEndY, double * dEndZ );
__declspec(implementation_key(4607)) HRESULT Cable::Remove ( long NumberOfConductors, SAFEARRAY * * ConductorArray );
__declspec(implementation_key(4608)) HRESULT Cable::Delete ( );
__declspec(implementation_key(4609)) VARIANT_BOOL Cable::GetUseGlobalAdders ( );
__declspec(implementation_key(4610)) void Cable::PutUseGlobalAdders ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4611)) HRESULT Cable::GetAdders ( double * dSlackAdder, double * dPureAdder, double * dHoleDiameterAdder, double * dBundleDiameterAdder );
__declspec(implementation_key(4612)) HRESULT Cable::SetAdders ( double dSlackAdder, double dPureAdder, double dHoleDiameterAdder, double dBundleDiameterAdder );
__declspec(implementation_key(4613)) double Cable::GetTrueLength ( );
__declspec(implementation_key(4614)) double Cable::GetCutLength ( );
__declspec(implementation_key(4615)) double Cable::GetMass ( );
__declspec(implementation_key(4616)) AssemblyPropertyPtr Cable::GetAssemblyProperty ( );
__declspec(implementation_key(4617)) enum HarnessTypeConstants Cable::GetType ( );
__declspec(implementation_key(4618)) void Cable::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(4619)) _bstr_t Cable::GetName ( );
__declspec(implementation_key(4620)) void Cable::PutColor ( long _arg1 );
__declspec(implementation_key(4621)) long Cable::GetColor ( );
__declspec(implementation_key(4622)) void Cable::PutDescription ( _bstr_t _arg1 );
__declspec(implementation_key(4623)) _bstr_t Cable::GetDescription ( );
__declspec(implementation_key(4624)) void Cable::PutOuterDiameter ( double _arg1 );
__declspec(implementation_key(4625)) double Cable::GetOuterDiameter ( );
__declspec(implementation_key(4626)) void Cable::PutPartNumber ( _bstr_t _arg1 );
__declspec(implementation_key(4627)) _bstr_t Cable::GetPartNumber ( );
__declspec(implementation_key(4628)) void Cable::PutLinearDensity ( double _arg1 );
__declspec(implementation_key(4629)) double Cable::GetLinearDensity ( );
__declspec(implementation_key(4630)) void Cable::PutMinimumBendRadius ( double _arg1 );
__declspec(implementation_key(4631)) double Cable::GetMinimumBendRadius ( );
__declspec(implementation_key(4632)) HRESULT Cable::CreatePhysicalConductor ( );
__declspec(implementation_key(4633)) HRESULT Cable::DeletePhysicalConductor ( );
__declspec(implementation_key(4634)) void Cable::PutDiameter ( double _arg1 );
__declspec(implementation_key(4635)) double Cable::GetDiameter ( );
__declspec(implementation_key(4636)) void Cable::PutGage ( _bstr_t _arg1 );
__declspec(implementation_key(4637)) _bstr_t Cable::GetGage ( );
__declspec(implementation_key(4638)) void Cable::PutNumberOfConductors ( long _arg1 );
__declspec(implementation_key(4639)) long Cable::GetNumberOfConductors ( );
__declspec(implementation_key(4640)) void Cable::PutMaterialType ( _bstr_t _arg1 );
__declspec(implementation_key(4641)) _bstr_t Cable::GetMaterialType ( );
__declspec(implementation_key(4642)) void Cable::PutMaterial ( _bstr_t _arg1 );
__declspec(implementation_key(4643)) _bstr_t Cable::GetMaterial ( );
__declspec(implementation_key(4644)) void Cable::PutFromTerminalName ( _bstr_t _arg1 );
__declspec(implementation_key(4645)) _bstr_t Cable::GetFromTerminalName ( );
__declspec(implementation_key(4646)) void Cable::PutToTerminalName ( _bstr_t _arg1 );
__declspec(implementation_key(4647)) _bstr_t Cable::GetToTerminalName ( );
__declspec(implementation_key(4648)) void Cable::PutFromComponentName ( _bstr_t _arg1 );
__declspec(implementation_key(4649)) _bstr_t Cable::GetFromComponentName ( );
__declspec(implementation_key(4650)) void Cable::PutToComponentName ( _bstr_t _arg1 );
__declspec(implementation_key(4651)) _bstr_t Cable::GetToComponentName ( );
__declspec(implementation_key(4652)) HRESULT Cable::GetWires ( long * NumberOfWires, SAFEARRAY * * WireArray );
__declspec(implementation_key(4653)) HRESULT Cable::Edit ( long NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray, long NumberOfWires, SAFEARRAY * * WireArray, SAFEARRAY * * SplitPathArray, SAFEARRAY * * SplitPathDirectionArray );
__declspec(implementation_key(4654)) TGFramework::ApplicationPtr _ICablesAuto::GetApplication ( );
__declspec(implementation_key(4655)) IDispatchPtr _ICablesAuto::GetParent ( );
__declspec(implementation_key(4656)) long _ICablesAuto::GetCount ( );
__declspec(implementation_key(4657)) IUnknownPtr _ICablesAuto::Get_NewEnum ( );
__declspec(implementation_key(4658)) CablePtr _ICablesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(4659)) CablePtr _ICablesAuto::Add ( long NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray, long NumberOfWires, SAFEARRAY * * WireArray, SAFEARRAY * * SplitPathArray, SAFEARRAY * * SplitPathDirectionArray, _bstr_t ConductorDescription );
__declspec(implementation_key(4660)) enum HarnessTypeConstants _ICablesAuto::GetType ( );
__declspec(implementation_key(4661)) TGFramework::ApplicationPtr _ICableAuto::GetApplication ( );
__declspec(implementation_key(4662)) IDispatchPtr _ICableAuto::GetParent ( );
__declspec(implementation_key(4663)) IDispatchPtr _ICableAuto::GetAttributeSets ( );
__declspec(implementation_key(4664)) VARIANT_BOOL _ICableAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(4665)) VARIANT_BOOL _ICableAuto::GetVisible ( );
__declspec(implementation_key(4666)) void _ICableAuto::PutVisible ( VARIANT_BOOL Visible );
__declspec(implementation_key(4667)) HRESULT _ICableAuto::GetPaths ( long * NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray );
__declspec(implementation_key(4668)) HRESULT _ICableAuto::GetAllPaths ( long * NumberOfPaths, SAFEARRAY * * PathArray );
__declspec(implementation_key(4669)) HRESULT _ICableAuto::GetOuterConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray );
__declspec(implementation_key(4670)) HRESULT _ICableAuto::GetTopMostConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray );
__declspec(implementation_key(4671)) HRESULT _ICableAuto::GetEndPoints ( double * dStartX, double * dStartY, double * dStartZ, double * dEndX, double * dEndY, double * dEndZ );
__declspec(implementation_key(4672)) HRESULT _ICableAuto::Remove ( long NumberOfConductors, SAFEARRAY * * ConductorArray );
__declspec(implementation_key(4673)) HRESULT _ICableAuto::Delete ( );
__declspec(implementation_key(4674)) VARIANT_BOOL _ICableAuto::GetUseGlobalAdders ( );
__declspec(implementation_key(4675)) void _ICableAuto::PutUseGlobalAdders ( VARIANT_BOOL UseGlobalAdders );
__declspec(implementation_key(4676)) HRESULT _ICableAuto::GetAdders ( double * dSlackAdder, double * dPureAdder, double * dHoleDiameterAdder, double * dBundleDiameterAdder );
__declspec(implementation_key(4677)) HRESULT _ICableAuto::SetAdders ( double dSlackAdder, double dPureAdder, double dHoleDiameterAdder, double dBundleDiameterAdder );
__declspec(implementation_key(4678)) double _ICableAuto::GetTrueLength ( );
__declspec(implementation_key(4679)) double _ICableAuto::GetCutLength ( );
__declspec(implementation_key(4680)) double _ICableAuto::GetMass ( );
__declspec(implementation_key(4681)) AssemblyPropertyPtr _ICableAuto::GetAssemblyProperty ( );
__declspec(implementation_key(4682)) enum HarnessTypeConstants _ICableAuto::GetType ( );
__declspec(implementation_key(4683)) void _ICableAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(4684)) _bstr_t _ICableAuto::GetName ( );
__declspec(implementation_key(4685)) void _ICableAuto::PutColor ( long Color );
__declspec(implementation_key(4686)) long _ICableAuto::GetColor ( );
__declspec(implementation_key(4687)) void _ICableAuto::PutDescription ( _bstr_t Description );
__declspec(implementation_key(4688)) _bstr_t _ICableAuto::GetDescription ( );
__declspec(implementation_key(4689)) void _ICableAuto::PutOuterDiameter ( double OuterDiameter );
__declspec(implementation_key(4690)) double _ICableAuto::GetOuterDiameter ( );
__declspec(implementation_key(4691)) void _ICableAuto::PutPartNumber ( _bstr_t PartNumber );
__declspec(implementation_key(4692)) _bstr_t _ICableAuto::GetPartNumber ( );
__declspec(implementation_key(4693)) void _ICableAuto::PutLinearDensity ( double LinearDensity );
__declspec(implementation_key(4694)) double _ICableAuto::GetLinearDensity ( );
__declspec(implementation_key(4695)) void _ICableAuto::PutMinimumBendRadius ( double MinimumBendRadius );
__declspec(implementation_key(4696)) double _ICableAuto::GetMinimumBendRadius ( );
__declspec(implementation_key(4697)) HRESULT _ICableAuto::CreatePhysicalConductor ( );
__declspec(implementation_key(4698)) HRESULT _ICableAuto::DeletePhysicalConductor ( );
__declspec(implementation_key(4699)) void _ICableAuto::PutDiameter ( double Diameter );
__declspec(implementation_key(4700)) double _ICableAuto::GetDiameter ( );
__declspec(implementation_key(4701)) void _ICableAuto::PutGage ( _bstr_t Gage );
__declspec(implementation_key(4702)) _bstr_t _ICableAuto::GetGage ( );
__declspec(implementation_key(4703)) void _ICableAuto::PutNumberOfConductors ( long NumberOfConductors );
__declspec(implementation_key(4704)) long _ICableAuto::GetNumberOfConductors ( );
__declspec(implementation_key(4705)) void _ICableAuto::PutMaterialType ( _bstr_t MaterialType );
__declspec(implementation_key(4706)) _bstr_t _ICableAuto::GetMaterialType ( );
__declspec(implementation_key(4707)) void _ICableAuto::PutMaterial ( _bstr_t Material );
__declspec(implementation_key(4708)) _bstr_t _ICableAuto::GetMaterial ( );
__declspec(implementation_key(4709)) void _ICableAuto::PutFromTerminalName ( _bstr_t Name );
__declspec(implementation_key(4710)) _bstr_t _ICableAuto::GetFromTerminalName ( );
__declspec(implementation_key(4711)) void _ICableAuto::PutToTerminalName ( _bstr_t Name );
__declspec(implementation_key(4712)) _bstr_t _ICableAuto::GetToTerminalName ( );
__declspec(implementation_key(4713)) void _ICableAuto::PutFromComponentName ( _bstr_t Name );
__declspec(implementation_key(4714)) _bstr_t _ICableAuto::GetFromComponentName ( );
__declspec(implementation_key(4715)) void _ICableAuto::PutToComponentName ( _bstr_t Name );
__declspec(implementation_key(4716)) _bstr_t _ICableAuto::GetToComponentName ( );
__declspec(implementation_key(4717)) HRESULT _ICableAuto::GetWires ( long * NumberOfWires, SAFEARRAY * * WireArray );
__declspec(implementation_key(4718)) HRESULT _ICableAuto::Edit ( long NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray, long NumberOfWires, SAFEARRAY * * WireArray, SAFEARRAY * * SplitPathArray, SAFEARRAY * * SplitPathDirectionArray );
__declspec(implementation_key(4719)) TGFramework::ApplicationPtr Bundles::GetApplication ( );
__declspec(implementation_key(4720)) IDispatchPtr Bundles::GetParent ( );
__declspec(implementation_key(4721)) long Bundles::GetCount ( );
__declspec(implementation_key(4722)) BundlePtr Bundles::Item ( const _variant_t & Index );
__declspec(implementation_key(4723)) BundlePtr Bundles::Add ( long NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray, long NumberOfConductors, SAFEARRAY * * ConductorArray, SAFEARRAY * * SplitPathArray, SAFEARRAY * * SplitPathDirectionArray, _bstr_t ConductorDescription );
__declspec(implementation_key(4724)) enum HarnessTypeConstants Bundles::GetType ( );
__declspec(implementation_key(4725)) TGFramework::ApplicationPtr Bundle::GetApplication ( );
__declspec(implementation_key(4726)) IDispatchPtr Bundle::GetParent ( );
__declspec(implementation_key(4727)) IDispatchPtr Bundle::GetAttributeSets ( );
__declspec(implementation_key(4728)) VARIANT_BOOL Bundle::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(4729)) VARIANT_BOOL Bundle::GetVisible ( );
__declspec(implementation_key(4730)) void Bundle::PutVisible ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4731)) HRESULT Bundle::GetPaths ( long * NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray );
__declspec(implementation_key(4732)) HRESULT Bundle::GetAllPaths ( long * NumberOfPaths, SAFEARRAY * * PathArray );
__declspec(implementation_key(4733)) HRESULT Bundle::GetOuterConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray );
__declspec(implementation_key(4734)) HRESULT Bundle::GetTopMostConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray );
__declspec(implementation_key(4735)) HRESULT Bundle::GetEndPoints ( double * dStartX, double * dStartY, double * dStartZ, double * dEndX, double * dEndY, double * dEndZ );
__declspec(implementation_key(4736)) HRESULT Bundle::Remove ( long NumberOfConductors, SAFEARRAY * * ConductorArray );
__declspec(implementation_key(4737)) HRESULT Bundle::Delete ( );
__declspec(implementation_key(4738)) VARIANT_BOOL Bundle::GetUseGlobalAdders ( );
__declspec(implementation_key(4739)) void Bundle::PutUseGlobalAdders ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4740)) HRESULT Bundle::GetAdders ( double * dSlackAdder, double * dPureAdder, double * dHoleDiameterAdder, double * dBundleDiameterAdder );
__declspec(implementation_key(4741)) HRESULT Bundle::SetAdders ( double dSlackAdder, double dPureAdder, double dHoleDiameterAdder, double dBundleDiameterAdder );
__declspec(implementation_key(4742)) double Bundle::GetTrueLength ( );
__declspec(implementation_key(4743)) double Bundle::GetCutLength ( );
__declspec(implementation_key(4744)) double Bundle::GetMass ( );
__declspec(implementation_key(4745)) AssemblyPropertyPtr Bundle::GetAssemblyProperty ( );
__declspec(implementation_key(4746)) enum HarnessTypeConstants Bundle::GetType ( );
__declspec(implementation_key(4747)) void Bundle::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(4748)) _bstr_t Bundle::GetName ( );
__declspec(implementation_key(4749)) void Bundle::PutColor ( long _arg1 );
__declspec(implementation_key(4750)) long Bundle::GetColor ( );
__declspec(implementation_key(4751)) void Bundle::PutDescription ( _bstr_t _arg1 );
__declspec(implementation_key(4752)) _bstr_t Bundle::GetDescription ( );
__declspec(implementation_key(4753)) void Bundle::PutOuterDiameter ( double _arg1 );
__declspec(implementation_key(4754)) double Bundle::GetOuterDiameter ( );
__declspec(implementation_key(4755)) void Bundle::PutPartNumber ( _bstr_t _arg1 );
__declspec(implementation_key(4756)) _bstr_t Bundle::GetPartNumber ( );
__declspec(implementation_key(4757)) void Bundle::PutLinearDensity ( double _arg1 );
__declspec(implementation_key(4758)) double Bundle::GetLinearDensity ( );
__declspec(implementation_key(4759)) void Bundle::PutMinimumBendRadius ( double _arg1 );
__declspec(implementation_key(4760)) double Bundle::GetMinimumBendRadius ( );
__declspec(implementation_key(4761)) HRESULT Bundle::CreatePhysicalConductor ( );
__declspec(implementation_key(4762)) HRESULT Bundle::DeletePhysicalConductor ( );
__declspec(implementation_key(4763)) HRESULT Bundle::GetConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray );
__declspec(implementation_key(4764)) HRESULT Bundle::Edit ( long NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray, long NumberOfConductors, SAFEARRAY * * ConductorArray, SAFEARRAY * * SplitPathArray, SAFEARRAY * * SplitPathDirectionArray );
__declspec(implementation_key(4765)) TGFramework::ApplicationPtr _IBundlesAuto::GetApplication ( );
__declspec(implementation_key(4766)) IDispatchPtr _IBundlesAuto::GetParent ( );
__declspec(implementation_key(4767)) long _IBundlesAuto::GetCount ( );
__declspec(implementation_key(4768)) IUnknownPtr _IBundlesAuto::Get_NewEnum ( );
__declspec(implementation_key(4769)) BundlePtr _IBundlesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(4770)) BundlePtr _IBundlesAuto::Add ( long NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray, long NumberOfConductors, SAFEARRAY * * ConductorArray, SAFEARRAY * * SplitPathArray, SAFEARRAY * * SplitPathDirectionArray, _bstr_t ConductorDescription );
__declspec(implementation_key(4771)) enum HarnessTypeConstants _IBundlesAuto::GetType ( );
__declspec(implementation_key(4772)) TGFramework::ApplicationPtr _IBundleAuto::GetApplication ( );
__declspec(implementation_key(4773)) IDispatchPtr _IBundleAuto::GetParent ( );
__declspec(implementation_key(4774)) IDispatchPtr _IBundleAuto::GetAttributeSets ( );
__declspec(implementation_key(4775)) VARIANT_BOOL _IBundleAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(4776)) VARIANT_BOOL _IBundleAuto::GetVisible ( );
__declspec(implementation_key(4777)) void _IBundleAuto::PutVisible ( VARIANT_BOOL Visible );
__declspec(implementation_key(4778)) HRESULT _IBundleAuto::GetPaths ( long * NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray );
__declspec(implementation_key(4779)) HRESULT _IBundleAuto::GetAllPaths ( long * NumberOfPaths, SAFEARRAY * * PathArray );
__declspec(implementation_key(4780)) HRESULT _IBundleAuto::GetOuterConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray );
__declspec(implementation_key(4781)) HRESULT _IBundleAuto::GetTopMostConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray );
__declspec(implementation_key(4782)) HRESULT _IBundleAuto::GetEndPoints ( double * dStartX, double * dStartY, double * dStartZ, double * dEndX, double * dEndY, double * dEndZ );
__declspec(implementation_key(4783)) HRESULT _IBundleAuto::Remove ( long NumberOfConductors, SAFEARRAY * * ConductorArray );
__declspec(implementation_key(4784)) HRESULT _IBundleAuto::Delete ( );
__declspec(implementation_key(4785)) VARIANT_BOOL _IBundleAuto::GetUseGlobalAdders ( );
__declspec(implementation_key(4786)) void _IBundleAuto::PutUseGlobalAdders ( VARIANT_BOOL UseGlobalAdders );
__declspec(implementation_key(4787)) HRESULT _IBundleAuto::GetAdders ( double * dSlackAdder, double * dPureAdder, double * dHoleDiameterAdder, double * dBundleDiameterAdder );
__declspec(implementation_key(4788)) HRESULT _IBundleAuto::SetAdders ( double dSlackAdder, double dPureAdder, double dHoleDiameterAdder, double dBundleDiameterAdder );
__declspec(implementation_key(4789)) double _IBundleAuto::GetTrueLength ( );
__declspec(implementation_key(4790)) double _IBundleAuto::GetCutLength ( );
__declspec(implementation_key(4791)) double _IBundleAuto::GetMass ( );
__declspec(implementation_key(4792)) AssemblyPropertyPtr _IBundleAuto::GetAssemblyProperty ( );
__declspec(implementation_key(4793)) enum HarnessTypeConstants _IBundleAuto::GetType ( );
__declspec(implementation_key(4794)) void _IBundleAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(4795)) _bstr_t _IBundleAuto::GetName ( );
__declspec(implementation_key(4796)) void _IBundleAuto::PutColor ( long Color );
__declspec(implementation_key(4797)) long _IBundleAuto::GetColor ( );
__declspec(implementation_key(4798)) void _IBundleAuto::PutDescription ( _bstr_t Description );
__declspec(implementation_key(4799)) _bstr_t _IBundleAuto::GetDescription ( );
__declspec(implementation_key(4800)) void _IBundleAuto::PutOuterDiameter ( double OuterDiameter );
__declspec(implementation_key(4801)) double _IBundleAuto::GetOuterDiameter ( );
__declspec(implementation_key(4802)) void _IBundleAuto::PutPartNumber ( _bstr_t PartNumber );
__declspec(implementation_key(4803)) _bstr_t _IBundleAuto::GetPartNumber ( );
__declspec(implementation_key(4804)) void _IBundleAuto::PutLinearDensity ( double LinearDensity );
__declspec(implementation_key(4805)) double _IBundleAuto::GetLinearDensity ( );
__declspec(implementation_key(4806)) void _IBundleAuto::PutMinimumBendRadius ( double MinimumBendRadius );
__declspec(implementation_key(4807)) double _IBundleAuto::GetMinimumBendRadius ( );
__declspec(implementation_key(4808)) HRESULT _IBundleAuto::CreatePhysicalConductor ( );
__declspec(implementation_key(4809)) HRESULT _IBundleAuto::DeletePhysicalConductor ( );
__declspec(implementation_key(4810)) HRESULT _IBundleAuto::GetConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray );
__declspec(implementation_key(4811)) HRESULT _IBundleAuto::Edit ( long NumberOfPaths, SAFEARRAY * * PathArray, SAFEARRAY * * PathDirectionArray, long NumberOfConductors, SAFEARRAY * * ConductorArray, SAFEARRAY * * SplitPathArray, SAFEARRAY * * SplitPathDirectionArray );
__declspec(implementation_key(4812)) TGFramework::ApplicationPtr Splices::GetApplication ( );
__declspec(implementation_key(4813)) IDispatchPtr Splices::GetParent ( );
__declspec(implementation_key(4814)) long Splices::GetCount ( );
__declspec(implementation_key(4815)) SplicePtr Splices::Item ( const _variant_t & Index );
__declspec(implementation_key(4816)) SplicePtr Splices::Add ( double dSpliceX, double dSpliceY, double dSpliceZ, long NumberOfConductors, SAFEARRAY * * ConductorArray, _bstr_t ConductorDescription );
__declspec(implementation_key(4817)) enum HarnessTypeConstants Splices::GetType ( );
__declspec(implementation_key(4818)) TGFramework::ApplicationPtr Splice::GetApplication ( );
__declspec(implementation_key(4819)) IDispatchPtr Splice::GetParent ( );
__declspec(implementation_key(4820)) IDispatchPtr Splice::GetAttributeSets ( );
__declspec(implementation_key(4821)) VARIANT_BOOL Splice::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(4822)) VARIANT_BOOL Splice::GetVisible ( );
__declspec(implementation_key(4823)) void Splice::PutVisible ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4824)) void Splice::PutGage ( _bstr_t _arg1 );
__declspec(implementation_key(4825)) _bstr_t Splice::GetGage ( );
__declspec(implementation_key(4826)) void Splice::PutMaterialType ( _bstr_t _arg1 );
__declspec(implementation_key(4827)) _bstr_t Splice::GetMaterialType ( );
__declspec(implementation_key(4828)) void Splice::PutMaterial ( _bstr_t _arg1 );
__declspec(implementation_key(4829)) _bstr_t Splice::GetMaterial ( );
__declspec(implementation_key(4830)) HRESULT Splice::GetOuterConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray );
__declspec(implementation_key(4831)) HRESULT Splice::GetTopMostConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray );
__declspec(implementation_key(4832)) HRESULT Splice::Remove ( long NumberOfConductors, SAFEARRAY * * ConductorArray );
__declspec(implementation_key(4833)) HRESULT Splice::Delete ( );
__declspec(implementation_key(4834)) AssemblyPropertyPtr Splice::GetAssemblyProperty ( );
__declspec(implementation_key(4835)) enum HarnessTypeConstants Splice::GetType ( );
__declspec(implementation_key(4836)) void Splice::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(4837)) _bstr_t Splice::GetName ( );
__declspec(implementation_key(4838)) void Splice::PutColor ( long _arg1 );
__declspec(implementation_key(4839)) long Splice::GetColor ( );
__declspec(implementation_key(4840)) void Splice::PutDescription ( _bstr_t _arg1 );
__declspec(implementation_key(4841)) _bstr_t Splice::GetDescription ( );
__declspec(implementation_key(4842)) void Splice::PutOuterDiameter ( double _arg1 );
__declspec(implementation_key(4843)) double Splice::GetOuterDiameter ( );
__declspec(implementation_key(4844)) void Splice::PutPartNumber ( _bstr_t _arg1 );
__declspec(implementation_key(4845)) _bstr_t Splice::GetPartNumber ( );
__declspec(implementation_key(4846)) HRESULT Splice::CreatePhysicalConductor ( );
__declspec(implementation_key(4847)) HRESULT Splice::DeletePhysicalConductor ( );
__declspec(implementation_key(4848)) HRESULT Splice::GetSplicePosition ( double * dSpliceX, double * dSpliceY, double * dSpliceZ );
__declspec(implementation_key(4849)) HRESULT Splice::GetConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray );
__declspec(implementation_key(4850)) HRESULT Splice::AddConductors ( long NumberOfConductors, SAFEARRAY * * ConductorArray );
__declspec(implementation_key(4851)) HRESULT Splice::Edit ( double dSpliceX, double dSpliceY, double dSpliceZ, long NumberOfConductors, SAFEARRAY * * ConductorArray );
__declspec(implementation_key(4852)) TGFramework::ApplicationPtr _ISplicesAuto::GetApplication ( );
__declspec(implementation_key(4853)) IDispatchPtr _ISplicesAuto::GetParent ( );
__declspec(implementation_key(4854)) long _ISplicesAuto::GetCount ( );
__declspec(implementation_key(4855)) IUnknownPtr _ISplicesAuto::Get_NewEnum ( );
__declspec(implementation_key(4856)) SplicePtr _ISplicesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(4857)) SplicePtr _ISplicesAuto::Add ( double dSpliceX, double dSpliceY, double dSpliceZ, long NumberOfConductors, SAFEARRAY * * ConductorArray, _bstr_t ConductorDescription );
__declspec(implementation_key(4858)) enum HarnessTypeConstants _ISplicesAuto::GetType ( );
__declspec(implementation_key(4859)) TGFramework::ApplicationPtr _ISpliceAuto::GetApplication ( );
__declspec(implementation_key(4860)) IDispatchPtr _ISpliceAuto::GetParent ( );
__declspec(implementation_key(4861)) IDispatchPtr _ISpliceAuto::GetAttributeSets ( );
__declspec(implementation_key(4862)) VARIANT_BOOL _ISpliceAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(4863)) VARIANT_BOOL _ISpliceAuto::GetVisible ( );
__declspec(implementation_key(4864)) void _ISpliceAuto::PutVisible ( VARIANT_BOOL Visible );
__declspec(implementation_key(4865)) void _ISpliceAuto::PutGage ( _bstr_t Gage );
__declspec(implementation_key(4866)) _bstr_t _ISpliceAuto::GetGage ( );
__declspec(implementation_key(4867)) void _ISpliceAuto::PutMaterialType ( _bstr_t MaterialType );
__declspec(implementation_key(4868)) _bstr_t _ISpliceAuto::GetMaterialType ( );
__declspec(implementation_key(4869)) void _ISpliceAuto::PutMaterial ( _bstr_t Material );
__declspec(implementation_key(4870)) _bstr_t _ISpliceAuto::GetMaterial ( );
__declspec(implementation_key(4871)) HRESULT _ISpliceAuto::GetOuterConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray );
__declspec(implementation_key(4872)) HRESULT _ISpliceAuto::GetTopMostConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray );
__declspec(implementation_key(4873)) HRESULT _ISpliceAuto::Remove ( long NumberOfConductors, SAFEARRAY * * ConductorArray );
__declspec(implementation_key(4874)) HRESULT _ISpliceAuto::Delete ( );
__declspec(implementation_key(4875)) AssemblyPropertyPtr _ISpliceAuto::GetAssemblyProperty ( );
__declspec(implementation_key(4876)) enum HarnessTypeConstants _ISpliceAuto::GetType ( );
__declspec(implementation_key(4877)) void _ISpliceAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(4878)) _bstr_t _ISpliceAuto::GetName ( );
__declspec(implementation_key(4879)) void _ISpliceAuto::PutColor ( long Color );
__declspec(implementation_key(4880)) long _ISpliceAuto::GetColor ( );
__declspec(implementation_key(4881)) void _ISpliceAuto::PutDescription ( _bstr_t Description );
__declspec(implementation_key(4882)) _bstr_t _ISpliceAuto::GetDescription ( );
__declspec(implementation_key(4883)) void _ISpliceAuto::PutOuterDiameter ( double OuterDiameter );
__declspec(implementation_key(4884)) double _ISpliceAuto::GetOuterDiameter ( );
__declspec(implementation_key(4885)) void _ISpliceAuto::PutPartNumber ( _bstr_t PartNumber );
__declspec(implementation_key(4886)) _bstr_t _ISpliceAuto::GetPartNumber ( );
__declspec(implementation_key(4887)) HRESULT _ISpliceAuto::CreatePhysicalConductor ( );
__declspec(implementation_key(4888)) HRESULT _ISpliceAuto::DeletePhysicalConductor ( );
__declspec(implementation_key(4889)) HRESULT _ISpliceAuto::GetSplicePosition ( double * dSpliceX, double * dSpliceY, double * dSpliceZ );
__declspec(implementation_key(4890)) HRESULT _ISpliceAuto::GetConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray );
__declspec(implementation_key(4891)) HRESULT _ISpliceAuto::AddConductors ( long NumberOfConductors, SAFEARRAY * * ConductorArray );
__declspec(implementation_key(4892)) HRESULT _ISpliceAuto::Edit ( double dSpliceX, double dSpliceY, double dSpliceZ, long NumberOfConductors, SAFEARRAY * * ConductorArray );
__declspec(implementation_key(4893)) TGFramework::ApplicationPtr _IHarnessAuto::GetApplication ( );
__declspec(implementation_key(4894)) IDispatchPtr _IHarnessAuto::GetParent ( );
__declspec(implementation_key(4895)) WiresPtr _IHarnessAuto::GetWires ( );
__declspec(implementation_key(4896)) CablesPtr _IHarnessAuto::GetCables ( );
__declspec(implementation_key(4897)) BundlesPtr _IHarnessAuto::GetBundles ( );
__declspec(implementation_key(4898)) SplicesPtr _IHarnessAuto::GetSplices ( );
__declspec(implementation_key(4899)) HRESULT _IHarnessAuto::GetTopMostConductors ( long * NumberOfConductors, SAFEARRAY * * ConductorArray );
__declspec(implementation_key(4900)) HRESULT _IHarnessAuto::SaveAsEcad ( enum HarnessSaveAsEcadStatusConstants * HarnessSaveAsEcadStatus, _bstr_t CompanyName, const _variant_t & ComponentFilePath, const _variant_t & ConnectionFilePath );
__declspec(implementation_key(4901)) HRESULT _IHarnessAuto::CreatePhysicalConductor ( );
__declspec(implementation_key(4902)) HRESULT _IHarnessAuto::DeletePhysicalConductor ( );
__declspec(implementation_key(4903)) HRESULT _IHarnessAuto::SaveAsHarnessTopology ( enum SaveAsHarnessTopologyStatusConstants * SaveAsHarnessTopologyStatus, const _variant_t & HarnessFilePath );
__declspec(implementation_key(4904)) HRESULT _IHarnessAuto::SaveAsHarnessTopologyEx ( enum SaveAsHarnessTopologyStatusConstants * SaveAsHarnessTopologyStatus, const _variant_t & HarnessFilePath, enum SaveAsHarnessFileFormats SaveAsHarnessFileFormat );
__declspec(implementation_key(4905)) TGFramework::ApplicationPtr AssemblyBodies::GetApplication ( );
__declspec(implementation_key(4906)) long AssemblyBodies::GetCount ( );
__declspec(implementation_key(4907)) IDispatchPtr AssemblyBodies::GetParent ( );
__declspec(implementation_key(4908)) AssemblyBodyPtr AssemblyBodies::Item ( const _variant_t & Index );
__declspec(implementation_key(4909)) enum TGFramework::ObjectType AssemblyBodies::GetType ( );
__declspec(implementation_key(4910)) IDispatchPtr AssemblyBodies::GetAttributeSets ( );
__declspec(implementation_key(4911)) VARIANT_BOOL AssemblyBodies::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(4912)) TGFramework::ApplicationPtr _IAssemblyBodiesAuto::GetApplication ( );
__declspec(implementation_key(4913)) long _IAssemblyBodiesAuto::GetCount ( );
__declspec(implementation_key(4914)) IDispatchPtr _IAssemblyBodiesAuto::GetParent ( );
__declspec(implementation_key(4915)) AssemblyBodyPtr _IAssemblyBodiesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(4916)) IUnknownPtr _IAssemblyBodiesAuto::Get_NewEnum ( );
__declspec(implementation_key(4917)) enum TGFramework::ObjectType _IAssemblyBodiesAuto::GetType ( );
__declspec(implementation_key(4918)) IDispatchPtr _IAssemblyBodiesAuto::GetAttributeSets ( );
__declspec(implementation_key(4919)) VARIANT_BOOL _IAssemblyBodiesAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(4920)) TGFramework::ApplicationPtr Zones::GetApplication ( );
__declspec(implementation_key(4921)) IDispatchPtr Zones::GetParent ( );
__declspec(implementation_key(4922)) long Zones::GetCount ( );
__declspec(implementation_key(4923)) ZonePtr Zones::Item ( const _variant_t & Index );
__declspec(implementation_key(4924)) ZonePtr Zones::Add ( double Point1x, double Point1y, double Point1z, double Point2x, double Point2y, double Point2z );
__declspec(implementation_key(4925)) HRESULT Zones::Delete ( _bstr_t Name );
__declspec(implementation_key(4926)) HRESULT Zones::Save ( );
__declspec(implementation_key(4927)) HRESULT Zones::Cut ( _bstr_t Name );
__declspec(implementation_key(4928)) ZonePtr Zones::Paste ( );
__declspec(implementation_key(4929)) HRESULT Zones::Show ( );
__declspec(implementation_key(4930)) HRESULT Zones::Hide ( );
__declspec(implementation_key(4931)) VARIANT_BOOL Zones::IsVisible ( );
__declspec(implementation_key(4932)) TGFramework::ApplicationPtr Zone::GetApplication ( );
__declspec(implementation_key(4933)) IDispatchPtr Zone::GetParent ( );
__declspec(implementation_key(4934)) void Zone::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(4935)) _bstr_t Zone::GetName ( );
__declspec(implementation_key(4936)) void Zone::PutOverlap ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4937)) VARIANT_BOOL Zone::GetOverlap ( );
__declspec(implementation_key(4938)) HRESULT Zone::GetPoints ( double * Point1x, double * Point1y, double * Point1z, double * Point2x, double * Point2y, double * Point2z );
__declspec(implementation_key(4939)) HRESULT Zone::SetPoints ( double Point1x, double Point1y, double Point1z, double Point2x, double Point2y, double Point2z );
__declspec(implementation_key(4940)) HRESULT Zone::CopyToClipboard ( );
__declspec(implementation_key(4941)) HRESULT Zone::PopulateFromClipboard ( );
__declspec(implementation_key(4942)) HRESULT Zone::Show ( );
__declspec(implementation_key(4943)) HRESULT Zone::Hide ( );
__declspec(implementation_key(4944)) VARIANT_BOOL Zone::IsVisible ( );
__declspec(implementation_key(4945)) HRESULT Zone::ShowParts ( );
__declspec(implementation_key(4946)) HRESULT Zone::HideParts ( );
__declspec(implementation_key(4947)) HRESULT Zone::ShowOnlyParts ( );
__declspec(implementation_key(4948)) HRESULT Zone::AddPartsToSelectSet ( );
__declspec(implementation_key(4949)) TGFramework::ApplicationPtr _IZonesAuto::GetApplication ( );
__declspec(implementation_key(4950)) IDispatchPtr _IZonesAuto::GetParent ( );
__declspec(implementation_key(4951)) long _IZonesAuto::GetCount ( );
__declspec(implementation_key(4952)) ZonePtr _IZonesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(4953)) IUnknownPtr _IZonesAuto::Get_NewEnum ( );
__declspec(implementation_key(4954)) ZonePtr _IZonesAuto::Add ( double Point1x, double Point1y, double Point1z, double Point2x, double Point2y, double Point2z );
__declspec(implementation_key(4955)) HRESULT _IZonesAuto::Delete ( _bstr_t Name );
__declspec(implementation_key(4956)) HRESULT _IZonesAuto::Save ( );
__declspec(implementation_key(4957)) HRESULT _IZonesAuto::Cut ( _bstr_t Name );
__declspec(implementation_key(4958)) ZonePtr _IZonesAuto::Paste ( );
__declspec(implementation_key(4959)) HRESULT _IZonesAuto::Show ( );
__declspec(implementation_key(4960)) HRESULT _IZonesAuto::Hide ( );
__declspec(implementation_key(4961)) VARIANT_BOOL _IZonesAuto::IsVisible ( );
__declspec(implementation_key(4962)) TGFramework::ApplicationPtr _IZoneAuto::GetApplication ( );
__declspec(implementation_key(4963)) IDispatchPtr _IZoneAuto::GetParent ( );
__declspec(implementation_key(4964)) void _IZoneAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(4965)) _bstr_t _IZoneAuto::GetName ( );
__declspec(implementation_key(4966)) void _IZoneAuto::PutOverlap ( VARIANT_BOOL bOverlap );
__declspec(implementation_key(4967)) VARIANT_BOOL _IZoneAuto::GetOverlap ( );
__declspec(implementation_key(4968)) HRESULT _IZoneAuto::GetPoints ( double * Point1x, double * Point1y, double * Point1z, double * Point2x, double * Point2y, double * Point2z );
__declspec(implementation_key(4969)) HRESULT _IZoneAuto::SetPoints ( double Point1x, double Point1y, double Point1z, double Point2x, double Point2y, double Point2z );
__declspec(implementation_key(4970)) HRESULT _IZoneAuto::CopyToClipboard ( );
__declspec(implementation_key(4971)) HRESULT _IZoneAuto::PopulateFromClipboard ( );
__declspec(implementation_key(4972)) HRESULT _IZoneAuto::Show ( );
__declspec(implementation_key(4973)) HRESULT _IZoneAuto::Hide ( );
__declspec(implementation_key(4974)) VARIANT_BOOL _IZoneAuto::IsVisible ( );
__declspec(implementation_key(4975)) HRESULT _IZoneAuto::ShowParts ( );
__declspec(implementation_key(4976)) HRESULT _IZoneAuto::HideParts ( );
__declspec(implementation_key(4977)) HRESULT _IZoneAuto::ShowOnlyParts ( );
__declspec(implementation_key(4978)) HRESULT _IZoneAuto::AddPartsToSelectSet ( );
__declspec(implementation_key(4979)) HRESULT FastenerSystems::GetOccurrences ( long * NumOfMasters, SAFEARRAY * * Occurrences );
__declspec(implementation_key(4980)) HRESULT FastenerSystems::GetComponents ( IUnknown * master, long * NoOfcomp, SAFEARRAY * * Occurrences );
__declspec(implementation_key(4981)) TGFramework::ApplicationPtr FastenerSystems::GetApplication ( );
__declspec(implementation_key(4982)) IDispatchPtr FastenerSystems::GetParent ( );
__declspec(implementation_key(4983)) FastenerSystemPtr FastenerSystems::Item ( const _variant_t & Index );
__declspec(implementation_key(4984)) long FastenerSystems::GetCount ( );
__declspec(implementation_key(4985)) HRESULT FastenerSystems::GetOccurrencesEx ( long * NumOfSources, SAFEARRAY * * Occurrences );
__declspec(implementation_key(4986)) HRESULT FastenerSystems::GetComponentsEx ( IUnknown * Source, long * NoOfcomp, SAFEARRAY * * Occurrences );
__declspec(implementation_key(4987)) HRESULT FastenerSystem::GetComponents ( long * NoOfcomp, SAFEARRAY * * Occurrences );
__declspec(implementation_key(4988)) HRESULT FastenerSystem::Flip ( );
__declspec(implementation_key(4989)) TGFramework::ApplicationPtr FastenerSystem::GetApplication ( );
__declspec(implementation_key(4990)) IDispatchPtr FastenerSystem::GetParent ( );
__declspec(implementation_key(4991)) _bstr_t FastenerSystem::GetName ( );
__declspec(implementation_key(4992)) void FastenerSystem::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(4993)) VARIANT_BOOL FastenerSystem::GetVisible ( );
__declspec(implementation_key(4994)) void FastenerSystem::PutVisible ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(4995)) HRESULT FastenerSystem::Delete ( );
__declspec(implementation_key(4996)) TGPart::SuppressVariablePtr FastenerSystem::GetSuppressionVariable ( );
__declspec(implementation_key(4997)) TGPart::SuppressVariablePtr FastenerSystem::AddSuppressionVariable ( );
__declspec(implementation_key(4998)) HRESULT FastenerSystem::DeleteSuppressionVariable ( );
__declspec(implementation_key(4999)) VARIANT_BOOL FastenerSystem::HasSuppressionVariable ( );
__declspec(implementation_key(5000)) HRESULT _IFastenerSystemsAuto::GetOccurrences ( long * NumOfMasters, SAFEARRAY * * Occurrences );
__declspec(implementation_key(5001)) HRESULT _IFastenerSystemsAuto::GetComponents ( IUnknown * master, long * NoOfcomp, SAFEARRAY * * Occurrences );
__declspec(implementation_key(5002)) TGFramework::ApplicationPtr _IFastenerSystemsAuto::GetApplication ( );
__declspec(implementation_key(5003)) IDispatchPtr _IFastenerSystemsAuto::GetParent ( );
__declspec(implementation_key(5004)) FastenerSystemPtr _IFastenerSystemsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(5005)) IUnknownPtr _IFastenerSystemsAuto::Get_NewEnum ( );
__declspec(implementation_key(5006)) long _IFastenerSystemsAuto::GetCount ( );
__declspec(implementation_key(5007)) HRESULT _IFastenerSystemsAuto::GetOccurrencesEx ( long * NumOfSources, SAFEARRAY * * Occurrences );
__declspec(implementation_key(5008)) HRESULT _IFastenerSystemsAuto::GetComponentsEx ( IUnknown * Source, long * NoOfcomp, SAFEARRAY * * Occurrences );
__declspec(implementation_key(5009)) HRESULT _IFastenerSystemAuto::GetComponents ( long * NoOfcomp, SAFEARRAY * * Occurrences );
__declspec(implementation_key(5010)) HRESULT _IFastenerSystemAuto::Flip ( );
__declspec(implementation_key(5011)) TGFramework::ApplicationPtr _IFastenerSystemAuto::GetApplication ( );
__declspec(implementation_key(5012)) IDispatchPtr _IFastenerSystemAuto::GetParent ( );
__declspec(implementation_key(5013)) _bstr_t _IFastenerSystemAuto::GetName ( );
__declspec(implementation_key(5014)) void _IFastenerSystemAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(5015)) VARIANT_BOOL _IFastenerSystemAuto::GetVisible ( );
__declspec(implementation_key(5016)) void _IFastenerSystemAuto::PutVisible ( VARIANT_BOOL Visible );
__declspec(implementation_key(5017)) HRESULT _IFastenerSystemAuto::Delete ( );
__declspec(implementation_key(5018)) TGPart::SuppressVariablePtr _IFastenerSystemAuto::GetSuppressionVariable ( );
__declspec(implementation_key(5019)) TGPart::SuppressVariablePtr _IFastenerSystemAuto::AddSuppressionVariable ( );
__declspec(implementation_key(5020)) HRESULT _IFastenerSystemAuto::DeleteSuppressionVariable ( );
__declspec(implementation_key(5021)) VARIANT_BOOL _IFastenerSystemAuto::HasSuppressionVariable ( );
__declspec(implementation_key(5022)) TGFramework::ApplicationPtr AssemblyGroups::GetApplication ( );
__declspec(implementation_key(5023)) long AssemblyGroups::GetCount ( );
__declspec(implementation_key(5024)) IDispatchPtr AssemblyGroups::GetParent ( );
__declspec(implementation_key(5025)) AssemblyGroupPtr AssemblyGroups::Item ( const _variant_t & Index );
__declspec(implementation_key(5026)) enum TGFramework::ObjectType AssemblyGroups::GetType ( );
__declspec(implementation_key(5027)) AssemblyGroupPtr AssemblyGroups::Add ( long NumComponents, SAFEARRAY * * Components );
__declspec(implementation_key(5028)) TGFramework::ApplicationPtr AssemblyGroup::GetApplication ( );
__declspec(implementation_key(5029)) IDispatchPtr AssemblyGroup::GetParent ( );
__declspec(implementation_key(5030)) _bstr_t AssemblyGroup::GetName ( );
__declspec(implementation_key(5031)) void AssemblyGroup::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(5032)) enum TGFramework::ObjectType AssemblyGroup::GetType ( );
__declspec(implementation_key(5033)) void AssemblyGroup::PutVisible ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5034)) HRESULT AssemblyGroup::Delete ( );
__declspec(implementation_key(5035)) HRESULT AssemblyGroup::UnGroup ( );
__declspec(implementation_key(5036)) HRESULT AssemblyGroup::AddToGroup ( long NumComponents, SAFEARRAY * * Components );
__declspec(implementation_key(5037)) HRESULT AssemblyGroup::RemoveFromGroup ( long NumComponents, SAFEARRAY * * Components );
__declspec(implementation_key(5038)) long AssemblyGroup::GetNumComponents ( );
__declspec(implementation_key(5039)) HRESULT AssemblyGroup::GetComponents ( SAFEARRAY * * Components );
__declspec(implementation_key(5040)) TGPart::SuppressVariablePtr AssemblyGroup::GetSuppressionVariable ( );
__declspec(implementation_key(5041)) TGPart::SuppressVariablePtr AssemblyGroup::AddSuppressionVariable ( );
__declspec(implementation_key(5042)) HRESULT AssemblyGroup::DeleteSuppressionVariable ( );
__declspec(implementation_key(5043)) VARIANT_BOOL AssemblyGroup::HasSuppressionVariable ( );
__declspec(implementation_key(5044)) TGFramework::ApplicationPtr _IAssemblyGroupsAuto::GetApplication ( );
__declspec(implementation_key(5045)) long _IAssemblyGroupsAuto::GetCount ( );
__declspec(implementation_key(5046)) IDispatchPtr _IAssemblyGroupsAuto::GetParent ( );
__declspec(implementation_key(5047)) AssemblyGroupPtr _IAssemblyGroupsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(5048)) IUnknownPtr _IAssemblyGroupsAuto::Get_NewEnum ( );
__declspec(implementation_key(5049)) enum TGFramework::ObjectType _IAssemblyGroupsAuto::GetType ( );
__declspec(implementation_key(5050)) AssemblyGroupPtr _IAssemblyGroupsAuto::Add ( long NumComponents, SAFEARRAY * * Components );
__declspec(implementation_key(5051)) TGFramework::ApplicationPtr _IAssemblyGroupAuto::GetApplication ( );
__declspec(implementation_key(5052)) IDispatchPtr _IAssemblyGroupAuto::GetParent ( );
__declspec(implementation_key(5053)) _bstr_t _IAssemblyGroupAuto::GetName ( );
__declspec(implementation_key(5054)) void _IAssemblyGroupAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(5055)) enum TGFramework::ObjectType _IAssemblyGroupAuto::GetType ( );
__declspec(implementation_key(5056)) void _IAssemblyGroupAuto::PutVisible ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5057)) HRESULT _IAssemblyGroupAuto::Delete ( );
__declspec(implementation_key(5058)) HRESULT _IAssemblyGroupAuto::UnGroup ( );
__declspec(implementation_key(5059)) HRESULT _IAssemblyGroupAuto::AddToGroup ( long NumComponents, SAFEARRAY * * Components );
__declspec(implementation_key(5060)) HRESULT _IAssemblyGroupAuto::RemoveFromGroup ( long NumComponents, SAFEARRAY * * Components );
__declspec(implementation_key(5061)) long _IAssemblyGroupAuto::GetNumComponents ( );
__declspec(implementation_key(5062)) HRESULT _IAssemblyGroupAuto::GetComponents ( SAFEARRAY * * Components );
__declspec(implementation_key(5063)) TGPart::SuppressVariablePtr _IAssemblyGroupAuto::GetSuppressionVariable ( );
__declspec(implementation_key(5064)) TGPart::SuppressVariablePtr _IAssemblyGroupAuto::AddSuppressionVariable ( );
__declspec(implementation_key(5065)) HRESULT _IAssemblyGroupAuto::DeleteSuppressionVariable ( );
__declspec(implementation_key(5066)) VARIANT_BOOL _IAssemblyGroupAuto::HasSuppressionVariable ( );
__declspec(implementation_key(5067)) TGFramework::ApplicationPtr ItemNumbers::GetApplication ( );
__declspec(implementation_key(5068)) IDispatchPtr ItemNumbers::GetParent ( );
__declspec(implementation_key(5069)) HRESULT ItemNumbers::GetItemNumberPreferences ( enum ItemNumberModeConstants * Mode, VARIANT_BOOL * ExpandWeldmentSubassemblies, int * StartNumber, int * IncrementBy );
__declspec(implementation_key(5070)) HRESULT ItemNumbers::SetItemNumberPreferences ( enum ItemNumberModeConstants Mode, VARIANT_BOOL ExpandWeldmentSubassemblies, int StartNumber, int IncrementBy );
__declspec(implementation_key(5071)) int ItemNumbers::GetNextAvailableItemNumber ( );
__declspec(implementation_key(5072)) HRESULT ItemNumbers::IsInUse ( int ItemNumber, VARIANT_BOOL * ItemNumberInUse );
__declspec(implementation_key(5073)) HRESULT ItemNumbers::Regenerate ( );
__declspec(implementation_key(5074)) HRESULT ItemNumbers::RemoveUnusedItemNumbers ( );
__declspec(implementation_key(5075)) TGFramework::ApplicationPtr _IItemNumbersAuto::GetApplication ( );
__declspec(implementation_key(5076)) IDispatchPtr _IItemNumbersAuto::GetParent ( );
__declspec(implementation_key(5077)) HRESULT _IItemNumbersAuto::GetItemNumberPreferences ( enum ItemNumberModeConstants * Mode, VARIANT_BOOL * ExpandWeldmentSubassemblies, int * StartNumber, int * IncrementBy );
__declspec(implementation_key(5078)) HRESULT _IItemNumbersAuto::SetItemNumberPreferences ( enum ItemNumberModeConstants Mode, VARIANT_BOOL ExpandWeldmentSubassemblies, int StartNumber, int IncrementBy );
__declspec(implementation_key(5079)) int _IItemNumbersAuto::GetNextAvailableItemNumber ( );
__declspec(implementation_key(5080)) HRESULT _IItemNumbersAuto::IsInUse ( int ItemNumber, VARIANT_BOOL * ItemNumberInUse );
__declspec(implementation_key(5081)) HRESULT _IItemNumbersAuto::Regenerate ( );
__declspec(implementation_key(5082)) HRESULT _IItemNumbersAuto::RemoveUnusedItemNumbers ( );
__declspec(implementation_key(5083)) TGFramework::ApplicationPtr AssemblyCopies::GetApplication ( );
__declspec(implementation_key(5084)) IDispatchPtr AssemblyCopies::GetParent ( );
__declspec(implementation_key(5085)) AssemblyCopyPtr AssemblyCopies::Item ( const _variant_t & Index );
__declspec(implementation_key(5086)) long AssemblyCopies::GetCount ( );
__declspec(implementation_key(5087)) AssemblyCopyPtr AssemblyCopies::ItemEx ( const _variant_t & Index );
__declspec(implementation_key(5088)) AssemblyCopyPtr AssemblyCopies::Add ( _bstr_t FileName, enum AssemblyCopyComponentConstants SpecifiedComponentSelection, const _variant_t & MirrorPlane, const _variant_t & IncludeAF, const _variant_t & AddNewComponentsOnUpdate, const _variant_t & NumSpecifiedComponents, const _variant_t & SpecifiedComponents, const _variant_t & CoordinateSystem );
__declspec(implementation_key(5089)) long AssemblyCopies::GetCountEx ( );
__declspec(implementation_key(5090)) TGFramework::ApplicationPtr AssemblyCopy::GetApplication ( );
__declspec(implementation_key(5091)) IDispatchPtr AssemblyCopy::GetParent ( );
__declspec(implementation_key(5092)) _bstr_t AssemblyCopy::GetSourceFilename ( );
__declspec(implementation_key(5093)) IDispatchPtr AssemblyCopy::GetSourceDocument ( );
__declspec(implementation_key(5094)) IDispatchPtr AssemblyCopy::GetMirrorPlane ( );
__declspec(implementation_key(5095)) void AssemblyCopy::PutMirrorPlane ( IDispatch * _arg1 );
__declspec(implementation_key(5096)) IDispatchPtr AssemblyCopy::GetCoordinateSystem ( );
__declspec(implementation_key(5097)) void AssemblyCopy::PutCoordinateSystem ( IDispatch * _arg1 );
__declspec(implementation_key(5098)) VARIANT_BOOL AssemblyCopy::GetIncludeAssemblyFeatures ( );
__declspec(implementation_key(5099)) void AssemblyCopy::PutIncludeAssemblyFeatures ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5100)) VARIANT_BOOL AssemblyCopy::GetAddNewComponentsOnUpdate ( );
__declspec(implementation_key(5101)) void AssemblyCopy::PutAddNewComponentsOnUpdate ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5102)) VARIANT_BOOL AssemblyCopy::GetIsOutOfDate ( );
__declspec(implementation_key(5103)) VARIANT_BOOL AssemblyCopy::GetIsFrozen ( );
__declspec(implementation_key(5104)) void AssemblyCopy::PutIsFrozen ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5105)) enum AssemblyCopyStatusConstants AssemblyCopy::GetStatus ( );
__declspec(implementation_key(5106)) enum AssemblyCopyTypeConstants AssemblyCopy::GetAssemblyCopyType ( );
__declspec(implementation_key(5107)) HRESULT AssemblyCopy::Update ( );
__declspec(implementation_key(5108)) HRESULT AssemblyCopy::GetDefinition ( SAFEARRAY * * inputOccs, SAFEARRAY * * outputOccs, VARIANT * actionEnums, VARIANT * planeEnums, VARIANT * userEnums );
__declspec(implementation_key(5109)) HRESULT AssemblyCopy::GetMultibodyDefinition ( SAFEARRAY * * inputFileNames, SAFEARRAY * * inputReferences, SAFEARRAY * * outputOccs );
__declspec(implementation_key(5110)) _bstr_t AssemblyCopy::GetName ( );
__declspec(implementation_key(5111)) void AssemblyCopy::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(5112)) HRESULT AssemblyCopy::ChangeSource ( _bstr_t FileName, enum AssemblyCopyComponentConstants SpecifiedComponentSelection, const _variant_t & NumSpecifiedComponents, const _variant_t & SpecifiedComponents );
__declspec(implementation_key(5113)) HRESULT AssemblyCopy::ComponentSettings ( long NumComponents, SAFEARRAY * * Components, SAFEARRAY * * ActionConstants, const _variant_t & PlaneConstants );
__declspec(implementation_key(5114)) TGFramework::ApplicationPtr _IAssemblyCopiesAuto::GetApplication ( );
__declspec(implementation_key(5115)) IDispatchPtr _IAssemblyCopiesAuto::GetParent ( );
__declspec(implementation_key(5116)) AssemblyCopyPtr _IAssemblyCopiesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(5117)) long _IAssemblyCopiesAuto::GetCount ( );
__declspec(implementation_key(5118)) AssemblyCopyPtr _IAssemblyCopiesAuto::ItemEx ( const _variant_t & Index );
__declspec(implementation_key(5119)) IUnknownPtr _IAssemblyCopiesAuto::Get_NewEnum ( );
__declspec(implementation_key(5120)) AssemblyCopyPtr _IAssemblyCopiesAuto::Add ( _bstr_t FileName, enum AssemblyCopyComponentConstants SpecifiedComponentSelection, const _variant_t & MirrorPlane, const _variant_t & IncludeAF, const _variant_t & AddNewComponentsOnUpdate, const _variant_t & NumSpecifiedComponents, const _variant_t & SpecifiedComponents, const _variant_t & CoordinateSystem );
__declspec(implementation_key(5121)) long _IAssemblyCopiesAuto::GetCountEx ( );
__declspec(implementation_key(5122)) TGFramework::ApplicationPtr _IAssemblyCopyAuto::GetApplication ( );
__declspec(implementation_key(5123)) IDispatchPtr _IAssemblyCopyAuto::GetParent ( );
__declspec(implementation_key(5124)) _bstr_t _IAssemblyCopyAuto::GetSourceFilename ( );
__declspec(implementation_key(5125)) IDispatchPtr _IAssemblyCopyAuto::GetSourceDocument ( );
__declspec(implementation_key(5126)) IDispatchPtr _IAssemblyCopyAuto::GetMirrorPlane ( );
__declspec(implementation_key(5127)) void _IAssemblyCopyAuto::PutMirrorPlane ( IDispatch * Mirror );
__declspec(implementation_key(5128)) IDispatchPtr _IAssemblyCopyAuto::GetCoordinateSystem ( );
__declspec(implementation_key(5129)) void _IAssemblyCopyAuto::PutCoordinateSystem ( IDispatch * coordinates );
__declspec(implementation_key(5130)) VARIANT_BOOL _IAssemblyCopyAuto::GetIncludeAssemblyFeatures ( );
__declspec(implementation_key(5131)) void _IAssemblyCopyAuto::PutIncludeAssemblyFeatures ( VARIANT_BOOL bIncludeAF );
__declspec(implementation_key(5132)) VARIANT_BOOL _IAssemblyCopyAuto::GetAddNewComponentsOnUpdate ( );
__declspec(implementation_key(5133)) void _IAssemblyCopyAuto::PutAddNewComponentsOnUpdate ( VARIANT_BOOL bAddNewComponentsOnUpdate );
__declspec(implementation_key(5134)) VARIANT_BOOL _IAssemblyCopyAuto::GetIsOutOfDate ( );
__declspec(implementation_key(5135)) VARIANT_BOOL _IAssemblyCopyAuto::GetIsFrozen ( );
__declspec(implementation_key(5136)) void _IAssemblyCopyAuto::PutIsFrozen ( VARIANT_BOOL bIsFrozen );
__declspec(implementation_key(5137)) enum AssemblyCopyStatusConstants _IAssemblyCopyAuto::GetStatus ( );
__declspec(implementation_key(5138)) enum AssemblyCopyTypeConstants _IAssemblyCopyAuto::GetAssemblyCopyType ( );
__declspec(implementation_key(5139)) HRESULT _IAssemblyCopyAuto::Update ( );
__declspec(implementation_key(5140)) HRESULT _IAssemblyCopyAuto::GetDefinition ( SAFEARRAY * * inputOccs, SAFEARRAY * * outputOccs, VARIANT * actionEnums, VARIANT * planeEnums, VARIANT * userEnums );
__declspec(implementation_key(5141)) HRESULT _IAssemblyCopyAuto::GetMultibodyDefinition ( SAFEARRAY * * inputFileNames, SAFEARRAY * * inputReferences, SAFEARRAY * * outputOccs );
__declspec(implementation_key(5142)) _bstr_t _IAssemblyCopyAuto::GetName ( );
__declspec(implementation_key(5143)) void _IAssemblyCopyAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(5144)) HRESULT _IAssemblyCopyAuto::ChangeSource ( _bstr_t FileName, enum AssemblyCopyComponentConstants SpecifiedComponentSelection, const _variant_t & NumSpecifiedComponents, const _variant_t & SpecifiedComponents );
__declspec(implementation_key(5145)) HRESULT _IAssemblyCopyAuto::ComponentSettings ( long NumComponents, SAFEARRAY * * Components, SAFEARRAY * * ActionConstants, const _variant_t & PlaneConstants );
__declspec(implementation_key(5146)) TGFramework::ApplicationPtr AssemblyMirrors::GetApplication ( );
__declspec(implementation_key(5147)) IDispatchPtr AssemblyMirrors::GetParent ( );
__declspec(implementation_key(5148)) AssemblyMirrorPtr AssemblyMirrors::Item ( const _variant_t & Index );
__declspec(implementation_key(5149)) long AssemblyMirrors::GetCount ( );
__declspec(implementation_key(5150)) TGFramework::ApplicationPtr AssemblyMirror::GetApplication ( );
__declspec(implementation_key(5151)) IDispatchPtr AssemblyMirror::GetParent ( );
__declspec(implementation_key(5152)) IDispatchPtr AssemblyMirror::GetMirrorPlane ( );
__declspec(implementation_key(5153)) enum AssemblyCopyStatusConstants AssemblyMirror::GetStatus ( );
__declspec(implementation_key(5154)) HRESULT AssemblyMirror::GetDefinition ( SAFEARRAY * * inputOccs, SAFEARRAY * * outputOccs, VARIANT * actionEnums, VARIANT * planeEnums, VARIANT * userEnums );
__declspec(implementation_key(5155)) _bstr_t AssemblyMirror::GetName ( );
__declspec(implementation_key(5156)) HRESULT AssemblyMirror::Delete ( );
__declspec(implementation_key(5157)) TGFramework::ApplicationPtr _IAssemblyMirrorsAuto::GetApplication ( );
__declspec(implementation_key(5158)) IDispatchPtr _IAssemblyMirrorsAuto::GetParent ( );
__declspec(implementation_key(5159)) AssemblyMirrorPtr _IAssemblyMirrorsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(5160)) long _IAssemblyMirrorsAuto::GetCount ( );
__declspec(implementation_key(5161)) IUnknownPtr _IAssemblyMirrorsAuto::Get_NewEnum ( );
__declspec(implementation_key(5162)) TGFramework::ApplicationPtr _IAssemblyMirrorAuto::GetApplication ( );
__declspec(implementation_key(5163)) IDispatchPtr _IAssemblyMirrorAuto::GetParent ( );
__declspec(implementation_key(5164)) IDispatchPtr _IAssemblyMirrorAuto::GetMirrorPlane ( );
__declspec(implementation_key(5165)) enum AssemblyCopyStatusConstants _IAssemblyMirrorAuto::GetStatus ( );
__declspec(implementation_key(5166)) HRESULT _IAssemblyMirrorAuto::GetDefinition ( SAFEARRAY * * inputOccs, SAFEARRAY * * outputOccs, VARIANT * actionEnums, VARIANT * planeEnums, VARIANT * userEnums );
__declspec(implementation_key(5167)) _bstr_t _IAssemblyMirrorAuto::GetName ( );
__declspec(implementation_key(5168)) HRESULT _IAssemblyMirrorAuto::Delete ( );
__declspec(implementation_key(5169)) TGFramework::ApplicationPtr SimplifiedAssemblies::GetApplication ( );
__declspec(implementation_key(5170)) IDispatchPtr SimplifiedAssemblies::GetParent ( );
__declspec(implementation_key(5171)) SimplifiedAssemblyPtr SimplifiedAssemblies::Item ( const _variant_t & Index );
__declspec(implementation_key(5172)) long SimplifiedAssemblies::GetCount ( );
__declspec(implementation_key(5173)) SimplifiedAssemblyPtr SimplifiedAssemblies::GetAddVisible ( long NumOccurrenceExclude, SAFEARRAY * * OccurrenceExclude, double dExcludeRangeRatio, long NumOccurrenceInclude, SAFEARRAY * * OccurrenceInclude, enum VisibilityBasedSimplifiedAssemblyCopyType CopyType );
__declspec(implementation_key(5174)) SimplifiedAssemblyPtr SimplifiedAssemblies::GetAddModel ( );
__declspec(implementation_key(5175)) TGFramework::ApplicationPtr SimplifiedAssembly::GetApplication ( );
__declspec(implementation_key(5176)) IDispatchPtr SimplifiedAssembly::GetParent ( );
__declspec(implementation_key(5177)) VARIANT_BOOL SimplifiedAssembly::GetActivateSimplifiedAssembly ( );
__declspec(implementation_key(5178)) void SimplifiedAssembly::PutActivateSimplifiedAssembly ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5179)) enum SimplifiedAssemblyMode SimplifiedAssembly::GetSimplificationType ( );
__declspec(implementation_key(5180)) enum TGFramework::ObjectType SimplifiedAssembly::GetType ( );
__declspec(implementation_key(5181)) HRESULT SimplifiedAssembly::UpdateSimplifiedAssembly ( );
__declspec(implementation_key(5182)) HRESULT SimplifiedAssembly::DeleteSimplifiedAssembly ( );
__declspec(implementation_key(5183)) HRESULT SimplifiedAssembly::EditVisibleFaces ( long NumOccurrenceExclude, SAFEARRAY * * OccurrenceExclude, double dExcludeRangeRatio, long NumOccurrenceInclude, SAFEARRAY * * OccurrenceInclude, enum VisibilityBasedSimplifiedAssemblyCopyType CopyType );
__declspec(implementation_key(5184)) HRESULT SimplifiedAssembly::GetVisibleFaceInputs ( long * NumOccurrenceExclude, SAFEARRAY * * OccurrenceExclude, double * dExcludeRangeRatio, long * NumOccurrenceInclude, SAFEARRAY * * OccurrenceInclude, enum VisibilityBasedSimplifiedAssemblyCopyType * CopyType );
__declspec(implementation_key(5185)) HRESULT SimplifiedAssembly::SaveSimplifiedAssemblyAs ( _bstr_t SaveFileName );
__declspec(implementation_key(5186)) IDispatchPtr SimplifiedAssembly::GetSimplifiedModel ( );
__declspec(implementation_key(5187)) TGFramework::ApplicationPtr _ISimplifiedAssembliesAuto::GetApplication ( );
__declspec(implementation_key(5188)) IDispatchPtr _ISimplifiedAssembliesAuto::GetParent ( );
__declspec(implementation_key(5189)) SimplifiedAssemblyPtr _ISimplifiedAssembliesAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(5190)) IUnknownPtr _ISimplifiedAssembliesAuto::Get_NewEnum ( );
__declspec(implementation_key(5191)) long _ISimplifiedAssembliesAuto::GetCount ( );
__declspec(implementation_key(5192)) SimplifiedAssemblyPtr _ISimplifiedAssembliesAuto::GetAddVisible ( long NumOccurrenceExclude, SAFEARRAY * * OccurrenceExclude, double dExcludeRangeRatio, long NumOccurrenceInclude, SAFEARRAY * * OccurrenceInclude, enum VisibilityBasedSimplifiedAssemblyCopyType CopyType );
__declspec(implementation_key(5193)) SimplifiedAssemblyPtr _ISimplifiedAssembliesAuto::GetAddModel ( );
__declspec(implementation_key(5194)) TGFramework::ApplicationPtr _ISimplifiedAssemblyAuto::GetApplication ( );
__declspec(implementation_key(5195)) IDispatchPtr _ISimplifiedAssemblyAuto::GetParent ( );
__declspec(implementation_key(5196)) VARIANT_BOOL _ISimplifiedAssemblyAuto::GetActivateSimplifiedAssembly ( );
__declspec(implementation_key(5197)) void _ISimplifiedAssemblyAuto::PutActivateSimplifiedAssembly ( VARIANT_BOOL bActivate );
__declspec(implementation_key(5198)) enum SimplifiedAssemblyMode _ISimplifiedAssemblyAuto::GetSimplificationType ( );
__declspec(implementation_key(5199)) enum TGFramework::ObjectType _ISimplifiedAssemblyAuto::GetType ( );
__declspec(implementation_key(5200)) HRESULT _ISimplifiedAssemblyAuto::UpdateSimplifiedAssembly ( );
__declspec(implementation_key(5201)) HRESULT _ISimplifiedAssemblyAuto::DeleteSimplifiedAssembly ( );
__declspec(implementation_key(5202)) HRESULT _ISimplifiedAssemblyAuto::EditVisibleFaces ( long NumOccurrenceExclude, SAFEARRAY * * OccurrenceExclude, double dExcludeRangeRatio, long NumOccurrenceInclude, SAFEARRAY * * OccurrenceInclude, enum VisibilityBasedSimplifiedAssemblyCopyType CopyType );
__declspec(implementation_key(5203)) HRESULT _ISimplifiedAssemblyAuto::GetVisibleFaceInputs ( long * NumOccurrenceExclude, SAFEARRAY * * OccurrenceExclude, double * dExcludeRangeRatio, long * NumOccurrenceInclude, SAFEARRAY * * OccurrenceInclude, enum VisibilityBasedSimplifiedAssemblyCopyType * CopyType );
__declspec(implementation_key(5204)) HRESULT _ISimplifiedAssemblyAuto::SaveSimplifiedAssemblyAs ( _bstr_t SaveFileName );
__declspec(implementation_key(5205)) IDispatchPtr _ISimplifiedAssemblyAuto::GetSimplifiedModel ( );
__declspec(implementation_key(5206)) TGFramework::ApplicationPtr InternalComponents::GetApplication ( );
__declspec(implementation_key(5207)) IDispatchPtr InternalComponents::GetParent ( );
__declspec(implementation_key(5208)) InternalComponentPtr InternalComponents::Item ( const _variant_t & Index );
__declspec(implementation_key(5209)) long InternalComponents::GetCount ( );
__declspec(implementation_key(5210)) HRESULT InternalComponents::DeleteInternalComponent ( _bstr_t InternalComponentName );
__declspec(implementation_key(5211)) IDispatchPtr InternalComponents::CreateInternalComponent ( enum InternalComponentTypeConstant TypeConstant, _bstr_t InternalComponentName, VARIANT_BOOL GroundContraint, struct InternalComponent * * InternalComponent, IDispatch * ParentLocalComponent, const _variant_t & MaterialLibraryName, const _variant_t & MaterialName );
__declspec(implementation_key(5212)) void InternalComponents::PutShowBodyFeaturesOnly ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5213)) VARIANT_BOOL InternalComponents::GetShowBodyFeaturesOnly ( );
__declspec(implementation_key(5214)) TGFramework::ApplicationPtr _IInternalComponentsAuto::GetApplication ( );
__declspec(implementation_key(5215)) IDispatchPtr _IInternalComponentsAuto::GetParent ( );
__declspec(implementation_key(5216)) InternalComponentPtr _IInternalComponentsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(5217)) long _IInternalComponentsAuto::GetCount ( );
__declspec(implementation_key(5218)) IUnknownPtr _IInternalComponentsAuto::Get_NewEnum ( );
__declspec(implementation_key(5219)) HRESULT _IInternalComponentsAuto::DeleteInternalComponent ( _bstr_t InternalComponentName );
__declspec(implementation_key(5220)) IDispatchPtr _IInternalComponentsAuto::CreateInternalComponent ( enum InternalComponentTypeConstant TypeConstant, _bstr_t InternalComponentName, VARIANT_BOOL GroundContraint, struct InternalComponent * * InternalComponent, IDispatch * ParentLocalComponent, const _variant_t & MaterialLibraryName, const _variant_t & MaterialName );
__declspec(implementation_key(5221)) void _IInternalComponentsAuto::PutShowBodyFeaturesOnly ( VARIANT_BOOL BodyFeaturesOnly );
__declspec(implementation_key(5222)) VARIANT_BOOL _IInternalComponentsAuto::GetShowBodyFeaturesOnly ( );
__declspec(implementation_key(5223)) TGFramework::ApplicationPtr EndCaps::GetApplication ( );
__declspec(implementation_key(5224)) EndCapPtr EndCaps::Item ( const _variant_t & Index );
__declspec(implementation_key(5225)) long EndCaps::GetCount ( );
__declspec(implementation_key(5226)) EndCapPtr EndCaps::Add ( long NumSegments, SAFEARRAY * SegmentIds, _bstr_t MaterialName, VARIANT_BOOL CreateECBasedOnCrossSection, VARIANT_BOOL Inset, double InsetValue, VARIANT_BOOL Offset, double OffsetValue, VARIANT_BOOL RevOffset, VARIANT_BOOL CornerTreatment, double ChamferFilletValue, double Thickness, VARIANT_BOOL Inward, enum EndCapTreatmentConstants EndCapTreatment );
__declspec(implementation_key(5227)) EndCapPtr EndCaps::AddEx ( long NumSegments, SAFEARRAY * SegmentIds, _bstr_t MaterialName, VARIANT_BOOL CreateECBasedOnCrossSection, VARIANT_BOOL Inset, double InsetValue, VARIANT_BOOL Offset, double OffsetValue, VARIANT_BOOL RevOffset, VARIANT_BOOL CornerTreatment, double ChamferFilletValue, double Thickness, enum EndCapTypeConstants eEndCapType, enum EndCapTreatmentConstants EndCapTreatment );
__declspec(implementation_key(5228)) HRESULT EndCaps::Delete ( struct EndCap * EndCap );
__declspec(implementation_key(5229)) TGFramework::ApplicationPtr EndCap::GetApplication ( );
__declspec(implementation_key(5230)) _bstr_t EndCap::GetMaterial ( );
__declspec(implementation_key(5231)) void EndCap::PutMaterial ( _bstr_t _arg1 );
__declspec(implementation_key(5232)) double EndCap::GetThickness ( );
__declspec(implementation_key(5233)) void EndCap::PutThickness ( double _arg1 );
__declspec(implementation_key(5234)) enum EndCapTypeConstants EndCap::GetEndCapType ( );
__declspec(implementation_key(5235)) void EndCap::PutEndCapType ( enum EndCapTypeConstants _arg1 );
__declspec(implementation_key(5236)) VARIANT_BOOL EndCap::GetIsEndCapCreatedBasedOnCrossSection ( );
__declspec(implementation_key(5237)) void EndCap::PutIsEndCapCreatedBasedOnCrossSection ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5238)) double EndCap::GetChamfer ( );
__declspec(implementation_key(5239)) void EndCap::PutChamfer ( double _arg1 );
__declspec(implementation_key(5240)) double EndCap::GetFillet ( );
__declspec(implementation_key(5241)) void EndCap::PutFillet ( double _arg1 );
__declspec(implementation_key(5242)) double EndCap::GetInset ( );
__declspec(implementation_key(5243)) void EndCap::PutInset ( double _arg1 );
__declspec(implementation_key(5244)) HRESULT EndCap::ApplyOffset ( double dOffset, VARIANT_BOOL bCreatedBasedOnCrossSection, VARIANT_BOOL bReverseOffset, enum EndCapTypeConstants eEndCapType );
__declspec(implementation_key(5245)) HRESULT EndCap::GetOffsetDetails ( double * dOffset, VARIANT_BOOL * bIsCreatedBasedOnCrossSection, VARIANT_BOOL * bIsReverseOffset, enum EndCapTypeConstants * eEndCapType );
__declspec(implementation_key(5246)) TGPart::SuppressVariablePtr EndCap::GetSuppressionVariable ( );
__declspec(implementation_key(5247)) TGPart::SuppressVariablePtr EndCap::AddSuppressionVariable ( );
__declspec(implementation_key(5248)) HRESULT EndCap::DeleteSuppressionVariable ( );
__declspec(implementation_key(5249)) VARIANT_BOOL EndCap::HasSuppressionVariable ( );
__declspec(implementation_key(5250)) TGFramework::ApplicationPtr _IEndCapAuto::GetApplication ( );
__declspec(implementation_key(5251)) _bstr_t _IEndCapAuto::GetMaterial ( );
__declspec(implementation_key(5252)) void _IEndCapAuto::PutMaterial ( _bstr_t bsMaterial );
__declspec(implementation_key(5253)) double _IEndCapAuto::GetThickness ( );
__declspec(implementation_key(5254)) void _IEndCapAuto::PutThickness ( double dThickness );
__declspec(implementation_key(5255)) enum EndCapTypeConstants _IEndCapAuto::GetEndCapType ( );
__declspec(implementation_key(5256)) void _IEndCapAuto::PutEndCapType ( enum EndCapTypeConstants eEndCapType );
__declspec(implementation_key(5257)) VARIANT_BOOL _IEndCapAuto::GetIsEndCapCreatedBasedOnCrossSection ( );
__declspec(implementation_key(5258)) void _IEndCapAuto::PutIsEndCapCreatedBasedOnCrossSection ( VARIANT_BOOL bIsEndCapCreatedBasedOnCrossSection );
__declspec(implementation_key(5259)) double _IEndCapAuto::GetChamfer ( );
__declspec(implementation_key(5260)) void _IEndCapAuto::PutChamfer ( double dChamfer );
__declspec(implementation_key(5261)) double _IEndCapAuto::GetFillet ( );
__declspec(implementation_key(5262)) void _IEndCapAuto::PutFillet ( double dFillet );
__declspec(implementation_key(5263)) double _IEndCapAuto::GetInset ( );
__declspec(implementation_key(5264)) void _IEndCapAuto::PutInset ( double dInset );
__declspec(implementation_key(5265)) HRESULT _IEndCapAuto::ApplyOffset ( double dOffset, VARIANT_BOOL bCreatedBasedOnCrossSection, VARIANT_BOOL bReverseOffset, enum EndCapTypeConstants eEndCapType );
__declspec(implementation_key(5266)) HRESULT _IEndCapAuto::GetOffsetDetails ( double * dOffset, VARIANT_BOOL * bIsCreatedBasedOnCrossSection, VARIANT_BOOL * bIsReverseOffset, enum EndCapTypeConstants * eEndCapType );
__declspec(implementation_key(5267)) TGPart::SuppressVariablePtr _IEndCapAuto::GetSuppressionVariable ( );
__declspec(implementation_key(5268)) TGPart::SuppressVariablePtr _IEndCapAuto::AddSuppressionVariable ( );
__declspec(implementation_key(5269)) HRESULT _IEndCapAuto::DeleteSuppressionVariable ( );
__declspec(implementation_key(5270)) VARIANT_BOOL _IEndCapAuto::HasSuppressionVariable ( );
__declspec(implementation_key(5271)) TGFramework::ApplicationPtr _IEndCapsAuto::GetApplication ( );
__declspec(implementation_key(5272)) EndCapPtr _IEndCapsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(5273)) IUnknownPtr _IEndCapsAuto::Get_NewEnum ( );
__declspec(implementation_key(5274)) long _IEndCapsAuto::GetCount ( );
__declspec(implementation_key(5275)) EndCapPtr _IEndCapsAuto::Add ( long NumSegments, SAFEARRAY * SegmentIds, _bstr_t MaterialName, VARIANT_BOOL CreateECBasedOnCrossSection, VARIANT_BOOL Inset, double InsetValue, VARIANT_BOOL Offset, double OffsetValue, VARIANT_BOOL RevOffset, VARIANT_BOOL CornerTreatment, double ChamferFilletValue, double Thickness, VARIANT_BOOL Inward, enum EndCapTreatmentConstants EndCapTreatment );
__declspec(implementation_key(5276)) EndCapPtr _IEndCapsAuto::AddEx ( long NumSegments, SAFEARRAY * SegmentIds, _bstr_t MaterialName, VARIANT_BOOL CreateECBasedOnCrossSection, VARIANT_BOOL Inset, double InsetValue, VARIANT_BOOL Offset, double OffsetValue, VARIANT_BOOL RevOffset, VARIANT_BOOL CornerTreatment, double ChamferFilletValue, double Thickness, enum EndCapTypeConstants eEndCapType, enum EndCapTreatmentConstants EndCapTreatment );
__declspec(implementation_key(5277)) HRESULT _IEndCapsAuto::Delete ( struct EndCap * EndCap );
__declspec(implementation_key(5278)) TGFramework::ApplicationPtr SuppressComponent::GetApplication ( );
__declspec(implementation_key(5279)) HRESULT SuppressComponent::UnSuppress ( );
__declspec(implementation_key(5280)) HRESULT SuppressComponent::Delete ( );
__declspec(implementation_key(5281)) _bstr_t SuppressComponent::GetName ( );
__declspec(implementation_key(5282)) long SuppressComponent::GetOccurrenceID ( );
__declspec(implementation_key(5283)) _bstr_t SuppressComponent::GetOccurrenceFileName ( );
__declspec(implementation_key(5284)) IUnknownPtr SuppressComponent::GetOccurrenceDocument ( );
__declspec(implementation_key(5285)) TGPart::SuppressVariablePtr SuppressComponent::GetSuppressionVariable ( );
__declspec(implementation_key(5286)) TGPart::SuppressVariablePtr SuppressComponent::AddSuppressionVariable ( );
__declspec(implementation_key(5287)) HRESULT SuppressComponent::DeleteSuppressionVariable ( );
__declspec(implementation_key(5288)) VARIANT_BOOL SuppressComponent::HasSuppressionVariable ( );
__declspec(implementation_key(5289)) TGFramework::ApplicationPtr _ISuppressComponentAuto::GetApplication ( );
__declspec(implementation_key(5290)) HRESULT _ISuppressComponentAuto::UnSuppress ( );
__declspec(implementation_key(5291)) HRESULT _ISuppressComponentAuto::Delete ( );
__declspec(implementation_key(5292)) _bstr_t _ISuppressComponentAuto::GetName ( );
__declspec(implementation_key(5293)) long _ISuppressComponentAuto::GetOccurrenceID ( );
__declspec(implementation_key(5294)) _bstr_t _ISuppressComponentAuto::GetOccurrenceFileName ( );
__declspec(implementation_key(5295)) IUnknownPtr _ISuppressComponentAuto::GetOccurrenceDocument ( );
__declspec(implementation_key(5296)) TGPart::SuppressVariablePtr _ISuppressComponentAuto::GetSuppressionVariable ( );
__declspec(implementation_key(5297)) TGPart::SuppressVariablePtr _ISuppressComponentAuto::AddSuppressionVariable ( );
__declspec(implementation_key(5298)) HRESULT _ISuppressComponentAuto::DeleteSuppressionVariable ( );
__declspec(implementation_key(5299)) VARIANT_BOOL _ISuppressComponentAuto::HasSuppressionVariable ( );
__declspec(implementation_key(5300)) TGFramework::ApplicationPtr AsmCADDirects::GetApplication ( );
__declspec(implementation_key(5301)) IDispatchPtr AsmCADDirects::GetParent ( );
__declspec(implementation_key(5302)) long AsmCADDirects::GetCount ( );
__declspec(implementation_key(5303)) AsmCADDirectPtr AsmCADDirects::Add ( _bstr_t AsmCopyFileName );
__declspec(implementation_key(5304)) AsmCADDirectPtr AsmCADDirects::Item ( const _variant_t & Index );
__declspec(implementation_key(5305)) TGFramework::ApplicationPtr AsmCADDirect::GetApplication ( );
__declspec(implementation_key(5306)) IDispatchPtr AsmCADDirect::GetParent ( );
__declspec(implementation_key(5307)) HRESULT AsmCADDirect::Update ( );
__declspec(implementation_key(5308)) _bstr_t AsmCADDirect::GetName ( );
__declspec(implementation_key(5309)) void AsmCADDirect::PutName ( _bstr_t _arg1 );
__declspec(implementation_key(5310)) HRESULT AsmCADDirect::BreakFeatureLink ( );
__declspec(implementation_key(5311)) HRESULT AsmCADDirect::UpdateFeature ( );
__declspec(implementation_key(5312)) HRESULT AsmCADDirect::ChangeSourceFeature ( _bstr_t OldPath, _bstr_t NewPath );
__declspec(implementation_key(5313)) _bstr_t AsmCADDirect::SourcePath ( );
__declspec(implementation_key(5314)) TGFramework::ApplicationPtr _IAsmCADDirectsAuto::GetApplication ( );
__declspec(implementation_key(5315)) IDispatchPtr _IAsmCADDirectsAuto::GetParent ( );
__declspec(implementation_key(5316)) long _IAsmCADDirectsAuto::GetCount ( );
__declspec(implementation_key(5317)) AsmCADDirectPtr _IAsmCADDirectsAuto::Add ( _bstr_t AsmCopyFileName );
__declspec(implementation_key(5318)) AsmCADDirectPtr _IAsmCADDirectsAuto::Item ( const _variant_t & Index );
__declspec(implementation_key(5319)) IUnknownPtr _IAsmCADDirectsAuto::Get_NewEnum ( );
__declspec(implementation_key(5320)) TGFramework::ApplicationPtr _IAsmCADDirectAuto::GetApplication ( );
__declspec(implementation_key(5321)) IDispatchPtr _IAsmCADDirectAuto::GetParent ( );
__declspec(implementation_key(5322)) HRESULT _IAsmCADDirectAuto::Update ( );
__declspec(implementation_key(5323)) _bstr_t _IAsmCADDirectAuto::GetName ( );
__declspec(implementation_key(5324)) void _IAsmCADDirectAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(5325)) HRESULT _IAsmCADDirectAuto::BreakFeatureLink ( );
__declspec(implementation_key(5326)) HRESULT _IAsmCADDirectAuto::UpdateFeature ( );
__declspec(implementation_key(5327)) HRESULT _IAsmCADDirectAuto::ChangeSourceFeature ( _bstr_t OldPath, _bstr_t NewPath );
__declspec(implementation_key(5328)) _bstr_t _IAsmCADDirectAuto::SourcePath ( );
__declspec(implementation_key(5329)) HRESULT _IAssemblyDocumentAuto::Activate ( );
__declspec(implementation_key(5330)) TGFramework::ApplicationPtr _IAssemblyDocumentAuto::GetApplication ( );
__declspec(implementation_key(5331)) HRESULT _IAssemblyDocumentAuto::Close ( const _variant_t & SaveChanges, const _variant_t & FileName, const _variant_t & RouteWorkbook );
__declspec(implementation_key(5332)) _bstr_t _IAssemblyDocumentAuto::GetFullName ( );
__declspec(implementation_key(5333)) _bstr_t _IAssemblyDocumentAuto::GetName ( );
__declspec(implementation_key(5334)) TGFramework::ApplicationPtr _IAssemblyDocumentAuto::GetParent ( );
__declspec(implementation_key(5335)) _bstr_t _IAssemblyDocumentAuto::GetPath ( );
__declspec(implementation_key(5336)) HRESULT _IAssemblyDocumentAuto::PrintOut ( const _variant_t & Printer, const _variant_t & NumCopies, const _variant_t & Orientation, const _variant_t & PaperSize, const _variant_t & Scale, const _variant_t & PrintToFile, const _variant_t & OutputFileName, const _variant_t & PrintRange, const _variant_t & Sheets, const _variant_t & ColorAsBlack, const _variant_t & Collate );
__declspec(implementation_key(5337)) VARIANT_BOOL _IAssemblyDocumentAuto::GetReadOnly ( );
__declspec(implementation_key(5338)) IDispatchPtr _IAssemblyDocumentAuto::GetRoutingSlip ( );
__declspec(implementation_key(5339)) HRESULT _IAssemblyDocumentAuto::Save ( );
__declspec(implementation_key(5340)) HRESULT _IAssemblyDocumentAuto::SaveAs ( _bstr_t NewName, const _variant_t & IsATemplate, const _variant_t & FileFormat, const _variant_t & ReadOnlyEnforced, const _variant_t & ReadOnlyRecommended, const _variant_t & NewStatus, const _variant_t & CreateBackup, const _variant_t & UpdateLinkInContainer, const _variant_t & UpdateAllLinksInContainer );
__declspec(implementation_key(5341)) HRESULT _IAssemblyDocumentAuto::SaveCopyAs ( _bstr_t Name );
__declspec(implementation_key(5342)) HRESULT _IAssemblyDocumentAuto::SaveAsJT ( _bstr_t NewName, const _variant_t & Include_PreciseGeom, const _variant_t & Prod_Structure_Option, const _variant_t & Export_PMI, const _variant_t & Export_CoordinateSystem, const _variant_t & Export_3DBodies, const _variant_t & NumberofLODs, const _variant_t & JTFileUnit, const _variant_t & Write_Which_Files, const _variant_t & Use_Simplified_TopAsm, const _variant_t & Use_Simplified_SubAsm, const _variant_t & Use_Simplified_Part, const _variant_t & EnableDefaultOutputPath, const _variant_t & IncludeSEProperties, const _variant_t & Export_VisiblePartsOnly, const _variant_t & Export_VisibleConstructionsOnly, const _variant_t & RemoveUnsafeCharacters, const _variant_t & ExportSEPartFileAsSingleJTFile );
__declspec(implementation_key(5343)) _bstr_t _IAssemblyDocumentAuto::SaveAsBIDM ( _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title );
__declspec(implementation_key(5344)) _bstr_t _IAssemblyDocumentAuto::ReviseBIDM ( _bstr_t FilePath, _bstr_t Revision, _bstr_t Title );
__declspec(implementation_key(5345)) TGFramework::SelectSetPtr _IAssemblyDocumentAuto::GetSelectSet ( );
__declspec(implementation_key(5346)) HRESULT _IAssemblyDocumentAuto::SendMail ( const _variant_t & Recipients, const _variant_t & Subject, const _variant_t & ReturnReceipt );
__declspec(implementation_key(5347)) IDispatchPtr _IAssemblyDocumentAuto::GetSummaryInfo ( );
__declspec(implementation_key(5348)) TGFramework::WindowsPtr _IAssemblyDocumentAuto::GetWindows ( );
__declspec(implementation_key(5349)) IDispatchPtr _IAssemblyDocumentAuto::GetProperties ( );
__declspec(implementation_key(5350)) VARIANT_BOOL _IAssemblyDocumentAuto::GetIsTemplate ( );
__declspec(implementation_key(5351)) void _IAssemblyDocumentAuto::PutIsTemplate ( VARIANT_BOOL IsTemplate );
__declspec(implementation_key(5352)) enum TGFramework::DocumentStatus _IAssemblyDocumentAuto::GetStatus ( );
__declspec(implementation_key(5353)) void _IAssemblyDocumentAuto::PutStatus ( enum TGFramework::DocumentStatus Status );
__declspec(implementation_key(5354)) HRESULT _IAssemblyDocumentAuto::EditProperties ( );
__declspec(implementation_key(5355)) TGFramework::UnitsOfMeasurePtr _IAssemblyDocumentAuto::GetUnitsOfMeasure ( );
__declspec(implementation_key(5356)) IDispatchPtr _IAssemblyDocumentAuto::GetActiveSketch ( );
__declspec(implementation_key(5357)) enum TGFramework::DocumentTypeConstants _IAssemblyDocumentAuto::GetType ( );
__declspec(implementation_key(5358)) IUnknownPtr _IAssemblyDocumentAuto::GetDocumentEvents ( );
__declspec(implementation_key(5359)) IUnknownPtr _IAssemblyDocumentAuto::GetRootStorage ( );
__declspec(implementation_key(5360)) IUnknownPtr _IAssemblyDocumentAuto::GetAddInsStorage ( _bstr_t Name, long grfMode );
__declspec(implementation_key(5361)) VARIANT_BOOL _IAssemblyDocumentAuto::GetDirty ( );
__declspec(implementation_key(5362)) void _IAssemblyDocumentAuto::PutDirty ( VARIANT_BOOL Dirty );
__declspec(implementation_key(5363)) TGFramework::AttributeQueryPtr _IAssemblyDocumentAuto::GetAttributeQuery ( );
__declspec(implementation_key(5364)) _bstr_t _IAssemblyDocumentAuto::GetCreatedVersion ( );
__declspec(implementation_key(5365)) _bstr_t _IAssemblyDocumentAuto::GetLastSavedVersion ( );
__declspec(implementation_key(5366)) TGFramework::HighlightSetsPtr _IAssemblyDocumentAuto::GetHighlightSets ( );
__declspec(implementation_key(5367)) VARIANT_BOOL _IAssemblyDocumentAuto::GetInPlaceActivated ( );
__declspec(implementation_key(5368)) HRESULT _IAssemblyDocumentAuto::SeekWriteAccess ( VARIANT_BOOL * WriteAccess );
__declspec(implementation_key(5369)) long _IAssemblyDocumentAuto::GetUndoSteps ( );
__declspec(implementation_key(5370)) void _IAssemblyDocumentAuto::PutUndoSteps ( long NumberOfUndoSteps );
__declspec(implementation_key(5371)) HRESULT _IAssemblyDocumentAuto::CreatePreview ( );
__declspec(implementation_key(5372)) void _IAssemblyDocumentAuto::PutReadOnly ( VARIANT_BOOL ReadOnly );
__declspec(implementation_key(5373)) HRESULT _IAssemblyDocumentAuto::SeekReadOnlyAccess ( VARIANT_BOOL * ReadOnlyAccess );
__declspec(implementation_key(5374)) HRESULT _IAssemblyDocumentAuto::ImportStyles2 ( enum TGFramework::seStyleTypeConstants StyleType, VARIANT_BOOL bReplace, IDispatch * pSrcDocument );
__declspec(implementation_key(5375)) VARIANT_BOOL _IAssemblyDocumentAuto::GetIsInsightFile ( );
__declspec(implementation_key(5376)) TGFramework::NamedViewsPtr _IAssemblyDocumentAuto::GetNamedViews ( );
__declspec(implementation_key(5377)) HRESULT _IAssemblyDocumentAuto::GetRegisteredCustomPropertiesBiDM ( VARIANT * varPropInfo );
__declspec(implementation_key(5378)) _bstr_t _IAssemblyDocumentAuto::SaveAsWithCustomPropertiesBIDM ( _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title, const _variant_t & varPropInfo );
__declspec(implementation_key(5379)) _bstr_t _IAssemblyDocumentAuto::ReviseWithCustomPropertiesBIDM ( _bstr_t FilePath, _bstr_t Revision, _bstr_t Title, const _variant_t & varPropInfo );
__declspec(implementation_key(5380)) HRESULT _IAssemblyDocumentAuto::SaveAsPRC ( _bstr_t FileName );
__declspec(implementation_key(5381)) IDispatchPtr _IAssemblyDocumentAuto::GetVariables ( );
__declspec(implementation_key(5382)) IDispatchPtr _IAssemblyDocumentAuto::GetInterpartLinks ( );
__declspec(implementation_key(5383)) HRESULT _IAssemblyDocumentAuto::FreezeAllInterpartLinks ( );
__declspec(implementation_key(5384)) HRESULT _IAssemblyDocumentAuto::BreakAllInterpartLinks ( );
__declspec(implementation_key(5385)) HRESULT _IAssemblyDocumentAuto::ThawAllInterpartLinks ( );
__declspec(implementation_key(5386)) HRESULT _IAssemblyDocumentAuto::HasInterpartLinks ( VARIANT_BOOL * pbHasInterpartLinks );
__declspec(implementation_key(5387)) HRESULT _IAssemblyDocumentAuto::GetInContextAssemblyNameForInterpartLinks ( BSTR * pbstrAssemblyName );
__declspec(implementation_key(5388)) _variant_t _IAssemblyDocumentAuto::NewWindow ( const _variant_t & NewWindowOptions, const _variant_t & Environment );
__declspec(implementation_key(5389)) HRESULT _IAssemblyDocumentAuto::NewNavigatorWindow ( );
__declspec(implementation_key(5390)) PartsPtr _IAssemblyDocumentAuto::GetParts ( );
__declspec(implementation_key(5391)) Relations3dPtr _IAssemblyDocumentAuto::GetRelations3d ( );
__declspec(implementation_key(5392)) PhysicalPropertiesPtr _IAssemblyDocumentAuto::GetPhysicalProperties ( );
__declspec(implementation_key(5393)) IDispatchPtr _IAssemblyDocumentAuto::GetFaceStyles ( );
__declspec(implementation_key(5394)) IDispatchPtr _IAssemblyDocumentAuto::CreateReference ( struct Occurrence * Occurrence, const _variant_t & Entity );
__declspec(implementation_key(5395)) OccurrencesPtr _IAssemblyDocumentAuto::GetOccurrences ( );
__declspec(implementation_key(5396)) AsmRefPlanesPtr _IAssemblyDocumentAuto::GetAsmRefPlanes ( );
__declspec(implementation_key(5397)) HRESULT _IAssemblyDocumentAuto::CheckInterference ( long NumElementsSet1, SAFEARRAY * * Set1, enum InterferenceStatusConstants * Status, const _variant_t & ComparisonMethod, const _variant_t & NumElementsSet2, const _variant_t & Set2, const _variant_t & AddInterferenceAsOccurrence, const _variant_t & ReportFilename, const _variant_t & ReportType, VARIANT * NumInterferences, VARIANT * InterferingPartsSet1, VARIANT * InterferingPartsOtherSet, VARIANT * ConfirmedInterference, VARIANT * InterferenceOccurrence, const _variant_t & IgnoreThreadInterferences );
__declspec(implementation_key(5398)) HRESULT _IAssemblyDocumentAuto::BindKeyToObject ( SAFEARRAY * * ReferenceKey, IDispatch * * Object );
__declspec(implementation_key(5399)) TGPart::CoordinateSystemsPtr _IAssemblyDocumentAuto::GetCoordinateSystems ( );
__declspec(implementation_key(5400)) TGPart::StudyOwnerPtr _IAssemblyDocumentAuto::GetStudyOwner ( );
__declspec(implementation_key(5401)) HRESULT _IAssemblyDocumentAuto::MinimumDistance ( IDispatch * Element1, IDispatch * Element2, double * Distance, SAFEARRAY * * Point1, SAFEARRAY * * Point2 );
__declspec(implementation_key(5402)) IUnknownPtr _IAssemblyDocumentAuto::GetAssemblyRecomputeEvents ( );
__declspec(implementation_key(5403)) LayoutsPtr _IAssemblyDocumentAuto::GetLayouts ( );
__declspec(implementation_key(5404)) LineSegmentsPtr _IAssemblyDocumentAuto::GetLineSegments ( );
__declspec(implementation_key(5405)) SegmentsPtr _IAssemblyDocumentAuto::GetSegments ( );
__declspec(implementation_key(5406)) HRESULT _IAssemblyDocumentAuto::GetGlobalParameter ( enum AssemblyGlobalConstants Parameter, VARIANT * Value );
__declspec(implementation_key(5407)) HRESULT _IAssemblyDocumentAuto::SetGlobalParameter ( enum AssemblyGlobalConstants Parameter, const _variant_t & Value );
__declspec(implementation_key(5408)) TGFramework::SensorsPtr _IAssemblyDocumentAuto::GetSensors ( );
__declspec(implementation_key(5409)) long _IAssemblyDocumentAuto::GetCutawaysCount ( );
__declspec(implementation_key(5410)) long _IAssemblyDocumentAuto::GetExplosionsCount ( );
__declspec(implementation_key(5411)) ArcSegmentsPtr _IAssemblyDocumentAuto::GetArcSegments ( );
__declspec(implementation_key(5412)) SegmentRelations3dPtr _IAssemblyDocumentAuto::GetSegmentRelations3d ( );
__declspec(implementation_key(5413)) QueriesPtr _IAssemblyDocumentAuto::GetQueries ( );
__declspec(implementation_key(5414)) TGFramework::SelectSetPtr _IAssemblyDocumentAuto::GetRelationshipsSelectSet ( );
__declspec(implementation_key(5415)) AssemblyFamilyMembersPtr _IAssemblyDocumentAuto::GetAssemblyFamilyMembers ( );
__declspec(implementation_key(5416)) VARIANT_BOOL _IAssemblyDocumentAuto::GetIsFileFamilyByDocument ( );
__declspec(implementation_key(5417)) VARIANT_BOOL _IAssemblyDocumentAuto::GetIsFileAlternatePositionByDocument ( );
__declspec(implementation_key(5418)) HRESULT _IAssemblyDocumentAuto::CreateFamilyFile ( _bstr_t FirstMemberName, _bstr_t SecondMemberName, VARIANT_BOOL bCreateAlternatePosition );
__declspec(implementation_key(5419)) HRESULT _IAssemblyDocumentAuto::DisperseSubassembly ( IDispatch * Subassembly, VARIANT_BOOL bAllOccurrences );
__declspec(implementation_key(5420)) HRESULT _IAssemblyDocumentAuto::TransferOccurrences ( SAFEARRAY * * OccurrencesToTransfer, const _variant_t & Subassembly );
__declspec(implementation_key(5421)) OccurrencePtr _IAssemblyDocumentAuto::BundleOccurrences ( SAFEARRAY * * OccurrencesToTransfer, _bstr_t OccurrenceFileName, const _variant_t & TemplateFileName, const _variant_t & Subassembly );
__declspec(implementation_key(5422)) AssemblyPatternsPtr _IAssemblyDocumentAuto::GetAssemblyPatterns ( );
__declspec(implementation_key(5423)) HRESULT _IAssemblyDocumentAuto::MeasureAngle ( IDispatch * Element1, IDispatch * Element2, double * TrueAngle, double * ApparentAngle, const _variant_t & Element3 );
__declspec(implementation_key(5424)) HRESULT _IAssemblyDocumentAuto::NormalDistance ( IDispatch * Element1, IDispatch * Element2, double * TrueDistance, double * ApparentDistance, double * DeltaX, double * DeltaY, double * DeltaZ, const _variant_t & CoordinateSystem );
__declspec(implementation_key(5425)) ConfigurationsPtr _IAssemblyDocumentAuto::GetConfigurations ( );
__declspec(implementation_key(5426)) HRESULT _IAssemblyDocumentAuto::RenameFile ( _bstr_t OldPath, _bstr_t NewPath );
__declspec(implementation_key(5427)) HRESULT _IAssemblyDocumentAuto::SetExternalPaths ( SAFEARRAY * * VecUnopenedPath );
__declspec(implementation_key(5428)) HRESULT _IAssemblyDocumentAuto::UpdateExternalPaths ( );
__declspec(implementation_key(5429)) IDispatchPtr _IAssemblyDocumentAuto::GetViewStyles ( );
__declspec(implementation_key(5430)) HRESULT _IAssemblyDocumentAuto::ImportStyles ( _bstr_t FileName, const _variant_t & Overwrite );
__declspec(implementation_key(5431)) WireRunsPtr _IAssemblyDocumentAuto::GetWireRuns ( );
__declspec(implementation_key(5432)) WirePathsPtr _IAssemblyDocumentAuto::GetWirePaths ( );
__declspec(implementation_key(5433)) AssemblyPropertiesPtr _IAssemblyDocumentAuto::GetAssemblyProperties ( );
__declspec(implementation_key(5434)) CurveSegmentsPtr _IAssemblyDocumentAuto::GetCurveSegments ( );
__declspec(implementation_key(5435)) HRESULT _IAssemblyDocumentAuto::GenerateWireReport ( enum AssemblyReportTypeConstants ReportType, const _variant_t & FileNameToSaveReport, int FieldsToGenerate );
__declspec(implementation_key(5436)) HRESULT _IAssemblyDocumentAuto::ActivateAll ( );
__declspec(implementation_key(5437)) HRESULT _IAssemblyDocumentAuto::UpdateAll ( );
__declspec(implementation_key(5438)) HRESULT _IAssemblyDocumentAuto::GetContainerDocumentAndMatrixOfIPADoc ( IDispatch * * ContainerDocument, SAFEARRAY * * Matrix );
__declspec(implementation_key(5439)) HRESULT _IAssemblyDocumentAuto::CopySketch ( IDispatch * SourceLayoutOrSketch, IDispatch * TargetPartOrAssembly, VARIANT_BOOL bAssociativeCopy, VARIANT * pvCopySketchErrorStatus );
__declspec(implementation_key(5440)) long _IAssemblyDocumentAuto::GetGeometricVersion ( );
__declspec(implementation_key(5441)) VARIANT_BOOL _IAssemblyDocumentAuto::GetIsGeometricVersionDirty ( );
__declspec(implementation_key(5442)) IDispatchPtr _IAssemblyDocumentAuto::GetDimensionStyles ( );
__declspec(implementation_key(5443)) TGFramework::LayersPtr _IAssemblyDocumentAuto::GetLayers ( );
__declspec(implementation_key(5444)) TGPart::MeasureVariablePtr _IAssemblyDocumentAuto::AddMeasureVariable ( enum TGPart::MeasureVariableTypeConstants Type, enum TGPart::MeasureVariableValueConstants ValueType, IDispatch * Geom1, IDispatch * Geom2, const _variant_t & Geom3 );
__declspec(implementation_key(5445)) VirtualComponentOccurrencesPtr _IAssemblyDocumentAuto::GetVirtualComponentOccurrences ( );
__declspec(implementation_key(5446)) HRESULT _IAssemblyDocumentAuto::PublishVirtualComponents ( );
__declspec(implementation_key(5447)) VARIANT_BOOL _IAssemblyDocumentAuto::GetHidePreviousLevel ( );
__declspec(implementation_key(5448)) void _IAssemblyDocumentAuto::PutHidePreviousLevel ( VARIANT_BOOL bHidePreviousLevel );
__declspec(implementation_key(5449)) long _IAssemblyDocumentAuto::GetProfileUndoSteps ( );
__declspec(implementation_key(5450)) void _IAssemblyDocumentAuto::PutProfileUndoSteps ( long NumberOfUndoSteps );
__declspec(implementation_key(5451)) HRESULT _IAssemblyDocumentAuto::CreateOrEditSimplifiedAssembly ( long NumOccurrenceExclude, SAFEARRAY * * OccurrenceExclude, double dExcludeRangeRatio, long NumOccurrenceInclude, SAFEARRAY * * OccurrenceInclude );
__declspec(implementation_key(5452)) HRESULT _IAssemblyDocumentAuto::GetSimplifiedAssemblyInputs ( long * NumOccurrenceExclude, SAFEARRAY * * OccurrenceExclude, double * dExcludeRangeRatio, long * NumOccurrenceInclude, SAFEARRAY * * OccurrenceInclude );
__declspec(implementation_key(5453)) HRESULT _IAssemblyDocumentAuto::UpdateSimplifiedAssembly ( );
__declspec(implementation_key(5454)) VARIANT_BOOL _IAssemblyDocumentAuto::GetIsAssemblySimplified ( );
__declspec(implementation_key(5455)) HRESULT _IAssemblyDocumentAuto::DeleteSimplifiedAssembly ( );
__declspec(implementation_key(5456)) HRESULT _IAssemblyDocumentAuto::SaveSimplifiedAssemblyAs ( _bstr_t SaveFileName );
__declspec(implementation_key(5457)) VARIANT_BOOL _IAssemblyDocumentAuto::GetIsSimplifyStateActive ( );
__declspec(implementation_key(5458)) StructuralFramesPtr _IAssemblyDocumentAuto::GetStructuralFrames ( );
__declspec(implementation_key(5459)) VARIANT_BOOL _IAssemblyDocumentAuto::GetHasCapturedRelationships ( );
__declspec(implementation_key(5460)) AssemblyFeaturesPtr _IAssemblyDocumentAuto::GetAssemblyFeatures ( );
__declspec(implementation_key(5461)) AssemblyDrivenPartFeaturesPtr _IAssemblyDocumentAuto::GetAssemblyDrivenPartFeatures ( );
__declspec(implementation_key(5462)) long _IAssemblyDocumentAuto::GetCapturedRelationshipCount ( );
__declspec(implementation_key(5463)) HRESULT _IAssemblyDocumentAuto::GetCapturedRelationshipInformation ( SAFEARRAY * * RelationshipTypes, SAFEARRAY * * OffsetTypes, SAFEARRAY * * Offsets, VARIANT * Faces );
__declspec(implementation_key(5464)) PipesPtr _IAssemblyDocumentAuto::GetPipes ( );
__declspec(implementation_key(5465)) ComponentLayoutsPtr _IAssemblyDocumentAuto::GetComponentLayouts ( );
__declspec(implementation_key(5466)) PathsPtr _IAssemblyDocumentAuto::GetPaths ( );
__declspec(implementation_key(5467)) HRESULT _IAssemblyDocumentAuto::UpdateDocument ( const _variant_t & FutureUse1, const _variant_t & FutureUse2 );
__declspec(implementation_key(5468)) HarnessesPtr _IAssemblyDocumentAuto::GetHarnesses ( );
__declspec(implementation_key(5469)) TGPart::LabelWeldDataCollectionPtr _IAssemblyDocumentAuto::GetLabelWeldDataCollection ( );
__declspec(implementation_key(5470)) void _IAssemblyDocumentAuto::PutWeldmentAssembly ( VARIANT_BOOL IsWeldmentAssembly );
__declspec(implementation_key(5471)) VARIANT_BOOL _IAssemblyDocumentAuto::GetWeldmentAssembly ( );
__declspec(implementation_key(5472)) void _IAssemblyDocumentAuto::PutWeldmentAssemblyBeadMaterial ( _bstr_t BeadMaterial );
__declspec(implementation_key(5473)) _bstr_t _IAssemblyDocumentAuto::GetWeldmentAssemblyBeadMaterial ( );
__declspec(implementation_key(5474)) void _IAssemblyDocumentAuto::PutWeldmentAssemblyBeadDensity ( double BeadDensity );
__declspec(implementation_key(5475)) double _IAssemblyDocumentAuto::GetWeldmentAssemblyBeadDensity ( );
__declspec(implementation_key(5476)) HRESULT _IAssemblyDocumentAuto::GetBaseStyle ( enum AssemblyBaseStylesConstants BaseStyleType, struct TGFramework::FaceStyle * * BaseStyle );
__declspec(implementation_key(5477)) HRESULT _IAssemblyDocumentAuto::SetBaseStyle ( enum AssemblyBaseStylesConstants BaseStyleType, struct TGFramework::FaceStyle * BaseStyle );
__declspec(implementation_key(5478)) HRESULT _IAssemblyDocumentAuto::SaveModelAs ( IDispatch * Occurrence, _bstr_t SaveFileName );
__declspec(implementation_key(5479)) void _IAssemblyDocumentAuto::PutActivateSimplifiedAssembly ( VARIANT_BOOL bActivate );
__declspec(implementation_key(5480)) VARIANT_BOOL _IAssemblyDocumentAuto::GetActivateSimplifiedAssembly ( );
__declspec(implementation_key(5481)) TGPart::HoleDataCollectionPtr _IAssemblyDocumentAuto::GetHoleDataCollection ( );
__declspec(implementation_key(5482)) HRESULT _IAssemblyDocumentAuto::GenerateWireHarnessReport ( enum AssemblyWireHarnessReportTypeConstants ReportType, const _variant_t & FileNameToSaveReport, const _variant_t & Selection, const _variant_t & Window, const _variant_t & NumberOfReportProperties, const _variant_t & AssemblyReportProperties, const _variant_t & NumberOfSortItems, const _variant_t & SortProperties, const _variant_t & SortOrder, const _variant_t & Justification, const _variant_t & UpdateTemplate );
__declspec(implementation_key(5483)) AssemblyBodiesPtr _IAssemblyDocumentAuto::GetAssemblyBodies ( );
__declspec(implementation_key(5484)) IDispatchPtr _IAssemblyDocumentAuto::CreateReference2 ( IDispatch * Object, const _variant_t & Entity );
__declspec(implementation_key(5485)) HRESULT _IAssemblyDocumentAuto::UpdatePathfinder ( enum AssemblyPathfinderUpdateConstants UpdateType );
__declspec(implementation_key(5486)) ZonesPtr _IAssemblyDocumentAuto::GetZones ( );
__declspec(implementation_key(5487)) HRESULT _IAssemblyDocumentAuto::UpdateStructureCache ( enum UpdateStructureCacheConstants UpdateType );
__declspec(implementation_key(5488)) HRESULT _IAssemblyDocumentAuto::DeleteStructureCache ( );
__declspec(implementation_key(5489)) FastenerSystemsPtr _IAssemblyDocumentAuto::GetFastenerSystems ( );
__declspec(implementation_key(5490)) AssemblyGroupsPtr _IAssemblyDocumentAuto::GetAssemblyGroups ( );
__declspec(implementation_key(5491)) HRESULT _IAssemblyDocumentAuto::CheckInterference2 ( long NumElementsSet1, SAFEARRAY * * Set1, enum InterferenceStatusConstants * Status, const _variant_t & ComparisonMethod, const _variant_t & NumElementsSet2, const _variant_t & Set2, const _variant_t & AddInterferenceAsOccurrence, const _variant_t & ReportFilename, const _variant_t & ReportType, VARIANT * NumInterferences, VARIANT * InterferingPartsSet1, VARIANT * InterferingPartsOtherSet, VARIANT * ConfirmedInterference, VARIANT * InterferenceOccurrence, const _variant_t & IgnoreSameNominalDiaConstant, const _variant_t & IgnoreNonThreadVsThreadConstant );
__declspec(implementation_key(5492)) HRESULT _IAssemblyDocumentAuto::CheckInterference3 ( long NumElementsSet1, SAFEARRAY * * Set1, enum InterferenceStatusConstants * Status, const _variant_t & ComparisonMethod, const _variant_t & NumElementsSet2, const _variant_t & Set2, const _variant_t & AddInterferenceAsOccurrence, const _variant_t & ReportFilename, const _variant_t & ReportType, VARIANT * NumInterferences, VARIANT * InterferingPartsSet1, VARIANT * InterferingPartsOtherSet, VARIANT * ConfirmedInterference, VARIANT * InterferenceOccurrence, const _variant_t & IgnoreSameNominalDiaConstant, const _variant_t & IgnoreNonThreadVsThreadConstant, VARIANT_BOOL bAllowConstructions, VARIANT_BOOL bShowInterferenceVolume );
__declspec(implementation_key(5493)) HRESULT _IAssemblyDocumentAuto::TranslateMultipleOccurrences ( long lNumberOfOccurrences, SAFEARRAY * * Occurrences, enum MoveMultipleMoveTypeConstants MoveType, enum MoveMultipleRelationshipConstants RelationshipMaintenance, double FromX, double FromY, double FromZ, double ToX, double ToY, double ToZ, VARIANT * MovedOrCopiedOccurrences );
__declspec(implementation_key(5494)) HRESULT _IAssemblyDocumentAuto::RotateMultipleOccurrences ( long lNumberOfOccurrences, SAFEARRAY * * Occurrences, enum MoveMultipleMoveTypeConstants MoveType, enum MoveMultipleRelationshipConstants RelationshipMaintenance, double AxisX, double AxisY, double AxisZ, double Angle, VARIANT * MovedOrCopiedOccurrences );
__declspec(implementation_key(5495)) HRESULT _IAssemblyDocumentAuto::GoalSeek ( _bstr_t NameTargetVariable, _bstr_t NameVariableToChange, double dTargetValue, double dTimeLimitInSecs, long NumIterationsLimit, double * dTimeElapsed, long * NumIterations, VARIANT_BOOL * TimeLimitExceeded, VARIANT_BOOL * IterationsLimitExceeded );
__declspec(implementation_key(5496)) IDispatchPtr _IAssemblyDocumentAuto::GetPMI ( );
__declspec(implementation_key(5497)) HRESULT _IAssemblyDocumentAuto::PMI_ByModelState ( IDispatch * * PMIObj, enum TGPart::PMIModelStateConstants PMIModelState );
__declspec(implementation_key(5498)) _bstr_t _IAssemblyDocumentAuto::GetDisplayName ( );
__declspec(implementation_key(5499)) ItemNumbersPtr _IAssemblyDocumentAuto::GetItemNumbers ( );
__declspec(implementation_key(5500)) TGPart::ConstructionsPtr _IAssemblyDocumentAuto::GetConstructions ( );
__declspec(implementation_key(5501)) HRESULT _IAssemblyDocumentAuto::GetContainerDocumentAndOccurrenceOfIPADoc ( IDispatch * * ContainerDocument, IDispatch * * IPAOccurrence );
__declspec(implementation_key(5502)) HRESULT _IAssemblyDocumentAuto::GetTopDocumentAndSubOccurrenceOfIPADoc ( IDispatch * * TopDocument, IDispatch * * IPASubOccurrence );
__declspec(implementation_key(5503)) IDispatchPtr _IAssemblyDocumentAuto::GetLinearStyles ( );
__declspec(implementation_key(5504)) IDispatchPtr _IAssemblyDocumentAuto::GetFillStyles ( );
__declspec(implementation_key(5505)) IDispatchPtr _IAssemblyDocumentAuto::GetHatchPatternStyles ( );
__declspec(implementation_key(5506)) IUnknownPtr _IAssemblyDocumentAuto::GetAssemblyFamilyEvents ( );
__declspec(implementation_key(5507)) IUnknownPtr _IAssemblyDocumentAuto::GetAssemblyFamilyEvents2 ( );
__declspec(implementation_key(5508)) TGFramework::SectionViewsPtr _IAssemblyDocumentAuto::GetSectionViews ( );
__declspec(implementation_key(5509)) HRESULT _IAssemblyDocumentAuto::Range ( double * x_min, double * y_min, double * z_min, double * x_max, double * y_max, double * z_max );
__declspec(implementation_key(5510)) HRESULT _IAssemblyDocumentAuto::ReplaceComponents ( SAFEARRAY * * TargetComponents, _bstr_t ReplacementFilePath, enum ConstraintReplacementConstants ConstraintReplacementOption );
__declspec(implementation_key(5511)) VARIANT_BOOL _IAssemblyDocumentAuto::GetIsMultiCADDriven ( );
__declspec(implementation_key(5512)) AssemblyCopiesPtr _IAssemblyDocumentAuto::GetAssemblyCopies ( );
__declspec(implementation_key(5513)) AssemblyMirrorsPtr _IAssemblyDocumentAuto::GetAssemblyMirrors ( );
__declspec(implementation_key(5514)) SimplifiedAssembliesPtr _IAssemblyDocumentAuto::GetSimplifiedAssemblies ( );
__declspec(implementation_key(5515)) IUnknownPtr _IAssemblyDocumentAuto::GetAssemblyChangeEvents ( );
__declspec(implementation_key(5516)) IUnknownPtr _IAssemblyDocumentAuto::GetAssemblyConfigurationChangeEvents ( );
__declspec(implementation_key(5517)) HRESULT _IAssemblyDocumentAuto::PathfinderScrollToSelection ( );
__declspec(implementation_key(5518)) TGFramework::InterDocumentUpdatePtr _IAssemblyDocumentAuto::GetInterDocumentUpdate ( );
__declspec(implementation_key(5519)) TGPart::Sketches3DPtr _IAssemblyDocumentAuto::GetSketches3D ( );
__declspec(implementation_key(5520)) HRESULT _IAssemblyDocumentAuto::MeasureDistance ( IDispatch * Element1, IDispatch * Element2, enum TGPart::MeasureDistanceTypeConstants DistanceType, double * Distance, double * DX, double * DY, double * DZ, SAFEARRAY * * Point1, SAFEARRAY * * Point2 );
__declspec(implementation_key(5521)) HRESULT _IAssemblyDocumentAuto::MeasureAngleEx ( IDispatch * Element1, IDispatch * Element2, IDispatch * Element3, double * Angle1, double * Angle2, double * Angle3, double * Angle4 );
__declspec(implementation_key(5522)) HRESULT _IAssemblyDocumentAuto::InquireElement ( IDispatch * Element, SAFEARRAY * * InPoint, const _variant_t & CoordinateSystem, SAFEARRAY * * Point, double * SurfaceArea, double * Volume, double * Length );
__declspec(implementation_key(5523)) HRESULT _IAssemblyDocumentAuto::GetDrivenDrivingInfo ( IDispatch * Element, VARIANT * DrivenOccurrencesArray, VARIANT * DrivingOccurrencesArray );
__declspec(implementation_key(5524)) _bstr_t _IAssemblyDocumentAuto::GetActiveConfiguration ( );
__declspec(implementation_key(5525)) TGPart::SketchBlocksPtr _IAssemblyDocumentAuto::GetBlocks ( );
__declspec(implementation_key(5526)) IUnknownPtr _IAssemblyDocumentAuto::GetAssemblyPhysicalPropertiesChangeEvents ( );
__declspec(implementation_key(5527)) IDispatchPtr _IAssemblyDocumentAuto::GetTextStyles ( );
__declspec(implementation_key(5528)) IDispatchPtr _IAssemblyDocumentAuto::GetTextCharStyles ( );
__declspec(implementation_key(5529)) HRESULT _IAssemblyDocumentAuto::CreateCloneComponents ( SAFEARRAY * * ComponentsToClone, SAFEARRAY * * ReferenceGeometryFaces, SAFEARRAY * * CloneEnviornment, enum CloneComponentOptions CloneOptions, VARIANT_BOOL bCreateGroup, enum CloneMatchTypeOptions CloneMatchType, long * ErrorStatus );
__declspec(implementation_key(5530)) HRESULT _IAssemblyDocumentAuto::Get3dPrintInfo ( int * iNumberOfTriangles, int * iNumberOfPoints, int * iNumberOfEdges, double * dMeshSurfaceArea, double * dMeshVolume, double * dFileSize, double * dExportToleranceValue, double * dSurfacePlaneAngTol, enum TGPart::Print3DFileType Type );
__declspec(implementation_key(5531)) HRESULT _IAssemblyDocumentAuto::PublishVirtualComponentsBIDM ( const _variant_t & ListOfDocumentNumbers, const _variant_t & ListOfRevisionIDs, const _variant_t & ListOfTitles );
__declspec(implementation_key(5532)) HRESULT _IAssemblyDocumentAuto::LoadUOMPreferences ( VARIANT_BOOL UpdateUomGlobals );
__declspec(implementation_key(5533)) void _IAssemblyDocumentAuto::PutName ( _bstr_t Name );
__declspec(implementation_key(5534)) TGFramework::SteeringWheelPtr _IAssemblyDocumentAuto::GetSteeringWheel ( );
__declspec(implementation_key(5535)) _bstr_t _IAssemblyDocumentAuto::SaveModelAsBiDM ( IDispatch * Occurrence, _bstr_t FilePath, _bstr_t DocumentNumber, _bstr_t Revision, _bstr_t Title );
__declspec(implementation_key(5536)) void _IAssemblyDocumentAuto::PutPerformanceMode ( VARIANT_BOOL pbUsePerformanceMode );
__declspec(implementation_key(5537)) VARIANT_BOOL _IAssemblyDocumentAuto::GetPerformanceMode ( );
__declspec(implementation_key(5538)) VARIANT_BOOL _IAssemblyDocumentAuto::GetHasMissingFiles ( );
__declspec(implementation_key(5539)) HRESULT _IAssemblyDocumentAuto::GetMissingFilesInfo ( VARIANT * missingFilesAndObjects );
__declspec(implementation_key(5540)) HRESULT _IAssemblyDocumentAuto::CopytoPMI ( IDispatch * featureObj, enum TGPart::seCopytoPMIConstants Type );
__declspec(implementation_key(5541)) InternalComponentsPtr _IAssemblyDocumentAuto::GetInternalComponents ( );
__declspec(implementation_key(5542)) EndCapsPtr _IAssemblyDocumentAuto::GetEndCaps ( );
__declspec(implementation_key(5543)) HRESULT _IAssemblyDocumentAuto::DragComponentTranslation ( IDispatch * OccurrenceToDrag, enum DragComponentAnalysisOptionConstants AnalysisOption, enum DragComponentCollisionOptionConstants CollisionOption, double Distance, VARIANT_BOOL ConsiderMovingParts, VARIANT_BOOL ConsiderInactiveParts, VARIANT_BOOL MoveGroundedParts, double DirectionX, double DirectionY, double DirectionZ, double Sensitivity, IDispatch * EdgeOrAxis, VARIANT_BOOL * CollisionFound, SAFEARRAY * * CollidingPart );
__declspec(implementation_key(5544)) HRESULT _IAssemblyDocumentAuto::DragComponentRotation ( IDispatch * OccurrenceToDrag, enum DragComponentAnalysisOptionConstants AnalysisOption, enum DragComponentCollisionOptionConstants CollisionOption, double Angle, VARIANT_BOOL ConsiderMovingParts, VARIANT_BOOL ConsiderInactiveParts, VARIANT_BOOL MoveGroundedParts, double DirectionX, double DirectionY, double DirectionZ, double Sensitivity, IDispatch * EdgeOrAxis, VARIANT_BOOL * CollisionFound, SAFEARRAY * * CollidingPart );
__declspec(implementation_key(5545)) HRESULT _IAssemblyDocumentAuto::BeginCachedSolve ( );
__declspec(implementation_key(5546)) HRESULT _IAssemblyDocumentAuto::EndCachedSolve ( );
__declspec(implementation_key(5547)) HRESULT _IAssemblyDocumentAuto::SetSuppressComponent ( IDispatch * OccurrenceToSuppress, struct SuppressComponent * * SuppressComponent );
__declspec(implementation_key(5548)) HRESULT _IAssemblyDocumentAuto::GetSuppressedComponents ( enum AssemblyComponentTypeConstants ComponentType, long * SuppressedComponentCount, SAFEARRAY * * SuppressedComponents );
__declspec(implementation_key(5549)) HRESULT _IAssemblyDocumentAuto::CheckInterference4 ( long NumElementsSet1, SAFEARRAY * * Set1, enum InterferenceStatusConstants * Status, const _variant_t & ComparisonMethod, const _variant_t & NumElementsSet2, const _variant_t & Set2, const _variant_t & AddInterferenceAsOccurrence, const _variant_t & ReportFilename, const _variant_t & ReportType, VARIANT * NumInterferences, VARIANT * InterferingPartsSet1, VARIANT * InterferingPartsOtherSet, VARIANT * ConfirmedInterference, VARIANT * InterferenceOccurrence, const _variant_t & IgnoreSameNominalDiaConstant, const _variant_t & IgnoreNonThreadVsThreadConstant, VARIANT_BOOL ShowIntersectionVolume );
__declspec(implementation_key(5550)) TGPart::DecalsPtr _IAssemblyDocumentAuto::GetDecals ( );
__declspec(implementation_key(5551)) HRESULT _IAssemblyDocumentAuto::AutoExplode ( enum AutoExplodeSelectionTypeConstants AutoExplodeSelectionType, VARIANT_BOOL BindAllSubassemblies, enum AutoExplodeTechniqueConstants ExplodeTechnique, BSTR * ErrorCode, double SpreadDistance, IDispatch * Subassembly );
__declspec(implementation_key(5552)) AsmCADDirectsPtr _IAssemblyDocumentAuto::GetAsmCADDirects ( );
__declspec(implementation_key(5553)) VARIANT_BOOL _IAssemblyDocumentAuto::GetModelingInAssembly ( );
__declspec(implementation_key(5554)) VARIANT_BOOL _IAssemblyDocumentAuto::GetAssemblyPreview ( );
__declspec(implementation_key(5555)) HRESULT _IAssemblyDocumentAuto::EditAssembly ( );
__declspec(implementation_key(5556)) HRESULT _IAssemblyDocumentAuto::EditAssemblyWithOptions ( enum AssemblyFileOpenPartActivationOptions ePartActivation, enum AssemblyFileOpenSimplificationOptions ePartSimplification, enum AssemblyFileOpenSimplificationOptions eSubassemblySimplification, enum AssemblyFileOpenActivateChangedPartOptions eActivateChangedParts );
__declspec(implementation_key(5557)) TGPart::ReferencePointCloudsPtr _IAssemblyDocumentAuto::GetReferencePointClouds ( );
__declspec(implementation_key(5558)) TGPart::ProfileSetsPtr _IAssemblyDocumentAuto::GetProfileSets ( );
__declspec(implementation_key(5559)) TGPart::ModelPtr _IAssemblyDocumentAuto::GetAssemblyModel ( );
__declspec(implementation_key(5560)) HRESULT _IAssemblyDocumentAuto::PublishInternalComponents ( _bstr_t bstrFileLocation, _bstr_t bstrPartTemplatePath, _bstr_t bstrSheetmetalTemplatePath, _bstr_t bstrAsmTemplatePath, _bstr_t bstrMaterial );
__declspec(implementation_key(5561)) HRESULT _IAssemblyDocumentAuto::ArrangeDimensionsInSelectSet ( double dStackPitchMultiplier, VARIANT_BOOL bAssociative );
__declspec(implementation_key(5562)) IDispatchPtr _IGroundRelation3dAuto::GetApplication ( );
__declspec(implementation_key(5563)) IDispatchPtr _IGroundRelation3dAuto::GetParent ( );
__declspec(implementation_key(5564)) HRESULT _IGroundRelation3dAuto::Delete ( );
__declspec(implementation_key(5565)) long _IGroundRelation3dAuto::GetIndex ( );
__declspec(implementation_key(5566)) enum TGFramework::ObjectType _IGroundRelation3dAuto::GetType ( );
__declspec(implementation_key(5567)) HRESULT _IGroundRelation3dAuto::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(5568)) enum Relation3dStatusConstants _IGroundRelation3dAuto::GetStatus ( );
__declspec(implementation_key(5569)) enum Relation3dDetailedStatusConstants _IGroundRelation3dAuto::GetDetailedStatus ( );
__declspec(implementation_key(5570)) PartPtr _IGroundRelation3dAuto::GetPart ( );
__declspec(implementation_key(5571)) IDispatchPtr _IGroundRelation3dAuto::GetAttributeSets ( );
__declspec(implementation_key(5572)) VARIANT_BOOL _IGroundRelation3dAuto::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(5573)) OccurrencePtr _IGroundRelation3dAuto::GetOccurrence ( );
__declspec(implementation_key(5574)) VARIANT_BOOL _IGroundRelation3dAuto::GetSuppress ( );
__declspec(implementation_key(5575)) void _IGroundRelation3dAuto::PutSuppress ( VARIANT_BOOL bSuppress );
__declspec(implementation_key(5576)) TGPart::SuppressVariablePtr _IGroundRelation3dAuto::GetSuppressionVariable ( );
__declspec(implementation_key(5577)) TGPart::SuppressVariablePtr _IGroundRelation3dAuto::AddSuppressionVariable ( );
__declspec(implementation_key(5578)) HRESULT _IGroundRelation3dAuto::DeleteSuppressionVariable ( );
__declspec(implementation_key(5579)) VARIANT_BOOL _IGroundRelation3dAuto::HasSuppressionVariable ( );
__declspec(implementation_key(5580)) IDispatchPtr GroundRelation3d::GetApplication ( );
__declspec(implementation_key(5581)) IDispatchPtr GroundRelation3d::GetParent ( );
__declspec(implementation_key(5582)) HRESULT GroundRelation3d::Delete ( );
__declspec(implementation_key(5583)) long GroundRelation3d::GetIndex ( );
__declspec(implementation_key(5584)) enum TGFramework::ObjectType GroundRelation3d::GetType ( );
__declspec(implementation_key(5585)) HRESULT GroundRelation3d::Select ( VARIANT_BOOL Replace );
__declspec(implementation_key(5586)) enum Relation3dStatusConstants GroundRelation3d::GetStatus ( );
__declspec(implementation_key(5587)) enum Relation3dDetailedStatusConstants GroundRelation3d::GetDetailedStatus ( );
__declspec(implementation_key(5588)) PartPtr GroundRelation3d::GetPart ( );
__declspec(implementation_key(5589)) IDispatchPtr GroundRelation3d::GetAttributeSets ( );
__declspec(implementation_key(5590)) VARIANT_BOOL GroundRelation3d::GetIsAttributeSetPresent ( _bstr_t Name );
__declspec(implementation_key(5591)) OccurrencePtr GroundRelation3d::GetOccurrence ( );
__declspec(implementation_key(5592)) VARIANT_BOOL GroundRelation3d::GetSuppress ( );
__declspec(implementation_key(5593)) void GroundRelation3d::PutSuppress ( VARIANT_BOOL _arg1 );
__declspec(implementation_key(5594)) TGPart::SuppressVariablePtr GroundRelation3d::GetSuppressionVariable ( );
__declspec(implementation_key(5595)) TGPart::SuppressVariablePtr GroundRelation3d::AddSuppressionVariable ( );
__declspec(implementation_key(5596)) HRESULT GroundRelation3d::DeleteSuppressionVariable ( );
__declspec(implementation_key(5597)) VARIANT_BOOL GroundRelation3d::HasSuppressionVariable ( );
#pragma stop_map_region

} // namespace TGAssembly

#pragma pack(pop)
